es]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; IE
@@:jsno.dll    = 1,,,,,,,2,0,0     ; Scripting SysDir
@*:@@:msscrno.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scono.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scrrnno.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:vbsno.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:wshno.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir

; Windows Media Services
@@:@3:wmerrNOR.dll    = 1,,,,,,,2,0,0     ; Error strings
@@:@3:wmprfNOR.prx    = 1,,,,,,,1,0,0     ; Profiles

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil1044.dll = 1,,,,,,,156,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,,3,3

#elif LANGUAGE_ID == 0x415
// Polish specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both
[SourceDisksFiles]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; IE
@@:jspl.dll    = 1,,,,,,,2,0,0     ; Scripting SysDir
@*:@@:msscrpl.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scopl.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scrrnpl.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:vbspl.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:wshpl.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir

; Windows Media Services
@@:@3:wmerrPLK.dll    = 1,,,,,,,2,0,0     ; Error strings
@@:@3:wmprfPLK.prx    = 1,,,,,,,1,0,0     ; Profiles

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil1045.dll = 1,,,,,,,158,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,,3,3

#elif LANGUAGE_ID == 0x416
// Portuguese Brazilian specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both
[SourceDisksFiles]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; IE
@@:jsptb.dll    = 1,,,,,,,2,0,0     ; Scripting SysDir
@*:@@:msscrptb.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scoptb.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scrrnptb.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:vbsptb.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:wshptb.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir

; Windows Media Services
@@:@3:wmerrPTB.dll    = 1,,,,,,,2,0,0     ; Error strings
@@:@3:wmprfPTB.prx    = 1,,,,,,,1,0,0     ; Profiles

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil1046.dll = 1,,,,,,,160,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,,3,3

#elif LANGUAGE_ID == 0x816
// Portuguese Iberian specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both
[SourceDisksFiles]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; IE
@@:jsptg.dll    = 1,,,,,,,2,0,0     ; Scripting SysDir
@*:@@:msscrptg.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scoptg.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scrrnptg.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:vbsptg.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:wshptg.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir

; Windows Media Services
@@:@3:wmerrPTG.dll    = 1,,,,,,,2,0,0     ; Error strings
@@:@3:wmprfPTG.prx    = 1,,,,,,,1,0,0     ; Profiles

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil2070.dll = 1,,,,,,,176,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,,3,3

#elif LANGUAGE_ID == 0x419
// Russian specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both
[SourceDisksFiles]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; IE
@@:jsru.dll    = 1,,,,,,,2,0,0     ; Scripting SysDir
@*:@@:msscrru.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scoru.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scrrnru.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:vbsru.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:wshru.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir

; Windows Media Services
@@:@3:wmerrRUS.dll    = 1,,,,,,,2,0,0     ; Error strings
@@:@3:wmprfRUS.prx    = 1,,,,,,,1,0,0     ; Profiles

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil1049.dll = 1,,,,,,,164,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,,3,3

#elif LANGUAGE_ID == 0x41b
// Slovak specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both
[SourceDisksFiles]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; IE
@@:jssk.dll    = 1,,,,,,,2,0,0     ; Scripting SysDir
@*:@@:msscrsk.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scosk.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scrrnsk.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:vbssk.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:wshsk.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil1051.dll = 1,,,,,,,168,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,,3,3

#elif LANGUAGE_ID == 0x424
// Slovenian specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both
[SourceDisksFiles]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; IE
@@:jssl.dll    = 1,,,,,,,2,0,0     ; Scripting SysDir
@*:@@:msscrsl.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scosl.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scrrnsl.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:vbssl.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:wshsl.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil1060.dll = 1,,,,,,,174,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,,3,3

#elif LANGUAGE_ID == 0xc0a
// Spanish specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both
[SourceDisksFiles]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; IE
@@:jses.dll    = 1,,,,,,,2,0,0     ; Scripting SysDir
@*:@@:msscres.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scoes.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scrrnes.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:vbses.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:wshes.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir

;MSN Explorer files
@w:@i:msn11.ini   = 1,,,,,,,,3,3    ; MSN Explorer (LatAm market file)
@w:@i:msn11.mar   = 1,,,,,,,,3,3    ; MSN Explorer (LatAm market file)
@w:@i:msn149.ini   = 1,,,,,,,,3,3   ; MSN Explorer (Mexico market file)
@w:@i:msn149.mar   = 1,,,,,,,,3,3   ; MSN Explorer (Mexico market file)
@w:@i:msn64.ini   = 1,,,,,,,,3,3    ; MSN Explorer (Spain market file)
@w:@i:msn64.mar   = 1,,,,,,,,3,3    ; MSN Explorer (Spain market file)

; Windows Media Services
@@:@3:wmerrESP.dll    = 1,,,,,,,2,0,0     ; Error strings
@@:@3:wmprfESP.prx    = 1,,,,,,,1,0,0     ; Profiles

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil3082.dll = 1,,,,,,,178,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,,3,3

#elif LANGUAGE_ID == 0x41d
// Swedish specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both
[SourceDisksFiles]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; IE
@@:jssv.dll    = 1,,,,,,,2,0,0     ; Scripting SysDir
@*:@@:msscrsv.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scosv.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scrrnsv.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:vbssv.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:wshsv.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir

; Windows Media Services
@@:@3:wmerrSVE.dll    = 1,,,,,,,2,0,0     ; Error strings
@@:@3:wmprfSVE.prx    = 1,,,,,,,1,0,0     ; Profiles

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil1053.dll = 1,,,,,,,170,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,,3,3

#elif LANGUAGE_ID == 0x41e
// Thai specific sections
[SourceDisksFiles]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil1054.dll = 1,,,,,,,107,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,,3,3

#elif LANGUAGE_ID == 0x41f
// Turkish specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both
[SourceDisksFiles]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; IE
@@:jstr.dll    = 1,,,,,,,2,0,0     ; Scripting SysDir
@*:@@:msscrtr.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scotr.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:scrrntr.dll = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:vbstr.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir
@@:wshtr.dll   = 1,,,,,,,2,0,0     ; Scripting SysDir

; Windows Media Services
@@:@3:wmerrTRK.dll    = 1,,,,,,,2,0,0     ; Error strings
@@:@3:wmprfTRK.prx    = 1,,,,,,,1,0,0     ; Profiles

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil1055.dll = 1,,,,,,,172,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,,3,3

#elif LANGUAGE_ID == 0xc04
// Chinese (Hong Kong SAR, PRC) specific sections
[SourceDisksFiles]
; heb langpack
@@:lvnmbd.ttf      = 1,,,,,,,,3,3,,1,22
@@:davidbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:ahronbd.ttf     = 1,,,,,,,,3,3,,1,22
@@:davidtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamfx.ttf     = 1,,,,,,,,3,3,,1,22
@@:mriamtr.ttf     = 1,,,,,,,,3,3,,1,22
@@:rod.ttf         = 1,,,,,,,,3,3,,1,22
@@:85f1255.fon     = 1,,,,,,,22,0
@@:85s1255.fon     = 1,,,,,,,22,0
@@:lvnm.ttf        = 1,,,,,,,,3,3,,1,22
@@:david.ttf       = 1,,,,,,,,3,3,,1,22
@@:frank.ttf       = 1,,,,,,,,3,3,,1,22
@@:mriam.ttf       = 1,,,,,,,,3,3,,1,22
@@:nrkis.ttf       = 1,,,,,,,,3,3,,1,22
@@:rodtr.ttf       = 1,,,,,,,,3,3,,1,22
@@:kbdheb.dll      = 1,,,,,,_5,2,1
@@:vgaf1255.fon    = 1,,,,,,,22,0
@@:smae1255.fon    = 1,,,,,,,22,0
@@:smaf1255.fon    = 1,,,,,,,22,0
@@:coue1255.fon    = 1,,,,,,,22,0
@@:couf1255.fon    = 1,,,,,,,22,0
@@:sere1255.fon    = 1,,,,,,,22,0
@@:serf1255.fon    = 1,,,,,,,22,0
@@:ssee1255.fon    = 1,,,,,,,22,0
@@:ssef1255.fon    = 1,,,,,,,22,0
@@:vgas1255.fon    = 1,,,,,,,22,0
@@:mriamc.ttf      = 1,,,,,,,,3,3,,1,22

; ara langpack
@@:andlso.ttf      = 1,,,,,,,,3,3,,1,22
@@:tradbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:artrbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpbdo.ttf     = 1,,,,,,,,3,3,,1,22
@@:simpfxo.ttf     = 1,,,,,,,,3,3,,1,22
@@:85f1256.fon     = 1,,,,,,,22,0
@@:85s1256.fon     = 1,,,,,,,22,0
@@:kbda1.dll       = 1,,,,,,_5,2,1
@@:kbda2.dll       = 1,,,,,,_5,2,1
@@:kbda3.dll       = 1,,,,,,_5,2,1
@@:trado.ttf       = 1,,,,,,,,3,3,,1,22
@@:artro.ttf       = 1,,,,,,,,3,3,,1,22
@@:simpo.ttf       = 1,,,,,,,,3,3,,1,22
@@:vgaf1256.fon    = 1,,,,,,,22,0
@@:smae1256.fon    = 1,,,,,,,22,0
@@:smaf1256.fon    = 1,,,,,,,22,0
@@:coue1256.fon    = 1,,,,,,,22,0
@@:couf1256.fon    = 1,,,,,,,22,0
@@:sere1256.fon    = 1,,,,,,,22,0
@@:serf1256.fon    = 1,,,,,,,22,0
@@:ssee1256.fon    = 1,,,,,,,22,0
@@:ssef1256.fon    = 1,,,,,,,22,0
@@:vgas1256.fon    = 1,,,,,,,22,0

; PCHealth Product Feedback (fault reporting)
@@:@3:dwil3076.dll = 1,,,,,,,109,0,0,dwintl.dll

; Printers
@@:eplrcz00.dll = 1,,,,,,,11,3,3

#endif

// This section is for FR,IT,ES,NL,SV,BR,NO,DA,FI,RU,HU,PL,CS,PT,TR,EL,GER
// BUG 434003
#if LANGUAGE_ID == 0x40C || LANGUAGE_ID == 0x410 || LANGUAGE_ID == 0xC0A || LANGUAGE_ID == 0x413 || LANGUAGE_ID == 0x41D || LANGUAGE_ID == 0x416 || LANGUAGE_ID == 0x414 || LANGUAGE_ID == 0x406 || LANGUAGE_ID == 0x40b || LANGUAGE_ID == 0x419 || LANGUAGE_ID == 0x40e || LANGUAGE_ID == 0x415 || LANGUAGE_ID == 0x405 || LANGUAGE_ID == 0x816 || LANGUAGE_ID == 0x41F || LANGUAGE_ID == 0x408 || LANGUAGE_ID == 0x407
    
[SourceDisksFiles]
@@:bootfont.bin = 1,,,,,,_x,1,3

#endif

#if LANGUAGE_ID == 0x411
; copy file during textmode all the time.
[SourceDisksFiles]
@@:@i:hwxjpn.dll   = 1,,,,,,,236,0,0,,1,236
#else
[SourceDisksFiles]
; don't copy file, have it exist in the i386
@@:@i:hwxjpn.dll   = 1,,,,,,,,3,3
#endif

#if LANGUAGE_ID == 0x404
[SourceDisksFiles]
@@:@i:hwxcht.dll   = 1,,,,,,,210,0,0
#else
[SourceDisksFiles]
@@:@i:hwxcht.dll   = 1,,,,,,,,3,3
#endif

// This section is for KOR
// BUG 499776: remove duplicated HWXKOR.DLL file from cd.
#if LANGUAGE_ID == 0x412
[SourceDisksFiles]
@@:@i:hwxkor.dll    = 1,,,,,,,214,0,0
#else
[SourceDisksFiles]
; don't copy file, have it exist in the i386
@@:@i:hwxkor.dll    = 1,,,,,,,,3,3
#endif

[SourceDisksFiles]
@@:c_10004.nls  = 1,,,,,,,,3,3
@@:c_10005.nls  = 1,,,,,,,,3,3
@@:c_720.nls    = 1,,,,,,,2,1,3
@@:c_862.nls    = 1,,,,,,,,3,3
@@:vga737.fon   = 1,,,,,,,22,0
@@:vga775.fon   = 1,,,,,,,22,0
@@:vga852.fon   = 1,,,,,,,22,0
@@:vga855.fon   = 1,,,,,,,22,0
@@:vga857.fon   = 1,,,,,,,22,0
@@:vga866.fon   = 1,,,,,,,22,0
@@:vga869.fon   = 1,,,,,,,22,0
@@:vgaf1257.fon = 1,,,,,,,22,0
// String section below for localizers

[Strings]
MyPicturesScreenSaver = "My Pictures Screen Saver.scr"
ViewChannelsSCF = "View Channels.scf"
ShowDesktopSCF = "Show Desktop.scf"
mqtgsvccfg= "mqtgsvc.exe.cfg"
srgb    = "sRGB Color Space Profile.icm"
XPBalln = "Windows XP Balloon.wav"
XPBatCrt = "Windows XP Battery Critical.wav"
XPBatLow = "Windows XP Battery Low.wav"
XPCrtStp = "Windows XP Critical Stop.wav"
XPDef = "Windows XP Default.wav"
XPDing = "Windows XP Ding.wav"
XPError = "Windows XP Error.wav"
XPExcl = "Windows XP Exclamation.wav"
XPHdFail = "Windows XP Hardware Fail.wav"
XPHdInst = "Windows XP Hardware Insert.wav"
XPHdRem = "Windows XP Hardware Remove.wav"
XPLogoff = "Windows XP Logoff Sound.wav"
XPLogon = "Windows XP Logon Sound.wav"
XPMenu = "Windows XP Menu Command.wav"
XPMin = "Windows XP Minimize.wav"
XPNotify = "Windows XP Notify.wav"
XPPrint = "Windows XP Print complete.wav"
XPRecycl = "Windows XP Recycle.wav"
XPRestor = "Windows XP Restore.wav"
XPRingin = "Windows XP Ringin.wav"
XPRngout = "Windows XP Ringout.wav"
XPShutdn = "Windows XP Shutdown.wav"
XPStart = "Windows XP Start.wav"
XPStartU = "Windows XP Startup.wav"


;
;  When localizing for one of the FE languages, set the
;  appropriate xxxdir string to "", i.e., for Japanese
;  jpndir = "".  Then make sure that the Japanese files
;  in the langpack\jpn directory in the US product are moved into the
;  \i386 and/or \alpha directory for the localized product.
;  Otherwise winnt32 won't copy them.  No other changes will
;  be required in the layout.inx file.
;
jpndir = "\langpack\jpn"
kordir = "\langpack\kor"
chtdir = "\langpack\cht"
chsdir = "\langpack\chs"


MUI_PRIMARY_LANG_ID_DIR = "system32\mui\0009"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\msinfo32.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
MSInfo32_DESC     = "System Information"
MSInfo32_INFOTIP  = "Displays current system information."
SystemTools_GROUP = "Accessories\System Tools"
MSINFOPATHL       = "Microsoft Shared\MSInfo"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\msdv.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]

;----------------
; Non-Localizable
;----------------

; note: only register value is case sensitive, key is not.
ProxyVCap.CLSID="{17CCA71B-ECD7-11D0-B908-00A0C9223196}"
MediaCategories="System\CurrentControlSet\Control\MediaCategories"
GUID.DVVidOutput="{5b21c540-7aee-11d1-883b-006097f05c70}"
GUID.DVAVOutput="{5b21c541-7aee-11d1-883b-006097f05c70}"
GUID.DVAVInput="{5b21c543-7aee-11d1-883b-006097f05c70}"

KSCATEGORY_VIDEO=     "{6994AD05-93EF-11D0-A3CC-00A0C9223196}"
KSCATEGORY_CAPTURE=   "{65E8773D-8F56-11D0-A3B9-00A0C9223196}"
KSCATEGORY_RENDER=    "{65E8773E-8F56-11D0-A3B9-00A0C9223196}"
KSCATEGORY_RENDER_EXT="{cc7bfb41-f175-11d1-a392-00e0291f3959}"
Pin.DVVidOutput="DV Vid Out"
Pin.DVAVOutput="DV A/V Out"
Pin.DVAVInput="DV A/V In"

SERVICE_KERNEL_DRIVER=1
; PnP should use demand start
SERVICE_DEMAND_START=3
SERVICE_ERROR_NORMAL=1

;
; Filter friendly name
;
; Do not localize:
DVCR.Capture="Microsoft DV Camera and VCR"   ; FriendlyNames is generic, but the Description is device specific.


;----------------
; Localizable
;----------------

Msft="Microsoft"
Generic="Generic"
Canon="Canon"
Hitachi="Hitachi"
JVC="JVC"
Panasonic="Panasonic"
Philips="Philips"
Samsung="Samsung"
Sharp="Sharp"
Sony="Sony"


; Localize the following text:
DVCR.Generic.Capture="AVC Compliant DV Device"
DVCR.Canon.Capture="Canon DV Device"
DVCR.Hitachi.Capture="Hitachi DV Device"
DVCR.MEI.Capture="Panasonic DV Device"
DVCR.JVC.Capture="JVC DV Device"
DVCR.Philips.Capture="Philips DV Device"
DVCR.Samsung.Capture="Samsung DV Device"
DVCR.Sharp.Capture="Sharp DV Device"
DVCR.Sony.Capture="Sony DV Device"

;
; Device description
;

; AVC\Generic.DeviceDesc="AVC Compliant AV Device"
AVC\Generic&TYP_4.DeviceDesc="AVC Compliant DV Tape Recorder/Player"
AVC\Generic&CAMCORDER.DeviceDesc="AVC Compliant DV Camcorder"

AVC\VEN_85.DeviceDesc="Canon AV Device"
AVC\VEN_85&TYP_4.DeviceDesc="Canon DV Tape Recorder/Player"
AVC\VEN_85&CAMCORDER.DeviceDesc="Canon DV Camcorder"

AVC\VEN_87.DeviceDesc="Hitachi AV Device"
AVC\VEN_87&TYP_4.DeviceDesc="Hitachi DV Tape Recorder/Player"
AVC\VEN_87&CAMCORDER.DeviceDesc="Hitachi DV Camcorder"

AVC\VEN_8088.DeviceDesc="JVC AV Device"
AVC\VEN_8088&TYP_4.DeviceDesc="JVC DV Tape Recorder/Player"
AVC\VEN_8088&CAMCORDER.DeviceDesc="JVC DV Camcorder"

AVC\VEN_8045.DeviceDesc="Panasonic AV Device"
AVC\VEN_8045&TYP_4.DeviceDesc="Panasonic DV Tape Recorder/Player"
AVC\VEN_8045&CAMCORDER.DeviceDesc="Panasonic DV Camcorder"
; Subunits that load NULL driver
AVC\Panasonic&MOD_0&TYP_1c.DeviceDesc="Panasonic Vendor Unique Subunit"
AVC\VEN_8045&MOD_0&TYP_1c.DeviceDesc="Panasonic Vendor Unique Subunit"
AVC\Panasonic&MOD_0&TYP_5.DeviceDesc="Panasonic Vendor Unique Subunit"
AVC\VEN_8045&MOD_0&TYP_5.DeviceDesc="Panasonic Vendor Unique Subunit"

AVC\Philips&DV_convertor____&CAMCORDER.DeviceDesc="Philips DV Converter or Camcorder"
AVC\Philips&CAMCORDER.DeviceDesc="Philips Camcorder"

AVC\VEN_F0.DeviceDesc="Samsung AV Device"
AVC\VEN_F0&TYP_4.DeviceDesc="Samsung DV Tape Recorder/Player"
AVC\VEN_F0&CAMCORDER.DeviceDesc="Samsung DV Camcorder"

AVC\VEN_8001F.DeviceDesc="Sharp AV Device"
AVC\VEN_8001F&CAMCORDER.DeviceDesc="Sharp DV Camcorder"

AVC\VEN_80046.DeviceDesc="Sony AV Device"
AVC\VEN_80046&TYP_4.DeviceDesc="Sony DV Tape Recorder/Player"
AVC\VEN_80046&CAMCORDER.DeviceDesc="Sony DV Camcorder"

;
; PlugIns descrioption
;
PlugIn_IAMExtDevice="WDM Streaming IAMExtDevice Interface Handler"
PlugIn_IAMExtTransport="WDM Streaming IAMExtTransport Interface Handler"
PlugIn_IAMTimecodeReader="WDM Streaming IAMTimecodeReader Interface Handler"
PropPage_DVcrControl="DVcrControl Property Page"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\msmscsi.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
Msft = "Microsoft"
Mfg = "Microtek"

scsiscan.SvcDesc = "SCSI Scanner Driver"

Button = "Go Button Press"
ADP    = "Auto Detect Paper"

ScanWizard32="Microtek Scan Module"

;- Friendly Name ----------------------------------------------------------
; E6
SCSI\MICROTEKSCANMAKER_E6____1.DeviceDesc= "ScanMaker E6"
SCSI\________SCANNER_600_____1.DeviceDesc= "ScanMaker E6"
SCSI\________SCANNER_600_____2.DeviceDesc= "ScanMaker E6"

; X6
SCSI\________SCANMAKER_X6____0.DeviceDesc = "ScanMaker X6"
SCSI\________SCANNER_636A4___0.DeviceDesc = "ScanMaker X6"
SCSI\________SCANNER_636A4___1.DeviceDesc = "ScanMaker X6"

; X6EL
SCSI\________SCANNER_636EL___0.DeviceDesc= "ScanMaker X6EL"
SCSI\________SCANNER_636EL___1.DeviceDesc= "ScanMaker X6EL"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\msmail.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...

#elif LANGUAGE_ID == 0x804
//CHS specific sections
[IMAILCopyFilesSys]
jpn2022.trn,,,1
shiftjis.trn,,,1
euc.trn,,,1
kor2022.trn,,,1
koreuc.trn,,,1
chsxgb.trn,,,1
chtbig5.trn,,,1

[MAPICopyFilesSys]
gapi.dll,,,1

#elif LANGUAGE_ID == 0x404
//CHT specific sections
[IMAILCopyFilesSys]
jpn2022.trn,,,1
shiftjis.trn,,,1
euc.trn,,,1
kor2022.trn,,,1
koreuc.trn,,,1
chsxgb.trn,,,1
chtbig5.trn,,,1

[MAPICopyFilesSys]
gapi.dll,,,1

#elif LANGUAGE_ID == 0x411
//JPN specific sections
[IMAILCopyFilesSys]
jpn2022.trn,,,1
shiftjis.trn,,,1
euc.trn,,,1
kor2022.trn,,,1
koreuc.trn,,,1
chsxgb.trn,,,1
chtbig5.trn,,,1

[MAPICopyFilesSys]
gapi.dll,,,1

#elif LANGUAGE_ID == 0x412
//KOR specific sections
[IMAILCopyFilesSys]
jpn2022.trn,,,1
shiftjis.trn,,,1
euc.trn,,,1
kor2022.trn,,,1
koreuc.trn,,,1
chsxgb.trn,,,1
chtbig5.trn,,,1

[MAPICopyFilesSys]
gapi.dll,,,1

#endif

// String section below for localizers
; User-visible strings
[Strings]
PROGDIR                 = "Windows NT\Windows Messaging"
Apps_DESC               = "Accessories"
EMAILTop_DESC           = "Windows Messaging"
EMAILTop_TIP            = "Electronic mail and messaging utilities"
EXCHANGE_DOC            = "Mail Message"
EmailRunOnce            = "Windows Messaging"
Exchange_Desc           = "Inbox"
HFM_MSFS                = "Microsoft Mail"
HFM_MAPI                = "MAPI 1.0"
HFM_PAB                 = "Personal Address Book"
HFM_PST                 = "Personal Folders"
MAPI_Desc               = "Windows Messaging"
MAPI_Tip                = "Integrated Mail, MAPI, and other messaging applications"
MMFMig_Desc             = "Mail File Converter"
MSFS_Desc               = "Microsoft Mail"
MSFS_Tip                = "Allows you to access Microsoft Mail Post Offices"
MSFSAB_Desc             = "Microsoft Mail Address Book"
MSFSTS_Desc             = "Microsoft Mail Transport"
MSFSS_Desc              = "Microsoft Mail Shared Folders"
MSLMS_Desc              = "Personal Folders"
MSPAB_Desc              = "Personal Address Book"
MlviewExplore_Desc      = "Explore"
MlviewFLDR_Desc         = "Windows Messaging Viewer Folder"
MlviewLOADER_Desc       = "WMSUI Loader"
MlviewMSGSTO_Desc       = "Windows Messaging Viewer Message Store"
MlviewOpen_Desc         = "Open"
MlviewROOT_Desc         = "Windows Messaging"
MlviewROOT_ShortDesc    = "Ms-Exchg"
Mlview_Desc             = "Windows Messaging Viewer"
OpenMailbox             = "Open Mailbox"
Program_Files           = "Program Files"
SYSTOOLS_DESC           = "Accessories\System Tools"
ScanPst_Desc            = "Inbox Repair Tool"
SendNewMessage          = "Send New Message"
SendToMailNew_DESC      = "Mail Recipient"
SendToMail_DESC         = "Windows Messaging"
SendTo_DESC             = "SendTo"
VERB_LABEL              = "Re&name"
VERB_OPEN               = "&Open"
VERB_PRINT              = "P&rint"
VERB_QUICKVIEW          = "&Quick View"
VERB_SAVE               = "&Save As"
V_MailBeep              = "New Mail Notification"
WizRemoveMsg            = "This will remove the icon from your desktop. Use the Add/Remove Programs control panel to install Windows Messaging on your computer."
desktop_DESC            = "Desktop"
IMAIL_Desc              = "Internet Mail"
IMAIL_Tip               = "Allows you to access Internet Mail"
InternetABTemp          = "Internet Address Template"
InternetServices        = "Internet Services"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\msmouse.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...

#elif LANGUAGE_ID == 0x804
//CHS specific sections

#elif LANGUAGE_ID == 0x404
//CHT specific sections

#elif LANGUAGE_ID == 0x411
//JPN specific sections
@n:[Manufacturer]
@n:%NECMfg% = NECMfg               ; NEC
@n:
@n:[NECMfg]
@n:%*nEC1f00.DeviceDesc%      = Inp_Inst,*nEC1F00                 ; NEC PC-9800 BUS MOUSE
@n:%UNKNOWN_MOUSE.DeviceDesc% = UNKNOWN_MOUSE_Inst,UNKNOWN_MOUSE  ; unknown mouse (hidden)
@n:

#elif LANGUAGE_ID == 0x412
//KOR specific sections

#endif

// String section below for localizers
[Strings]

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
i8042prt.SvcDesc = "i8042 Keyboard and PS/2 Mouse Port Driver"

#elif LANGUAGE_ID == 0x804
i8042prt.SvcDesc = "i8042 Keyboard and PS/2 Mouse Port Driver"

#elif LANGUAGE_ID == 0x404
i8042prt.SvcDesc = "i8042 Keyboard and PS/2 Mouse Port Driver"

#elif LANGUAGE_ID == 0x411
@@!n:i8042prt.SvcDesc = "i8042 Keyboard and PS/2 Mouse Port Driver"
@n:NECMfg  = "NEC"
@n:*nEC1f00.DeviceDesc      = "PC-9800 ذ ޽ ϳ"
@n:i8042prt.SvcDesc = "NEC PC-9800 ް ײ"

#elif LANGUAGE_ID == 0x412
i8042prt.SvcDesc = "i8042 Keyboard and PS/2 Mouse Port Driver"
#endif


Provider = "Microsoft"
MouseClassName = "Mice and other pointing devices"
LocationOverride = "plugged into PS/2 mouse port"

; Mfg names

StdMfg  ="(Standard mouse types)"
MSMfg   ="Microsoft"
LogiMfg ="Logitech"
IbmMfg ="IBM Corporation"
CypressMfg ="Cypress"
ELOMfg  ="ELO TouchSystems"
ChiconyMfg ="Chicony"
NMBMfg  = "NMB"
STSLMfg  = "STSL"
SUPERGATEMfg  = "SUPGERGATE"
BTCMfg  = "BTC"
FOCUSMfg = "Focus"
JINGMOLDMfg = "Jing Mold"
MAXISWITCHMfg = "Maxi Switch, Inc."
MONTEREYMfg = "Monterey"
ORTEKMfg = "Ortek"
KEYTRONICMfg = "Key Tronic"
GeniusMfg = "Genius"
ItacMfg = "ITAC Systems"
SamsungMfg = "Samsung"
ForwardMfg = "Forward"
SUHMfg = "SUH DART"
PhilipsMfg = "Philips"
AnchorMfg="Anchor"
SOLIDYEARMfg="Solid Year"
NEC="NEC"
FUJITSUMfg="Fujitsu"
SEJINMfg="Sejin"
DexinMfg="Dexin"
AcerMfg="Acer"
SilitekMfg="Silitek"
QtronixMfg="Qtronix"

; Device Names

*pnp0f01.DeviceDesc      = "Microsoft Serial Mouse"
*pnp0f03.DeviceDesc      = "Microsoft PS/2 Mouse"
*pnp0f09.DeviceDesc      = "Microsoft Serial BallPoint"
*pnp0f0a.DeviceDesc      = "Microsoft Serial IntelliMouse"
*pnp0f0b.DeviceDesc      = "Microsoft PS/2 Mouse"
*pnp0f0c.DeviceDesc      = "Standard Serial Mouse"
*pnp0f0e.DeviceDesc      = "Standard PS/2 Port Mouse"
*AUI0200.DeviceDesc      = "Standard PS/2 Port Mouse"
*pnp0f0f.DeviceDesc      = "Microsoft Serial BallPoint"
*pnp0f13.DeviceDesc      = "PS/2 Compatible Mouse"
*pnp0f1e.DeviceDesc      = "Microsoft Serial EasyBall"
*SERENUM\MSH0001.DeviceDesc = "Microsoft Serial IntelliMouse"
*SERENUM\MSH0004.DeviceDesc = "Microsoft Serial IntelliMouse Trackball"
SERIAL_MOUSE.DeviceDesc      = "Standard Serial Mouse"

*pnp0f12.DeviceDesc      = "Logitech PS/2 Port Mouse"

*pnp0f08.DeviceDesc      = "Logitech Serial Mouse"
SERENUM\LGI8001.DeviceDesc= "Logitech First/Pilot Mouse Serial (M34,M35,C43)"
SERENUM\LGI8002.DeviceDesc= "Other Logitech Mouse Serial"
SERENUM\LGI8003.DeviceDesc= "Logitech TrackMan Portable Serial"
SERENUM\LGI8005.DeviceDesc= "Logitech MouseMan Serial"
SERENUM\LGI8006.DeviceDesc= "Logitech MouseMan Serial"
SERENUM\LGI8007.DeviceDesc= "Other Logitech Mouse Serial"
SERENUM\LGI8008.DeviceDesc= "Logitech TrackMan Portable Serial"
SERENUM\LGI8009.DeviceDesc= "Other Logitech Mouse Serial"
SERENUM\LGI800A.DeviceDesc= "Logitech TrackMan Vista Serial"
SERENUM\LGI800B.DeviceDesc= "Logitech MouseMan Serial"
SERENUM\LGI800C.DeviceDesc= "Logitech MouseMan Serial"
SERENUM\LGI8011.DeviceDesc= "Other Logitech Mouse Serial"
SERENUM\LGI8012.DeviceDesc= "Logitech TrackMan Live! Serial"
SERENUM\LGI8013.DeviceDesc= "Logitech Cordless Mouse+ Serial"
SERENUM\LGI8032.DeviceDesc= "Logitech Cordless Desktop Serial"
SERENUM\LGI8033.DeviceDesc= "Logitech Cordless MouseMan Pro Serial"
SERENUM\LGI8048.DeviceDesc= "Logitech TrackMan Marble Serial"
SERENUM\LGI8049.DeviceDesc= "Logitech TrackMan Marble FX Serial"
SERENUM\LGI804B.DeviceDesc= "Logitech TrackMan Marble+ Serial"
SERENUM\LGI8050.DeviceDesc= "Logitech MouseMan+ Serial"
SERENUM\LGI8051.DeviceDesc= "Logitech First/Pilot Mouse+ Serial (C48)"

*IBM3780.DeviceDesc="IBM PS/2 TrackPoint"

; Description of device also controlled by a shared driver

PS2_Inst.SharedDriverMsg = "keyboard port"

; Service Names

busmouse.SvcDesc = "Bus Adapter Mouse Driver"
sermouse.SvcDesc = "Serial Mouse Driver"
mouclass.SvcDesc = "Mouse Class Driver"
MOUHID.SvcDesc = "Mouse HID Driver"
TwoTrack.SvcDesc = "IBM PS/2 TrackPoint Filter Driver"

; HID device IDs
HID\VID_045E&PID_0009.DeviceDesc="Microsoft USB IntelliMouse"
HID\VID_045E&PID_001E.DeviceDesc="Microsoft USB IntelliMouse Explorer"
HID\VID_045E&PID_0023.DeviceDesc="Microsoft USB Trackball Optical"
HID\VID_045E&PID_0024.DeviceDesc="Microsoft USB Trackball Explorer"
HID\VID_045E&PID_0025.DeviceDesc="Microsoft USB IntelliMouse with IntelliEye"
HID\VID_045E&PID_0029.DeviceDesc="Microsoft USB IntelliMouse Web"
HID\VID_045E&PID_0039.DeviceDesc="Microsoft USB IntelliMouse Optical"
HID\VID_045E&PID_0040.DeviceDesc="Microsoft USB Wheel Mouse Optical"
HID\VID_045E&PID_0047.DeviceDesc="Microsoft USB IntelliMouse Explorer 3.0"
HID\VID_045E&PID_0059.DeviceDesc="Microsoft USB Wireless IntelliMouse Explorer"
HID\VID_046D&PID_C000.DeviceDesc="Logitech USB First/Pilot Mouse"
HID\VID_046D&PID_C001.DeviceDesc="Logitech USB First/Pilot Mouse+"
HID\VID_046D&PID_C002.DeviceDesc="Logitech USB MouseMan Wheel"
HID\VID_046D&PID_C003.DeviceDesc="Logitech USB MouseMan"
HID\VID_046D&PID_C004.DeviceDesc="Logitech USB WingMan Gaming Mouse"
HID\VID_046D&PID_C005.DeviceDesc="Logitech USB WingMan Gaming Wheel Mouse"
HID\VID_046D&PID_C00B.DeviceDesc="Logitech USB MouseMan Wheel+"
HID\VID_046D&PID_C00C.DeviceDesc="Logitech USB WheelMouse"
HID\VID_046D&PID_C00D.DeviceDesc="Logitech USB MouseMan Wheel+"
HID\VID_046D&PID_C00E.DeviceDesc="Logitech USB Wheel Mouse"
HID\VID_046D&PID_C030.DeviceDesc="Logitech USB iFeel Mouse"
HID\VID_046D&PID_C031.DeviceDesc="Logitech USB iFeel Mouse+"
HID\VID_046D&PID_C032.DeviceDesc="Logitech USB iFeel MouseMan"
HID\VID_046D&PID_C033.DeviceDesc="Logitech USB iFeel MouseMan+"
HID\VID_046D&PID_C401.DeviceDesc="Logitech USB TrackMan Marble Wheel"
HID\VID_046D&PID_C402.DeviceDesc="Logitech USB Marble Mouse"
HID\VID_046D&PID_C403.DeviceDesc="Logitech USB Turbo TrackMan Marble FX"
HID\VID_046D&PID_C404.DeviceDesc="Logitech USB TrackMan Wheel"
HID\VID_046D&PID_C501.DeviceDesc="Logitech USB Cordless Mouse"
HID\VID_046D&PID_C502&MI_01&Col01.DeviceDesc="Logitech HID Cordless Mouse+"
HID\VID_046D&PID_C502&MI_01&Col04.DeviceDesc="Logitech HID Cordless Mouse+"
HID\VID_04B4&PID_0001.DeviceDesc="Cypress USB Mouse"
HID\VID_04E7&PID_0001.DeviceDesc="ELO TouchSystems USB Touchscreen"
HID\VID_0458&PID_0001.DeviceDesc="Genius USB Mouse"
HID\VID_0458&PID_0002.DeviceDesc="Genius USB Net Mouse Pro"
HID\VID_0458&PID_0003.DeviceDesc="Genius USB Wheel Mouse"
HID\VID_0446&PID_6781&MI_01.DeviceDesc="NMB USB Keyboard Mouse"
HID\VID_05FA&PID_3301&MI_01.DeviceDesc="STSL USB Keyboard Mouse"
HID\VID_05FA&PID_3303&MI_01.DeviceDesc="STSL USB Keyboard Mouse"
HID\VID_05d5&PID_6782&MI_01.DeviceDesc="SUPGERGATE USB Keyboard Mouse"
HID\VID_04F2&PID_0001&MI_01.DeviceDesc="Chicony USB Keyboard Mouse"
HID\VID_03F9&PID_0102&MI_01.DeviceDesc="Key Tronic USB Keyboard Mouse"
HID\VID_046E&PID_6782&MI_01&Col01.DeviceDesc="BTC USB Keyboard Mouse"
HID\VID_05B2&PID_7200&MI_01.DeviceDesc="Focus USB Keyboard Mouse"
HID\VID_05AF&PID_9267&MI_01.DeviceDesc="KB 9251B - 678 Mouse"
HID\VID_04C3&PID_1102&MI_01.DeviceDesc="Maxi Switch, Inc. #1102 Mouse"
HID\VID_04C3&PID_2102&MI_01.DeviceDesc="Maxi Switch, Inc. #2102 Mouse"
HID\VID_0566&PID_2801&MI_01.DeviceDesc="MIC USB K/B Mouse"
HID\VID_05A4&PID_9720&MI_01.DeviceDesc="Ortek USB Keyboard Mouse"
HID\VID_0431&PID_0100.DeviceDesc="Evolution USB Mouse-Trak by ITAC"
HID\VID_055D&PID_6781&MI_01.DeviceDesc="Samsung USB Keyboard Mouse"
HID\VID_05BC&PID_0001&MI_01.DeviceDesc="Forward USB K/B Mouse"
HID\VID_0500&PID_0001&MI_01.DeviceDesc="SUH DART USB Keyboard Mouse"
HID\VID_0471&PID_0601&MI_01.DeviceDesc="Philips USB Wireless Keyboard Mouse"
HID\VID_0471&PID_0402&MI_01.DeviceDesc="PS/2 Mouse on Philips Semiconductors CICT USB Keyboard"
HID\VID_0605&PID_0001.DeviceDesc="Anchor USB Mouse"
HID\VID_0409&PID_0014&MI_01.DeviceDesc="NEC 109 Japanese USB Keyboard Mouse"
HID\VID_0409&PID_0011&MI_01.DeviceDesc="NEC PC98 Series Layout USB Keyboard Mouse"
HID\VID_060B&PID_2101&MI_01.DeviceDesc="Solid Year USB Keyboard Mouse"
HID\VID_0430&PID_0002&MI_01.DeviceDesc="Fujitsu USB Composite Keyboard Mouse"
HID\VID_0510&PID_E001.DeviceDesc="Sejin USB Mouse"
HID\VID_0510&PID_1000&MI_01.DeviceDesc="Sejin USB Keyboard Mouse"
HID\VID_05F2&PID_0010.DeviceDesc="Dexin USB AQ Mouse"
HID\VID_04A5&PID_0003&MI_01.DeviceDesc= "API Generic USB K/B Mouse"
HID\VID_047B&PID_0002&MI_01.DeviceDesc="Silitek USB Keyboard Mouse"
HID\VID_05C7&PID_1001.DeviceDesc="Qtronix USB Mouse"
HID.MouseDevice       = "HID-compliant mouse"

; Standard defs

SPSVCINST_TAGTOFRONT  = 0x00000001
SPSVCINST_ASSOCSERVICE= 0x00000002
SERVICE_KERNEL_DRIVER = 1
SERVICE_BOOT_START    = 0
SERVICE_SYSTEM_START  = 1
SERVICE_AUTO_START    = 2
SERVICE_ERROR_NORMAL  = 1
SERVICE_ERROR_IGNORE  = 0
REG_EXPAND_SZ         = 0x00020000
REG_DWORD             = 0x00010001
REG_SZ                = 0x00000000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\mshdc.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 && LANGUAGE_ID != 0x412
*PNP0600.DeviceDesc     = "Standard IDE/ESDI Hard Disk Controller"

#elif LANGUAGE_ID == 0x804
*PNP0600.DeviceDesc     = "Standard IDE/ESDI Hard Disk Controller"

#elif LANGUAGE_ID == 0x404
*PNP0600.DeviceDesc     = "Standard IDE/ESDI Hard Disk Controller"

#elif LANGUAGE_ID == 0x411
@@!n:*PNP0600.DeviceDesc     = "Standard IDE/ESDI Hard Disk Controller"
@n:*PNP0600.DeviceDesc     = "NEC PC-9800 IDE/ATAPI Rg["

#elif LANGUAGE_ID == 0x412
*PNP0600.DeviceDesc     = "Standard IDE/ESDI Hard Disk Controller"
#endif

HDCClassName            = "IDE ATA/ATAPI controllers"
MS                      = "Microsoft"
MS-Drivers              = "(Standard IDE ATA/ATAPI controllers)"
*PNP0600.PriDeviceDesc  = "Primary IDE Channel"
*PNP0600.SecDeviceDesc  = "Secondary IDE Channel"
PCI\CC_0101.DeviceDesc  = "Standard Dual Channel PCI IDE Controller"
IODATA = "I-O DATA DEVICE,INC."
PCMCIA\LOOKMEET-CBIDE2______-6C0A.DeviceDesc = "CBIDE2-LM DuoATA Card (16Bit Mode)"
ALI="Acer Labs Inc"
PCI\VEN_10B9&DEV_5215.DeviceDesc="ALi PCI IDE Controller"
PCI\VEN_10B9&DEV_5219.DeviceDesc="ALi M5219 PCI Bus Master IDE Controller"
PCI\VEN_10B9&DEV_5229.DeviceDesc="ALi M5229 PCI Bus Master IDE Controller"
APPIAN="Appian Technology"
PCI\VEN_1097&DEV_0038.DeviceDesc="Appian PCI IDE Controller"
CMD="CMD Technology"
PCI\VEN_1095&DEV_0640.DeviceDesc="CMD PCI-0640 PCI to IDE Controller"
PCI\VEN_1095&DEV_0643.DeviceDesc="CMD PCI-0643 PCI to IDE Controller"
PCI\VEN_1095&DEV_0646.DeviceDesc="CMD PCI-0646 Bus Master PCI to IDE Controller"
PCI\VEN_1095&DEV_0646U2.DeviceDesc="CMD PCI-0646U2 Ultra DMA IDE Controller"
PCI\VEN_1095&DEV_0648.DeviceDesc="CMD PCI-0648 Ultra DMA IDE Controller"
PCI\VEN_1095&DEV_0649.DeviceDesc="CMD PCI-0649 Ultra DMA IDE Controller"
COMPAQ="Compaq"
PCI\VEN_0E11&DEV_AE33.DeviceDesc="Compaq PCI IDE Controller"
SERVERWORKS="ServerWorks"
PCI\VEN_1166&DEV_0211.DeviceDesc="OSB4 IDE Controller"
PCI\VEN_1166&DEV_0212&SUBSYS_02121166.DeviceDesc="CSB5 IDE Controller"
INTEL="Intel"
PCI\VEN_8086&DEV_1222.DeviceDesc="Intel(r) 82092AA PCI IDE Controller"
PCI\VEN_8086&DEV_1230.DeviceDesc="Intel(r) 82371FB PCI Bus Master IDE Controller"
PCI\VEN_8086&DEV_7010.DeviceDesc="Intel(r) 82371SB PCI Bus Master IDE Controller"
PCI\VEN_8086&DEV_7111.DeviceDesc="Intel(r) 82371AB/EB PCI Bus Master IDE Controller"
PCI\VEN_8086&DEV_2411.DeviceDesc="Intel(r) 82801AA Bus Master IDE Controller"
PCI\VEN_8086&DEV_2421.DeviceDesc="Intel(r) 82801AB Bus Master IDE Controller"
PCI\VEN_8086&DEV_7199.DeviceDesc="Intel(r) 82440MX Bus Master IDE Controller"
PCI\VEN_8086&DEV_244A.DeviceDesc="Intel(r) 82801BA Bus Master IDE Controller"
PCI\VEN_8086&DEV_244B.DeviceDesc="Intel(r) 82801BA Bus Master IDE Controller"
PCI\VEN_8086&DEV_248A.DeviceDesc="Intel(r) 82801CAM Ultra ATA Storage Controller-248A"
PCI\VEN_8086&DEV_248B.DeviceDesc="Intel(r) 82801CA Ultra ATA Storage Controller-248B"
PCI\VEN_8086&DEV_24C1.DeviceDesc="Intel(r) 82801DB Ultra ATA Storage Controller-24C1"
PCI\VEN_8086&DEV_24CA.DeviceDesc="Intel(r) 82801DB Ultra ATA Storage Controller-24CA"
PCI\VEN_8086&DEV_24CB.DeviceDesc="Intel(r) 82801DB Ultra ATA Storage Controller-24CB"
PCI\VEN_8086&DEV_24D1.DeviceDesc="Intel(r) 82801EB Serial Ultra ATA Storage Controller-24D1"
PCI\VEN_8086&DEV_24DB.DeviceDesc="Intel(r) 82801EB Parallel Ultra ATA Storage Controller-24DB"
PCI\VEN_8086&DEV_7601.DeviceDesc="Intel(r) IA64 Bus Master IDE Controller"
PCTECH="PC Technology"
PCI\VEN_1042&DEV_1000.DeviceDesc="PC Tech PCI IDE Single or Dual Port Controller"
SIS="Silicon Integrated System"
PCI\VEN_1039&DEV_0601.DeviceDesc="SiS PCI IDE Controller"
PCI\VEN_1039&DEV_5513.DeviceDesc="SiS PCI IDE Controller"
SYMPHONY="Symphony Labs"
PCI\VEN_10AD&DEV_0001.DeviceDesc="Symphony PCI IDE Controller"
PCI\VEN_10AD&DEV_0150.DeviceDesc="Symphony PCI IDE Controller"
VIA="VIA Technologies, Inc."
PCI\VEN_1106&DEV_0571.DeviceDesc="VIA Bus Master IDE Controller"
IBM="IBM"
PCMCIA\IBM-MICRODRIVE-7F50.DeviceDesc="IBM Microdrive"
PCMCIA\IBM-MICRODRIVE-AA55.DeviceDesc="IBM Microdrive"
SONY="SONY"
PCMCIA\SONY-MEMORYSTICK.DeviceDesc="Sony Memory Stick" 
LEXAR="Lexar Microsystems"
LEXAR.DeviceDesc="Lexar Media Digital Film Card"
SMSC="Standard Microsystems Corp"
PCI\VEN_1055&DEV_9130.DeviceDesc="SMSC SLC90E66 PCI Bus Master IDE Controller"
MICRON="Micron"
PCMCIA\Micron-MTCF.DeviceDesc="Micron ATA Flash Card"
TOSHIBA="TOSHIBA"
PCI\VEN_1179&DEV_0105.DeviceDesc = "Toshiba PCI-0105 IDE Controller"

pcmcia.DeviceDesc               = "PCMCIA IDE/ATAPI Controller"
SanDisk.DeviceDesc              = "SanDisk/SunDisk PCMCIA Flash Card"
FujitsuIdePccard.DeviceDesc     = "Fujitsu IDE PC-Card"
panasonicIdePccard.DeviceDesc   = "Panasonic ATAPI CD-ROM Interface Card"
ninjaIdePccard.DeviceDesc        = "ATAPI CD-ROM Interface Card"


;*******************************************
;Handy macro substitutions (non-localizable)
SPSVCINST_ASSOCSERVICE = 0x00000002
SERVICE_KERNEL_DRIVER  = 1
SERVICE_BOOT_START     = 0
SERVICE_ERROR_NORMAL   = 1
REG_EXPAND_SZ          = 0x00020000
REG_DWORD              = 0x00010001
REG_MULTI_SZ           = 0x00010000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\msnike.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

[Strings]
MSFT="S3/Diamond Multimedia"
MfgName="S3/Diamond Multimedia"
DevDesc="nike psa[play digital audio player"
NikeDrv.SvcDesc="nike psa[play driver"
RunOnce="SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\msmusb.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
;---------------------------------------------------
[Strings]
Msft="Microsoft"
Mfg="Microtek"

usbscan.SvcDesc= "USB Scanner Driver"

WScan.DeviceDesc="WIA My Scanner  Device"
GoButton="Go Button"
WScan.SvcDesc="WIA My Scanner Driver"
USB\VID_05DA&PID_0099.DeviceDesc="ScanMaker X6u"
USB\VID_05DA&PID_0091.DeviceDesc="ScanMaker X6u"
USB\VID_05DA&PID_0094.DeviceDesc="SlimScan C3u"
USB\VID_05DA&PID_00A0.DeviceDesc="SlimScan C3u"
USB\VID_05DA&PID_20B0.DeviceDesc="ScanMaker X12USL"
USB\VID_05DA&PID_20EE.DeviceDesc="ScanMaker X12USL"
USB\VID_05DA&PID_40B3.DeviceDesc="ScanMaker 3600"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\muiwow64.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui


[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x409
LCID=0409
#endif

#if LANGUAGE_ID == 0x403
LCID=0403
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
#endif

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\msrio8.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

[Strings]
MSFT="S3/Diamond Multimedia"
MfgName="S3/Diamond Multimedia"
USB\VID_045A&PID_5002.DeviceDesc="Rio800 Digital Audio Player"
Rio8Drv.SvcDesc="Rio800 driver"
RunOnce="SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\msrio.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

[Strings]
MSFT="S3/Diamond Multimedia"
MfgName="S3/Diamond Multimedia"
USB\VID_045A&PID_5001.DeviceDesc="Rio600 Digital Audio Player"
RioDrv.SvcDesc="Rio600 driver"
RunOnce="SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\msports.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers.
; User readable strings
;----------------------------------------------------------
[Strings]
Lava="Lava Computer MFG Inc."
Lava-PCI_1_PARALLEL.DeviceDesc ="Lava Parallel PCI Card"
Quatech-F060.DeviceDesc = "Quatech Q-Lynx Parallel Adapter"

MS  = "Microsoft"
Std = "(Standard port types)"
PortsClassName = "Ports (COM & LPT)"

@m:*PNP0400.DeviceDesc = "Unsupported Printer Port"
@m:*PNP0401.DeviceDesc = "Unsupported ECP Printer Port"
@i:*PNP0400.DeviceDesc = "Printer Port"
@i:*PNP0401.DeviceDesc = "ECP Printer Port"
*PNP0500.DeviceDesc = "Communications Port"
*PNP0501.DeviceDesc = "Communications Port"
*PNP0502.DeviceDesc = "Multiport Communications Port"

; Compaq devices
@i:*CPQA0E0.DeviceDesc = "ECP Printer Port"
*CPQA0D9.DeviceDesc = "Communications Port"

HP = "Hewlett Packard"
MF\EISA_HWP1C10_DEV0.DeviceDesc="HP Communications Port"
@i:MF\EISA_HWP1C10_DEV1.DeviceDesc="HP Printer Port"

IBM="IBM"

@i:TDC="Trans Digital Corporation"
@i:TDC-37D0.DeviceDesc="Trans PC Card Universal Parallel Port"

Socket="Socket Communications"
Socket-0484.DeviceDesc="Socket PCMCIA Serial Adapter"
Socket-12F8.DeviceDesc="Socket PCMCIA Serial Adapter"
Socket-5E3E.DeviceDesc="Socket PCMCIA Serial Adapter"
SocketDual.DeviceDesc="Socket PCMCIA Serial Device"
Socket-FA29.DeviceDesc="Socket PCMCIA PageCard V3.0"
Socket-AF8A.DeviceDesc="Socket PCMCIA GPS Adapter (Rev. B)"
Socket-66D0.DeviceDesc="Socket PCMCIA GPS Adapter (Rev. C)"
Socket-0104-0001.DeviceDesc="Socket PCMCIA Serial Adapter"

DBC="DBC"
DBC-4E9B.DeviceDesc="DBC SignalCard"

Rockwell="Rockwell"
Rockwell-64B7.DeviceDesc="Rockwell NavCard"

Trimble="Trimble"
Trimble-6947.DeviceDesc="Trimble PCMCIA GPS Adapter (Rev. B)"

Smart="SMART Modular Technologies"
Smart-A0F6.DeviceDesc="SMART Serial Port"

SIIG="SIIG"
SIIG-PCI_1_SERIAL.DeviceDesc ="SIIG CyberSerial Card"
@i:SIIG-PCI_1_PARALLEL.DeviceDesc ="SIIG CyberParallel PCI Card"
SIIG-PCI_1_CYBERSERIAL.DeviceDesc ="SIIG CyberSerial Card"

@i:Parport.SVCDESC  = "Parallel port driver"
Serial.SVCDESC   = "Serial port driver"

Serenum.SVCDESC = "Serenum Filter Driver"

Compaq = "Compaq GSM Radio Card"
Ericsson= "Ericsson GC25"
*ERIC.DeviceDesc = "Ericsson GC25"
*COMP.DeviceDesc = "Compaq GSM Radio Card"

Quatech = "Quatech"
Quatech-63EA.DeviceDesc = "Quatech Q-Lynx Serial Adapter"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\mstape.txt ===
[Strings]

;----------------
; Non-Localizable
;----------------

; note: only register value is case sensitive, key is not.
ProxyVCap.CLSID="{17CCA71B-ECD7-11D0-B908-00A0C9223196}"
MediaCategories="System\CurrentControlSet\Control\MediaCategories"
GUID.MPEG2TSOutput="{2CFF7B83-96F1-47e3-98EC-57BD8A997215}"
GUID.MPEG2TSInput= "{CF4C59A3-ACE3-444b-8C37-0B22661A4A29}"

KSCATEGORY_VIDEO=     "{6994AD05-93EF-11D0-A3CC-00A0C9223196}"
KSCATEGORY_CAPTURE=   "{65E8773D-8F56-11D0-A3B9-00A0C9223196}"
KSCATEGORY_RENDER=    "{65E8773E-8F56-11D0-A3B9-00A0C9223196}"
KSCATEGORY_RENDER_EXT="{cc7bfb41-f175-11d1-a392-00e0291f3959}"

Pin.MPEG2TSOutput="MPEG2TS Out"
Pin.MPEG2TSInput="MPEG2TS In"

SERVICE_KERNEL_DRIVER=1
; PnP should use demand start
SERVICE_DEMAND_START=3
SERVICE_ERROR_NORMAL=1

; Do not localize
MSTAPE.Capture="Microsoft AV/C Tape Subunit Device"   ; FriendlyNames is generic, but the Description is device specific.
AVCSTRM.FILTER="AVC Streaming Filter Driver" 
TapeDeviceGUID="{8C0F6AF2-0EDB-44c1-8AEB-59040BD830ED}"
;DEFINE_GUID(<<name>>, 
;0x8c0f6af2, 0xedb, 0x44c1, 0x8a, 0xeb, 0x59, 0x4, 0xb, 0xd8, 0x30, 0xed);


;----------------
; Localizable
;----------------

;Generic="Generic"
Msft="Microsoft"
JVC="JVC"
Panasonic="Panasonic"
Sony="Sony"

;
; Description should be localized.
;
MSTAPE.MEI.Capture="Panasonic AV/C Tape Device"
MSTAPE.JVC.Capture="JVC AV/C Tape Device"
MSTAPE.Sony.Capture="Sony AV/C Tape Device"


;
; Device name should be localized.
;
AVC\VEN_VICTOR&TYP_4.DeviceDesc="JVC Tape Device"                                ; All JVC/Victor tape subunit

AVC\VEN_E05C&MOD_0&TYP_4&ID_0.DeviceDesc="Panasonic Tape Device"                 ; PV-HD1000
AVC\Panasonic&TYP_4.DeviceDesc="Panasonic Tape Device"                           ; All Panasonic tape subunit


AVC\VEN_E05C&MOD_0&TYP_5&ID_0.DeviceDesc="Panasonic Vendor Unique Subunit"       ; Tuner
AVC\Panasonic&TYP_5.DeviceDesc="Panasonic Vendor Unique Subunit"                 ; Tuner


AVC\VEN_E05C&MOD_0&TYP_A&ID_0.DeviceDesc="Panasonic Vendor Unique Subunit"       ; Bulletin Board
AVC\Panasonic&TYP_A.DeviceDesc="Panasonic Vendor Unique Subunit"                 ; Bulletin Board

AVC\VEN_80046&MOD_0&TYP_4.DeviceDesc="Sony D-VHS Device"                         ; SLD-DC1
AVC\Sony&DCR-MVDVCR&CAMCORDER.DeviceDesc="Sony MVDVCR Device"                    ; Sony MVDVCR Device

;
; PlugIns descrioption
;
PlugIn_IAMExtDevice="WDM Streaming IAMExtDevice Interface Handler"
PlugIn_IAMExtTransport="WDM Streaming IAMExtTransport Interface Handler"
PlugIn_IAMTimecodeReader="WDM Streaming IAMTimecodeReader Interface Handler"
PropPage_DVcrControl="Tape Subunit Device Control Property Page"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\msoe50.txt ===
[Machine.Add.Reg.Loc]
#if LANGUAGE_ID == 0x804
// CHS Specific section
HKLM,"%FORCEFUL_OE_KEY%\Mail","Message Plain Encoding Format",1,01,00,00,00
HKLM,"%FORCEFUL_OE_KEY%\Mail","Message HTML Encoding Format",1,01,00,00,00
HKLM,"%FORCEFUL_OE_KEY%\Mail",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\IMAP",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\News",Tools2,1,8d,00,00,00,90,00,00,00,91,00,00,00,92,00,00,00,ff,ff,ff,ff,98,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00

#elif LANGUAGE_ID == 0x401
// ARA specific section
HKLM,"%FORCEFUL_OE_KEY%\Mail",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\IMAP",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\News",Tools2,1,8d,00,00,00,90,00,00,00,91,00,00,00,92,00,00,00,ff,ff,ff,ff,98,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%DEFAULT_OE_KEY%","Use RTL direction",1,01,00,00,00

#elif LANGUAGE_ID ==  0x40D
// HEB specific section
HKLM,"%FORCEFUL_OE_KEY%\Mail",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\IMAP",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\News",Tools2,1,8d,00,00,00,90,00,00,00,91,00,00,00,92,00,00,00,ff,ff,ff,ff,98,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%DEFAULT_OE_KEY%","Use RTL direction",1,01,00,00,00
HKLM,"%DEFAULT_OE_KEY%\Mail","Default_CodePage",1,c6,96,00,00

#elif LANGUAGE_ID == 0x412
// KOR specfic section
HKLM,"%FORCEFUL_OE_KEY%\Mail","Message Plain Encoding Format",1,01,00,00,00
HKLM,"%FORCEFUL_OE_KEY%\Mail","Message HTML Encoding Format",1,01,00,00,00
HKLM,"%FORCEFUL_OE_KEY%\Mail",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\IMAP",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\News",Tools2,1,8d,00,00,00,90,00,00,00,91,00,00,00,92,00,00,00,ff,ff,ff,ff,98,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00

#elif LANGUAGE_ID == 0x411
// JPN specific section
HKLM,"%FORCEFUL_OE_KEY%\News","Message Plain Format MIME",1,01,00,00,00
HKLM,"%FORCEFUL_OE_KEY%\Mail","Message HTML Encoding Format",1,04,00,00,00
HKLM,"%FORCEFUL_OE_KEY%\News","Message HTML Encoding Format",1,04,00,00,00
HKLM,"%FORCEFUL_OE_KEY%",NoSplash,1,01,00,00,00
HKLM,"%FORCEFUL_OE_KEY%\Mail",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\IMAP",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\News",Tools2,1,8d,00,00,00,90,00,00,00,91,00,00,00,92,00,00,00,ff,ff,ff,ff,98,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00
#endif

[Common.Add.Reg.Loc]
#if LANGUAGE_ID == 0x404
// CHT specific section
HKLM,"SOFTWARE\Microsoft\Active Setup\Installed Components\{76C19B33-F0C8-11cf-87CC-0020AFEECF20}",,0,"Chinese (Traditional) Language Support"
HKLM,"SOFTWARE\Microsoft\Active Setup\Installed Components\{76C19B33-F0C8-11cf-87CC-0020AFEECF20}","Version",1,04,00,46,00,00,00,B0,04
HKLM,"%FORCEFUL_OE_KEY%\Mail",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\IMAP",Tools2,1,64,00,00,00,8e,00,00,00,8f,00,00,00,92,00,00,00,ff,ff,ff,ff,9a,00,00,00,ff,ff,ff,ff,79,00,00,00,ff,ff,ff,ff,e7,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00
HKLM,"%FORCEFUL_OE_KEY%\News",Tools2,1,8d,00,00,00,90,00,00,00,91,00,00,00,92,00,00,00,ff,ff,ff,ff,98,00,00,00,ff,ff,ff,ff,dc,00,00,00,88,01,00,00,97,01,00,00,7d,01,00,00,61,9C,00,00

#elif LANGUAGE_ID == 0x804
// CHS specific section
HKLM,"SOFTWARE\Microsoft\Active Setup\Installed Components\{76C19B34-F0C8-11cf-87CC-0020AFEECF20}",,0,"Chinese (Simplified) Language Support
HKLM,"SOFTWARE\Microsoft\Active Setup\Installed Components\{76C19B34-F0C8-11cf-87CC-0020AFEECF20}","Version",1,04,00,46,00,00,00,B0,04

#elif LANGUAGE_ID == 0x412
// KOR specific section
HKLM,"SOFTWARE\Microsoft\Active Setup\Installed Components\{76C19B31-F0C8-11cf-87CC-0020AFEECF20}",,0,"Korean  Language Support
HKLM,"SOFTWARE\Microsoft\Active Setup\Installed Components\{76C19B31-F0C8-11cf-87CC-0020AFEECF20}","Version",1,04,00,46,00,00,00,B0,04

#elif LANGUAGE_ID == 0x411
// JPN specific section
HKLM,"SOFTWARE\Microsoft\Active Setup\Installed Components\{76C19B30-F0C8-11cf-87CC-0020AFEECF20}",,0,"Japanese Language Support"
HKLM,"SOFTWARE\Microsoft\Active Setup\Installed Components\{76C19B30-F0C8-11cf-87CC-0020AFEECF20}","Version",1,04,00,46,00,00,00,B0,04
#endif


[Strings]
STR_COMMON_DIR          = "Common Files"
STR_DESKTOP_DIR         = "Desktop"
STR_MAILNEWS_DIR        = "Outlook Express"
STR_PROGRAMF_DIR        = "Program Files"
STR_SERVICES_DIR        = "Services"
STR_SHARED_DIR          = "Microsoft Shared"
STR_STATIONERY_DIR      = "Stationery"
STR_STATIONERY_SHORT_DIR= "Statio~1"
STR_SYSTEM_DIR          = "System"
STR_INET_DESC_OLD_GRP   = "Internet"
STR_INTERNET_SUITE_GRP  = "Internet Explorer Suite"
STR_LANG                = "EN"
STR_MAIL_OLD            = "Mail"
STR_MAILMESSAGE_V1      = "Internet Mail Message"
STR_MESSAGES            = "Outlook Express Mail"
STR_MESSAGES_V1         = "Internet Mail"
STR_MN_README           = "Read Me (Mail and News)"
STR_NEWS                = "Outlook Express News"
STR_NEWS_OLD            = "News"
STR_NEWS_V1             = "Internet News"
STR_NEWSMESSAGE_V1      = "Internet News Message"
STR_NEW_MAIL_NOTIFY     = "New Mail Notification"
STR_OE_TIP              = "Easy to use Internet e-mail and newsgroup reader."
STR_OE_SM_TIP           = "Sends and receives e-mail and newsgroup messages."
STR_ALEABANR_GIF        = "aleabanr.gif"
STR_AMAIZRUL_GIF        = "amaizrul.gif"
STR_ANABNR2_GIF         = "anabnr2.gif"
STR_ASWRULE_GIF         = "aswrule.gif"
STR_BLANK_HTM           = "Blank.htm"
STR_BLANKBKG_GIF        = "Blank Bkgrd.gif"
STR_BTZHSEPA_GIF        = "Btzhsepa.gif"
STR_CITBANNA_GIF        = "citbannA.gif"
STR_CITRUSBKG_GIF       = "Citrus Punch Bkgrd.gif"
STR_CITRUSPUN_HTM       = "Citrus Punch.htm"
STR_CLEARDAY_HTM        = "Clear Day.htm"
STR_CLRDAYBG_JPG        = "Clear Day Bkgrd.jpg"
STR_FIERULD_GIF         = "fieruled.gif"
STR_FIESTA_HTM          = "Fiesta.htm"
STR_FIESTABG_JPG        = "Fiesta Bkgrd.jpg"
STR_GLACIER_HTM         = "Glacier.htm"
STR_GLACRBKG_JPG        = "Glacier Bkgrd.jpg"
STR_IVY_GIF             = "Ivy.gif"
STR_IVY_HTM             = "Ivy.htm"
STR_LEAVES_HTM          = "Leaves.htm"
STR_LEAVESBG_JPG        = "Leaves Bkgrd.jpg"
STR_MAIZE_HTM           = "Maize.htm"
STR_MAIZEBKG_JPG        = "Maize Bkgrd.jpg"
STR_NATURE_HTM          = "Nature.htm"
STR_NATUREBG_JPG        = "Nature Bkgrd.jpg"
STR_NETBLITZ_HTM        = "Network Blitz.htm"
STR_NETBLZBG_GIF        = "Network Blitz Bkgrd.gif"
STR_PIECHTBG_JPG        = "Pie Charts Bkgrd.jpg"
STR_PIECHTS_HTM         = "Pie Charts.htm"
STR_SUNBANNA_GIF        = "sunbannA.gif"
STR_SUNFBKG_JPG         = "Sunflower Bkgrd.jpg"
STR_SUNFLOWR_HTM        = "Sunflower.htm"
STR_SWEETS_HTM          = "Sweets.htm"
STR_SWEETSBG_GIF        = "Sweets Bkgrd.gif"
STR_TECH_GIF            = "tech.gif"
STR_TECH_HTM            = "Technical.htm"
APP_OE                  = "/APP:OE"
ATHENA_KEY              = "Internet Mail and News"
BLANK                   = ""
CALLER                  = "/CALLER:WINNT"
COMPONENT_OE            = "OutlookExpress"
DEFAULT_OE_KEY          = "Software\Microsoft\Outlook Express\5.0\Default Settings"
FORCEFUL_OE_KEY         = "Software\Microsoft\Outlook Express\5.0\Required Settings"
GUID_OE                 = "{44BBA840-CC51-11CF-AAFA-00AA00B6015C}"
SETUP_MSGLIST_GUID      = "{233A9692-667E-11d1-9DFB-006097D50408}"
SETUP_MIMEEDIT_GUID     = "{1C82EAD9-508E-11D1-8DCF-00C04FB951F9}"
INFFILE_OE              = "msoe50.inf"
INTERNET_GRP            = "Internet Explorer"
LINKS_KEY               = "Software\Microsoft\Outlook Express\Tip Links"
MAILCLIENT_KEY          = "Software\Clients\Mail"
MS_OUTLOOK              = "Microsoft Outlook Express"
MS_OUTLOOK_5            = "Microsoft Outlook Express 6"
NEWSCLIENT_KEY          = "Software\Clients\News"
OUTLOOK                 = "Outlook Express"
OUTLOOK_KEY             = "Outlook Express"
TIPS_KEY                = "Software\Microsoft\Outlook Express\Tip Strings"
VERSION_OE              = "TOK_MAJOR_NUM,TOK_MINOR_NUM,TOK_BUILDNUM,TOK_QFE"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\mstask.txt ===
[Strings]
;
; Do not localize these strings.
;
TS  = "SchedulingAgent"

;
; Localize these strings.
;
TSD = "Task Scheduler Install Disk"
MSTASK = "Scheduled Tasks"
LocalizedString	    = "LocalizedString"
Friendly_Type_Name  = "FriendlyTypeName"
TASKS_FOLDER        = "Tasks"
TASK_OBJECT         = "Task Scheduler Task Object"
MSTASK_DESCRIPTION  = "Enables a user to configure and schedule automated tasks on this computer. If this service is stopped, these tasks will not be run at their scheduled times. If this service is disabled, any services that explicitly depend on it will fail to start."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\mui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*: Note: component INF files section has been moved here so that we can have different
@*:       sets of components for different languages.  Please add components that require
@*:       per language conditional installs at the end of the [Components] section.@*:
@*:
@*: Component INF files installation.
@*: Format:
@*:               CompnentName=ComponentDirectory,ComponentINF_FileName,InstallationSection,UninstallationSection,OEMFlag
@*:               E.g.
@*:               IE5=ie5,ie5ui.inf,DefaultInsatll,DefaultUninstall,0
@*:               The component name is IE5.  Its INF file is called ie5ui.inf, and is stored in the ie5 direcotry of a specific language direcotry.
@*:               During the installation, [DefaultInstall] section will be executed, and [DefaultUninstall] section will be executed
@*:               in the uninstallation time. If a component is OEM specific, the last field should be set to 1.
@*:
@*/

[Components]
#if LANGUAGE_ID != 0x401 && LANGUAGE_ID != 0x40D && LANGUAGE_ID != 0x408 &&  LANGUAGE_ID != 0x406  &&  LANGUAGE_ID != 0x414  &&  LANGUAGE_ID != 0x40B
AppHelp DB=AppHelp,apphlpui.inf,DefaultInstall,DefaultUninstall
#endif
IE5=ie5,ie5ui.inf,DefaultInstall,DefaultUninstall
@@:@m:WIE5=wie5,wie5ui.inf,DefaultInstall,DefaultUninstall
@@:@i:OOBE=oobe,oobemui.inf,DefaultInstall,DefaultUninstall
Shell MUI support=shellmui,shellmui.inf,DefaultInstall, Uninstall
ErrorReporting=er,ermui.inf,DefaultInstall,Uninstall
@@:@m:WErrorReporting=wer,wermui.inf,DefaultInstall,Uninstall
@@!d:@3:Windows Media Profiles=netshow,wmprfmui.inf,InstallWmPrf,DefaultUninstall
@@!d:@3:Windows Media Skins=netshow,skinsmui.inf,InstallSkins,Uninstall
@@!d:@3:Windows Media Tour=netshow,wmtrmui.inf,DefaultInstall,Uninstall
@@:@i:Search Assistant=srchmui,srchmui.inf,DefaultInstall,DefaultUninstall
@@:@m:MUIWOW64=muiwow64,muiwow64.inf,DefaultInstall,DefaultUninstall
#if LANGUAGE_ID == 0x409 || LANGUAGE_ID == 0x411 || LANGUAGE_ID == 0x407 || LANGUAGE_ID == 0x412 || LANGUAGE_ID == 0x804 || LANGUAGE_ID == 0x404 || LANGUAGE_ID == 0x40C || LANGUAGE_ID == 0xC0A || LANGUAGE_ID == 0x410 || LANGUAGE_ID == 0x41D || LANGUAGE_ID == 0x413 || LANGUAGE_ID == 0x416 || LANGUAGE_ID == 0x419 || LANGUAGE_ID == 0x405 || LANGUAGE_ID == 0x415 || LANGUAGE_ID == 0x40E || LANGUAGE_ID == 0x816 || LANGUAGE_ID == 0x41F
HSS=hss,pchmui.inf,DefaultInstall,DefaultUninstall
@@:@@:PerfMon=PerfMon,perfmui.inf,DefaultInstall,DefaultUninstall
OEM Help Content=OemHelp,oemmui.inf,DefaultInstall,DefaultUninstall,1
@@:@i:UDDI=uddimui,uddimui.inf,DefaultInstall,DefaultUninstall
#endif
#if LANGUAGE_ID == 0x409 || LANGUAGE_ID == 0x411 || LANGUAGE_ID == 0x407 || LANGUAGE_ID == 0x412 || LANGUAGE_ID == 0x804 || LANGUAGE_ID == 0x404 || LANGUAGE_ID == 0x40C || LANGUAGE_ID == 0xC0A
@@:@i:Remote Administration Tools=sakit,sakitmui.inf,DefaultInstall,DefaultUninstall
#endif

/*:	BUGBUG: We have removed the Tour and Moviemaker entries below for Server builds. Need to build mui.inf per sku in future.
@*:	@w:@3:Tour=tourmui,tourmui.inf,DefaultInstall,DefaultUninstall
@*:	@w:@i:Movie Maker Support=moviemk,moviemui.inf,DefaultInstall,Uninstall
@*/


[Strings]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\mxboard.txt ===
;
; Strings section
;
[Strings]
MoxaTech="Moxa Technologies Inc."
MxServiceDesc = "MOXA Intellio Family Driver"
MxPortServiceDesc = "MOXA Intellio Family Port Driver"
C218TPCI.DevDesc="MOXA Intellio C218Turbo/PCI Series"
C320TPCI.DevDesc="MOXA Intellio C320Turbo/PCI Series"
SourceDisksNamesDesc = "MOXA Intellio Windows 2000 Driver Disk"



REG_DWORD              = 0x00010001
REG_EXPAND_SZ          = 0x00020000
REG_BINARY             = 1

SERVICE_KERNEL_DRIVER  = 0x00000001

;;SERVICE_AUTO_START     = 0x00000002
SERVICE_DEMAND_START   = 0x00000003


SERVICE_ERROR_NORMAL   = 0x00000001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netaarps.txt ===
[strings]
V_MS="Microsoft"

V_CLASSNAME="Network Protocol"
ATMARPS.DeviceDesc="ATM ARP/MARS Service"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\multimed.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
KEY_OPTIONAL        = "SOFTWARE\Microsoft\Windows\CurrentVersion\Setup\OptionalComponents"
Multimed_GROUPOLD   = "Accessories\Multimedia"
Multimed_GROUP      = "Accessories\Entertainment"

MultiM_DESC         = "Multimedia"
MultiM_TIP          = "Includes programs for playing sound, animation, or video on computers with CD-ROM drives or sound cards."

CDPlayer_DESC       = "CD Player"
CDPlayer_TIP        = "Utility to play music CDs with your computer"
CDPlayer_Infotip    = "Plays audio compact discs (CDs)."
CDPlayer_CDA        = "CD Audio Track"
AUDIOCD             = "AudioCD"
Play_Command        = "&Play"

MPlay_DESC          = "Media Player"
MPlay_TIP           = "Utility to play audio and video clips"
MPlay_Infotip       = "Use Media Player to play, edit, link, and embed a variety of multimedia files including video, audio, and animation files."

Rec_DESC            = "Sound Recorder"
Rec_TIP             = "Utility to record and play sounds with a sound card"
Rec_Infotip         = "Records sounds if a microphone and sound card are installed."

Vol_DESC            = "Volume Control"
Vol_TIP             = "Utility to adjust the volume from a sound card"
Vol_Infotip         = "Controls the volume level of recorded and play-back sounds."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\mxport.txt ===
[Strings]
MoxaTech="Moxa Technologies Inc."
port0="Moxa Port 0"
port1="Moxa Port 1"
port2="Moxa Port 2"
port3="Moxa Port 3"
port4="Moxa Port 4"
port5="Moxa Port 5"
port6="Moxa Port 6"
port7="Moxa Port 7"
port8="Moxa Port 8"
port9="Moxa Port 9"
port10="Moxa Port 10"
port11="Moxa Port 11"
port12="Moxa Port 12"
port13="Moxa Port 13"
port14="Moxa Port 14"
port15="Moxa Port 15"
port16="Moxa Port 16"
port17="Moxa Port 17"
port18="Moxa Port 18"
port19="Moxa Port 19"
port20="Moxa Port 20"
port21="Moxa Port 21"
port22="Moxa Port 22"
port23="Moxa Port 23"
port24="Moxa Port 24"
port25="Moxa Port 25"
port26="Moxa Port 26"
port27="Moxa Port 27"
port28="Moxa Port 28"
port29="Moxa Port 29"
port30="Moxa Port 30"
port31="Moxa Port 31"


MoxaPort.ServiceDesc="Moxa Intellio Multiport Board Port Driver"
SourceDisksNamesDesc = "MOXA Intellio Windows 2000 Port Driver Disk"


;Handy macro substitutions (non-localizable)

;; Driver start code
SERVICE_DEMAND_START   = 3  ;; Driver started on demand by the Service Control Manager.

;; Error control level
SERVICE_ERROR_NORMAL   = 1


SERVICE_KERNEL_DRIVER       = 0x1

SPSVCINST_ASSOCSERVICE = 0x00000002
REG_EXPAND_SZ          = 0x00020000
REG_DWORD              = 0x00010001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netatlk.txt ===
[Strings]
Msft = "Microsoft"
NetATLK_Desc = "AppleTalk Protocol"
ATLK_PNT_MON_Desc = "AppleTalk Print Monitor"
ATLK_PNT_MON_Name = "AppleTalk Printing Devices"
SERVICE_DEMAND_START = 2
SERVICE_WIN32_SHARE_PROCESS = 1
REG_EXPAND_SZ = 0x20000
REG_DWORD = 0x10001
REG_MULTI_SZ = 0x10000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ndisip.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

;-----------------------------------------------------------------------------
;
; Strings Section
;
[Strings]
Microsoft                = "Microsoft"
Msft                     = "Microsoft"
NdisIP.DeviceDesc        = "Microsoft TV/Video Connection"
NdisIP.Service.DispName  = "Microsoft TV/Video Connection"
NdisIP_HELP              = "Receives Internet data embedded in TV broadcasts and other video."
NdisIP.DeviceId          = "{48926476-2cae-4ded-a86e-73ddebed6779}"
NdisIP.GUID.BDANetInterface = "{9aa4a2cc-81e0-4cfd-802f-0f74526d2bd3}"
RunOnce="SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\nabtsfec.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
;---------------------------------------------------------------
;                S t r i n g s
;---------------------------------------------------------------

[Strings]

;----------------
; Non-Localizable
;----------------
SERVICE_KERNEL_DRIVER=1
SERVICE_AUTO_START=2
SERVICE_DEMAND_START=3
SERVICE_ERROR_NORMAL=1

RunOnce="SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"

; WARNING!  If you change either of the GUIDs below, you must also
;           change kscaptur.txt
NABTSFEC.DeviceId     = "{07DAD662-22F1-11d1-A9F4-00C04FBBDE8F}"
VBIcatID              = "{07DAD660-22F1-11d1-A9F4-00C04FBBDE8F}"

Proxy.CLSID           = "{17CCA71B-ECD7-11D0-B908-00A0C9223196}"
AMcatID               = "{DA4E3DA0-D07D-11d0-BD50-00A0C911CE86}"
NABpinID              = "{29703660-498A-11d2-B4B1-00A0D102CFBE}"
NABpinName            = "HWNABTS"


;----------------
; Localizable
;----------------
Msft=          		"Microsoft"
Manufacturer=  		"Microsoft"
NABTSFEC.DeviceDesc=    "NABTS/FEC VBI Codec"
NABTSFEC.FriendlyName=  "NABTS/FEC VBI Codec"
WDMcodecs=     		"WDM Streaming VBI Codecs"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netbeac.txt ===
[Strings]
Msft = "Microsoft"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\multiprt.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
; User readable strings
;----------------------------------------------------------
[Strings]
MS  = "Microsoft"
MultiPortSerialClassName = "Multi-port serial adapters"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netauni.txt ===
;****************************************************************************
; Localizable Strings
;****************************************************************************
[strings]
V_MS="Microsoft"
V_CLASSNAME="Network Protocol"
ATMUNI.DeviceDesc="ATM Call Manager"

; AddReg flags
FLG_ADDREG_TYPE_EXPAND_SZ   = 0x00020000
FLG_ADDREG_TYPE_MULTI_SZ    = 0x00010000
FLG_ADDREG_TYPE_DWORD       = 0x00010001
FLG_ADDREG_KEYONLY          = 0x00000010
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netcis.txt ===
[Strings]
Msft = "Microsoft"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netcps.txt ===
[Strings]
;; NON - Localizable Strings
KEY_NAME_DSN_Name	= "PBServer"
KEY_ODBC_ROOT_Name	= "SOFTWARE\ODBC\ODBC.INI\PBServer"
KEY_ODBC_ROOT_Data	= "SOFTWARE\ODBC\ODBC.INI\PBServer\Engines\Jet"
APP_PATH_SERVER		= "Phone Book Service"
KEY_EVENTS		= "System\CurrentControlSet\Services\EventLog\Application\Phone Book Service"
KEY_CPSMON_ROOT		= "SYSTEM\CurrentControlSet\Services\PBServerMonitor"
KEY_CPSMON_PERF		= "SYSTEM\CurrentControlSet\Services\PBServerMonitor\Performance"
DB_PATH_SERVER		= "Data\Database"
REG_DWORD		= 0x10001
;; Localizable Strings
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netdhcpr.txt ===
[Strings]
Msft = "Microsoft"
RelayAgent_Desc = "DHCP Relay Agent"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netdav.txt ===
[Strings]
Msft = "Microsoft"

WebClient.DisplayName = "WebClient"
WebClient.HelpText = "WebClient allows Win32 applications to access documents on the Internet."

WebClient.ServiceDisplayName = "WebClient"
WebClient.ServiceDescription  = "Enables Windows-based programs to create, access, and modify Internet-based files. If this service is stopped, these functions will not be available. If this service is disabled, any services that explicitly depend on it will fail to start."

NetProviderName = "Web Client Network"

MRxDAV.ServiceDisplayName = "WebDav Client Redirector"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netcmak.txt ===
[Strings]
;; Localizable Strings
Msft			= "Microsoft"
AdminTools		= "Administrative Tools"
OLDDOCDIR               = "Docs" ; must be the same as IEAK4 doc dir name
CMAK_DESC 		= "Connection Manager Administration Kit" ; link name
OLD_LOC_CMAK_DESC       = "Old W2K Connection Manager Administration Kit String" ; this is needed by certain localized languages

;; NON - Localizable Strings
CMAppName		= "Connection Manager Administration Kit" ; registry keyname
CMHELP_DIR		= "CMHelp"
CMREGROOT		= "Software\Microsoft\Connection Manager Administration Kit"
CMAppPath		= "SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\cmak.exe"
RegUninstPath           = "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\CMAK"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netdhoc.txt ===
[Strings]
Msft            = "Microsoft"
DHCPServer_Desc = "Microsoft DHCP Server"
DHCPServer_Help = "Automatically assigns IP addresses to other computers running the DHCP (Dynamic Host Configuration Protocol) Client Service."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netdlc.txt ===
[Strings]
Msft = "Microsoft"
HP_PORTMON = "Hewlett-Packard Network Port"

DLC_Desc = "DLC Protocol"

FLG_ADDREG_KEYONLY=0x00000010
REG_MULTI_SZ = 0x10000
REG_DWORD = 0x10001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netdhcps.txt ===
[Strings]
Msft                        = "Microsoft"
DHCPServer_SCM_Display      = "DHCP Server"
DHCPServer_SCM_Desc         = "Performs TCP/IP configuration for DHCP clients, including dynamic assignments of IP addresses, specification of the WINS and DNS servers, and connection-specific DNS names. If this service is stopped, the DHCP server will not perform TCP/IP configuration for clients. If this service is disabled, any services that explicitly depend on it will fail to start."
DHCPServer_Help             = "Automatically assigns IP addresses to other computers running the DHCP (Dynamic Host Configuration Protocol) Client Service."

; Shortcuts
DHCPServer_Admin_SC_Desc            = "DHCP"
DHCPServer_Admin_SC_Group_Name      = "Administrative Tools"
DHCPServer_Admin_SC_HelpText        = "Use DHCP to configure and manage the Dynamic Host Configuration Protocol (DHCP) service."

; Note to localizers: Please make sure this is the same description used in NT 4.0
DHCPServer_Old_Admin_Sc_Desc        = "DHCP Manager"
DHCPServer_Old_Admin_Sc_Group_Name  = "Administrative Tools"

; Note to localizers: Please make sure this is the same description used in NT 3.51
DHCPServer_Really_Old_Admin_Sc_Desc        = "DHCP Manager"
DHCPServer_Really_Old_Admin_Sc_Group_Name  = "Network Administration"

; ServiceType values
SERVICE_KERNEL_DRIVER               = 0x00000001
SERVICE_FILE_SYSTEM_DRIVER          = 0x00000002
SERVICE_ADAPTER                     = 0x00000004
SERVICE_RECOGNIZER_DRIVER           = 0x00000008
SERVICE_WIN32_OWN_PROCESS           = 0x00000010
SERVICE_WIN32_SHARE_PROCESS         = 0x00000020
SERVICE_INTERACTIVE_PROCESS         = 0x00000100
SERVICE_INTERACTIVE_SHARE_PROCESS   = 0x00000120

; Some standard defines
REG_MULTI_SZ                = 0x10000
REG_EXPAND_SZ               = 0x20000
REG_DWORD                   = 0x10001
REG_BIN                     = 0x00001
REG_NOCLOBBER               = 0x00020
REG_MULTI_SZ_NOCLOBBER      = 0x10020
REG_EXPAND_SZ_NOCLOBBER     = 0x20020
REG_DWORD_NOCLOBBER         = 0x10021
REG_BIN_NOCLOBBER           = 0x00021
FLG_ADDREG_KEYONLY          = 0x0010

; StartType values
SERVICE_BOOT_START          = 0x00000000
SERVICE_SYSTEM_START        = 0x00000001
SERVICE_AUTO_START          = 0x00000002
SERVICE_DEMAND_START        = 0x00000003
SERVICE_DISABLED            = 0x00000004

; ErrorControl values
SERVICE_ERROR_IGNORE        = 0x00000000
SERVICE_ERROR_NORMAL        = 0x00000001
SERVICE_ERROR_SEVERE        = 0x00000002
SERVICE_ERROR_CRITICAL      = 0x00000003

; Characteristic flags
NCF_VIRTUAL                 = 0x0001
NCF_WRAPPER                 = 0x0002
NCF_PHYSICAL                = 0x0004
NCF_HIDDEN                  = 0x0008
NCF_NO_SERVICE              = 0x0010
NCF_NOT_USER_REMOVABLE      = 0x0020
NCF_HAS_UI                  = 0x0080
NCF_MODEM                   = 0x0100
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netgpc.txt ===
[Strings]
Msft = "Microsoft"

GPC_Desc = "Generic Packet Classifier"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netias.txt ===
[Strings]
Msft = "Microsoft"
IAS_Display = "Internet Authentication Service"
IAS_Desc = "Manages authentication, authorization, auditing, and accounting for virtual private network (VPN), dial-up, 802.1x wireless or Ethernet switch connection attempts sent by access servers that are compatible with the IETF RADIUS protocol. If this service is stopped, users might be unable to obtain a VPN, dial-up, wireless, or Ethernet connection to the network. If this service is disabled, any services that explicitly depend on it will fail to start."
Snapin-Group-Name = "Administrative Tools"
IAS_Shortcut_Display = "Internet Authentication Service"
IAS_Old_Shortcut_Display = "Old W2K Internet Authentication Service String"  ; this is needed by certain localized languages

REG_MULTI_SZ  = 0x10000
REG_EXPAND_SZ = 0x20000
REG_DWORD     = 0x10001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netiprip.txt ===
[Strings]
Msft = "Microsoft"

Iprip_Desc = "Listens for route updates sent by routers that use the Routing Information Protocol version 1 (RIPv1)."
Iprip_Display = "RIP Listener"
Iprip_HELP = "This service listens for IP route updates and adds them to the local routing table.  (Also known as RIP for IP)"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netdns.txt ===
[Strings]
Msft = "Microsoft"

DNSServer_Display = "DNS Server"
DNSServer_Desc = "Enables DNS clients to resolve DNS names by answering DNS queries and dynamic DNS update requests. If this service is stopped, DNS updates will not occur. If this service is disabled, any services that explicitly depend on it will fail to start."

; Service names
DNS_Desc = "Microsoft DNS Server"
DNS_Admin_Group = "Administrative Tools"
DNSServer_HELP = "The Domain Name System maps DNS domain names to IP addresses."

; Note to localizers: This string must be the same as the one from NT4.
DNS_Admin_Tool_Old = "DNS Manager"
DNS_Admin_Group_Old = "Administrative Tools"
DNS_Shortcut_Desc = "DNS"
DNS_EXTENSION = "DNS Extension"
DNS_Admin_HelpText = "Manages the Domain Name System (DNS) service, which translates DNS computer names to IP addresses."

REG_MULTI_SZ = 0x10000
REG_EXPAND_SZ = 0x20000
REG_DWORD = 0x10001
SERVICE_DEMAND_START = 3
SERVICE_AUTO_START = 2
SERVICE_WIN32_SHARE_PROCESS = 32
SERVICE_FILE_SYSTEM_DRIVER = 2
SERVICE_WIN32_OWN_PROCESS = 16

; Characteristic flags
NCF_VIRTUAL                 = 0x0001
NCF_WRAPPER                 = 0x0002
NCF_PHYSICAL                = 0x0004
NCF_HIDDEN                  = 0x0008
NCF_NO_SERVICE              = 0x0010
NCF_NOT_USER_REMOVABLE      = 0x0020
NCF_HAS_UI                  = 0x0080
NCF_MODEM                   = 0x0100

KEY_OPTIONAL            = "SOFTWARE\Microsoft\Windows\CurrentVersion\Setup\OptionalComponents"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netlanem.txt ===
[Strings]
Msft = "Microsoft"

ATMELAN_Desc = "ATM Emulated LAN"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netirda.txt ===
[Strings]
;-----------------------------------------------------
Msft                    = "Microsoft"
IrDA.DisplayName        = "IrDA Protocol"
IrDA.HelpText           = "Infrared Data Association Protocol. Easy to use self configuring point-to-point connectivity without wires"
Irmon.Description       = "Supports infrared devices installed on the computer and detects other devices that are in range."
Irmon.DisplayName       = "Infrared Monitor"
REG_MULTI_SZ            = 0x10000
FLG_ADDREG_TYPE_DWORD   = 0x00010001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netip6.txt ===
[Strings]
Msft = "Microsoft"

MS_TCPIP6.DisplayName = "Microsoft TCP/IP version 6"
MS_TCPIP6.HelpText    = "TCP/IP version 6. The next-generation version of the internet protocol that provides communication across diverse interconnected networks."
MS_TCPIP6.TCPIP6.ServiceDescription   = "Microsoft IPv6 Protocol Driver"
MS_TCPIP6.6to4.DisplayName = "IPv6 Helper Service"
MS_TCPIP6.6to4.ServiceDescription = "Provides DDNS name registration and automatic IPv6 connectivity over an IPv4 network.  If this service is stopped, other computers may not be able to reach it by name and the machine will only have IPv6 connectivity if it is connected to a native IPv6 network.  If this service is disabled, any other services that explicitly depend on this service will fail to start."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netlanep.txt ===
[Strings]
Msft = "Microsoft"

ATMLANE_Desc = "ATM LAN Emulation"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netmacpr.txt ===
[Strings]
Msft = "Microsoft"

MacPrint_Help    = "Enables Macintosh users to print to any printer connected to the computer running Windows Server and to spool print jobs for AppleTalk printers such as the LaserWriter."
MacPrint_Desc    = "Enables Macintosh clients to route printing to a print spooler located on a computer running Windows server. If this service is stopped, printing will be unavailable to Macintosh clients. If this service is disabled, any services that explicitly depend on it will fail to start."
MacPrint_Display = "Print Server for Macintosh"

FLG_ADDREG_KEYONLY = 0x0010
REG_MULTI_SZ = 0x10000
REG_EXPAND_SZ = 0x20000
REG_DWORD = 0x10001
SERVICE_DEMAND_START = 3
SERVICE_AUTO_START = 2
SERVICE_WIN32_SHARE_PROCESS = 32
SERVICE_FILE_SYSTEM_DRIVER = 2
SERVICE_WIN32_OWN_PROCESS = 16
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netlpd.txt ===
[Strings]
Msft                        = "Microsoft"

LPDSVC_Display              = "TCP/IP Print Server"
LPDSVC_Desc                 = "Enables TCP/IP-based printing using the Line Printer Daemon protocol. If this service is stopped, TCP/IP-based printing will be unavailable. If this service is disabled, any services that explicitly depend on it will fail to start."
LPDSVC_HELP                 = "Enables Windows to print to TCP/IP-connected printers or to printers that are physically attached to UNIX computers."

; ServiceType values
SERVICE_KERNEL_DRIVER       = 0x00000001
SERVICE_FILE_SYSTEM_DRIVER  = 0x00000002
SERVICE_ADAPTER             = 0x00000004
SERVICE_RECOGNIZER_DRIVER   = 0x00000008
SERVICE_WIN32_OWN_PROCESS   = 0x00000010
SERVICE_WIN32_SHARE_PROCESS = 0x00000020
SERVICE_INTERACTIVE_PROCESS = 0x00000100
SERVICE_INTERACTIVE_SHARE_PROCESS = 0x00000120

; StartType values
SERVICE_BOOT_START          = 0x00000000
SERVICE_SYSTEM_START        = 0x00000001
SERVICE_AUTO_START          = 0x00000002
SERVICE_DEMAND_START        = 0x00000003
SERVICE_DISABLED            = 0x00000004

; ErrorControl values
SERVICE_ERROR_IGNORE        = 0x00000000
SERVICE_ERROR_NORMAL        = 0x00000001
SERVICE_ERROR_SEVERE        = 0x00000002
SERVICE_ERROR_CRITICAL      = 0x00000003

; Registry types
REG_MULTI_SZ                = 0x10000
REG_EXPAND_SZ               = 0x20000
REG_DWORD                   = 0x10001
FLG_ADDREG_KEYONLY          = 0x00000010
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netmacsv.txt ===
[Strings]
Msft = "Microsoft"

MACSRV_DESC     = "SFM Kernel Driver"
MacFile_Display = "File Server for Macintosh"
MacFile_Desc    = "Enables Macintosh clients to store and access files on this server. If this service is stopped, Macintosh clients will not be able to access this server. If this service is disabled, any services that explicitly depend on it will fail to start."

MICROSOFT_UAM_VOLUME = "Microsoft UAM Volume"

FLG_ADDREG_KEYONLY = 0x0010
REG_MULTI_SZ = 0x10000
REG_MULTI_SZ_NOCLOBBER = 0x10002
REG_MULTI_SZ_APPEND = 0x1000A
REG_MULTI_SZ_DELVAL = 0x10006
REG_EXPAND_SZ = 0x20000
REG_DWORD = 0x10001
REG_DWORD_NOCLOBBER = 0x10003
SERVICE_DEMAND_START = 3
SERVICE_AUTO_START = 2
SERVICE_WIN32_SHARE_PROCESS = 32
SERVICE_FILE_SYSTEM_DRIVER = 2
SERVICE_WIN32_OWN_PROCESS = 16

XCEL1COMMENT   = "Comment=MS Excel 3.0 Chart"
XCEL2COMMENT   = "Comment=MS Excel 3.0 Spreadsheet"
XCEL3COMMENT   = "Comment=MS Excel 3.0 Macrosheet"
XCEL4COMMENT   = "Comment=MS Excel 3.0 Workspace"
XCEL5COMMENT   = "Comment=MS Excel 3.0 Add-in MacroFile"
XCEL6COMMENT   = "Comment=MS Excel 3.0 Template File"
XCEL7COMMENT   = "Comment=MS Excel 3.0"
XCEL8COMMENT   = "Comment=MS Excel 4.0 Chart"
XCEL9COMMENT   = "Comment=MS Excel 4.0 Spreadsheet"
XCEL10COMMENT  = "Comment=MS Excel 4.0 Macrosheet"
XCEL11COMMENT  = "Comment=MS Excel 4.0 WorkSpace"
XCEL12COMMENT  = "Comment=MS Excel 4.0 Add-in MacroFile"
XCEL13COMMENT  = "Comment=MS Excel 4.0 Template File"
XCEL14COMMENT  = "Comment=MS Excel 98/2001 Document"
XCEL15COMMENT  = "Comment=MS Excel 98/2001 Template File"
XCEL16COMMENT  = "Comment=MS Excel 98 Add-in MacroFile"
XCEL19COMMENT  = "Comment=MS Excel 2001 Add-in MacroFile"
MSWD1COMMENT   = "Comment=MS Word 5.1 Document"
MSWD2COMMENT   = "Comment=MS Word 5.1 Document"
MSWD3COMMENT   = "Comment=MS Word 6.0 Document"
MSWD4COMMENT   = "Comment=MS Word 6.0 Template"
MSWD5COMMENT   = "Comment=MS Word 98 Document"
MSWD6COMMENT   = "Comment=MS Word 98 Template"
MSWD7COMMENT   = "Comment=MS Word 2001 Document"
MSWD8COMMENT   = "Comment=MS Word 2001 Template"
MSPJ1COMMENT   = "Comment=MS Project 4.0"
MSPJ2COMMENT   = "Comment=MS Project 4.0 Exchange File"
MSPJ3COMMENT   = "Comment=MS Project 4.0 Calendar"
MSPJ4COMMENT   = "Comment=MS Project 4.0 View"
MSPJ5COMMENT   = "Comment=MS Project 4.0 WorkSpace"
MSPJ6COMMENT   = "Comment=MS Project 4.0 Template"
ALD31COMMENT   = "Comment=Pagemaker 3.0  Publication"
ALD32COMMENT   = "Comment=Pagemaker 3.0 Template"
ALD33COMMENT   = "Comment=Pagemaker 3.0 Tiff Graphics"
ALD41COMMENT   = "Comment=Pagemaker 4.0 Publication"
ALD42COMMENT   = "Comment=Pagemaker 4.0 Template"
ALD43COMMENT   = "Comment=Pagemaker 4.0 Tiff Graphics"
ALD51COMMENT   = "Comment=Pagemaker 5.0 Publication"
ALD52COMMENT   = "Comment=Pagemaker 5.0 Template"
ALD53COMMENT   = "Comment=Pagemaker 5.0 Tiff Graphics"
ALD61COMMENT   = "Comment=Pagemaker 6.0 Publication"
ALD62COMMENT   = "Comment=Pagemaker 6.0 Template"
ALD63COMMENT   = "Comment=Pagemaker 6.0 Tiff Graphics"
MORECOMMENT    = "Comment=Symantec More File"
FOXCOMMENT     = "Comment=FoxBase Plus"
ARTZCOMMENT    = "Comment=Adobe Illustrator"
ART5COMMENT    = "Comment=Adobe Illustrator 8"
SITCOMMENT     = "Comment=Aladdin Stuffit"
PPT2COMMENT    = "Comment=MS PowerPoint 2.0"
PPT3COMMENT    = "Comment=MS PowerPoint 3.0"
PPT4COMMENT    = "Comment=MS PowerPoint 98 Presentation"
PPT5COMMENT    = "Comment=MS PowerPoint 98 Show"
PPT6COMMENT    = "Comment=MS PowerPoint 2001 Presentation"
PPT7COMMENT    = "Comment=MS PowerPoint 2001 Show"
L123COMMENT    = "Comment=Lotus 1-2-3"
LMANCOMMENT    = "Comment=LMAN Executables"
TTXTCOMMENT    = "Comment=Teach Text Document"
FOXX1COMMENT   = "Comment=FoxPro 2.0 Table"
FOXX2COMMENT   = "Comment=FoxPro 2.0 Memo"
FOXX3COMMENT   = "Comment=FoxPro 2.0 Index"
FOXX4COMMENT   = "Comment=FoxPro 2.0 Compound Index"
FOXX5COMMENT   = "Comment=FoxPro 2.0 Program"
FOXX6COMMENT   = "Comment=FoxPro 2.0 Report"
FOXX7COMMENT   = "Comment=FoxPro 2.0 Report Memo"
FOXX8COMMENT   = "Comment=FoxPro 2.0 Label"
FOXX9COMMENT   = "Comment=FoxPro 2.0 Label Memo"
FOXX10COMMENT   = "Comment=FoxPro 2.0 Screen"
FOXX11COMMENT   = "Comment=FoxPro 2.0 Screen Memo"
FOXX12COMMENT   = "Comment=FoxPro 2.0 Menu"
FOXX13COMMENT   = "Comment=FoxPro 2.0 Menu Memo"
FOXX14COMMENT   = "Comment=FoxPro 2.0 Gen. Query Program"
FOXX15COMMENT   = "Comment=FoxPro 2.0 Project"
FOXX16COMMENT   = "Comment=FoxPro 2.0 Project Memo"
FOXX17COMMENT   = "Comment=FoxPro 3.0 Project"
FOXX18COMMENT   = "Comment=FoxPro 3.0 Program"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netnb.txt ===
[Strings]
Msft = "Microsoft"

; Service names
NetBIOS_Desc = "NetBIOS Interface"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netnbf.txt ===
[Strings]
Msft = "Microsoft"
NetBEUI_Desc = "NetBEUI Protocol"

REG_DWORD = 0x10001
REG_MULTI_SZ = 0x10000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netnwcli.txt ===
[Strings]
Msft = "Microsoft"

NWC_Install_Display_Name = "Client Service for NetWare"
NWC_Service_Display_Name = "Client Service for NetWare"
NWC_Service_Description  = "Provides access to file and print resources on NetWare networks."

NWC_Network_Display_Name    = "NetWare or Compatible Network"
NWRDR_Service_Display_Name  = "NetWare Rdr"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netmscli.txt ===
[Strings]
Msft = "Microsoft"

MSClient_Desc = "Client for Microsoft Networks"

; Service names
Alerter_Display = "Alerter"
Alerter_Desc = "Notifies selected users and computers of administrative alerts. If the service is stopped, programs that use administrative alerts will not receive them. If this service is disabled, any services that explicitly depend on it will fail to start."
Browser_Display = "Computer Browser"
Browser_Desc = "Maintains an updated list of computers on the network and supplies this list to computers designated as browsers. If this service is stopped, this list will not be updated or maintained. If this service is disabled, any services that explicitly depend on it will fail to start."
LanmanWorkstation_Display = "Workstation"
LanmanWorkstation_Desc = "Creates and maintains client network connections to remote servers. If this service is stopped, these connections will be unavailable. If this service is disabled, any services that explicitly depend on it will fail to start."
NetLogon_Display = "Net Logon"
NetLogon_Desc = "Maintains a secure channel between this computer and the domain controller for authenticating users and services. If this service is stopped, the computer may not authenticate users and services and the domain controller cannot register DNS records. If this service is disabled, any services that explicitly depend on it will fail to start."
Messenger_Display = "Messenger"
Messenger_Desc = "Transmits net send and Alerter service messages between clients and servers. This service is not related to Windows Messenger. If this service is stopped, Alerter messages will not be transmitted. If this service is disabled, any services that explicitly depend on it will fail to start."
Rdr_Desc = "MRXSMB"
Rdbss_Desc = "Rdbss"
RpcLocator_Display = "Remote Procedure Call (RPC) Locator"
RpcLocator_Desc = "Enables remote procedure call (RPC) clients using the RpcNs* family of APIs to locate RPC servers. If this service is stopped or disabled, RPC clients using RpcNs* APIs may be unable to locate servers or fail to start. RpcNs* APIs are not used internally in Windows."
NtLmSsp_Display = "NT LM Security Support Provider"
NtLmSsp_Desc = "Provides security to remote procedure call (RPC) programs that use transports other than named pipes."

NetproviderName = "Microsoft Windows Network"
LanmanPrintProvider = "LanMan Print Services"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netnwlnk.txt ===
[Strings]
Msft = "Microsoft"

NwlnkIpx_Desc = "NWLink IPX/SPX/NetBIOS Compatible Transport Protocol"
NwlnkNb_Desc  = "NWLink NetBIOS"
NwlnkSpx_Desc = "NWLink SPX/SPXII Protocol"

NwlnkSpx_HelpText = ""
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netpgm.txt ===
[Strings]
Msft = "Microsoft"

;RMCAST strings
MS_RMCAST.DisplayName = "Reliable Multicast Protocol"
MS_RMCAST.HelpText    = "Reliable Multicast Protocol.  An implemention of the Pragmatic General Multicast Protocol (Pgm) for adding a degree of reliability to multicast applications."
MS_RMCAST.ServiceDescription   = "RMCAST (Pgm) Protocol Driver"

MS_RMCAST.Provider_Desc = "RMCast"

; AddReg flags
FLG_ADDREG_TYPE_MULTI_SZ    = 0x00010000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netoc.txt ===
[Strings]
NetOC_DESC              = "Management and Monitoring Tools"
NetOC_TIP               = "Includes tools for monitoring and improving network performance."

NetServices_DESC        = "Networking Services"
NetServices_TIP         = "Contains a variety of specialized, network-related services and protocols."

FileAndPrint_DESC       = "Other Network File and Print Services"
FileAndPrint_TIP        = "Shares files and printers on this computer with others on the network."

SNMP_Desc               = "Simple Network Management Protocol"
SNMP_HELP               = "Includes agents that monitor the activity in network devices and report to the network console workstation."

WBEMSNMP_DESC           = "WMI SNMP Provider"
WBEMSNMP_TIP            = "Allows client applications to access static and dynamic SNMP information through Windows Management Instrumentation (WMI)."

UPNP_Desc               = "Universal Plug and Play"
UPNP_HELP               = "Allows your computer to discover and control Universal Plug and Play devices."

BEACON_Desc             = "Internet Gateway Device Discovery and Control Client"
BEACON_HELP             = "Allows you to find and control Internet connection sharing hardware and software that uses Universal Plug and Play."

WINS_Desc               = "Windows Internet Name Service (WINS)"
WINS_HELP               = "Sets up a WINS server that registers and resolves NetBIOS names for clients."

DNSServer_Desc          = "Domain Name System (DNS)"
DNSServer_HELP          = "Sets up a DNS server that answers query and update requests for DNS names."

DHCPServer_Desc         = "Dynamic Host Configuration Protocol (DHCP)"
DHCPServer_HELP         = "Sets up a DHCP server that automatically assigns temporary IP addresses to client computers on the same network."

MACSRV_DESC             = "File Services for Macintosh"
MACSRV_HELP             = "Enables Macintosh users to both store and gain access to files on a server running Microsoft Windows."

MacPrint_Desc           = "Print Services for Macintosh"
MacPrint_Help           = "Enables Macintosh users to send jobs to a print spooler on a server running Microsoft Windows."

SimpTcp_Desc            = "Simple TCP/IP Services"
SimpTcp_HELP            = "Supports the following TCP/IP services: Character Generator, Daytime, Discard, Echo, and Quote of the Day."

NETMONTOOLS_Desc        = "Network Monitor Tools"
NETMONTOOLS_HELP        = "Analyzes and troubleshoots packets of data transferred over the network."

LPDSVC_Desc             = "Print Services for Unix"
LPDSVC_HELP             = "Enables UNIX clients to print to any printer available to this computer."

Iprip_Desc              = "RIP Listener"
Iprip_HELP              = "Listens for route updates sent by routers that use the Routing Information Protocol version 1 (RIPv1)."

NETCPS_DESC             = "Connection Point Services"
NETCPS_TIP              = "Installs Phone Book Service, which enables the distribution of phone books for a Connection Manager profile.  Requires IIS."

NETCMAK_DESC            = "Connection Manager Administration Kit"
NETCMAK_TIP             = "Installs a tool for the creation of customized remote access connections, which you can distribute to your users."

IASServer_Desc          = "Internet Authentication Service"
IASServer_HELP          = "Enables authentication, authorization and accounting of dial-up and VPN users. IAS supports the RADIUS protocol."

NetCIS_DESC             = "RPC over HTTP Proxy"
NetCIS_HELP             = "Enables RPC/DCOM to travel over HTTP via the Internet Information Server (IIS)."

FLG_ADDREG_KEYONLY = 0x0010
REG_MULTI_SZ = 0x10000
REG_EXPAND_SZ = 0x20000
REG_DWORD = 0x10001
REG_SZ_NO_CLOBBER = 0x2
SERVICE_DEMAND_START = 3
SERVICE_AUTO_START = 2
SERVICE_WIN32_SHARE_PROCESS = 32
SERVICE_FILE_SYSTEM_DRIVER = 2
SERVICE_WIN32_OWN_PROCESS = 16
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netpsa.txt ===
[Strings]
Msft = "Microsoft"

PSched_Desc   = "QoS Packet Scheduler"
PSchedMP_Desc = "Packet Scheduler Miniport"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netrasa.txt ===
[Strings]
Msft = "Microsoft"

Mp-AsyncMac-DispName        = "RAS Async Adapter"
Mp-L2tp-DispName            = "WAN Miniport (L2TP)"
Mp-Irda-DispName            = "Infrared Port"
Mp-IrModem-DispName         = "Infrared Modem Port"
Mp-Irda-LineName            = "Infrared Direct Line"
Mp-IrModem-LineName         = "Infrared Modem Line"
Mp-Pptp-DispName            = "WAN Miniport (PPTP)"
Mp-Pptp-LineName            = "RAS VPN Line"
;Mp-Pptp-LineName must use ANSI characters, not UNICODE.
Mp-Pti-DispName             = "Direct Parallel"
Mp-Atalk-DispName           = "WAN Miniport (AppleTalk)"
Mp-Bh-DispName              = "WAN Miniport (Network Monitor)"
Mp-Ip-DispName              = "WAN Miniport (IP)"
Mp-Ipx-DispName             = "WAN Miniport (IPX)"
Mp-NbfIn-DispName           = "WAN Miniport (NetBEUI, Dial In)"
Mp-NbfOut-DispName          = "WAN Miniport (NetBEUI, Dial Out)"
Mp-Pppoe-DispName           = "WAN Miniport (PPPOE)"
Mp-Pppoe-LineName           = "RAS PPPOE Line"

Svc-Mp-AsyncMac-DispName    = "RAS Asynchronous Media Driver"
Svc-Mp-L2tp-DispName        = "WAN Miniport (L2TP)"
Svc-Mp-Irda-DispName        = "WAN Miniport (IrDA)"
Svc-Mp-IrModem-DispName     = "WAN Miniport (IrDA Modem)"
Svc-Mp-Pptp-DispName        = "WAN Miniport (PPTP)"
Svc-Mp-Pti-DispName         = "Direct Parallel"
Svc-NdisTapi-DispName       = "Remote Access NDIS TAPI Driver"
Svc-NdisWan-DispName        = "Remote Access NDIS WAN Driver"
Svc-PptpProtocol-DispName   = "PPTP Protocol Driver"
Svc-Ptilink-DispName        = "Direct Parallel Link Driver"
Svc-WanArp-DispName         = "Remote Access IP ARP Driver"
Svc-Mp-Pppoe-DispName       = "Remote Access PPPOE Driver"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netrast.txt ===
[Strings]
Msft = "Microsoft"

L2tp-DispName               = "Layer 2 Tunneling Protocol"
L2tp-HelpText               = "Allows you to securely connect to a private network using the Internet."
NdisWan-DispName            = "Remote Access NDIS WAN Driver"
Pptp-DispName               = "Point to Point Tunneling Protocol"
Pptp-HelpText               = "Allows you to securely connect to a private network using the Internet."
Wanarp-DispName             = "Remote Access IP ARP Driver"
Pppoe-DispName              = "Point to Point Protocol Over Ethernet"
Pppoe-HelpText              = "Provides the abilitiy to connect a host to a Remote Access Concentrator that supports RFC2516."

Svc-NdisTapi-DispName       = "Remote Access NDIS TAPI Driver"
Svc-NdisWan-DispName        = "Remote Access NDIS WAN Driver"
Svc-PppoeProtocol-DispName  = "Remote Access PPPOE Driver"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netrwan.txt ===
;****************************************************************************
; Localizable Strings
;****************************************************************************
[strings]
V_MS="Microsoft"
V_CLASSNAME="Network Protocol"
RAWWAN.DeviceDesc="RAW WAN Driver"
RAWWAN_HELP="The RAW WAN driver provides TDI access to connection oriented network media."

; AddReg flags
FLG_ADDREG_TYPE_EXPAND_SZ   = 0x00020000
FLG_ADDREG_TYPE_MULTI_SZ    = 0x00010000
FLG_ADDREG_TYPE_DWORD       = 0x00010001
FLG_ADDREG_KEYONLY          = 0x00000010
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netpschd.txt ===
[Strings]
Msft = "Microsoft"

PSched_Desc = "QoS Packet Scheduler"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netrass.txt ===
[Strings]
Msft = "Microsoft"

ALG-DispName                = "Application Layer Gateway"
RasCli-DispName             = "Dial-Up Client"
RasMan-DispName             = "Remote Access Connection Manager"
RasSrv-DispName             = "Dial-Up Server"
Steelhead-DispName          = "Steelhead"

Snapin-Desc                 = "Routing and Remote Access"
Snapin-Group-Name           = "Administrative Tools"
Snapin-HelpText             = "Use Routing and Remote Access to configure and manage the Routing and Remote Access service."
Nt4RasAdmin-Desc            = "Routing and RAS Admin"
Nt4RasAdmin-Group-Name      = "Administrative Tools"

Svc-ALG-DispName            = "Application Layer Gateway Service"
Svc-ALG-Description         = "Provides support for application level protocol plug-ins and enables network/protocol connectivity. If this service is disabled, any services that explicitly depend on it will fail to start."
Svc-RasAcd-DispName         = "Remote Access Auto Connection Driver"
Svc-RasAuto-DispName        = "Remote Access Auto Connection Manager"
Svc-RasAuto-Description     = "Detects unsuccessful attempts to connect to a remote network or computer and provides alternative methods for connection. If this service is stopped, users will need to manually connect. If this service is disabled, any services that explicitly depend on it will fail to start."
Svc-RasMan-DispName         = "Remote Access Connection Manager"
Svc-RasMan-Description      = "Manages dial-up and virtual private network (VPN) connections from this computer to the Internet or other remote networks. If this service is stopped, the operating system might not function properly. If this service is disabled, any services that explicitly depend on it will fail to start."
Svc-RemoteAccess-DispName   = "Routing and Remote Access"
Svc-RemoteAccess-Description = "Enables multi-protocol LAN-to-LAN, LAN-to-WAN, virtual private network (VPN), and network address translation (NAT) routing services for clients and servers on this network. If this service is stopped, these services will be unavailable. If this service is disabled, any services that explicitly depend on it will fail to start."
Svc-IpFilter-DispName       = "IP Traffic Filter Driver"
Svc-IpInIp-DispName         = "IP in IP Tunnel Driver"
Svc-IpNat-DispName          = "IP Network Address Translator"
Svc-IpxFilter-DispName      = "IPX Traffic Filter Driver"
Svc-IpxForwarder-DispName   = "IPX Traffic Forwarder Driver"
Svc-NwSapAgent-DispName     = "SAP Agent"
Svc-SharedAccess-DispName   = "Internet Connection Firewall (ICF) / Internet Connection Sharing (ICS)"
Svc-SharedAccess-Description = "Provides network address translation, addressing, name resolution and/or intrusion prevention services for a home or small office network. If this service is stopped, networking services such as Internet sharing, name resolution, addressing and/or intrusion prevention will be unavailable.  If this service is disabled, any services that explicitly depend on it will fail to start."
RtrMgr-Ip-DispName          = "TCP/IP Routing Manager"
RtrMgr-Ip-AutoDhcp-DispName = "DHCP Allocator"
RtrMgr-Ip-Bootp-DispName    = "DHCP Relay Agent"
RtrMgr-Ip-DnsProxy-DispName = "DNS Proxy Agent"
RtrMgr-Ip-H323-DispName     = "H.323 Proxy Agent"
RtrMgr-Ip-Igmp-DispName     = "IGMP Router and Proxy"
RtrMgr-Ip-Nat-DispName      = "Network Address Translation (NAT)"
RtrMgr-Ip-Ospf-DispName     = "Open Shortest Path First (OSPF)"
RtrMgr-Ip-Rip-DispName      = "RIP Version 2 for Internet Protocol"
RtrMgr-Ip-Alg-DispName      = "Application Layer Gateway Service (eg. FTP)"
RtrMgr-Ip-Ftp-DispName      = "Ftp Proxy Agent"
RtrMgr-Ipx-DispName         = "IPX Routing Manager"
RtrMgr-Ipx-Rip-DispName     = "RIP for IPX"
RtrMgr-Ipx-Sap-DispName     = "SAP for IPX"

Nt-Authentication           = "Windows Authentication"
Nt-Accounting               = "Windows Accounting"
Radius-Authentication       = "RADIUS Authentication"
Radius-Accounting           = "RADIUS Accounting"

Eap-DispName                = "Smart Card or other certificate"
PEAP-DispName				= "Protected EAP (PEAP)"
EAPMSCHAP-DispName			= "Secured password (EAP-MSCHAP v2)"
Chap-DispName               = "MD5-Challenge"

ConnFolderName              = "Network Connections"
ConnFolderSubDir            = "Accessories\Communications"
ConnFolderTip               = "@%systemroot%\system32\netshell.dll,-1201"

NCW-Name                    = "New Connection Wizard"
NCW-SubDir                  = "Accessories\Communications"
NCW-ToolTip                 = "@%systemroot%\system32\netshell.dll,-1011"

CmDefaultCmdKeyName         = "Connection Manager Profile"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netsap.txt ===
[Strings]
Msft                = "Microsoft"
NWSapAgent_Display  = "SAP Agent"
NWSapAgent_Desc     = "Service Advertising Protocol"
NWSapAgent_ServiceDesc = "This advertises Internet Packet Exchange (IPX) network services to clients and servers on the network. If this service is stopped, these services might be unavailable or might not function properly. If this service is disabled, any services that explicitly depend on it will fail to start."


; AddReg flags
FLG_ADDREG_KEYONLY          = 0x00000010

; Some standard defines
REG_MULTI_SZ                = 0x10000
REG_EXPAND_SZ               = 0x20000
REG_DWORD                   = 0x10001

; Characteristic flags
NCF_VIRTUAL                 = 0x0001
NCF_WRAPPER                 = 0x0002
NCF_PHYSICAL                = 0x0004
NCF_HIDDEN                  = 0x0008
NCF_NO_SERVICE              = 0x0010
NCF_NOT_USER_REMOVABLE      = 0x0020
NCF_HAS_UI                  = 0x0080
NCF_MODEM                   = 0x0100
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netserv.txt ===
[Strings]
Msft = "Microsoft"

; Component description
MSServer_Desc = "File and Printer Sharing for Microsoft Networks"

; Do not localize these

; Service descriptions
LanmanServer_Display = "Server"
LanmanServer_Desc    = "Supports file, print, and named-pipe sharing over the network for this computer. If this service is stopped, these functions will be unavailable. If this service is disabled, any services that explicitly depend on it will fail to start."
Srv_Desc = "Srv"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netsfn.txt ===
[Strings]
Msft            = "Microsoft"
FPNW_Desc       = "File and Print Services for NetWare"
FPNWSRV_Desc    = "FPNWSrv"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netsnmp.txt ===
[Strings]
Msft = "Microsoft"

; Service names
SNMP_Display = "SNMP Service"
SNMP_Desc = "Enables Simple Network Management Protocol (SNMP) requests to be processed by this computer. If this service is stopped, the computer will be unable to process SNMP requests. If this service is disabled, any services that explicitly depend on it will fail to start."
SNMPTRAP_Display = "SNMP Trap Service"
SNMPTRAP_Desc = "Receives trap messages generated by local or remote Simple Network Management Protocol (SNMP) agents and forwards the messages to SNMP management programs running on this computer. If this service is stopped, SNMP-based programs on this computer will not receive SNMP trap messages. If this service is disabled, any services that explicitly depend on it will fail to start."
SNMP_HELP = "Simple Network Management Protocol service that enables a Windows computer to be administered remotely with an SNMP management tool."
Admin_Tools = "Administrative Tools"

REG_MULTI_SZ = 0x10000
REG_EXPAND_SZ = 0x20000
FLG_ADDREG_KEYONLY = 0x0010
REG_DWORD = 0x10001
SERVICE_DEMAND_START = 3
SERVICE_AUTO_START = 2
SERVICE_WIN32_SHARE_PROCESS = 32
SERVICE_FILE_SYSTEM_DRIVER = 2
SERVICE_WIN32_OWN_PROCESS = 16

; Characteristic flags
NCF_VIRTUAL                 = 0x0001
NCF_WRAPPER                 = 0x0002
NCF_PHYSICAL                = 0x0004
NCF_HIDDEN                  = 0x0008
NCF_NO_SERVICE              = 0x0010
NCF_NOT_USER_REMOVABLE      = 0x0020
NCF_HAS_UI                  = 0x0080
NCF_MODEM                   = 0x0100

KEY_OPTIONAL            = "SOFTWARE\Microsoft\Windows\CurrentVersion\Setup\OptionalComponents"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netsfnt.txt ===
[Strings]
Msft                = "Microsoft"
FPNWTools_Desc      = "File and Print Services for NetWare Administrative Tools"
FPNWTools_Help      = "File and Print Services for NetWare Administrative Tools"

; ServiceType values
SERVICE_KERNEL_DRIVER               = 0x00000001
SERVICE_FILE_SYSTEM_DRIVER          = 0x00000002
SERVICE_ADAPTER                     = 0x00000004
SERVICE_RECOGNIZER_DRIVER           = 0x00000008
SERVICE_WIN32_OWN_PROCESS           = 0x00000010
SERVICE_WIN32_SHARE_PROCESS         = 0x00000020
SERVICE_INTERACTIVE_PROCESS         = 0x00000100
SERVICE_INTERACTIVE_SHARE_PROCESS   = 0x00000120

; Some standard defines
REG_MULTI_SZ                = 0x10000
REG_EXPAND_SZ               = 0x20000
REG_DWORD                   = 0x10001
FLG_ADDREG_KEYONLY          = 0x0010

; StartType values
SERVICE_BOOT_START          = 0x00000000
SERVICE_SYSTEM_START        = 0x00000001
SERVICE_AUTO_START          = 0x00000002
SERVICE_DEMAND_START        = 0x00000003
SERVICE_DISABLED            = 0x00000004

; ErrorControl values
SERVICE_ERROR_IGNORE        = 0x00000000
SERVICE_ERROR_NORMAL        = 0x00000001
SERVICE_ERROR_SEVERE        = 0x00000002
SERVICE_ERROR_CRITICAL      = 0x00000003

; Characteristic flags
NCF_VIRTUAL                     = 0x0001
NCF_WRAPPER                     = 0x0002
NCF_PHYSICAL                    = 0x0004
NCF_HIDDEN                      = 0x0008
NCF_NO_SERVICE                  = 0x0010
NCF_NOT_USER_REMOVABLE          = 0x0020
NCF_HAS_UI                      = 0x0080
NCF_MODEM                       = 0x0100
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\nettun.txt ===
[Strings]
Msft = "Microsoft"

NetworkAddress = "Network Address"
TUNMP.DisplayName = "Microsoft Tun Miniport Adapter"
TUNMP.HelpText = "Microsoft Tun Miniport Adapter Driver"
TUNMP.Service.DisplayName = "Microsoft Tun Miniport Adapter Driver"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\nettpcu.txt ===
[Strings]
Msft                        = "Microsoft"

TCPUTIL_Desc                = "TCP/IP Connectivity Utilities"
TCPUTIL_HELP                = "TCP/IP Connectivity Utilities"

; ServiceType values
SERVICE_KERNEL_DRIVER       = 0x00000001
SERVICE_FILE_SYSTEM_DRIVER  = 0x00000002
SERVICE_ADAPTER             = 0x00000004
SERVICE_RECOGNIZER_DRIVER   = 0x00000008
SERVICE_WIN32_OWN_PROCESS   = 0x00000010
SERVICE_WIN32_SHARE_PROCESS = 0x00000020
SERVICE_INTERACTIVE_PROCESS = 0x00000100
SERVICE_INTERACTIVE_SHARE_PROCESS = 0x00000120

; StartType values
SERVICE_BOOT_START          = 0x00000000
SERVICE_SYSTEM_START        = 0x00000001
SERVICE_AUTO_START          = 0x00000002
SERVICE_DEMAND_START        = 0x00000003
SERVICE_DISABLED            = 0x00000004
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netupnp.txt ===
[Strings]
Msft = "Microsoft"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\nettp4.txt ===
[Strings]
Msft                     = "Microsoft"

ISOTPSYS_Desc            = "OSI-LAN Protocol"

ISOTP_Desc               = "Microsoft OSI-LAN Transport"
ISOTP_HELP               = "TP4/CLNP/ES-IS Protocol Suite from Microsoft, Inc."

; ServiceType values
SERVICE_KERNEL_DRIVER       = 0x00000001
SERVICE_FILE_SYSTEM_DRIVER  = 0x00000002
SERVICE_ADAPTER             = 0x00000004
SERVICE_RECOGNIZER_DRIVER   = 0x00000008
SERVICE_WIN32_OWN_PROCESS   = 0x00000010
SERVICE_WIN32_SHARE_PROCESS = 0x00000020
SERVICE_INTERACTIVE_PROCESS = 0x00000100
SERVICE_INTERACTIVE_SHARE_PROCESS = 0x00000120

; StartType values
SERVICE_BOOT_START          = 0x00000000
SERVICE_SYSTEM_START        = 0x00000001
SERVICE_AUTO_START          = 0x00000002
SERVICE_DEMAND_START        = 0x00000003
SERVICE_DISABLED            = 0x00000004

; ErrorControl values
SERVICE_ERROR_IGNORE        = 0x00000000
SERVICE_ERROR_NORMAL        = 0x00000001
SERVICE_ERROR_SEVERE        = 0x00000002
SERVICE_ERROR_CRITICAL      = 0x00000003

; Characteristic flags
NCF_VIRTUAL                 = 0x0001
NCF_WRAPPER                 = 0x0002
NCF_PHYSICAL                = 0x0004
NCF_HIDDEN                  = 0x0008
NCF_NO_SERVICE              = 0x0010
NCF_NOT_USER_REMOVABLE      = 0x0020
NCF_HAS_UI                  = 0x0080
NCF_MODEM                   = 0x0100

; Registry types
REG_MULTI_SZ                = 0x10000
REG_EXPAND_SZ               = 0x20000
REG_DWORD                   = 0x10001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\nettcpip.txt ===
[Strings]
Msft = "Microsoft"

;TCPIP strings
MS_TCPIP.DisplayName = "Internet Protocol (TCP/IP)"
MS_TCPIP.DHCP.DisplayName    = "DHCP Client"
MS_TCPIP.DHCP.ServiceDescription    = "Registers and updates IP addresses and DNS records for this computer. If this service is stopped, this computer will not receive dynamic IP addresses and DNS updates. If this service is disabled, any services that explicitly depend on it will fail to start." 
MS_TCPIP.TCPIP.ServiceDescription   = "TCP/IP Protocol Driver"

MS_TCPIP.Provider_Desc = "Tcpip"
MS_NTDS.Provider_Desc = "NTDS"

;WINS strings
MS_WINS.DisplayName = "WINS Client(TCP/IP) Protocol"
MS_WINS.LMHosts.DisplayName = "TCP/IP NetBIOS Helper"
MS_WINS.LMHosts.ServiceDescription = "Provides support for the NetBIOS over TCP/IP (NetBT) service and NetBIOS name resolution for clients on the network, therefore enabling users to share files, print, and log on to the network. If this service is stopped, these functions might be unavailable. If this service is disabled, any services that explicitly depend on it will fail to start."
;MS_WINS.WINS.ServiceDescription    = "WINS Client(TCP/IP) Protocol Driver"
MS_WINS.WINS.ServiceDescription    = "NetBios over Tcpip"

;ATM ARPC
MS_ATMARPC.DeviceDesc = "ATM ARP Client Protocol"

;DNSCACHE
MS_TCPIP.DNSCACHE.DisplayName = "DNS Client"
MS_TCPIP.DNSCACHE.ServiceDescription = "Resolves and caches Domain Name System (DNS) names for this computer. If this service is stopped, this computer will not be able to resolve DNS names and locate Active Directory domain controllers. If this service is disabled, any services that explicitly depend on it will fail to start."

; IPSEC
MS_TCPIP.IPSEC.ServiceDescription = "IPSEC driver"
MS_TCPIP.Oakley.ServiceDescription = "ISAKMP/Oakley Key Manager"
MS_TCPIP.PolicyAgent.DisplayName = "IPSEC Services"
MS_TCPIP.PolicyAgent.ServiceDescription = "Provides end-to-end security between clients and servers on TCP/IP networks. If this service is stopped, TCP/IP security between clients and servers on the network will be impaired. If this service is disabled, any services that explicitly depend on it will fail to start."

; Winsock Mobility strings
MS_TCPIP.Nla.DisplayName = "Network Location Awareness (NLA)"
MS_TCPIP.Nla.ServiceDescription = "Collects and stores network configuration and location information, and notifies applications when this information changes."
MS_TCPIP.Nla.Provider_Desc = "Network Location Awareness (NLA) Namespace"

IPSEC_Group_Name = "Administrative Tools"
IPSEC_Admin_Desc = "IP Security Management"

; NETBT_SMB
MS_NETBT_SMB.DisplayName = "Message-oriented TCP/IP Protocol (SMB session)"
MS_NETBT_SMB.HelpText = "A protocol layered on TCP/IP which preserves message boundaries.  This instance of the protocol is for use by the file sharing protocol."

MS_SMB.DisplayName = "Microsoft NetbiosSmb"
MS_SMB.HelpText = "A protocol layered on TCP/IP or TCP/IPv6 which preserves message boundaries.  This instance of the protocol is for use by the file sharing protocol."
MS_SMB.Smb.DisplayName   = "Message-oriented TCP/IP and TCP/IPv6 Protocol (SMB session)"
MS_SMB.Smb.ServiceDescription   = "Microsoft NetbiosSmb Device Driver"

; AddReg flags
FLG_ADDREG_TYPE_EXPAND_SZ   = 0x00020000
FLG_ADDREG_TYPE_MULTI_SZ    = 0x00010000
FLG_ADDREG_TYPE_DWORD       = 0x00010001
FLG_ADDREG_KEYONLY          = 0x00000010
FLG_ADDREG_SZ_NO_CLOBBER    = 0x00000002
FLG_ADDREG_MULTI_SZ_APPEND  = 0x0001000A
FLG_ADDREG_TYPE_BINARY      = 0x00000001
FLG_ADDREG_DWORD_NO_CLOBBER = 0x00010003
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\nettpsmp.txt ===
[Strings]
Msft                        = "Microsoft"

SimpTcp_Name                = "Simple TCP/IP Services"
SimpTcp_Desc                = "Supports the following TCP/IP services: Character Generator, Daytime, Discard, Echo, and Quote of the Day."
SimpTcp_HELP                = "Client programs for simple network protocols, including Character Generator, Daytime, Discard, Echo and Quote of the Day."

; ServiceType values
SERVICE_KERNEL_DRIVER       = 0x00000001
SERVICE_FILE_SYSTEM_DRIVER  = 0x00000002
SERVICE_ADAPTER             = 0x00000004
SERVICE_RECOGNIZER_DRIVER   = 0x00000008
SERVICE_WIN32_OWN_PROCESS   = 0x00000010
SERVICE_WIN32_SHARE_PROCESS = 0x00000020
SERVICE_INTERACTIVE_PROCESS = 0x00000100
SERVICE_INTERACTIVE_SHARE_PROCESS = 0x00000120

; StartType values
SERVICE_BOOT_START          = 0x00000000
SERVICE_SYSTEM_START        = 0x00000001
SERVICE_AUTO_START          = 0x00000002
SERVICE_DEMAND_START        = 0x00000003
SERVICE_DISABLED            = 0x00000004

; ErrorControl values
SERVICE_ERROR_IGNORE        = 0x00000000
SERVICE_ERROR_NORMAL        = 0x00000001
SERVICE_ERROR_SEVERE        = 0x00000002
SERVICE_ERROR_CRITICAL      = 0x00000003

; Registry types
REG_MULTI_SZ                = 0x10000
REG_EXPAND_SZ               = 0x20000
REG_DWORD                   = 0x10001

FLG_ADDREG_KEYONLY          = 0x00000010
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netupgrd.txt ===
[Strings]
Msft = "Microsoft"

CSID00=0B9398C0-DC7E-101B-A351-00AA004797A7     ; Global menu and propsheet
CSID01=208D2C60-3AEA-1069-A2D7-08002B30309D     ; Network Neighbourhood
CSID02=0B7F1760-B613-101B-B115-00AA00479C41     ; per file-folder menu and propsheet
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netupg.txt ===
[Strings]
Msft = "Microsoft"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netwlbs.txt ===
[Strings]
Msft = "Microsoft"

WLBS_Desc = "Network Load Balancing"

NLB_Manager="Network Load Balancing Manager"
Administrative_Tools="Administrative Tools"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netupnph.txt ===
[Strings]
Msft = "Microsoft"

UPNPHOST_Display = "Universal Plug and Play Device Host"
UPNPHOST_Desc = "Provides support to host Universal Plug and Play devices."

UPNP_Display = "SSDP Discovery Service"
UPNP_Desc = "Enables discovery of UPnP devices on your home network."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netwlbsm.txt ===
[Strings]
Msft = "Microsoft"

WLBS_Desc   = "Network Load Balancing"
WLBSMP_Desc = "Network Load Balancing Filter Device"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netwins.txt ===
[Strings]
Msft = "Microsoft"

WINSServer_Desc = "Windows Internet Name Service"

; Service names
WINS_Display = "Windows Internet Name Service (WINS)"
WINS_Desc = "Resolves NetBIOS names for TCP/IP clients by locating network services that use NetBIOS names. If this service is stopped, network NetBIOS services will not function properly. If this service is disabled, any services that explicitly depend on it will fail to start."
WINS_HELP = "Dynamic name registration and resolution service that maps NetBIOS computer names to IP addresses."

; Note to localizers: Please make sure this is the same description used in NT4
WINS_Desc_Old = "WINS Manager"
WINS_Group = "Administrative Tools"
WINS_Admin_Desc = "WINS"
WINS_Admin_HelpText = "Manages the Windows Internet Name Service (WINS), which translates NetBIOS computer names to IP addresses."

; Note to localizers: Please make sure this is the same description used in NT 3.51
WINS_Desc_Really_Old = "WINS Manager"
WINS_Group_Really_Old = "Network Administration"

FLG_ADDREG_KEYONLY = 0x0010
REG_MULTI_SZ = 0x10000
REG_EXPAND_SZ = 0x20000
REG_DWORD = 0x10001
SERVICE_DEMAND_START = 3
SERVICE_AUTO_START = 2
SERVICE_WIN32_SHARE_PROCESS = 32
SERVICE_FILE_SYSTEM_DRIVER = 2
SERVICE_WIN32_OWN_PROCESS = 16

; Characteristic flags
NCF_VIRTUAL                     = 0x0001
NCF_WRAPPER                     = 0x0002
NCF_PHYSICAL                    = 0x0004
NCF_HIDDEN                      = 0x0008
NCF_NO_SERVICE                  = 0x0010
NCF_NOT_USER_REMOVABLE          = 0x0020
NCF_HAS_UI                      = 0x0080
NCF_MODEM                       = 0x0100

KEY_OPTIONAL            = "SOFTWARE\Microsoft\Windows\CurrentVersion\Setup\OptionalComponents"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\nshownt5.txt ===
[Strings]
NETSHOW_PROGGROUP = "NetShow Services"
INSTALL_SERVER    = "Install NetShow Server"
INSTALL_TOOLS     = "Install NetShow Tools"
NETSHOW_DIR       = "NetShow Services"
ProgramF          = "Program Files"
SERVER_SHORT_DESC = "Sever"
TOOLS_SHORT_DESC  = "Tools"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\netwzc.txt ===
[Strings]
Msft = "Microsoft"
WZCSVC_Desc = "Wireless Configuration"
WZCSVC_HelpText = "Enables automatic configuration for IEEE 802.11 adapters. If this service is stopped, automatic configuration will be unavailable. If this service is disabled, any services that explicitly depend on it will fail to start."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\oobemui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui
*/

[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x409
LCID=0409
#endif

#if LANGUAGE_ID == 0x403
LCID=0403
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
#endif

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ntautorun.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ntapm.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
; User readable strings
;----------------------------------------------------------
[Strings]
MS  = "Microsoft"
MSFT = "Microsoft"
ApmClassName = "NT Apm/Legacy Support"
NTAPM.DeviceDesc = "NT Apm/Legacy Interface Node"
NtApm.SvcDesc = "NT Apm/Legacy Interface Driver"
SERVICE_KERNEL_DRIVER = 1
SERVICE_DEMAND_START  = 3
SERVICE_ERROR_NORMAL  = 1
SPSVCINST_ASSOCSERVICE= 0x00000002
NtApm_Log_Name = "NT APM/Legacy Bios"
REG_EXPAND_SZ          = 0x00020000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\oemmui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui
*/

[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x409
LCID=0409
#endif

#if LANGUAGE_ID == 0x403
LCID=0403
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
#endif

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\oeaccess.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

[Strings]
OE_NAME="Outlook Express"
OE_TIP = "Adds or removes access to Outlook Express from the Start menu"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ntgrip.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/


#if LANGUAGE_ID == 0x409
//USA specific sections
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
;localized strings
HID.ClassName                   = "Human Input Devices (HID)"
SvcDesc = "Gravis GamePort device driver"
VENDOR  = "Gravis"

XDGP    = "Gravis Xterminator Digital Gamepad (GamePort)"
XDC     = "Gravis Xterminator Dual Control (GamePort)"
BHK     = "Gravis BlackHawk Digital (GamePort)"
GPP     = "Gravis GamePad Pro (GamePort)"
ZEBRA   = "Gravis Eliminator Precision Pro (GamePort)"

; non localized strings
SPSVCINST_ASSOCSERVICE= 0x00000002
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ntprint.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
;
; Localizable Strings
;
[Strings]

#if LANGUAGE_ID == 0x804
; Manufactrers (Simlified Chinese)
Great_Wall="Great_Wall"
Legend="Legend"
Stone="Stone"

#elif LANGUAGE_ID == 0x404
; Manufacturers (Traditional Chinese)
ABiCO="ABiCO"
; Followings are Traditional Chinese strings kept in printer model names
; for backward compatibility with previous OS.  These must exactly match
; with the existing Windows 2000 translations
SILENT_MODEL="SILENT_MODEL"

#elif LANGUAGE_ID == 0x411
; Manufacturers (Japanese)
Apti="APTi"
Casio="Casio"
Hitachi="Hitachi"
Hitachi_Koki="Hitachi Koki"
JVC="JVC"
Sanyo="Sanyo"
Screen="Screen"
Sony="Sony"
TEC="Toshiba TEC"
; Followings are Japanese strings kept in printer model names for backward
; compatibility with previous OS.  These must exactly match with the
; existing Windows 2000 translations
FAST_HORZ_PRINTER="FAST_HORZ_PRINTER"
MINI_HORZ_PRINTER="MINI_HORZ_PRINTER"
DUAL_PRINTER="DUAL_PRINTER"
INKJET_PRINTER="INKJET_PRINTER"
LASER_PRINTER="LASER_PRINTER"
PAGE_PRINTER="PAGE_PRINTER"

#elif LANGUAGE_ID == 0x412
; Manufactrers (Korean)
MFG_DAEWOO="DAEWOO"
MFG_FIRSTEC="FIRSTEC"
MFG_FUJI_XEROX_KOREA="FUJI_XEROX_KOREA"
MFG_HYPERTECH="HYPERTECH"
MFG_KOREA_XEROX="KOREA XEROX"
MFG_LOTTE_CANON="LOTTE CANON"
MFG_LG="LG ELECTRONICS"
MFG_POSDATA="POSDATA"
MFG_QNIX="QNIX"
;MFG_SAMSUNG="SAMSUNG"
MFG_SSANGYONG="SSANGYONG"
MFG_SINDORICOH="SINDORICOH"
MFG_SUNJIN_TECH="SUNJINTECH"
MFG_TRIGEM="TRIGEM"
MFG_VERITEK="VERITEK"
MFG_YANGJAE="YANGJAE"
; Followings are Korean strings kept in printer model names for backward
; compatibility with previous OS.  These must exactly match with the
; existing Windows 2000 translations
DAEU="DAEU"
GEULCORONG="GEULCORONG"
GYOYUGMANG="GYOYUGMANG"
HAENGMANG="HAENGMANG"
HAIPEOTEKEU="HAIPEOTEKEU"
JEILJEONGMIL="JEILJEONGMIL"
KEOMPYUTEO="KEOMPYUTEO"
KEUMSEONG="KEUMSEONG"
KORIAJEROGSEU="KORIAJEROGSEU"
KYUNIGSEU="KYUNIGSEU"
LG_JEONJA="LG_JEONJA"
MODEU="MODEU"
POSEUDEITA="POSEUDEITA"
ROSDEKAENON="ROSDEKAENON"
SAMBO="SAMBO"
SAMSEONG="SAMSEONG"
SEONJINTEKEU="SEONJINTEKEU"
SINDORIKO="SINDORIKO"
SSANGYONG="SSANGYONG"
YANGJAE="YANGJAE"

#endif


WinNET2003="Windows Server 2003 CD-ROM"
MS="Microsoft"
PrinterClassName="Printers"
BrParWdm.SvcDesc="Brother WDM Parallel Driver"
PJL_MONITOR="PJL Language Monitor,PJLMON.DLL"
BJ_MONITOR="BJ Language Monitor,CNBJMON.DLL"
BJ_MONITOR2="BJ Language Monitor2,CNBJMON2.DLL"
; Manufacturers
Agfa="Agfa"
Alps="Alps"
Apollo="Apollo"
Apple="Apple"
APS-PS="APS-PS"
AST="AST"
AT&T="AT&T"
Brother="Brother"
Bull="Bull"
C-Itoh="C-Itoh"
Canon="Canon"
Citizen="Citizen"
ColorAge="ColorAge"
Compaq="Compaq"
Dataproducts="Dataproducts"
Diconix="Diconix"
Digital="Digital"
Epson="Epson"
Fujitsu="Fujitsu"
Fuji_Xerox="Fuji Xerox"
GCC="GCC"
Generic="Generic"
Gestetner="Gestetner"
HP="HP"
IBM="IBM"
infotec="infotec"
Iwatsu="Iwatsu"
Kodak="Kodak"
Konica="Konica"
Kyocera="Kyocera Mita"
Lanier="Lanier"
LaserMaster="LaserMaster"
Lexmark="Lexmark"
Linotronic="Linotronic"
Mannesmann_Tally="Mannesmann Tally"
Microsoft="Microsoft"
Microtek="Microtek"
Minolta="Minolta"
MINOLTA-QMS="MINOLTA-QMS"
Monotype="Monotype"
NEC="NEC"
NRG="NRG"
Oce="Oce"
Oki="Oki"
Okidata="Okidata"
Olivetti="Olivetti"
Panasonic="Panasonic"
Printronix="Printronix"
QMS="QMS"
Quad="Quad"
Qume="Qume"
Radio_Shack="Radio Shack"
Ricoh="Ricoh"
Riso="Riso"
Royal="Royal"
Samsung="Samsung"
Savin="Savin"
Schlumberger="Schlumberger"
Scitex="Scitex"
Seiko="Seiko"
Seikosha="Seikosha"
Sharp="Sharp"
Shinko="Shinko"
Star="Star"
Tally="Tally"
Tandy="Tandy"
Tegra="Tegra"
Tektronix="Tektronix"
Texas_Instruments="Texas Instruments"
Toshiba="Toshiba"
Unisys="Unisys"
Varityper="Varityper"
Wang="Wang"
Wipro="Wipro ePeripherals"
Xante="Xante"
Xerox="Xerox"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\pchmui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui
*/

[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x409
LCID=0409
#endif

#if LANGUAGE_ID == 0x403
LCID=0403
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
#endif

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\oobe.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\optional.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
KEY_OPTIONAL        = "SOFTWARE\Microsoft\Windows\CurrentVersion\Setup\OptionalComponents"
AccessOpt_DESC      = "Accessibility Wizard"
AccessOpt_TIP       = "Use the Accessibility Wizard to configure your system to meet your vision, hearing, and mobility needs."
ACCESSIB_GROUP_NAME = "Accessories\Accessibility"
ACCWIZ_NAME         = "Accessibility Wizard"
ACCWIZ_EXE          = "accwiz.exe"
Scheme1             = "Windows Black "
Scheme2             = "Windows Black (large)"
Scheme3             = "Windows Black (extra large)"
Scheme4             = "Windows Inverted"
Scheme5             = "Windows Inverted (large)"
Scheme6             = "Windows Inverted (extra large)"
Scheme7             = "Windows Standard (large)"
Scheme8             = "Windows Standard (extra large)"

;
; Used to keep the line length above to a minimum - no need to localize
;

C0              = "\cursors\arrow_"
C1              = "\cursors\help_"
C2              = "\cursors\wait_"
C3              = "\cursors\busy_"
C4              = "\cursors\cross_"
C5              = "\cursors\beam_"
C6              = "\cursors\pen_"
C7              = "\cursors\no_"
C8              = "\cursors\size4_"
C9              = "\cursors\size3_"
CA              = "\cursors\size2_"
CB              = "\cursors\size1_"
CC              = "\cursors\move_"
CD              = "\cursors\up_"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\pchealth.txt ===
[Strings]
;Non-Localizable strings:
KEY_CONTROL    	 = "System\CurrentControlSet\Control"
KEY_SERVICES   	 = "System\CurrentControlSet\Services"
KEY_EXPLORER   	 = "Software\Microsoft\Windows\CurrentVersion\explorer"
  
KEY_RENAME     	 = "Software\Microsoft\Windows\CurrentVersion\RenameFiles"
KEY_DEL        	 = "Software\Microsoft\Windows\CurrentVersion\DeleteFiles"
KEY_RUN        	 = "Software\Microsoft\Windows\CurrentVersion\Run"
KEY_RUNONCE    	 = "Software\Microsoft\Windows\CurrentVersion\RunOnce"
KEY_RUNSRVCS   	 = "Software\Microsoft\Windows\CurrentVersion\RunServices"
KEY_APPPATHS   	 = "Software\Microsoft\Windows\CurrentVersion\App Paths"
KEY_UNINSTALL  	 = "Software\Microsoft\Windows\CurrentVersion\Uninstall"
KEY_SAFEBOOT   	 = "System\CurrentControlSet\Control\SafeBoot"
  
KEY_PFPROFILE  	 = "Software\Policies\Microsoft\Windows\System\PCHealth"
  
KEY_SVCHOST    	 = "Software\Microsoft\Windows NT\CurrentVersion\Svchost"
  
KEY_LAME       	 = "SOFTWARE\Microsoft\PCHealth\Clients\Dialog Comments"
KEY_COMMENT_LINK = "Control Panel\Desktop"

;Localizable strings:
ProductName        = "Microsoft PCHealth"

MS_RCINCIDENT_FILE = "Microsoft Remote Control Incident File"

BugRep_DESC        = "File a bug report"

LAMEBTN_TEXT       = "Comments?"

APPLICATION_NAME   = "Help and Support Center"

LCID               = "0409"

LANGUAGE_NAME      = "English"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ovsound.txt ===
;
; OVSOUND.INF
; Logitech Video Camera Microphone Installation file.
; Copyright (c)1996-2000 Logitech Inc.
;

/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID == 0x409
//USA specific sections
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

[Strings]
;ServiceType
SERVICE_KERNEL_DRIVER=1
;StartType
SERVICE_SYSTEM_START=1
;ErrorControl
SERVICE_ERROR_NORMAL=1

PVD="Logitech"
MfgName="Logitech"
DISK_NAME="Logitech USB Video Camera Disk"
USBGenericDesc="Logitech Microphone"

USB\VID_046D&PID_0801.DeviceDesc="Logitech Microphone (Web)"
USB\VID_046D&PID_0850.DeviceDesc="Logitech Microphone (Web)"
USB\VID_046D&PID_08B0.DeviceDesc="Logitech Microphone (Pro 3000)"
USB\VID_046D&PID_08C0.DeviceDesc="Logitech Microphone (Pro 3000)"

; The services names must be different for each type of driver!!!
wdmaud.SvcDesc = "Microsoft WDM Virtual Wave Driver (WDM)"
LUSBAudio.SvcDesc="Logitech USB Microphone"
MediaPrefered="Software\Microsoft\Multimedia\Sound Mapper"

Proxy.CLSID     = "{17CCA71B-ECD7-11D0-B908-00A0C9223196}"

KSCATEGORY_AUDIO="{6994ad04-93ef-11d0-a3cc-00a0c9223196}"
KSCATEGORY_RENDER="{65E8773E-8F56-11D0-A3B9-00A0C9223196}"
KSCATEGORY_CAPTURE="{65E8773D-8F56-11D0-A3B9-00A0C9223196}"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ovcomp.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID == 0x409
//USA specific sections
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
LogitechMfg="Logitech"
DISK_NAME="Logitech USB Video Camera Disk"
PVD="Logitech"
USBClassName="Universal serial bus controller"
StandardHub.SvcDesc="Logitech USB Composite Device"
USB\VID_046D&PID_0801.DeviceDesc="Logitech USB Camera (Web)"
USB\VID_046D&PID_0850.DeviceDesc="Logitech USB Camera (Web)"
USB\VID_046D&PID_08B0.DeviceDesc="Logitech USB Camera (Pro 3000)"
USB\VID_046D&PID_08C0.DeviceDesc="Logitech USB Camera (Pro 3000)"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\perfmui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui
*/

[Strings]
; non-localizeable
DATAFILE1=perfd
DATAFILE2=perfi
drivername1=ASP
drivername2=PBServerMonitor
drivername3=DHCPServer
drivername4=DNS
drivername5=ESENT
drivername6=MSFTPSVC
drivername7=fax
drivername8=IAS
drivername9=inetinfo
drivername10=MSMQ
drivername12=MSDTC
drivername13=NNTPSVC
drivername14=NTDS
drivername15=ntfsdrv
drivername16=ContentIndex
drivername17=ContentFilter
drivername18=ISAPISearch
drivername19=.NET CLR Networking
drivername20=Psched
drivername21=RemoteAccess
drivername22=.NETFramework
drivername23=SmtpSvc
drivername24=TermService
drivername25=W3SVC
drivername26=ASP.NET_1.0.3705.24
drivername27=ASP.NET
drivername28=FileReplicaConn
drivername29=FileReplicaSet
drivername30=ipsec
drivername31=POP3SVC

#if LANGUAGE_ID == 0x409
LCID=0409
LCID2=009
#endif

#if LANGUAGE_ID == 0x403
LCID=0403
LCID2=003
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
LCID2=00C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
LCID2=00A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
LCID2=010
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
LCID2=01D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
LCID2=013
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
LCID2=016
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
LCID2=00B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
LCID2=014
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
LCID2=006
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
LCID2=00E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
LCID2=015
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
LCID2=019
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
LCID2=005
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
LCID2=008
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
LCID2=016
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
LCID2=01F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
LCID2=011
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
LCID2=012
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
LCID2=007
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
LCID2=0804
DATAFILE1=prfd
DATAFILE2=prfi
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
LCID2=0404
DATAFILE1=prfd
DATAFILE2=prfi
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
LCID2=001
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
LCID2=00D
#endif

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ovcam.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID == 0x409
//USA specific sections
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
;----------------
; Non-Localizable
;----------------

; note: only register value is case sensitive, key is not.
ProxyVCap.CLSID="{17CCA71B-ECD7-11D0-B908-00A0C9223196}"
KSCATEGORY_CAPTURE="{65E8773D-8F56-11D0-A3B9-00A0C9223196}"
KSCATEGORY_VIDEO="{6994AD05-93EF-11D0-A3CC-00A0C9223196}"
SERVICE_KERNEL_DRIVER=1
; PnP should use demand start
SERVICE_DEMAND_START=3
SERVICE_ERROR_NORMAL=1

MediaResourcesMSVideo="SYSTEM\CurrentControlSet\Control\MediaResources\msvideo"
MMDriverDesc="Software\Microsoft\Windows NT\CurrentVersion\drivers.desc"
MMDrivers="Software\Microsoft\Windows NT\CurrentVersion\Drivers32"

; IHV's extension DLL
ExtensionDLL = "OVUI2.dll"
RunOnce="SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"

Manual08B0=""
ProductInfo08B0="Logitech Camera (Pro 3000)"

GUID.Still="{FB6C428a-0353-11d1-905F-0000C0CC16BA}"

; OVComS button app.
OVComSApp="QuickCam.exe"
OVComSArg="/Button"

;----------------
; Localizable
;----------------
PVD="Logitech"
LogitechMfg="Logitech"
DISK_NAME="Logitech USB Video Camera Disk"
USB\VID_046D&PID_0801.DeviceDesc="Logitech QuickCam Web (0801)"
USB\VID_046D&PID_0840.DeviceDesc="Logitech QuickCam Express"
USB\VID_046D&PID_0850.DeviceDesc="Logitech QuickCam Web"
USB\VID_046D&PID_D001.DeviceDesc="Logitech QuickCam Pro USB"
USB\VID_046D&PID_08B0.DeviceDesc="Logitech QuickCam Pro 3000 (08B0)"
USB\VID_046D&PID_08C0.DeviceDesc="Logitech QuickCam Pro 3000"

LVfWWDMDriverDesc="Logitech USB Video Camera"
CAM2.ExtensionDLL="CamExO20.dll"

;----------------------------
; DShow Extension PlugIn Strings
;----------------------------
PlugIn="PlugIn_SAA8116CameraProps"
CLSID_SAA8116="{F83865C0-92C3-11d3-B41E-0010DC973BDB}"
CLSID_PropPage_Image_SAA8116="{F83865C2-92C3-11d3-B41E-0010DC973BDB}"
CLSID_PropPage_Camera_SAA8116="{F83865C3-92C3-11d3-B41E-0010DC973BDB}"
PropPage_i="PropPage_Image_SAA8116_Camera"
PropPage_c="PropPage_Camera_SAA8116_Camera"

PropPage_CustomVideoProcAmp= "Custom VideoProcAmp Property Page"
PropPage_CustomCameraProp="Custom Camera Property Page"
PropPage_StillStreamConfig="StillStreamConfig Property Page"
PlugIn_IStillStreamConfig= "WDM StillStreamConfig Interface Handler"
PlugIn_CustomCameraProp= "WDM Custom ICustomCamera Interface handler"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\pcmcia.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...

#elif LANGUAGE_ID == 0x804
//CHS specific sections

#elif LANGUAGE_ID == 0x404
//CHT specific sections

#elif LANGUAGE_ID == 0x411
//JPN specific sections
@n:[Manufacturer]
@n:%NEC%=NEC
@n:
@n:[NEC]
@n:%*nEC1E01.DeviceDesc%=PCIC,*nEC1E01
@n:%*nEC8091.DeviceDesc%=PCIC,*nEC8091
@n:%*nEC8121.DeviceDesc%=PCIC,*nEC8121
@n:%*nECAC12.DeviceDesc%=TICARDBUS, PCI\VEN_104C&DEV_AC12
@n:%*nECAC15.DeviceDesc%=TICARDBUS, PCI\VEN_104C&DEV_AC15
@n:
@n:[TICBReg]
@n:HKLM,"System\CurrentControlSet\Services\Pcmcia\Parameters","ControllerPowerUpDelay",0x00010001,500000
@n:

#elif LANGUAGE_ID == 0x412
//KOR specific sections

#endif

// String section below for localizers
[Strings]

#if LANGUAGE_ID == 0x411
@n:*nEC1E01.DeviceDesc="NEC PCMCIA Controller"
@n:*nEC8091.DeviceDesc="NEC PC-9801-102"
@n:*nEC8121.DeviceDesc="NEC PCJ[hXbg݃A_v^"
@n:*nECAC12.DeviceDesc="PCI-1130 CardBus Controller"
@n:*nECAC15.DeviceDesc="PCI-1131 CardBus Controller"
#endif

MS="Microsoft"
PCMCIAClassName="PCMCIA adapters"
;
;   Manufacturer name strings
;
GenDrvs="(Standard PCMCIA drivers)"
IntelMfg="Intel"
DatabookMfg="Databook"
VLSIMfg="VLSI"
CompaqMfg="Compaq"
CirrusMfg="Cirrus Logic"
VademMfg="Vadem"
SCM="SCM SwapBox"
Toshiba="Toshiba"
TI="Texas Instruments"
OPTi="OPTi"
Ricoh="RICOH"
Trident="Trident"
O2MicroMfg="O2Micro"
ACTIONTEC="ActionTec"
NEC="NEC"

;
;   Device Decription strings
;
PCCard.DeviceDesc="PCMCIA Bus driver"
GenPCIC="PCIC or compatible PCMCIA controller"
IntelProto="Intel PCIC compatible PCMCIA controller"
Cirrus.DeviceDesc="Cirrus Logic PCIC compatible PCMCIA controller"
PCI\VEN_1013&DEV_1100.DeviceDesc="Cirrus Logic PCIC compatible PCI to PCMCIA Bridge"
Vadem.DeviceDesc="Vadem PCIC compatible PCMCIA controller"
*VDM0469.DeviceDesc="Vadem PCIC compatible Plug and Play PCMCIA controller"
SCM.DeviceDesc="SCM SwapBox Family PCMCIA controller"
*SCM0469.DeviceDesc="SCM SwapBox Family Plug and Play PCMCIA controller"

;
;   Strings with "*PNPxxxx" are descriptions used by hardware detection
;   for PCMCIA controllers
;
*PNP0E00.DeviceDesc="PCIC Compatible PCMCIA Controller"
*PNP0E02.DeviceDesc="VLSI PCIC Compatible PCMCIA Controller with ELC Extensions"
*IBM0030.DeviceDesc="IBM King ISA Plug and Play PCMCIA Controller"
*DBK0000.DeviceDesc="Databook ISA PCMCIA Controller"
*DBK0402.DeviceDesc="Databook Plug and Play PCMCIA Controller based on DB86084"
*DBK0204.DeviceDesc="Databook Plug and Play PCMCIA Controller based on DB86084"
*DBK1402.DeviceDesc="Databook Plug and Play PCMCIA Controller based on DB86184"
*DBK0214.DeviceDesc="Databook Plug and Play PCMCIA Controller based on DB86184"
PCI\VEN_10B3&DEV_3106.DeviceDesc="Databook DB87144 CardBus Controller"
MXTR.Deskrunner="MobileMax Deskrunner ISA PCMCIA Controller"
*CPQA0DE.DeviceDesc="Compaq PCMCIA Controller"
PCI\VEN_8086&DEV_1221.DeviceDesc="Intel 82092AA PCI to PCMCIA Bridge"
IntelPCI="Intel PCI to PCMCIA Bridge"
PCI\CC_0607.DeviceDesc="Generic CardBus Controller"
PCI\VEN_1179&DEV_060A.DeviceDesc="Toshiba ToPIC95 CardBus Controller"
PCI\VEN_1179&DEV_060F.DeviceDesc="Toshiba ToPIC97 CardBus Controller"
PCI\VEN_1179&DEV_0617.DeviceDesc="Toshiba ToPIC100 CardBus Controller"
PCI\VEN_104C&DEV_AC12.DeviceDesc="Texas Instruments PCI-1130 CardBus Controller"
PCI\VEN_104C&DEV_AC13.DeviceDesc="Texas Instruments PCI-1031 PCMCIA Controller"
PCI\VEN_104C&DEV_AC15.DeviceDesc="Texas Instruments PCI-1131 CardBus Controller"
PCI\VEN_104C&DEV_AC16.DeviceDesc="Texas Instruments PCI-1250 CardBus Controller"
PCI\VEN_104C&DEV_AC17.DeviceDesc="Texas Instruments PCI-1220 CardBus Controller"
PCI\VEN_104C&DEV_AC18.DeviceDesc="Texas Instruments PCI-1260 CardBus Controller"
PCI\VEN_104C&DEV_AC19.DeviceDesc="Texas Instruments PCI-1221 CardBus Controller"
PCI\VEN_104C&DEV_AC1A.DeviceDesc="Texas Instruments PCI-1210 CardBus Controller"
PCI\VEN_104C&DEV_AC1B.DeviceDesc="Texas Instruments PCI-1450 CardBus Controller"
PCI\VEN_104C&DEV_AC1C.DeviceDesc="Texas Instruments PCI-1225 CardBus Controller"
PCI\VEN_104C&DEV_AC1D.DeviceDesc="Texas Instruments PCI-1251 CardBus Controller"
PCI\VEN_104C&DEV_AC1E.DeviceDesc="Texas Instruments PCI-1211 CardBus Controller"
PCI\VEN_104C&DEV_AC1F.DeviceDesc="Texas Instruments PCI-1251B CardBus Controller"
PCI\VEN_104C&DEV_AC40.DeviceDesc="Texas Instruments PCI-4450 CardBus Controller"
PCI\VEN_104C&DEV_AC41.DeviceDesc="Texas Instruments PCI-4410 CardBus Controller"
PCI\VEN_104C&DEV_AC42.DeviceDesc="Texas Instruments PCI-4451 CardBus Controller"
PCI\VEN_104C&DEV_AC43.DeviceDesc="Texas Instruments PCI-4550 CardBus Controller"
PCI\VEN_104C&DEV_AC44.DeviceDesc="Texas Instruments PCI-4510 CardBus Controller"
PCI\VEN_104C&DEV_AC46.DeviceDesc="Texas Instruments PCI-4520 CardBus Controller"
PCI\VEN_104C&DEV_AC50.DeviceDesc="Texas Instruments PCI-1410 CardBus Controller"
PCI\VEN_104C&DEV_AC51.DeviceDesc="Texas Instruments PCI-1420 CardBus Controller"
PCI\VEN_104C&DEV_AC52.DeviceDesc="Texas Instruments PCI-1451 CardBus Controller"
PCI\VEN_104C&DEV_AC53.DeviceDesc="Texas Instruments PCI-1421 CardBus Controller"
PCI\VEN_104C&DEV_AC54.DeviceDesc="Texas Instruments PCI-1620 CardBus Controller with UltraMedia"
PCI\VEN_104C&DEV_AC55.DeviceDesc="Texas Instruments PCI-1520 CardBus Controller"
PCI\VEN_104C&DEV_AC56.DeviceDesc="Texas Instruments PCI-1510 CardBus Controller"
PCI\VEN_104C&DEV_AC57.DeviceDesc="Texas Instruments PCI-1530 CardBus Controller"
PCI\VEN_104C&DEV_AC58.DeviceDesc="Texas Instruments PCI-1515 CardBus Controller"
PCI\VEN_104C&DEV_AC59.DeviceDesc="Texas Instruments PCI-1621 CardBus Controller with UltraMedia"
PCI\VEN_104C&DEV_AC5A.DeviceDesc="Texas Instruments PCI-1610 CardBus Controller with UltraMedia"
PCI\VEN_1045&DEV_C824.DeviceDesc="OPTi 82C824 CardBus Controller"
PCI\VEN_1045&DEV_C814.DeviceDesc="OPTi 82C814 Docking Controller"
PCI\VEN_1013&DEV_1110.DeviceDesc="Cirrus Logic PD6832 CardBus Controller"
PCI\VEN_1013&DEV_1112.DeviceDesc="Cirrus Logic PD6834 CardBus Controller"
PCI\VEN_1180&DEV_0466.DeviceDesc="Ricoh RL5C466 CardBus Controller"
PCI\VEN_1180&DEV_0465.DeviceDesc="Ricoh RL5C465 CardBus Controller"
PCI\VEN_1180&DEV_0476.DeviceDesc="Ricoh R/RL/5C476(II) or Compatible CardBus Controller"
PCI\VEN_1180&DEV_0478.DeviceDesc="Ricoh R/RL/RB/5C478(II), R5C522 or Compatible CardBus Controller"
PCI\VEN_1180&DEV_0475.DeviceDesc="Ricoh R/RL/RT/RC/5C475(II), R5C520 or Compatible CardBus Controller"
Trident094.DeviceDesc="Trident Omega-82C094 PCI to PCMCIA Bridge"
PCI\VEN_1023&DEV_0194.DeviceDesc="Trident 82C194 CardBus Controller"
PCI\VEN_1217&DEV_6729.DeviceDesc="O2Micro OZ6729 PCI to PCMCIA Bridge"
PCI\VEN_1217&DEV_673A.DeviceDesc="O2Micro OZ6730 PCI to PCMCIA Bridge"
PCI\VEN_1217&DEV_6832.DeviceDesc="O2Micro OZ6832/6833 CardBus Controller"
PCI\VEN_1217&DEV_6836.DeviceDesc="O2Micro/ROHM OZ6836/6860 CardBus Controller"
PCI\VEN_1217&DEV_6872.DeviceDesc="O2Micro OZ6812 CardBus Controller"
PCI\VEN_1217&DEV_6933.DeviceDesc="O2Micro OZ6933/711E1 CardBus Controller"
PCI\VEN_1217&DEV_6972.DeviceDesc="O2Micro OZ6912/711E0 CardBus Controller"
PCI\VEN_1217&DEV_6925.DeviceDesc="O2Micro OZ6922 CardBus Controller"
AEI0218.DeviceDesc="ActionTec PcCard Reader"
PCI\VEN_1033&DEV_003E.DeviceDesc="NEC NAPCCARD CardBus Controller"

;
;
;
CARDBUSSlot = "CardBus Slot %1!u!"
PCCARDSlot  = "PCCard Slot %1!u!"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\perms.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
;
; Empty
;
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\phildec.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif


;---------------------------------------------------------------
; S t r i n g s
;---------------------------------------------------------------

[Strings]
;
; ATI Localizable
;
PlugIn_MVDetection="WDM Analogue Video Streaming Macrovision Detection Property Set Interface Handler"
PlugIn_MVProtection="WDM Analogue Video Streaming Macrovision Protection Property Set Interface Handler"
PlugIn_MVDetectionPropertyPage="Macrovision Detection Property Page"

;----------------
; Non-Localizable
;----------------
SERVICE_KERNEL_DRIVER=1
SERVICE_AUTO_START=2
SERVICE_ERROR_NORMAL=1

;----------------
; Localizable
;----------------
Philips            = "Philips Semiconductors"
Ph                 = "Philips"
captureClassName   = "Sound, video and game controllers"
PhilDec.DeviceDesc = "Philips WDM Video Decoder"
PhilDec.Capture    = "Philips PhilDec Capture"
PhilDec.Crossbar   = "Philips PhilDec Crossbar"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\phdsext.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
; non-localizeable

MediaCategories="SYSTEM\CurrentControlSet\Control\MediaCategories"
GUID.Still="{FB6C428a-0353-11d1-905F-0000C0CC16BA}"

; localizeable

PHIL= "Philips"

PropPage_StillStreamConfig="StillStreamConfig Property Page"
PlugIn_IStillStreamConfig= "WDM StillStreamConfig Interface Handler"
PlugIn_CustomCameraProp= " WDM Custom ICustomCamera Interface handler"

;----------------------------
; DShow Extension PlugIn Strings
;----------------------------
PlugIn="PlugIn_PCA675VCCameraProps"
CLSID_PCA675VC="{35DBC300-F98F-11D2-AFD0-00104B13EAF2}"
CLSID_PCA680VC="{35DBC300-F98F-11D2-AFD0-00104B13EAF2}"
CLSID_PCA690VC="{35DBC300-F98F-11D2-AFD0-00104B13EAF2}"
CLSID_PropPage_Image_PCA675VC="{D4301F00-DD3E-11d2-AFD0-00104B13EAF2}"
CLSID_PropPage_Camera_PCA675VC="{D4301F01-DD3E-11d2-AFD0-00104B13EAF2}"
CLSID_PropPage_Image_PCA680VC="{D4301F00-DD3E-11d2-AFD0-00104B13EAF2}"
CLSID_PropPage_Camera_PCA680VC="{D4301F01-DD3E-11d2-AFD0-00104B13EAF2}"
CLSID_PropPage_Image_PCA690VC="{D4301F00-DD3E-11d2-AFD0-00104B13EAF2}"
CLSID_PropPage_Camera_PCA690VC="{D4301F01-DD3E-11d2-AFD0-00104B13EAF2}"
PropPage_i="PropPage_Image_PCA675-680VCCamera"
PropPage_c="PropPage_Camera_PCA675-680VCCamera"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\phil1vid.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]

;----------------
; Non-Localizable
;----------------

ProxyVCap.CLSID="{17CCA71B-ECD7-11D0-B908-00A0C9223196}"
KSCATEGORY_CAPTURE="{65E8773D-8F56-11D0-A3B9-00A0C9223196}"
KSCATEGORY_VIDEO="{6994AD05-93EF-11D0-A3CC-00A0C9223196}"
SERVICE_KERNEL_DRIVER=1
SERVICE_DEMAND_START=3
SERVICE_ERROR_NORMAL=1

CAM.ExtensionDLL = "philcam1.dll"


philips="Philips CE"
PName="Philips I&C"
Phil1Cam.DeviceDesc="Philips 645 Digital Camera; Video"
Phil2Cam.DeviceDesc="Philips 646 Digital Camera; Video"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\pmxmcro.txt ===
[Strings]
#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
#elif LANGUAGE_ID == 0x804
#elif LANGUAGE_ID == 0x404
#elif LANGUAGE_ID == 0x411
#elif LANGUAGE_ID == 0x412
#endif

Msft="Microsoft"
Mfg="Visioneer"

ScanButton="Scan Button"
CopyPrintButton="Copy/Print Button"
FaxButton="Fax Button"
EMailButton="E-Mail Button"
OCRButton="OCR Button"
CustomButton="Custom Button"

pmxscan.SvcDesc= "USB Scanner Driver"
G2E.CCD.600.E1.PI   = "Colorado USB 19200"
;G2E.CCD.300.E1.PI  = "Colorado USB 9600"
;G2E.CCD.300.E3.PI  = "Colorado 600u"
;G2E.CCD.600.E3.PI  = "Colorado 1200u"

G2E.CCD.300.E3.Visi = "Visioneer 5300 USB"
G2E.CCD.600.E3.Visi = "Visioneer 7600 USB"
G2E.CCD.600.E3.6100 = "Visioneer 6100 USB"
G2E.CCD.600.E4.8600 = "Visioneer OneTouch 8600 USB"
G2E.CCD.600.E4.6400 = "Visioneer 6400 USB"
G4.CCD.600.E5.8100  = "Visioneer OneTouch 8100 USB"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\phil2vid.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]

;----------------
; Non-Localizable
;----------------

ProxyVCap.CLSID="{17CCA71B-ECD7-11D0-B908-00A0C9223196}"
KSCATEGORY_CAPTURE="{65E8773D-8F56-11D0-A3B9-00A0C9223196}"
KSCATEGORY_VIDEO="{6994AD05-93EF-11D0-A3CC-00A0C9223196}"
SERVICE_KERNEL_DRIVER=1
SERVICE_DEMAND_START=3
SERVICE_ERROR_NORMAL=1

;----------------
; Localizable
;----------------

CAM2.ExtensionDLL="phvfwext.dll"

philips="Philips CE"
PName="Philips I&C"

Phil3Cam.DeviceDesc="Philips PCVC675 USB VGA Camera; Video"
Phil4Cam.DeviceDesc="Philips PCVC680 USB VGA Camera; Video"
Phil5Cam.DeviceDesc="Philips PCVC690 USB VGA Camera; Video"

phil2vid.ServDeviceDesc="Philips USB VGA Camera"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\pinball.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
KEY_APP_PATH    = "SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths"
GAMES_DESC      = "Games"
PINBALL_Desc    = "Pinball"
PINBALL_TIP     = "3-D arcade pinball game."
Pinball_Infotip = "Begins a game of 3-D Pinball."
INSTALL_DIR     = "Windows NT\Pinball"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\philtune.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
Msft                = "Philips Semiconductors"
MfgName             = "Philips"
PhilTune.CLSID      ="{17CCA71B-ECD7-11D0-B908-00A0C9223196}"  ; KsProxy.ax's ID, REQUIRED
PhilTune.DeviceDesc = "Philips WDM TVTuner"
PhilTune.FriendlyName = "Philips TV Tuner"
PhilTune.Tuner      = "PhilTune.Tuner"
KSNAME_Filter         = "{9B365890-165F-11D0-A195-0020AFD156E4}"
SvcDesc             = "Philips TV Tuner"
;
; The following items should be moved to KS_registration - TCP
;
Plugin_BdaDevice        ="BDA Device Control Plug-in"
BDAcatID                ="{FD0A5AF4-B41D-11d2-9C95-00C04F7971E0}"
AMcatID                 ="{DA4E3DA0-D07D-11d0-BD50-00A0C911CE86}"
BDAReceivers            ="BDA Streaming Receiver Components"
MediaCategories         ="SYSTEM\CurrentControlSet\Control\MediaCategories"
Pin.BdaTransport        ="BDA Transport Stream"
GUID.BdaTransport       ="{78216A81-CFA8-493e-9711-36A61C08BD9D}"
GUID.BdaDeviceControl   ="{FD0A5AF3-B41D-11d2-9C95-00C04F7971E0}"

;
; ServiceType values
SERVICE_KERNEL_DRIVER       = 0x00000001
SERVICE_FILE_SYSTEM_DRIVER  = 0x00000002
SERVICE_ADAPTER             = 0x00000004
SERVICE_RECOGNIZER_DRIVER   = 0x00000008
SERVICE_WIN32_OWN_PROCESS   = 0x00000010
SERVICE_WIN32_SHARE_PROCESS = 0x00000020
SERVICE_INTERACTIVE_PROCESS = 0x00000100
SERVICE_INTERACTIVE_SHARE_PROCESS = 0x00000120

; StartType values
SERVICE_BOOT_START          = 0x00000000
SERVICE_SYSTEM_START        = 0x00000001
SERVICE_AUTO_START          = 0x00000002
SERVICE_DEMAND_START        = 0x00000003
SERVICE_DISABLED            = 0x00000004

; ErrorControl values
SERVICE_ERROR_IGNORE        = 0x00000000
SERVICE_ERROR_NORMAL        = 0x00000001
SERVICE_ERROR_SEVERE        = 0x00000002
SERVICE_ERROR_CRITICAL      = 0x00000003

; Characteristic flags
NCF_VIRTUAL                 = 0x0001
NCF_WRAPPER                 = 0x0002
NCF_PHYSICAL                = 0x0004
NCF_HIDDEN                  = 0x0008
NCF_NO_SERVICE              = 0x0010
NCF_NOT_USER_REMOVABLE      = 0x0020
NCF_HAS_UI                  = 0x0080
NCF_MODEM                   = 0x0100

; Registry types
REG_MULTI_SZ                = 0x10000
REG_EXPAND_SZ               = 0x20000
REG_DWORD                   = 0x10001

; Win9x Compatible Types
REG_BINARY                  = 17
REG_SZ                      = 0

; Service install flags
SPSVCINST_TAGTOFRONT        = 0x1
SPSVCINST_ASSOCSERVICE      = 0x2
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ppa.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]

MSFT="Microsoft"
PpaClassName="Disk drives"
ppa_ServiceDesc="Iomega Parallel Port Filter Driver"
ppa_gendisk_ServiceDesc="Disk Driver"
GenManufacturer="SCSI Native Device"
ppa_gendisk_devdesc="Iomega IEEE 1284.3 Parallel Port Drive"
 
IOMEGAMfg="Iomega Corporation"
PARALLEL_PORT\IOMEGA_ZIP-DISK_DRIVE.DeviceDesc="Iomega IEEE 1284.3 Parallel Port Drive"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ppa3x.txt ===
[Strings]

MSFT="Microsoft"
Ppa3xClassName="Disk drives"
ppa3x_ServiceDesc="Iomega Parallel Port Legacy Filter Driver"
ppa3x_gendisk_ServiceDesc="Disk Driver"
GenManufacturer="SCSI Native Device"
 
IOMEGAMfg="Iomega Corporation"
PARALLEL_PORT\IOMEGA_ZIP-DISK_DRIVE.DeviceDesc="Iomega Legacy Parallel Port Drive"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ppa3.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]

MSFT="Microsoft"
Ppa3ClassName="Disk drives"
ppa3_ServiceDesc="Iomega Parallel Port Legacy Filter Driver"
ppa3_gendisk_ServiceDesc="Disk Driver"
GenManufacturer="SCSI Native Device"
ppa3_gendisk_devdesc="Iomega Legacy Parallel Port Drive"
 
IOMEGAMfg="Iomega Corporation"
PARALLEL_PORT\IOMEGA_ZIP-DISK_DRIVE.DeviceDesc="Iomega Legacy Parallel Port Drive"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\pop3oc.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 && LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
;
; Localizable Strings
;
MSEMAILOPT_DESC = "E-mail Services"
MSPOP3OPT_DESC  = "POP3 Service"
MSPOP3OPT_TIP   = "The POP3 service provides e-mail retrieval services. The Simple Mail Transfer Protocol (SMTP) is also installed."
MSPOP3ADMINOPT_DESC = "POP3 Service Web Administration"
MSPOP3ADMINOPT_TIP  = "Supports the web based administration of the POP3 Service"

;;
;; NON Localizable strings
;;
POP3DIR        = "POP3Server"
POP3ADMINDIR   = "ServerAppliance\Web\Admin\Mail"
POP3ADMINIMGDIR = "ServerAppliance\Web\Admin\Mail\Images"
POP3ADMINDLLDIR = "ServerAppliance\MUI\0409"
POP3ADMINHELPDIR = "ServerAppliance\Web\Admin\Help\0409"

POP3REG        = "SOFTWARE\Microsoft\Pop3 Service"
POP3LOG        = "Logging Level"
POP3CREATEUSER = "CreateUser"
POP3AUTH       = "AuthMethods"
POP3DEFAUTH    = "DefaultAuthMethod"
POP3VERSION    = "Version"

POP3AUTHREG    = "SOFTWARE\Microsoft\Pop3 Service\Auth"
POP3AUTHGUID   = "AuthGUID"

POP3SVC        = "SYSTEM\CurrentControlSet\Services\Pop3Svc"
POP3PERF       = "SYSTEM\CurrentControlSet\Services\Pop3Svc\Performance"

POP3SVCPORT    = "POP3Port"
POP3SVCBACK    = "SocketBacklog"
POP3SVCMIN     = "MinNumberOfSockets"
POP3SVCMAX     = "MaxNumberOfSockets"
POP3SVCTHRSH   = "SocketsThreshold"
POP3SVCTHRD    = "ThreadCountPerCPU"

POP3PERFO      = "Open"
POP3PERFCO     = "Collect"
POP3PERFCL     = "Close"

POP3EVT        = "SYSTEM\CurrentControlSet\Services\Eventlog\Application\Pop3Svc"
POP3EVT2       = "SYSTEM\CurrentControlSet\Services\Eventlog\Application\Pop3 Service"

POP3EVTCNT     = "CategoryCount"
POP3EVTTYP     = "TypesSupported"

POP3AUTH1      = "SOFTWARE\Microsoft\ServerAppliance"
POP3AUTH2      = "SOFTWARE\Microsoft\ServerAppliance\ElementManager"
POP3AUTH3      = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions"
POP3AUTHTM     = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\TabsMail"
POP3AUTHTMS    = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\TabsMailMasterSettings"
POP3AUTHTMD    = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\TabsMailDomains"
HELPTOCP3      = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMail"
HELPTOCP3PROP  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailProperties"
HELPTOCP3DM    = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailDomain"
HELPTOCP3QUOT  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailQuotas"
HELPTOCP3AUTH  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailPropAuth"
HELPTOCP3PORT  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailPropPort"
HELPTOCP3LOG   = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailPropLogging"
HELPTOCP3SPA   = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailPropSPA"
HELPTOCP3STOR  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailPropStore"
HELPTOCP3DMAD  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailDomainAdd"
HELPTOCP3DMDL  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailDomainDel"
HELPTOCP3DMLK  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailDomainLock"
HELPTOCP3DMUL  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailDomainUnlock"
HELPTOCP3MB    = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailMailbox"
HELPTOCP3MBAD  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailMailboxAdd"
HELPTOCP3MBDL  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailMailboxDel"
HELPTOCP3MBLK  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailMailboxLock"
HELPTOCP3MBUL  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\HelpTOCMailMailboxUnlock"
HELPCTXP3      = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\ContextHelpMail"
HELPCTXP3PROP  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\ContextHelpMailProperties"
HELPCTXP3DM    = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\ContextHelpMailDomain"
HELPCTXP3DMAD  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\ContextHelpMailDomainAdd"
HELPCTXP3MB    = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\ContextHelpMailMailbox"
HELPCTXP3MBAD  = "SOFTWARE\Microsoft\ServerAppliance\ElementManager\WebElementDefinitions\ContextHelpMailMailboxAdd"

POP3AUTHTCAP   = "CaptionRID"
POP3AUTHTDRID  = "DescriptionRID"
POP3AUTHTLRID  = "LongDescriptionRID"
POP3AUTHTMRT   = "Merit"
POP3AUTHTSRC   = "Source"
POP3AUTHTCNT   = "Container"
POP3AUTHTELMT  = "ElementGraphic"
POP3AUTHTURL   = "URL"
POP3AUTHTEMB   = "IsEmbedded"
POP3AUTHTCURL  = "ContextURL"

WINDIR         = 10
PROGFILES      = 16422
SYSTEM32       = 11

REG_SZ         = 0x00000000
REG_MULTI_SZ   = 0x00010000
REG_EXPAND_SZ  = 0x00020000
REG_BINARY     = 0x00000001
REG_DWORD      = 0x00010001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\pnpscsi.txt ===
#if 0

  This file is organized into two main blocks. The first block contains
    code (non-string) sections which are specific to languages. Please put
    the code sections in the correct language.
  The second block is reserved for [Strings] which localizers will be
    working with. It is further divided using "#if LANGUAGE ==" for language
    specific strings. For strings which are common to all languages
    place outside the #ifs.

  This file is first precompiled with LANGUAGE_ID
  set to the language (see inf\win4\inf\makefile.inc for details).
  For example, for usa builds, the sections under #if LANGUAGE == 0x409
  will appear.

 Important: To support locstudio, this file contains only ONE [Strings] section.

#endif

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 && LANGUAGE_ID != 0x412

#elif LANGUAGE_ID == 0x804

#elif LANGUAGE_ID == 0x404

#elif LANGUAGE_ID == 0x411

#elif LANGUAGE_ID == 0x412
#endif

Msft = "Microsoft"
SCSIClassName="SCSI and RAID controllers"

GENERIC = "Unknown Manufacturer"
genericHBA.DeviceDesc = "SCSI/RAID Host Controller"

I2O = "Intelligent I/O Controller"
PCI\VEN_8086&DEV_9621&SUBSYS_00018086.DeviceDesc = "Intel I2O Controller"
PCI\VEN_8086&DEV_9622&SUBSYS_00018086.DeviceDesc = "Tekram I2O Controller"
PCI\VEN_8086&DEV_9641&SUBSYS_00018086.DeviceDesc = "Intel I2O Controller"
PCI\VEN_8086&DEV_96A1&SUBSYS_00018086.DeviceDesc = "Intel I2O Controller"
PCI\VEN_8086&DEV_3092&SUBSYS_00018086.DeviceDesc = "Intel I2O Controller"

ADP = "Adaptec"
#if (PLATFORM_SWITCH != 'm')
aha154x.DeviceDesc  = "Adaptec AHA-154X/AHA-164X SCSI Host Adapter"
*ADP1542.DeviceDesc = "Adaptec AHA-154X Plug and Play SCSI Host Adapter"

*ADP1502.DeviceDesc = "Adaptec AHA-1502 SCSI Host Adapter"
*ADP1505.DeviceDesc = "Adaptec AHA-1505 SCSI Host Adapter"
*ADP1510.DeviceDesc = "Adaptec AHA-1510 SCSI Host Adapter"
*ADP1512.DeviceDesc = "Adaptec AHA-1512 SCSI Host Adapter"
*ADP1515.DeviceDesc = "Adaptec AVA-1515 SCSI Host Adapter"
*ADP1520.DeviceDesc = "Adaptec AHA-152X SCSI Host Adapter"
*ADP1522.DeviceDesc = "Adaptec AHA-152X SCSI Host Adapter"
*ADP3015.DeviceDesc = "Adaptec AHA-1530 SCSI Host Adapter"
*ADP1532.DeviceDesc = "Adaptec AHA-1532 SCSI Host Adapter"
*ADP6360.DeviceDesc = "Adaptec AIC-6X60 ISA Single-Chip SCSI Controller"
*ADP6370.DeviceDesc = "Adaptec AIC-6X70 SCSI Controller"
ADP460.DeviceDesc   = "Adaptec SlimSCSI 16-Bit PCMCIA SCSI Host Adapter"
#endif

PCI\VEN_9005&DEV_00CF.DeviceDesc =                 "Adaptec AIC-7899 Ultra160 PCI SCSI Card"
PCI\VEN_9005&DEV_008F.DeviceDesc =                 "Adaptec AIC-7892 Ultra160 PCI SCSI Card"
PCI\VEN_9005&DEV_00C0.DeviceDesc =                 "Adaptec SCSI Card 39160 - Ultra160 SCSI (Generic)"
PCI\VEN_9005&DEV_0080.DeviceDesc =                 "Adaptec SCSI Card 29160 - Ultra160 SCSI (Generic)"
PCI\VEN_9005&DEV_0081.DeviceDesc =                 "Adaptec SCSI Card 19160 - Ultra160 SCSI (Generic)"
PCI\VEN_9005&DEV_00C0&SUBSYS_F6209005.DeviceDesc = "Adaptec SCSI Card 39160 - Ultra160 SCSI"
PCI\VEN_9005&DEV_00C0&SUBSYS_F6200E11.DeviceDesc = "Compaq 64-bit/66MHz Dual Channel Wide Ultra3 SCSI Adapter"
PCI\VEN_9005&DEV_0080&SUBSYS_E2A09005.DeviceDesc = "Adaptec SCSI Card 29160 - Ultra160 SCSI"
PCI\VEN_9005&DEV_0080&SUBSYS_E2A00E11.DeviceDesc = "Compaq 64-bit/66MHz Wide Ultra3 SCSI Adapter"
PCI\VEN_9005&DEV_0080&SUBSYS_62A09005.DeviceDesc = "Adaptec SCSI Card 29160N - Ultra160 SCSI"
PCI\VEN_9005&DEV_0080&SUBSYS_E2209005.DeviceDesc = "Adaptec SCSI Card 29160LP - Ultra160 SCSI"
PCI\VEN_9005&DEV_0081&SUBSYS_62A19005.DeviceDesc = "Adaptec SCSI Card 19160 - Ultra160 SCSI"
PCI\VEN_9005&DEV_005F.DeviceDesc =                 "Adaptec AIC-7896/AIC-7897 - Ultra2 SCSI"
PCI\VEN_9005&DEV_001F.DeviceDesc =                 "Adaptec AIC-7890/AIC-7891 - Ultra2 SCSI"
PCI\VEN_9005&DEV_0010.DeviceDesc =                 "Adaptec AHA-2940U2/U2W - Ultra2 SCSI"
PCI\VEN_9005&DEV_0050.DeviceDesc =                 "Adaptec AHA-3950 - Ultra2 SCSI"
PCI\VEN_9005&DEV_0051.DeviceDesc =                 "Adaptec AHA-3950 - Ultra2 SCSI"
PCI\VEN_9005&DEV_0050&SUBSYS_F5009005.DeviceDesc = "Adaptec AHA-3950U2B - Ultra2 SCSI"
PCI\VEN_9005&DEV_0051&SUBSYS_B5009005.DeviceDesc = "Adaptec AHA-3950U2D - Ultra2 SCSI"
PCI\VEN_9005&DEV_0010&SUBSYS_A1009005.DeviceDesc = "Adaptec AHA-2940U2B - Ultra2 SCSI"
PCI\VEN_9005&DEV_0010&SUBSYS_21809005.DeviceDesc = "Adaptec AHA-2940U2 - Ultra2 SCSI"
PCI\VEN_9005&DEV_0010&SUBSYS_A1809005.DeviceDesc = "Adaptec AHA-2940U2W - Ultra2 SCSI"
PCI\VEN_9005&DEV_0010&SUBSYS_E1009005.DeviceDesc = "Adaptec AHA-2950U2B - Ultra2 SCSI"
PCI\VEN_9005&DEV_0011&SUBSYS_01819005.DeviceDesc = "Adaptec AHA-2930U2 - Ultra2 SCSI"
PCI\VEN_9004&DEV_7895&SUBSYS_78959004.DeviceDesc = "Adaptec AIC-7895 Dual Ultra SCSI "
PCI\VEN_9004&DEV_7895&SUBSYS_78919004.DeviceDesc = "Adaptec AHA-2940U/UW Dual Ultra SCSI Controller"
PCI\VEN_9004&DEV_7895&SUBSYS_78929004.DeviceDesc = "Adaptec AHA-3940AU/AUW/AUWD/UWD Dual SCSI Controller"
PCI\VEN_9004&DEV_7895&SUBSYS_78949004.DeviceDesc = "Adaptec AHA-3944AUWD Dual HVD UltraSCSI Controller"
PCI\VEN_9004&DEV_8078&SUBSYS_78809004.DeviceDesc = "Adaptec AIC-7880 PCI Ultra SCSI"
PCI\VEN_9004&DEV_8178&SUBSYS_78819004.DeviceDesc = "Adaptec AHA-2940UW PCI SCSI Controller"
PCI\VEN_9004&DEV_8778&SUBSYS_78879004.DeviceDesc = "Adaptec AHA-2940UW Pro PCI SCSI Controller"
PCI\VEN_9004&DEV_3860&SUBSYS_38699004.DeviceDesc = "Adaptec AHA-2930CU PCI SCSI Controller"
PCI\VEN_9005&DEV_0082&SUBSYS_02109005.DeviceDesc = "Adaptec 2915/2930LP PCI SCSI Controller"
PCI\VEN_9004&DEV_8078.DeviceDesc = "Adaptec AIC-7880 PCI Ultra SCSI"
PCI\VEN_9004&DEV_8178.DeviceDesc = "Adaptec AHA-2940U/2940UW/2940D PCI SCSI Controller"
PCI\VEN_9004&DEV_8278.DeviceDesc = "Adaptec AHA-3940U/3940UW/3940UWD PCI SCSI Controller"
PCI\VEN_9004&DEV_8478.DeviceDesc = "Adaptec AHA-2944UW PCI SCSI Controller"
PCI\VEN_9004&DEV_8578.DeviceDesc = "Adaptec AHA-3944UW PCI SCSI Controller"
PCI\VEN_9004&DEV_8678.DeviceDesc = "Adaptec AHA-4944UW PCI SCSI Controller"
PCI\VEN_9004&DEV_3B78.DeviceDesc = "Adaptec AHA-4944UW PCI SCSI Controller"
PCI\VEN_9004&DEV_EC78.DeviceDesc = "Adaptec AHA-4944UW PCI SCSI Controller"
PCI\VEN_9004&DEV_7078.DeviceDesc = "Adaptec AIC-7870 PCI SCSI Controller"
PCI\VEN_9004&DEV_7178.DeviceDesc = "Adaptec AHA-2940/2940W PCI SCSI Controller"
PCI\VEN_9004&DEV_7278.DeviceDesc = "Adaptec AHA-3940/3940W PCI SCSI Controller"
PCI\VEN_9004&DEV_7478.DeviceDesc = "Adaptec AHA-2944/2944W PCI SCSI Controller"
PCI\VEN_9004&DEV_7578.DeviceDesc = "Adaptec AHA-3944W PCI SCSI Controller"
PCI\VEN_9004&DEV_7678.DeviceDesc = "Adaptec AIC-7870 PCI SCSI Controller"
PCI\VEN_9004&DEV_7778.DeviceDesc = "Adaptec AIC-7870 PCI SCSI Controller"
PCI\VEN_9004&DEV_6075.DeviceDesc = "Adaptec APA-1480 CardBus SCSI Controller"
PCI\VEN_9004&DEV_6778.DeviceDesc = "Adaptec AIC-786X PCI SCSI Controller"
PCI\VEN_9004&DEV_6678.DeviceDesc = "Adaptec AIC-786X PCI SCSI Controller"
PCI\VEN_9004&DEV_6578.DeviceDesc = "Adaptec AIC-786X PCI SCSI Controller"
PCI\VEN_9004&DEV_6478.DeviceDesc = "Adaptec AIC-786X PCI SCSI Controller"
PCI\VEN_9004&DEV_6278.DeviceDesc = "Adaptec AIC-786X PCI SCSI Controller"
PCI\VEN_9004&DEV_6178.DeviceDesc = "Adaptec AHA-2940AU PCI SCSI Controller"
PCI\VEN_9004&DEV_6078.DeviceDesc = "Adaptec AIC-786X PCI SCSI Controller"
PCI\VEN_9004&DEV_7860.DeviceDesc = "Adaptec AIC-7860 PCI SCSI Controller"
PCI\VEN_9004&DEV_5078.DeviceDesc = "Adaptec AIC-7850 PCI SCSI Controller"
PCI\VEN_9004&DEV_5075.DeviceDesc = "Adaptec AIC-7550 PCI SCSI Controller"
PCI\VEN_1044&DEV_A501&SUBSYS_C0471044.DeviceDesc = "Adaptec 3000S Ultra160 SCSI RAID Controller"
PCI\VEN_1044&DEV_A501&SUBSYS_C03C1044.DeviceDesc = "Adaptec 2000S Ultra160 SCSI RAID Controller"
PCI\VEN_1044&DEV_A501&SUBSYS_C05A1044.DeviceDesc = "Adaptec 2400A UDMA Four Channel RAID Controller"
PCI\VEN_1044&DEV_A501&SUBSYS_C0661044.DeviceDesc = "Adaptec 2110S Ultra3"
PCI\VEN_1044&DEV_A501&SUBSYS_C0641044.DeviceDesc = "Adaptec 3210S Ultra3 Dual Channel"
PCI\VEN_1044&DEV_A501&SUBSYS_C0651044.DeviceDesc = "Adaptec 3410S Ultra3 Four Channel"
PCI\VEN_103C&DEV_1029&SUBSYS_92109004.DeviceDesc = "Adaptec AFC9210LP/O PCI 64-bit/66MHz Fibre Channel 2Gbit Controller (Optical)"
PCI\VEN_103C&DEV_1029&SUBSYS_92119004.DeviceDesc = "Adaptec AFC9210LP/C PCI 64-bit/66MHz Fibre Channel 2Gbit Controller (Copper)"
PCI\VEN_9005&DEV_8011.DeviceDesc = "Adaptec 39320-based Ultra320 SCSI"
PCI\VEN_9005&DEV_801F.DeviceDesc = "Adaptec AIC-7902-based Ultra320 SCSI"
PCI\VEN_9005&DEV_801E.DeviceDesc = "Adaptec AIC-7901-based Ultra320 SCSI"
PCI\VEN_9005&DEV_8010.DeviceDesc = "Adaptec 39320-based Ultra320 SCSI"
PCI\VEN_9005&DEV_8012.DeviceDesc = "Adaptec 29320-based Ultra320 SCSI"

#if (PLATFORM_SWITCH != 'm')
AMD = "Advanced Micro Devices (AMD)"
amsint.DeviceDesc = "AMD PCI SCSI Controller/Ethernet Adapter"
#endif

AGILENT = "Agilent"
PCI\VEN_103C&DEV_1028&SUBSYS_000715BC.DeviceDesc = "Agilent HHBA-510x PCI Fibre Channel Controller"

AMI = "American Megatrends Inc."
megaraid.DeviceDesc = "AMI MegaRAID RAID Controller RAID Controller"
mraid428.DeviceDesc = "AMI MegaRAID Enterprise 1200 RAID Controller"
mraid434.DeviceDesc = "AMI MegaRAID Enterprise 1300 RAID Controller"
mraid438.DeviceDesc = "AMI MegaRAID Enterprise 1400 RAID Controller"
mraid466.DeviceDesc = "AMI MegaRAID Express 200 RAID Controller"
mraid467.DeviceDesc = "AMI MegaRAID Enterprise 1500 RAID Controller"
mraid490.DeviceDesc = "AMI MegaRAID Express 300 RAID Controller"
mraid471.DeviceDesc = "AMI MegaRAID Enterprise 1600 RAID Controller"
mraid475.DeviceDesc = "AMI MegaRAID Express 500 RAID Controller"
mraid493.DeviceDesc = "AMI MegaRAID Elite 1600 RAID Controller"

DELL = "Dell"
Dell467.DeviceDesc  = "Dell PERC 2/DC RAID Controller"
Dell.DeviceDesc     = "Dell PERC 2/SC RAID Controller"
DellPerc2.DeviceDesc    = "Dell PERC 2 RAID Controller"
DellPerc2si.DeviceDesc  = "Dell PERC 2/Si RAID Controller"
DellPerc3di.DeviceDesc  = "Dell PERC 3/Di RAID Controller"
DellPerc3si.DeviceDesc  = "Dell PERC 3/Si RAID Controller"
DellPerc3gat.DeviceDesc = "Dell PERC 3 RAID (SCSI chip)"
Dell471.DeviceDesc  = "Dell PERC 3/QC RAID Controller" 
Dell475.DeviceDesc = "Dell PERC 3/SC RAID Controller Driver"
Dell493.DeviceDesc  = "Dell PERC 3/DC RAID Controller"
DellDiscovery.DeviceDesc = "Dell SCSI 320-2 PERC 4/Di"
Dell520.DeviceDesc = "Dell SCSI 320-1 PERC 4/SC"
Dell518.DeviceDesc = "Dell SCSI 320-2 PERC 4/DC"
Dell511.DeviceDesc  = "DELL CERC ATA 100/4ch RAID Controller" 

HP = "HP"
netraid3si.DeviceDesc = "HP NetRAID-3Si"
NetRaid.DeviceDesc    = "Integrated HP NetRAID"
netraid1si.DeviceDesc = "HP NetRAID-1Si"
hpn.DeviceDesc        = "Hewlett Packard NetRAID-4M RAID Controller"
netraid1M.DeviceDesc  = "HP NetRAID-1M RAID Controller"
netraid2M.DeviceDesc  = "HP NetRAID-2M RAID Controller"

COMPAQ = "Compaq"
cpqarray.DeviceDesc = "Compaq Drive Array"
cpqarry2.DeviceDesc = "Compaq Smart Array Controller"
cpqfcalm.DeviceDesc = "Compaq Fibre-Channel Host Controller"
*CPQFD17.DeviceDesc = "Compaq SCSI Tape Adapter"
PCI\VEN_1000&DEV_0012&SUBSYS_001b0e11.DeviceDesc = "Compaq Integrated Wide Ultra2 SCSI Adapter"
PCI\VEN_1000&DEV_000b&SUBSYS_60040e11.DeviceDesc = "Compaq 64-Bit Ultra2 SCSI Controller"
smart_5300.DeviceDesc = "Compaq Smart Array 5300 Controller"
smart_5312.DeviceDesc = "Compaq Smart Array 5312 Controller"
smart_532.DeviceDesc = "Compaq Smart Array 532 Controller"
smart_5i.DeviceDesc = "Compaq Smart Array 5i Controller"
PCI\VEN_0E11&DEV_A0FC&SUBSYS_A0FC0E11.DeviceDesc = "Compaq StorageWorks 64-Bit/66-MHz Fibre Channel Host Bus Adapter"

TEKRAM = "Tekram"
PCI\VEN_1000&DEV_0020&SUBSYS_10201DE1.DeviceDesc = "DC-390U3W: PCI Ultra 160 SCSI Host Adapter"
PCI\VEN_1000&DEV_0021&SUBSYS_10201DE1.DeviceDesc = "DC-390U3W: PCI Ultra 160 SCSI Host Adapter"
PCI\VEN_1000&DEV_0020&SUBSYS_10101DE1.DeviceDesc = "DC-390U3D : PCI Dual Ultra 160 SCSI Host Adapter"
PCI\VEN_1000&DEV_0021&SUBSYS_10101DE1.DeviceDesc = "DC-390U3D : PCI Dual Ultra 160 SCSI Host Adapter"

DIAMOND = "Diamond"
fireport.DeviceDesc = "Diamond Multimedia Systems SCSI Host Adapter"

EMULEX = "Emulex"
lp6000.DeviceDesc = "Emulex LP6000 Fibre Channel Host Adapter"
lp7000.DeviceDesc = "Emulex LP7000 Fibre Channel Host Adapter"
lp8000.DeviceDesc = "Emulex LP8000 Fibre Channel Host Adapter"
lp9000.DeviceDesc = "Emulex LP9000 Fibre Channel Host Adapter"
lp850.DeviceDesc  = "Emulex LP850 Fibre Channel Host Adapter"
lp950.DeviceDesc  = "Emulex LP950 Fibre Channel Host Adapter"
lp9802.DeviceDesc = "Emulex LP9802 Fibre Channel Host Adapter"
lp982.DeviceDesc  = "Emulex LP982 Fibre Channel Host Adapter"

#if (PLATFORM_SWITCH != 'm')
MYLEX = "Mylex"
dac960P.DeviceDesc =  "Mylex DAC960P Disk Array Controller"
dac960PD.DeviceDesc = "Mylex DAC960PD Disk Array Controller"
dac960PX.DeviceDesc = "Mylex DAC960 Series Disk Array Controller"
dac1164P.DeviceDesc = "Mylex DAC1164P Disk Array Controller"
dac960BA55.DeviceDesc = "Mylex eXtremeRAID Support Device"
dac2w2kAcceleRAID160 = "Mylex AcceleRAID 160 Controller"
dac2w2kAcceleRAID170 = "Mylex AcceleRAID 170 Controller"
dac2w2kAcceleRAID352 = "Mylex AcceleRAID 352 Controller"
dac2w2keXtremeRAID2000 = "Mylex eXtremeRAID 2000 Controller"
dac2w2keXtremeRAID3000 = "Mylex eXtremeRAID 3000 Controller"
#endif

#if (PLATFORM_SWITCH != 'm')
ADVANSYS = "Advansys"
asc3550.DeviceDesc = "Advansys 3550 Ultra Wide SCSI Host Adapter"
asc.DeviceDesc = "Advansys SCSI Host Adapter"
abp460.DeviceDesc = "Advansys ABP460 PCMCIA SCSI Host Adapter"
abp480.DeviceDesc ="Advansys ABP480 CardBus SCSI Host Adapter"
#endif

#if (PLATFORM_SWITCH != 'm')
INITIO = "Initio"
initio.DeviceDesc = "Initio Ultra SCSI Host Adapter"
#endif

QLOGIC = "QLogic"
ql10wnt.DeviceDesc = "QLogic PCI SCSI Host Adapter"
ql1240.DeviceDesc =  "QLogic PCI SCSI Host Adapter"
ql2100.DeviceDesc =  "QLogic QLA2000/QLA2100 PCI Fibre Channel Adapter"
ql2200.DeviceDesc =  "QLogic QLA2200 PCI Fibre Channel Adapter"
ql2300.DeviceDesc =  "QLogic QLA2300 PCI Fibre Channel Adapter"
ql1080.DeviceDesc =  "QLogic PCI-QLA1080 64 bit PCI LVD SCSI HBA"
ql1280.DeviceDesc =  "QLogic PCI-QLA1280 64 bit PCI LVD SCSI HBA"
ql12160.DeviceDesc = "QLogic QLA12160 64 bit PCI DUAL 160M SCSI HBA"

IBM="IBM Corporation"
PCI\VEN_1014&DEV_002E&SUBSYS_022E1014.DeviceDesc = "IBM ServeRAID 4H Controller"
PCI\VEN_1014&DEV_002E&SUBSYS_002E1014.DeviceDesc = "IBM ServeRAID 3H/3L Controller"
PCI\VEN_1014&DEV_002E&SUBSYS_00000000&REV_04.DeviceDesc = "IBM ServeRAID II Controller"
PCI\VEN_1014&DEV_002E&SUBSYS_00000000&REV_03.DeviceDesc = "IBM ServeRAID integrated on PC 330 Server"
PCI\VEN_1014&DEV_002E&SUBSYS_00000000&REV_02.DeviceDesc = "IBM PC ServeRAID Controller"
PCI\VEN_1014&DEV_01BD&SUBSYS_01BE1014&REV_00.DeviceDesc = "IBM ServeRAID 4M Controller"
PCI\VEN_1014&DEV_01BD&SUBSYS_01BF1014&REV_00.DeviceDesc = "IBM ServeRAID 4L Controller"
PCI\VEN_1014&DEV_01BD&SUBSYS_02081014&REV_00.DeviceDesc = "IBM ServeRAID 4Mx Controller"
PCI\VEN_1014&DEV_01BD&SUBSYS_020E1014&REV_00.DeviceDesc = "IBM ServeRAID 4Lx Controller"
CD20X.DeviceDesc="IBM Portable PCMCIA CD-ROM Drive"
PCMCIA\PCMCIA-IDE_CARD-3220.DeviceDesc="IBM Portable Drive Bay 2000 (PCMCIA)"
PCI\VEN_13E6&DEV_3603&SUBSYS_00461014.DeviceDesc="IBM Portable Drive Bay 2000 (CardBus)"
PCMCIA\PCMCIA-PnPIDE-4522.DeviceDesc="PCMCIA CD-ROM/DVD-ROM (Model F)"
PCMCIA\PCMCIA-PnPIDE-7B72.DeviceDesc="CardBus/F CD-ROM/DVD-ROM (PCMCIA)"
PCMCIA\PCMCIA-PnPIDE-7762.DeviceDesc="PCMCIA HARDDISK"
PCMCIA\PCMCIA-IDE_DOCK-EEEA.DeviceDesc="PCMCIA IDE DOCK"
PCI\VEN_13E6&DEV_3603&SUBSYS_004613E6.DeviceDesc="CardBus/F CD-ROM/DVD-ROM (CardBus)"
PCI\VEN_13E6&DEV_3603&SUBSYS_004913E6.DeviceDesc="CardBus/I CD-ROM/CD-RW (CardBus)"
PCI\VEN_13E6&DEV_3603&SUBSYS_00460900.DeviceDesc="CardBus IDE DOCK"
PCI\VEN_13E6&DEV_3603.DeviceDesc="CardBus IDE Card"

#if (PLATFORM_SWITCH != 'm')
PROMISE="PROMISE"
PCI\VEN_105A&DEV_4D68&CC_0180.DeviceDesc="Promise Technology Inc. Ultra IDE Controller"
PCI\VEN_105A&DEV_4D30&CC_0180.DeviceDesc="Promise Technology Inc. Ultra IDE Controller"
PCI\VEN_105A&DEV_0D30&CC_0180.DeviceDesc="Promise Technology Inc. Ultra IDE Controller"
PCI\VEN_105A&DEV_4D38&CC_0180.DeviceDesc="Promise Technology Inc. Ultra IDE Controller"
PCI\VEN_105A&DEV_4D33.DeviceDesc="Promise Technology Inc. Ultra IDE Controller"
PCI\VEN_105A&DEV_4D69.DeviceDesc="Promise Technology Inc. Ultra IDE Controller"
#endif

#if (PLATFORM_SWITCH != 'm')
HIGHPOINT="HIGHPOINT"
PCI\VEN_1103&DEV_0005.DeviceDesc = "HPT372A UDMA/ATA133 RAID Controller"
PCI\VEN_1103&DEV_0004&REV_03.DeviceDesc = "HPT370 UDMA/ATA100 RAID Controller"
PCI\VEN_1103&DEV_0004&REV_04.DeviceDesc = "HPT370A UDMA/ATA100 RAID Controller"
PCI\VEN_1103&DEV_0004&REV_05.DeviceDesc = "HPT372 UDMA/ATA133 RAID Controller"
#endif

LSI = "LSI Logic Inc."
PCI\VEN_1000&DEV_0001.DeviceDesc = "LSI Logic 53C810 Device"
PCI\VEN_1000&DEV_0002.DeviceDesc = "LSI Logic 820 PCI SCSI Host Adapter"
PCI\VEN_1000&DEV_0003.DeviceDesc = "LSI Logic 53C825/53C825A Device"
PCI\VEN_1000&DEV_0004.DeviceDesc = "LSI Logic 53C815 Device"
PCI\VEN_1000&DEV_0005.DeviceDesc = "LSI Logic 53C810A Device"
PCI\VEN_1000&DEV_0006.DeviceDesc = "LSI Logic 8600SP Adapter; 53C860 Device"
PCI\VEN_1000&DEV_000C.DeviceDesc = "LSI Logic 8951U/8952U Adapter; 53C895"
PCI\VEN_1000&DEV_000D.DeviceDesc = "LSI Logic 53C885 Device"
PCI\VEN_1000&DEV_000F.DeviceDesc = "LSI Logic 53C875/53C876 Device"
PCI\VEN_1000&DEV_000A.DeviceDesc = "LSI Logic 53C1510 Device"
PCI\VEN_1000&DEV_000B.DeviceDesc = "LSI Logic 53C896 Device"
PCI\VEN_1000&DEV_0012.DeviceDesc = "LSI Logic 8953U PCI SCSI Adapter; 53C895A Device"
PCI\VEN_1000&DEV_0020.DeviceDesc = "LSI Logic 53C1010-33 Device"
PCI\VEN_1000&DEV_0021.DeviceDesc = "LSI Logic 53C1010-66 Device"
PCI\VEN_1000&DEV_0030.DeviceDesc = "LSI Logic PCI-X Ultra320 SCSI Host Adapter"
SYM-40409G.DeviceDesc = "LSI Logic 40909 PCI FC Adapter; SYMFC909 Device"
SYM-44929LH.DeviceDesc = "LSI Logic 44929 PCI FC Adapter; SYMFC929 Device"
PCI\VEN_1000&DEV_0624                 = "LSI Logic 40919 PCI FC Adapter; LSIFC919 Device"
PCI\VEN_1000&DEV_0624&SUBSYS_10101000 = "LSI Logic 40919 PCI FC Adapter; LSIFC919 Device"
PCI\VEN_1000&DEV_0624&SUBSYS_10201000 = "LSI Logic 40919 PCI FC Adapter; LSIFC919 Device"

#if (PLATFORM_SWITCH != 'm')
INTEL="Intel"
*PCI\VEN_1119&DEV_0300.DeviceDesc = "Intel RAID Controller"
*PCI\VEN_8086&DEV_0600.DeviceDesc = "Intel RAID Controller"
*PCI\VEN_8086&DEV_0601.DeviceDesc = "Intel RAID Controller"
#endif

SPSVCINST_ASSOCSERVICE = 0x00000002
SERVICE_KERNEL_DRIVER  = 1
SERVICE_BOOT_START     = 0
SERVICE_ERROR_NORMAL   = 1
REG_EXPAND_SZ          = 0x00020000
REG_DWORD              = 0x00010001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\printupg.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...

#elif LANGUAGE_ID == 0x804
//CHS specific sections
;
; Model Name Mapping (Simplified Chinese)
;
[Printer Driver Mapping_Windows NT x86_Version 2]
"Epson EPL-5200K" = "EPSON LASER EPL-5200K", 1, 1, "11/27/1999"
"Epson EPL-5500K" = "EPSON LASER EPL-5500K", 1, 1, "11/27/1999"
"Epson EPL-8600K" = "EPSON LASER EPL-8600K", 1, 1, "11/27/1999"
"EPSON EPL-N1610 Advanced" = "EPSON LASER EPL-N1610", 1, 1, "11/27/1999"
"Epson EPL-N2000K" = "EPSON LASER EPL-N2000K", 1, 1, "11/27/1999"
"EPSON Stylus COLOR 1520K" = "EPSON Stylus COLOR 1520K ESC/PK", 1, 1, "11/27/1999"

#elif LANGUAGE_ID == 0x404
//CHT specific sections
;
; Model Name Mapping (Traditional Chinese)
;
[Printer Driver Mapping_Windows NT x86_Version 2]
"Epson EPL-5200C" = "Epson EPL-5200C", 1, 1, "11/27/1999"
"Epson EPL-5200C+" = "Epson EPL-5200C+", 1, 1, "11/27/1999"
"Epson EPL-5500C" = "Epson EPL-5500C", 1, 1, "11/27/1999"
"Epson EPL-7050C" = "Epson EPL-7050C LQ-MODE", 1, 1, "11/27/1999"
"Epson EPL-9000C" = "Epson EPL-9000C", 1, 1, "11/27/1999"
"Epson EPL-N1200C" = "EPSON LASER EPL-N1200C", 1, 1, "11/27/1999"
"EPSON EPL-N1610 Advanced" = "EPSON LASER EPL-N1610", 1, 1, "11/27/1999"
"Epson EPL-N2000C" = "EPSON LASER EPL-N2000C", 1, 1, "11/27/1999"
"Epson Stylus 1000C" = "EPSON Stylus 1000C", 1, 1, "11/27/1999"
"Epson Stylus 800C" = "EPSON Stylus 800C", 1, 1, "11/27/1999"
"Epson Stylus 800C+" = "EPSON Stylus 800C+", 1, 1, "11/27/1999"

#elif LANGUAGE_ID == 0x411
//JPN specific sections
;
; Model Name Mapping (Japanese)
;
[Printer Driver Mapping_Windows NT x86_Version 2]
"ALPS MD-2000J" = "ALPS MD-2000J", 1, 1, "11/27/1999"
"ALPS MD-2010J" = "ALPS MD-2010J", 1, 1, "11/27/1999"
"ALPS MD-2300J" = "ALPS MD-2300J", 1, 1, "11/27/1999"
"ALPS MD-4000J" = "ALPS MD-4000J", 1, 1, "11/27/1999"
"DocuPrint C411" = "", 1, 1, "5/10/2002"
"EPSON EM-900C" = "EPSON EM-900C ESC/P R", 1, 1
"EPSON LP-1000" = "EPSON LP-1000", 1, 1, "12/3/1998"
"EPSON LP-1500" = "EPSON LP-1500", 1, 1, "12/3/1998"
"EPSON LP-1500S" = "EPSON LP-1500S", 1, 1, "12/3/1998"
"EPSON LP-1600" = "EPSON LP-1600", 1, 1, "12/3/1998"
"EPSON LP-1700" = "EPSON LP-1700", 1, 1, "12/3/1998"
"EPSON LP-1700S" = "EPSON LASER LP-1700S", 1, 1, "12/3/1998"
"EPSON LP-1800" = "EPSON LASER LP-1800", 1, 1, "12/3/1998"
"EPSON LP-1900" = "EPSON LASER LP-1900", 1, 1
"EPSON LP-2000" = "EPSON LP-2000", 1, 1
"EPSON LP-3000" = "EPSON LP-3000", 1, 1
"EPSON LP-3000C" = "EPSON LASER LP-3000C", 1, 1
"EPSON LP-7000" = "EPSON LP-7000", 1, 1
"EPSON LP-7000G" = "EPSON LP-7000G", 1, 1
"EPSON LP-800" = "EPSON LASER LP-800", 1, 1, "12/3/1998"
"EPSON LP-8000" = "EPSON LP-8000", 1, 1, "12/3/1998"
"EPSON LP-8000C" = "EPSON LASER LP-8000C", 1, 1, "03/7/1999"
"EPSON LP-8000S" = "EPSON LP-8000S", 1, 1, "12/3/1998"
"EPSON LP-8000SE" = "EPSON LP-8000SE", 1, 1, "12/3/1998"
"EPSON LP-8000SX" = "EPSON LP-8000SX", 1, 1, "12/3/1998"
"EPSON LP-8200" = "EPSON LP-8200", 1, 1, "12/3/1998"
"EPSON LP-8200C" = "EPSON LASER LP-8200C", 1, 1
"EPSON LP-8300" = "EPSON LASER LP-8300", 1, 1, "12/3/1998"
"EPSON LP-8300C" = "EPSON LASER LP-8300C", 1, 1
"EPSON LP-8300F" = "EPSON LASER LP-8300F", 1, 1
"EPSON LP-8300S" = "EPSON LASER LP-8300S", 1, 1
"EPSON LP-8400" = "EPSON LASER LP-8400", 1, 1, "12/3/1998"
"EPSON LP-8400F" = "EPSON LASER LP-8400F", 1, 1
"EPSON LP-8400FX" = "EPSON LASER LP-8400FX", 1, 1
"EPSON LP-8500" = "EPSON LP-8500", 1, 1, "12/3/1998"
"EPSON LP-8500C" = "EPSON LASER LP-8500C", 1, 1
"EPSON LP-8600" = "EPSON LASER LP-8600", 1, 1
"EPSON LP-8600F" = "EPSON LASER LP-8600F", 1, 1
"EPSON LP-8600FX" = "EPSON LASER LP-8600FX", 1, 1
"EPSON LP-9000" = "EPSON LP-9000", 1, 1, "12/3/1998"
"EPSON LP-9200" = "EPSON LP-9200", 1, 1, "12/3/1998"
"EPSON LP-9200S" = "EPSON LASER LP-9200S", 1, 1, "12/3/1998"
"EPSON LP-9200SX" = "EPSON LASER LP-9200SX", 1, 1, "12/3/1998"
"EPSON LP-9300" = "EPSON LASER LP-9300", 1, 1
"EPSON LP-9600" = "EPSON LASER LP-9600", 1, 1
"EPSON LP-9600S" = "EPSON LASER LP-9600S", 1, 1
"EPSON MC-2000" = "EPSON MC-2000 ESC/P R", 1, 1
"EPSON MJ-3000C" = "EPSON MJ-3000C ESC/P R", 1, 1, "11/27/1999"
"EPSON MJ-5100C" = "EPSON MJ-5100C ESC/P R", 1, 1, "11/27/1999"
"EPSON MJ-6000C" = "EPSON MJ-6000C ESC/P R", 1, 1, "11/27/1999"
"EPSON MJ-8000C" = "EPSON MJ-8000C ESC/P R", 1, 1, "11/27/1999"
"EPSON MJ-910C" = "EPSON MJ-910C ESC/P R", 1, 1, "11/27/1999"
"EPSON MJ-930C" = "EPSON MJ-930C ESC/P R", 1, 1, "11/27/1999"
"EPSON PM-2000C" = "EPSON PM-2000C ESC/P R", 1, 1, "11/24/1998"
"EPSON PM-2200C" = "EPSON PM-2200C ESC/P R", 1, 1
"EPSON PM-3000C" = "EPSON PM-3000C ESC/P R", 1, 1, "11/24/1998"
"EPSON PM-3300C" = "EPSON PM-3300C ESC/P R", 1, 1
"EPSON PM-5000C" = "EPSON PM-5000C ESC/P R", 1, 1, "11/27/1999"
"EPSON PM-600C" = "EPSON PM-600C ESC/P R", 1, 1, "11/27/1999"
"EPSON PM-670C" = "EPSON PM-670C ESC/P R", 1, 1, "11/24/1998"
"EPSON PM-700C" = "EPSON PM-700C ESC/P R", 1, 1, "11/27/1999"
"EPSON PM-750C" = "EPSON PM-750C ESC/P R", 1, 1, "11/24/1998"
"EPSON PM-760C" = "EPSON PM-760C ESC/P R", 1, 1
"EPSON PM-770C" = "EPSON PM-770C ESC/P R", 1, 1, "11/24/1998"
"EPSON PM-800C" = "EPSON PM-800C ESC/P R", 1, 1
"EPSON PM-820C" = "EPSON PM-820C ESC/P R", 1, 1
"EPSON PM-9000C" = "", 1, 1, "11/24/1998"
"EPSON PT-100" = "EPSON PT-100 ESC/P R", 1, 1, "11/24/1998"
"FUJITSU GL-340E" = "FUJITSU PrintPartner GL-340E", 1, 1, "6/1/2001"
"FUJITSU GL-360E" = "FUJITSU PrintPartner GL-360E", 1, 1, "6/1/2001"
"FUJITSU GL-740E" = "FUJITSU PrintPartner GL-740E", 1, 1, "6/1/2001"
"FUJITSU GL-760E" = "FUJITSU PrintPartner GL-760E", 1, 1, "6/1/2001"
"FUJITSU Printpartner GL-340" = "FUJITSU PrintPartner GL-340", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-340E" = "FUJITSU PrintPartner GL-340E", 1, 1, "6/1/2001"
"FUJITSU Printpartner GL-360" = "FUJITSU PrintPartner GL-360", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-360E" = "FUJITSU PrintPartner GL-360E", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-740" = "FUJITSU PrintPartner GL-740", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-740E" = "FUJITSU PrintPartner GL-740E", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-740S" = "FUJITSU PrintPartner GL-740S (MS)", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-740SN" = "FUJITSU PrintPartner GL-740SN (MS)", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-760" = "FUJITSU PrintPartner GL-760", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-760D" = "FUJITSU PrintPartner GL-760", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-760E" = "FUJITSU PrintPartner GL-760E", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-760PN" = "FUJITSU PrintPartner GL-760PN (MS)", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-760S" = "FUJITSU PrintPartner GL-760S (MS)", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-760SD" = "FUJITSU PrintPartner GL-760SD (MS)", 1, 1, "6/1/2001"
"FUJITSU PrintPartner GL-760SN" = "FUJITSU PrintPartner GL-760SN (MS)", 1, 1, "6/1/2001"
"FUJITSU PrintPartner VS-840" = "FUJITSU PrintPartner VS-840 (MS)", 1, 1, "6/1/2001"
"FUJITSU PrintPartner VS-860" = "FUJITSU PrintPartner VS-860 (MS)", 1, 1, "6/1/2001"
"FUJITSU PrintPartner VS-860D" = "FUJITSU PrintPartner VS-860D (MS)", 1, 1, "6/1/2001"
"NEC Color MultiWriter 9200C" = "", 1, 1
"NEC Color MultiWriter 9250C" = "", 1, 1
"NEC Color MultiWriter 9400C" = "", 1, 1
"NEC MultiWriter 1100" = "", 1, 1, "11/1/2002"
"NEC MultiWriter 1100U" = "", 1, 1, "11/1/2002"
; "NEC MultiWriter 1400X" = "NEC MultiWriter 1400X", 1, 1, "10/1/1999"
"NEC MultiWriter 2000E Plus" = "NEC MultiWriter 2000E NPDL2", 1, 1, "10/1/1999"
"NEC MultiWriter 2000FW Plus" = "NEC MultiWriter 2000FW NPDL2", 1, 1, "10/1/1999"
; "NEC MultiWriter 2000X" = "NEC MultiWriter 2000X", 1, 1, "10/1/1999"
; "NEC MultiWriter 2000X2" = "NEC MultiWriter 2000X2", 1, 1, "07/1/1999"
; "NEC MultiWriter 2050" = "NEC MultiWriter 2050", 1, 1, "10/1/1999"
"NEC MultiWriter 2200NW Plus" = "NEC MultiWriter 2200NW NPDL2", 1, 1, "10/1/1999"
"NEC MultiWriter 2200NW2 Plus" = "NEC MultiWriter 2200NW2 NPDL2", 1, 1, "10/1/1999"
; "NEC MultiWriter 2200X" = "NEC MultiWriter 2200X", 1, 1, "10/1/1999"
; "NEC MultiWriter 2200X2" = "NEC MultiWriter 2200X2", 1, 1, "07/1/1999"
; "NEC MultiWriter 2200XE" = "NEC MultiWriter 2200XE", 1, 1, "07/1/1999"
; "NEC MultiWriter 2250" = "NEC MultiWriter 2250", 1, 1, "10/1/1999"
; "NEC MultiWriter 2400X" = "NEC MultiWriter 2400X", 1, 1, "10/1/1999"
; "NEC MultiWriter 2650" = "NEC MultiWriter 2650", 1, 1, "10/1/1999"
; "NEC MultiWriter 2650E" = "NEC MultiWriter 2650E", 1, 1, "10/1/1999"
; "NEC MultiWriter 4050" = "", 1, 1, "11/27/1999"
; "NEC MultiWriter 4050M" = "", 1, 1, "11/27/1999"
; "NEC MultiWriter 6050A" = "", 1, 1, "11/27/1999"
"NEC MultiWriter 6050B" = "", 1, 1, "11/27/1999"
"NEC PC-PR2000/4R Plus" = "NEC PC-PR2000/4R NPDL2", 1, 1, "10/1/1999"
"NEC PC-PR2000/4W Plus" = "NEC PC-PR2000/4W NPDL2", 1, 1, "10/1/1999"
"NEC PC-PR2000/6W Plus" = "NEC PC-PR2000/6W NPDL2", 1, 1, "10/1/1999"
"NEC PICTY320 Printer" = "NEC PICTY320", 1, 1, "11/27/1999"
"NEC PICTY4000 Printer" = "NEC PICTY4000", 1, 1, "11/27/1999"
"NEC PICTY700 Printer" = "NEC PICTY700", 1, 1, "11/27/1999"
"NEC PICTY820 Printer" = "NEC PICTY820", 1, 1, "11/27/1999"
"NEC PICTY860 Printer" = "NEC PICTY860", 1, 1, "1/11/2002"
"NEC PICTY870 Printer" = "", 1, 1, "4/6/2002"
"NEC PICTY900 Printer" = "NEC PICTY900", 1, 1, "11/27/1999"
"NEC PICTY920 Printer" = "NEC PICTY920", 1, 1, "11/27/1999"
"NEC PICTY970 Printer" = "", 1, 1, "4/6/2002"
"OKI MICROLINE 3010c(PCL)" = "", 1, 1, "10/31/2001"
"OKI MICROLINE 3020c(PCL)" = "", 1, 1, "10/31/2001"
"OKI MICROLINE 3020cV(PCL)" = "", 1, 1, "10/31/2001"
"OKI MICROLINE 3050c(PCL)" = "", 1, 1, "10/31/2001"
"OKI MICROLINE 3050cV(PCL)" = "", 1, 1, "10/31/2001"
"OKI MICROLINE 9055c(PCL)" = "", 1, 1, "10/31/2001"
"OKI MICROLINE 9055cV(PCL)" = "", 1, 1, "10/31/2001"

[Printer Driver Mapping_Windows NT x86_Version 3]
"FUJITSU GL-340E" = "FUJITSU PrintPartner GL-340E", 2, 1, "6/1/2001"
"FUJITSU GL-360E" = "FUJITSU PrintPartner GL-360E", 2, 1, "6/1/2001"
"FUJITSU GL-740E" = "FUJITSU PrintPartner GL-740E", 2, 1, "6/1/2001"
"FUJITSU GL-760E" = "FUJITSU PrintPartner GL-760E", 2, 1, "6/1/2001"
"FUJITSU PrintPartner GL-740S" = "FUJITSU PrintPartner GL-740S (MS)", 2, 1, "6/1/2001"
"FUJITSU PrintPartner GL-740SN" = "FUJITSU PrintPartner GL-740SN (MS)", 2, 1, "6/1/2001"
"FUJITSU PrintPartner GL-760PN" = "FUJITSU PrintPartner GL-760PN (MS)", 2, 1, "6/1/2001"
"FUJITSU PrintPartner GL-760S" = "FUJITSU PrintPartner GL-760S (MS)", 2, 1, "6/1/2001"
"FUJITSU PrintPartner GL-760SD" = "FUJITSU PrintPartner GL-760SD (MS)", 2, 1, "6/1/2001"
"FUJITSU PrintPartner GL-760SN" = "FUJITSU PrintPartner GL-760SN (MS)", 2, 1, "6/1/2001"
"FUJITSU PrintPartner VS-840" = "FUJITSU PrintPartner VS-840 (MS)", 2, 1, "6/1/2001"
"FUJITSU PrintPartner VS-860" = "FUJITSU PrintPartner VS-860 (MS)", 2, 1, "6/1/2001"
"FUJITSU PrintPartner VS-860D" = "FUJITSU PrintPartner VS-860D (MS)", 2, 1, "6/1/2001"

#elif LANGUAGE_ID == 0x412
//KOR specific sections
;
; Model Name Mapping (Korean)
;
[Printer Driver Mapping_Windows NT x86_Version 2]
"Epson EPL-N2000H" = "EPSON EPL-N2000H", 1, 1, "11/27/1999"
"EPSON Stylus COLOR 1520H" = "EPSON Stylus COLOR 1520H(KSSM+)", 1, 1, "11/27/1999"
"EPSON Stylus COLOR 3000" = "EPSON Stylus COLOR 3000 (KSSM+)", 1, 1, "11/27/1999"
"EPSON Stylus COLOR 440H" = "EPSON Stylus COLOR 440H (KSSM+)", 1, 1, "11/24/1998"
"EPSON Stylus COLOR 640H" = "EPSON Stylus COLOR 640H (KSSM+)", 1, 1, "11/24/1998"
"EPSON Stylus COLOR 850H" = "EPSON Stylus COLOR 850H (KSSM+)", 1, 1, "11/27/1999"
"EPSON Stylus Photo 700" = "EPSON Stylus Photo 700 (KSSM+)", 1, 1, "11/24/1998"
"EPSON Stylus Photo 750" = "EPSON Stylus Photo 750 (KSSM+)", 1, 1, "11/24/1998"
"EPSON Stylus Photo EX" = "EPSON Stylus Photo EX (KSSM+)", 1, 1, "11/24/1998"
"EPSON Stylus Pro 5000" = "EPSON Stylus Pro 5000 (KSSM+)", 1, 1, "11/27/1999"

#endif

// String section below for localizers
;
; Localizable Strings
;
[Strings]
#if LANGUAGE_ID == 0x804
; Manufactrers (Simplified Chinese)

#elif LANGUAGE_ID == 0x404
; Manufactrers (Traditional Chinese)

#elif LANGUAGE_ID == 0x411
; Manufactrers (Japanese)

#elif LANGUAGE_ID == 0x412
; Manufactrers (Korean)
; Followings are Korean strings kept in printer model names for backward
; compatibility with previous OS.  These must exactly match with the
; existing Windows 2000 translations
SAMBO="SAMBO"
#endif

MS="Microsoft"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\prodspec.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
@*:Localizers: localize the "Note to user" and the Localization= line.
@*:            Leave everything else alone.
@*:
;
;Note to user: DO NOT ALTER OR DELETE THIS FILE.
;
[SMS Inventory Identification]
Version=1.0

[Product Specification]
@w!p:@i:Product=Windows XP Professional
@w!p:@m:Product=Windows XP 64-Bit Edition Version 2003
@p:Product=Windows XP Home Edition
@b:Product=Windows Server 2003, Web Edition
@l:Product=Windows Server 2003 for Small Business Server
@s!e!b!l:Product=Windows Server 2003, Standard Edition
@e!d:Product=Windows Server 2003, Enterprise Edition
@d:Product=Windows Server 2003, Datacenter Edition

Version=5.0
Localization=English
ServicePackNumber=0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\remboot.txt ===
;
; Strings
;
[Strings]
RemInst_Desc = "Remote Installation Services"
@w!p:@@:RemInst_Help = "Provides the ability to remotely install Windows 2000 Professional on remote boot enabled client computers."
@p:@@:RemInst_Help = "Provides the ability to remotely install Windows 2000 Personal on remote boot enabled client computers."
srvcd = "Windows 2000 Server CD-ROM"
@w!p:@@:wkscd = "Windows 2000 Professional CD-ROM"
@p:@@:wkscd = "Windows 2000 Personal CD-ROM"

REG_DWORD       =0x10001
REG_EXPAND_SZ   =0x20000
REG_BINARY      =0x00001
REG_SZ          =0x00000
REG_MULTI_SZ    =0x10000
REG_NONE        =0x20001

SERVICE_DISABLED = 4
SERVICE_DEMAND_START = 3
SERVICE_AUTO_START = 2
SERVICE_WIN32_SHARE_PROCESS = 32
SERVICE_FILE_SYSTEM_DRIVER = 2
SERVICE_WIN32_OWN_PROCESS = 16
SERVICE_BOOT_START = 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ramdisk.txt ===
[Strings]
MS                 = "Microsoft"
ClassName          = "Ramdisk"
RamdiskBusDesc     = "Windows RAM Disk Controller"
RamdiskDiskDesc    = "Windows RAM Disk Device (disk)"
RamdiskVolumeDesc  = "Windows RAM Disk Device (volume)"
RamdiskServiceDesc = "Windows RAM Disk Driver"

;*******************************************
;Handy macro substitutions (non-localizable)
SPSVCINST_ASSOCSERVICE = 0x00000002
SERVICE_KERNEL_DRIVER  = 1
SERVICE_DEMAND_START   = 3
SERVICE_ERROR_NORMAL   = 1
REG_DWORD              = 0x00010001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ptpusb.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 && LANGUAGE_ID != 0x412

#elif LANGUAGE_ID == 0x804

#elif LANGUAGE_ID == 0x404

#elif LANGUAGE_ID == 0x411

#elif LANGUAGE_ID == 0x412

#endif

;non-localizable
MfgKodak="Eastman Kodak Company"
Msft="Microsoft"
Mfg="Microsoft"


USB\VID_040A&PID_0131.Device="Kodak DC5000 Digital Camera"
USB\VID_040A&PID_0121.Device="Kodak Digital Camera"
USB\VID_040A&PID_0140.Device="Kodak DC4800 Zoom Digital Camera"
USB\VID_040A&PID_0200.Device="Kodak Digital Camera"
KodakDC4800="Kodak DC4800 Zoom Digital Camera"
KodakDC5000="Kodak DC5000 Zoom Digital Camera"
SonyPrototype="Sony Digital Camera"
SonyCamera="Sony Digital Camera"
GenericPTP.DeviceDesc="Digital Still Camera"


;; TWAIN DS names
;;

TwainDS_5000="WIA-Kodak DC5000 Digital Camera"
TwainDS_PTPP="WIA-Kodak Digital Camera"
TwainDS_4800="WIA-Kodak DC4800 Zoom Digital Camera"
TwainDS_DC  ="WIA-Kodak Digital Camera"

;;
;; Localizable strings
;;
DC15740Disconnected="Kodak PTP camera disconnected"
DC15740Connected="Kodak PTP camera connected"

DCConnected="Digital camera connected"
DCDisconnected= "Digital camera  disconnected"

Generic.Mfg="(Standard PTP-compliant digital cameras)"
MfgName="Eastman Kodak Company"
MfgSony="Sony"
MfgFlashPoint="Eastman Kodak Company"
PowerOn="Powered on"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ricoh.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 && LANGUAGE_ID != 0x412
#elif LANGUAGE_ID == 0x804
#elif LANGUAGE_ID == 0x404
#elif LANGUAGE_ID == 0x411
#elif LANGUAGE_ID == 0x412
#endif

Msft="Microsoft"
Ricoh="Ricoh"
Mfg="Ricoh"
Ricoh_IS330_Scanner="IS330"
Ricoh_IS450_Scanner="IS450"
Ricoh_IS430_Scanner="IS430"
Ricoh_IS420_Scanner="IS420"
Ricoh_IS01_Scanner="Aficio IS01"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\prtupg9x.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...

#elif LANGUAGE_ID == 0x804
//CHS specific sections
;
; Printer Mapping Sections (Simplified Chinese)
;

[Printer Driver Mapping]
"EPSON EPL-5200K" = "EPSON LASER EPL-5200K"
"EPSON EPL-5500K" = "EPSON LASER EPL-5500K"
"EPSON EPL-8600K" = "EPSON LASER EPL-8600K"
"EPSON EPL-N1610 Advanced" = "EPSON LASER EPL-N1610"
"EPSON EPL-N2000K" = "EPSON LASER EPL-N2000K"
"EPSON EPL-N2010 Advanced" = "EPSON LASER EPL-N2010"
"Epson LQ-1600KIII ESC/P-K" = "EPSON LQ-1600KIII"
"Epson LQ-670K ESC/PK2" = "EPSON LQ-670K"
"EPSON MJ-1500K" = "EPSON MJ-1500K ESC/PK"
"EPSON MJ-1500K+" = "EPSON MJ-1500K ESC/PK"
"EPSON MJ-510K" = "EPSON MJ-510K ESC/PK"
"EPSON MJ-850K" = "EPSON MJ-850K ESC/PK"
"EPSON Stylus COLOR 1520K" = "Epson Stylus COLOR 1520K ESC/PK"

[Printer Driver Mapping WINNT]
"Epson EPL-5200K" = "EPSON LASER EPL-5200K"
"Epson EPL-5500K" = "EPSON LASER EPL-5500K"
"Epson EPL-8600K" = "EPSON LASER EPL-8600K"
"EPSON EPL-N1610 Advanced" = "EPSON LASER EPL-N1610"
"Epson EPL-N2000K" = "EPSON LASER EPL-N2000K"
"EPSON EPL-N2010 Advanced" = "EPSON LASER EPL-N2010"
"EPSON Stylus COLOR 1520K" = "EPSON Stylus COLOR 1520K ESC/PK"

#elif LANGUAGE_ID == 0x404
//CHT specific sections
;
; Printer Mapping Sections (Traditional Chinese)
;

[Printer Driver Mapping]
"EPSON EPL-5200C" = "Epson EPL-5200C"
"EPSON EPL-5200C+" = "Epson EPL-5200C+"
"EPSON EPL-5500C" = "Epson EPL-5500C"
"EPSON EPL-7050C" = "Epson EPL-7050C LQ-MODE"
"EPSON EPL-9000C" = "Epson EPL-9000C"
"EPSON EPL-N1200C" = "EPSON LASER EPL-N1200C"
"Epson EPL-N1200C" = "EPSON LASER EPL-N1200C"
"EPSON EPL-N1610 Advanced" = "EPSON LASER EPL-N1610"
"EPSON EPL-N2000C" = "EPSON LASER EPL-N2000C"
"Epson EPL-N2000C" = "EPSON LASER EPL-N2000C"
"EPSON EPL-N2010 Advanced" = "EPSON LASER EPL-N2010"
"Panasonic KX-P2624C %SILENT_MODEL%" = "Panasonic KX-P2624C"

[Printer Driver Mapping WINNT]
"Epson EPL-7050C" = "Epson EPL-7050C LQ-MODE"
"Epson EPL-N1200C" = "EPSON LASER EPL-N1200C"
"EPSON EPL-N1610 Advanced" = "EPSON LASER EPL-N1610"
"Epson EPL-N2000C" = "EPSON LASER EPL-N2000C"
"EPSON EPL-N2010 Advanced" = "EPSON LASER EPL-N2010"
"Epson Stylus 1000C" = "EPSON Stylus 1000C"
"Epson Stylus 800C" = "EPSON Stylus 800C"
"Epson Stylus 800C+" = "EPSON Stylus 800C+"

#elif LANGUAGE_ID == 0x411
//JPN specific sections
;
; Printer Mapping Sections (Japanese)
;

[Printer Driver Mapping]
"APTi PowerTyper M603<5577>" = "APTi PowerTyper M603"
"APTi PowerTyper M603<ESCP>" = "APTi PowerTyper M603"
"APTi PowerTyper M612<5577>" = "APTi PowerTyper M612 5577"
"APTi PowerTyper M612<ESCP>" = "APTi PowerTyper M612 5577"
"APTi PowerTyper M613<5577>" = "APTi PowerTyper M613S"
"APTi PowerTyper M613<ESCP>" = "APTi PowerTyper M613S"
"APTi PowerTyper M613S<5577>" = "APTi PowerTyper M613S"
"APTi PowerTyper M613S<ESCP>" = "APTi PowerTyper M613S"
"APTi PowerTyper M632<5577>" = "APTi PowerTyper M632 5577"
"APTi PowerTyper M632<ESCP>" = "APTi PowerTyper M632 5577"
"APTi PowerTyper M643<5577>" = "APTi PowerTyper M643"
"APTi PowerTyper M643<ESCP>" = "APTi PowerTyper M643"
"APTi PowerTyper M702<5577>" = "APTi PowerTyper M702 5577"
"APTi PowerTyper M702<ESCP>" = "APTi PowerTyper M702 5577"
"APTi PowerTyper M703<5577>" = "APTi PowerTyper M703"
"APTi PowerTyper M703<ESCP>" = "APTi PowerTyper M703"
"Canon BJ-220J" = "Canon BJ-220JC"
;"Canon BJ-220J" = "Canon BJ-220JS"
"Canon BJ-220J2" = "Canon BJ-220JC II"
;"Canon BJ-220J2" = "Canon BJ-220JS II"
"Canon BJ-300J" = "Canon BJ-300J VP Model"
"Canon BJ-330J" = "Canon BJ-330J VP Model"
"Canon BJ F100" = "Canon Bubble-Jet BJ F100"
"Canon BJ F200" = "Canon Bubble-Jet BJ F200"
"Canon BJ F210" = "Canon Bubble-Jet BJ F210"
"Canon BJ F300" = "Canon Bubble-Jet BJ F300"
"Canon BJ F360" = "Canon Bubble-Jet BJ F360"
"Canon BJ F600" = "Canon Bubble-Jet BJ F600"
"Canon BJ F6000" = "Canon Bubble-Jet BJ F6000"
"Canon BJ F610" = "Canon Bubble-Jet BJ F610"
"Canon BJ F6100" = "Canon Bubble-Jet BJ F6100"
"Canon BJ F620" = "Canon Bubble-Jet BJ F620"
"Canon BJ F660" = "Canon Bubble-Jet BJ F660"
"Canon BJ F6600" = "Canon Bubble-Jet BJ F6600"
"Canon BJ F800" = "Canon Bubble-Jet BJ F800"
"Canon BJ M40" = "Canon Bubble-Jet BJ M40"
"Canon BJ M70" = "Canon Bubble-Jet BJ M70"
"Canon BJC-210J" = "Canon Bubble-Jet BJC-210J"
"Canon BJC-240J" = "Canon Bubble-Jet BJC-240J"
"Canon BJC-250J" = "Canon Bubble-Jet BJC-250J"
"Canon BJC-35v (MS)" = "Canon Bubble-Jet BJC-35v"
"Canon BJC-35v" = "Canon Bubble-Jet BJC-35v"
"Canon BJC-35vII" = "Canon Bubble-Jet BJC-35vII"
"Canon BJC-400J (MS)" = "Canon Bubble-Jet BJC-400J"
"Canon BJC-400J" = "Canon Bubble-Jet BJC-400J"
"Canon BJC-410J" = "Canon Bubble-Jet BJC-410J"
"Canon BJC-420J" = "Canon Bubble-Jet BJC-420J"
"Canon BJC-430J" = "Canon Bubble-Jet BJC-430J"
"Canon BJC-440J" = "Canon Bubble-Jet BJC-440J"
"Canon BJC-455J" = "Canon Bubble-Jet BJC-455J"
"Canon BJC-465J" = "Canon Bubble-Jet BJC-465J"
"Canon BJC-50v" = "Canon Bubble-Jet BJC-50v"
"Canon BJC-5500J" = "Canon Bubble-Jet BJC-5500J"
"Canon BJC-600J (MS)" = "Canon Bubble-Jet BJC-600J"
"Canon BJC-600J" = "Canon Bubble-Jet BJC-600J"
"Canon BJC-610JW (Raster)" = "Canon Bubble-Jet BJC-610JW"
"Canon BJC-610JW" = "Canon Bubble-Jet BJC-610JW"
"Canon BJC-620JW (Raster)" = "Canon Bubble-Jet BJC-620JW"
"Canon BJC-620JW" = "Canon Bubble-Jet BJC-620JW"
"Canon BJC-680J Raster (MS)" = "Canon Bubble-Jet BJC-680J"
"Canon BJC-700J" = "Canon Bubble-Jet BJC-700J"
"Canon BJC-80v" = "Canon Bubble-Jet BJC-80v"
"Canon BJC-820J (MS)" = "Canon Bubble-Jet BJC-820J"
"Canon BJC-820J" = "Canon Bubble-Jet BJC-820J"
"Canon Bubble-Jet BJ-10v Custom" = "Canon BJ-10v Custom"
"Canon Bubble-Jet BJ-10v Lite" = "Canon BJ-10v Lite"
"Canon Bubble-Jet BJ-10v Select" = "Canon BJ-10v Select"
"Canon Bubble-Jet BJ-10v" = "Canon BJ-10v"
"Canon Bubble-Jet BJ-15v" = "Canon BJ-15v"
"Canon Bubble-Jet BJ-300J" = "Canon BJ-300J VP Model"
"Canon Bubble-Jet BJ-330J" = "Canon BJ-330J VP Model"
"Canon iR5000-6000" = "Canon iR5000"
"Canon iR5000-6000" = "Canon iR6000"
"Canon LASER SHOT LBP-1510" = "Canon LBP-1510 LIPS4"
"Canon LASER SHOT LBP-1610" = "Canon LBP-1610 LIPS4"
"Canon LASER SHOT LBP-1710" = "Canon LBP-1710 LIPS4"
"Canon LASER SHOT LBP-1810" = "Canon LBP-1810 LIPS4"
"Canon LASER SHOT LBP-2030" = "Canon LBP-2030 LIPS4"
"Canon LASER SHOT LBP-2040" = "Canon LBP-2040 LIPS4"
"Canon LASER SHOT LBP-2160" = "Canon LBP-2160 LIPS4"
"Canon LASER SHOT LBP-2200" = "Canon LBP-2200 LIPS4"
"Canon LASER SHOT LBP-2260" = "Canon LBP-2260 LIPS4"
"Canon LASER SHOT LBP-2300" = "Canon LBP-2300 LIPS4"
"Canon LASER SHOT LBP-2360" = "Canon LBP-2360 LIPS4"
"Canon LASER SHOT LBP-430" = "Canon LBP-430 LIPS4"
"Canon LASER SHOT LBP-450" = "Canon LBP-450 LIPS4"
"Canon LASER SHOT LBP-470" = "Canon LBP-470 LIPS4"
"Canon LASER SHOT LBP-720" = "Canon LBP-720 LIPS4"
"Canon LASER SHOT LBP-730" = "Canon LBP-730 LIPS4"
"Canon LASER SHOT LBP-730PS 2F" = "Canon LBP-730PS F2"
"Canon LASER SHOT LBP-730PS 5F" = "Canon LBP-730PS F5"
"Canon LASER SHOT LBP-740" = "Canon LBP-740 LIPS4"
"Canon LASER SHOT LBP-750" = "Canon LBP-750 LIPS4"
"Canon LASER SHOT LBP-830" = "Canon LBP-830 LIPS4"
"Canon LASER SHOT LBP-840" = "Canon LBP-840 LIPS4"
"Canon LASER SHOT LBP-850" = "Canon LBP-850 LIPS4"
"Canon LASER SHOT LBP-870" = "Canon LBP-870 LIPS4"
"Canon LASER SHOT LBP-880" = "Canon LBP-880 LIPS4"
"Canon LASER SHOT LBP-910" = "Canon LBP-910 LIPS4"
"Canon LASER SHOT LBP-930" = "Canon LBP-930 LIPS4"
"Canon LASER SHOT LBP-930EX" = "Canon LBP-930EX LIPS4"
"Canon LASER SHOT LBP-950" = "Canon LBP-950 LIPS4"
"Canon LaserShot A304E LIPS3" = "Canon LBP-A304E LIPS3"
"Canon LaserShot A304E2 LIPS3" = "Canon LBP-A304E2 LIPS3"
"Canon LaserShot A304G2 LIPS3" = "Canon LBP-A304G2 LIPS3"
"Canon LaserShot A309G2 LIPS3" = "Canon LBP-A309G2 LIPS3"
"Canon LaserShot A404 LIPS3" = "Canon LBP-A404 LIPS3"
"Canon LaserShot A404E LIPS3" = "Canon LBP-A404E LIPS3"
"Canon LaserShot A404F LIPS3" = "Canon LBP-A404F LIPS3"
"Canon LaserShot A404G2 LIPS3" = "Canon LBP-A404G2 LIPS3"
"Canon LaserShot A405Jr. LIPS3" = "Canon LBP-A405Jr. LIPS3"
"Canon LaserShot B406D LIPS3" = "Canon LBP-B406D LIPS3"
"Canon LaserShot B406E LIPS3" = "Canon LBP-B406E LIPS3"
"Canon LaserShot B406E2 LIPS3" = "Canon LBP-B406E2 LIPS3"
"Canon LaserShot B406G LIPS3" = "Canon LBP-B406G LIPS3"
"Canon LaserShot B406G2 LIPS3" = "Canon LBP-B406G2 LIPS3"
"Canon LaserShot B406S LIPS3" = "Canon LBP-B406S LIPS3"
"Canon LaserShot LBP-310 LIPS3" = "Canon LBP-310 LIPS3"
"Canon LaserShot LBP-320 LIPS3" = "Canon LBP-320/320Pro LIPS3"
"Canon LaserShot LBP-350 LIPS3" = "Canon LBP-350 LIPS3"
"Canon LBP-2030PS v2013.114" = "Canon LBP-2030PS"
"Canon MEDIO LIPS-B1" = "Canon MEDIO-B1"
"Canon MEDIO LIPS-D1" = "Canon MEDIO-D1"
"Canon MEDIO LIPS-E1" = "Canon MEDIO-E1"
"Canon MEDIO MDC PS" = "Canon MDC PS"
"Canon PS-IPU Color Laser Copier" = "Canon PS-IPU Kanji Color Laser Copier"
"CASIO COLOR N4 (95native)" = "CASIO N4"
"CASIO COLOR PAGEPRESTO N4-612" = "CASIO N4-612"
"CASIO COLOR PAGEPRESTO N4" = "CASIO N4"
"CASIO CP-2100(J) S/D." = "CASIO CP-2100"
"CASIO CP-2120/2200 S/D." = "CASIO CP-2200"
"CASIO CP-2150(J) S/D." = "CASIO CP-2150"
"CASIO CP-2200W S/D." = "CASIO CP-2200W"
"CASIO CP-3250 Winmode" = "CASIO CP-3250GT"
"CASIO CP-3250/3500." = "CASIO CP-3500"
"CASIO CP-3500 Winmode" = "CASIO CP-3500GT"
"CASIO CP-3800 Winmode" = "CASIO CP-3800"
"CASIO CP-3900 Winmode" = "CASIO CP-3900"
"CASIO CP-7100series" = "CASIO CP-7100"
"CASIO CP-7200series" = "CASIO CP-7250"
"CASIO CP-7300series" = "CASIO CP-7300"
"CASIO CP3250GT Winmode" = "CASIO CP-3250GT"
"CASIO CP3500GT Winmode" = "CASIO CP-3500GT"
"CASIO CP3800 Winmode" = "CASIO CP-3800"
"CASIO CP3900 Winmode" = "CASIO CP-3900"
"CASIO PAGEPRESTO (CP-3250)" = "CASIO CP-3250"
"CASIO PAGEPRESTO (CP-3500)" = "CASIO CP-3500"
"CASIO PAGEPRESTO CP-7100" = "CASIO CP-7100"
"CASIO PAGEPRESTO CP-7100series" = "CASIO CP-7100"
"CASIO PAGEPRESTO CP-7200" = "CASIO CP-7200"
"CASIO PAGEPRESTO CP-7200series" = "CASIO CP-7250"
"CASIO PAGEPRESTO CP-7250" = "CASIO CP-7250"
"CASIO PAGEPRESTO CP-7300" = "CASIO CP-7300"
"CASIO PAGEPRESTO CP-7300series" = "CASIO CP-7300"
"CASIO PAGEPRESTO CP-7400" = "CASIO CP-7400"
"CASIO PAGEPRESTO CP-7400series" = "CASIO CP-7400"
"CASIO PAGEPRESTO CP-7500" = "CASIO CP-7500"
"CASIO PAGEPRESTO CP-7500series" = "CASIO CP-7500"
"CASIO SPEEDIA CP-E8000" = "CASIO CP-E8000"
"CASIO SPEEDIA N4-612" = "CASIO N4-612"
"CASIO SPEEDIA N4-612 v5" = "CASIO N4-612"
"CASIO SPEEDIA N4" = "CASIO N4"
"CASIO SPEEDIA N5" = "CASIO N5"
"Digital PrintServer 32/J/Net" = "Digital PrintServer 32 Kanji v48.3"
"Digital PrintServer40Plus/J/Net" = "Digital PrintServer 40 Plus Kanji v48.3"
"Digital turboPrintServer20J/Net" = "Digital turbo PrintServer 20 Kanji v48.3"
"DS ColorSysAM (7JFonts)" = "SCREEN ColorSysAM (7JFonts)"
"DS ColorSysAM" = "SCREEN ColorSysAM"
"DS DT-R1065AM (7JFonts)" = "SCREEN DT-R1065AM (7JFonts)"
"DS DT-R1065AM" = "SCREEN DT-R1065AM"
"DS DT-R2035AM (7JFonts)" = "SCREEN DT-R2035AM (7JFonts)"
"DS DT-R2035AM" = "SCREEN DT-R2035AM"
"DS DT-R2065AM (7JFonts)" = "SCREEN DT-R2065AM (7JFonts)"
"DS DT-R2065AM" = "SCREEN DT-R2065AM"
"DS FP-350JAM (2JFonts)" = "SCREEN FP-350JAM (2JFonts)"
"DS FP-350JAM" = "SCREEN FP-350JAM"
"DS MT-R1080AM (7JFonts)" = "SCREEN MT-R1080AM (7JFonts)"
"DS MT-R1080AM" = "SCREEN MT-R1080AM"
"DS MT-R1100AM (7JFonts)" = "SCREEN MT-R1100AM (7JFonts)"
"DS MT-R1100AM" = "SCREEN MT-R1100AM"
"DS MT-R1120AM (7JFonts)" = "SCREEN MT-R1120AM (7JFonts)"
"DS MT-R1120AM" = "SCREEN MT-R1120AM"
"DS PI-R1080AM (7JFonts)" = "SCREEN PI-R1080AM (7JFonts)"
"DS PI-R1080AM" = "SCREEN PI-R1080AM"
"DS SDP-2600AM (7JFonts)" = "SCREEN SDP-2600AM (7JFonts)"
"DS SDP-2600AM" = "SCREEN SDP-2600AM"
"EPSON CC-700" = "EPSON CC-700 ESC/P R"
"EPSON EM-900C" = "EPSON EM-900C ESC/P R"
"EPSON LP-1700S" = "EPSON LASER LP-1700S"
"EPSON LP-1800" = "EPSON LASER LP-1800"
"EPSON LP-1900" = "EPSON LASER LP-1900"
"EPSON LP-3000C" = "EPSON LASER LP-3000C"
"EPSON LP-800" = "EPSON LASER LP-800"
"EPSON LP-8000C" = "EPSON LASER LP-8000C"
"EPSON LP-8200C" = "EPSON LASER LP-8200C"
"EPSON LP-8300" = "EPSON LASER LP-8300"
"EPSON LP-8300C" = "EPSON LASER LP-8300C"
"EPSON LP-8300F" = "EPSON LASER LP-8300F"
"EPSON LP-8300S" = "EPSON LASER LP-8300S"
"EPSON LP-8400" = "EPSON LASER LP-8400"
"EPSON LP-8400F" = "EPSON LASER LP-8400F"
"EPSON LP-8400FX" = "EPSON LASER LP-8400FX"
"EPSON LP-8500C" = "EPSON LASER LP-8500C"
"EPSON LP-8600" = "EPSON LASER LP-8600"
"EPSON LP-8600F" = "EPSON LASER LP-8600F"
"EPSON LP-8600FX" = "EPSON LASER LP-8600FX"
"EPSON LP-9200S" = "EPSON LASER LP-9200S"
"EPSON LP-9200SX" = "EPSON LASER LP-9200SX"
"EPSON LP-9300" = "EPSON LASER LP-9300"
"EPSON LP-9600" = "EPSON LASER LP-9600"
"EPSON LP-9600S" = "EPSON LASER LP-9600S"
"EPSON MC-2000" = "EPSON MC-2000 ESC/P R"
"EPSON MJ-3000C" = "EPSON MJ-3000C ESC/P R"
"EPSON MJ-5000C (MS)" = "EPSON MJ-5000C ESC/P R"
"EPSON MJ-5000C" = "EPSON MJ-5000C ESC/P R"
"EPSON MJ-500C" = "EPSON MJ-500C ESC/P R"
"EPSON MJ-5100C" = "EPSON MJ-5100C ESC/P R"
"EPSON MJ-510C" = "EPSON MJ-510C ESC/P R"
"EPSON MJ-6000C" = "EPSON MJ-6000C ESC/P R"
"EPSON MJ-700V2C (MS)" = "EPSON MJ-700V2C ESC/P R"
"EPSON MJ-700V2C" = "EPSON MJ-700V2C ESC/P R"
"EPSON MJ-8000C" = "EPSON MJ-8000C ESC/P R"
"EPSON MJ-800C" = "EPSON MJ-800C ESC/P R"
"EPSON MJ-810C" = "EPSON MJ-810C ESC/P R"
"EPSON MJ-830C" = "EPSON MJ-830C ESC/P R"
"EPSON MJ-900C" = "EPSON MJ-900C ESC/P R"
"EPSON MJ-910C" = "EPSON MJ-910C ESC/P R"
"EPSON MJ-930C" = "EPSON MJ-930C ESC/P R"
"EPSON PM-2000C" = "EPSON PM-2000C ESC/P R"
"EPSON PM-2200C" = "EPSON PM-2200C ESC/P R"
"EPSON PM-3000C" = "EPSON PM-3000C ESC/P R"
"EPSON PM-3300C" = "EPSON PM-3300C ESC/P R"
"EPSON PM-5000C" = "EPSON PM-5000C ESC/P R"
"EPSON PM-600C" = "EPSON PM-600C ESC/P R"
"EPSON PM-670C" = "EPSON PM-670C ESC/P R"
"EPSON PM-680C" = "EPSON PM-680C ESC/P R"
"EPSON PM-700C" = "EPSON PM-700C ESC/P R"
"EPSON PM-750C" = "EPSON PM-750C ESC/P R"
"EPSON PM-760C" = "EPSON PM-760C ESC/P R"
"EPSON PM-770C" = "EPSON PM-770C ESC/P R"
"EPSON PM-800C" = "EPSON PM-800C ESC/P R"
"EPSON PM-820C" = "EPSON PM-820C ESC/P R"
"EPSON PT-100" = "EPSON PT-100 ESC/P R"
"FMPR 180DPI color" = "FUJITSU FMPR 180 (Color)"
"FMPR 180DPI" = "FUJITSU FMPR 180"
"Fuji Xerox 4160 J2" = "Fuji Xerox 4160 PS/J2"
"Fuji Xerox 4160 J5" = "Fuji Xerox 4160 PS/J5"
"Fuji Xerox Able Model-PR J2" = "Fuji Xerox Able Model-PR PS/J2"
"Fuji Xerox Able Model-PR J5" = "Fuji Xerox Able Model-PR PS/J2"
"Fuji Xerox AbleModel-PR ART4" = "Fuji Xerox Able Model-PR ART4"
"Fujitsu FMLBP211PS" = "FUJITSU FMLBP211PS"
"FUJITSU FMLBP225PS" = "FUJITSU FMLBP225PS 2Fonts"
"FUJITSU Printpartner GL-340" = "FUJITSU PrintPartner GL-340"
"FUJITSU Printpartner GL-340(MV)" = "FUJITSU PrintPartner GL-340"
"FUJITSU Printpartner GL-340/I" = "FUJITSU PrintPartner GL-340"
"FUJITSU Printpartner GL-340/IMV" = "FUJITSU PrintPartner GL-340"
"FUJITSU PrintPartner GL-340E-MV" = "FUJITSU PrintPartner GL-340E"
"FUJITSU Printpartner GL-360" = "FUJITSU PrintPartner GL-360"
"FUJITSU Printpartner GL-360(MV)" = "FUJITSU PrintPartner GL-360"
"FUJITSU Printpartner GL-360/I" = "FUJITSU PrintPartner GL-360"
"FUJITSU Printpartner GL-360/IMV" = "FUJITSU PrintPartner GL-360"
"FUJITSU PrintPartner GL-360E-MV" = "FUJITSU PrintPartner GL-360E"
"FUJITSU PrintPartner GL-740(MV)" = "FUJITSU PrintPartner GL-740"
"FUJITSU PrintPartner GL-740/I" = "FUJITSU PrintPartner GL-740"
"FUJITSU PrintPartner GL-740/IMV" = "FUJITSU PrintPartner GL-740"
"FUJITSU PrintPartner GL-740E-MV" = "FUJITSU PrintPartner GL-740E"
"FUJITSU PrintPartner GL-740S-MV" = "FUJITSU PrintPartner GL-740S (MS)"
"FUJITSU PrintPartner GL-760(MV)" = "FUJITSU PrintPartner GL-760"
"FUJITSU PrintPartner GL-760/I" = "FUJITSU PrintPartner GL-760"
"FUJITSU PrintPartner GL-760/IMV" = "FUJITSU PrintPartner GL-760"
"FUJITSU PrintPartner GL-760E-MV" = "FUJITSU PrintPartner GL-760E"
"FUJITSU PrintPartner GL-760S-MV" = "FUJITSU PrintPartner GL-760S (MS)"
"FUJITSU PrintPartner GL-760SDMV" = "FUJITSU PrintPartner GL-760SD (MS)"
"FUJITSU PrintPartner GL340E/I" = "FUJITSU PrintPartner GL-340E"
"FUJITSU PrintPartner GL340E/IMV" = "FUJITSU PrintPartner GL-340E"
"FUJITSU PrintPartner GL360E/I" = "FUJITSU PrintPartner GL-360E"
"FUJITSU PrintPartner GL360E/IMV" = "FUJITSU PrintPartner GL-360E"
"FUJITSU PrintPartner GL740E/I" = "FUJITSU PrintPartner GL-740E"
"FUJITSU PrintPartner GL740E/IMV" = "FUJITSU PrintPartner GL-740E"
"FUJITSU PrintPartner GL760E/I" = "FUJITSU PrintPartner GL-760E"
"FUJITSU PrintPartner GL760E/IMV" = "FUJITSU PrintPartner GL-760E"
"FX Acolor SMICS Server V4.0" = "Fuji Xerox Acolor SMICS Server V4.0"
"FX Acolor620 SMICS Server V4.0" = "Fuji Xerox Acolor620 SMICS Server V4.0"
"FX Laser Press 4150II PS/J2" = "Fuji Xerox 4150II PS/J2"
"FX Laser Press 4150II PS/J5" = "Fuji Xerox 4150II PS/J5"
"Hitachi Koki Typhoon16/F2 2.0" = "Hitachi Koki Typhoon 16/F2 2.0"
"Hitachi Koki Typhoon16/F5 2.0" = "Hitachi Koki Typhoon 16/F5 2.0"
"Hitachi Koki Typhoon24/F2" = "Hitachi Koki Typhoon 24/F2"
"Hitachi Koki Typhoon24/F5" = "Hitachi Koki Typhoon 24/F5"
"Hitachi Koki Typhoon8/F18 2.0" = "Hitachi Koki Typhoon 8/F18 2.0"
"Hitachi Koki Typhoon8/F5 2.0" = "Hitachi Koki Typhoon 8/F5 2.0"
"Laser Wind 1040PS J2" = "Fuji Xerox Laser Wind 1040PS J2"
"Laser Wind 1040PS J4" = "Fuji Xerox Laser Wind 1040PS J4"
"Laser Wind 1040PS J5" = "Fuji Xerox Laser Wind 1040PS J5"
"Laser Wind 1040PS J7" = "Fuji Xerox Laser Wind 1040PS J7"
"NEC MultiWriter 1000EW WPS" = "NEC MultiWriter 1000EW NPDL2"
"NEC MultiWriter 1000EW" = "NEC MultiWriter 1000EW NPDL2"
"NEC MultiWriter 2000E WPS" = "NEC MultiWriter 2000E NPDL2"
"NEC MultiWriter 2000E" = "NEC MultiWriter 2000E NPDL2"
"NEC MultiWriter 2000FW WPS" = "NEC MultiWriter 2000FW NPDL2"
"NEC MultiWriter 2000FW" = "NEC MultiWriter 2000FW NPDL2"
"NEC MultiWriter 2200NW WPS" = "NEC MultiWriter 2200NW NPDL2"
"NEC MultiWriter 2200NW" = "NEC MultiWriter 2200NW NPDL2"
"NEC MultiWriter 2200NW2 WPS" = "NEC MultiWriter 2200NW2 NPDL2"
"NEC MultiWriter 2200NW2" = "NEC MultiWriter 2200NW2 NPDL2"
"NEC MultiWriter 2400" = "NEC MultiWriter 2400 NPDL2"
"NEC PC-PR1000E/4W" = "NEC PC-PR1000E/4W NPDL2"
"NEC PC-PR2000/4R WPS" = "NEC PC-PR2000/4R NPDL2"
"NEC PC-PR2000/4R" = "NEC PC-PR2000/4R NPDL2"
"NEC PC-PR2000/4W WPS" = "NEC PC-PR2000/4W NPDL2"
"NEC PC-PR2000/4W" = "NEC PC-PR2000/4W NPDL2"
"NEC PC-PR2000/6W WPS" = "NEC PC-PR2000/6W NPDL2"
"NEC PC-PR2000/6W" = "NEC PC-PR2000/6W NPDL2"
"NEC PC-PR3000PS 320dpi" = "NEC PC-PR3000PS"
"NEC PC-PR3000PS/4 400dpi" = "NEC PC-PR3000PS/4"
"NEC PC-PR3000PS/4F 400dpi" = "NEC PC-PR3000PS/4F"
"NEC PC-PR602PS 320dpi" = "NEC PC-PR602PS"
"NEC PC-PR750/150(160dpi)" = "NEC PC-PR750/150"
"NEC PC-PR750/150R(160dpi)" = "NEC PC-PR750/150"
"NEC PC-PR750/150R(168dpi)" = "NEC PC-PR750/150R"
"NEC PC-PR750/360(160dpi)" = "NEC PC-PR750/150"
"NEC PC-PR750/360(168dpi)" = "NEC PC-PR750/360"
"NEC PICTY100L Printer" = "NEC PICTY100L"
"NEC PICTY180 Printer" = "NEC PC-PR101/J180"
"NEC PICTY180(PC-PR101/J180)" = "NEC PC-PR101/J180"
"NEC PICTY200 Printer" = "NEC PICTY200"
"NEC PICTY220 Printer" = "NEC PICTY220"
"NEC PICTY300 Printer" = "NEC PICTY300"
"NEC PICTY320 Printer" = "NEC PICTY320"
"NEC PICTY400 Printer" = "NEC PICTY400"
"NEC PICTY4000 Printer" = "NEC PICTY4000"
"NEC PICTY700 Printer" = "NEC PICTY700"
"NEC PICTY80L Printer" = "NEC PICTY80L"
"NEC PICTY900 Printer" = "NEC PICTY900"
"NEC WPS Printer" = "NEC PC-PR1000E/4W NPDL2"
"RICOH FAX Printer" = "RICOH FAX Printer RPDL"
"RICOH imagio MF-FD355" = "RICOH IMAGIO MF-FD355 RPDL"
"RICOH imagio MF-FD355FAX" = "RICOH IMAGIO MF-P355 RPDL(FAX)"
"RICOH imagio MF-p150" = "RICOH IMAGIO MF-p150 RPDL"
"RICOH imagio MF-P250" = "RICOH IMAGIO MF-P250(T) RPDL"
"RICOH imagio MF-P250e" = "RICOH IMAGIO MF-P250e RPDL"
"RICOH imagio MF-P250eFAX" = "RICOH IMAGIO MF-P250 RPDL(FAX)"
"RICOH imagio MF-P250FAX" = "RICOH IMAGIO MF-P250 RPDL(FAX)"
"RICOH imagio MF-P355" = "RICOH IMAGIO MF-P355 RPDL"
"RICOH imagio MF-P355e" = "RICOH IMAGIO MF-P355e RPDL"
"RICOH imagio MF-P355eFAX" = "RICOH IMAGIO MF-P355 RPDL(FAX)"
"RICOH imagio MF-P355FAX" = "RICOH IMAGIO MF-P355 RPDL(FAX)"
"RICOH imagio MF105Pro" = "RICOH imagio MF105Pro RPDL"
"RICOH IMAGIO MF150" = "RICOH IMAGIO MF150 RPDL"
"RICOH IMAGIO MF150e" = "RICOH IMAGIO MF150e RPDL"
"RICOH imagio MF1530" = "RICOH imagio MF1530 RPDL"
"RICOH imagio MF1530(FAX)" = "RICOH imagio MF1530 RPDL(FAX)"
"RICOH imagio MF200" = "RICOH IMAGIO MF200 RPDL"
"RICOH imagio MF2200" = "RICOH imagio MF2200 RPDL"
"RICOH imagio MF250M" = "RICOH IMAGIO MF250M RPDL"
"RICOH imagio MF2700" = "RICOH imagio MF2700 RPDL"
"RICOH imagio MF2700(FAX)" = "RICOH imagio MF2700 RPDL(FAX)"
"RICOH imagio MF3300W" = "RICOH imagio MF3300W RPDL"
"RICOH imagio MF3350W" = "RICOH imagio MF3350W RPDL"
"RICOH imagio MF3500" = "RICOH imagio MF3500 RPDL"
"RICOH imagio MF3500(FAX)" = "RICOH imagio MF3500 RPDL(FAX)"
"RICOH imagio MF3530" = "RICOH imagio MF3530 RPDL"
"RICOH imagio MF3530(FAX)" = "RICOH imagio MF3530 RPDL(FAX)"
"RICOH imagio MF3530e" = "RICOH imagio MF3530e RPDL"
"RICOH imagio MF3530e(FAX)" = "RICOH imagio MF3530e RPDL(FAX)"
"RICOH imagio MF3540W" = "RICOH imagio MF3540W RPDL"
"RICOH imagio MF3540W(FAX)" = "RICOH imagio MF3540W RPDL(FAX)"
"RICOH imagio MF3550" = "RICOH imagio MF3550 RPDL"
"RICOH imagio MF3550(FAX)" = "RICOH imagio MF3550 RPDL(FAX)"
"RICOH imagio MF3570" = "RICOH imagio MF3570 RPDL"
"RICOH imagio MF3570(FAX)" = "RICOH imagio MF3570 RPDL(FAX)"
"RICOH imagio MF3570e" = "RICOH imagio MF3570e RPDL"
"RICOH imagio MF3570e(FAX)" = "RICOH imagio MF3570e RPDL(FAX)"
"RICOH imagio MF3580W" = "RICOH imagio MF3580W RPDL"
"RICOH imagio MF3580W(FAX)" = "RICOH imagio MF3580W RPDL(FAX)"
"RICOH imagio MF4550" = "RICOH imagio MF4550 RPDL"
"RICOH imagio MF4550(FAX)" = "RICOH imagio MF4550 RPDL(FAX)"
"RICOH imagio MF4570" = "RICOH imagio MF4570 RPDL"
"RICOH imagio MF4570(FAX)" = "RICOH imagio MF4570 RPDL(FAX)"
"RICOH imagio MF4570e" = "RICOH imagio MF4570e RPDL"
"RICOH imagio MF4570e(FAX)" = "RICOH imagio MF4570e RPDL(FAX)"
"RICOH IMAGIO MF530" = "RICOH IMAGIO MF530 RPDL"
"RICOH imagio MF5550" = "RICOH imagio MF5550 RPDL"
"RICOH imagio MF5550EX" = "RICOH imagio MF5550EX RPDL"
"RICOH imagio MF5570" = "RICOH imagio MF5570 RPDL"
"RICOH imagio MF6550" = "RICOH imagio MF6550 RPDL"
"RICOH imagio MF6550EX" = "RICOH imagio MF6550EX RPDL"
"RICOH imagio MF7070" = "RICOH imagio MF7070 RPDL"
"RICOH imagio MF8570" = "RICOH imagio MF8570 RPDL"
"RICOH imagio Neo 220" = "RICOH imagio Neo 220 RPDL"
"RICOH imagio Neo 270" = "RICOH imagio Neo 270 RPDL"
"RICOH imagio Neo 350" = "RICOH imagio Neo 350 RPDL"
"RICOH imagio Neo 350D" = "RICOH imagio Neo 350D RPDL"
"RICOH imagio Neo 450" = "RICOH imagio Neo 450 RPDL"
"RICOH IPSiO MF700" = "RICOH IPSiO MF700 RPDL"
"RICOH IPSiO NX1100" = "RICOH IPSiO NX1100 RPDL"
"RICOH IPSiO NX410" = "RICOH IPSiO NX410 RPDL"
"RICOH IPSiO NX600" = "RICOH IPSiO NX600 RPDL "
"RICOH IPSiO NX620" = "RICOH IPSiO NX620 RPDL"
"RICOH IPSiO NX620N" = "RICOH IPSiO NX620N RPDL"
"RICOH IPSiO NX70" = "RICOH IPSiO NX70 RPDL "
"RICOH IPSiO NX700" = "RICOH IPSiO NX700 RPDL "
"RICOH IPSiO NX71" = "RICOH IPSiO NX71 RPDL"
"RICOH IPSiO NX720N" = "RICOH IPSiO NX720N RPDL"
"RICOH IPSiO NX810" = "RICOH IPSiO NX810 RPDL"
"RICOH IPSiO NX900" = "RICOH IPSiO NX900 RPDL"
"RICOH IPSiO NX910" = "RICOH IPSiO NX910 RPDL"
"RICOH NX-100" = "RICOH NX-100 RPDL"
"RICOH NX-1000" = "RICOH NX-1000 RPDL"
"RICOH NX-110" = "RICOH NX-110 RPDL"
"RICOH NX-1100 RPDL" = "RICOH IPSiO NX1100 RPDL"
"RICOH NX-210" = "RICOH NX-210 RPDL"
"RICOH NX-500" = "RICOH NX-500 RPDL"
"RICOH NX-510" = "RICOH NX-510 RPDL"
"RICOH PC LASER SP10PS ProII" = "RICOH SP-10PS ProII RPDL"
"RICOH PC LASER SP10PS ProII/6F" = "RICOH SP-10PS ProII/6F RPDL"
"RICOH PC LASER SP9II" = "RICOH SP9II RPDL"
"RICOH SP-10PS Pro RPDL(400dpi)" = "RICOH SP-10PS Pro RPDL"
"RICOH SP-10PS Pro RPDL(600dpi)" = "RICOH SP-10PS Pro RPDL"
"RICOH SP-10PS Pro/6F RPDL(400)" = "RICOH SP-10PS Pro/6F RPDL"
"RICOH SP-10PS Pro/6F RPDL(600)" = "RICOH SP-10PS Pro/6F RPDL"
"RICOH SP-10PS(RPDL)" = "RICOH SP-10PS RPDL"
"RICOH SP-10PSmkII/3F(RPDL)" = "RICOH SP-10PSmkII(D)/3F RPDL"
"RICOH SP-10PSmkII/6F(RPDL)" = "RICOH SP-10PSmkII(D)/6F RPDL"
"RICOH SP-10PSmkIID/3F(RPDL)" = "RICOH SP-10PSmkII(D)/3F RPDL"
"RICOH SP-10PSmkIID/6F(RPDL)" = "RICOH SP-10PSmkII(D)/6F RPDL"
"RICOH SP-90" = "RICOH SP-90 RPDL"
"RICOH SP2000" = "RICOH SP-2000"
"RICOH SP2100" = "RICOH SP-2100"
"RICOH SP2200" = "RICOH SP-2200"
"RICOH SP4mkII" = "RICOH SP4mkII(+) RPDL"
"RICOH SP4mkII+" = "RICOH SP4mkII(+) RPDL"
"RICOH SP5" = "RICOH SP5(+) RPDL"
"RICOH SP5+" = "RICOH SP5(+) RPDL"
"RICOH SP7" = "RICOH SP7 RPDL"
"RICOH SP7mkII" = "RICOH SP7mkII(D) RPDL"
"RICOH SP7mkIID" = "RICOH SP7mkII(D) RPDL"
"RICOH SP8" = "RICOH SP8 RPDL"
"RICOH SP80" = "RICOH SP80 RPDL"
"RICOH SP8mkII" = "RICOH SP8mkII(D) RPDL"
"RICOH SP8mkIID" = "RICOH SP8mkII(D) RPDL"
"RICOH SP9 RPDL(400dpi)" = "RICOH SP9 RPDL"
"RICOH SP9 RPDL(600dpi)" = "RICOH SP9 RPDL"
"SCREEN DT-R3075AM" = "SCREEN DT-R3075"
"SCREEN DT-R3075AM(7JFonts)" = "SCREEN DT-R3075 (7JFonts)"
"SCREEN DT-R3100AM" = "SCREEN DT-R3100"
"SCREEN DT-R3100AM(7JFonts)" = "SCREEN DT-R3100 (7JFonts)"
"SCREEN FP-360JAM(2JFonts)" = "SCREEN FP-360JAM (2JFonts)"
"SCREEN FT-R3035AM" = "SCREEN FT-R3035"
"SCREEN FT-R3035AM(7JFonts)" = "SCREEN FT-R3035 (7JFonts)"
"SCREEN FT-R3050AM" = "SCREEN FT-R3050"
"SCREEN FT-R3050AM(7JFonts)" = "SCREEN FT-R3050 (7JFonts)"
"SCREEN TE-R1070AM" = "SCREEN TE-R1070"
"SCREEN TE-R1070AM(7JFonts)" = "SCREEN TE-R1070 (7JFonts)"
"Seiko ColorPoint 835PSJ JPN" = "Seiko ColorPoint 835PSJ"
"Tektronix Phaser 200e 17(4)" = "Tektronix Phaser 200e with 17 fonts v2011.108(3)"
"Tektronix Phaser 200e 39(4)" = "Tektronix Phaser 200e with 39 fonts v2011.108(3)"
"Tektronix Phaser 220e 17" = "Tektronix Phaser 220e with 17 fonts"
"Tektronix Phaser 220e 39" = "Tektronix Phaser 220e with 39 fonts"
"Tektronix Phaser II PXe 17" = "Tektronix Phaser II PXe v2010.128 with 17 fonts"
"Tektronix Phaser II PXe 39" = "Tektronix Phaser II PXe v2010.128 with 39 fonts"
"Tektronix Phaser IISD" = "Tektronix Phaser IISD v2011.108"
"TOSHIBA %DUAL_PRINTER%4VE(ESC/P)" = "TOSHIBA J31DMP06 ESC/P"
"Varityper 4000/5300A" = "Varityper 4000-5300A v52.3"
"Varityper 4000/5300B" = "Varityper 4000-5300B v52.3"
"Varityper 4000/5300C" = "Varityper 4000-5300C v52.3"
"Varityper 4000/5300EA" = "Varityper 4000-5300EA v52.3"
"Varityper 4000/5300EB" = "Varityper 4000-5300EB v52.3"
"Varityper 4000/5300EC" = "Varityper 4000-5300EC v52.3"
"Varityper 4000/5500A" = "Varityper 4000-5500A v52.3"
"Varityper 4000/5500B" = "Varityper 4000-5500B v52.3"
"Varityper 4000/5500C" = "Varityper 4000-5500C v52.3"
"Varityper 4000/5510A" = "Varityper 4000-5510A"
"Varityper 4000/5630A" = "Varityper 4000-5630A v52.3"
"Varityper 4000/5630B" = "Varityper 4000-5630B v52.3"
"Varityper 4000/5660" = "Varityper 5660 v52.3"
"Varityper 4000/5860" = "Varityper 5860 v52.3"
"Varityper 6000" = "Varityper 6000 v52.3"
"Victor Trueprint3500PS" = "JVC Trueprint3500PS"

[Printer Driver Mapping WINNT]
"Canon BJ F100 (BJRSTR)" = "Canon Bubble-Jet BJ F100"
"Canon BJ F200 (BJRSTR)" = "Canon Bubble-Jet BJ F200"
"Canon BJ F210" = "Canon Bubble-Jet BJ F210"
"Canon BJ F300 (BJRSTR)" = "Canon Bubble-Jet BJ F300"
"Canon BJ F300" = "Canon Bubble-Jet BJ F300"
"Canon BJ F360" = "Canon Bubble-Jet BJ F360"
"Canon BJ F600 (BJRSTR)" = "Canon Bubble-Jet BJ F600"
"Canon BJ F600" = "Canon Bubble-Jet BJ F600"
"Canon BJ F6000 (BJRSTR)" = "Canon Bubble-Jet BJ F6000"
"Canon BJ F6000" = "Canon Bubble-Jet BJ F6000"
"Canon BJ F610 (BJRSTR)" = "Canon Bubble-Jet BJ F610"
"Canon BJ F610" = "Canon Bubble-Jet BJ F610"
"Canon BJ F6100 (BJRSTR)" = "Canon Bubble-Jet BJ F6100"
"Canon BJ F6100" = "Canon Bubble-Jet BJ F6100"
"Canon BJ F620" = "Canon Bubble-Jet BJ F620"
"Canon BJ F660" = "Canon Bubble-Jet BJ F660"
"Canon BJ F6600" = "Canon Bubble-Jet BJ F6600"
"Canon BJ F800 (BJRSTR)" = "Canon Bubble-Jet BJ F800"
"Canon BJ F800" = "Canon Bubble-Jet BJ F800"
"Canon BJ M40" = "Canon Bubble-Jet BJ M40"
"Canon BJ M70" = "Canon Bubble-Jet BJ M70"
"Canon BJC-240J (BJRSTR)" = "Canon Bubble-Jet BJC-240J"
"Canon BJC-250J (BJRSTR)" = "Canon Bubble-Jet BJC-250J"
"Canon BJC-420J (BJRSTR)" = "Canon Bubble-Jet BJC-420J"
"Canon BJC-430J (BJRSTR)" = "Canon Bubble-Jet BJC-430J"
"Canon BJC-440J (BJRSTR)" = "Canon Bubble-Jet BJC-440J"
"Canon BJC-465J (BJRSTR)" = "Canon Bubble-Jet BJC-465J"
"Canon BJC-50v (BJRSTR)" = "Canon Bubble-Jet BJC-50v"
"Canon BJC-5500J (BJRSTR)  " = "Canon Bubble-Jet BJC-5500J"
"Canon BJC-700J (BJRSTR)" = "Canon Bubble-Jet BJC-700J"
"Canon BJC-80v (BJRSTR)" = "Canon Bubble-Jet BJC-80v"
"Canon iR5000-6000" = "Canon iR5000"
"Canon iR5000-6000" = "Canon iR6000"
"Canon LASER SHOT LBP-1510" = "Canon LBP-1510 LIPS4"
"Canon LASER SHOT LBP-1610" = "Canon LBP-1610 LIPS4"
"Canon LASER SHOT LBP-1710" = "Canon LBP-1710 LIPS4"
"Canon LASER SHOT LBP-1810" = "Canon LBP-1810 LIPS4"
"Canon LASER SHOT LBP-2200" = "Canon LBP-2200 LIPS4"
"Canon LASER SHOT LBP-2260" = "Canon LBP-2260 LIPS4"
"Canon LASER SHOT LBP-2300" = "Canon LBP-2300 LIPS4"
"Canon LASER SHOT LBP-2360" = "Canon LBP-2360 LIPS4"
"Canon LASER SHOT LBP-470" = "Canon LBP-470 LIPS4"
"Canon LASER SHOT LBP-870" = "Canon LBP-870 LIPS4"
"Canon LASER SHOT LBP-950" = "Canon LBP-950 LIPS4"
"Canon LaserShot LBP-350 LIPS3" = "Canon LBP-350 LIPS3"
"Canon MEDIO LIPS-B1" = "Canon MEDIO-B1"
"Canon MEDIO LIPS-D1" = "Canon MEDIO-D1"
"Canon MEDIO LIPS-E1" = "Canon MEDIO-E1"
"CASIO COLOR PAGEPRESTO N4-612" = "CASIO N4-612"
"CASIO COLOR PAGEPRESTO N4" = "CASIO N4"
"CASIO CP-3250 Winmode" = "CASIO CP-3250GT"
"CASIO CP-3500 Winmode" = "CASIO CP-3500GT"
"CASIO CP-3800 Winmode" = "CASIO CP-3800"
"CASIO CP-3900 Winmode" = "CASIO CP-3900"
"CASIO PAGEPRESTO CP-7100" = "CASIO CP-7100"
"CASIO PAGEPRESTO CP-7100series" = "CASIO CP-7100"
"CASIO PAGEPRESTO CP-7200" = "CASIO CP-7200"
"CASIO PAGEPRESTO CP-7200series" = "CASIO CP-7250"
"CASIO PAGEPRESTO CP-7250" = "CASIO CP-7250"
"CASIO PAGEPRESTO CP-7300" = "CASIO CP-7300"
"CASIO PAGEPRESTO CP-7300series" = "CASIO CP-7300"
"CASIO PAGEPRESTO CP-7400" = "CASIO CP-7400"
"CASIO PAGEPRESTO CP-7400series" = "CASIO CP-7400"
"CASIO PAGEPRESTO CP-7500" = "CASIO CP-7500"
"CASIO PAGEPRESTO CP-7500series" = "CASIO CP-7500"
"CASIO SPEEDIA CP-E8000" = "CASIO CP-E8000"
"CASIO SPEEDIA N4-612" = "CASIO N4-612"
"CASIO SPEEDIA N4" = "CASIO N4"
"CASIO SPEEDIA N5" = "CASIO N5"
"EPSON EM-900C" = "EPSON EM-900C ESC/P R"
"EPSON LP-1700S" = "EPSON LASER LP-1700S"
"EPSON LP-1800" = "EPSON LASER LP-1800"
"EPSON LP-1900" = "EPSON LASER LP-1900"
"EPSON LP-3000C" = "EPSON LASER LP-3000C"
"EPSON LP-800" = "EPSON LASER LP-800"
"EPSON LP-8000C" = "EPSON LASER LP-8000C"
"EPSON LP-8200C" = "EPSON LASER LP-8200C"
"EPSON LP-8300" = "EPSON LASER LP-8300"
"EPSON LP-8300C" = "EPSON LASER LP-8300C"
"EPSON LP-8300F" = "EPSON LASER LP-8300F"
"EPSON LP-8300S" = "EPSON LASER LP-8300S"
"EPSON LP-8400" = "EPSON LASER LP-8400"
"EPSON LP-8400F" = "EPSON LASER LP-8400F"
"EPSON LP-8400FX" = "EPSON LASER LP-8400FX"
"EPSON LP-8500C" = "EPSON LASER LP-8500C"
"EPSON LP-8600" = "EPSON LASER LP-8600"
"EPSON LP-8600F" = "EPSON LASER LP-8600F"
"EPSON LP-8600FX" = "EPSON LASER LP-8600FX"
"EPSON LP-9200S" = "EPSON LASER LP-9200S"
"EPSON LP-9200SX" = "EPSON LASER LP-9200SX"
"EPSON LP-9300" = "EPSON LASER LP-9300"
"EPSON LP-9600" = "EPSON LASER LP-9600"
"EPSON LP-9600S" = "EPSON LASER LP-9600S"
"EPSON MC-2000" = "EPSON MC-2000 ESC/P R"
"EPSON MJ-3000C" = "EPSON MJ-3000C ESC/P R"
"EPSON MJ-5000C" = "EPSON MJ-5000C ESC/P R"
"EPSON MJ-500C" = "EPSON MJ-500C ESC/P R"
"EPSON MJ-5100C" = "EPSON MJ-5100C ESC/P R"
"EPSON MJ-510C" = "EPSON MJ-510C ESC/P R"
"EPSON MJ-6000C" = "EPSON MJ-6000C ESC/P R"
"EPSON MJ-700V2C" = "EPSON MJ-700V2C ESC/P R"
"EPSON MJ-8000C" = "EPSON MJ-8000C ESC/P R"
"EPSON MJ-800C" = "EPSON MJ-800C ESC/P R"
"EPSON MJ-810C" = "EPSON MJ-810C ESC/P R"
"EPSON MJ-830C" = "EPSON MJ-830C ESC/P R"
"EPSON MJ-900C" = "EPSON MJ-900C ESC/P R"
"EPSON MJ-910C" = "EPSON MJ-910C ESC/P R"
"EPSON MJ-930C" = "EPSON MJ-930C ESC/P R"
"EPSON PM-2000C" = "EPSON PM-2000C ESC/P R"
"EPSON PM-2200C" = "EPSON PM-2200C ESC/P R"
"EPSON PM-3000C" = "EPSON PM-3000C ESC/P R"
"EPSON PM-3300C" = "EPSON PM-3300C ESC/P R"
"EPSON PM-5000C" = "EPSON PM-5000C ESC/P R"
"EPSON PM-600C" = "EPSON PM-600C ESC/P R"
"EPSON PM-670C" = "EPSON PM-670C ESC/P R"
"EPSON PM-700C" = "EPSON PM-700C ESC/P R"
"EPSON PM-750C" = "EPSON PM-750C ESC/P R"
"EPSON PM-760C" = "EPSON PM-760C ESC/P R"
"EPSON PM-770C" = "EPSON PM-770C ESC/P R"
"EPSON PM-800C" = "EPSON PM-800C ESC/P R"
"EPSON PM-820C" = "EPSON PM-820C ESC/P R"
"EPSON PT-100" = "EPSON PT-100 ESC/P R"
"FUJITSU GL-340E" = "FUJITSU PrintPartner GL-340E"
"FUJITSU GL-360E" = "FUJITSU PrintPartner GL-360E"
"FUJITSU GL-740E" = "FUJITSU PrintPartner GL-740E"
"FUJITSU GL-760E" = "FUJITSU PrintPartner GL-760E"
"FUJITSU Printpartner GL-340" = "FUJITSU PrintPartner GL-340 "
"FUJITSU Printpartner GL-360" = "FUJITSU PrintPartner GL-360 "
"FUJITSU PrintPartner GL-760D" = "FUJITSU PrintPartner GL-760"
"NEC MultiWriter 2000E Plus" = "NEC MultiWriter 2000E NPDL2"
"NEC MultiWriter 2000FW Plus" = "NEC MultiWriter 2000FW NPDL2"
"NEC MultiWriter 2200NW Plus" = "NEC MultiWriter 2200NW NPDL2"
"NEC MultiWriter 2200NW2 Plus" = "NEC MultiWriter 2200NW2 NPDL2"
"NEC PC-PR2000/4R Plus" = "NEC PC-PR2000/4R NPDL2"
"NEC PC-PR2000/4W Plus" = "NEC PC-PR2000/4W NPDL2"
"NEC PC-PR2000/6W Plus" = "NEC PC-PR2000/6W NPDL2"
"NEC PICTY320 Printer" = "NEC PICTY320"
"NEC PICTY4000 Printer" = "NEC PICTY4000"
"NEC PICTY700 Printer" = "NEC PICTY700"
"NEC PICTY820 Printer" = "NEC PICTY820"
"NEC PICTY900 Printer" = "NEC PICTY900"
"NEC PICTY920 Printer" = "NEC PICTY920"

#elif LANGUAGE_ID == 0x412
//KOR specific sections

;
; Printer Mapping Sections (Korean)
;

[Printer Driver Mapping]
"%HAIPEOTEKEU% HL4311SA" = "HP LaserJet Series II"
"%ROSDEKAENON% BJ-10e" = "Canon Bubble-Jet BJ-10e"
"%ROSDEKAENON% BJ-10ex" = "Canon Bubble-Jet BJ-10ex"
"%ROSDEKAENON% BJ-15k (KS)" = "%ROSDEKAENON% BJ-15K (KS)"
"%ROSDEKAENON% BJ-15k" = "%ROSDEKAENON% BJ-15K"
"%ROSDEKAENON% BJ-20" = "Canon Bubble-Jet BJ-20"
"%ROSDEKAENON% BJ-230" = "Canon Bubble-Jet BJ-230"
"%ROSDEKAENON% BJ-300" = "Canon Bubble-Jet BJ-300"
"%ROSDEKAENON% BJ-330" = "Canon Bubble-Jet BJ-330"
"%ROSDEKAENON% BJC-600" = "Canon Bubble-Jet BJC-600"
"%ROSDEKAENON% BJC-800" = "Canon Bubble-Jet BJC-800"
"%ROSDEKAENON% Bubble-Jet BJ-20" = "Canon Bubble-Jet BJ-20"
"%ROSDEKAENON% Bubble-Jet BJ-230" = "Canon Bubble-Jet BJ-230"
"%ROSDEKAENON% Bubble-Jet BJ-300" = "Canon Bubble-Jet BJ-300"
"%ROSDEKAENON% Bubble-Jet BJ-330" = "Canon Bubble-Jet BJ-330"
"%ROSDEKAENON% Bubble-Jet BJ10ex" = "Canon Bubble-Jet BJ-10ex"
"%ROSDEKAENON% Bubble-Jet BJ15k" = "%ROSDEKAENON% BJ-15K"
"%ROSDEKAENON% Bubble-Jet BJC-600" = "Canon Bubble-Jet BJC-600"
"%ROSDEKAENON% Bubble-Jet BJC-800" = "Canon Bubble-Jet BJC-800"
"%SAMSEONG% SP-2412HW(KS%MODEU%)" = "%SAMSEONG% SP-2412HW (KS)"
"%SAMSEONG% SP-2412HW(KSSM%MODEU%)" = "%SAMSEONG% SP-2412HW (KSSM)"
"%SAMSEONG% SP-2421HW(KS%MODEU%)" = "%SAMSEONG% SP-2421HW (KS)"
"%SAMSEONG% SP-2421HW(KSSM%MODEU%)" = "%SAMSEONG% SP-2421HW (KSSM)"
"%SAMSEONG% SP-2433HW(KS%MODEU%)" = "%SAMSEONG% SP-2433HW (KS)"
"%SAMSEONG% SP-2433HW(KSSM%MODEU%)" = "%SAMSEONG% SP-2433HW (KSSM)"
"%SAMSEONG% SP-4021HW(KS%MODEU%)" = "%SAMSEONG% SP-4021 (KS)"
"%SAMSEONG% SP-4022HW(KS%MODEU%)" = "%SAMSEONG% SP-4022 (KS)"
"%SAMSEONG% SP-4033HW(KS%MODEU%)" = "%SAMSEONG% SP-4033 (KS)"
"%SINDORIKO% ExecJet 4072" = "IBM ExecJet 4072"
"%SINDORIKO% ExecJet 4076 II C" = "Lexmark ExecJet IIc"
"EPSON DLQ-3000H+" = "EPSON DLQ-3000H+ (KSSM)"
"EPSON LQ-2070H" = "EPSON LQ-2070H (KSSM)"
"EPSON LQ-2080H ESC/P 2" = "EPSON LQ-2080H (KSSM)"
"EPSON LQ-2570H" = "EPSON LQ-2570H (KSSM)"
"EPSON LQ-2580H ESC/P 2" = "EPSON LQ-2580H (KSSM)"
"EPSON LQ-570HD" = "EPSON LQ-570HD (KSSM)"
"EPSON Stylus COLOR 1520H" = "EPSON Stylus COLOR 1520H(KSSM+)"
"EPSON Stylus COLOR 440H" = "EPSON Stylus COLOR 440H (KSSM+)"
"EPSON Stylus COLOR 640H" = "EPSON Stylus COLOR 640H (KSSM+)"
"EPSON Stylus COLOR 850H" = "EPSON Stylus COLOR 850H (KSSM+)"
"HP LaserJet 6P/6MP" = "HP LaserJet 6P"

[Printer Driver Mapping WINNT]
"Epson EPL-N2000H" = "EPSON EPL-N2000H"
"EPSON Stylus COLOR 1520H" = "EPSON Stylus COLOR 1520H(KSSM+)"
"EPSON Stylus COLOR 3000" = "EPSON Stylus COLOR 3000 (KSSM+)"
"EPSON Stylus COLOR 440H" = "EPSON Stylus COLOR 440H (KSSM+)"
"EPSON Stylus COLOR 640H" = "EPSON Stylus COLOR 640H (KSSM+)"
"EPSON Stylus COLOR 850H" = "EPSON Stylus COLOR 850H (KSSM+)"
"EPSON Stylus Photo 700" = "EPSON Stylus Photo 700 (KSSM+)"
"EPSON Stylus Photo 750" = "EPSON Stylus Photo 750 (KSSM+)"
"EPSON Stylus Photo EX" = "EPSON Stylus Photo EX (KSSM+)"
"EPSON Stylus Pro 5000" = "EPSON Stylus Pro 5000 (KSSM+)"

#endif

// String section below for localizers
;
; Localizable Strings
;
[Strings]
#if LANGUAGE_ID == 0x804
; Manufactrers (Simplified Chinese)

#elif LANGUAGE_ID == 0x404
; Manufacturers (Traditional Chinese)
; Followings are Traditional Chinese strings kept in printer model names
; for backward compatibility with previous OS.  These must exactly match
; with the existing Windows 2000 translations
SILENT_MODEL="SILENT_MODEL"

#elif LANGUAGE_ID == 0x411
; Manufacturers (Japanese)
; Followings are Japanese strings kept in printer model names for backward
; compatibility with previous OS.  These must exactly match with the
; existing Windows 2000 translations
FAST_HORZ_PRINTER="FAST_HORZ_PRINTER"
MINI_HORZ_PRINTER="MINI_HORZ_PRINTER"
DUAL_PRINTER="DUAL_PRINTER"
INKJET_PRINTER="INKJET_PRINTER"
LASER_PRINTER="LASER_PRINTER"
PAGE_PRINTER="PAGE_PRINTER"

#elif LANGUAGE_ID == 0x412
; Manufactrers (Korean)
; Followings are Korean strings kept in printer model names for backward
; compatibility with previous OS.  These must exactly match with the
; existing Windows 2000 translations
DAEU="DAEU"
GEULCORONG="GEULCORONG"
GYOYUGMANG="GYOYUGMANG"
HAENGMANG="HAENGMANG"
HAIPEOTEKEU="HAIPEOTEKEU"
JEILJEONGMIL="JEILJEONGMIL"
KEOMPYUTEO="KEOMPYUTEO"
KEUMSEONG="KEUMSEONG"
KORIAJEROGSEU="KORIAJEROGSEU"
KYUNIGSEU="KYUNIGSEU"
LG_JEONJA="LG_JEONJA"
MODEU="MODEU"
POSEUDEITA="POSEUDEITA"
ROSDEKAENON="ROSDEKAENON"
SAMBO="SAMBO"
SAMSEONG="SAMSEONG"
SEONJINTEKEU="SEONJINTEKEU"
SINDORIKO="SINDORIKO"
SSANGYONG="SSANGYONG"
YANGJAE="YANGJAE"
#endif

MS="Microsoft"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\riprep.txt ===
[Strings]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\reminst.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/


#if LANGUAGE_ID != 0x409
[AdditionalClientFiles]
templates\bootfont.bin,bootfont.bin
#endif


#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
@*:// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#endif

// String section below for localizers
;
; Strings
;
[Strings]
RemInst_Help = "Provides the ability to remotely install Windows on remote boot enabled client computers."
srvcd = "Windows Server CD-ROM"
wkscd = "Windows CD-ROM"

RemInst_Desc = "Remote Installation Services"
RemInstProf_DESC = "Remote Installation Services Setup"
AdminTools_GROUP = "Administrative Tools"



BINL_SERVICE_NAME   = "Remote Installation"
BINL_SERVICE_DESC   = "Manages requests made by Pre-Boot eXecution Environment (PXE) - enabled client computers. If this service is stopped, PXE-enabled client computers will be unable to install Windows remotely or use other Remote Install (RIS) -based tools. If this service is disabled, any services that explicitly depend on it will fail to start."
TFTPD_SERVICE_NAME  = "Trivial FTP Daemon"
TFTPD_SERVICE_DESC  = "Implements the Trivial FTP Internet standard, which does not require a user name or password. Part of the Remote Installation Services."
SIS_SERVICE_NAME    = "Single Instance Storage"
SIS_SERVICE_DESC    = "A File System Filter that manages duplicate copies of files on hard-disk volumes.  It copies one instance of the duplicate file into a central directory, and the duplicates are replaced with a link to the central copy in order to improve disk usage.  This service can not be stopped.  If this service is disabled, all linked files will no longer be accessible.  If the central directory is deleted, all linked files will become permanently inaccessible."
GROVEL_SERVICE_NAME = "Single Instance Storage Groveler"
GROVEL_SERVICE_DESC = "Scans the hard-disk volumes on a Remote Installation Services (RIS) server for duplicate copies of files.  If found, one instance of the duplicate file is stored in a central directory, and the duplicates are replaced with a link to the central copy in order to improve disk usage. If this service is stopped, files will no longer be automatically linked in this manner, but the existing linked files will still be accessible."


REG_DWORD       =0x10001
REG_EXPAND_SZ   =0x20000
REG_BINARY      =0x00001
REG_SZ          =0x00000
REG_MULTI_SZ    =0x10000
REG_NONE        =0x20001

SERVICE_DISABLED = 4
SERVICE_DEMAND_START = 3
SERVICE_AUTO_START = 2
SERVICE_WIN32_SHARE_PROCESS = 32
SERVICE_FILE_SYSTEM_DRIVER = 2
SERVICE_WIN32_OWN_PROCESS = 16
SERVICE_BOOT_START = 0
SERVICE_ERROR_NORMAL = 1
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\rootsec.txt ===
[Strings]
SCEProfileDescription = "Applies default root permissions to the OS partition and propagates them to child objects that are inheriting from the root.  The propagation time depends on the number of unprotected child objects.  See online help for further information."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\ristndrd.txt ===
[OSChooser]
@p:@R:Description = "Windows Personal"
@w!p:@R:Description = "Windows Professional"
@b:@R:Description = "Windows Blade Server"
@s!e!b:@R:Description = "Windows Server"
@e!d:@R:Description = "Windows Advanced Server"
@d:@R:Description = "Windows Datacenter Server"
@p:@N:Description = "Windows Personal - no repartition"
@w!p:@N:Description = "Windows Professional - no repartition"
@b:@N:Description = "Windows Blade Server - no repartition"
@s!e!b:@N:Description = "Windows Server - no repartition"
@e!d:@N:Description = "Windows Advanced Server - no repartition"
@d:@N:Description = "Windows Datacenter Server - no repartition"
@p:@R:Help = "This will install Windows Personal in a standard configuration."
@w!p:@R:Help = "This will install Windows Professional in a standard configuration."
@b:@R:Help = "This will install Windows Blade Server in a standard configuration."
@s!e!b:@R:Help = "This will install Windows Server in a standard configuration."
@e!d:@R:Help = "This will install Windows Advanced Server in a standard configuration."
@d:Help = "This will install Windows Datacenter Server in a standard configuration."
@p:@N:Help = "This will install Windows Personal in a standard configuration without repartitioning the drive."
@w!p:@N:Help = "This will install Windows Professional in a standard configuration without repartitioning the drive."
@b:@N:Help = "This will install Windows Blade Server in a standard configuration without repartitioning the drive."
@s!e!b:@N:Help = "This will install Windows Server in a standard configuration without repartitioning the drive."
@e!d:@N:Help = "This will install Windows Advanced Server in a standard configuration without repartitioning the drive."
@d:@N:Help = "This will install Windows Datacenter Server in a standard configuration without repartitioning the drive."
@@:@@:@3:LaunchFile = "%INSTALLPATH%\%MACHINETYPE%\templates\startrom.com"
@@:@@:@6:LaunchFile = "%INSTALLPATH%\%MACHINETYPE%\templates\setupldr.efi"
ImageType = "Flat"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sa.txt ===
[Strings]

SPSVCINST_ASSOCSERVICE                   = 0x00000002
REG_MULTI_SZ                             = 0x00010000

SERVICE_BOOT_START                       = 0
SERVICE_ERROR_NORMAL                     = 1
SERVICE_KERNEL_DRIVER                    = 1
SERVICE_SYSTEM_START                     = 1

PCI\VEN_1166&DEV_0235.DeviceDesc         = "ServerWorks Keypad Controller"
PCI\VEN_1166&DEV_0236.DeviceDesc         = "ServerWorks Local Display Controller"
PCI\VEN_1166&DEV_0237.DeviceDesc         = "ServerWorks NVRAM Controller"

Microsoft                                = "Microsoft"

SW_LocalDisplayService                   = "ServerWorks Local Display Driver"
SW_KeypadService                         = "ServerWorks Keypad Driver"
SW_NVRAMService                          = "ServerWorks NVRAM Driver"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sakit.txt ===
;
; Server Appliance Kit Localization Files installation
; Copyright (c) Microsoft Corporation.  All rights reserved.
;

[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x403
LCID=0409
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0409
#endif

#if LANGUAGE_ID == 0x41d
LCID=0409
#endif

#if LANGUAGE_ID == 0x413
LCID=0409
#endif

#if LANGUAGE_ID == 0x416
LCID=0409
#endif

#if LANGUAGE_ID == 0x40b
LCID=0409
#endif

#if LANGUAGE_ID == 0x414
LCID=0409
#endif

#if LANGUAGE_ID == 0x406
LCID=0409
#endif

#if LANGUAGE_ID == 0x40e
LCID=0409
#endif

#if LANGUAGE_ID == 0x415
LCID=0409
#endif

#if LANGUAGE_ID == 0x419
LCID=0409
#endif

#if LANGUAGE_ID == 0x405
LCID=0409
#endif

#if LANGUAGE_ID == 0x408
LCID=0409
#endif

#if LANGUAGE_ID == 0x816
LCID=0409
#endif

#if LANGUAGE_ID == 0x41f
LCID=0409
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0409
#endif

#if LANGUAGE_ID == 0x40d
LCID=0409
#endif

#if LANGUAGE_ID == 0x409
LCID=0409
#endif
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sapi5.txt ===
;no need to localize this file. the proper UILanguageID string
;will be created by precompiler 
;LangID and Language mapping code
;0401=ara
;0404=CHT
;0405=cs
;0406=da
;0407=GER
;0408=EL
;0409=USA
;040b=FI
;040c=FR
;040d=heb
;040e=hu
;0410=IT
;0411=JPN
;0412=KOR
;0413=NL
;0414=no
;0415=pl
;0416=Br
;0419=RU
;041d=SV
;041f=tr
;0804=CHS
;0816=pt
;0c0a=ES

#if LANGUAGE_ID == 0x401
UILanguageID=1025
#endif
#if LANGUAGE_ID == 0x404
UILanguageID=1028
#endif
#if LANGUAGE_ID == 0x405
UILanguageID=1029
#endif
#if LANGUAGE_ID == 0x406
UILanguageID=1030
#endif
#if LANGUAGE_ID == 0x407
UILanguageID=1031
#endif
#if LANGUAGE_ID == 0x408
UILanguageID=1032
#endif
#if LANGUAGE_ID == 0x409
UILanguageID=1033
#endif
#if LANGUAGE_ID == 0x40b
UILanguageID=1035
#endif
#if LANGUAGE_ID == 0x40c
UILanguageID=1036
#endif
#if LANGUAGE_ID == 0x40d
UILanguageID=1037
#endif
#if LANGUAGE_ID == 0x40e
UILanguageID=1038
#endif
#if LANGUAGE_ID == 0x410
UILanguageID=1040
#endif
#if LANGUAGE_ID == 0x411
UILanguageID=1041
#endif
#if LANGUAGE_ID == 0x412
UILanguageID=1042
#endif
#if LANGUAGE_ID == 0x413
UILanguageID=1043
#endif
#if LANGUAGE_ID == 0x414
UILanguageID=1044
#endif
#if LANGUAGE_ID == 0x415
UILanguageID=1045
#endif
#if LANGUAGE_ID == 0x416
UILanguageID=1046
#endif
#if LANGUAGE_ID == 0x419
UILanguageID=1049
#endif
#if LANGUAGE_ID == 0x41d
UILanguageID=1053
#endif
#if LANGUAGE_ID == 0x41f
UILanguageID=1055
#endif
#if LANGUAGE_ID == 0x804
UILanguageID=2052
#endif
#if LANGUAGE_ID == 0x816
UILanguageID=2070
#endif
#if LANGUAGE_ID == 0xc0a
UILanguageID=3082
#endif
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\rsoptwks.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
; User-visible strings
[Strings]
RSUI_Desc               = "Remote Storage Administration"
RSUI_Tip                = "Integrated Microsoft Management Console Administration Snap-in"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sakitmui.txt ===
;
; Server Appliance Kit Localization Files MUI installation
; Copyright (c) Microsoft Corporation.  All rights reserved.
;

[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x403
LCID=0403
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
#endif

#if LANGUAGE_ID == 0x409
LCID=0409
#endif
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\rsoptcom.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
; User-visible strings
[Strings]
RSTORAGETop_DESC        = "Remote Storage"
RSTORAGETop_TIP         = "Migrates data from infrequently accessed files to magnetic tapes or magneto-optical disks"
RSTORAGEFilter_DESC     = "Remote Storage Recall Support"

SERVICE_FILE_SYSTEM_DRIVER = 2
SERVICE_BOOT_START = 0
SERVICE_ERROR_NORMAL = 1

SPSVCINST_TAGTOFRONT = 1
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sbp2.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

[Strings]

MSFT="Microsoft"
Sbp2ClassName="SBP2 IEEE 1394 Devices"
sbp2_ServiceDesc="SBP-2 Transport/Protocol Bus Driver"

GenManufacturer="IEEE 1394 SBP-2 Device Vendor"
1394\609E&10483.DeviceDesc="SBP2 Compliant IEEE 1394 device"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\secrecs.txt ===
[Strings]
SCEProfileDescription = "Default recommendations provided by Security Templates snap-in."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\scsi.txt ===
#if 0

  This file is organized into two main blocks. The first block contains
    code (non-string) sections which are specific to languages. Please put
    the code sections in the correct language.
  The second block is reserved for [Strings] which localizers will be
    working with. It is further divided using "#if LANGUAGE ==" for language
    specific strings. For strings which are common to all languages
    place outside the #ifs.

  This file is first precompiled with LANGUAGE_ID
  set to the language (see inf\win4\inf\makefile.inc for details).
  For example, for usa builds, the sections under #if LANGUAGE == 0x409
  will appear.

  Important: To support locstudio, this file contains only ONE [Strings] section.

#endif

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 && LANGUAGE_ID != 0x412

#elif LANGUAGE_ID == 0x804

#elif LANGUAGE_ID == 0x404

#elif LANGUAGE_ID == 0x411

#elif LANGUAGE_ID == 0x412
#endif

Msft = "Microsoft"
SCSIClassName="SCSI and RAID controllers"

ADP = "Adaptec"
aha154x.DeviceDesc  = "Adaptec AHA-154X/AHA-164X SCSI Host Adapter (non-pnp)"
sparrow.DeviceDesc  = "Adaptec AHA-151X/AHA-152X or AIC-6260/AIC-6360 SCSI Host Adapter (non-pnp)"

COMPAQ = "Compaq"
cpqarray.DeviceDesc = "Compaq Drive Array (non-pnp)"
cpqfcalm.DeviceDesc = "Compaq Fibre-Channel Host Controller (non-pnp)"

MYLEX = "Mylex"
dac960.DeviceDesc = "Mylex DAC960 Disk Array Controller (non-pnp)"

UNSUP = "UNSUP"
buslogic.DeviceDesc = "BusLogic SCSI Host Adapter"
*BUS0042.DeviceDesc = "BusLogic MultiMaster SCSI Host Adapter"
PCI\VEN_104B&DEV_1040.DeviceDesc = "BusLogic MultiMaster PCI SCSI Host Adapter"
flashpnt.DeviceDesc = "BusLogic FlashPoint PCI SCSI Host Adapter"
fireport.DeviceDesc = "Diamond Multimedia Systems SCSI Host Adapter"
cpqfws2e.DeviceDesc = "Compaq 32-Bit Fast-Wide SCSI-2/E Controller"
fd16_700.DeviceDesc = "Adaptec AHA-2920 or Future Domain 16XX/PCI/SCSI2Go SCSI Host Adapter"
FD16ISA = "Future Domain TMC-1650/1660/1670/1680 SCSI Host Adapter"
FD16MCA = "Future Domain MCS-600/700 SCSI Host Adapter"
FD16PCMCIANEW = "Future Domain SCSI2Go PCMCIA SCSI Host Adapter"
FD16PCI = "Future Domain PCI SCSI HOST Adapter"
aha2920.DeviceDesc  = "Adaptec AHA-2920 SCSI Host Adapter"
ncrc710.DeviceDesc  = "NCR 53C710 SCSI Host Adapter "
detected_buslogic.DeviceDesc = "BusLogic SCSI Host Adapter (non-pnp)"
detected_cpqfws2e.DeviceDesc = "Compaq 32-Bit Fast-Wide SCSI-2/E Controller (non-pnp)"
detected_fd16_700.DeviceDesc = "Adaptec AHA-2920 or Future Domain 16XX/PCI/SCSI2Go SCSI Host Adapter"
detected_ncrc710.DeviceDesc = "NCR 710 SCSI Host Adapter (non-pnp)"

;*******************************************
;Handy macro substitutions (non-localizable)
SPSVCINST_ASSOCSERVICE = 0x00000002
SERVICE_KERNEL_DRIVER  = 1
SERVICE_BOOT_START     = 0
SERVICE_ERROR_NORMAL   = 1
REG_EXPAND_SZ          = 0x00020000
REG_DWORD              = 0x00010001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sceregvl.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

[Strings]

;================================ Accounts ============================================================================
;Specified in UI code - Accounts: Administrator account status
;Specified in UI code - Accounts: Guest account status
;Specified in UI code - Accounts: Rename administrator account
;Specified in UI code - Accounts: Rename guest account
LimitBlankPasswordUse = "Accounts: Limit local account use of blank passwords to console logon only"


;================================ Audit ===============================================================================
AuditBaseObjects="Audit: Audit the access of global system objects"
FullPrivilegeAuditing="Audit: Audit the use of Backup and Restore privilege"
CrashOnAuditFail="Audit: Shut down system immediately if unable to log security audits"

;================================ Devices =============================================================================
AllocateDASD="Devices: Allowed to format and eject removable media"
AllocateDASD0="Administrators"
AllocateDASD1="Administrators and Power Users"
AllocateDASD2="Administrators and Interactive Users"
AddPrintDrivers="Devices: Prevent users from installing printer drivers"
AllocateCDRoms="Devices: Restrict CD-ROM access to locally logged-on user only"
AllocateFloppies="Devices: Restrict floppy access to locally logged-on user only"
DriverSigning="Devices: Unsigned driver installation behavior"
DriverSigning0="Silently succeed "
DriverSigning1="Warn but allow installation"
DriverSigning2="Do not allow installation"
UndockWithoutLogon="Devices: Allow undock without having to log on"

;================================ Domain controller ====================================================================
SubmitControl="Domain controller: Allow server operators to schedule tasks"
RefusePWChange="Domain controller: Refuse machine account password changes"
LDAPServerIntegrity = "Domain controller: LDAP server signing requirements"
LDAPServer1 = "None"
LDAPServer2 = "Require signing"

;================================ Domain member ========================================================================
DisablePWChange="Domain member: Disable machine account password changes"
MaximumPWAge="Domain member: Maximum machine account password age"
SignOrSeal="Domain member: Digitally encrypt or sign secure channel data (always)"
SealSecureChannel="Domain member: Digitally encrypt secure channel data (when possible)"
SignSecureChannel="Domain member: Digitally sign secure channel data (when possible)"
StrongKey="Domain member: Require strong (Windows 2000 or later) session key"

;================================ Interactive logon ====================================================================
DisableCAD = "Interactive logon: Do not require CTRL+ALT+DEL"
DontDisplayLastUserName = "Interactive logon: Do not display last user name"
LegalNoticeText = "Interactive logon: Message text for users attempting to log on"
LegalNoticeCaption = "Interactive logon: Message title for users attempting to log on"
CachedLogonsCount = "Interactive logon: Number of previous logons to cache (in case domain controller is not available)"
PasswordExpiryWarning = "Interactive logon: Prompt user to change password before expiration"
ForceUnlockLogon = "Interactive logon: Require Domain Controller authentication to unlock workstation"
ScForceOption = "Interactive logon: Require smart card"
ScRemove = "Interactive logon: Smart card removal behavior"
ScRemove0 = "No Action"
ScRemove1 = "Lock Workstation"
ScRemove2 = "Force Logoff"

;================================ Microsoft network client =============================================================
RequireSMBSignRdr="Microsoft network client: Digitally sign communications (always)"
EnableSMBSignRdr="Microsoft network client: Digitally sign communications (if server agrees)"
EnablePlainTextPassword="Microsoft network client: Send unencrypted password to third-party SMB servers"

;================================ Microsoft network server =============================================================
AutoDisconnect="Microsoft network server: Amount of idle time required before suspending session"
RequireSMBSignServer="Microsoft network server: Digitally sign communications (always)"
EnableSMBSignServer="Microsoft network server: Digitally sign communications (if client agrees)"
EnableForcedLogoff="Microsoft network server: Disconnect clients when logon hours expire"

;================================ Network access =======================================================================
;Specified in UI code - Network access: Allow anonymous SID/Name translation
DisableDomainCreds = "Network access: Do not allow storage of credentials or .NET Passports for network authentication"
RestrictAnonymousSAM = "Network access: Do not allow anonymous enumeration of SAM accounts"
RestrictAnonymous = "Network access: Do not allow anonymous enumeration of SAM accounts and shares"
EveryoneIncludesAnonymous = "Network access: Let Everyone permissions apply to anonymous users"
RestrictNullSessAccess = "Network access: Restrict anonymous access to Named Pipes and Shares"
NullPipes = "Network access: Named Pipes that can be accessed anonymously"
NullShares = "Network access: Shares that can be accessed anonymously"
AllowedPaths = "Network access: Remotely accessible registry paths and sub-paths"
AllowedExactPaths = "Network access: Remotely accessible registry paths"
ForceGuest = "Network access: Sharing and security model for local accounts"
Classic = "Classic - local users authenticate as themselves"
GuestBased = "Guest only - local users authenticate as Guest"

;================================ Network security =====================================================================
;Specified in UI code - Network security: Enforce logon hour restrictions
NoLMHash = "Network security: Do not store LAN Manager hash value on next password change"
LmCompatibilityLevel = "Network security: LAN Manager authentication level"
LMCLevel0 = "Send LM & NTLM responses"
LMCLevel1 = "Send LM & NTLM - use NTLMv2 session security if negotiated"
LMCLevel2 = "Send NTLM response only"
LMCLevel3 = "Send NTLMv2 response only"
LMCLevel4 = "Send NTLMv2 response only\refuse LM"
LMCLevel5 = "Send NTLMv2 response only\refuse LM & NTLM"
NTLMMinClientSec = "Network security: Minimum session security for NTLM SSP based (including secure RPC) clients"
NTLMMinServerSec = "Network security: Minimum session security for NTLM SSP based (including secure RPC) servers"
NTLMIntegrity = "Require message integrity"
NTLMConfidentiality = "Require message confidentiality"
NTLMv2Session = "Require NTLMv2 session security"
NTLM128 = "Require 128-bit encryption"
LDAPClientIntegrity = "Network security: LDAP client signing requirements"
LDAPClient0 = "None"
LDAPClient1 = "Negotiate signing"
LDAPClient2 = "Require signing"

;================================ Recovery console ====================================================================
RCAdmin="Recovery console: Allow automatic administrative logon"
RCSet="Recovery console: Allow floppy copy and access to all drives and all folders"

;================================ Shutdown ============================================================================
ShutdownWithoutLogon="Shutdown: Allow system to be shut down without having to log on"
ClearPageFileAtShutdown="Shutdown: Clear virtual memory pagefile"

ProtectionMode = "System objects: Strengthen default permissions of internal system objects (e.g. Symbolic Links)"
NoDefaultAdminOwner = "System objects: Default owner for objects created by members of the Administrators group"
DefaultOwner0 = "Administrators group"
DefaultOwner1 = "Object creator"
ObCaseInsensitive = "System objects: Require case insensitivity for non-Windows subsystems"

;================================ System cryptography =================================================================
FIPS="System cryptography: Use FIPS compliant algorithms for encryption, hashing, and signing"

ForceHighProtection="System cryptography: Force strong key protection for user keys stored on the computer"

CryptAllowNoUI="User input is not required when new keys are stored and used"
CryptAllowNoPass="User is prompted when the key is first used"
CryptUsePass="User must enter a password each time they use a key"


;================================ System Settings =====================================================================
AuthenticodeEnabled = "System settings: Use Certificate Rules on Windows Executables for Software Restriction Policies"
OptionalSubSystems = "System settings: Optional subsystems"


Unit-Logons="logons"
Unit-Days="days"
Unit-Minutes="minutes"
Unit-Seconds="seconds"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sdwndr2k.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID == 0x409
//USA specific sections
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[strings]
;localized strings
MSFT_HARDWARE = "Microsoft Hardware Group"
HID\VID_045E&PID_001B.DeviceDesc="Microsoft SideWinder Force Feedback 2"
USB\VID_045E&PID_001B.DeviceDesc="Microsoft SideWinder Force Feedback 2"
HID\VID_045E&PID_0026.DeviceDesc="Microsoft SideWinder Game Pad Pro"
USB\VID_045E&PID_0026.DeviceDesc="Microsoft SideWinder Game Pad Pro"
HID\VID_045E&PID_0028.DeviceDesc="Microsoft SideWinder Dual Strike"
USB\VID_045E&PID_0028.DeviceDesc="Microsoft SideWinder Dual Strike"
HID\VID_045E&PID_001A.DeviceDesc="Microsoft SideWinder Precision Racing Wheel HID Drivers"
USB\VID_045E&PID_001A.DeviceDesc="Microsoft SideWinder Precision Racing Wheel"
HID\VID_045E&PID_0029.DeviceDesc="Microsoft SideWinder Precision Racing Wheel HID Drivers"
USB\VID_045E&PID_0029.DeviceDesc="Microsoft SideWinder Precision Racing Wheel"
HID\VID_045E&PID_0033.DeviceDesc="Microsoft SideWinder Strategic Commander HID Drivers"
USB\VID_045E&PID_0033.DeviceDesc="Microsoft SideWinder Strategic Commander"
HID\VID_045E&PID_0034.DeviceDesc="Microsoft SideWinder Force Feedback Wheel (USB)"
USB\VID_045E&PID_0034.DeviceDesc="Microsoft SideWinder Force Feedback Wheel (USB)"
HID\VID_045E&PID_0038.DeviceDesc="Microsoft SideWinder Precision 2 HID Drivers"
USB\VID_045E&PID_0038.DeviceDesc="Microsoft SideWinder Precision 2"
SideWinderVirtualKeyboard.DeviceDesc = "Microsoft SideWinder Virtual Keyboard"
SideWinderVirtualMouse.DeviceDesc = "Microsoft SideWinder Virtual Mouse"

GcKernel.SvcDesc = "Microsoft SideWinder Value Add - Filter Driver"
SWUSBFLT.SvcDesc = "Microsoft SideWinder VIA Filter Driver"
HIDSwvd.SvcDesc = "Microsoft SideWinder Virtual HID Device Mini-Driver"

;
; non localized strings

SWPIDFilterCLSID1 = "{0914ff80-3477-11d3-8cbd-00c04f8eebb9}"
SWPIDFilterCLSID2 = "{db11d351-3bf6-4f2c-a82b-b26cb9676d2b}"
CLSID_ConstantForce = "{13541C20-8E33-11D0-9AD0-00A0C9A06E35}"
CLSID_RampForce = "{13541C21-8E33-11D0-9AD0-00A0C9A06E35}"
CLSID_SquareWave = "{13541C22-8E33-11D0-9AD0-00A0C9A06E35}"
CLSID_SineWave = "{13541C23-8E33-11D0-9AD0-00A0C9A06E35}"
CLSID_TriangeWave = "{13541C24-8E33-11D0-9AD0-00A0C9A06E35}"
CLSID_SawtoothUpWave = "{13541C25-8E33-11D0-9AD0-00A0C9A06E35}"
CLSID_SawtoothDownWave = "{13541C26-8E33-11D0-9AD0-00A0C9A06E35}"
CLSID_SpringForce = "{13541C27-8E33-11D0-9AD0-00A0C9A06E35}"
CLSID_DamperForce = "{13541C28-8E33-11D0-9AD0-00A0C9A06E35}"
CLSID_InertiaForce = "{13541C29-8E33-11D0-9AD0-00A0C9A06E35}"
CLSID_FrictionForce = "{13541C2A-8E33-11D0-9AD0-00A0C9A06E35}"
CLSID_CustomForce = "{13541C2B-8E33-11D0-9AD0-00A0C9A06E35}"

SPSVCINST_TAGTOFRONT  = 0x00000001
SPSVCINST_ASSOCSERVICE= 0x00000002
SERVICE_KERNEL_DRIVER = 1
SERVICE_BOOT_START    = 0
SERVICE_SYSTEM_START  = 1
SERVICE_AUTO_START    = 2
SERVICE_DEMAND_START  = 3
SERVICE_ERROR_NORMAL  = 1
SERVICE_ERROR_IGNORE  = 0
REG_EXPAND_SZ         = 0x00020000
REG_DWORD             = 0x00010001
REG_SZ                = 0x00000000
REG_MULTI_SZ          = 0x00010000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\shellmui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui
*/

[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x409
LCID=0409
#endif

#if LANGUAGE_ID == 0x403
LCID=0403
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
#endif

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\securedc.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

[Strings]

SceInfAdministrator = "Administrator"
SceInfAdmins = "Administrators"
SceInfAcountOp = "Account Operators"
SceInfAuthUsers = "Authenticated Users"
SceInfBackupOp = "Backup Operators"
SceInfDomainAdmins = "Domain Admins"
SceInfDomainGuests = "Domain Guests"
SceInfDomainUsers = "Domain Users"
SceInfEveryone = "Everyone"
SceInfGuests = "Guests"
SceInfGuest = "Guest"
SceInfPowerUsers = "Power Users"
SceInfPrintOp = "Print Operators"
SceInfReplicator = "Replicator"
SceInfServerOp = "Server Operators"
SceInfUsers = "Users"
SceInfProgramFiles = "Program Files"
SceSecureDCProfileDescription = "Provides enhanced domain account policies, limits the use of LanManager authentication, and provides further restrictions on anonymous users. If a DC is configured with securedc, then a user with an account in that domain will not be able to connect to any member server from a LanMan only client.  See online help for further info."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\scsidev.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[strings]

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 && LANGUAGE_ID != 0x412
#elif LANGUAGE_ID == 0x804
EXP200.DeviceDesc                                   = "IBM EXP200 SCSI Device"
#elif LANGUAGE_ID == 0x404
EXP200.DeviceDesc                                   = "IBM EXP200 SCSI Device"
#elif LANGUAGE_ID == 0x411
EXP200.DeviceDesc                                   = "IBM EXP200 SCSI Device"
#elif LANGUAGE_ID == 0x412
EXP200.DeviceDesc                                   = "IBM EXP200 SCSI Device"
#endif

QLOGIC                                              = "QLOGIC"
QLogicProcessor.DeviceDesc                          = "Qlogic processor device"
QLogicGEM318Processor.DeviceDesc                    = "Qlogic processor device GEM318"
QLogicGEM359Processor.DeviceDesc                    = "Qlogic processor device GEM359"

FUJITSU                                             = "FUJITSU"
FujitsuSafeTE.DeviceDesc                            = "Fujitsu SAF-TE Processor Device"

SIEMENS_SYS                                         = "Fujitsu Siemens Computers"
ProcessorSDR_____GEM200.DeviceDesc                  = "FSC SCSI Termination Module GEM200"
ProcessorSDR_____.DeviceDesc	                    = "FSC SCSI Termination Module"
ProcessorSNI_____.DeviceDesc	                    = "FSC SCSI Termination Module"
ProcessorSIEMENS_.DeviceDesc	                    = "FSC SCSI Termination Module"
ProcessorSAG_____.DeviceDesc 	                    = "FSC SCSI Termination Module"
ProcessorFSC_____.DeviceDesc	                    = "FSC SCSI Termination Module"
ProcessorSIEMENS_AG.DeviceDesc	                    = "FSC SCSI Termination Module"

NEC                                                 = "NEC"
NECGEM312.DeviceDesc                                = "NEC GEM SCSI Processor Device"
NECGEM359.DeviceDesc                                = "NEC GEM SCSI Processor Device"

ADAPTEC                                             = "Adaptec"
SCSI\ProcessorDELL____Management______.DeviceDesc   = "Dell PERC 2 Management Device"
SCSI\ProcessorHP______Management______.DeviceDesc   = "HP NetRAID4-M Management Device"
SCSI\ProcessorDpt_____Management______.DeviceDesc   = "DPT I2O Management Device"

ESGSHV                                              = "ESG-SHV"
ESGHSBP.DeviceDesc                                  = "SCA Hotswap Backplane"

HIGHPOINT                                           = "Highpoint"
SCSI\ProcessorHPT_____RCM_DEVICE______.DeviceDesc   = "Highpoint RCM Device"

MYLEX                                               = "Mylex"
SCSI\ProcessorMYLEX___GAM_DEVICE______.DeviceDesc   = "Mylex GAM Device"
SCSI\ProcessorMYLEX___.DeviceDesc                   = "Mylex Processor Device"
SCSI\ArrayMYLEX___.DeviceDesc                       = "Mylex Array Device"

AMI                                                 = "American Megatrends, Inc."
NULL.DeviceDesc                                     = "RAID Virtual Device"
Component.DeviceDesc                                = "RAID Controller Component Device"
AMI907Processor.DeviceDesc                          = "AMI Series 907 Processor Device"

DELL                                                = "Dell"
SCSI\ProcessorDELL____6UW_BACKPLANE___.DeviceDesc   = "DELL 6 UW Backplane"
SCSI\ProcessorDELL____1x2_U2W_SCSI_BP_.DeviceDesc   = "DELL 1x2 Backplane"
SCSI\ProcessorDELL____1x3_U2W_SCSI_BP_.DeviceDesc   = "DELL 1x3 Backplane"
SCSI\ProcessorDELL____1x4_U2W_SCSI_BP_.DeviceDesc   = "DELL 1x4 Backplane"
SCSI\ProcessorDELL____1x5_U2W_SCSI_BP_.DeviceDesc   = "DELL 1x5 Backplane"
SCSI\ProcessorDELL____1x6_U2W_SCSI_BP_.DeviceDesc   = "DELL 1x6 Backplane"
SCSI\ProcessorDELL____1x7_U2W_SCSI_BP_.DeviceDesc   = "DELL 1x7 Backplane"
SCSI\ProcessorDELL____1x8_U2W_SCSI_BP_.DeviceDesc   = "DELL 1x8 Backplane"
SCSI\ProcessorDELL____1x9_U2W_SCSI_BP_.DeviceDesc   = "DELL 1x9 Backplane"
SCSI\ProcessorDELL____1x10_U2W_SCSI_BP.DeviceDesc   = "DELL 1x10 Backplane"
SCSI\ProcessorDELL____2x1_U2W_SCSI_BP_.DeviceDesc   = "DELL 2x1 Backplane"
SCSI\ProcessorDELL____2x2_U2W_SCSI_BP_.DeviceDesc   = "DELL 2x2 Backplane"
SCSI\ProcessorDELL____2x3_U2W_SCSI_BP_.DeviceDesc   = "DELL 2x3 Backplane"
SCSI\ProcessorDELL____2x4_U2W_SCSI_BP_.DeviceDesc   = "DELL 2x4 Backplane"
SCSI\ProcessorDELL____2x5_U2W_SCSI_BP_.DeviceDesc   = "DELL 2x5 Backplane"
SCSI\ProcessorDELL____8_BAY_U2W_CU____.DeviceDesc   = "DELL PV20xS Backplane"
SCSI\ProcessorDELL____12_BAY_U2W_CU___.DeviceDesc   = "DELL PV21xS Backplane"
SCSI\ProcessorDELL____PV22XS__________.DeviceDesc   = "DELL PV22XS Backplane"
SCSI\ProcessorPE/PV___1x2_SCSI_BP_____.DeviceDesc   = "PE 1x2 Backplane"
SCSI\ProcessorPE/PV___1x3_SCSI_BP_____.DeviceDesc   = "PE 1x3 Backplane"
SCSI\ProcessorPE/PV___1x4_SCSI_BP_____.DeviceDesc   = "PE 1x4 Backplane"
SCSI\ProcessorPE/PV___1x5_SCSI_BP_____.DeviceDesc   = "PE 1x5 Backplane"
SCSI\ProcessorPE/PV___1x6_SCSI_BP_____.DeviceDesc   = "PE 1x6 Backplane"
SCSI\ProcessorPE/PV___1x7_SCSI_BP_____.DeviceDesc   = "PE 1x7 Backplane"
SCSI\ProcessorPE/PV___1x8_SCSI_BP_____.DeviceDesc   = "PE 1x8 Backplane"
SCSI\ProcessorPE/PV___1x9_SCSI_BP_____.DeviceDesc   = "PE 1x9 Backplane"
SCSI\ProcessorPE/PV___1x10_SCSI_BP____.DeviceDesc   = "PE 1x10 Backplane"
SCSI\ProcessorPE/PV___2x1_SCSI_BP_____.DeviceDesc   = "PE 2x1 Backplane"
SCSI\ProcessorPE/PV___2x2_SCSI_BP_____.DeviceDesc   = "PE 2x2 Backplane"
SCSI\ProcessorPE/PV___2x3_SCSI_BP_____.DeviceDesc   = "PE 2x3 Backplane"
SCSI\ProcessorPE/PV___2x4_SCSI_BP_____.DeviceDesc   = "PE 2x4 Backplane"
SCSI\ProcessorPE/PV___2x5_SCSI_BP_____.DeviceDesc   = "PE 2x5 Backplane"
SCSI\ProcessorPE/PV___8_BAY_CU________.DeviceDesc   = "PV 8 Backplane"
SCSI\ProcessorPE/PV___12_BAY_CU_______.DeviceDesc   = "PV 12 Backplane"
SCSI\ProcessorPE/PV___PV22XS__________.DeviceDesc   = "PV 14 Backplane"
DellProcessor                                       = "DELL PERC 2/DC SCSI Processor Device"
DellSCProcessor                                     = "DELL PERC 2/SC SCSI Processor Device"
DellDCProcessor                                     = "DELL PERC 3/DC SCSI Processor Device"
DellQCProcessor                                     = "DELL PERC 3/QC SCSI Processor Device"

INTEL                                               = "Intel"
SCSI\ProcessorIntel___Admin_Device____.DeviceDesc   = "I2O Management Device"
SCSI\ProcessorTekram__Admin_Device____.DeviceDesc   = "I2O Management Device"
SCSI\ProcessorIOCTL_-_Device__________.DeviceDesc 	= "Intel Controller Management Device"
SCSI\ProcessorIntel___CLUSTER_TGT2.00_.DeviceDesc 	= "Intel Cluster Controller Management Device"

IBM                                                 = "IBM"
Dummy.DeviceDesc                                    = "IBM Dummy Device"
CORPGEM.DeviceDesc                                  = "GEM 312 SCSI Device"
IBMEXP500.DeviceDesc                                = "IBM EXP500 SCSI Enclosure Device"

CPQ                                                 = "Compaq"
SCSI\ArrayCOMPAQ__ARRAY_CONTROLLER.DeviceDesc       = "Compaq Fibre Channel Drive Array"
SCSI\OtherCOMPAQ__SCSI_COMMUNICATE.DeviceDesc       = "Compaq Virtual LUN"
SCSI\ProcessorCompaq__CD_Storage_Sys.DeviceDesc     = "Compaq CD Storage System SCSI Bus Extender"
SCSI\ProcessorCOMPAQ__.DeviceDesc                   = "Compaq StorageWorks/ProLiant Storage Subsystem"
SCSI\ArrayCOMPAQ__MSA1000_________.DeviceDesc       = "Compaq MSA1000"

MDI                                                 = "MDI"
SCSI\ProcessorMDI_____SE-EXTENDER.DeviceDesc        = "MDI SCSI Bus Extender"

SDR                                                 = "SDR"
GEM200.DeviceDesc                                   = "GEM 200 SCSI Device"

TOSHIBA                                             = "Toshiba"
MAGNIA7010.DeviceDesc                               = "DMC 7010 Processor Device"
MAGNIA5100.DeviceDesc                               = "DMC 5100 Processor Device"
MAGNIA5000.DeviceDesc                               = "DMC 5000 Processor Device"
MAGNIA7000.DeviceDesc                               = "DMC 7000 Processor Device"
MAGNIADMC21.DeviceDesc                              = "DMC 2.1 Processor Device"
MAGNIADMC20.DeviceDesc                              = "DMC 2.0 Processor Device"
MAGNIA3000.DeviceDesc                               = "SMC 3000 Processor Device"
MAGNIA3010.DeviceDesc                               = "SMC 3010 Processor Device"
MAGNIADMC.DeviceDesc                                = "DMC Processor Device"
TOSHIBASMC.DeviceDesc                               = "SMC SCSI Processor Device"

HITACHI                                             = "Hitachi"
SMP0001.DeviceDesc                                  = "SMP Processor Device"

HP                                                  = "HP"
HPD4902.DeviceDesc                                  = "HP D4902 SCSI Processor Device"
HPSAFETE.DeviceDesc                                 = "HP SAFETE SCSI Processor Device"
HPSAFTE.DeviceDesc	                            = "HP SAF-TE SCSI Processor Device"

MSFT                                                = "Microsoft"
Processor.DeviceDesc                                = "SCSI Processor Device"

;*******************************************
;Handy macro substitutions (non-localizable)
SPSVCINST_ASSOCSERVICE = 0x00000002
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\securews.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

[Strings]
SceInfAdministrator = "Administrator"
SceInfAdmins = "Administrators"
SceInfAcountOp = "Account Operators"
SceInfAuthUsers = "Authenticated Users"
SceInfBackupOp = "Backup Operators"
SceInfDomainAdmins = "Domain Admins"
SceInfDomainGuests = "Domain Guests"
SceInfDomainUsers = "Domain Users"
SceInfEveryone = "Everyone"
SceInfGuests = "Guests"
SceInfGuest = "Guest"
SceInfPowerUsers = "Power Users"
SceInfPrintOp = "Print Operators"
SceInfReplicator = "Replicator"
SceInfServerOp = "Server Operators"
SceInfUsers = "Users"
SceSecureWSProfileDescription = "Provides enhanced local account policies, limits the use of LanMan authentication, enables server-side SMB signing, and provides further restrictions on anonymous users. To apply to a domain member, all DC's that contain accounts of all users that logon to that member must be running NT4 SP4 or higher.  See online help for further info."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sfcgen.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...

#elif LANGUAGE_ID == 0x804
//CHS specific sections
[FILELIST.EXCLUDE]
gapi32.dll,0
; *Reason For Exclusion, gapi32.dll* - Workaround the fact that Exchange and Outlook 
; ship different versions of this file.  Win2000 needs this file for Far East IME support.
; Win2k bug 387611;  Exchange bug http://extc/bug.asp?115813
; Contacts: StellaYa (international Win2k PM); KenE (Exchange PM)
; RayCo's comments:
;   Here is what I propose, if and only if, Win2000 has no dependency on this file.
;   It is too late to remove this file from the product as we would not have time to
;   see what apps break.  Unprotect the file for Win2000 and remove it for Win2001. 
;   Exchange and Outlook would be entirely repsonsible for making sure they are both 
;   in sync and don't mess each other up by putting incompatible files on Windows 2000. 

#elif LANGUAGE_ID == 0x404
//CHT specific sections
[FILELIST.EXCLUDE]
gapi32.dll,0
; *Reason For Exclusion, gapi32.dll* - Workaround the fact that Exchange and Outlook 
; ship different versions of this file.  Win2000 needs this file for Far East IME support.
; Win2k bug 387611;  Exchange bug http://extc/bug.asp?115813
; Contacts: StellaYa (international Win2k PM); KenE (Exchange PM)
; RayCo's comments:
;   Here is what I propose, if and only if, Win2000 has no dependency on this file.
;   It is too late to remove this file from the product as we would not have time to
;   see what apps break.  Unprotect the file for Win2000 and remove it for Win2001. 
;   Exchange and Outlook would be entirely repsonsible for making sure they are both 
;   in sync and don't mess each other up by putting incompatible files on Windows 2000. 

#elif LANGUAGE_ID == 0x411
//JPN specific sections
[FILELIST.EXCLUDE]
gapi32.dll,0
; *Reason For Exclusion, gapi32.dll* - Workaround the fact that Exchange and Outlook 
; ship different versions of this file.  Win2000 needs this file for Far East IME support.
; Win2k bug 387611;  Exchange bug http://extc/bug.asp?115813
; Contacts: StellaYa (international Win2k PM); KenE (Exchange PM)
; RayCo's comments:
;   Here is what I propose, if and only if, Win2000 has no dependency on this file.
;   It is too late to remove this file from the product as we would not have time to
;   see what apps break.  Unprotect the file for Win2000 and remove it for Win2001. 
;   Exchange and Outlook would be entirely repsonsible for making sure they are both 
;   in sync and don't mess each other up by putting incompatible files on Windows 2000. 

#elif LANGUAGE_ID == 0x412
//KOR specific sections
[FILELIST.EXCLUDE]
gapi32.dll,0
; *Reason For Exclusion, gapi32.dll* - Workaround the fact that Exchange and Outlook 
; ship different versions of this file.  Win2000 needs this file for Far East IME support.
; Win2k bug 387611;  Exchange bug http://extc/bug.asp?115813
; Contacts: StellaYa (international Win2k PM); KenE (Exchange PM)
; RayCo's comments:
;   Here is what I propose, if and only if, Win2000 has no dependency on this file.
;   It is too late to remove this file from the product as we would not have time to
;   see what apps break.  Unprotect the file for Win2000 and remove it for Win2001. 
;   Exchange and Outlook would be entirely repsonsible for making sure they are both 
;   in sync and don't mess each other up by putting incompatible files on Windows 2000. 

#endif

// String section below for localizers
[Strings]
ProgramFiles = "Program Files"
ProgramFilesx86 = "Program Files (x86)"
CommonFiles = "Common Files"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\skinsmui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui
*/

[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x409
LCID=0409
#endif

#if LANGUAGE_ID == 0x403
LCID=0403
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
#endif

KEY_WMP = "SOFTWARE\Microsoft\MediaPlayer"

LANGUAGE="EN"

MP2_FOLDER = "Windows Media Player"
PROGRAMFILES = "Program Files"

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\shl_img.txt ===
// String section below for localizers
[Strings]
;Localizable

;OnlineServices
ONLINE_SERVICES_DIR             = "Online Services"
ISP_REFERRAL_DESC               = "Refer me to more Internet Service Providers"
ISP_REFERRAL_INFOTIP            = "Helps you choose an Internet Service Provider."
; NOTE: the two entries below MUST be localized to the value of the same name 
;       in \nt\inetcore\ConnectionWizard\nt5inf\usa\icwnt5.txt
LMSIE4                          = "Internet Explorer"
ICW_DIR                         = "Connection Wizard"

; welcome screen images
AIRPLANE_BMP_NAME               = "airplane.bmp"
ASTRONAUT_BMP_NAME              = "astronaut.bmp"
BALL_BMP_NAME                   = "ball.bmp"
BUTTERFLY_BMP_NAME              = "butterfly.bmp"
CAT_BMP_NAME                    = "cat.bmp"
FISH_BMP_NAME                   = "fish.bmp"
PINKFLOWER_BMP_NAME             = "pink flower.bmp"
GUITAR_BMP_NAME                 = "guitar.bmp"
SNOWFLAKE_BMP_NAME              = "snowflake.bmp"
BEACH_BMP_NAME                  = "beach.bmp"
CAR_BMP_NAME                    = "car.bmp"
CHESS_BMP_NAME                  = "chess.bmp"
DIRTBIKE_BMP_NAME               = "dirt bike.bmp"
DOG_BMP_NAME                    = "dog.bmp"
DRIP_BMP_NAME                   = "drip.bmp"
DUCK_BMP_NAME                   = "duck.bmp"
FROG_BMP_NAME                   = "frog.bmp"
HORSES_BMP_NAME                 = "horses.bmp" 
KICK_BMP_NAME                   = "kick.bmp"
LIFTOFF_BMP_NAME                = "lift-off.bmp"
PALMTREE_BMP_NAME               = "palm tree.bmp"
REDFLOWER_BMP_NAME              = "red flower.bmp"
SKATER_BMP_NAME                 = "skater.bmp"

; This MUST be localized to the same as the guest account!
GUEST_BMP_NAME                  = "guest.bmp"

; Wallpaper images
BLISS_JPG_NAME                  = "Bliss.jpg"
MOON_JPG_NAME                   = "Moon flower.jpg"
REDMOON_JPG_NAME                = "Red moon desert.jpg"
VORTEC_JPG_NAME                 = "Vortec space.jpg"
ASCENT_JPG_NAME                 = "Ascent.jpg"
AUTUMN_JPG_NAME                 = "Autumn.jpg"
FRIEND_JPG_NAME                 = "Friend.jpg"
HOME_JPG_NAME                   = "Home.jpg"
PEACE_JPG_NAME                  = "Peace.jpg"
POWER_JPG_NAME                  = "Power.jpg"
PURPLEFLOWER_JPG_NAME           = "Purple flower.jpg"
RADIANCE_JPG_NAME               = "Radiance.jpg"
STONEHENGE_JPG_NAME             = "Stonehenge.jpg"
TULIPS_JPG_NAME                 = "Tulips.jpg"
WIND_JPG_NAME                   = "Wind.jpg"
CRYSTAL_JPG_NAME                = "Crystal.jpg"
RIPPLE_JPG_NAME                 = "Ripple.jpg"
AZUL_JPG_NAME                   = "Azul.jpg"
FOLLOW_JPG_NAME                 = "Follow.jpg"
WINDOWSXP_JPG_NAME              = "Windows XP.jpg"

; Name for the subdir under Common Pictures where the samples are.
; NOTE: this needs to be localized to the same thing as IDS_SAMPLEPICTURES
;       in nt\shell\shell32\shell32.rc
MYPICS_SAMPLES_DIR              = "Sample Pictures"

; Name for the subdir under Common Music where the samples are.
; NOTE: this needs to be localized to the same thing as IDS_SAMPLEMUSIC
;       in nt\shell\shell32\shell32.rc
MYMUSIC_SAMPLES_DIR             = "Sample Music"

; Defaut Sample Picture names
WATER_LILY_JPG_NAME             = "Water lilies.jpg"
BLUEHILL_JPG_NAME               = "Blue hills.jpg"
SUNSET_JPG_NAME                 = "Sunset.jpg"
WINTER_JPG_NAME                 = "Winter.jpg"

; Defaut Sample Music names
BEETHOVEN_NINTH_NAME            = "Beethoven's Symphony No. 9 (Scherzo).wma"
NEW_STORIES_NAME                = "New Stories (Highway Blues).wma"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sonypvu1.txt ===
[Strings]
PRODUCT_COMPANY = "Sony Corporation"
PRODUCT_SERVICE = "Sony USB Filter Driver (SONYPVU1)"
USB\VID_054C&PID_0010 = "Sony DSC"
USB\VID_054C&PID_002D = "Sony Peripheral"
USB\VID_054C&PID_002E = "Sony Camcorder"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\smartcrd.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
Msft                    = "Microsoft"
BULL                    = "BULL"
BULLTLP3.DeviceDesc     = "BULL SmarTLP3 Serial Smart Card Reader"
COMPAQ                  = "COMPAQ"
COMPAQ410.DeviceDesc    = "COMPAQ GCR410P Serial Smart Card Reader"
GEMPLUS                 = "GEMPLUS"
GPR400.DeviceDesc       = "GEMPLUS GPR400 PCMCIA Smart Card Reader"
GCR410P.DeviceDesc      = "GEMPLUS GCR410P Serial Smart Card Reader"
HP                      = "Hewlett Packard"
HPSCR111.DeviceDesc     = "HP ProtectTools Serial smart Card reader"
LITRONIC                = "Litronic"
LIT220.DeviceDesc       = "Litronic 220 Serial Smartcard Reader"
SLB                     = "Schlumberger"
SLBREFLEX20.DeviceDesc  = "Schlumberger Reflex 20 PCMCIA Smart Card Reader"
SLBREFLEX30.DeviceDesc  = "Schlumberger Reflex 30 PCMCIA Smart Card Reader"
SLBREFLEX72.DeviceDesc  = "Schlumberger Reflex 72 Serial Smart Card Reader"
SLBSCR111.DeviceDesc    = "Schlumberger Reflex Lite Serial Smart Card Reader"
SCM                     = "SCM Microsystems"
SCM488C.DeviceDesc      = "SCM Microsystems SCR120 PCMCIA Smart Card Reader"
SCMSTCS.DeviceDesc      = "SCM Microsystems SCR200 Serial Smart Card Reader"
SCMUSB.DeviceDesc       = "SCM Microsystems SCR300 USB Smart Card Reader"
SCMSCR111.DeviceDesc    = "SCM Microsystems SCR111 Serial SmartCard Reader"
ACTIVECARD.DeviceDesc   = "ActivCard SCR301 USB Smart Card Reader"
SNI                     = "Systemneeds Inc."
SNISCR111.DeviceDesc    = "Systemneeds External Serial Smart Card Reader"
OMNIKEY                 = "Omnikey AG"
OMNUSB2020.DeviceDesc   = "Omnikey AG CardMan 2020 USB Smart Card Reader"    
OMNUSB6020.DeviceDesc   = "Omnikey AG CardMan 6020 USB Smart Card Reader"                       
OMNCMBP.DeviceDesc      = "Omnikey AG CardMan 4000 PCMCIA Smart Card Reader"
OMNSCCM.DeviceDesc      = "Omnikey AG CardMan 2010 Serial Smart Card Reader"
ClassName               = "Smart card readers"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\slip.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
;---------------------------------------------------------------
;                S t r i n g s
;---------------------------------------------------------------

[Strings]

;----------------
; Non-Localizable
;----------------

SERVICE_KERNEL_DRIVER = 1
SERVICE_AUTO_START    = 2
SERVICE_DEMAND_START  = 3
SERVICE_ERROR_NORMAL  = 1

RunOnce="SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"
ActiveMovieCategories="CLSID\{da4e3da0-d07d-11d0-bd50-00a0c911ce86}\Instance"
Proxy.CLSID="{17CCA71B-ECD7-11D0-B908-00A0C9223196}"  ; KsProxy.ax's ID, REQUIRED
GUID.BdaComponent="{FD0A5AF4-B41D-11d2-9C95-00C04F7971E0}"
Category_BdaComponent= "BDA Receiver Component"
AMcatID="{DA4E3DA0-D07D-11d0-BD50-00A0C911CE86}"
SLIP.DeviceId="{03884CB6-E89A-4deb-B69E-8DC621686E6A}"


;----------------
; Localizable
;----------------

Msft=                  "Microsoft"
MsftMfg=               "Microsoft"
SLIP.DeviceDesc=       "BDA Slip De-Framer"
SLIP.FriendlyName=     "BDA Slip De-Framer"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sr.txt ===
[Strings]
SR_Filter_Name  = "System Restore Filter Driver"

SR_Service_Name = "System Restore Service"
SR_Service_Desc = "Performs system restore functions. To stop service, turn off System Restore from the System Restore tab in My Computer->Properties"

SR_UI_Link_Name    = "System Restore"
SR_UI_Link_SubDir  = "Accessories\System Tools"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\shell.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
@*: This file will be appended to the corresponding INX file and then
@*: processed into an INF file
[Strings]
ShowDesktop         = "Show Desktop.scf"
QuickLaunchDir      = "Microsoft\Internet Explorer\Quick Launch"

Accessories         = "Accessories"
SystemTools         = "Accessories\System Tools"

Explorer_DESC       = "Windows Explorer"
Explorer_InfoTip    = "Displays the files and folders on your computer."

@*: This is still exists so we can delete the old shortcut to welcome.exe on upgrade
@w:Welcome_DESC        = "Getting Started"

DiskClean_DESC      = "Disk Cleanup"
DiskClean_InfoTip   = "Enables you to clear your disk of unnecessary files."

Scheduled_DESC      = "Scheduled Tasks"
Scheduled_InfoTip   = "Use Task Scheduler to schedule computer tasks to run automatically."
CLSID_MyComputer    = "{20D04FE0-3AEA-1069-A2D8-08002B30309D}"
CLSID_ControlPanel  = "{21EC2020-3AEA-1069-A2DD-08002B30309D}"
CLSID_TaskScheduler = "{D6277990-4C6A-11CF-8D87-00AA0060F5BF}"

// registry helpers
REGDW               = 0x00010001
REG_SPOPTIONS       = "Software\Microsoft\Windows\CurrentVersion\Explorer\StartMenu\StartPanel"
PATH_EXPLORER       = "Software\Microsoft\Windows\CurrentVersion\Explorer"
WINDOWS_HLP         = "windows.hlp"

// for the startpanel regtreeop entries
DESC_StartPanelATBoth  = "@shell32.dll,-30478"
DESC_StartPanelATMenu     = "@shell32.dll,-30479"
DESC_StartPanelShowMyComp   = "@shell32.dll,-30480"
DESC_StartPanelShowNetPlaces= "@shell32.dll,-30481"
DESC_StartPanelShowNetConn  = "@shell32.dll,-30482"
DESC_StartPanelShowRun      = "@shell32.dll,-30483"
DESC_StartPanelFavorites    = "@shell32.dll,-30484"
DESC_StartPanelShowMyDocs   =     "@shell32.dll,-30485"
DESC_StartPanelShowMyPics   =     "@shell32.dll,-30486"
DESC_StartPanelShowMyMusic  =     "@shell32.dll,-30487"
DESC_StartPanelShowControlPanel = "@shell32.dll,-30488"
DESC_StartPanelShowHelp     = "@shell32.dll,-30489"
DESC_StartPanelOpen         = "@shell32.dll,-30490"
DESC_StartPanelMenu         = "@shell32.dll,-30491"
DESC_StartPanelHide         = "@shell32.dll,-30492"
DESC_StartPanelShowPrinters = "@shell32.dll,-30493"
DESC_StartPanelNetConOpen   = "@shell32.dll,-30494"
DESC_StartPanelNetConMenu   = "@shell32.dll,-30495"
DESC_StartPanelShowSearch   = "@shell32.dll,-30496"
DESC_StartPanelAdminTools   = "@shell32.dll,-30515"
DESC_StartMenuChange    = "@shell32.dll,-30475"
DESC_StartMenuScrollPrograms = "@shell32.dll,-30471"
DESC_StartPanelShowOEMLink = "@shell32.dll,-30516"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\srchasst.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif


// String section below for localizers

[Strings]
SRCHASST_DIR_LFN = "srchasst"
SRCHASST_CACHE_DIR_LFN = "mui"

#if LANGUAGE_ID == 0x401
LCID="0401"
#endif

#if LANGUAGE_ID == 0x418
LCID="0418"
#endif

#if LANGUAGE_ID == 0x403
LCID="0403"
#endif

#if LANGUAGE_ID == 0x804
LCID="0804"
#endif

#if LANGUAGE_ID == 0x404
LCID="0404"
#endif

#if LANGUAGE_ID == 0x40C
LCID="040C"
#endif

#if LANGUAGE_ID == 0x407
LCID="0407"
#endif

#if LANGUAGE_ID == 0x40D
LCID="040D"
#endif

#if LANGUAGE_ID == 0x410
LCID="0410"
#endif

#if LANGUAGE_ID == 0x411
LCID="0411"
#endif

#if LANGUAGE_ID == 0x412
LCID="0412"
#endif

#if LANGUAGE_ID == 0xC0A
LCID="0C0A"
#endif

#if LANGUAGE_ID == 0x409
LCID="0409"
#endif

#if LANGUAGE_ID == 0x809
LCID="0809"
#endif

#if LANGUAGE_ID == 0x413
LCID="0413"
#endif

#if LANGUAGE_ID == 0x41D
LCID="041D"
#endif

#if LANGUAGE_ID == 0x416
LCID="0416"
#endif

#if LANGUAGE_ID == 0x414
LCID="0414"
#endif

#if LANGUAGE_ID == 0x406
LCID="0406"
#endif

#if LANGUAGE_ID == 0x40b
LCID="040b"
#endif

#if LANGUAGE_ID == 0x419
LCID="0419"
#endif

#if LANGUAGE_ID == 0x40e
LCID="040e"
#endif

#if LANGUAGE_ID == 0x415
LCID="0415"
#endif

#if LANGUAGE_ID == 0x405
LCID="0405"
#endif

#if LANGUAGE_ID == 0x816
LCID="0816"
#endif

#if LANGUAGE_ID == 0x41F
LCID="041F"
#endif

#if LANGUAGE_ID == 0x408
LCID="0408"
#endif
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sslaccel.txt ===
;*******************************************************************************
;  String Definitions
;*******************************************************************************

[Strings]
Msft = "Microsoft"
SECURITYACCELERATORCLASSNAME="Security Accelerators"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\srchmui.txt ===
// String section below for localizers

[Strings]
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui

#if LANGUAGE_ID == 0x409
LCID="0409"
#endif

#if LANGUAGE_ID == 0x40C
LCID="040C"
#endif

#if LANGUAGE_ID == 0xC0A
LCID="0C0A"
#endif

#if LANGUAGE_ID == 0x410
LCID="0410"
#endif

#if LANGUAGE_ID == 0x41D
LCID="041D"
#endif

#if LANGUAGE_ID == 0x413
LCID="0413"
#endif

#if LANGUAGE_ID == 0x416
LCID="0416"
#endif

#if LANGUAGE_ID == 0x40b
LCID="040b"
#endif

#if LANGUAGE_ID == 0x414
LCID="0414"
#endif

#if LANGUAGE_ID == 0x406
LCID="0406"
#endif

#if LANGUAGE_ID == 0x40e
LCID="040e"
#endif

#if LANGUAGE_ID == 0x415
LCID="0415"
#endif

#if LANGUAGE_ID == 0x419
LCID="0419"
#endif

#if LANGUAGE_ID == 0x405
LCID="0405"
#endif

#if LANGUAGE_ID == 0x408
LCID="0408"
#endif

#if LANGUAGE_ID == 0x816
LCID="0816"
#endif

#if LANGUAGE_ID == 0x41F
LCID="041F"
#endif

#if LANGUAGE_ID == 0x411
LCID="0411"
#endif

#if LANGUAGE_ID == 0x412
LCID="0412"
#endif

#if LANGUAGE_ID == 0x407
LCID="0407"
#endif

#if LANGUAGE_ID == 0x804
LCID="0804"
#endif

#if LANGUAGE_ID == 0x404
LCID="0404"
#endif

#if LANGUAGE_ID == 0x401
LCID="0401"
#endif

#if LANGUAGE_ID == 0x40D
LCID="040D"
#endif
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\swflash.txt ===
[strings]
productname="Shockwave Flash"
GUID = "{D27CDB6E-AE6D-11cf-96B8-444553540000}"
GUIDFACT = "{D27CDB6E-AE6D-11cf-96B8-444553540000}"
DefaultName = "Macromedia Shockwave Flash"
ComponentID = "Flash"
VersionNumber = "5,0,44,0"
LocaleID = "EN"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sti.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]

;
; Non Localizable strings
;
SMWCV       = "Software\Microsoft\Windows\CurrentVersion"
KEY_RENAME  = "Software\Microsoft\Windows\CurrentVersion\RenameFiles"
Run         = "Software\Microsoft\Windows\CurrentVersion\Run"
RunOnce     = "Software\Microsoft\Windows\CurrentVersion\RunOnce"

Msft ="Microsoft"

ClassName="Imaging devices"
STICLI="Still Image Client Application"
STISVC="Still Image Monitoring Process"
scsiscan.SvcDesc= "SCSI Scanner Driver"
usbscan.SvcDesc= "USB Scanner Driver"
StillCam.SvcDesc="Still Serial Digital Camera Driver"
WIA.SvcDisplayName="Windows Image Acquisition (WIA)"
WIA.SvcDesc="Provides image acquisition services for scanners and cameras."
Wizard.Name="Microsoft Scanner and Camera Wizard"
Wizard.Desc="Download pictures from a camera or scanner"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\stillcam.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 && LANGUAGE_ID != 0x412

#elif LANGUAGE_ID == 0x804

#elif LANGUAGE_ID == 0x411

#elif LANGUAGE_ID == 0x412

#endif

Ftnf="FotoNation for"
Msft="Microsoft"
Mfg="Microsoft"

StillCam.SvcDesc="Still Serial Digital Camera Driver"

MfgAgfa="Agfa"
Agfa_ePhoto_780="Agfa ePhoto 780"
Agfa_ePhoto_1280="Agfa ePhoto 1280"
Agfa_ePhoto_780_Digital_Camera="Agfa ePhoto 780 Digital Camera"
Agfa_ePhoto_1280_Digital_Camera="Agfa ePhoto 1280 Digital Camera"
Agfa_ePhoto_1680_Digital_Camera="Agfa ePhoto 1680 Digital Camera"
Agfacam.SvcDesc="Agfa Digital Camera Driver"
Agfa_Generic="Agfa Digital Camera"
Agfa_Generic_Digital_Camera="Agfa Digital Camera"

MfgCasio="Casio"
Casio_QV_5000="Casio QV 5000SX"
Casio_QV_5000_Digital_Camera="Casio QV 5000SX Digital Camera"
CasioQVcam.SvcDesc="Casio QV Digital Camera Driver"

MfgEpson="Epson"
Epson_PhotoPC_700="Epson PhotoPC 700 / CP-600"
Epson_CP_700Z="Epson PhotoPC 750Z / CP-700Z"
Epson_PhotoPC_700_Digital_Camera="Epson PhotoPC 700 / CP-600 Digital Camera"
Epson_CP_700Z_Digital_Camera="Epson PhotoPC 750Z / CP-700Z Digital Camera"
Epsoncam.SvcDesc="Epson Digital Camera Driver"


MfgFuji="FUJIFILM"
Fuji_MX700="FUJIFILM MX-700"
Fuji_MX700_Digital_Camera="FUJIFILM MX-700 Digital Camera"
Fujicam.SvcDesc="Fujifilm Digital Camera Driver"

MfgHP="Hewlett Packard"
HP_C20="Hewlett Packard PhotoSmart C20"
HP_C20_Digital_Camera="Hewlett Packard PhotoSmart C20 Digital Camera"
HPcam.SvcDesc="Hewlett Packard Digital Camera Driver"
HP_C30="Hewlett Packard PhotoSmart C30"
HP_C30_Digital_Camera="Hewlett Packard PhotoSmart C30 Digital Camera"
HP_C200="Hewlett Packard PhotoSmart C200"
HP_C200_Digital_Camera="Hewlett Packard PhotoSmart C200 Digital Camera"

MfgNikon="Nikon"
Nikon_CoolPix_900="Nikon CoolPix 900"
Nikon_CoolPix_950="Nikon CoolPix 950"
Nikon_CoolPix_700="Nikon CoolPix 700"
Nikon_CoolPix_900_Digital_Camera="Nikon CoolPix 900 Digital Camera"
Nikon_CoolPix_950_Digital_Camera="Nikon CoolPix 950 Digital Camera"
Nikon_CoolPix_700_Digital_Camera="Nikon CoolPix 700 Digital Camera"
Nikoncam.SvcDesc="Nikon Digital Camera Driver"
Nikon_Generic="Nikon Digital Camera"
Nikon_Generic_Digital_Camera="Nikon Digital Camera"


MfgOlympus="Olympus"
Olympus_D340L="Olympus D-340L/C-840L"
Olympus_D340R="Olympus D-340R/C-830L"
Olympus_D400Z="Olympus D-400Z//C-900L"
Olympus_D500L="Olympus D-500L/C-1000L"
Olympus_D600L="Olympus D-600L/C-1400L"
Olympus_D340L_Digital_Camera="Olympus D-340L/C-840L Digital Camera"
Olympus_D340R_Digital_Camera="Olympus D-340R/C-830L Digital Camera"
Olympus_D400Z_Digital_Camera="Olympus D-400Z/C-900L Digital Camera"
Olympus_D500L_Digital_Camera="Olympus D-500L/C-1000L Digital Camera"
Olympus_D600L_Digital_Camera="Olympus D-600L/C-1400L Digital Camera"
Olympuscam.SvcDesc="Olympus Digital Camera Driver"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\swnt.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[strings]
;localized strings
MSFT = "Microsoft"

SideWinder.DeviceDesc = "Sidewinder Hid to Joystick Port Enabler"
msgame.SvcDesc = "Sidewinder HID to Joystick Port Enabler"

SideWinder.SW3dPro          	= "Microsoft SideWinder 3D Pro"
SideWinder.gamepad          	= "Microsoft SideWinder game pad"
SideWinder.PrecisionPro     	= "Microsoft SideWinder Precision Pro"
SideWinder.ForceFeedbackPro 	= "Microsoft SideWinder Force Feedback Pro"
SideWinder.FreestylePro	    	= "Microsoft SideWinder Freestyle Pro"
SideWinder.ForceFeedbackWheel	= "Microsoft SideWinder Force Feedback Wheel"
SideWinder.AutoDetect       	= "Microsoft SideWinder (Auto Detect)"
SideWinder.PedalCalibration	= "Center the wheel, press the accelerator pedal half way down, then press a button on your controller"


;
; non localized strings
SPSVCINST_ASSOCSERVICE= 0x00000002
szSWAutoDetect="System\CurrentControlSet\Control\MediaProperties\PrivateProperties\Joystick\OEM\SideWinderAutoDetect"
szSW3DPro="System\CurrentControlSet\Control\MediaProperties\PrivateProperties\Joystick\OEM\VID_045E&PID_0F1F"
szSWGPad="System\CurrentControlSet\Control\MediaProperties\PrivateProperties\Joystick\OEM\VID_045E&PID_0003"
szSW3DPro2="System\CurrentControlSet\Control\MediaProperties\PrivateProperties\Joystick\OEM\VID_045E&PID_0017"
szSWFFPro="System\CurrentControlSet\Control\MediaProperties\PrivateProperties\Joystick\OEM\VID_045E&PID_0006"
szSWFSPro="System\CurrentControlSet\Control\MediaProperties\PrivateProperties\Joystick\OEM\VID_045E&PID_000D"
szSWFFWheel="System\CurrentControlSet\Control\MediaProperties\PrivateProperties\Joystick\OEM\VID_045E&PID_0015"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\syscomp.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

[Strings]

SCESysCompProfileDescription = "Settings for Optional Component Files. Many files may not exist on a given machine."
SceInfProgramFiles = "%ProgramFiles%"
commonprogramfiles = %CommonProgramFiles%
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\tablet.txt ===
[Strings]
cdname ="Windows XP Professional CD2"
SHORTCUT_NAME_INKBALL = "InkBall"
SHORTCUT_DESC_INKBALL = "Begins the InkBall game."
SHORTCUT_NAME_JOURNAL = "Journal"
SHORTCUT_DESC_JOURNAL = "Creates, edits, marks up, and manages notes and documents."
SHORTCUT_NAME_JOURNAL_TUTORIAL = "Journal Tutorial"
SHORTCUT_DESC_JOURNAL_TUTORIAL = "Learn how to use Journal."
SHORTCUT_NAME_WIZARD = "Get Going with Tablet PC"
SHORTCUT_DESC_WIZARD = "Learn how to use the Tablet PC and tablet pen."
SHORTCUT_NAME_TIPTUTE = "Tablet PC Input Panel Tutorial"
SHORTCUT_DESC_TIPTUTE = "Learn how to use Input Panel."
SHORTCUT_NAME_SPEECHTUTE = "Speech Tutorial"
SHORTCUT_DESC_SPEECHTUTE = "Learn how to use speech features."
SHORTCUT_NAME_OVERTUTE = " Tablet PC Tutorial"
SHORTCUT_DESC_OVERTUTE = "Learn about Tablet PC and its accessories."
SHORTCUT_NAME_STICKY = "Sticky Notes"
SHORTCUT_DESC_STICKY = "Writes brief notes using a tablet pen"
OOBE_SHORTCUT_FOLDER = "Tablet PC Tutorials"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\sysoc.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...

#elif LANGUAGE_ID == 0x804
//CHS specific sections
[Components]
@@:@i:FullScreenConsole=FsConIns.dll, FsConInstallProc, FsVga.inf, HIDE, 7

#elif LANGUAGE_ID == 0x404
//CHT specific sections
[Components]
@@:@i:FullScreenConsole=FsConIns.dll, FsConInstallProc, FsVga.inf, HIDE, 7

#elif LANGUAGE_ID == 0x411
//JPN specific sections
[Components]
@@:@i:FullScreenConsole=FsConIns.dll, FsConInstallProc, FsVga.inf, HIDE, 7

#elif LANGUAGE_ID == 0x412
//KOR specific sections
[Components]
@@:@i:FullScreenConsole=FsConIns.dll, FsConInstallProc, FsVga.inf, HIDE, 7

#endif

// MSN Explorer is not supported on BiDi (Arabic and Hebrew) systems.
#if LANGUAGE_ID != 0x401 && LANGUAGE_ID != 0x40D
[Components]
@w:@i:msnexplr=ocmsn.dll,OcEntry,msnmsn.inf,,7
#endif

// String section below for localizers
[Strings]
@b:WindowTitle="Windows Blade Server Setup"
@s!e!b:WindowTitle="Windows Server Setup"
@e!d:WindowTitle="Windows Advanced Server Setup"
@d:WindowTitle="Windows Datacenter Server Setup"
@w!p:WindowTitle="Windows Professional Setup"
@p:WindowTitle="Windows Home Edition Setup"
WindowTitle_Standalone="Windows Components Wizard"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\streamip.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
;---------------------------------------------------------------
;                S t r i n g s
;---------------------------------------------------------------

[Strings]

;----------------
; Non-Localizable
;----------------

SERVICE_KERNEL_DRIVER = 1
SERVICE_AUTO_START    = 2
SERVICE_DEMAND_START  = 3
SERVICE_ERROR_NORMAL  = 1

RunOnce="SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"
ActiveMovieCategories="CLSID\{da4e3da0-d07d-11d0-bd50-00a0c911ce86}\Instance"
Plugin_IPSink="WDM Streaming IPSink Property Set Handler"
GUID.IPSinkPlugin="{3F4DC8E2-4050-11d3-8F4B-00C04F7971E2}"
CLSID=    "{17CCA71B-ECD7-11D0-B908-00A0C9223196}"  ; KsProxy.ax's ID, REQUIRED
BDAcatID= "{71985F4A-1CA1-11d3-9CC8-00C04F7971E0}"
AMcatID=  "{DA4E3DA0-D07D-11d0-BD50-00A0C911CE86}"
IPV4PinID="{3fdffa70-ac9a-11d2-8f17-00c04f7971e2}"
StreamIP.DeviceId="{D84D449B-62FB-4ebb-B969-5183ED3DFB51}"
GUID.BdaRenderer= "{71985F4A-1CA1-11d3-9CC8-00C04F7971E0}"
Category_BdaRenderer=  "BDA Rendering Filters"


;----------------
; Localizable
;----------------

Msft=                  "Microsoft"
MsftMfg=               "Microsoft"
IPV4PinName=           "IPv4"
BDAcodec.DeviceDesc=   "BDA IPSink"
BDAcodec.FriendlyName= "BDA IP Sink"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\tourmui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui
*/

[Flash.install]
/* only collect the flash files for GER, ITA, SPA, FRE */
#if LANGUAGE_ID == 0x040c | LANGUAGE_ID == 0x0407 | LANGUAGE_ID == 0x0410 | LANGUAGE_ID == 0x040a
intro.swf,pro_intr.swf.mu_
intro.txt,pro_intr.txt.mu_
nav.swf, pro_nav.swf.mu_
nav.txt, pro_nav.txt.mu_
segment1.swf, pro_seg1.swf.mu_
segment1.txt, pro_seg1.txt.mu_
segment2.swf, pro_seg2.swf.mu_
segment2.txt, pro_seg2.txt.mu_
segment3.swf, pro_seg3.swf.mu_
segment3.txt, pro_seg3.txt.mu_
segment4.swf, pro_seg4.swf.mu_
segment4.txt, pro_seg4.txt.mu_
segment5.swf, pro_seg5.swf.mu_
segment5.txt, pro_seg5.txt.mu_
tour.exe, tourW.exe.mu_
#endif

[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x409
LCID=0409
#endif

#if LANGUAGE_ID == 0x403
LCID=0403
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
#endif

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\syssetup.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

// This section is for non-FE (chs,cht,kor,jpn) builds. So english, german, ....
#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 && LANGUAGE_ID != 0x412

[Accessibility]
%magnifier% = magnify.exe,magnify.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22553","%SystemRoot%\system32\shell32.dll",22041
@*: The following line should be removed on all non-US builds.
%reader%    = narrator.exe,narrator.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22560","%SystemRoot%\system32\shell32.dll",22048
%screenkeyboard% = osk.exe,osk.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22564","%SystemRoot%\system32\shell32.dll",22052
%utilman% = utilman.exe,"utilman.exe /start",,0,"@%SystemRoot%\system32\shell32.dll,-22577","%SystemRoot%\system32\shell32.dll",22065

#endif

#if LANGUAGE_ID == 0x409
//USA specific sections
[Infs.Always]

[OleControlDlls]

#elif LANGUAGE_ID == 0x804
//CHS specific sections
[Fonts.Upgrade]
system.ini,386Enh,,woafont=app936.fon

[StartMenu.ObjectsToDelete]
1,%eudcedit_40%,%accessories%,0
1,%ImageGen_351%,%accessories%,0
1,%mplayer_351%,%accessories%,0
1,%clipbrd_351%,%main%,0
1,%ChsuConv_351%,%accessories%,0
1,%UCharMap_40%,%accessories%,0
1,%CharMap%,%accessories%,0
1,%iexplorer_40%,"",0
1,%Image_40%,%accessories%,0
1,%rasadmin_40%,%admintools%,0
1,%rasadmin_40%,%admintools%,1
1,%rasadmin_40%,%nt4admintools%,1
@s:1,%licmanager_40%,%admintools%,1
@s:1,%licmanager_351%,%netadmintools%,1
@s:1,%ncadmin_351%,%netadmintools%,1

1,"Internet Mail",,0
1,"Internet News",,0

@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: or nothing are for both

[Accessibility]
%magnifier% = magnify.exe,magnify.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22553","%SystemRoot%\system32\shell32.dll",22041
@*: The following line should be removed on all non-US builds.
;%reader%    = narrator.exe,narrator.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22560","%SystemRoot%\system32\shell32.dll",22048
%screenkeyboard% = osk.exe,osk.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22564","%SystemRoot%\system32\shell32.dll",22052
%utilman% = utilman.exe,"utilman.exe /start",,0,"@%SystemRoot%\system32\shell32.dll,-22577","%SystemRoot%\system32\shell32.dll",22065


[Accessories]
%CHAREDIT% = eudcedit.exe,eudcedit.exe,,0,%charedit_infotip%

[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:prfd0804.dat /h:prfi0804.dat /l:004"

#elif LANGUAGE_ID == 0x404
//CHT specific sections
[Fonts.Upgrade]
system.ini,386Enh,,woafont=app950.fon
@@:win.ini,Fonts,"ө (TrueType)="

[StartMenu.ObjectsToDelete]
1,%eudcedit_40%,%accessories%,0
1,%UCharMap_40%,%accessories%,0
1,%OSK_dup%,%accessibility%,0
1,%CharMap%,%accessories%,0
1,%iexplorer_40%,"",0
1,%cblock_351%,%games%,0
1,"Internet Mail",,0
1,"Internet News",,0

@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: or nothing are for both

[Accessibility]
%magnifier% = magnify.exe,magnify.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22553","%SystemRoot%\system32\shell32.dll",22041
@*: The following line should be removed on all non-US builds.
;%reader%    = narrator.exe,narrator.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22560","%SystemRoot%\system32\shell32.dll",22048
%screenkeyboard% = osk.exe,osk.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22564","%SystemRoot%\system32\shell32.dll",22052
%utilman% = utilman.exe,"utilman.exe /start",,0,"@%SystemRoot%\system32\shell32.dll,-22577","%SystemRoot%\system32\shell32.dll",22065


[Accessories]
%CHAREDIT% = eudcedit.exe,eudcedit.exe,,0,%charedit_infotip%

[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:prfd0404.dat /h:prfi0404.dat /l:004"

#elif LANGUAGE_ID == 0x411
//JPN specific sections
[Fonts.Install]
win.ini,Fonts,,"%small_fonts%=JSMALLE.FON"
[Fonts.Upgrade]
system.ini,386Enh,,"woafont=app932.fon"
win.ini,Fonts,,"%small_fonts%=JSMALLE.FON"
win.ini,Fonts,"lr  (TrueType)="
win.ini,Fonts,"lr SVbN (TrueType)="
win.ini,Fonts,"lr SVbN & lr oSVbN (TrueType)="

[StartMenu.ObjectsToDelete]
@@:1,%eudcedit_40%,%accessories%,0
@@:1,%UCharMap_40%,%accessories%,0
@@:1,%UCharMap_351%,%accessories%,0
@@:1,%CharMap%,%accessories%,0
@@:1,%IMAGING_40%,%accessories%,0
@@:1,%iexplorer_40%,"",0
@@:1,%EUDCEDIT_351%,%JPN_INPUT%,0
@@:1,%charmap%,%JPN_INPUT%,0
@@:1,"Internet Mail",,0
@@:1,"Internet News",,0
@s:1,%licmanager_sb%,%netadmintools_sb%,1
@s:1,%netclientadmin_sb%,%netadmintools_sb%,1

@*: PC98 only
@@:@n:1,%gaijicnv%,%accessories%,0
@@:@n:1,%imgscan%,%accessories%,0
@@:@n:1,%insdapnt%,%main%,0
@*: PC98
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: or nothing are for both

[Accessibility]
%magnifier% = magnify.exe,magnify.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22553","%SystemRoot%\system32\shell32.dll",22041
@*: The following line should be removed on all non-US builds.
;%reader%    = narrator.exe,narrator.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22560","%SystemRoot%\system32\shell32.dll",22048
%screenkeyboard% = osk.exe,osk.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22564","%SystemRoot%\system32\shell32.dll",22052
%utilman% = utilman.exe,"utilman.exe /start",,0,"@%SystemRoot%\system32\shell32.dll,-22577","%SystemRoot%\system32\shell32.dll",22065


[Accessories]
%CHAREDIT% = eudcedit.exe,eudcedit.exe,,0,%charedit_infotip%

[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd011.dat /h:perfi011.dat /l:011"

#elif LANGUAGE_ID == 0x412
//KOR specific sections
[Fonts.Upgrade]
system.ini,386Enh,,woafont=app949.fon
win.ini,Fonts,"ü (TrueType)="
win.ini,Fonts,"ü (TrueType)="
win.ini,Fonts,"ü (TrueType)="
win.ini,Fonts,"üü (TrueType)="

[StartMenu.ObjectsToDelete]
;@@:1,%eudcedit%,%accessories%,0
1,%UCharMap_40%,%accessories%,0
1,%CharMap%,%accessories%,0
1,%iexplorer_40%,"",0
1,"Internet Mail",,0
1,"Internet News",,0

1,%eventvwr_40%,%admintools%,0
1,%eventvwr_40%,%admintools%,1

1,%Imaging_40%,%accessories%,0
1,%faxviewer_40%,%accessories%,0

@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: or nothing are for both

[Accessibility]
%magnifier% = magnify.exe,magnify.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22553","%SystemRoot%\system32\shell32.dll",22041
@*: The following line should be removed on all non-US builds.
;%reader%    = narrator.exe,narrator.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22560","%SystemRoot%\system32\shell32.dll",22048
%screenkeyboard% = osk.exe,osk.exe,,0,"@%SystemRoot%\system32\shell32.dll,-22564","%SystemRoot%\system32\shell32.dll",22052
%utilman% = utilman.exe,"utilman.exe /start",,0,"@%SystemRoot%\system32\shell32.dll,-22577","%SystemRoot%\system32\shell32.dll",22065


[Accessories]
%CHAREDIT% = eudcedit.exe,eudcedit.exe,,0,%charedit_infotip%

[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd012.dat /h:perfi012.dat /l:012"

#elif LANGUAGE_ID == 0x405
// Czech
[StartMenu.ObjectsToDelete]
1,%devmgmt%,%czechadmintools%,1
1,%diskmgmt%,%czechadmintools%,1
1,%svcmgmt%,%czechadmintools%,1
1,%fsmgmt%,%czechadmintools%,1
1,%ntbackup%,%czechadmintools%,1

1,%scheduled_tasks%,%czechadmintools%,1
1,%perfmon%,%czechadmintools%,1
1,%eventvwr%,%czechadmintools%,1
1,%winmsd%,%czechadmintools%,1
1,%musrmgr%,%czechadmintools%,1
1,%rasadmin%,%czechadmintools%,1
1,%dcomcnfg%,%czechadmintools%,1
1,%windisk%,%czechadmintools%,1
0,%czechadmintools%,,1
0,%czechadmintools%,,0

[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd005.dat /h:perfi005.dat /l:005"

#elif LANGUAGE_ID == 0x401
// ARA Arabic
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd001.dat /h:perfi001.dat /l:001"

#elif LANGUAGE_ID == 0x416
// BR Portuguese (Brazil)
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd016.dat /h:perfi016.dat /l:016"

#elif LANGUAGE_ID == 0x406
// DA Danish
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd006.dat /h:perfi006.dat /l:006"

#elif LANGUAGE_ID == 0x408
// EL Greek
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd008.dat /h:perfi008.dat /l:008"

#elif LANGUAGE_ID == 0xC0A
// ES Spanish
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd00A.dat /h:perfi00A.dat /l:00A"

#elif LANGUAGE_ID == 0x40B
// FI Finnish
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd00B.dat /h:perfi00B.dat /l:00B"

#elif LANGUAGE_ID == 0x40C
// FR French
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd00C.dat /h:perfi00C.dat /l:00C"

#elif LANGUAGE_ID == 0x407
// GER German
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd007.dat /h:perfi007.dat /l:007"

#elif LANGUAGE_ID == 0x40D
// HEB Hebrew
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd00D.dat /h:perfi00D.dat /l:00D"

#elif LANGUAGE_ID == 0x40E
// HU Hungarian
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd00E.dat /h:perfi00E.dat /l:00E"

#elif LANGUAGE_ID == 0x410
// IT Italian
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd010.dat /h:perfi010.dat /l:010"

#elif LANGUAGE_ID == 0x413
// NL Dutch
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd013.dat /h:perfi013.dat /l:013"

#elif LANGUAGE_ID == 0x414
// NO Norwegian
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd014.dat /h:perfi014.dat /l:014"

#elif LANGUAGE_ID == 0x415
// PL Polish
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd015.dat /h:perfi015.dat /l:015"

#elif LANGUAGE_ID == 0x816
// PT Portuguese (Portugal)
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd016.dat /h:perfi016.dat /l:016"

#elif LANGUAGE_ID == 0x419
// RU Russian
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd019.dat /h:perfi019.dat /l:019"

#elif LANGUAGE_ID == 0x41D
// SV Swedish
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd01D.dat /h:perfi01D.dat /l:01D"

#elif LANGUAGE_ID == 0x41F
// TR Turkish
[EarlyOleControlDlls]
11,,Lodctr.exe,,,"/c:perfd01F.dat /h:perfi01F.dat /l:01F"

#endif

// String section below for localizers
[Strings]

#if LANGUAGE_ID == 0x409
//USA specific sections

#elif LANGUAGE_ID == 0x804
//CHS specific sections

@*:ref the names in localized NT 4.0
UCharMap_40 = "Unicode Character Map"
mplayer_351="Media Player"
licmanager_351="License Manager"
ncadmin_351="Network Client Administrator"
ImageGen_351="IME Generator"
clipbrd_351="ClipBook Viewer"
ChsuConv_351="Code Converter"
iexplorer_40="Internet Explore"
Image_40="Imaging"
licmanager_40="License Manager"
rasadmin_40 = "Remote Access Admin"
eudcedit_40="EUDC Editor"

#elif LANGUAGE_ID == 0x404
//CHT specific sections


@*:ref the names in localized NT 4.0
UCharMap_40 = "Unicode Character Map"
OSK_dup = "On-Screen Keyboard"
eudcedit_40="EUDC Editor"
iexplorer_40="Internet Explore"
cblock_351 = "Cblocks"

#elif LANGUAGE_ID == 0x411
//JPN specific sections

@*: PC98 only
@@:@n:gaijicnv = "ORo[^"
@@:@n:imgscan = "C[W XLi"
@@:@n:insdapnt = "DOS AP CXg["
@*: PC98

@*:FE specific
@*:ref the names in localized NT 4.0
@*:to JPN LOC team, eudcedit_40 ,SHOULD use the same EUDC name in JPN 4.0
@*:                 eudcedit_351,SHOULD use the same EUDC name in JPN 3.51
eudcedit_40="EUDC Editor"
eudcedit_351="EUDC Editor"
UCharMap_40 = "Unicode Character Map"
UCharMap_351 = "Unicode Character Map"
iexplorer_40="iexplorer_40"
JPN_INPUT="JPN_INPUT"
@*:keep imaging_40 in English
IMAGING_40="Imaging"
licmanager_sb="licmanager_sb"
netclientadmin_sb="netclientadmin_sb"
netadmintools_sb="netadmintools_sb"

#elif LANGUAGE_ID == 0x412
//KOR specific sections

@*:ref the names in localized NT 4.0
UCharMap_40 = "Unicode Character Map"
;eudcedit="EUDC Editor"
iexplorer_40="Internet Explore"

eventvwr_40 = "eventvwr_40"
Imaging_40 = "Imaging"
faxviewer_40="faxviewer_40"
#elif LANGUAGE_ID == 0x405
// Czech
// Localizer should verify if Common is needed or not.
czechadmintools = "Nastroje administrace (Common)"
#endif

;
; Names of program groups
;
main = "Main"
games = "Games"
accessories = "Accessories"
accessories_entertainment = "Accessories\Entertainment"
accessories_communications = "Accessories\Communications"
prexp_accessories_games = "Accessories\Games"
accessories_multimedia = "Accessories\Multimedia"
accessibility = "Accessories\Accessibility"
systemtools = "Accessories\System Tools"
startup = "Startup"
admintools = "Administrative Tools"
nt4admintools = "NT 4.0 Administrative Tools"
@s:netadmintools = "Network Administration"
startmenucommon = "::0x0016::"

;
; Names of program group items
;
old_srv_config = "Administrative Tools Home Page"
srv_config = "Configure Your Server"
srv_manage = "Manage Your Server"
srvwiz_infotip = "Sets up and configures Windows services for your network."
windowsupdate = "Windows Update"
windowscatalog = "Windows Catalog"
@w:configureprograms = "Set Program Access and Defaults"
windowstour = "Tour Windows XP"
synchronize = "Synchronize"
sync_manager = "Synchronization Manager"
winfile = "File Manager"
control = "Control Panel"
printman = "Print Manager"
clipbrd = "ClipBook Viewer"
dialer = "Phone Dialer"
cmd = "Command Prompt"
explorer = "Windows NT Explorer"
setup = "Windows NT Setup"
pifedit = "PIF Editor"
intro = "Introducing Windows NT"
readme = "Read Me"
ntbooks = "Books Online"
cmdref = "Windows NT Help"
windisk = "Disk Administrator"
perfmon = "Performance Monitor"
ntbackup = "Backup"
compatwizard = "Program Compatibility Wizard"
@w:@i:migwiz_desc = "Files and Settings Transfer Wizard"
eventvwr = "Event Viewer"
dcomcnfg = "DCOM Configuration"
winmsd = "Windows NT Diagnostics"
musrmgr = "User Manager"
@s:upedit = "User Profile Editor"
@s:usrmgr = "User Manager for Domains"
@s:nwconv = "Migration Tool for NetWare"
@s:srvmgr = "Server Manager"
pbrush = "Paintbrush"
paint = "Paint"
winchat = "Chat"
terminal = "Terminal"
charedit = "Private Character Editor"
notepad = "Notepad"
cardfile = "Cardfile"
calc = "Calculator"
clock = "Clock"
charmap = "Character Map"
mplayer = "Media Player"
sndrec32 = "Sound Recorder"
sndvol32 = "Volume Control"
sndvol32old = "Volume Control"
cdplayer = "CD Player"
cdplayerold = "CD Player"
write = "Write"
packgr32 = "Object Packager"
hyperterm = "HyperTerminal"
sol = "Solitaire"
winmine = "Minesweeper"
freecell = "Freecell"
hearts = "Hearts"
spider = "Spider Solitaire"
pinball = "Pinball"
magnifier   = "Magnifier"
@*: These next lines needed only to support XP Beta 2 -> XP RTM upgrades
ihearts = "Internet Hearts"
ispades = "Internet Spades"
ibackgammon = "Internet Backgammon"
icheckers = "Internet Checkers"
ireversi = "Internet Reversi"
@*: End of lines needed only to support XP Beta 2 -> XP RTM upgrades
reader      = "Narrator"
screenkeyboard = "On-Screen Keyboard"
utilman = "Utility Manager"
@s:netclientadmin = "Network Client Administrator"
@s:licmanager = "License Manager"
@s:licmanager2 = "Licensing"
@s:ntwksvcmgmt = "Network Services Management"
certmgr = "Certificate Manager"
rasadmin = "Remote Access Admin"
du_networking = "Dial-Up Networking"
network_and_dialup = "Network and Dial-up Connections"
admin_wiz = "Administrative Wizards"
compmgmt = "Computer Management"
fsmgmt = "File Service Management"
neweventvwr = "Event Viewer"
devmgmt = "Device Management"
svcmgmt = "System Service Management"
sysmon = "Performance"
@s:dirmgmt = "Directory Management"
@s:dommgmt = "Domain Tree Management"
@s:dnsmgmt = "DNS Management"
@s:dssite = "Active Directory Sites and Services Manager"
diskmgmt = "Disk Management"
ciadmin = "Index Server Management"
mediasvc = "Removable Storage Management"
@s:dfsmgr = "Distributed File System"
@s:dfsadmin="Dfs Administrator"
@e:enterprise_installer = "Windows NT Server, Enterprise Edition Installer.cmd"
datasrcodbc = "Data Sources (ODBC)"
@@:@a:datasrcodbcx86 = "Data Sources (ODBC) (x86)"
scheduled_tasks = "Scheduled Tasks"
maint_wiz = "Maintenance Wizard"
locsecpol = "Local Security Policy"
@*:msinfo = "System Information"
services = "Services"
tlntadmn = "Telnet Server Administration"
@@:@i:oobe_desc   = "Activate Windows"
oldnetcon = "Network and Dial-up Connections"
@@:@3:remote_assistance = "Remote Assistance"



@*:
@*: Infotips
@*:
@@:@i:oobe_infotip = "Activate Windows with Microsoft"
charedit_infotip = "Use Character Editor to modify how a character is shown on the screen."
cmd_infotip = "Performs text-based (command-line) functions."
compmgmt_infotip = "Manages disks and provides access to other tools to manage local and remote computers."
magnifier_infotip = "Enlarges selected text and other on-screen items for easier viewing."
neweventvwr_infotip = "Displays monitoring and troubleshooting messages from Windows and other programs."
notepad_infotip = "Creates and edits text files using basic text formatting."
ntbackup_infotip = "Archives data to protect it from accidental loss."
reader_infotip = "Reads on-screen text, dialog boxes, menus, and buttons aloud if speakers or a sound output device is installed."
@@:@3:remote_assistance_infotip = "Lets you invite a friend to connect to your computer and help you with problems."
screenkeyboard_infotip = "Displays a keyboard that is controlled by a mouse or switch input device."
synchronize_infotip = "Updates the network copy of materials that were edited offline, such as documents, calendars, and e-mail messages."
utilman_infotip = "Starts and configures accessibility tools from one window."
windowsupdate_infotip = "Updates your system with new Windows features, device drivers, and system updates available from Microsoft."
sysmon_infotip = "Displays graphs of system performance and configures data logs and alerts."
datasrcodbc_infotip = "Adds, removes, and configures Open Database Connectivity (ODBC) data sources and drivers."
licmanager_infotip = "Manages client access licensing for a server product."
dfsmgr_infotip = "Creates and manages distributed file systems that connect shared folders from different computers."
locsecpol_infotip = "Views and modifies local security policy, such as user rights and audit policies."
@*:msinfo_infotip = "System Information infotip"
services_infotip = "Starts and stops services."
tlntadmn_infotip = "View and modify telnet server settings and connections."
compatwizard_infotip = "Get older programs to work on Windows XP"


ProgramF    = "Program Files"
SharedTools = "Common Files\Microsoft Shared"
MShared     = "Microsoft Shared"
@*: Folder name for IE5 appDir, same as ie.txt
MSIE4       = "Internet Explorer"
MP2         = "Windows Media Player"
DisplayName = "Vector Graphics Rendering (VML)"
SRCHASST    = "srchasst"
Dialer_DIR  = "Windows NT"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\uddi.txt ===
[Strings]
CDNAME = "Windows Server 2003 CD-ROM"

UDDI_Tip = "Installs UDDI Services"
UDDI_Desc = "UDDI Services"

UDDI_Web_Tip = "Install the UDDI Services Web server components"
UDDI_Web_Desc = "UDDI Services Web Server Components"

UDDI_Database_Tip = "Install the UDDI Services database components"
UDDI_Database_Desc = "UDDI Services Database Components"

UDDI_Admin_Tip = "Install the UDDI Services administration console"
UDDI_Admin_Desc = "UDDI Services Administration Console"

UDDI_Combo_Tip = "Install the UDDI Services Database and Web Server components"
UDDI_Combo_Desc = "UDDI Services Database and Web Server Components"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\uddimui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui
*/

[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x401
CULTURE=ar
LCID=0401
LCID2=1025
#endif

#if LANGUAGE_ID == 0x402
CULTURE=bg
LCID=0402
LCID2=1026
#endif

#if LANGUAGE_ID == 0x403
CULTURE=ca
LCID=0403
LCID2=1027
#endif

#if LANGUAGE_ID == 0x404
CULTURE=zh-CHT
LCID=0404
LCID2=1028
#endif

#if LANGUAGE_ID == 0x405
CULTURE=cs
LCID=0405
LCID2=1029
#endif

#if LANGUAGE_ID == 0x406
CULTURE=da
LCID=0406
LCID2=1030
#endif

#if LANGUAGE_ID == 0x407
CULTURE=de
LCID=0407
LCID2=1031
#endif

#if LANGUAGE_ID == 0x408
CULTURE=el
LCID=0408
LCID2=1032
#endif

#if LANGUAGE_ID == 0x409
CULTURE=en
LCID=0409
LCID2=1033
#endif

#if LANGUAGE_ID == 0x40b
CULTURE=fi
LCID=040B
LCID2=1035
#endif

#if LANGUAGE_ID == 0x40c
CULTURE=fr
LCID=040C
LCID2=1036
#endif

#if LANGUAGE_ID == 0x40d
CULTURE=he
LCID=040D
LCID2=1037
#endif

#if LANGUAGE_ID == 0x40e
CULTURE=hu
LCID=040E
LCID2=1038
#endif

#if LANGUAGE_ID == 0x410
CULTURE=it
LCID=0410
LCID2=1040
#endif

#if LANGUAGE_ID == 0x411
CULTURE=ja
LCID=0411
LCID2=1041
#endif

#if LANGUAGE_ID == 0x412
CULTURE=ko
LCID=0412
LCID2=1042
#endif

#if LANGUAGE_ID == 0x413
CULTURE=nl
LCID=0413
LCID2=1043
#endif

#if LANGUAGE_ID == 0x414
CULTURE=no
LCID=0414
LCID2=1044
#endif

#if LANGUAGE_ID == 0x415
CULTURE=pl
LCID=0415
LCID2=1045
#endif

#if LANGUAGE_ID == 0x416
CULTURE=pt-BR
LCID=0416
LCID2=1046
#endif

#if LANGUAGE_ID == 0x418
CULTURE=ro
LCID=0418
LCID2=1048
#endif

#if LANGUAGE_ID == 0x419
CULTURE=ru
LCID=0419
LCID2=1049
#endif

#if LANGUAGE_ID == 0x41a
CULTURE=hr
LCID=041A
LCID2=1050
#endif

#if LANGUAGE_ID == 0x41b
CULTURE=sk
LCID=041B
LCID2=1051
#endif

#if LANGUAGE_ID == 0x41d
CULTURE=sv
LCID=041D
LCID2=1053
#endif

#if LANGUAGE_ID == 0x41e
CULTURE=th
LCID=041E
LCID2=1054
#endif

#if LANGUAGE_ID == 0x41f
CULTURE=tr
LCID=041F
LCID2=1055
#endif

#if LANGUAGE_ID == 0x424
CULTURE=sl
LCID=0424
LCID2=1060
#endif

#if LANGUAGE_ID == 0x425
CULTURE=et
LCID=0425
LCID2=1061
#endif

#if LANGUAGE_ID == 0x426
CULTURE=lv
LCID=0426
LCID2=1062
#endif

#if LANGUAGE_ID == 0x427
CULTURE=lt
LCID=0427
LCID2=1063
#endif

#if LANGUAGE_ID == 0xc0a
CULTURE=es
LCID=0C0A
LCID2=3082
#endif

#if LANGUAGE_ID == 0x804
CULTURE=zh-CHS
LCID=0804
LCID2=2052
#endif

#if LANGUAGE_ID == 0x816
CULTURE=pt-PT
LCID=0816
LCID2=2070
#endif
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\tape.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
Msft="Microsoft"
TapeClassName="Tape drives"

StdMfg="(Standard tape drives)"
HP="Hewlett Packard"

4mmdat.DeviceDesc="4 millimeter DAT drive"
miniqic.DeviceDesc="SCSI mini cartridge drive"
quantum_dlttape.DeviceDesc="Quantum DLT tape drive"
exabyte2.DeviceDesc="Exabyte 8500 series (SCSI-2) tape drive"
mammoth.DeviceDesc="Exabyte Mammoth tape drive"
tandqic.DeviceDesc="Tandberg tape drive"
cms.DeviceDesc="HP/CMS QIC 40/80/Tr-1/Tr-3 tape drive"
qic157.DeviceDesc="IDE (QIC-157) tape drive"
hpt4qic.DeviceDesc="Hewlett Packard Colorado T4000 tape drive"
sonyait.DeviceDesc="Sony SDX (AIT) tape drive"
seagate_sonyait.DeviceDesc="Seagate AIT tape drive"
dec_dlttape.DeviceDesc    ="Digital TZ86, TZ87, or DLT tape drive"
tandberg_dlttape.DeviceDesc ="Tandberg DLT tape drive"
ltotape.DeviceDesc ="LTO Tape drive"

DECTZ86_dlttape.DeviceDesc="DEC TZ86 DLT Tape Drive"
DECTZ87_dlttape.DeviceDesc="DEC TZ87 DLT Tape Drive"
DEC2000_dlttape.DeviceDesc="DEC DLT 2000 Tape Drive"
DEC2xxx_dlttape.DeviceDesc="DEC DLT 2xxx Mini Library Drive"
DEC4xxx_dlttape.DeviceDesc="DEC DLT 4xxx Mini Library Drive"
DECTHZ02_dlttape.DeviceDesc="DEC THZ02 DLT Tape Drive"
DECTZ885_dlttape.DeviceDesc="DEC TZ885 Loader Tape Drive"
DECTZ877_dlttape.DeviceDesc="DEC TZ877 Loader Tape Drive"
DECTZ887_dlttape.DeviceDesc="DEC TZ887 Loader Tape Drive"
DECTZ875_dlttape.DeviceDesc="DEC TZ875 Loader Tape Drive"

DECTLZ1_4mmdat.DeviceDesc="DEC TLZ1 Tape Drive (4mm DAT)"
DECTLZ6_4mmdat.DeviceDesc="DEC TLZ6 Tape Drive (4mm DAT)"
DECTLZ06_4mmdat.DeviceDesc="DEC TLZ06 Tape Drive (4mm DAT)"
DECTLZ7_4mmdat.DeviceDesc="DEC TLZ7 Tape Drive (4mm DAT)"
DECTLZ07_4mmdat.DeviceDesc="DEC TLZ07 Tape Drive (4mm DAT)"

DECTZK10_tandqic.DeviceDesc="DEC TZK10 Tape Drive"
DECTZK12_tandqic.DeviceDesc="DEC TZK12 Tape Drive"

DECTZK20_miniqic.DeviceDesc="DEC TZK20 Tape Drive (SCSI Mini Cartridge)"

CPQDLT24_dlttape.DeviceDesc="Compaq 20/40 GB DLT Tape Drive"
CPQ_TZ88_dlttape.DeviceDesc="Compaq 20/40 GB DLT Tape drive (DEC TZ88)"
CPQ_TZ89_dlttape.DeviceDesc="Compaq 35/70 GB DLT Tape drive (DEC TZ89)"
CPQDLT48_dlttape.DeviceDesc="Compaq 40/80 GB DLT Tape Drive"
CPQDLTSP_dlttape.DeviceDesc="Compaq 100/200 GB SDLT Tape Drive"
CPQDLTVS_dlttape.DeviceDesc="Compaq DLT VS Tape Drive"
CPQDLTS3_dlttape.DeviceDesc="Compaq SDLT320 (160/320 GB) Drive"

CPQSDT7k_4mmdat.DeviceDesc="Compaq DDS2 4/8 GB DAT Drive"
CPQTLZ09_4mmdat.DeviceDesc="Compaq DDS2 4/8 GB DAT Drive (DEC TLZ09)"
CPQTLZ9_4mmdat.DeviceDesc="Compaq DDS2 4/8 GB DAT Drive (DEC TLZ9)"
CPQSDT9k_4mmdat.DeviceDesc="Compaq DDS3 12/24 GB DAT Drive"
CPQTSL9k_4mmdat.DeviceDesc="Compaq DDS3 12/24 GB Autoloader (Drive)"
CPQTSL10k_4mmdat.DeviceDesc="Compaq DDS4 20/40 GB Autoloader (Drive)"
CPQTLZ10_4mmdat.DeviceDesc="Compaq DDS3 12/24 GB DAT Drive (DEC TLZ10)"
CPQSDT1k_4mmdat.DeviceDesc="Compaq DDS4 20/40 GB DAT Drive"

CPQTZS20_sonyait.DeviceDesc="Compaq AIT 25 GB Drive (DEC TZS20)"

CPQSDX300_sonyait.DeviceDesc ="Compaq AIT 35 GB drive"
CPQSDX400_sonyait.DeviceDesc ="Compaq AIT 35 GB LVD drive"
CPQSDX500_sonyait.DeviceDesc ="Compaq AIT 50 GB drive"
CPQSDX420_sonyait.DeviceDesc ="Compaq AIT 35 GB IDE drive"
CPQSDX700_sonyait.DeviceDesc ="Compaq AIT 100 GB drive"

CPQTZK11_tandqic.DeviceDesc="Compaq 2/4 GB SLR Drive (DEC TZK11)"

BNCHMARK.DeviceDesc="Benchmark DLT1 Tape Drive"

;*******************************************
;Handy macro substitutions (non-localizable)
SPSVCINST_ASSOCSERVICE = 0x00000002
SERVICE_KERNEL_DRIVER  = 1
SERVICE_DEMAND_START   = 3
SERVICE_ERROR_NORMAL   = 1
REG_EXPAND_SZ          = 0x00020000
REG_DWORD              = 0x00010001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\tsbvcap.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
; Non-Localizable
SERVICE_KERNEL_DRIVER=1
SERVICE_DEMAND_START=3
SERVICE_ERROR_NORMAL=1

; Localizable
Msft=               "Toshiba"
MsftMfg=            "Toshiba"
TSBVCAP.DeviceDesc= "Toshiba TsbVcap, WDM Video Capture"
TSBVCAP.Capture=    "Toshiba TsbVcap Capture"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\umax.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
Msft="Microsoft"
Mfg="UMAX DATA SYSTEMS INC."

DownloadButton = "Download Button Press"

;;
;; NON Localizable strings
;;

Mfg5400 = "UMAX #0160"

USB\VID_1606&PID_2010.DeviceDesc="UMAX AstraCam Digital Camera"
USB\VID_1606&PID_2020.DeviceDesc="UMAX AstraCam 1000 Digital Camera"
USB\VID_1606&PID_2030.DeviceDesc="UMAX AstraCam 1800 Digital Camera"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\umaxpp.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID == 0x409
//USA specific sections
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers

[Strings]
Msft="Microsoft"
Mfg="UMAX Data Systems Inc."
EPP\UMAX____ASTRA_610P_____V.DeviceDesc   = "UMAX Astra 610P"
UMAXPCLS.SvcDesc= "Print Port Scanner Driver"
ppscan.SvcDesc = "Parallel Scanner Driver"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\unattend.txt ===
; Microsoft Windows
; (c) 1994 - 2001 Microsoft Corporation. All rights reserved.
;
; Sample Unattended Setup Answer File
;
; This file contains information about how to automate the installation
; or upgrade of Windows so the Setup program runs without requiring
; user input.  You can find more information in the ref.chm found at
; CD:\support\tools\deploy.cab
;

[Unattended]
Unattendmode = FullUnattended
OemPreinstall = NO
TargetPath = *
Filesystem = LeaveAlone


[GuiUnattended]
; Sets the Timezone to the Pacific Northwest
; Sets the Admin Password to NULL
; Turn AutoLogon ON and login once
TimeZone = "004"
AdminPassword = *
AutoLogon = Yes
AutoLogonCount = 1


[LicenseFilePrintData]
; For Server installs
AutoMode = "PerServer"
AutoUsers = "5"


[GuiRunOnce]
; List the programs that you want to lauch when the machine is logged into for the first time


[Display]
BitsPerPel = 16
XResolution = 800
YResolution = 600
VRefresh = 70


[Networking]


[Identification]
JoinWorkgroup = Workgroup


[UserData]
FullName = "Your User Name"
OrgName = "Your Organization Name"
ComputerName = *
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\unknown.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
MSFT = "Microsoft"

UnknownMfg = "Unknown"

*pnpffff.DeviceDesc = "Unsupported Device"

;*******************************************
; ESS strings

ESS = "ESS Technology, Inc."
PCI\VEN_125D&DEV_1978&CC_0780.DeviceDesc = "Unsupported ESS Modem"

;*******************************************
;Handy macro substitutions (non-localizable)

SPSVCINST_ASSOCSERVICE = 0x00000002
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\txtsetup.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

// This section is for non-FE (chs,cht,kor,jpn) builds. So english, german, ....
#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 && LANGUAGE_ID != 0x412
[nls]
;
; These values are used by setupldr when starting text setup
; and by text setup to initialize nls values in the registry.
;
; For the codepage and UnicodeCasetable entries, the values are
; <filename>,<identifier> pairs. Setupldr uses the first <filename>
; as the file to load for use during text setup.
;
AnsiCodepage     = c_1252.nls,1252
OemCodepage      = c_437.nls,437,c_850.nls,850
MacCodepage      = c_10000.nls,10000
UnicodeCasetable = l_intl.nls,0409
OemHalFont       = vgaoem.fon
DefaultLayout    = 00000409

[Keyboard]
STANDARD = "XT, AT, or Enhanced Keyboard (83-104 keys)",files.i8042,i8042prt
kbdhid   = "USB Keyboard",files.kbdhid,kbdhid
@i:USB      = "USB Keyboard",files.kbdhid,kbdhid
@m:none  = "No Keyboard",files.none,""

[Files.BackupOnUpgrade]

[Files.BackupOnOverwrite]

#elif LANGUAGE_ID == 0x804
//CHS specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both


[nls]
;
; These values are used by setupldr when starting text setup
; and by text setup to initialize nls values in the registry.
;
; For the codepage and UnicodeCasetable entries, the values are
; <filename>,<identifier> pairs. Setupldr uses the first <filename>
; as the file to load for use during text setup.
;
AnsiCodepage     = c_936.nls,936
OemCodepage      = c_936.nls,936
MacCodepage      = c_10008.nls,10008
UnicodeCasetable = l_intl.nls,0804
OemHalFont       = vgaoem.fon
DefaultLayout    = 00000804

[Keyboard]
STANDARD = "XT, ATǿͼ (83-104 )",files.i8042,i8042prt
kbdhid   = "USB Keyboard",files.kbdhid,kbdhid
@i:USB      = "USB Keyboard",files.kbdhid,kbdhid
@m:none  = "No Keyboard",files.none,""

[Files.BackupOnUpgrade]

[Files.BackupOnOverwrite]

[FontListE]
" &  (TrueType)"                 = SIMSUN.TTC
" (TrueType)"                          = SIMHEI.TTF
" (TrueType)"                          = SIMKAI.TTF
" (TrueType)"                        = SIMFANG.TTF

["Keyboard Layout"]
00000804 = "ʽ()"

[Files.KeyboardLayout]
00000804 = KBDUS.DLL,2

[Files.DeleteOnUpgrade]
@@:eudcedit.exe    , 2
@@:eudcedit.cnt    , 2
@@:eudcedit.hlp    , 2
@@:winclock.exe    , 5
@@:cime.cpl        , 2
@@:fetools.inf     , 20
@i:@@:fsvga.sys     , 4

[FileFlags]
app936.fon    = 16
s8514fix.fon  = 16
s8514oem.fon  = 16
s8514sys.fon  = 16
svgafix.fon   = 16
svgasys.fon   = 16
vga936.fon    = 16
xjis.nls      = 16
ksc.nls       = 16
prc.nls       = 16
prcp.nls      = 16
big5.nls      = 16
bopomofo.nls  = 16
c_10008.nls   = 16

[SystemPartitionFiles]
@i:@@:bootfont.bin,"\"
@a:@@:bootfont.bin,"\"

#elif LANGUAGE_ID == 0x404
//CHT specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both

[nls]
;
; These values are used by setupldr when starting text setup
; and by text setup to initialize nls values in the registry.
;
; For the codepage and UnicodeCasetable entries, the values are
; <filename>,<identifier> pairs. Setupldr uses the first <filename>
; as the file to load for use during text setup.
;
AnsiCodepage     = c_950.nls,950
OemCodepage      = c_950.nls,950
MacCodepage      = c_10002.nls,10002
UnicodeCasetable = l_intl.nls,0404
OemHalFont       = vgaoem.fon
DefaultLayout    = 00000404

[Keyboard]
STANDARD = "XT, AT, μWjL (83-104 )",files.i8042,i8042prt
kbdhid   = "USB Keyboard",files.kbdhid,kbdhid
@i:USB      = "USB Keyboard",files.kbdhid,kbdhid
@m:none  = "No Keyboard",files.none,""

[Files.BackupOnUpgrade]

[Files.BackupOnOverwrite]

[FontListE]
"з (TrueType)"                        = KAIU.TTF
"ө & sө (TrueType)"             = MINGLIU.TTC

["Keyboard Layout"]
00000404 = "L ()"

[Files.KeyboardLayout]
00000404 = KBDUS.DLL,2

[Files.DeleteOnUpgrade]
@@:lctool.exe      , 2
@@:lctool.cnt      , 2
@@:lctool.hlp      , 2
@@:uimetool.exe    , 2
@@:uimetool.cnt    , 2
@@:uimetool.hlp    , 2
@@:eudcedit.exe    , 2
@@:eudcedit.cnt    , 2
@@:eudcedit.hlp    , 2
@@:cblocks.exe     , 2
@@:cblocks.cnt     , 2
@@:cblocks.hlp     , 2
@@:chtuconv.exe    , 2
@@:chtuconv.hlp    , 2
@@:imedp.dll       , 2
@@:fsvga.dll       , 2
@@:foncache.dll    , 2
@@:eudcsrv.dll     , 2
@@:userfont.dll    , 2
@@:mingliu.ttf     , 5
@@:mingliu.fot     , 5
@@:ming12.fon      , 5
@@:mingli24.fon    , 5
@@:mingli16.fon    , 5
@@:mingli20.fon    , 5
@@:ming15.fon      , 5
@@:winclock.exe    , 5
@@:cime.cpl        , 2
@@:cblocks.inf     , 20
@@:fetools.inf     , 20
@i:@@:fsvga.sys     , 4


[FileFlags]
app950.fon    = 16
c8514fix.fon  = 16
c8514oem.fon  = 16
c8514sys.fon  = 16
cvgafix.fon   = 16
cvgasys.fon   = 16
vga950.fon    = 16
xjis.nls      = 16
ksc.nls       = 16
prc.nls       = 16
prcp.nls      = 16
big5.nls      = 16
bopomofo.nls  = 16
c_10002.nls   = 16

[SystemPartitionFiles]
@i:@@:bootfont.bin,"\"
@a:@@:bootfont.bin,"\"

#elif LANGUAGE_ID == 0x411
//JPN specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both

[nls]
;
; These values are used by setupldr when starting text setup
; and by text setup to initialize nls values in the registry.
;
; For the codepage and UnicodeCasetable entries, the values are
; <filename>,<identifier> pairs. Setupldr uses the first <filename>
; as the file to load for use during text setup.
;
AnsiCodepage     = c_932.nls,932
OemCodepage      = c_932.nls,932
MacCodepage      = c_10001.nls,10001
UnicodeCasetable = l_intl.nls,0411
OemHalFont       = vgaoem.fon
@@!n:DefaultLayout    = E0010411
@n:DefaultLayout    = E0010411,KBDNEC.DLL

[Keyboard]
@@:PCAT_106KEY = "106 Japanese Keyboard (Including USB)" ,files.kbd106,i8042prt, KBD106.DLL, 7, 2, PCAT_106KEY
@@:STANDARD = "101 English Keyboard (Including USB)" ,files.kbd101,i8042prt,KBD101.DLL, 7, 0, PCAT_101KEY
@@:LAYOUT98 = "NEC 98 Layout USB Keyboard",files.LAYOUT98,i8042prt,KBDNEC.DLL, 7, 2, LAYOUT98
@*:@@!n:AX_105KEY = "AX { L[{[h" ,files.kbdax2,i8042prt, KBDAX2.DLL, 7, 1, AX_105KEY
@*:@@!n:IBM_002_106KEY = "IBM-5576 002/003 L[{[h" ,files.kbdibm02,i8042prt,KBDIBM02.DLL, 7, 3, IBM_002_106KEY
kbdhid   = "USB Keyboard",files.kbdhid,kbdhid
@i:USB      = "USB Keyboard",files.kbdhid,kbdhid
@m:none  = "No Keyboard",files.none,""

[Files.BackupOnUpgrade]

[Files.BackupOnOverwrite]

[FontListE]
"lr SVbN & lr oSVbN & MS UI Gothic (TrueType)" = MSGOTHIC.TTC
"lr  & lr o (TrueType)"         = MSMINCHO.TTC

["Keyboard Layout"]
00000411 = "{"
E0010411 = "{ (MS-IME2002)"

[Files.KeyboardLayout]
00000411 = KBDJPN.DLL,2
E0010411 = KBDJPN.DLL,2

[files.kbd101]
kbd101.dll,2
i8042prt.sys,4

[files.kbd106]
kbd106.dll,2
i8042prt.sys,4

[files.kbdax2]
kbdax2.dll,2
i8042prt.sys,4

[files.kbdibm02]
kbdibm02.dll,2
i8042prt.sys,4

[files.LAYOUT98]
kbdnec.dll,2
i8042prt.sys,4

[Files.DeleteOnUpgrade]
; from NT 3.1
@@:imesel.cpl        , 2
@@:gaijiedt.exe      , 2
@@:gaijiedt.hlp      , 2
@@:fsvga.dll         , 2
@@:foncache.dll      , 2
@@:eudcsrv.dll       , 2
@@:userfont.dll      , 2
@@:j13fix.fon        , 5
@@:j13oem.fon        , 5
@@:j13sys.fon        , 5
@@:j18fix.fon        , 5
@@:j18oem.fon        , 5
@@:j18sys.fon        , 5
@@:j22fix.fon        , 5
@@:j22oem.fon        , 5
@@:j22sys.fon        , 5
@@:j27fix.fon        , 5
@@:j27oem.fon        , 5
@@:j27sys.fon        , 5
@@:msgothic.ttf      , 5
@@:msgothic.fot      , 5
@@:msmincho.ttf      , 5
@@:msmincho.fot      , 5
; from NT 3.51
@@:eudcedit.exe      , 2
@@:eudcedit.hlp      , 2
@@:eudcedit.cnt      , 2
@@:imedp.dll         , 2
; from NT 4.0
@@:vgasysj.fon       , 22
@@:vgafixj.fon       , 22
@@:8514sysj.fon      , 22
@@:8514fixj.fon      , 22
@@:8514oemj.fon      , 22
@@:parps55.sys       , 4
@@:parcpl.cpl        , 2
@i:@@:oak611.sys        , 4
@i:@@:oak611.dll        , 2
@i:@@:neckbrep.sys      , 4
@i:@@:usbkbdwm.sys      , 4

@i:@@:fsvga.sys         , 4

[HardwareIdsDatabase]
*PNP0320 = "i8042prt",{4D36E96B-E325-11CE-BFC1-08002BE10318}    ; keyboard class

[FileFlags]
app932.fon    = 16
j8514fix.fon  = 16
j8514oem.fon  = 16
j8514sys.fon  = 16
jsmalle.fon   = 16
jsmallf.fon   = 16
jvgafix.fon   = 16
jvgasys.fon   = 16
vga932.fon    = 16
xjis.nls      = 16
ksc.nls       = 16
prc.nls       = 16
prcp.nls      = 16
big5.nls      = 16
bopomofo.nls  = 16
c_10001.nls   = 16

; IMJP8.1 WOW64 and Native64
@m:imjpch.dic   = 16
@m:imjpln.dic   = 16
@m:imjpnm.dic   = 16
@m:imjpsb.dic   = 16
@m:imjpst.dic   = 16
@m:imjptk.dic   = 16
@m:imjpzp.dic   = 16
@m:imjpgn.grm   = 16

[SystemPartitionFiles]
@i:@@:bootfont.bin,"\"
@a:@@:bootfont.bin,"\"

[HiveInfs.Upgrade]
AddReg = hivesft.inf,AddRegUpg

#elif LANGUAGE_ID == 0x412
//KOR specific sections
@*: Lines marked with @w: are for workstation only
@*: Lines marked with @s: are for server only
@*: Lines marked with @@: are for both

[nls]
;
; These values are used by setupldr when starting text setup
; and by text setup to initialize nls values in the registry.
;
; For the codepage and UnicodeCasetable entries, the values are
; <filename>,<identifier> pairs. Setupldr uses the first <filename>
; as the file to load for use during text setup.
;
AnsiCodepage     = c_949.nls,949
OemCodepage      = c_949.nls,949
MacCodepage      = c_10003.nls,10003
UnicodeCasetable = l_intl.nls,0412
OemHalFont       = vgaoem.fon
DefaultLayout    = E0010412

[Keyboard]
STANDARD    = "101 Ű/MS Natural Keyboard( 1)", files.kbd101a,i8042prt,KBD101A.DLL, 8, 3, PCAT_101AKEY
"101B TYPE" = "101 Ű/MS Natural Keyboard( 2)", files.kbd101b,i8042prt,KBD101B.DLL, 8, 4, PCAT_101BKEY
"101C TYPE" = "101 Ű/MS Natural Keyboard( 3)", files.kbd101c,i8042prt,KBD101C.DLL, 8, 5, PCAT_101CKEY
"103 TYPE"  = "KSC 103 Ű/MS Natural Keyboard"        , files.kbd103 ,i8042prt,KBD103.DLL, 8, 6,  PCAT_103KEY
kbdhid   = "USB Keyboard",files.kbdhid,kbdhid
@i:USB      = "USB Keyboard",files.kbdhid,kbdhid
@m:none  = "No Keyboard",files.none,""

[Files.BackupOnUpgrade]
config.nt     , 2 , config.bak


[FontListE]
" & ü &  & ü (TrueType)" = GULIM.TTC
" & ü & ü & üü (TrueType)" = BATANG.TTC


["Keyboard Layout"]
00000412 = "ѱ"
E0010412 = "ѱ Է± (IME 2000)"

[Files.KeyboardLayout]
00000412 = KBDKOR.DLL,2
E0010412 = KBDKOR.DLL,2

[files.kbd101a]
kbd101a.dll,2
i8042prt.sys,4

[files.kbd101b]
kbd101b.dll,2
i8042prt.sys,4

[files.kbd101c]
kbd101c.dll,2
i8042prt.sys,4

[files.kbd103]
kbd103.dll,2
i8042prt.sys,4

[Files.DeleteOnUpgrade]
@@:eudcedit.exe      , 2
@@:eudcedit.hlp      , 2
@@:eudcedit.cnt      , 2
@@:fsvga.dll         , 2
@@:foncache.dll      , 2
@@:eudcsrv.dll       , 2
@@:userfont.dll      , 2
@@:gulim.ttf         , 5
@@:gulim.fot         , 5
@@:batang.ttf        , 5
@@:batang.fot        , 5
@@:dotum.ttf         , 5
@@:dotum.fot         , 5
@@:gungsuh.ttf       , 5
@@:gungsuh.fot       , 5
@@:msime95k.ime      , 2

@i:@@:fsvga.sys     , 4

[FileFlags]
app949.fon   = 16
h8514fix.fon = 16
h8514oem.fon = 16
h8514sys.fon = 16
hvgafix.fon  = 16
hvgasys.fon  = 16
vga949.fon   = 16
xjis.nls      = 16
ksc.nls       = 16
prc.nls       = 16
prcp.nls      = 16
big5.nls      = 16
bopomofo.nls  = 16
c_10003.nls   = 16
c_1361.nls    = 16

[SystemPartitionFiles]
@i:@@:bootfont.bin,"\"
@a:@@:bootfont.bin,"\"

#endif


// This section is for FR,IT,ES,NL,SV,BR,NO,DA,FI,RU,HU,PL,CS,PT,TR,EL,GER
// BUG 434003
#if LANGUAGE_ID == 0x40C || LANGUAGE_ID == 0x410 || LANGUAGE_ID == 0xC0A || LANGUAGE_ID == 0x413 || LANGUAGE_ID == 0x41D || LANGUAGE_ID == 0x416 || LANGUAGE_ID == 0x414 || LANGUAGE_ID == 0x406 || LANGUAGE_ID == 0x40b || LANGUAGE_ID == 0x419 || LANGUAGE_ID == 0x40e || LANGUAGE_ID == 0x415 || LANGUAGE_ID == 0x405 || LANGUAGE_ID == 0x816 || LANGUAGE_ID == 0x41F || LANGUAGE_ID == 0x408 || LANGUAGE_ID == 0x407

[SystemPartitionFiles]
@i:@@:bootfont.bin,"\"
@a:@@:bootfont.bin,"\"

#endif

;
; This section provides information about hard disk drivers.
;
; The left hand side is a name in the \Driver directory in the NT
; \Driver object namespace.
;
; Value #0 is a format string used in creating the descriptive name
; of the disk.
;
[DiskDriverMap]
abiosdsk = "%1!u! MB Micro Channel Disk"
atdisk   = "%1!u! MB IDE/ESDI Disk"
disk     = "%1!u! MB Disk %2!u! at Id %3!u! on bus %4!u! on %5"

[ScsiClass]
cdrom  = "SCSI CD-ROM"
floppy = "SCSI Floppy Disk"
disk   = "SCSI Disk"
ramdisk = "RAM Disk Driver"

[FileSystems]
fat      = "FAT File System"
ntfs     = "Windows NT File System (NTFS)"
ksecdd   = "Kernel Security Provider"

[FloppyDrivers]
floppy = "Standard Floppy Disk"
fat    = "FAT File System"

[CdRomDrivers]
cdfs = "CD-ROM File System"

[MouseDrivers]
mouclass = "Mouse Class Driver"
mouhid = "HID Mouse Filter Driver"

;
;  Font list
;
;  Setup will create an entry in the [Fonts] section of win.ini
;  for each of the following fonts.  (Fonts copied during GUI setup
;  have entries in [FontList] in a gui inf file -- see eng_ansi.txt.)
;  Note that the [fonts] section of win.ini is shadowed into
;  HEKY_LOCAL_MACHINE\software\Microsoft\Windows NT\CurrentVersion\Fonts.
;
[FontListE]
"Courier 10,12,15 (VGA res)"               = COURE.FON
"MS Sans Serif 8,10,12,14,18,24 (VGA res)" = SSERIFE.FON
"MS Serif 8,10,12,14,18,24 (VGA res)"      = SERIFE.FON
"Tahoma (TrueType)"                        = TAHOMA.TTF
"Microsoft Sans Serif (TrueType)"          = MICROSS.TTF

@*:
@*: If add a keyboard layout dll description here make sure
@*: that you add the layout dll file name in [CmdConsFiles]
@*: section in dosnet.inf also, so that when command console
@*: is installed on the harddisk that particular layout file
@*: can be copied
@*:
["Keyboard Layout"]
0000041C = "Albanian"
00000423 = "Belarusian"
00000813 = "Belgian Dutch"
0000080C = "Belgian French"
00000416 = "Brazilian (ABNT)"
00000402 = "Bulgarian"
00010402 = "Bulgarian Latin"
00001009 = "Canadian English (Multilingual)"
00000C0C = "Canadian French"
00010C0C = "Canadian French (Multilingual)"
0000041a = "Croatian"
00000405 = "Czech"
00010405 = "Czech (QWERTY)"
00000406 = "Danish"
00000413 = "Dutch"
00000425 = "Estonian"
0000040B = "Finnish"
0000040C = "French"
00000407 = "German"
00010407 = "German (IBM)"
00000408 = "Greek"
00050408 = "Greek Latin"
00010408 = "Greek (220)"
00030408 = "Greek (220) Latin"
00020408 = "Greek (319)"
00040408 = "Greek (319) Latin"
0000040E = "Hungarian"
0001040E = "Hungarian 101-key"
0000040F = "Icelandic"
00001809 = "Irish"
00000410 = "Italian"
00010410 = "Italian (142)"
0000080A = "Latin American"
00000426 = "Latvian"
00010426 = "Latvian (QWERTY)"
00000427 = "Lithuanian"
00000414 = "Norwegian"
00000415 = "Polish (Programmers)"
00010415 = "Polish (214)"
00000816 = "Portuguese"
00000418 = "Romanian"
00000419 = "Russian"
00010419 = "Russian (Typewriter)"
00000C1A = "Serbian Cyrillic"
00010C1A = "Serbian Latin"
0000041B = "Slovak"
0001041B = "Slovak (QWERTY)"
00000424 = "Slovenian"
0000040A = "Spanish"
0001040A = "Spanish variation"
0000041D = "Swedish"
0000100C = "Swiss French"
00000807 = "Swiss German"
0001041F = "Turkish F"
0000041F = "Turkish Q"
00000422 = "Ukrainian"
00000809 = "United Kingdom"
00000409 = "US"
00010409 = "US-Dvorak"
00030409 = "US-Dvorak for left hand"
00040409 = "US-Dvorak for right hand"
00020409 = "US-International"

[DiskDrivers]
dmboot   = "Dynamic Volume Support (dmboot)"
i2omgmt  = "Intelligent I/O Support Driver"

[InputDevicesSupport]
usbehci  = "Enhanced Host Controller",files.usbehci,usbehci
usbohci  = "Open Host Controller",files.usbohci,usbohci
usbuhci  = "Universal Host Controller",files.usbuhci,usbuhci
usbhub   = "Generic USB Hub Driver",files.usbhub,usbhub
hidusb   = "Human Interface Parser",files.hidusb,hidusb
serial   = "Serial Port Driver",files.none,serial
serenum  = "Serial Port Enumerator",files.none,serenum
usbstor  = "USB Storage Class Driver",files.usbstor,usbstor
usbccgp  = "USB Generic Parent Driver",files.usbccgp,usbccgp
@i:wd    = "Microsoft Watchdog Timer Driver",files.wd,wd

[SCSI]
@i:sparrow  = "Adaptec AHA-151X/AHA-152X/AIC-6X60 SCSI Adapter"
@i:aha154x  = "Adaptec AHA-154X/AHA-164X SCSI Host Adapter"
aic78xx  = "Adaptec AHA-294X/AHA-394X/AIC-78XX SCSI Controller"
aic78u2  = "Adaptec AHA-294XU2/AIC-7890 SCSI Controller"
adpu160m = "Adaptec AIC-789X/AHA-3960 Ultra160 PCI SCSI Card"
adpu320 = "Adaptec Ultra320 Family SCSI Controller"
afcnt = "Agilent HHBA-510x PCI Fibre Channel Controller"
dpti2o = "Adaptec 2000S/3000S Ultra160 SCSI RAID Controller"
@i:asc3550  = "Advansys 3550 Ultra Wide SCSI Host Adapter"
@i:asc3350p = "Advansys ABP460 PCMCIA SCSI Host Adapter"
@i:abp480n5 = "Advansys ABP480 CardBus SCSI Host Adapter"
@i:asc      = "Advansys SCSI Host Adapter"
@i:amsint   = "AMD PCI SCSI Controller/Ethernet Adapter"
mraid35x = "AMI MegaRaid RAID Controller"
@i:cpqarray = "Compaq Drive Array"
cpqfcalm = "Compaq Fibre Channel Host Controller"
cpqarry2 = "Compaq Smart Array Controller"
cpqcissm = "Compaq Smart Array 53xx-series Controller"
lp6nds35 = "Emulex LP6000 Fibre Channel Host Adapters"
@i:cd20xrnt = "IBM Portable PCMCIA CD-ROM Drive"
@i:ipsraidn = "IBM ServeRAID Adapter"
nfrd960     = "IBM ServeRAID Adapter"
@i:i2omp    = "Intelligent I/O Controller"
@i:iirsp   = "Intel RAID Adapter"
atapi    = "IDE CD-ROM (ATAPI 1.2)/PCI IDE Controller"
cbidf2k = "CardBus/PCMCIA IDE Miniport Driver"
@i:ini910u  = "Initio Ultra SCSI Host Adapter"
@i:dac2w2k = "Mylex EXR2000,3000/AR160,170,352 Raid Controllers"
dac960nt = "Mylex DAC960/Digital SWXCR-Ex Raid Controller"
@i:dellcerc = "DELL CERC ATA 100/4ch RAID Controller"
@i:ultra  = "Promise Technology Inc. Ultra IDE Controller"
@i:hpt3xx = "HighPoint RAID Controller"
ql1240   = "QLogic ISP 1240 SCSI Host Adapter"
ql10wnt  = "QLogic PCI SCSI Host Adapter"
ql1080   = "Qlogic QLA1080, 64 bit PCI LVD SCSI HBA"
ql1280   = "Qlogic QLA1280, 64 bit PCI LVD SCSI HBA"
ql12160  = "QLogic QLA12160, 64 bit PCI DUAL 160M SCSI HBA"
ql2100   =  "QLogic QLA2000/QLA2100 PCI Fibre Channel Adapter"
ql2200   =  "QLogic QLA2200 PCI Fibre Channel Adapter"
ql2300   =  "QLogic QLA2300 PCI Fibre Channel Adapter"
sym_hi   = "LSI Logic C896 PCI SCSI Host Adapter"
sym_u3   = "LSI Logic C1010 PCI SCSI Host Adapter"
@i:symc810  = "LSI Logic C8100 PCI SCSI Host Adapter"
symc8xx  = "LSI Logic C8xx PCI SCSI Host Adapter"
symmpi   = "LSI Logic PCI Fibre Channel/LSI Logic PCI-X Ultra320 SCSI Host Adapter"
hpn      = "Hewlett Packard NetRAID-4M RAID Controller"
perc2    = "Dell PERC 2/3 RAID Controller"
perc2gat = "Dell PERC 2/3 RAID Controller (Gatling)"

[BootBusExtenders]
pci      = "PCI Bus Driver",files.pci,pci
acpi     = "ACPI Plug & Play Bus Driver",files.acpi,acpi
isapnp   = "ISA Plug & Play Bus Driver",files.isapnp,isapnp
acpiec   = "ACPI Embedded Controller Driver",files.none,acpiec
ohci1394 = "IEEE 1394 Bus OHCI Compliant Port Driver",files.ohci1394,ohci1394

[BusExtenders]
pcmcia   = "PCMCIA Support",files.pcmcia,pcmcia
pciide   = "PCI IDE Bus Driver",files.pciide,pciide
intelide = "Intel IDE BUS Driver",files.intelide,intelide
viaide   = "VIA IDE Bus Driver",files.viaide,viaide
cmdide   = "CMD IDE Bus Driver",files.cmdide,cmdide
toside   = "Toshiba IDE Bus Driver",files.toside,toside
aliide   = "ALI IDE Bus Driver",files.aliide,aliide
mountmgr = "Mount Point Manager",files.none,mountmgr
ftdisk   = "Volume Manager",files.none,ftdisk
partmgr  = "Partition Manager",files.none,partmgr
volsnap  = "Volume Shadow Copy Manager",files.none,volsnap
fdc      = "Floppy Drive Support",files.none,fdc
dmload   = "Dynamic Volume Support (dmload)",files.none,dmload
dmio     = "Dynamic Volume Support (dmio)",files.none,dmio
sbp2port = "IEEE 1394 SBP2 Storage Port Driver", files.sbp2port,sbp2port

[Computer]
@i:acpiapic_mp = "ACPI Multiprocessor PC",files.none
@i:acpiapic_up = "ACPI Uniprocessor PC",files.none
@a:acpiapic_mp = "ACPI Multiprocessor x86-64",files.none
@a:acpiapic_up = "ACPI Uniprocessor x86-64",files.none
@i:acpipic_up  = "Advanced Configuration and Power Interface (ACPI) PC",files.none
@i:mps_up      = "MPS Uniprocessor PC",files.none
@i:mps_mp      = "MPS Multiprocessor PC",files.none
@i:e_isa_up    = "Standard PC",files.none

@m:acpipic_up  = "ACPI UniProcessor ia64",files.none
@m:acpipic_mp  = "ACPI Multiprocessor ia64",files.none

[Display]
@i:forcevga = "Standard VGA (640x480, 16 colors)",files.none
@i:vga      = "Auto Detect",files.none
@@!i:vga      = "VGA Compatible",files.none
@i:sglfb      = "Cobalt",files.sglfb

[Mouse]
@i:msps2 = "Microsoft Mouse Port Mouse (includes BallPoint)",files.i8042,i8042prt
@i:lgps2 = "Logitech Mouse Port Mouse",files.i8042,i8042prt
@i:msbpser = "Microsoft BallPoint Serial Mouse",files.sermouse,sermouse
@i:lgser = "Logitech Serial Mouse",files.sermouse,sermouse
@@:none = "No Mouse or Other Pointing Device",files.none,""
@@:mouhid = "USB Mouse",files.mouhid,mouhid
@@:msser = "Microsoft Serial Mouse",files.sermouse,sermouse
@@:ps2 = "Mouse Port Mouse",files.i8042,i8042prt
@@:sermouse = "Serial Mouse",files.sermouse,sermouse
@i:USB = "USB Mouse",files.mouhid,mouhid

@*: COMPAT: we purposely put two strings section in txtsetup.sif
@*: The problem is that setupapi only reads strings from the first
@*: strings section it encounters.  Since older versions of the OS
@*: accidentally had multiple Strings sections in the past, we make
@*: Whistler have multiple strings sections so that older applications
@*: (like win2k risetup) can read this file without requiring any change
@*: The only string that risetup specifically cares about is whatever
@*: LoadIdentifier points at, so you can probably safely add new strings
@*: to this section.
@*:
@*:
@*: The first strings section comes another one of the files that
@*: builds txtsetup.sif


// String section below for localizers
[Strings]
@@!m:@w!p:wks_id   = "Microsoft Windows XP Professional"
@a:@w!p:wks_id     = "Windows XP 64-Bit 2003"
@m:@w!p:wks_id     = "Windows XP 64-Bit 2003"
@@:@p:wks_id       = "Microsoft Windows XP Home Edition"
@@:@s!e!b!l:srv_id = "Windows Server 2003, Standard"
@@:@e!d:srv_id     = "Windows Server 2003, Enterprise"
@@:@d:srv_id       = "Windows Server 2003, Datacenter"
@@:@b:srv_id       = "Windows Server 2003, Web"
@@:@l:srv_id       = "Windows Server 2003 for Small Business Server"
@@!m:@w!p:wks_id_vga = "Microsoft Windows XP Professional [VGA mode]"
@a:@w!p:wks_id_vga = "Windows XP 64-Bit 2003 [VGA mode]"
@m:@w!p:wks_id_vga = "Windows XP 64-Bit 2003 [VGA mode]"
@@:@p:wks_id_vga   = "Microsoft Windows XP Home Edition [VGA mode]"
@@:@s!e!b!l:srv_id_vga = "Windows Server 2003, Standard [VGA mode]"
@@:@e!d:srv_id_vga = "Windows Server 2003, Enterprise [VGA mode]"
@@:@d:srv_id_vga   = "Windows Server 2003, Datacenter [VGA mode]"
@@:@b:srv_id_vga   = "Windows Server 2003, Web [VGA mode]"
@@:@l:srv_id_vga   = "Windows Server 2003 for Small Business Server [VGA mode]"
@@:@w:cancel_id = "Cancel Windows XP Setup"
@@:@w:9x_id = "Microsoft Windows"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\update.txt ===
;
;
;   update.txt
;
;
;   This file along with update.inx are used to constuct the
;   update.inf and hotfix.inf files used by service pack
;   and hotfix install (update.exe).
;
;   The sections contained in this file are merged with the
;   update.inx file using the following utilities in order.
;
;       * C Precompiler processes and #if conditions
;       * Infmerge.exe to insert the sections into update.inf
;       * Prodfilt.exe to process platform and type conditions
;
;
;   The prodfilt utility uses the following syntax and
;   order of precedence is:
;
;       Platform            = @i: - i386
;                           = @m: - ia64
;                           = @a: - alpha
;                           = @x: - axp64
;                           = @n: - NEC98
;
;       Hotfix/ServicePack  = @h: - Hotfix
;                           = @u: - Service Pack
;
;
;       @@ - represents any
;
;
;   Localization Considerations:
;
;       - No blanks immediately following @@:@u: and @@:@h:
;       - No blanks lines with @@:@u: and @@:@h: are permitted
;       - Move all sections to precede the [Strings] section
;       - No indents before macro IDs
;
;



;
;  This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
;
#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
@@:@u:[Product.Add.Reg]
@@:@u:HKLM,"SYSTEM\CurrentControlSet\Services\HTTP\Parameters", "EnableDBCS", 0x00010003, 0
#endif

#if LANGUAGE_ID == 0x411
@m:@u:[Product.Add.Reg]
@m:@u:HKLM,"SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run","IMJPMIG8.1",,"""%10%\IME (x86)\IMJP8_1\IMJPMIG.EXE"" /Spoil /RemAdvDef /Migration32"
#endif


[Strings]

LangTypeValue           = 0x09
WSEDIR                  = "1033"
TSCLIENTDIR             = "Terminal Services Client"
PORTUGAL                = "Portugal"
FALKLANDS               = "Falkland Islands"

@*:  These are used for constructing directory names used in build 2600.
@*:  They should be correct as is, and shouldn't be modified.
LCID                    = "0409"
W32ID                   = "0009"
ACCESSDIR               = "accessories"


@@:@u:SP_TITLE                = "Windows Server 2003 Service Pack 1"
@@:@u:SP_SHORT_TITLE          = "Service Pack 1"
@@:@u:SP_KB_NUMBER            = "%SP_SHORT_TITLE%"
@@:@u:ServicePackSourceFiles  = "Windows Server 2003 Service Pack 1 Source Files"
@@:@u:USER_NAME               = "User Name:"
@@:@u:PASSWORD                = "Password:"
@@:@u:DOMAIN                  = "Domain:"
@@:@u:CREDENTIALS             = "The credentials used for Dynamic DNS registration:"



@@:@h:ServicePackSourceFiles  = "Windows Server 2003 Hotfix Source Files"
@@:@h:SP_SHORT_TITLE          = "%QNUM%"
@@:@h:SP_TITLE                = "Windows Server 2003 Hotfix Package [See %QNUM% for more information]"
@@:@h:SERVICE_PACK_NUMBER     = 1


;
; AutoUpdate
;
@*:  Needs to be localized exactly as the task scheduler job created by CUN
WUCUN_TS_JOBFILE        = "windows critical update notification.job"

BITS_DISPLAY_NAME       = "Background Intelligent Transfer Service"
BITS_DESCRIPTION        = "Transfers files in the background using idle network bandwidth. If the service is stopped, features such as Windows Update, and MSN Explorer will be unable to automatically download programs and other information. If this service is disabled, any services that explicitly depend on it may fail to transfer files if they do not have a fail safe mechanism to transfer files directly through IE in case BITS has been disabled."
BITS_CLASS_NAME         = "Background Intelligent Transfer Control Class 1.0"
LEGACY_BITS_CLASS_NAME  = "Legacy Background Intelligent Transfer Control Class"
AU_DESCRIPTION          = "Enables the download and installation of critical Windows updates. If the service is disabled, the operating system can be manually updated at the Windows Update Web site."
AU_DISPLAY_NAME         = "Automatic Updates"

@*:
@*:  Update registry with changes between XP Gold (2600) and XP SP1 (current builds)
@*:
@*:  Needs to be localized exactly as hive???.txt
@@:@u:MICROSOFT_PASSPORT_CONFIG_FILE="Microsoft Passport configuration file"
@*:
@*:  hivesys.inf
@*:
@@:@u:MOUNTMGR_SERVICE        = "Mount Point Manager"
@@:@u:PARTMGR_SERVICE         = "Partition Manager"
@@:@u:VGASAVE_DESCRIPTION     = "Controls the VGA display adapter to provide basic display capabilities."
@@:@u:VGASAVE_DISPLAYNAME     = "VGA Display Controller."

@*:
@*:  hivesft.inf
@*:
@@:@u:GMT_MINUS_07_B_DAYLIGHT = "Mexico Daylight Time 2"
@@:@u:GMT_MINUS_07_B_STANDARD = "Mexico Standard Time 2"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\usb.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
Msft="Microsoft"
USBClassName="Universal Serial Bus controllers"

StandardHub.SvcDesc="Microsoft USB Standard Hub Driver"
GenericParent.SvcDesc="Microsoft USB Generic Parent Driver"

Microsoft.Mfg="Microsoft"
USB\VID_045E&PID_001C.DeviceDesc="Microsoft Integrated USB Hub"
USB\VID_045E&PID_0014.DeviceDesc="Microsoft Digital Sound System Composite Device"
USB\VID_045E&PID_001D.DeviceDesc="Microsoft Natural Keyboard Pro Composite Device"
USB\VID_045E&PID_002B.DeviceDesc="Microsoft Internet Keyboard Pro Composite Device"
USB\VID_045E&PID_002D.DeviceDesc="Microsoft Internet Keyboard Composite Device"
USB\VID_045E&PID_002F.DeviceDesc="Microsoft Integrated USB Hub"
USB\VID_045E&PID_0048.DeviceDesc="Microsoft Office Keyboard Composite Device"
USB\VID_045E&PID_005C.DeviceDesc="Microsoft Office Keyboard Composite Device (106/109)"

Generic.Mfg="(Standard USB Host Controller)"
USB\COMPOSITE.DeviceDesc="USB Composite Device"

FTA.Mfg="Fujitsu"
USB\VID_0430&PID_36BA.DeviceDesc="Fujitsu USB Bus Powered Hub"
USB\VID_0430&PID_0002.DeviceDesc="Fujitsu USB Composite Device"

Intel.Mfg="Intel"
USB\VID_8086&PID_9303.DeviceDesc="Intel 8x930Hx USB Hub"
USB\VID_042B&PID_9316.DeviceDesc="Intel 8x931Hx Customer Hub"

Kawatsu.Mfg="KC Technology"
USB\VID_050F&PID_0001.DeviceDesc="KC Technology USB Hub"

Cherry.Mfg="CHERRY GmbH"
USB\VID_046A&PID_0003.DeviceDesc="Cherry GmbH USB-Hub"

Altec.Mfg="Altec Lansing"
USB\VID_04D2&PID_FF47.DeviceDesc="Altec Lansing Composite USB Audio Device"
USB\VID_04D2&PID_FF49.DeviceDesc="Altec Lansing Composite USB Audio Device"
USB\VID_04D2&PID_0070.DeviceDesc="Altec Lansing Composite USB Audio Device"

Telex.Mfg="Telex"
USB\VID_04A1&PID_FFF0.DeviceDesc="Telex Composite USB Device"
USB\VID_0562&PID_0000.DeviceDesc="Telex Composite USB Device"

Dallas.Mfg="Dallas Semiconductor"
USB\VID_04FA&PID_4201.DeviceDesc="Generic USB Composite Device"

LabTec.Mfg="Labtec"
USB\VID_0672&PID_1041.DeviceDesc="Labtec USB Composite Device"

NMB.Mfg="NMB"
USB\VID_0446&PID_6781.DeviceDesc="NMB Composite USB Device"

STSL.Mfg="STSL"
USB\VID_05FA&PID_3303.DeviceDesc="STSL Composite USB Device"

SUPGERGATE.Mfg="SUPGERGATE"
USB\VID_05d5&PID_6782.DeviceDesc="SUPGERGATE Composite USB Device"

Iiyama.Mfg="Iiyama"
USB\VID_04E1&PID_0201.DeviceDesc="Iiyama USB Hub"

Samsung.Mfg="Samsung"
USB\VID_0419&PID_8001.DeviceDesc="Samsung USB Hub"
USB\VID_055D&PID_8001.DeviceDesc="Samsung E.M. USB Hub"

CTX.Mfg="CTX"
USB\VID_0698&PID_9999.DeviceDesc="CTX USB Hub"

LiteOn.Mfg="LiteOn"
USB\VID_04CA&PID_9304.DeviceDesc="Lite On USB Hub"

Winbond.Mfg="Winbond"
USB\VID_0416&PID_0101.DeviceDesc="Winbond USB Hub"

MultiVideoLabs.Mfg="MultiVideo Labs"
USB\VID_04a8&PID_0101.DeviceDesc="MultiVideo Labs USB Hub"

Sand.Mfg="Sand"
USB\VID_0405&PID_0000.DeviceDesc="Sand USB Hub"

TI.Mfg="TI"
USB\VID_0451&PID_1446.DeviceDesc="General Purpose USB Hub"

CATC.Mfg="Computer Access Technology Corporation"
USB\VID_0423&PID_1237.DeviceDesc="Computer Access Technology Corporation USB Hub"

Philips.Mfg="Philips"
USB\VID_0471&PID_0201.DeviceDesc="Philips USB Hub"
USB\VID_0471&PID_0101.DeviceDesc="Philips Composite Speakers"
USB\VID_0471&PID_0601.DeviceDesc="Philips Composite USB Device"
USB\VID_0471&PID_0402.DeviceDesc="Philips Semiconductors CICT Composite USB Device"
USB\VID_0471&PID_0700.DeviceDesc="Philips Semiconductors CICT USB Hub"
USB\VID_0471&PID_0302.DeviceDesc="Philips Composite Video Camera"
USB\VID_0471&PID_0303.DeviceDesc="Philips Composite USB Device"
USB\VID_0471&PID_0307.DeviceDesc="Philips Composite USB Device"
USB\VID_0471&PID_0308.DeviceDesc="Philips Composite USB Device"
USB\VID_0471&PID_030C.DeviceDesc="Philips Composite USB Device"
USB\VID_0471&PID_0310.DeviceDesc="Philips Composite USB Device"
USB\VID_0471&PID_0311.DeviceDesc="Philips Composite USB Device"
USB\VID_0471&PID_0312.DeviceDesc="Philips Composite USB Device"

NEC.Mfg="NEC"
PCI\VEN_1033&DEV_0035&Rev_01.DeviceDesc="Unsupported NEC PCI to USB Open Host Controller"
PCI\VEN_1033&DEV_0035&SUBSYS_00011179&REV_01.DeviceDesc="Unsupported NEC PCI to USB Open Host Controller"
USB\VID_0409&PID_55AA.DeviceDesc="NEC USB Hub"
USB\VID_0409&PID_8010.DeviceDesc="NEC Intellibase USB Hub"
USB\VID_0409&PID_8011.DeviceDesc="NEC Intellibase USB Hub"
USB\VID_0409&PID_0014.DeviceDesc="NEC Composite USB Device"
USB\VID_0409&PID_0011.DeviceDesc="NEC Composite USB Device"
USB\VID_0409&PID_0203.DeviceDesc="NEC Composite USB Device"

CMD.Mfg="CMD Technology"
PCI\VEN_1095&DEV_0670&SUBSYS_06701095&REV_04.DeviceDesc="Rev 04 CMD USB controller not supported by Microsoft"
PCI\VEN_1095&DEV_0670&REV_04.DeviceDesc="Rev 04 CMD USB controller not supported by Microsoft"

NatSemi.Mfg="National Semiconductor"
USB\VID_0400&PID_1237.DeviceDesc="National Semiconductor USB Hub"

ACER.Mfg="ACER Labs Inc."
USB\VID_04A5&PID_0003.DeviceDesc="API Composite USB Device"

Sony.Mfg="SONY Corporation"
USB\VID_054C&PID_0001.DeviceDesc="Sony USB HUB"
USB\VID_054C&PID_0002.DeviceDesc="Standard USB HUB"

Sejin.Mfg="Sejin"
USB\VID_0510&PID_1000.DeviceDesc="Sejin Composite USB Device"

EIZO.Mfg="EIZO"
USB\VID_056D&PID_0000.DeviceDesc="EIZO USB Hub"

Silitek.Mfg="Silitek"
USB\VID_047B&PID_0002.DeviceDesc="Silitek USB Composite Device"

KeyTronic.Mfg="Key Tronic"
USB\VID_03F9&PID_0102.DeviceDesc="Key Tronic Composite USB Device"

Chicony.Mfg="Chicony"
USB\VID_04F2&PID_0001.DeviceDesc="Chicony Composite USB Device"

BTC.Mfg="BTC"
USB\VID_046E&PID_6782.DeviceDesc="BTC Composite USB Device"

Forward.Mfg="Forward"
USB\VID_05BC&PID_0001.DeviceDesc="Forward Composite USB Device"

SolidYear.Mfg="Solid Year"
USB\VID_060B&PID_2101.DeviceDesc="Solid Year Composite USB Device"

Yamaha.Mfg="Yamaha"
USB\VID_0499&PID_3001.DeviceDesc="Yamaha Composite USB Device"

Nokia.Mfg="Nokia"
USB\VID_04A6&PID_0180.DeviceDesc="Nokia USB Hub Type P"

Granite.Mfg="Granite"
USB\VID_0654&PID_0006.DeviceDesc="Granite Microsystems USB Hub"
USB\VID_0654&PID_0016.DeviceDesc="Granite Microsystems USB Hub"

GenericHub.Mfg="(Generic USB Hub)"
USB\CLASS_09&SUBCLASS_01.DeviceDesc="Generic USB Hub"
USB\CLASS_09.DeviceDesc="Generic USB Hub"

USB\UNKNOWN.DeviceDesc="Unknown Device"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\usbprint.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[strings]
MSFT                  = "Microsoft"
USBPRINT.DeviceDesc   = "USB Printing Support"
USBPRINT.SvcDesc      = "Microsoft USB PRINTER Class"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\usbport.txt ===
[Strings] 
Msft="Microsoft"
USBClassName="Universal Serial Bus controllers"

EHCIMP.SvcDesc="Microsoft USB 2.0 Enhanced Host Controller Miniport Driver"
OHCIMP.SvcDesc="Microsoft USB Open Host Controller Miniport Driver"
UHCIMP.SvcDesc="Microsoft USB Universal Host Controller Miniport Driver"
ROOTHUB.SvcDesc="USB2 Enabled Hub"

GenericHub.Mfg="(Generic USB Hub)"
USB\ROOT_HUB.DeviceDesc="USB Root Hub"
USB\ROOT_HUB20.DeviceDesc="USB Root Hub"

Generic.Mfg="(Standard USB Host Controller)"
PCI\CC_0C0320.DeviceDesc="Standard Enhanced PCI to USB Host Controller"
PCI\CC_0C0310.DeviceDesc="Standard OpenHCD USB Host Controller"
PCI\CC_0C0300.DeviceDesc="Standard Universal PCI to USB Host Controller"

ACER.Mfg="ACER Labs Inc."
PCI\VEN_10B9&DEV_5237&CC_0C0310.DeviceDesc="ALi PCI to USB Open Host Controller"

AMD.Mfg="Advanced Micro Devices (AMD)"
PCI\VEN_1022&DEV_740C&CC_0C0310.DeviceDesc="AMD 756 PCI to USB Open Host Controller"

Compaq.Mfg="Compaq"
PCI\VEN_0E11&DEV_A0F8&CC_0C0310.DeviceDesc="Compaq PCI to USB Open Host Controller"

CMD.Mfg="CMD Technology"
PCI\VEN_1095&DEV_0670&CC_0C0310.DeviceDesc="CMD USB0670 PCI to USB Open Host Controller"
PCI\VEN_1095&DEV_0673&CC_0C0310.DeviceDesc="CMD USB0673 PCI to USB Open Host Controller"

Cypress.Mfg="Cypress Semiconductor Corporation"
PCI\VEN_1080&DEV_C693&CC_0C0310.DeviceDesc="Cypress USB Open Host Controller"

Intel.Mfg="Intel"
PCI\VEN_8086&DEV_2412&CC_0C0300.DeviceDesc="Intel(r) 82801AA USB Universal Host Controller"
PCI\VEN_8086&DEV_2422&CC_0C0300.DeviceDesc="Intel(r) 82801AB USB Universal Host Controller"
PCI\VEN_8086&DEV_2442&CC_0C0300.DeviceDesc="Intel(r) 82801BA/BAM USB Universal Host Controller - 2442"
PCI\VEN_8086&DEV_2444&CC_0C0300.DeviceDesc="Intel(r) 82801BA/BAM USB Universal Host Controller - 2444"
PCI\VEN_8086&DEV_7020&CC_0C0300.DeviceDesc="Intel(r) 82371SB PCI to USB Universal Host Controller"
PCI\VEN_8086&DEV_7112&CC_0C0300.DeviceDesc="Intel(r) 82371AB/EB PCI to USB Universal Host Controller"
PCI\VEN_8086&DEV_719A&CC_0C0300.DeviceDesc="Intel(r) 82440MX USB Universal Host Controller"
PCI\VEN_8086&DEV_7602&CC_0C0300.DeviceDesc="Intel(r) 82372FB PCI to USB Universal Host Controller"
PCI\VEN_8086&DEV_6960.DeviceDesc="Intel EHCI 960 Emulator"
PCI\VEN_8086&DEV_24C2&CC_0C0300.DeviceDesc="Intel(r) 82801DB/DBM USB Universal Host Controller - 24C2"
PCI\VEN_8086&DEV_24C4&CC_0C0300.DeviceDesc="Intel(r) 82801DB/DBM USB Universal Host Controller - 24C4"
PCI\VEN_8086&DEV_24C7&CC_0C0300.DeviceDesc="Intel(r) 82801DB/DBM USB Universal Host Controller - 24C7"
PCI\VEN_8086&DEV_24CD&CC_0C0320.DeviceDesc="Intel(r) 82801DB/DBM USB 2.0 Enhanced Host Controller - 24CD"

Lucent.Mfg="Lucent Technology"
PCI\VEN_11C1&DEV_5801&CC_0C0310.DeviceDesc="Lucent USB Open Host Controller"
PCI\VEN_11C1&DEV_5802&CC_0C0310.DeviceDesc="Lucent USB Open Host Controller"
PCI\VEN_11C1&DEV_5803&CC_0C0310.DeviceDesc="Lucent QuadraBus USB Open Host Controller"

Microsoft.Mfg="Microsoft"

NEC.Mfg="NEC"
PCI\VEN_1033&DEV_0035&CC_0C0310.DeviceDesc="NEC PCI to USB Open Host Controller"
PCI\VEN_1033&DEV_0035&REV_02.DeviceDesc="NEC PCI to USB Open Host Controller"
PCI\VEN_1033&DEV_0035&REV_41.DeviceDesc="NEC PCI to USB Open Host Controller"
PCI\VEN_1033&DEV_0035&SUBSYS_00011179&REV_41.DeviceDesc="NEC PCI to USB Open Host Controller"
PCI\VEN_1033&DEV_00E0&REV_01.DeviceDesc="NEC PCI to USB Enhanced Host Controller (B0)"
PCI\VEN_1033&DEV_00E0&REV_02.DeviceDesc="NEC PCI to USB Enhanced Host Controller (B1)"

OPTi.MFG="OPTi"
PCI\VEN_1045&DEV_C861&CC_0C0310.DeviceDesc="OPTi 82C861 PCI to USB Open Host Controller"

Philips.MFG="Philips"
PCI\VEN_1131&DEV_1234.DeviceDesc="Philips EHCI USB 2.0 Controller"

Reliance.Mfg="ServerWorks (RCC)"
PCI\VEN_1166&DEV_0220&CC_0C0310.DeviceDesc="ServerWorks (RCC) PCI to USB Open Host Controller"

SIS.Mfg="Silicon Integrated Systems"
PCI\VEN_1039&DEV_7001&CC_0C0310.DeviceDesc="SiS 7001 PCI to USB Open Host Controller"

Symbios.Mfg="Symbios Logic"
PCI\VEN_1000&DEV_0901&CC_0C0310.DeviceDesc="Symbios Logic SYM61C102 USB Host Controller"

SMSC.Mfg="Standard Microsystems Corp."
PCI\VEN_1055&DEV_9462.DeviceDesc="SMSC SLC90E66 PCI to USB Open Host Controller"

VIA.Mfg="VIA Technologies"
PCI\VEN_1106&DEV_3038&SUBSYS_12340925&REV_00.DeviceDesc="VIA Rev 0 USB Universal Host Controller"
PCI\VEN_1106&DEV_3038&REV_00.DeviceDesc="VIA Rev 0 USB Universal Host Controller"
PCI\VEN_1106&DEV_3038&SUBSYS_12340925&REV_01.DeviceDesc="VIA Rev 1 USB Universal Host Controller"
PCI\VEN_1106&DEV_3038&REV_01.DeviceDesc="VIA Rev 1 USB Universal Host Controller"
PCI\VEN_1106&DEV_3038&SUBSYS_12340925&REV_02.DeviceDesc="VIA Rev 2 USB Universal Host Controller"
PCI\VEN_1106&DEV_3038&REV_02.DeviceDesc="VIA Rev 2 USB Universal Host Controller"
PCI\VEN_1106&DEV_3038&SUBSYS_12340925&REV_03.DeviceDesc="VIA Rev 3 USB Universal Host Controller"
PCI\VEN_1106&DEV_3038&REV_03.DeviceDesc="VIA Rev 3 USB Universal Host Controller"
PCI\VEN_1106&DEV_3038&SUBSYS_12340925&REV_04.DeviceDesc="VIA Rev 4 USB Universal Host Controller"
PCI\VEN_1106&DEV_3038&REV_04.DeviceDesc="VIA Rev 4 USB Universal Host Controller"
PCI\VEN_1106&DEV_3038&CC_0C0300.DeviceDesc="VIA Rev 5 or later USB Universal Host Controller"
PCI\VEN_1106&DEV_3104&REV_51.DeviceDesc="VIA USB Enhanced Host Controller"
PCI\VEN_1106&DEV_3038&REV_50.DeviceDesc="VIA Rev 5 or later USB Universal Host Companion Controller"
PCI\VEN_1106&DEV_3038&SUBSYS_12340925&REV_50.DeviceDesc="VIA Rev 5 or later USB Universal Host Companion Controller"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\vgx.txt ===
[Strings]
DisplayName="Vector Graphics Rendering (VML)"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\usbstor.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
MSFT="Microsoft"

#if LANGUAGE_ID == 0x804
MfgName="Microsoft"
#elif LANGUAGE_ID == 0x404
MfgName="Microsoft"
#elif LANGUAGE_ID == 0x411
MfgName="Microsoft"
#elif LANGUAGE_ID == 0x412
MfgName="Microsoft"
#endif

Generic.Mfg     = "Compatible USB storage device"
GenericBulkOnly.DeviceDesc = "USB Mass Storage Device"

Mitsumi.Mfg     = "Mitsumi Electronics, Corp."
USB\VID_03EE&PID_0000.DeviceDesc = "Mitsumi USB CD-R/RW Drive"
USB\VID_03EE&PID_6901.DeviceDesc = "Mitsumi USB Floppy"

HP.Mfg          = "Hewlett-Packard"
USB\VID_03F0&PID_0107.DeviceDesc = "HP USB CD-Writer Plus"
USB\VID_03F0&PID_2001.DeviceDesc = "HP USB Floppy"
USB\VID_03F0&PID_4002.DeviceDesc = "Hewlett-Packard Digital Camera"
USB\VID_03F0&PID_6102.DeviceDesc = "Hewlett-Packard Digital Camera"

NEC.Mfg         = "NEC Systems"
USB\VID_0409&PID_002C.DeviceDesc = "NEC Clik!-USB Drive"
USB\VID_0409&PID_0040.DeviceDesc = "NEC USB Floppy"

IBM.Mfg         = "IBM"
USB\VID_04B3&PID_4427.DeviceDesc = "IBM USB CD-ROM Drive"

IOData.Mfg      = "I-O Data Device, Inc."
USB\VID_04BB&PID_0301.DeviceDesc = "USB Storage Device"

FujiFilm.Mfg    = "FujiFilm"
USB\VID_04CB&PID_0100.DeviceDesc = "FujiFilm FinePix Digital Camera"

ScanLogic.Mfg   = "ScanLogic Corporation"
USB\VID_04CE&PID_0002.DeviceDesc = "ScanLogic USB Storage Device"

Panasonic.Mfg   = "Panasonic"
USB\VID_04DA&PID_0B01.DeviceDesc = "Panasonic USB CD-R/RW Drive"
USB\VID_04DA&PID_1B00.DeviceDesc = "USB Reader Writer for SD Memory Card"
USB\VID_04DA&PID_0B03.DeviceDesc = "Panasonic USB SuperDisk 240MB"

SCM.Mfg         = "SCM Microsystems"
USB\VID_04E6&PID_0001.DeviceDesc = "USB ATAPI Storage Device"
USB\VID_04E6&PID_0002.DeviceDesc = "USB SCSI Storage Device"
USB\VID_04E6&PID_000A.DeviceDesc = "USB CompactFlash Reader"
USB\VID_04E6&PID_0101.DeviceDesc = "USB ATAPI Storage Device"

Sony.Mfg        = "Sony Corporation"
USB\VID_054C&PID_0010.DeviceDesc = "Sony Digital Camera"
USB\VID_054C&PID_0022.DeviceDesc = "Sony USB HiFD Drive"
USB\VID_054C&PID_0023.DeviceDesc = "Sony USB CD-R/RW Drive"
USB\VID_054C&PID_0024.DeviceDesc = "Sony Mavica Digital Still Camera"
USB\VID_054C&PID_0025.DeviceDesc = "Sony USB Memory Stick Walkman"
USB\VID_054C&PID_002C.DeviceDesc = "Sony USB Floppy"
USB\VID_054C&PID_0032.DeviceDesc = "Sony Memory Stick Reader/Writer"
USB\VID_054C&PID_0037.DeviceDesc = "Sony MG Memory Stick Reader/Writer"
USB\VID_054C&PID_0046.DeviceDesc = "Sony USB Network Walkman"
USB\VID_054C&PID_004A.DeviceDesc = "Sony USB Memory Stick Hi-Fi System"
USB\VID_054C&PID_0056.DeviceDesc = "Sony MG Memory Stick Reader/Writer"
USB\VID_054C&PID_0058.DeviceDesc = "Sony MG Memory Stick CLIE"
USB\VID_054C&PID_0069.DeviceDesc = "Sony Memory Stick Reader/Writer"

YEData.Mfg      = "Y-E Data, Inc."
USB\VID_057B&PID_0000.DeviceDesc = "Y-E Data USB Floppy"
USB\VID_057B&PID_0001.DeviceDesc = "Y-E Data USB Floppy"
USB\VID_057B&PID_0010.DeviceDesc = "Y-E Data USB Memory Stick Reader"

Iomega.Mfg      = "Iomega Corporation"
USB\VID_059B&PID_0001.DeviceDesc = "Iomega USB Zip 100"
USB\VID_059B&PID_0030.DeviceDesc = "Iomega USB Zip 250"
USB\VID_059B&PID_0031.DeviceDesc = "Iomega USB Zip 100"
USB\VID_059B&PID_0032.DeviceDesc = "Iomega USB Bus Powered Zip 250"
USB\VID_059B&PID_0060.DeviceDesc = "Iomega USB Click!Dock"

LaCie.Mfg       = "LaCie"
USB\VID_059F&PID_A601.DeviceDesc = "LaCie USB Hard Drive"
USB\VID_059F&PID_A602.DeviceDesc = "LaCie USB CD-R/RW Drive"

TEAC.Mfg        = "TEAC Corporation"
USB\VID_0644&PID_0000.DeviceDesc = "TEAC USB Floppy"
USB\VID_0644&PID_1000.DeviceDesc = "TEAC USB CD-ROM Drive"

Hagiwara.Mfg    = "Hagiwara Sys-Com Co., Ltd."
USB\VID_0693&PID_0002.DeviceDesc = "USB SmartMedia Reader/Writer"
USB\VID_0693&PID_0003.DeviceDesc = "USB CompactFlash Reader/Writer"
USB\VID_0693&PID_0005.DeviceDesc = "USB Dual Slot Reader/Writer"
USB\VID_0693&PID_0006.DeviceDesc = "USB SM PCCard R/W and SPD"
USB\VID_0693&PID_0007&MI_00.DeviceDesc = "FlashGate ME (Authenticated)"
USB\VID_0693&PID_000A.DeviceDesc = "USB SDCard/MMC Reader/Writer"

Imation.Mfg     = "Imation Corp."
USB\VID_0718&PID_0002.DeviceDesc = "Imation SuperDisk USB 120MB"
USB\VID_0718&PID_0003&MI_00.DeviceDesc = "Imation SuperDisk USB 120MB (Authenticated)"

SanDisk.Mfg     = "SanDisk Corporation"
USB\VID_0781&PID_0001.DeviceDesc = "SanDisk USB ImageMate"
USB\VID_0781&PID_0002&MI_00.DeviceDesc = "SanDisk USB ImageMate (Authenticated)"
USB\VID_0781&PID_0100.DeviceDesc = "SanDisk USB ImageMate Multimedia Card Reader"

Samsung.Mfg     = "Samsung"
USB\VID_0839&PID_1005.DeviceDesc = "Samsung Digimax 220"

DioGraphy.Mfg   = "DioGraphy Inc."
USB\VID_0892&PID_0101.DeviceDesc = "DioGraphy USB Smartdio Reader/Writer"

M-Sys.Mfg       = "M-Systems Flash Disk Pioneers Ltd."
USB\VID_08EC&PID_0010.DeviceDesc = "DiskOnKey USB personal storage device"

Addonics.Mfg    = "Addonics Technologies"
USB\VID_0BF6&PID_1234.DeviceDesc = "Addonics USB Storage Device"
USB\VID_0BF6&PID_0103.DeviceDesc = "Addonics USB Storage Device"

OnSpec.Mfg      = "OnSpec Electronic Inc."
USB\VID_55AA&PID_0015.DeviceDesc = "OnSpec USB Hard Drive"
USB\VID_55AA&PID_0102.DeviceDesc = "USB SuperDisk"
USB\VID_55AA&PID_0103.DeviceDesc = "OnSpec USB IDE Hard Drive"
USB\VID_55AA&PID_1234.DeviceDesc = "OnSpec USB CD-R/RW Drive"
USB\VID_55AA&PID_B004.DeviceDesc = "OnSpec USB MMC/SD Reader/Writer"
USB\VID_55AA&PID_B200&MI_00.DeviceDesc = "OnSpec USB Compact Flash Reader (Authenticated)"
USB\VID_55AA&PID_B204&MI_00.DeviceDesc = "OnSpec USB MMC/ SD Reader (Authenticated)"
USB\VID_55AA&PID_B207&MI_00.DeviceDesc = "OnSpec USB Memory Stick Reader (Authenticated)"


USBSTOR.SvcDesc = "USB Mass Storage Driver"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wab50.txt ===
[Strings]
STR_COMMON_DIR          = "Common Files"
STR_DESKTOP_DIR         = "Desktop"
STR_MAILNEWS_DIR        = "Outlook Express"
STR_PROGRAMF_DIR        = "Program Files"
STR_SERVICES_DIR        = "Services"
STR_SHARED_DIR          = "Microsoft Shared"
STR_SYSTEM_DIR          = "System"
STR_INTERNET_GRP        = "Internet Explorer"
STR_ACCESSORIES_GRP     = "Accessories"
STR_ACCESSORIES_NT5_GRP = "Accessories"
STR_BIGFOOT             = "Bigfoot Internet Directory Service"
STR_INFOSPACE           = "InfoSpace Internet Directory Service"
STR_INFOSPACE_BUSINESS  = "InfoSpace Business Directory Service"
STR_SWITCHBOARD         = "Switchboard Internet Directory Service"
STR_VERISIGN            = "VeriSign Internet Directory Service"
STR_WHOWHERE            = "WhoWhere Internet Directory Service"
STR_FIND_PEOPLE         = "Find... People"
STR_LANG                = "EN"
STR_MS_WAB_5            = "Address Book 6"
STR_PEOPLE              = "&People..."
STR_WAB                 = "Address Book"
STR_WAB_OLD             = "Windows Address Book"
STR_WAB_TIP             = "Contact management and directory services."
STR_WAB_SM_TIP          = "Manages your contacts and finds people and businesses using directory services."
STR_ACCESSORIES         = "Accessories"
APP                     = "/APP:WAB"
BLANK                   = ""
CALLER                  = "/CALLER:WINNT"
COMPONENT               = "AddressBook"
FORCEFUL_KEY            = "Software\Microsoft\Internet Account Manager\Preconfigured"
GUID                    = "{7790769C-0471-11d2-AF11-00C04FA35D02}"
INFFILE                 = "wab50.inf"
VERSION                 = "TOK_MAJOR_NUM,TOK_MINOR_NUM,TOK_BUILDNUM,TOK_QFE"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\volsnap.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
MSFT="Microsoft"
VolumeSnapshotClassName="Storage volume shadow copies"
STORAGE\VolumeSnapshot.DeviceDesc="Generic volume shadow copy"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wbemcrrl.txt ===
[Strings]
WBEMCRRL_DESC	= "WMI Event Correlation Components"
WBEMCRRL_TIP	= "Allows configuration of event correlation and processing rules and templates for WMI events."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\vscandb.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
@*:
@*: Codepage should be changed to the localized language codepage
@*: during localization. This is used to implement the ability to
@*: append/replace inf files at run time based on infs which
@*: were not present when the cd was made.
@*:
codepage=1252

msg1="McAfee VirusScan"
msg2="Irus Virus Scanner"
msg3="Toshiba Disk Manager"
msg4="Dr. Solomon's AntiVirus"
msg5="QEMM 97"
msg6="Norton AntiVirus"
msg7="Data Fellow's F-Protect"
msg8="Panda Antivirus Platinum"
msg9="Executive Software Diskeeper"
msg13="Cheyenne Antivirus"
msg14="McAfee ActiveShield"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\usermig.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...

#elif LANGUAGE_ID == 0x804
//CHS specific sections
[Map Win9x to WinNT]
HKR\EUDC\936 [~5B8B~~4F53~]=[SimSun]

#elif LANGUAGE_ID == 0x404
//CHT specific sections
[Map Win9x to WinNT]
HKR\EUDC\950 [~65B0~~7D30~~660E~~9AD4~]=[PMingLiU]

#elif LANGUAGE_ID == 0x411
//JPN specific sections
[Map Win9x to WinNT]
HKR\EUDC\932\[~FF2D~~FF33~ ~FF30~~30B4~~30B7~~30C3~~30AF~]=[MS PGothic]

//JPN IME8.1 migration setup ('ProgileList' can be get at the moment)
[External Processes]
%WINDIR%\IME\IMJP8_1\imjpinst.exe /User:%USERNAME%


#elif LANGUAGE_ID == 0x412
//KOR specific sections
[Map Win9x to WinNT]
HKR\EUDC\949 [~AD74~~B9BC~]=[Gulim]

//KOR IME6.1 user migration
[External Processes]
%WINDIR%\IME\IMKR6_1\imekrmig.exe Win9xMig %USERHIVEROOT%

#endif

// String section below for localizers
[Strings]
@*:
@*: Codepage should be changed to the localized language codepage
@*: during localization. This is used to implement the ability to
@*: append/replace inf files at run time based on infs which
@*: were not present when the cd was made.
@*:
codepage=1252

;please do not localize this next set of strings
CurrentVersion   = HKR\Software\Microsoft\Windows\CurrentVersion
NOECHOSYM        = @
EQUALSIGN        = "="
CDPlayerSettings    = HKR\Software\Microsoft\Windows\CurrentVersion\Applets\CdPlayer\Settings
DeluxeCDSettings    = HKR\Software\Microsoft\Windows\CurrentVersion\Applets\DeluxeCD\Settings


@*:
@*: If this directories are not localized, do not change this strings.
@*:
Accessories = Accessories
Accessibility = Accessibility
History = History
Entertainment = Entertainment
Internet_Explorer = "Internet Explorer"
Microsoft = "Microsoft"
UserData = "UserData"
System_Tools = "System Tools"
Temp = "Temp"
Temporary_Internet_Files = "Temporary Internet Files"
Windows = "Windows"

@*:
@*:
@*: If this links are not localized, do not change this strings.
@*:
Address_Book_lnk = "Address Book.lnk"
AMIPRO_SAM = "AMIPRO.SAM"
Command_Prompt_lnk = "Command Prompt.lnk"
Disk_Cleanup_lnk = "Disk Cleanup.lnk"
EXCEL_XLS = "EXCEL.XLS"
EXCEL4_XLS = "EXCEL4.XLS"
Internet_Explorer_lnk = "Internet Explorer.lnk"
LOTUS_WK4 = "LOTUS.WK4"
Magnifier_lnk = "Magnifier.lnk"
MSN_Messenger_Service_lnk = "MSN Messenger Service.lnk"
Narrator_lnk = "Narrator.lnk"
Notepad_lnk = "Notepad.lnk"
On-Screen_Keyboard_lnk = "On-Screen Keyboard.lnk"
Outlook_Express_lnk = "Outlook Express.lnk"
POWERPNT_PPT = "POWERPNT.PPT"
PRESENTA_SHW = "PRESENTA.SHW"
QUATTRO_WB2 = "QUATTRO.WB2"
Scheduled_Tasks_lnk = "Scheduled Tasks.lnk"
SNDREC_WAV = "SNDREC.WAV"
Synchronize_lnk = "Synchronize.lnk"
Utility_Manager_lnk = "Utility Manager.lnk"
Windows_Explorer_lnk = "Windows Explorer.lnk"
Windows_Media_Player_lnk = "Windows Media Player.lnk"
WORDPFCT_WPG = "WORDPFCT.WPG"
WORDPFCT_WPD = "WORDPFCT.WPD"
WINWORD2_DOC = "WINWORD2.DOC"
WINWORD_DOC = "WINWORD.DOC"
Windows_Real-Time_Client_lnk = "Windows Real-Time Client.lnk"

@*:
@*: This one must match nt\base\ntsetup\win95upg\msg\w95upgnt.mc id MSG_EMPTY_MYDOCS_TITLE
@*:
WhereDidDocsGo_txt = "Where did my files go.txt"

@*:
@*: These strings must match NT shell localization
@*:
Sample_Music_Lnk = "Sample Music.lnk"
Sample_Pictures_lnk = "Sample Pictures.lnk"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wbemfwrd.txt ===
[Strings]
WBEMFWRD_DESC	= "WMI Event Forwarding Components"
WBEMFWRD_TIP	= "Allows configuration of forwarding of WMI events across multiple machines."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\volume.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
MSFT="Microsoft"
VolumeClassName="Storage volumes"
STORAGE\Volume.DeviceDesc="Generic volume"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wbemmsi.txt ===
[Strings]
WBEMMSI_DESC	= "WMI Windows Installer Provider"
WBEMMSI_TIP	= "Allows client applications to access Windows Installer information through Windows Management Instrumentation (WMI)."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wbemoc.txt ===
[Strings]
WBEM_DESC	= "WMI"
WBEM_TIP	= "Windows Management Instrumentation"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wd.txt ===
[Strings]

SPSVCINST_ASSOCSERVICE                   = 0x00000002
REG_MULTI_SZ                             = 0x00010000

SERVICE_BOOT_START                       = 0
SERVICE_ERROR_NORMAL                     = 1
SERVICE_KERNEL_DRIVER                    = 1
SERVICE_SYSTEM_START                     = 1

MICROSOFT                                = "Microsoft"

WdDeviceDesc                             = "Microsoft Watchdog Timer"
WdServiceDisplayName                     = "Microsoft Watchdog Timer Driver"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wceusbsh.txt ===
[Strings]
;----------------------
REG_DWORD = 0x00010001
MICROSOFT = "Microsoft"

Host_Inst.SVCDESC   = "Windows CE USB Serial Host Driver"
Interface.ClassName = "Windows CE USB Devices"


;
;  <VENDOR SECTION>
;
; 3 of 3.
; Define your strings here
;
;  e.g.
;  ACME = "ACME"
;  USB\VID_xxxx&PID_yyyy.DeviceDesc = "ACME USB Sync"
;
Askey = "Askey"
USB\Vid_1690&Pid_0601.DeviceDesc = "Askey USB Sync"

BCOM = "BCOM"
USB\Vid_0960&Pid_0065.DeviceDesc = "BCOM USB Sync 0065"
USB\Vid_0960&Pid_0066.DeviceDesc = "BCOM USB Sync 0066"
USB\Vid_0960&Pid_0067.DeviceDesc = "BCOM USB Sync 0067"

Casio  = "CASIO"
USB\Vid_07CF&Pid_2001.DeviceDesc = "CASIO USB Sync 2001"
USB\Vid_07CF&Pid_2002.DeviceDesc = "CASIO USB Sync 2002"

Compaq = "Compaq Computer Corporation"
USB\Vid_049F&Pid_0003.DeviceDesc = "Compaq Aero USB Sync"

HP = "HP"
USB\Vid_03F0&Pid_1016.DeviceDesc = "HP USB Sync"

Linkup = "Linkup Systems"
USB\Vid_094B&Pid_0001.DeviceDesc = "Linkup Systems USB Sync"

MSFT = "Microsoft"
USB\Vid_045E&Pid_00CE.DeviceDesc = "Microsoft USB Sync"

Portatec = "Portatec"
USB\Vid_0961&Pid_0010.DeviceDesc = "Portatec USB Sync"

Socket = "Socket Communications"
USB\Vid_0104&Pid_00BE.DeviceDesc = "Socket USB Sync"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wmtrmui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui
*/

[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x409
LCID=0409
#endif

#if LANGUAGE_ID == 0x403
LCID=0403
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
#endif

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wbemsnmp.txt ===
[Strings]
WBEMSNMP_DESC	= "WMI SNMP Provider"
WBEMSNMP_TIP	= "Allows client applications to access static and dynamic SNMP information through Windows Management Instrumentation (WMI)."
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wowfile.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wdmjoy.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[strings]
;localized strings
MSFT                            = "Microsoft"
StdMfg                          = "(Standard system devices)"
HID.ClassName                   = "Human Input Devices (HID)"
HidGame.SvcDesc                 = "Microsoft Hid to Joystick Port Enabler"

HIDGame.GenericDesc             = "Generic Game port Device"

HidGame.Generic2A2B             = "2-axis, 2-button joystick"
HidGame.Generic2A4B             = "2-axis, 4-button joystick"
HidGame.Gamepad2B               = "2-button gamepad"
HidGame.FlightYoke2B            = "2-button flight yoke"
HidGame.FlightYokeThrottle2B    = "2-button flight yoke w/throttle"
HidGame.Generic3A2B             = "3-axis, 2-button joystick"
HidGame.Generic3A4B             = "3-axis, 4-button joystick"
HidGame.Gamepad4B               = "4-button gamepad"
HidGame.FlightYoke4B            = "4-button flight yoke"
HidGame.FlightYokeThrottle4B    = "4-button flight yoke w/throttle"
HidGame.YConnectTwo2A2B         = "Two 2-axis, 2-button joysticks on Y-connector"

HidGame.Dev0                    = "Steering wheel w/rudder axis pedals"
HidGame.Dev1                    = "4-button joystick w/POV"
HidGame.Dev2                    = "4-button joystick w/POV and throttle"
HidGame.Dev3                    = "6-button joystick w/POV"
HidGame.Dev4                    = "6-button joystick w/POV and throttle"
HidGame.Dev5                    = "6-button joystick w/two POVs"
HidGame.Dev6                    = "6-button joystick w/two POVs and throttle"
HidGame.Dev7                    = "6-button flight yoke w/two POVs"
HidGame.Dev8                    = "6-button flight yoke w/two POVs and throttle"
HidGame.Dev9                    = "6-button gamepad"
HidGame.DevA                    = "5-button gamepad w/throttle"
HidGame.DevB                    = "6-button joystick"
HidGame.DevC                    = "5-button joystick w/throttle"
HidGame.DevD                    = "5-button joystick w/POV"

WgmExtrmDgtlAuto.Name           = "Logitech WingMan Digital Devices(Auto-Detect)"


;
; non localized strings
KEY_OEM="SYSTEM\CurrentControlSet\Control\MediaProperties\PrivateProperties\Joystick\OEM"
SPSVCINST_ASSOCSERVICE= 0x00000002
SERVICE_KERNEL_DRIVER = 1
SERVICE_DEMAND_START  = 3
SERVICE_ERROR_IGNORE  = 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wie5ui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui


[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x403
LCID=0403
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
#endif

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wermui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui
*/

[ER.install]

#if LANGUAGE_ID == 0x401
dwintl.dll,wdwil1025.dll.mu_

#elif LANGUAGE_ID == 0x404
dwintl.dll,wdwil1028.dll.mu_

#elif LANGUAGE_ID == 0x405
dwintl.dll,wdwil1029.dll.mu_

#elif LANGUAGE_ID == 0x406
dwintl.dll,wdwil1030.dll.mu_

#elif LANGUAGE_ID == 0x407
dwintl.dll,wdwil1031.dll.mu_

#elif LANGUAGE_ID == 0x408
dwintl.dll,wdwil1032.dll.mu_

#elif LANGUAGE_ID == 0x409
dwintl.dll,wdwil1033.dll.mu_

#elif LANGUAGE_ID == 0x40b
dwintl.dll,wdwil1035.dll.mu_

#elif LANGUAGE_ID == 0x40c
dwintl.dll,wdwil1036.dll.mu_

#elif LANGUAGE_ID == 0x40d
dwintl.dll,wdwil1037.dll.mu_

#elif LANGUAGE_ID == 0x40e
dwintl.dll,wdwil1038.dll.mu_

#elif LANGUAGE_ID == 0x410
dwintl.dll,wdwil1040.dll.mu_

#elif LANGUAGE_ID == 0x411
dwintl.dll,wdwil1041.dll.mu_

#elif LANGUAGE_ID == 0x412
dwintl.dll,wdwil1042.dll.mu_

#elif LANGUAGE_ID == 0x413
dwintl.dll,wdwil1043.dll.mu_

#elif LANGUAGE_ID == 0x414
dwintl.dll,wdwil1044.dll.mu_

#elif LANGUAGE_ID == 0x415
dwintl.dll,wdwil1045.dll.mu_

#elif LANGUAGE_ID == 0x416
dwintl.dll,wdwil1046.dll.mu_

#elif LANGUAGE_ID == 0x419
dwintl.dll,wdwil1049.dll.mu_

#elif LANGUAGE_ID == 0x41b
dwintl.dll,wdwil1051.dll.mu_

#elif LANGUAGE_ID == 0x41d
dwintl.dll,wdwil1053.dll.mu_

#elif LANGUAGE_ID == 0x41e
dwintl.dll,wdwil1054.dll.mu_

#elif LANGUAGE_ID == 0x41f
dwintl.dll,wdwil1055.dll.mu_

#elif LANGUAGE_ID == 0x424
dwintl.dll,wdwil1060.dll.mu_

#elif LANGUAGE_ID == 0x804
dwintl.dll,wdwil2052.dll.mu_

#elif LANGUAGE_ID == 0x816
dwintl.dll,wdwil2070.dll.mu_

#elif LANGUAGE_ID == 0xc04
dwintl.dll,wdwil3076.dll.mu_

#elif LANGUAGE_ID == 0xc0a
dwintl.dll,wdwil3082.dll.mu_

#endif


[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x401
DWLCID=1025
LCID=0401

#elif LANGUAGE_ID == 0x404
DWLCID=1028
LCID=0404

#elif LANGUAGE_ID == 0x405
DWLCID=1029
LCID=0405

#elif LANGUAGE_ID == 0x406
DWLCID=1030
LCID=0406

#elif LANGUAGE_ID == 0x407
DWLCID=1031
LCID=0407

#elif LANGUAGE_ID == 0x408
DWLCID=1032
LCID=0408

#elif LANGUAGE_ID == 0x409
DWLCID=1033
LCID=0409

#elif LANGUAGE_ID == 0x40b
DWLCID=1035
LCID=040b

#elif LANGUAGE_ID == 0x40c
DWLCID=1036
LCID=040c

#elif LANGUAGE_ID == 0x40d
DWLCID=1037
LCID=040d

#elif LANGUAGE_ID == 0x40e
DWLCID=1038
LCID=040e

#elif LANGUAGE_ID == 0x410
DWLCID=1040
LCID=0410

#elif LANGUAGE_ID == 0x411
DWLCID=1041
LCID=0411

#elif LANGUAGE_ID == 0x412
DWLCID=1042
LCID=0412

#elif LANGUAGE_ID == 0x413
DWLCID=1043
LCID=0413

#elif LANGUAGE_ID == 0x414
DWLCID=1044
LCID=0414

#elif LANGUAGE_ID == 0x415
DWLCID=1045
LCID=0415

#elif LANGUAGE_ID == 0x416
DWLCID=1046
LCID=0416

#elif LANGUAGE_ID == 0x419
DWLCID=1049
LCID=0419

#elif LANGUAGE_ID == 0x41b
DWLCID=1051
LCID=041e

#elif LANGUAGE_ID == 0x41d
DWLCID=1053
LCID=041d

#elif LANGUAGE_ID == 0x41e
DWLCID=1054
LCID=041e

#elif LANGUAGE_ID == 0x41f
DWLCID=1055
LCID=041f

#elif LANGUAGE_ID == 0x424
DWLCID=1060
LCID=0424

#elif LANGUAGE_ID == 0x804
DWLCID=2052
LCID=0804

#elif LANGUAGE_ID == 0x816
DWLCID=2070
LCID=0816

#elif LANGUAGE_ID == 0xc04
DWLCID=3076
LCID=0c04

#elif LANGUAGE_ID == 0xc0a
DWLCID=3082
LCID=0c0a

#endif

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wowfregc.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wowfrege.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wowfrego.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wmprfmui.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

/*
;no need to localize the following section. the proper LCID string
;will be created by precompiler 
;LangID and Language mapping code
;0403=ca.mui	- Pseudo localized	if Pseudo lang changes, this needs to be changed
;040c=FR.MUI
;0c0a=ES.MUI
;0410=IT.MUI
;041d=SV.MUI
;0413=NL.MUI
;0416=Br.MUI
;040b=FI.MUI
;0414=no.MUI
;0406=da.MUI
;040e=hu.MUI
;0415=pl.MUI
;0419=RU.MUI
;0405=cs.MUI
;0408=EL.MUI
;0816=pt.mui
;041f=tr.mui
;0411=JPN.MUI
;0412=KOR.MUI
;0407=GER.MUI
;0804=CHS.MUI
;0404=CHT.MUI
;0401=ara.mui
;040d=heb.mui
*/

[Strings]
; non-localizeable

#if LANGUAGE_ID == 0x409
LCID=0409
#endif

#if LANGUAGE_ID == 0x403
LCID=0403
#endif

#if LANGUAGE_ID == 0x40c
LCID=040C
#endif

#if LANGUAGE_ID == 0xc0a
LCID=0C0A
#endif

#if LANGUAGE_ID == 0x410
LCID=0410
#endif

#if LANGUAGE_ID == 0x41d
LCID=041D
#endif

#if LANGUAGE_ID == 0x413
LCID=0413
#endif

#if LANGUAGE_ID == 0x416
LCID=0416
#endif

#if LANGUAGE_ID == 0x40b
LCID=040B
#endif

#if LANGUAGE_ID == 0x414
LCID=0414
#endif

#if LANGUAGE_ID == 0x406
LCID=0406
#endif

#if LANGUAGE_ID == 0x40e
LCID=040E
#endif

#if LANGUAGE_ID == 0x415
LCID=0415
#endif

#if LANGUAGE_ID == 0x419
LCID=0419
#endif

#if LANGUAGE_ID == 0x405
LCID=0405
#endif

#if LANGUAGE_ID == 0x408
LCID=0408
#endif

#if LANGUAGE_ID == 0x816
LCID=0816
#endif

#if LANGUAGE_ID == 0x41f
LCID=041F
#endif

#if LANGUAGE_ID == 0x411
LCID=0411
#endif

#if LANGUAGE_ID == 0x412
LCID=0412
#endif

#if LANGUAGE_ID == 0x407
LCID=0407
#endif

#if LANGUAGE_ID == 0x804
LCID=0804
#endif

#if LANGUAGE_ID == 0x404
LCID=0404
#endif

#if LANGUAGE_ID == 0x401
LCID=0401
#endif

#if LANGUAGE_ID == 0x40d
LCID=040D
#endif

LANGUAGE="EN"

;-------------
; localizeable
;--------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wkstamig.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.	
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...

#elif LANGUAGE_ID == 0x804
//CHS specific sections

#elif LANGUAGE_ID == 0x404
//CHT specific sections

#elif LANGUAGE_ID == 0x411
//JPN specific sections
@@:@n:[Win95-DOS files]
@@:@n:avgdrv.exe
@@:@n:avgdrv.sys
@@:@n:avsdrv.exe
@@:@n:avsdrv.sys
@@:@n:diskinit.exe
@@:@n:graph.sys
@@:@n:graph.lib
@@:@n:hrtimer.sys
@@:@n:key.exe
@@:@n:neccd.sys
@@:@n:neccdb.sys
@@:@n:neccdd.sys
@@:@n:neccdj.sys
@@:@n:neccdk.sys
@@:@n:neccdm.sys
@@:@n:print.sys
@@:@n:rsdrv.sys
@@:@n:speed.exe
@@:@n:switch.exe
@@:@n:uskcgm.sys
@@:@n:necaik1m.drv
@@:@n:necaik2m.drv
@@:@n:necai.dic
@@:@n:necuser.dic
@@:@n:necaifep.inf
@@:@n:kkcfunc.sys
@@:@n:selkkc.exe
@@:@n:adddrv.exe
@@:@n:deldrv.exe
@@:@n:ramdrive.sys
@@:@n:setver.exe
@@:@n:smartdrv.exe
@@:@n:

#elif LANGUAGE_ID == 0x412
//KOR specific sections

#endif

// String section below for localizers
[Strings]
@*:
@*: Codepage should be changed to the localized language codepage
@*: during localization. This is used to implement the ability to
@*: append/replace inf files at run time based on infs which
@*: were not present when the cd was made.
@*:
codepage=1252


;please do not localize this
CurrentVersion   = HKLM\Software\Microsoft\Windows\CurrentVersion
NTCurrentVersion = HKLM\Software\Microsoft\Windows NT\CurrentVersion
Services         = HKLM\System\CurrentControlSet\Services
NOECHOSYM        = @
EQUALSIGN        = "="



BOOT16MSG="REM Setup Generated File."

;when you have Scrolling Marquee as your screen saver on Win95, in Control.INI there is a section called "Screen Saver.XXXXX".
;Please replace the key value below with that section name.
ss_marquee95 = "Screen Saver.Marquee"

;when you have Scrolling Marquee as your screen saver on WinNT, in HKEY_CURRENT_USER\Control Panel there is a key
;called "Screen Saver.XXXXX". Please replace the key value below with that key name.
ss_marqueeNT = "Screen Saver.Marquee"


;when you have Flying Through Space as your screen saver on Win95, in Control.INI there is a section called "Screen Saver.XXXXX".
;Please replace the key value below with that section name.
ss_stars95 = "Screen Saver.Stars"

;when you have Flying Through Space as your screen saver on WinNT, in HKEY_CURRENT_USER\Control Panel there is a key
;called "Screen Saver.XXXXX". Please replace the key value below with that key name.
ss_starsNT = "Screen Saver.Stars"


;when you have 3D Text as your screen saver on Win95, in Control.INI there is a section called "<screen saver>.<3d text>".
;Please replace the key value below with that section name.
ss_3dtext95 = "Screen Saver.3DText"

;when you have 3D Text as your screen saver on WinNT, in HKEY_CURRENT_USER\Control Panel there is a key
;called "<screen saver>.<3dtext>". Please replace the key value below with that key name.
ss_3dtextNT = "Screen Saver.3DText"


;this is the section name from %windir%\SOL.INI where the solitaire game keeps the settings on Win9x side. Please localize accordingly.
sol_sect95 = Solitaire

;this is the section name from %windir%\SOL.INI where the solitaire game keeps the settings on Win98 side. Please localize accordingly.
sol_sect98 = Solitaire

;this is the section name from %windir%\WIN.INI where the solitaire game keeps the settings on NT side. Please localize accordingly.
sol_sectNT = Solitaire


@*:
@*: This is the Accessories directory found in %ProgramFiles%.
@*: If this directory is not localized, do not change this string.
@*:
Accessories = Accessories

@*:
@*: This is the Internet Explorer directory found in %ProgramFiles%.
@*: If this directory is not localized, do not change this string.
@*:
Internet_Explorer = "Internet Explorer"

@*:
@*: This is the Connection Wizard directory found in %ProgramFiles%\%Internet_Explorer%.
@*: If this directory is not localized, do not change this string.
@*:
Connection_Wizard = "Connection Wizard"

@*:
@*: This is the Outlook Express directory found in %ProgramFiles%.
@*: If this directory is not localized, do not change this string.
@*:
Outlook_Express = "Outlook Express"

@*:
@*: If these directories are not localized, do not change the strings.
@*:
StartMenu = "Start Menu"
Programs = "Programs"
Communications = Communications
History = "History"
System_Tools = "System Tools"
Games = Games
Accessibility = Accessibility
Connections = "Connections"
Crypto = "Crypto"
Default_Pictures = "Default Pictures"
Entertainment = Entertainment
Fax = Fax
Administrative_Tools = "Administrative Tools"
My_Faxes = "My Faxes"
My_Pictures = "My Pictures"
My_Music = "My Music"
Microsoft = "Microsoft"
Network = "Network"
Pbk = "Pbk"
Documents = "Documents"
Common_CoverPages = "Common CoverPages"
Links = "Links"
Windows = "Windows"
Temp = "Temp"
Temporary_Internet_Files = "Temporary Internet Files"
My_Video = "My Videos"
My_Documents = "My Documents"
RSA = "RSA"
S-1-5-18 = "S-1-5-18"
Shared_Pictures = "My Pictures"
Shared_Music = "My Music"
Shared_Video = "My Videos"
Shared_Documents = "Documents"
Sample_Music = "Sample Music"
Sample_Pictures = "Sample Pictures"
UserData = "UserData"
User_Account_Pictures = "User Account Pictures"

@*:
@*:
@*: If this links are not localized, do not change this strings.
@*:
3_Floppy_(A)_lnk = "3 Floppy (A).lnk"
Accessibility_Wizard_lnk = "Accessibility Wizard.lnk"
Activate_Windows_lnk = "Activate Windows.lnk"
Address_Book_lnk = "Address Book.lnk"
AMIPRO_SAM = "AMIPRO.SAM"
Beethoven_s_Symphony_No__9_(Scherzo)_wma = "Beethoven's Symphony No. 9 (Scherzo).wma"
Calculator_lnk = "Calculator.lnk"
Character_Map_lnk = "Character Map.lnk"
Command_Prompt_lnk = "Command Prompt.lnk"
Component_Services_lnk = "Component Services.lnk"
Compressed_(zipped)_Folder_ZFSendToTarget = "Compressed (zipped) Folder.ZFSendToTarget"
Computer_Management_lnk = "Computer Management.lnk"
CONFDENT_COV = "CONFDENT.COV"
Crew_jpg = "Crew.jpg"
Customize_Links_url = "Customize Links.url"
Data_Sources_(ODBC)_lnk = "Data Sources (ODBC).lnk"
Desktop_(create_shortcut)_DeskLink = "Desktop (create shortcut).DeskLink"
Disk_Cleanup_lnk = "Disk Cleanup.lnk"
Disk_Defragmenter_lnk = "Disk Defragmenter.lnk"
Drumkit_Test_mid = "Drumkit Test.mid"
DRM = "DRM"
DRMV2_LIC = "DRMV2.LIC"
DRMV2_SST = "DRMV2.SST"
Event_Viewer_lnk = "Event Viewer.lnk"
EXCEL_XLS = "EXCEL.XLS"
EXCEL4_XLS = "EXCEL4.XLS"
Fax_Configuration_Wizard_lnk = "Fax Configuration Wizard.lnk"
Fax_Console_lnk = "Fax Console.lnk"
Fax_Cover_Page_Editor_lnk = "Fax Cover Page Editor.lnk"
Fax_Send_Wizard_lnk = "Fax Send Wizard.lnk"
Fax_Service_Manager_lnk = "Fax Service Manager.lnk"
Flourish_mid = "Flourish.mid"
File_a_bug_report_lnk = "File a bug report.lnk"
Files_and_Settings_Transfer_Wizard_lnk = "Files and Settings Transfer Wizard.lnk"
Free_Hotmail_url = "Free Hotmail.url"
Freecell_lnk = "Freecell.lnk"
FYI_COV = "FYI.COV"
GENERIC_COV = "GENERIC.COV"
Hearts_lnk = "Hearts.lnk"
Home_Networking_Wizard_lnk = "Network Setup Wizard.lnk"
HyperTerminal_lnk = "HyperTerminal.lnk"
Internet_Backgammon_lnk = "Internet Backgammon.lnk"
Internet_Checkers_lnk = "Internet Checkers.lnk"
Internet_Connection_Wizard_lnk = "Internet Connection Wizard.lnk"
Internet_Explorer_lnk = "Internet Explorer.lnk"
Internet_Hearts_lnk = "Internet Hearts.lnk"
Internet_Reversi_lnk = "Internet Reversi.lnk"
Internet_Spades_lnk = "Internet Spades.lnk"
LOTUS_WK4 = "LOTUS.WK4"
Magnifier_lnk = "Magnifier.lnk"
Mail_Recipient_MAPIMail = "Mail Recipient.MAPIMail"
Mountain_vista_jpg = "Mountain vista.jpg"
Media_Index = "Media Index"
Minesweeper_lnk = "Minesweeper.lnk"
MSN_com_url = "MSN.com.url"
MSN_Explorer_lnk = "MSN Explorer.lnk"
MSN_Messenger_Service_lnk = "MSN Messenger Service.lnk"
MUSIC_ASX = "MUSIC.ASX"
MUSIC_WMA = "MUSIC.WMA"
MUSIC_BMP = "MUSIC.BMP"
My_Documents_mydocs = "My Documents.mydocs"
Narrator_lnk = "Narrator.lnk"
NetMeeting_lnk = "NetMeeting.lnk"
Network_Connections_lnk = "Network Connections.lnk"
Notepad_lnk = "Notepad.lnk"
New_Stories_(Highway_Blues)_wma = "New Stories (Highway Blues).wma"
On-Screen_Keyboard_lnk = "On-Screen Keyboard.lnk"
OneStop_mid = "OneStop.mid"
Orange_canyon_jpg = "Orange canyon.jpg"
Outlook_Express_lnk = "Outlook Express.lnk"
Paint_lnk = "Paint.lnk"
Performance_lnk = "Performance.lnk"
Pinball_lnk = "Pinball.lnk"
POWERPNT_PPT = "POWERPNT.PPT"
PRESENTA_SHW = "PRESENTA.SHW"
QUATTRO_WB2 = "QUATTRO.WB2"
Radio_Station_Guide_url = "Radio Station Guide.url"
Readme_Notes_lnk = "Readme Notes.lnk"
Remote_Desktop_Connection_lnk = "Remote Desktop Connection.lnk"
Run_in_Compatibility_Mode_lnk = "Run in Compatibility Mode.lnk"
Sail_jpg = "Sail.jpg"
Scheduled_Tasks_lnk = "Scheduled Tasks.lnk"
Send_a_Fax_lnk = "Send a Fax....lnk"
Services_lnk = "Services.lnk"
SNDREC_WAV = "SNDREC.WAV"
Solitaire_lnk = "Solitaire.lnk"
Sound_Recorder_lnk = "Sound Recorder.lnk"
Spider_Solitaire_lnk = "Spider Solitaire.lnk"
Surfer_jpg = "Surfer.jpg"
Synchronize_lnk = "Synchronize.lnk"
System_Information_lnk = "System Information.lnk"
System_Restore_lnk = "System Restore.lnk"
system@microsoft[1]_txt = "system@microsoft[1].txt"
system@windowsme[1]_txt = "system@windowsme[1].txt"
Town_mid = "Town.mid"
URGENT_COV = "URGENT.COV"
Utility_Manager_lnk = "Utility Manager.lnk"
Volume_Control_lnk = "Volume Control.lnk"
Web_Publishing_Wizard_publishwizard = "Web Publishing Wizard.publishwizard"
Windows_Catalog_lnk = "Windows Catalog.lnk"
Windows_Explorer_lnk = "Windows Explorer.lnk"
Windows_Media_Player_lnk = "Windows Media Player.lnk"
Windows_Media_url = "Windows Media.url"
Windows_Movie_Maker_lnk = "Windows Movie Maker.lnk"
Windows_Update_lnk = "Windows Update.lnk"
Windows_url = "Windows.url"
Windows_Real-Time_Client_lnk = "Windows Real-Time Client.lnk"
WINWORD_DOC = "WINWORD.DOC"
WINWORD2_DOC = "WINWORD2.DOC"
Winter_forest_jpg = "Winter forest.jpg"
wmplibrary_v_0_12_db = "wmplibrary_v_0_12.db"
WordPad_lnk = "WordPad.lnk"
WORDPFCT_WPD = "WORDPFCT.WPD"
WORDPFCT_WPG = "WORDPFCT.WPG"
Writable_CD_cdburn = "Writable CD.cdburn"
Remote_Assistance_lnk = "Remote Assistance.lnk"

@*:
@*: These strings must match NT shell localization
@*:
Sample_Music_Lnk = "Sample Music.lnk"
Sample_Pictures_lnk = "Sample Pictures.lnk"

Blue_Hills_jpg = "Blue hills.jpg"
Sunset_jpg = "Sunset.jpg"
Water_lilies_jpg = "Water lilies.jpg"
Winter_jpg = "Winter.jpg"

@*:

Windows_XP_Balloon_wav = "Windows XP Balloon.wav"
Windows_XP_Battery_Critical_wav = "Windows XP Battery Critical.wav"
Windows_XP_Battery_Low_wav = "Windows XP Battery Low.wav"
Windows_XP_Critical_Stop_wav = "Windows XP Critical Stop.wav"
Windows_XP_Default_wav = "Windows XP Default.wav"
Windows_XP_Ding_wav = "Windows XP Ding.wav"
Windows_XP_Error_wav = "Windows XP Error.wav"
Windows_XP_Exclamation_wav = "Windows XP Exclamation.wav"
Windows_XP_Hardware_Fail_wav = "Windows XP Hardware Fail.wav"
Windows_XP_Hardware_Insert_wav = "Windows XP Hardware Insert.wav"
Windows_XP_Hardware_Remove_wav = "Windows XP Hardware Remove.wav"
Windows_XP_Logoff_Sound_wav = "Windows XP Logoff Sound.wav"
Windows_XP_Logon_Sound_wav = "Windows XP Logon Sound.wav"
Windows_XP_Menu_Command_wav = "Windows XP Menu Command.wav"
Windows_XP_Minimize_wav = "Windows XP Minimize.wav"
Windows_XP_Notify_wav = "Windows XP Notify.wav"
Windows_XP_Print_complete_wav = "Windows XP Print complete.wav"
Windows_XP_Recycle_wav = "Windows XP Recycle.wav"
Windows_XP_Restore_wav = "Windows XP Restore.wav"
Windows_XP_Ringin_wav = "Windows XP Ringin.wav"
Windows_XP_Ringout_wav = "Windows XP Ringout.wav"
Windows_XP_Shutdown_wav = "Windows XP Shutdown.wav"
Windows_XP_Start_wav = "Windows XP Start.wav"
Windows_XP_Startup_wav = "Windows XP Startup.wav"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wordpad.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
@*:;begin_sld_ShellWordpad
MSWORDPADOPT_DESC = "WordPad"
MSWORDPADOPT_TIP  = "Editor for creating short memos and documents"

APPS_DESC         = "Accessories"
WORDPAD_LINK      = "WordPad"
Wordpad_Infotip   = "Creates and edits text documents with complex formatting."
WORDPAD_DOC       = "WordPad Document"
RTF_DOC           = "Rich Text Document"
WRITE_DOC         = "Write Document"
EDIT              = "&Edit"
OPEN              = "&Open"

ACCESSOR          = "Windows NT\Accessories"
PROGRAMF	  = "Program Files"
@*:;end_sld_ShellWordpad
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\win95upg.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...

#elif LANGUAGE_ID == 0x804
//CHS specific sections

#elif LANGUAGE_ID == 0x404
//CHT specific sections

#elif LANGUAGE_ID == 0x411
//JPN specific sections
@@:@n:[Standard PNP IDs]
@@:@*:
@@:@*: for NEC PC-9800
@@:@*:
@@:@n:*nEC1600 = Generic ESDI/IDE/ATA Compatible Hard
@@:@n:*nEC1700 = 98 Standard Floppy Disk Controller
@@:@n:*nEC1902 = Standard Display Adapter (9821 Series)
@@:@n:C98PNP\ReadDataPort = "IO read data port for C-bus Plug and Play emulator"
@@:@n:C98PNP\NEC8061 = "PC-9801-104(PnP mode)"
@@:@n:C98PNP\NEC8051 = "PC-9801-103(PnP mode)"
@@:@n:C98PNP\NEC80C1 = "PC-9801-111(PnP mode)"
@@:@n:C98PNP\NEC8191 = "NEC PC-9801-120"
@@:@n:C98PNP\NEC8181 = "NEC PC-9801-121 ISDN Board"
@@:@n:C98PNP\NEC8211 = "NEC PC-9801-123"
@@:@n:C98PNP\NEC8271 = "NEC PC-9801-125"
@@:@n:C98PNP\NEC8291 = "NEC PC-9801-127"
@@:@n:C98PNP\NEC8241 = "NEC PC-9821NR-B05"
@@:@n:

#elif LANGUAGE_ID == 0x412
//KOR specific sections

#endif

// String section below for localizers
[Strings]
@*:
@*: Codepage should be changed to the localized language codepage
@*: during localization. This is used to implement the ability to
@*: append/replace inf files at run time based on infs which
@*: were not present when the cd was made.
@*:
codepage=1252
@*:
@*:
@*: Timezones
@*:
WIN95_GMT_MINUS_01_A      = "(GMT-01:00) Azores, Cape Verde Is."
WIN98_GMT_MINUS_01_A      = "(GMT-01:00) Azores, Cape Verde Is."
WINME_GMT_MINUS_01_A      = "(GMT-01:00) Azores"
MAP95_GMT_MINUS_01_A      = "080,083"
MAP98_GMT_MINUS_01_A      = "080,083"
MAPME_GMT_MINUS_01_A      = "080"

WINME_GMT_MINUS_01_B      = "(GMT-01:00) Cape Verde Is."
MAPME_GMT_MINUS_01_B      = "083"

WIN95_GMT_MINUS_02_A      = "(GMT-02:00) Mid-Atlantic"
WIN98_GMT_MINUS_02_A      = "(GMT-02:00) Mid-Atlantic"
WINME_GMT_MINUS_02_A      = "(GMT-02:00) Mid-Atlantic"
MAP95_GMT_MINUS_02_A      = "075"
MAP98_GMT_MINUS_02_A      = "075"
MAPME_GMT_MINUS_02_A      = "075"

WIN95_GMT_MINUS_03_A      = "(GMT-03:00) Brasilia"
WIN98_GMT_MINUS_03_A      = "(GMT-03:00) Brasilia"
WINME_GMT_MINUS_03_A      = "(GMT-03:00) Brasilia"
MAP95_GMT_MINUS_03_A      = "065"
MAP98_GMT_MINUS_03_A      = "065"
MAPME_GMT_MINUS_03_A      = "065"

WIN95_GMT_MINUS_03_B      = "(GMT-03:00) Buenos Aires, Georgetown"
WIN98_GMT_MINUS_03_B      = "(GMT-03:00) Buenos Aires, Georgetown"
WINME_GMT_MINUS_03_B      = "(GMT-03:00) Buenos Aires, Georgetown"
MAP95_GMT_MINUS_03_B      = "070"
MAP98_GMT_MINUS_03_B      = "070"
MAPME_GMT_MINUS_03_B      = "070"

WINME_GMT_MINUS_03_C      = "(GMT-03:00) Greenland"
MAPME_GMT_MINUS_03_C      = "073"

WIN95_GMT_MINUS_0330_A    = "(GMT-03:30) Newfoundland"
WIN98_GMT_MINUS_0330_A    = "(GMT-03:30) Newfoundland"
WINME_GMT_MINUS_0330_A    = "(GMT-03:30) Newfoundland"
MAP95_GMT_MINUS_0330_A    = "060"
MAP98_GMT_MINUS_0330_A    = "060"
MAPME_GMT_MINUS_0330_A    = "060"

WIN95_GMT_MINUS_04_A      = "(GMT-04:00) Atlantic Time (Canada)"
WIN98_GMT_MINUS_04_A      = "(GMT-04:00) Atlantic Time (Canada)"
WINME_GMT_MINUS_04_A      = "(GMT-04:00) Atlantic Time (Canada)"
MAP95_GMT_MINUS_04_A      = "050"
MAP98_GMT_MINUS_04_A      = "050"
MAPME_GMT_MINUS_04_A      = "050"

WIN95_GMT_MINUS_04_B      = "(GMT-04:00) Caracas, La Paz"
WIN98_GMT_MINUS_04_B      = "(GMT-04:00) Caracas, La Paz"
WINME_GMT_MINUS_04_B      = "(GMT-04:00) Caracas, La Paz"
MAP95_GMT_MINUS_04_B      = "055"
MAP98_GMT_MINUS_04_B      = "055"
MAPME_GMT_MINUS_04_B      = "055"

WINME_GMT_MINUS_04_C      = "(GMT-04:00) Santiago"
MAPME_GMT_MINUS_04_C      = "056"

WIN95_GMT_MINUS_05_A      = "(GMT-05:00) Eastern Time (US & Canada)"
WIN98_GMT_MINUS_05_A      = "(GMT-05:00) Eastern Time (US & Canada)"
WINME_GMT_MINUS_05_A      = "(GMT-05:00) Eastern Time (US & Canada)"
MAP95_GMT_MINUS_05_A      = "035"
MAP98_GMT_MINUS_05_A      = "035"
MAPME_GMT_MINUS_05_A      = "035"

WIN95_GMT_MINUS_05_B      = "(GMT-05:00) Bogota, Lima"
WIN98_GMT_MINUS_05_B      = "(GMT-05:00) Bogota, Lima, Quito"
WINME_GMT_MINUS_05_B      = "(GMT-05:00) Bogota, Lima, Quito"
MAP95_GMT_MINUS_05_B      = "045"
MAP98_GMT_MINUS_05_B      = "045"
MAPME_GMT_MINUS_05_B      = "045"

WIN95_GMT_MINUS_05_C      = "(GMT-05:00) Indiana (East)"
WIN98_GMT_MINUS_05_C      = "(GMT-05:00) Indiana (East)"
WINME_GMT_MINUS_05_C      = "(GMT-05:00) Indiana (East)"
MAP95_GMT_MINUS_05_C      = "040"
MAP98_GMT_MINUS_05_C      = "040"
MAPME_GMT_MINUS_05_C      = "040"

WIN95_GMT_MINUS_06_A      = "(GMT-06:00) Saskatchewan"
WIN98_GMT_MINUS_06_A      = "(GMT-06:00) Saskatchewan"
WINME_GMT_MINUS_06_A      = "(GMT-06:00) Saskatchewan"
MAP95_GMT_MINUS_06_A      = "025"
MAP98_GMT_MINUS_06_A      = "025"
MAPME_GMT_MINUS_06_A      = "025"

WIN95_GMT_MINUS_06_B      = "(GMT-06:00) Central Time (US & Canada)"
WIN98_GMT_MINUS_06_B      = "(GMT-06:00) Central Time (US & Canada)"
WINME_GMT_MINUS_06_B      = "(GMT-06:00) Central Time (US & Canada)"
MAP95_GMT_MINUS_06_B      = "020"
MAP98_GMT_MINUS_06_B      = "020"
MAPME_GMT_MINUS_06_B      = "020"

WIN95_GMT_MINUS_06_C      = "(GMT-06:00) Mexico City, Tegucigalpa"
WIN98_GMT_MINUS_06_C      = "(GMT-06:00) Mexico City, Tegucigalpa"
MAP95_GMT_MINUS_06_C      = "030"
MAP98_GMT_MINUS_06_C      = "030"

WIN95_GMT_MINUS_06_D      = "(GMT-06:00) Mexico City"
WINME_GMT_MINUS_06_D      = "(GMT-06:00) Mexico City"
MAP95_GMT_MINUS_06_D      = "030"
MAPME_GMT_MINUS_06_D      = "030"

WINME_GMT_MINUS_06_E      = "(GMT-06:00) Central America"
MAPME_GMT_MINUS_06_E      = "033"

WIN95_GMT_MINUS_07_A      = "(GMT-07:00) Mountain Time (US & Canada)"
WIN98_GMT_MINUS_07_A      = "(GMT-07:00) Mountain Time (US & Canada)"
WINME_GMT_MINUS_07_A      = "(GMT-07:00) Mountain Time (US & Canada)"
MAP95_GMT_MINUS_07_A      = "010"
MAP98_GMT_MINUS_07_A      = "010"
MAPME_GMT_MINUS_07_A      = "010"

WIN95_GMT_MINUS_07_B      = "(GMT-07:00) Arizona"
WIN98_GMT_MINUS_07_B      = "(GMT-07:00) Arizona"
WINME_GMT_MINUS_07_B      = "(GMT-07:00) Arizona"
MAP95_GMT_MINUS_07_B      = "015"
MAP98_GMT_MINUS_07_B      = "015"
MAPME_GMT_MINUS_07_B      = "015"

WIN95_GMT_MINUS_08_A      = "(GMT-08:00) Pacific Time (US & Canada); Tijuana"
WIN98_GMT_MINUS_08_A      = "(GMT-08:00) Pacific Time (US & Canada); Tijuana"
WINME_GMT_MINUS_08_A      = "(GMT-08:00) Pacific Time (US & Canada); Tijuana"
MAP95_GMT_MINUS_08_A      = "004"
MAP98_GMT_MINUS_08_A      = "004"
MAPME_GMT_MINUS_08_A      = "004"

WIN95_GMT_MINUS_09_A      = "(GMT-09:00) Alaska"
WIN98_GMT_MINUS_09_A      = "(GMT-09:00) Alaska"
WINME_GMT_MINUS_09_A      = "(GMT-09:00) Alaska"
MAP95_GMT_MINUS_09_A      = "003"
MAP98_GMT_MINUS_09_A      = "003"
MAPME_GMT_MINUS_09_A      = "003"

WIN95_GMT_MINUS_10_A      = "(GMT-10:00) Hawaii"
WIN98_GMT_MINUS_10_A      = "(GMT-10:00) Hawaii"
WINME_GMT_MINUS_10_A      = "(GMT-10:00) Hawaii"
MAP95_GMT_MINUS_10_A      = "002"
MAP98_GMT_MINUS_10_A      = "002"
MAPME_GMT_MINUS_10_A      = "002"

WIN95_GMT_MINUS_11_A      = "(GMT-11:00) Midway Island, Samoa"
WIN98_GMT_MINUS_11_A      = "(GMT-11:00) Midway Island, Samoa"
WINME_GMT_MINUS_11_A      = "(GMT-11:00) Midway Island, Samoa"
MAP95_GMT_MINUS_11_A      = "001"
MAP98_GMT_MINUS_11_A      = "001"
MAPME_GMT_MINUS_11_A      = "001"

WIN95_GMT_MINUS_12_A      = "(GMT-12:00) Eniwetok, Kwajalein"
WIN98_GMT_MINUS_12_A      = "(GMT-12:00) Eniwetok, Kwajalein"
WINME_GMT_MINUS_12_A      = "(GMT-12:00) Eniwetok, Kwajalein"
MAP95_GMT_MINUS_12_A      = "000"
MAP98_GMT_MINUS_12_A      = "000"
MAPME_GMT_MINUS_12_A      = "000"

WIN95_GMT_PLUS_00_A       = "(GMT) Greenwich Mean Time; Dublin, Edinburgh, London"
WIN98_GMT_PLUS_00_A       = "(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London"
WINME_GMT_PLUS_00_A       = "(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London"
MAP95_GMT_PLUS_00_A       = "085"
MAP98_GMT_PLUS_00_A       = "085"
MAPME_GMT_PLUS_00_A       = "085"

WIN95_GMT_PLUS_00_B       = "(GMT) Monrovia, Casablanca"
WIN98_GMT_PLUS_00_B       = "(GMT) Casablanca, Monrovia"
WINME_GMT_PLUS_00_B       = "(GMT) Casablanca, Monrovia"
MAP95_GMT_PLUS_00_B       = "090"
MAP98_GMT_PLUS_00_B       = "090"
MAPME_GMT_PLUS_00_B       = "090"

WIN95_GMT_PLUS_00_C       = "(GMT) Greenwich Mean Time; Dublin, Edinburgh, London, Lisbon"
MAP95_GMT_PLUS_00_C       = "085"

WIN98_GMT_PLUS_01_A       = "(GMT+01:00) Beograd, Sarajevo, Skoplje, Sofija, Zagreb"
MAP98_GMT_PLUS_01_A       = "100,095"

WIN95_GMT_PLUS_01_B       = "(GMT+01:00) Prague, Bratislava"
WIN98_GMT_PLUS_01_B       = "(GMT+01:00) Bratislava, Budapest, Ljubljana, Prague, Warsaw"
MAP95_GMT_PLUS_01_B       = "095"
MAP98_GMT_PLUS_01_B       = "095,100"

WIN95_GMT_PLUS_01_C       = "(GMT+01:00) Paris, Madrid"
WIN98_GMT_PLUS_01_C       = "(GMT+01:00) Brussels, Copenhagen, Madrid, Paris, Vilnius"
MAP95_GMT_PLUS_01_C       = "105"
MAP98_GMT_PLUS_01_C       = "105,100"

WIN95_GMT_PLUS_01_D       = "(GMT+01:00) Berlin, Stockholm, Rome, Bern, Brussels, Vienna, Amsterdam"
WIN98_GMT_PLUS_01_D       = "(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna"
MAP95_GMT_PLUS_01_D       = "105,110"
MAP98_GMT_PLUS_01_D       = "110"

WIN95_GMT_PLUS_01_E       = "(GMT+01:00) Lisbon, Warsaw"
MAP95_GMT_PLUS_01_E       = "085,100"

WIN98_GMT_PLUS_01_F       = "(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague"
WINME_GMT_PLUS_01_F       = "(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague"
MAP98_GMT_PLUS_01_F       = "095"
MAPME_GMT_PLUS_01_F       = "095"

WIN98_GMT_PLUS_01_G       = "(GMT+01:00) Sarajevo, Skopje, Sofija, Warsaw, Zagreb"
MAP98_GMT_PLUS_01_G       = "100"

WIN95_GMT_PLUS_01_H       = "(GMT+01:00) Warsaw"
MAP95_GMT_PLUS_01_H       = "100"

WIN95_GMT_PLUS_01_I       = "(GMT+01:00) Prague"
MAP95_GMT_PLUS_01_I       = "095"

WINME_GMT_PLUS_01_J       = "(GMT+01:00) Sarajevo, Skopje, Sofija, Vilnius, Warsaw, Zagreb"
MAP98_GMT_PLUS_01_J       = "100"

WINME_GMT_PLUS_01_K       = "(GMT+01:00) Brussels, Copenhagen, Madrid, Paris"
MAPME_GMT_PLUS_01_K       = "105"

WINME_GMT_PLUS_01_L       = "(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna"
MAPME_GMT_PLUS_01_L       = "110"

WINME_GMT_PLUS_01_M       = "(GMT+01:00) West Central Africa"
MAPME_GMT_PLUS_01_M       = "113"

WIN95_GMT_PLUS_02_A       = "(GMT+02:00) Eastern Europe"
WIN98_GMT_PLUS_02_A       = "(GMT+02:00) E. Europe"
MAP95_GMT_PLUS_02_A       = "115"
MAP98_GMT_PLUS_02_A       = "115"

WIN95_GMT_PLUS_02_B       = "(GMT+02:00) Cairo"
WIN98_GMT_PLUS_02_B       = "(GMT+02:00) Cairo"
WINME_GMT_PLUS_02_B       = "(GMT+02:00) Cairo"
MAP95_GMT_PLUS_02_B       = "120"
MAP98_GMT_PLUS_02_B       = "120"
MAPME_GMT_PLUS_02_B       = "120"

WIN98_GMT_PLUS_02_C       = "(GMT+02:00) Helsinki"
MAP98_GMT_PLUS_02_C       = "125"

WIN95_GMT_PLUS_02_D       = "(GMT+02:00) Athens, Helsinki, Istanbul"
WIN98_GMT_PLUS_02_D       = "(GMT+02:00) Athens, Istanbul, Minsk"
WINME_GMT_PLUS_02_D       = "(GMT+02:00) Athens, Istanbul, Minsk"
MAP95_GMT_PLUS_02_D       = "125,130"
MAP98_GMT_PLUS_02_D       = "130"
MAPME_GMT_PLUS_02_D       = "130"

WIN95_GMT_PLUS_02_E       = "(GMT+02:00) Israel"
WIN98_GMT_PLUS_02_E       = "(GMT+02:00) Israel"
MAP95_GMT_PLUS_02_E       = "135"
MAP98_GMT_PLUS_02_E       = "135"

WIN95_GMT_PLUS_02_F       = "(GMT+02:00) Harare, Pretoria"
WIN98_GMT_PLUS_02_F       = "(GMT+02:00) Harare, Pretoria"
WINME_GMT_PLUS_02_F       = "(GMT+02:00) Harare, Pretoria"
MAP95_GMT_PLUS_02_F       = "140"
MAP98_GMT_PLUS_02_F       = "140"
MAPME_GMT_PLUS_02_F       = "140"

WIN98_GMT_PLUS_02_G       = "(GMT+02:00) Bucharest"
WINME_GMT_PLUS_02_G       = "(GMT+02:00) Bucharest"
MAP98_GMT_PLUS_02_G       = "115"
MAPME_GMT_PLUS_02_G       = "115"

WIN98_GMT_PLUS_02_H       = "(GMT+02:00) Helsinki, Riga, Tallinn"
WINME_GMT_PLUS_02_H       = "(GMT+02:00) Helsinki, Riga, Tallinn"
MAP98_GMT_PLUS_02_H       = "125"
MAPME_GMT_PLUS_02_H       = "125"

WIN98_GMT_PLUS_02_I       = "(GMT+02:00) Jerusalem"
WINME_GMT_PLUS_02_I       = "(GMT+02:00) Jerusalem"
MAP98_GMT_PLUS_02_I       = "135"
MAPME_GMT_PLUS_02_I       = "135"

WIN95_GMT_PLUS_03_A       = "(GMT+03:00) Moscow, St. Petersburg"
WIN98_GMT_PLUS_03_A       = "(GMT+03:00) Moscow, St. Petersburg, Volgograd"
WINME_GMT_PLUS_03_A       = "(GMT+03:00) Moscow, St. Petersburg, Volgograd"
MAP95_GMT_PLUS_03_A       = "145"
MAP98_GMT_PLUS_03_A       = "145"
MAPME_GMT_PLUS_03_A       = "145"

WIN95_GMT_PLUS_03_B       = "(GMT+03:00) Baghdad, Kuwait, Nairobi, Riyadh"
WIN98_GMT_PLUS_03_B       = "(GMT+03:00) Baghdad, Kuwait, Riyadh"
WINME_GMT_PLUS_03_B       = "(GMT+03:00) Kuwait, Riyadh"
MAP95_GMT_PLUS_03_B       = "150,155,158"
MAP98_GMT_PLUS_03_B       = "150,158"
MAPME_GMT_PLUS_03_B       = "150"

WIN98_GMT_PLUS_03_C       = "(GMT+03:00) Nairobi"
WINME_GMT_PLUS_03_C       = "(GMT+03:00) Nairobi"
MAP98_GMT_PLUS_03_C       = "155"
MAPME_GMT_PLUS_03_C       = "155"

WINME_GMT_PLUS_03_D       = "(GMT+03:00) Baghdad"
MAPME_GMT_PLUS_03_D       = "158"

WIN95_GMT_PLUS_0330_A     = "(GMT+03:30) Tehran"
WIN98_GMT_PLUS_0330_A     = "(GMT+03:30) Tehran"
WINME_GMT_PLUS_0330_A     = "(GMT+03:30) Tehran"
MAP95_GMT_PLUS_0330_A     = "160"
MAP98_GMT_PLUS_0330_A     = "160"
MAPME_GMT_PLUS_0330_A     = "160"

WIN95_GMT_PLUS_04_A       = "(GMT+04:00) Abu Dhabi, Muscat, Tbilisi, Kazan, Volgograd"
WIN98_GMT_PLUS_04_A       = "(GMT+04:00) Abu Dhabi, Muscat"
WINME_GMT_PLUS_04_A       = "(GMT+04:00) Abu Dhabi, Muscat"
MAP95_GMT_PLUS_04_A       = "145,165,170"
MAP98_GMT_PLUS_04_A       = "165"
MAPME_GMT_PLUS_04_A       = "165"

WIN98_GMT_PLUS_04_B       = "(GMT+04:00) Baku, Tbilisi"
WINME_GMT_PLUS_04_B       = "(GMT+04:00) Baku, Tbilisi, Yerevan"
MAP98_GMT_PLUS_04_B       = "170"
MAPME_GMT_PLUS_04_B       = "170"

WIN95_GMT_PLUS_0430_A     = "(GMT+04:30) Kabul"
WIN98_GMT_PLUS_0430_A     = "(GMT+04:30) Kabul"
WINME_GMT_PLUS_0430_A     = "(GMT+04:30) Kabul"
MAP95_GMT_PLUS_0430_A     = "175"
MAP98_GMT_PLUS_0430_A     = "175"
MAPME_GMT_PLUS_0430_A     = "175"

WIN95_GMT_PLUS_05_A       = "(GMT+05:00) Islamabad, Karachi, Ekaterinburg, Tashkent"
WIN98_GMT_PLUS_05_A       = "(GMT+05:00) Islamabad, Karachi, Tashkent"
WINME_GMT_PLUS_05_A       = "(GMT+05:00) Islamabad, Karachi, Tashkent"
MAP95_GMT_PLUS_05_A       = "180,185"
MAP98_GMT_PLUS_05_A       = "185"
MAPME_GMT_PLUS_05_A       = "185"

WIN98_GMT_PLUS_05_B       = "(GMT+05:00) Ekaterinburg"
WINME_GMT_PLUS_05_B       = "(GMT+05:00) Ekaterinburg"
MAP98_GMT_PLUS_05_B       = "180"
MAPME_GMT_PLUS_05_B       = "180"

WIN95_GMT_PLUS_0530_A     = "(GMT+05:30) Bombay, Calcutta, Madras, New Delhi, Colombo"
WIN98_GMT_PLUS_0530_A     = "(GMT+05:30) Bombay, Calcutta, Madras, New Delhi"
WINME_GMT_PLUS_0530_A     = "(GMT+05:30) Calcutta, Chennai, Mumbai, New Delhi"
MAP95_GMT_PLUS_0530_A     = "190,200"
MAP98_GMT_PLUS_0530_A     = "190"
MAPME_GMT_PLUS_0530_A     = "190"

WINME_GMT_PLUS_0545_A     = "(GMT+05:45) Kathmandu"
MAPME_GMT_PLUS_0545_A     = "193"

WIN95_GMT_PLUS_06_A       = "(GMT+06:00) Almaty, Dhaka"
WIN98_GMT_PLUS_06_A       = "(GMT+06:00) Almaty, Dhaka"
WINME_GMT_PLUS_06_A       = "(GMT+06:00) Astana, Dhaka"
MAP95_GMT_PLUS_06_A       = "195,201"
MAP98_GMT_PLUS_06_A       = "195,201"
MAPME_GMT_PLUS_06_A       = "195"

WIN98_GMT_PLUS_06_B       = "(GMT+06:00) Colombo"
MAP98_GMT_PLUS_06_B       = "200"

WINME_GMT_PLUS_06_C       = "(GMT+06:00) Sri Jayawardenepura"
MAPME_GMT_PLUS_06_C       = "200"

WINME_GMT_PLUS_06_D       = "(GMT+06:00) Almaty, Novosibirsk"
MAPME_GMT_PLUS_06_D       = "201"

WINME_GMT_PLUS_0630_A     = "(GMT+06:30) Rangoon"
MAPME_GMT_PLUS_0630_A     = "203"

WIN95_GMT_PLUS_07_A       = "(GMT+07:00) Bangkok, Jakarta, Hanoi"
WIN98_GMT_PLUS_07_A       = "(GMT+07:00) Bangkok, Hanoi, Jakarta"
WINME_GMT_PLUS_07_A       = "(GMT+07:00) Bangkok, Hanoi, Jakarta"
MAP95_GMT_PLUS_07_A       = "205"
MAP98_GMT_PLUS_07_A       = "205"
MAPME_GMT_PLUS_07_A       = "205"

WINME_GMT_PLUS_07_B       = "(GMT+07:00) Krasnoyarsk"
MAPME_GMT_PLUS_07_B       = "207"

WIN95_GMT_PLUS_08_A       = "(GMT+08:00) Beijing, Chongqing, Urumqi"
WIN98_GMT_PLUS_08_A       = "(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi"
WINME_GMT_PLUS_08_A       = "(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi"
MAP95_GMT_PLUS_08_A       = "210"
MAP98_GMT_PLUS_08_A       = "210"
MAPME_GMT_PLUS_08_A       = "210"

WIN95_GMT_PLUS_08_B       = "(GMT+08:00) Hong Kong, Perth, Singapore, Taipei"
WIN98_GMT_PLUS_08_B       = "(GMT+08:00) Singapore"
WINME_GMT_PLUS_08_B       = "(GMT+08:00) Kuala Lumpur, Singapore"
MAP95_GMT_PLUS_08_B       = "210,215,220,225"
MAP98_GMT_PLUS_08_B       = "215"
MAPME_GMT_PLUS_08_B       = "215"

WIN98_GMT_PLUS_08_C       = "(GMT+08:00) Taipei"
WINME_GMT_PLUS_08_C       = "(GMT+08:00) Taipei"
MAP98_GMT_PLUS_08_C       = "220"
MAPME_GMT_PLUS_08_C       = "220"

WIN98_GMT_PLUS_08_D       = "(GMT+08:00) Perth"
WINME_GMT_PLUS_08_D       = "(GMT+08:00) Perth"
MAP98_GMT_PLUS_08_D       = "225"
MAPME_GMT_PLUS_08_D       = "225"

WINME_GMT_PLUS_08_E       = "(GMT+08:00) Irkutsk, Ulaan Bataar"
MAPME_GMT_PLUS_08_E       = "227"

WIN95_GMT_PLUS_09_A       = "(GMT+09:00) Tokyo, Osaka, Sapporo, Seoul, Yakutsk"
WIN98_GMT_PLUS_09_A       = "(GMT+09:00) Osaka, Sapporo, Tokyo"
WINME_GMT_PLUS_09_A       = "(GMT+09:00) Osaka, Sapporo, Tokyo"
MAP95_GMT_PLUS_09_A       = "230,235,240"
MAP98_GMT_PLUS_09_A       = "235"
MAPME_GMT_PLUS_09_A       = "235"

WIN98_GMT_PLUS_09_B       = "(GMT+09:00) Seoul"
WINME_GMT_PLUS_09_B       = "(GMT+09:00) Seoul"
MAP98_GMT_PLUS_09_B       = "230"
MAPME_GMT_PLUS_09_B       = "230"

WIN98_GMT_PLUS_09_C       = "(GMT+09:00) Yakutsk"
WINME_GMT_PLUS_09_C       = "(GMT+09:00) Yakutsk"
MAP98_GMT_PLUS_09_C       = "240"
MAPME_GMT_PLUS_09_C       = "240"

WIN95_GMT_PLUS_0930_A     = "(GMT+09:30) Darwin"
WIN98_GMT_PLUS_0930_A     = "(GMT+09:30) Darwin"
WINME_GMT_PLUS_0930_A     = "(GMT+09:30) Darwin"
MAP95_GMT_PLUS_0930_A     = "245"
MAP98_GMT_PLUS_0930_A     = "245"
MAPME_GMT_PLUS_0930_A     = "245"

WIN95_GMT_PLUS_0930_B     = "(GMT+09:30) Adelaide"
WIN98_GMT_PLUS_0930_B     = "(GMT+09:30) Adelaide"
WINME_GMT_PLUS_0930_B     = "(GMT+09:30) Adelaide"
MAP95_GMT_PLUS_0930_B     = "250"
MAP98_GMT_PLUS_0930_B     = "250"
MAPME_GMT_PLUS_0930_B     = "250"

WIN95_GMT_PLUS_10_A       = "(GMT+10:00) Brisbane, Melbourne, Sydney"
WIN98_GMT_PLUS_10_A       = "(GMT+10:00) Canberra, Melbourne, Sydney"
WINME_GMT_PLUS_10_A       = "(GMT+10:00) Canberra, Melbourne, Sydney"
MAP95_GMT_PLUS_10_A       = "255,260"
MAP98_GMT_PLUS_10_A       = "255"
MAPME_GMT_PLUS_10_A       = "255"

WIN95_GMT_PLUS_10_B       = "(GMT+10:00) Hobart"
WIN98_GMT_PLUS_10_B       = "(GMT+10:00) Hobart"
WINME_GMT_PLUS_10_B       = "(GMT+10:00) Hobart"
MAP95_GMT_PLUS_10_B       = "265"
MAP98_GMT_PLUS_10_B       = "265"
MAPME_GMT_PLUS_10_B       = "265"

WIN95_GMT_PLUS_10_C       = "(GMT+10:00) Guam, Port Moresby, Vladivostok"
WIN98_GMT_PLUS_10_C       = "(GMT+10:00) Guam, Port Moresby"
WINME_GMT_PLUS_10_C       = "(GMT+10:00) Guam, Port Moresby"
MAP95_GMT_PLUS_10_C       = "270,275"
MAP98_GMT_PLUS_10_C       = "275"
MAPME_GMT_PLUS_10_C       = "275"

WIN98_GMT_PLUS_10_D       = "(GMT+10:00) Vladivostok"
WINME_GMT_PLUS_10_D       = "(GMT+10:00) Vladivostok"
MAP98_GMT_PLUS_10_D       = "270"
MAPME_GMT_PLUS_10_D       = "270"

WIN98_GMT_PLUS_10_E       = "(GMT+10:00) Brisbane"
WINME_GMT_PLUS_10_E       = "(GMT+10:00) Brisbane"
MAP98_GMT_PLUS_10_E       = "260"
MAPME_GMT_PLUS_10_E       = "260"

WINME_GMT_PLUS_10_F       = "(GMT+10:00) Canberra, Melbourne, Sydney (Year 2000 only)"
MAPME_GMT_PLUS_10_F       = "255"

WIN95_GMT_PLUS_11_A       = "(GMT+11:00) Magadan, Solomon Is., New Caledonia"
WIN98_GMT_PLUS_11_A       = "(GMT+11:00) Magadan, Solomon Is., New Caledonia"
WINME_GMT_PLUS_11_A       = "(GMT+11:00) Magadan, Solomon Is., New Caledonia"
MAP95_GMT_PLUS_11_A       = "280"
MAP98_GMT_PLUS_11_A       = "280"
MAPME_GMT_PLUS_11_A       = "280"

WIN95_GMT_PLUS_12_A       = "(GMT+12:00) Fiji, Kamchatka, Marshall Is."
WIN98_GMT_PLUS_12_A       = "(GMT+12:00) Fiji, Kamchatka, Marshall Is."
WINME_GMT_PLUS_12_A       = "(GMT+12:00) Fiji, Kamchatka, Marshall Is."
MAP95_GMT_PLUS_12_A       = "285"
MAP98_GMT_PLUS_12_A       = "285"
MAPME_GMT_PLUS_12_A       = "285"

WIN95_GMT_PLUS_12_B       = "(GMT+12:00) Wellington, Auckland"
WIN98_GMT_PLUS_12_B       = "(GMT+12:00) Auckland, Wellington"
WINME_GMT_PLUS_12_B       = "(GMT+12:00) Auckland, Wellington"
MAP95_GMT_PLUS_12_B       = "290"
MAP98_GMT_PLUS_12_B       = "290"
MAPME_GMT_PLUS_12_B       = "290"

WINME_GMT_PLUS_13_A       = "(GMT+13:00) Nuku'alofa"
MAPME_GMT_PLUS_13_A       = "300"

@*:
@*: Display text for PNP enumerators
@*:
BIOS    = Motherboard Device
FLOP    = Floppy Disk Drive
ISAPNP  = Plug-and-Play ISA Device
MF      = Multi-Function Device
MONITOR = Monitor Device
NETWORK = Network Device
PCI     = Plug-and-Play PCI Device
ROOT    = System Device
SCSI    = SCSI Device
VIRTUAL = Emulation Device
PCMCIA  = Plug-and-Play PCMCIA Device
MCA     = Plug-and-Play MicroChannel Device

@*:
@*: beta 2 warnings
@*:
Beta2Unimplemented = "Program Notes"
RAD="Remote Administration"
RemoteAdmin = "Remote Administration settings will not be preserved."

@*:
@*: Pre-upgrade blocker messages (i.e. please uninstall your virus checker)
@*:
InocuLAN_Warning = "You must uninstall all virus protection programs before running Setup. Do you want to quit Setup now?"
Norton_Warning = "You must uninstall the Norton Anti-Virus program before running Setup. Do you want to quit Setup now?"
McAfee_Warning = "You must uninstall the McAfee virus protection program before running Setup. Do you want to quit Setup now?"
Norton_YEO_Warning = "You must uninstall the Norton Your Eyes Only program before running Setup. Do you want to quit Setup now?"

@*:
@*: Real incompatibilities
@*:
SAGE-MSG="This program may have compatibility issues on this version of Windows."
DUS="Dial-Up Server"
DUS-MSG="After Setup is complete, your computer will no longer accept calls from other computers. You will need to reconfigure your dial-up server in order to re-enable this feature."
MS_Network="The Microsoft Network"
Network_Connection_Protocol = "Network Connection Protocol"
NetBEUI-MSG="Support for the NETBEUI protocol is not available in Windows XP. For networks using NETBEUI, install TCP/IP on all machines or devices to maintain network connectivity."
NWCLI= "Client for Netware Networks"
MSDLC32-MSG="The MSDLC32 network protocol is no longer supported in Windows XP. Windows XP automatically installs TCP/IP as the default network connection protocol. Your programs and hardware that depend on the MSDLC32 network protocol will not function after the upgrade to Windows XP."
MSDLC-MSG="The MSDLC network protocol is no longer supported in Windows XP. Windows XP automatically installs TCP/IP as the default network connection protocol. Your programs and hardware that depend on the MSDLC network protocol will not function after the upgrade to Windows XP."
@*:
@*: VPN client messages
SafeNet_L2TP_IPSec="L2TP/IPSec VPN client"
SafeNet_UDP_IPSec="UDP/IPSec VPN client"
SafeNet_ClientMessage="A driver is installed that causes stability problems with your system, and will be disabled.  All of its features are part of the Windows operating system being installed."
@*:
@*: Bad system Configuration messages
@*:
BadSystemConfig="Bad System Configuration"
BadSystemConfig-MSG="Setup detected an invalid system configuration, which is usually caused by viruses. Go to <A HREF=""http://support.microsoft.com/support/misc/kblookup.asp?id=311446"">KB Article Q311446</A> and follow the instructions there."


@*:
@*: Profile rename
@*:
%up%=%USERPROFILE%

@*:
@*: Default names for shell folder directories as they appear on Win9x systems. These should exactly match
@*: the name of the directories on Win9x systems.
@*:
CommonDesktop_Long = All Users\Desktop
CommonDesktop_Short = AllUsers\Desktop
CommonFavorites_Long = All Users\Favorites
CommonFavorites_Short = AllUsers\Favorite
CommonPrograms_Long = All Users\Start Menu\Programs
CommonPrograms_Short = AllUsers\StrtMenu\Programs
CommonStartMenu_Long = All Users\Start Menu
CommonStartMenu_Short = AllUsers\StrtMenu
CommonStartup_Long = All Users\Start Menu\Programs\StartUp
CommonStartup_Short = AllUsers\StrtMenu\Programs\StartUp
CommonAppData_Long = All Users\Application Data
CommonAppData_Short = AllUsers\AppData
CommonPersonal_Long = My Documents
CommonPersonal_Short = Docs
CommonMusic_Long = My Music
CommonMusic_Short = My Music
CommonPictures_Long = My Pictures
CommonPictures_Short = MyPics
CommonVideo_Long = My Videos
CommonVideo_Short = My Videos
AdministrativeTools_Long = Start Menu\Programs\Administrative Tools
AdministrativeTools_Short = StrtMenu\Programs\Administrative Tools
CommonAdministrativeTools_Long = Start Menu\Programs\Administrative Tools
CommonAdministrativeTools_Short = StrtMenu\Programs\Administrative Tools
Desktop_Long = Desktop
Desktop_Short = Desktop
StartUp_Long = Start Menu\Programs\StartUp
StartUp_Short = StrtMenu\Programs\StartUp
AppData_Long = Application Data
AppData_Short = AppData
LocalSettings_Long = Local Settings
LocalSettings_Short = LocalSet
LocalAppData_Long = Local Settings\Application Data
LocalAppData_Short = LocalSet\AppData
Cache_Long = Temporary Internet Files
Cache_Short = Cache
Cookies_Long = Cookies
Cookies_Short = Cookies
Favorites_Long = Favorites
Favorites_Short = Favorite
Font_Long = Fonts
Font_Short = Fonts
History_Long = History
History_Short = History
NetHood_Long = NetHood
NetHood_Short = NetHood
Personal_Long = My Documents
Personal_Short = MyDocs
My_Pictures_Long = My Pictures
My_Pictures_Short = MyPics
My_Music_Long = My Music
My_Music_Short = MyMusic
My_Video_Long = My Videos
My_Video_Short = MyVideo
PrintHood_Long = PrintHood
PrintHood_Short = PrtHood
Programs_Long = Start Menu\Programs
Programs_Short = StrtMenu\Programs
Recent_Long = Recent
Recent_Short = Recent
SendTo_Long = SendTo
SendTo_Short = SendTo
StartMenu_Long = Start Menu
StartMenu_Short = StrtMenu
Templates_Long = ShellNew
Templates_Short = ShellNew
Templates_Long_Me = Templates
Templates_Short_Me = Template

@*:
@*: Better PNP Descriptions
@*:
cpq3004 = "COMPAQ Presario FX700 Monitor Controls"
wac0608 = "Wacom Digital Writing Tablets"


@*:
@*: *** IMPORTANT LOCALIZATION INFO ***
@*:
@*: The following "SendTo" items must be localized to match Win9x.
@*:
@*: Example:
@*:
@*:   Mail Recipient.MAPIMail is a file normally in c:\windows\sendto directory.  On some
@*:   versions of Win9x, the file "Mail Recipient.MAPIMail" is localized, on others it
@*:   is not.
@*:
@*: The strings below MUST be localized to match how the Win9x system was localized.  Also,
@*: each release of Win9x (gold, OSR2, Win98, etc.) may be different.
@*:
@*: DO NOT change this string if it was not localized on Win9x.
@*:
MapiMail.Win95Gold = "Mail Recipient.MAPIMail"
MapiMail.Win95Osr2 = "Mail Recipient.MAPIMail"
MapiMail.Win95Osr25 = "Mail Recipient.MAPIMail"
MapiMail.Win98 = "Mail Recipient.MAPIMail"
MapiMail.Win98SE = "Mail Recipient.MAPIMail"
MapiMail.WinME = "Mail Recipient.MAPIMail"
DeskLink.Win95Gold = "Desktop as Shortcut.DeskLink"
DeskLink.Win95Osr2 = "Desktop as Shortcut.DeskLink"
DeskLink.Win95Osr25 = "Desktop as Shortcut.DeskLink"
DeskLink.Win98 = "Desktop as Shortcut.DeskLink"
DeskLink.Win98SE = "Desktop (create shortcut).DeskLink"
DeskLink.WinME = "Desktop (create shortcut).DeskLink"
MyDocs.Win95Gold = "My Documents.mydocs"
MyDocs.Win95Osr2 = "My Documents.mydocs"
MyDocs.Win95Osr25 = "My Documents.mydocs"
MyDocs.Win98 = "My Documents.mydocs"
MyDocs.Win98SE = "My Documents.mydocs"
MyDocs.WinME = "My Documents.mydocs"
ZFSendToTarget.WinME = "Compressed Folder.ZFSendToTarget"

@*:
@*: This is the Accessories directory found in %ProgramFiles%.
@*: If this directory is not localized, do not change this string.
@*:
Accessories = Accessories

@*:
@*: The next items are for renaming some directories during upgrade. This is targeted for localized builds that
@*: had some non-localized directories on 9x that became localized on NT or that need to change the names
@*: of the directories during upgrade.
@*:
@*: The items here are:
@*: - Accessories (this is the Accessories folder from Start Menu\Programs)
@*: - Accessibility (this is the Accessories folder from Start Menu\Programs\Accessories)
@*: - Multimedia (this is the Multimedia folder from Start Menu\Programs\Accessories)
@*: - Entertainment (this is the Entertainment folder from Start Menu\Programs\Accessories)
@*: - Communications (this is the Communications folder from Start Menu\Programs\Accessories)
@*: - SystemTools (this is the "System Tools" folder from Start Menu\Programs\Accessories)
@*: - Games (this is the Games folder from Start Menu\Programs\Accessories)
@*:
@*: Please be very carefull when you localize these items. They are not translations, they are the actual names
@*: of some directories on 9x and NT systems.
@*: Please be aware that these directories might not be present on all Win9x versions (they might be there for
@*: Win98 but not for Win95 Gold, etc).
@*:
@*: JPN systems!!! - please use SB Katakana and DB Katakana when necessary.
@*:
Accessories9x = Accessories
AccessoriesNt = Accessories
Accessibility9x = Accessibility
AccessibilityNt = Accessibility
Multimedia9x = Multimedia
MultimediaNt = Multimedia
Entertainment9x = Entertainment
EntertainmentNt = Entertainment
Communications9x = Communications
CommunicationsNt = Communications
SystemTools9x = System Tools
SystemToolsNt = System Tools
Games9x = Games
GamesNt = Games
Fax9x = Fax
FaxNt = Fax


@*:
@*: The next item is the active desktop wallpaper installed by NT. On English systems this is
@*: called "Active Desktop Wallpaper.htm" and it's located in %windir%\Web\Wallpaper. Please localize
@*: if needed.
@*:
ActiveDesktopWallpaperNT = "Active Desktop Wallpaper.htm"
ActiveDesktopWallpaperNTLocation = "Web\Wallpaper"

@*:
@*: Sony memory stick
@*:
@*:
@*: localize to match w95upg.dll's .mc resources.  The exact text to match is in
@*: the resource string right before the following text:
@*:
@*: Hardware
@*: --------
@*: This section of the report describes hardware compatibility issues.
@*:
IncompatibleHardware = "Incompatible Hardware"
@*:
@*: Localize normally:
@*:
Sony_Memory_Stick = "Sony Memory Stick"
ESS_ES56CVH-PI_Data_Fax_Voice_Modem = "ESS ES56CVH-PI Data Fax Voice Modem"
TPPWREX = "IBM Thinkpad Power Management Device Driver"
TPPWREXMSG = "This driver controls the Fn+F3 and Fn+F12 keys on your keyboard and will be disabled after upgrade. Please contact your computer manufacturer for an update that works on this version of Windows."

@*:
@*: Localize to match Win9x device manager (install Win9x, start device manager
@*: from the control panel, find the string that groups the disk drives or modems):
@*:
DiskDrives = "Disk Drives"
Modem = "Modem"

@*:
@*: The next items are shortcuts installed by NT. Please localize
@*: if needed.
@*:
@*: Start Menu\Programs\%Accessories%\%Communications%
RemoteDesktopConnectionNT = "Remote Desktop Connection.lnk"
NetworkandDialupConnectionsNT = "Network and Dial-up Connections.lnk"
HyperTerminalNT = "HyperTerminal.lnk"

@*: Start Menu\Programs\%Accessories%\%Entertainment%
CDPlayerNT = "CD Player.lnk"

@*: Start Menu\Programs\%Accessories%\%System Tools%
ActivateWindowsNT = "Activate Windows.lnk"
MigrationWizardNT = "Migration Wizard.lnk"
CharacterMapNT = "Character Map.lnk"

@*: Start Menu\Programs\%Accessories%
WindowsMovieMaker9x = "Windows Movie Maker.lnk"

@*: c:\program files\common files\microsoft shared\Web Folders & Web Server Extensions
Web_Folders = "Web Folders"
Web_Server_Extensions = "Web Server Extensions"

@*: c:\program files\Online
refer_to_a_description_of_internet_service_providers_lnk = "refer to a description of internet service providers.lnk"


@*:
@*: Win9x file names
@*:

zapotec_bmp = "zapotec.bmp"
blue_lace_16_bmp = "blue lace 16.bmp"
soap_bubbles_bmp = "soap bubbles.bmp"
coffee_bean_bmp = "coffee bean.bmp"
feathertexture_bmp = "feathertexture.bmp"
gone_fishing_bmp = "gone fishing.bmp"
greenstone_bmp = "greenstone.bmp"
prairie_wind_bmp = "prairie wind.bmp"
rhododendron_bmp = "rhododendron.bmp"
river_sumida_bmp = "river sumida.bmp"
santa_fe_stucco_bmp = "santa fe stucco.bmp"

@*:
@*: NT file names
@*:

Refer_Me_lnk = "Refer me to more Internet Service Providiers.lnk"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\xscan_xp.txt ===
[Strings]
Msft="Microsoft"
Mfg="Xerox"
XScan.DeviceDesc="Xerox Network Scanners"
JobArrived="Job Arrived"
XScan.SvcDesc="Xerox Network Scanners"
XrxFTPSetupDesc="Xerox FTP Light Setup"
XrxWebTempDesc="Web Template Setup"
XrxXscanUIDesc="XscanUI Setup"

Run         = "Software\Microsoft\Windows\CurrentVersion\Run"
RunOnce     = "Software\Microsoft\Windows\CurrentVersion\RunOnce"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wstcodec.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
SERVICE_KERNEL_DRIVER=1
SERVICE_AUTO_START=2
SERVICE_DEMAND_START=3
SERVICE_ERROR_NORMAL=1

RunOnce="SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"

;----------------
; non-localizeable
;----------------
WSTCODEC.DeviceId="{70BC06E0-5666-11d3-A184-00105AEF9F33}"
Proxy.CLSID="{17CCA71B-ECD7-11D0-B908-00A0C9223196}"	; KsProxy.ax's ID, REQUIRED
VBIcatID="{07DAD660-22F1-11d1-A9F4-00C04FBBDE8F}"
AMcatID="{DA4E3DA0-D07D-11d0-BD50-00A0C911CE86}"

;----------------
; localizeable
;----------------

Msft=                  "Microsoft"
Manufacturer=          "Microsoft"
WSTCODEC.FriendlyName= "WST Codec"
WSTCODEC.DeviceDesc=   "World Standard Teletext Codec"
WDMcodecs=             "WDM Streaming VBI Codecs"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wowlist.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections

[WowData.SetupInfLayout.Exclude]

;
;Following files are intl.inf files present already in layout.inf
;for textmode copy - keyboard layouts etc.
;start intl.inf exclude files

big5.nls            ; Already included in intl.wow
bopomofo.nls        ; Already included in intl.wow
prc.nls             ; Already included in intl.wow
prcp.nls            ; Already included in intl.wow
xjis.nls            ; Already included in intl.wow


#elif LANGUAGE_ID == 0x404
//CHT specific sections

[WowData.SetupInfLayout.Exclude]

;
;Following files are intl.inf files present already in layout.inf
;for textmode copy - keyboard layouts etc.
;start intl.inf exclude files

big5.nls            ; Already included in intl.wow
bopomofo.nls        ; Already included in intl.wow
prc.nls             ; Already included in intl.wow
prcp.nls            ; Already included in intl.wow
xjis.nls            ; Already included in intl.wow

#elif LANGUAGE_ID == 0x411
//JPN specific sections

[WowData.SetupInfLayout.Exclude]

;
;Following files are intl.inf files present already in layout.inf
;for textmode copy - keyboard layouts etc.
;start intl.inf exclude files

big5.nls            ; Already included in intl.wow
bopomofo.nls        ; Already included in intl.wow
prc.nls             ; Already included in intl.wow
prcp.nls            ; Already included in intl.wow
xjis.nls            ; Already included in intl.wow

;
; specifies how a native directory maps to a WOW directory
;
[NativeDataToWowData.DirectoryInformation.Textmode]
;
; japanese IMEs
;
200=230
201=231
202=232
;
; FE shared
;
220=233
221=234


;
; specifies filtering information that defines how files are  ; mapped. All files are mapped based on specified extensions
;
[WowData.Filter]
;
; japanese IMEs
;
DirectoryToMap=200
DirectoryToMap=201
DirectoryToMap=202
;
; FE shared
;
DirectoryToMap=220
DirectoryToMap=221

FileExtensions=drv,exe,dll,ocx,tlb,ax,nls,cpl,rll,mof,tsp,ime,dic,ini
; specifies the extensions to look for



#elif LANGUAGE_ID == 0x412
//KOR specific sections



;
; specifies how a native directory maps to a WOW directory
;
[NativeDataToWowData.DirectoryInformation.Textmode]
;
; Korean IMEs. Currently there are no files in 213 and 214.
;
212=216
213=217
214=218
;
; FE shared
;
220=233
221=234


;
; specifies filtering information that defines how files are  ; mapped. All files are mapped based on specified extensions
;
[WowData.Filter]
;
; Korean IMEs
;
DirectoryToMap=212
DirectoryToMap=213
DirectoryToMap=214
;
; FE shared
;
DirectoryToMap=220
DirectoryToMap=221

FileExtensions=drv,exe,dll,ocx,tlb,ax,nls,cpl,rll,mof,tsp,ime
; specifies the extensions to look for

;
;Specifies files to exclude while processing Component Infs
;Excludes from CopyFiles, RenameFiles, DeleteFiles and RegisterDlls
;If you want to do this only for your INF then copy the section name below and
;create one more appending . and the name of your INF without extension i.e. to apply it
;for foo.inf only use -
; [NativeDataToWowData.SetupINF.FilesToExclude.foo]
;

[NativeDataToWowData.SetupINF.FilesToExclude]
;
; Korean IME6.1 exclude files
;
; Help files
imekr.chm
imekren.chm
korpaden.chm
imepadko.chm
imekr.hlp
imekren.hlp
; Dicts files
imekr.lex
hanjadic.dll
hanja.lex
; Setup files
imkrinst.exe
imkrinst.ini
imekrmig.exe
; Pad files
imekrmbx.dll
hwxkor.dll


;
; specifies list of files to be excluded from layout information
; when processing an INF file and generating the layout.inf append stub
; Useful when the file is used already in layout.inf to also copy during
; textmode. In such a case its WOW stub is already present in layout.inf
; when layout.inf is WOW processed
;

[WowData.SetupInfLayout.Exclude]

;
;Following files are intl.inf files present already in layout.inf
;for textmode copy - keyboard layouts etc.
;start intl.inf exclude files

c_1361.nls
c_10003.nls
big5.nls            ; Already included in intl.wow
bopomofo.nls        ; Already included in intl.wow
prc.nls             ; Already included in intl.wow
prcp.nls            ; Already included in intl.wow
xjis.nls            ; Already included in intl.wow

#endif

// String section below for localizers
[Strings]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\usa\wsh.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID != 0x804 && LANGUAGE_ID != 0x404 && LANGUAGE_ID != 0x411 &&  LANGUAGE_ID != 0x412
// This section is for non-FE (chs,cht,jpn,kor) builds. So english, german, ...
#elif LANGUAGE_ID == 0x804
//CHS specific sections
#elif LANGUAGE_ID == 0x404
//CHT specific sections
#elif LANGUAGE_ID == 0x411
//JPN specific sections
#elif LANGUAGE_ID == 0x412
//KOR specific sections
#endif

// String section below for localizers
[Strings]
; Unlocalizable strings
REG_WSH             = "Software\Microsoft\Windows Script Host"
REG_APPROVE         = "Software\Microsoft\Windows\CurrentVersion\Shell Extensions\Approved"
REG_UNINSTALL       = "Software\Microsoft\Windows\CurrentVersion\Uninstall\WindowsScriptHost"
CLSID_WSHEXT        = "{60254CA5-953B-11CF-8C96-00AA00B8708C}"

; Localizable strings
DISP_WSH            = "Microsoft Windows Script Host"
DESC_WSH            = "Windows Script Host"
DESC_DISKS          = "Windows Script Host Files"
TIPS_WSH            = "Write scripts to help automate tasks in Windows"

DESC_DOTWSH         = "Windows Script Host Settings File"
DESC_DOTVBS         = "VBScript Script File"
DESC_DOTVBE         = "VBScript Encoded Script File"
DESC_DOTJS          = "JScript Script File"
DESC_DOTJSE         = "JScript Encoded Script File"
DESC_DOTWS          = "Windows Script File"
DESC_WSHEXT         = "Shell extensions for Windows Script Host"

DESC_WSHOMLIB       = "Microsoft Windows Script Host Object Model"
DESC_WSHSHELL       = "Windows Script Host Shell Object"
DESC_WSHNETWORK     = "Windows Script Host Network Object"

MENU_OPEN           = "&Open"
MENU_CONOPEN        = "Open &with Command Prompt"
MENU_DOSOPEN        = "Open &with MS-DOS Prompt"
MENU_EDIT           = "&Edit"
MENU_PRINT          = "&Print"

#if LANGUAGE_ID == 0x401
// Arabic 
FILE_WSHEXT         = "wshar.dll"
FILE_SCROBJ         = "scoar.dll"

#elif LANGUAGE_ID == 0x403
// Catalan 
FILE_WSHEXT         = "wshca.dll"
FILE_SCROBJ         = "scoca.dll"

#elif LANGUAGE_ID == 0x804
// Chinese Simplified 
FILE_WSHEXT         = "wshchs.dll"
FILE_SCROBJ         = "scochs.dll"

#elif LANGUAGE_ID == 0x404
// Chinese Traditional 
FILE_WSHEXT         = "wshcht.dll"
FILE_SCROBJ         = "scocht.dll"

#elif LANGUAGE_ID == 0x405
// Czech
FILE_WSHEXT         = "wshcs.dll"
FILE_SCROBJ         = "scocs.dll"

#elif LANGUAGE_ID == 0x406
// Danish
FILE_WSHEXT         = "wshda.dll"
FILE_SCROBJ         = "scoda.dll"

#elif LANGUAGE_ID == 0x407
// German
FILE_WSHEXT         = "wshde.dll"
FILE_SCROBJ         = "scode.dll"

#elif LANGUAGE_ID == 0x408
// Greek
FILE_WSHEXT         = "wshel.dll"
FILE_SCROBJ         = "scoel.dll"

#elif LANGUAGE_ID == 0x409
// United States English
FILE_WSHEXT         = "wshext.dll"
FILE_SCROBJ         = "scrobj.dll"

#elif LANGUAGE_ID == 0xc0a
// Spanish
FILE_WSHEXT         = "wshes.dll"
FILE_SCROBJ         = "scoes.dll"

#elif LANGUAGE_ID == 0x42d
// Basque
FILE_WSHEXT         = "wsheu.dll"
FILE_SCROBJ         = "scoeu.dll"

#elif LANGUAGE_ID == 0x40b
// Finnish
FILE_WSHEXT         = "wshfi.dll"
FILE_SCROBJ         = "scofi.dll"

#elif LANGUAGE_ID == 0x40c
// French
FILE_WSHEXT         = "wshfr.dll"
FILE_SCROBJ         = "scofr.dll"

#elif LANGUAGE_ID == 0x40d
// Hebrew
FILE_WSHEXT         = "wshhe.dll"
FILE_SCROBJ         = "scohe.dll"

#elif LANGUAGE_ID == 0x40e
// Hungarian
FILE_WSHEXT         = "wshhu.dll"
FILE_SCROBJ         = "scohu.dll"

#elif LANGUAGE_ID == 0x410
// Italian
FILE_WSHEXT         = "wshit.dll"
FILE_SCROBJ         = "scoit.dll"

#elif LANGUAGE_ID == 0x411
// Japanese
FILE_WSHEXT         = "wshja.dll"
FILE_SCROBJ         = "scoja.dll"

#elif LANGUAGE_ID == 0x412
// Korean
FILE_WSHEXT         = "wshko.dll"
FILE_SCROBJ         = "scoko.dll"

#elif LANGUAGE_ID == 0x413
// Dutch
FILE_WSHEXT         = "wshnl.dll"
FILE_SCROBJ         = "sconl.dll"

#elif LANGUAGE_ID == 0x414
// Norwegian
FILE_WSHEXT         = "wshno.dll"
FILE_SCROBJ         = "scono.dll"

#elif LANGUAGE_ID == 0x415
// Polish
FILE_WSHEXT         = "wshpl.dll"
FILE_SCROBJ         = "scopl.dll"

#elif LANGUAGE_ID == 0x416
// Portuguese (Brazil)
FILE_WSHEXT         = "wshptb.dll"
FILE_SCROBJ         = "scoptb.dll"

#elif LANGUAGE_ID == 0x816
// Portuguese (Portugal)
FILE_WSHEXT         = "wshptg.dll"
FILE_SCROBJ         = "scoptg.dll"

#elif LANGUAGE_ID == 0x419
// Russian
FILE_WSHEXT         = "wshru.dll"
FILE_SCROBJ         = "scoru.dll"

#elif LANGUAGE_ID == 0x41b
// Slovak
FILE_WSHEXT         = "wshsk.dll"
FILE_SCROBJ         = "scosk.dll"

#elif LANGUAGE_ID == 0x424
// Slovenian
FILE_WSHEXT         = "wshsl.dll"
FILE_SCROBJ         = "scosl.dll"

#elif LANGUAGE_ID == 0x41d
// Swedish
FILE_WSHEXT         = "wshsv.dll"
FILE_SCROBJ         = "scosv.dll"

#elif LANGUAGE_ID == 0x41f
// Turkish
FILE_WSHEXT         = "wshtr.dll"
FILE_SCROBJ         = "scotr.dll"

#else
// Anything else - Point to English
FILE_WSHEXT         = "wshext.dll"
FILE_SCROBJ         = "scrobj.dll"

#endif
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\winpe\winbom.ini ===
[Factory]
WinBOMType=WinPE
Reseal=No
[WinPE]
Restart=No
[PnPDriverUpdate]
[PnPDrivers]
[NetCards]
[UpdateInis]
[FactoryRunOnce]
[Branding]
[AppPreInstall]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\winpe\placefil.txt ===
;
; This is a private placefil used by the WinPE project for most of the INFs
; and the scripts.
;
; See public\sdk\lib\placefil.txt for info about placefil's in general.
;
; *** Please keep this alphabetical  ***
;


config.inf          opk\winpe
extra.inf           opk\winpe
mkimg.cmd           opk\winpe
startnet.cmd        opk\winpe
startopk.cmd        opk\winpe
winbom.ini          opk\winpe
winpedef.inf        opk\winpe
winpeoem.sif        opk\winpe
winpesys.inf        opk\winpe
winpesft.inf        opk\winpe
wpemscli.inf        opk\winpe
wpenb.inf           opk\winpe
wpetcpip.inf        opk\winpe
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\winpe\usa\extra.txt ===
/*:
@*: Put the correct localized starting string in the appropriate 
@*: language section. For strings which are comman across languages
@*: put them outside the ifdef block
@*/


//
// On x86 FE builds add the bootfont.bin file to the extra file list
//
#if (LANGUAGE_ID == 0x804 || LANGUAGE_ID == 0x404 || LANGUAGE_ID == 0x411 || LANGUAGE_ID == 0x412)
[ExtraFiles.x86]
bootfont.bin=1,,,,,,,,0,0,,1,1
#elif (LANGUAGE_ID == 0x405 || LANGUAGE_ID == 0x408 || LANGUAGE_ID == 0x40e || LANGUAGE_ID == 0x415 || LANGUAGE_ID == 0x419 || LANGUAGE_ID == 0x41f)
// Czech Greek Hungarian Polish Russian Turkish
[ExtraFiles.x86]
bootfont.bin=1,,,,,,,,0,0,,1,1
#elif LANGUAGE_ID == 0x406
// Danish
#elif LANGUAGE_ID == 0x40b
// Finnish
#elif LANGUAGE_ID == 0x40c
// French (standard)
#elif LANGUAGE_ID == 0x410
// Italian (standard)
#elif LANGUAGE_ID == 0x413
// Dutch (Netherlands)
#elif LANGUAGE_ID == 0x414
// Norwegian (Bokmal)
#elif LANGUAGE_ID == 0x416
// Portuguese (Brazil)
#elif LANGUAGE_ID == 0x418
// Romanian
#elif LANGUAGE_ID == 0x41a
// Croatian
#elif LANGUAGE_ID == 0x41b
// Slovak
#elif LANGUAGE_ID == 0x41d
// Swedish
#elif LANGUAGE_ID == 0x424
// Slovenian
#elif LANGUAGE_ID == 0x816
// Portuguese (Standard)
#elif LANGUAGE_ID == 0xc0a
// Spanish (Modern Sort)
#endif
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\winpe\usa\winpesft.txt ===
/*
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; localized entries for winpe software hive (vijayj@microsoft.com)
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

*/

;
; Common Section
;

[AddReg]

;
; language specific section
;

#if LANGUAGE_ID == 0x804
// CHS
[AddReg]
#elif LANGUAGE_ID == 0x404
// CHT
[AddReg]
#elif LANGUAGE_ID == 0x411
// JPN
#elif LANGUAGE_ID == 0x412
// KOR
[AddReg]
#elif LANGUAGE_ID == 0x405
// Czech
#elif LANGUAGE_ID == 0x406
// Danish
#elif LANGUAGE_ID == 0x407
// German
#elif LANGUAGE_ID == 0x408
// Greek
#elif LANGUAGE_ID == 0x40b
// Finnish
#elif LANGUAGE_ID == 0x40c
// French (standard)
#elif LANGUAGE_ID == 0x40e
// Hungarian
#elif LANGUAGE_ID == 0x410
// Italian (standard)
#elif LANGUAGE_ID == 0x413
// Dutch (Netherlands)
#elif LANGUAGE_ID == 0x414
// Norwegian (Bokmal)
#elif LANGUAGE_ID == 0x415
// Polish
#elif LANGUAGE_ID == 0x416
// Portuguese (Brazil)
#elif LANGUAGE_ID == 0x418
// Romanian
#elif LANGUAGE_ID == 0x419
// Russian
#elif LANGUAGE_ID == 0x41a
// Croatian
#elif LANGUAGE_ID == 0x41b
// Slovak
#elif LANGUAGE_ID == 0x41d
// Swedish
#elif LANGUAGE_ID == 0x41f
// Turkish
#elif LANGUAGE_ID == 0x424
// Slovenian
#elif LANGUAGE_ID == 0x816
// Portuguese (Standard)
#elif LANGUAGE_ID == 0xc0a
// Spanish (Modern Sort)
#else
// ENGLISH (default)
[AddReg]
#endif


;
; strings

;
; common strings section
;
[strings]
strDMServiceDispName        = "Logical Disk Manager"
strDMServiceDescription     = "Logical Disk Manager Watchdog Service"
strDMSnapinNameString       = "Disk Management"
strDMSnapinNameStringEx     = "Disk Management Extension"
strDMSnapinProvider         = "Microsoft Corp., VERITAS Software Corp." 
strDMSnapinTypelib          = "Disk Management Snap-In Object Library"
strDMAdminDispName          = "Logical Disk Manager Administrative Service"
strDMAdminDescription       = "Administrative service for disk management requests"
strDMRemoteClientNameString = "Logical Disk Manager Remote Client"
strVdsDispName              = "Virtual Disk Service"
strVdsLoaderDispName        = "Virtual Disk Service Loader"
strVdsDescription           = "Provides software volume and hardware volume management service."
strBasicProviderDispName    = "VDS Basic Provider"
strDynamicProviderDispName  = "VDS Dynamic Provider"

;
; language specific strings
;
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\winpe\usa\winpesys.txt ===
/*:
@*: Put the correct localized starting string in the appropriate
@*: language section. For strings which are common across languages
@*: put them outside the ifdef block at the starting or at the end
@*/


;
; Common Section
;

[AddReg]
;
; Keyboard layout
; 
HKLM,"ControlSet001\Control\Keyboard Layout",,0x00000012
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000402",0x00000002,"bg"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000404",0x00000002,"ch"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000405",0x00000002,"cz"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000406",0x00000002,"dk"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000407",0x00000002,"gr"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000408",0x00000002,"gk"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000409",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000040A",0x00000002,"sp"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000040B",0x00000002,"su"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000040C",0x00000002,"fr"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000040E",0x00000002,"hu"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000040F",0x00000002,"is"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000410",0x00000002,"it"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000411",0x00000002,"jp"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000412",0x00000002,"ko"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000413",0x00000002,"nl"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000414",0x00000002,"no"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000415",0x00000002,"pl"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000416",0x00000002,"br"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000418",0x00000002,"ro"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000419",0x00000002,"ru"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000041A",0x00000002,"yu"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000041B",0x00000002,"sl"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000041C",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000041D",0x00000002,"sv"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000041F",0x00000002,"tr"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000422",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000423",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000424",0x00000002,"yu"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000425",0x00000000,"et"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000426",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000427",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000804",0x00000002,"ch"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000807",0x00000002,"sg"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000809",0x00000002,"uk"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000080A",0x00000002,"la"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000080C",0x00000002,"be"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000813",0x00000002,"be"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000816",0x00000002,"po"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000C0C",0x00000002,"cf"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00000C1A",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00001009",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0000100C",0x00000002,"sf"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00001809",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00010402",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00010405",0x00000002,"cz"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00010407",0x00000002,"gr"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00010408",0x00000000,"gk"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00010409",0x00000002,"dv"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0001040A",0x00000002,"sp"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0001040E",0x00000000,"hu"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00010410",0x00000002,"it"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00010415",0x00000000,"pl"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00010419",0x00000002,"ru"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0001041B",0x00000002,"sl"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","0001041F",0x00000002,"tr"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00010426",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00010C0C",0x00000002,"cf"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00010C1A",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00020408",0x00000000,"gk"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00020409",0x00000002,"us"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00030409",0x00000002,"usl"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00040409",0x00000002,"usr"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybCodes","00050408",0x00000002,"gk"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybIDs","00000410",0x00000000,"141"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybIDs","0000041F",0x00000000,"179"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybIDs","00010408",0x00000000,"220"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybIDs","00010410",0x00000000,"142"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybIDs","00010415",0x00000000,"214"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybIDs","0001041F",0x00000000,"440"
HKLM,"ControlSet001\Control\Keyboard Layout\DosKeybIDs","00020408",0x00000000,"319"
HKLM,"ControlSet001\Control\Keyboard Layouts",,0x00000012
HKLM,"ControlSet001\Control\Keyboard Layouts\00000409","Layout File",0x00000002,"KBDUS.DLL"
HKLM,"ControlSet001\Control\Keyboard Layouts\00000409","Layout Text",0x00000002,"%US%"
HKLM,"ControlSet001\Control\Keyboard Layouts\00000409","Layout Display Name",,"@%SystemRoot%\system32\input.dll,-5000"
HKLM,"ControlSet001\Control\Keyboard Layouts\00010409","Layout File",0x00000002,"KBDDV.DLL"
HKLM,"ControlSet001\Control\Keyboard Layouts\00010409","Layout Id",0x00000002,"0002"
HKLM,"ControlSet001\Control\Keyboard Layouts\00010409","Layout Text",0x00000002,"%US_DVORAK%"
HKLM,"ControlSet001\Control\Keyboard Layouts\00020409","Layout File",0x00000002,"KBDUSX.DLL"
HKLM,"ControlSet001\Control\Keyboard Layouts\00020409","Layout Id",0x00000002,"0001"
HKLM,"ControlSet001\Control\Keyboard Layouts\00020409","Layout Text",0x00000002,"%US_INTERNATIONAL%"
HKLM,"ControlSet001\Control\Keyboard Layouts\00030409","Layout File",0x00000002,"KBDUSL.DLL"
HKLM,"ControlSet001\Control\Keyboard Layouts\00030409","Layout Id",0x00000002,"001A"
HKLM,"ControlSet001\Control\Keyboard Layouts\00030409","Layout Text",0x00000002,"%US_DVORAK_FOR_LEFT_HAND%"
HKLM,"ControlSet001\Control\Keyboard Layouts\00040409","Layout File",0x00000002,"KBDUSR.DLL"
HKLM,"ControlSet001\Control\Keyboard Layouts\00040409","Layout Id",0x00000002,"001B"
HKLM,"ControlSet001\Control\Keyboard Layouts\00040409","Layout Text",0x00000002,"%US_DVORAK_FOR_RIGHT_HAND%"

;
; Nls
;
HKLM,"ControlSet001\Control\Nls\CodePage\EUDCCodeRange","932",0x00000002,"F040-F9FC"
HKLM,"ControlSet001\Control\Nls\CodePage\EUDCCodeRange","936",0x00000002,"AAA1-AFFE,F8A1-FEFE,A140-A7A0"
HKLM,"ControlSet001\Control\Nls\CodePage\EUDCCodeRange","949",0x00000002,"C9A1-C9FE,FEA1-FEFE"
HKLM,"ControlSet001\Control\Nls\CodePage\EUDCCodeRange","950",0x00000002,"FA40-FEFE,8E40-A0FE,8140-8DFE,C6A1-C8FE"
HKLM,"ControlSet001\Control\Nls\CodePage\EUDCCodeRange","Unicode",0x00000000,"E000-F8FF"

;
; language specific section
;

#if LANGUAGE_ID == 0x804
// CHS
#elif LANGUAGE_ID == 0x404
// CHT
#elif LANGUAGE_ID == 0x407
// German

//
// time zone information
//
HKLM,"ControlSet001\Control\TimeZoneInformation", "ActiveTimeBias", 0x00010001, 0xFFFFFF88
HKLM,"ControlSet001\Control\TimeZoneInformation", "Bias", 0x00010001, 0xFFFFFFC4
HKLM,"ControlSet001\Control\TimeZoneInformation", "DaylightBias", 0x00010001, 0xFFFFFFC4
HKLM,"ControlSet001\Control\TimeZoneInformation", "DaylightName", 0x00000000, "W. Europe Daylight Time"
HKLM,"ControlSet001\Control\TimeZoneInformation", "DaylightStart", 0x00030001, \
        00, 00, 03, 00, \
        05, 00, 02, 00, \
        00, 00, 00, 00, \
        00, 00, 00, 00
HKLM,"ControlSet001\Control\TimeZoneInformation", "StandardBias", 0x00010001, 0x0000000
HKLM,"ControlSet001\Control\TimeZoneInformation", "StandardName", 0x00000000, "W. Europe Standard Time"
HKLM,"ControlSet001\Control\TimeZoneInformation", "StandardStart", 0x00030001, \
        00, 00, 0A, 00, \
        05, 00, 03, 00, \
        00, 00, 00, 00, \
        00, 00, 00, 00

#elif LANGUAGE_ID == 0x405
// Czech
#elif LANGUAGE_ID == 0x406
// Danish
#elif LANGUAGE_ID == 0x408
// Greek
#elif LANGUAGE_ID == 0x40b
// Finnish
#elif LANGUAGE_ID == 0x40c
// French (standard)
#elif LANGUAGE_ID == 0x40e
// Hungarian
#elif LANGUAGE_ID == 0x410
// Italian (standard)
#elif LANGUAGE_ID == 0x411
//
// JPN
//
HKLM,"ControlSet001\Control\Keyboard Layouts\E0010411","Layout File",0x00000002,"kbd106.DLL"

//
// time zone information
//
HKLM,"ControlSet001\Control\TimeZoneInformation", "ActiveTimeBias", 0x00010001, 0xFFFFFDE4
HKLM,"ControlSet001\Control\TimeZoneInformation", "Bias", 0x00010001, 0xFFFFFDE4
HKLM,"ControlSet001\Control\TimeZoneInformation", "DaylightBias", 0x00010001, 0
HKLM,"ControlSet001\Control\TimeZoneInformation", "DaylightName", 0x00000000, "Tokyo Standard Time"
HKLM,"ControlSet001\Control\TimeZoneInformation", "DaylightStart", 0x00030001, \
        00, 00, 00, 00, \
        00, 00, 00, 00, \
        00, 00, 00, 00, \
        00, 00, 00, 00
HKLM,"ControlSet001\Control\TimeZoneInformation", "StandardBias", 0x00010001, 0x0000000
HKLM,"ControlSet001\Control\TimeZoneInformation", "StandardName", 0x00000000, "Tokyo Standard Time"
HKLM,"ControlSet001\Control\TimeZoneInformation", "StandardStart", 0x00030001, \
        00, 00, 00, 00, \
        00, 00, 00, 00, \
        00, 00, 00, 00, \
        00, 00, 00, 00


#elif LANGUAGE_ID == 0x412
//
// KOR
//
HKLM,"ControlSet001\Control\Keyboard Layouts\E0010412","Layout File",0x00000000,"kbd101a.DLL" 

#elif LANGUAGE_ID == 0x413
// Dutch (Netherlands)
#elif LANGUAGE_ID == 0x414
// Norwegian (Bokmal)
#elif LANGUAGE_ID == 0x415
// Polish
#elif LANGUAGE_ID == 0x416
// Portuguese (Brazil)
#elif LANGUAGE_ID == 0x418
// Romanian
#elif LANGUAGE_ID == 0x419
// Russian
#elif LANGUAGE_ID == 0x41a
// Croatian
#elif LANGUAGE_ID == 0x41b
// Slovak
#elif LANGUAGE_ID == 0x41d
// Swedish
#elif LANGUAGE_ID == 0x41f
// Turkish
#elif LANGUAGE_ID == 0x424
// Slovenian
#elif LANGUAGE_ID == 0x816
// Portuguese (Standard)
#elif LANGUAGE_ID == 0xc0a
// Spanish (Modern Sort)
#else
// ENGLISH (default)

//
// time zone information
//
HKLM,"ControlSet001\Control\TimeZoneInformation", "ActiveTimeBias", 0x00010001, 0x000001A4
HKLM,"ControlSet001\Control\TimeZoneInformation", "Bias", 0x00010001, 0x000001E0
HKLM,"ControlSet001\Control\TimeZoneInformation", "DaylightBias", 0x00010001, 0xFFFFFFC4
HKLM,"ControlSet001\Control\TimeZoneInformation", "DaylightName", 0x00000000, "Pacific Daylight Time"
HKLM,"ControlSet001\Control\TimeZoneInformation", "DaylightStart", 0x00030001, \
        00, 00, 04, 00, \
        00, 01, 00, 02, \
        00, 00, 00, 00, \
        00, 00, 00, 00
HKLM,"ControlSet001\Control\TimeZoneInformation", "StandardBias", 0x00010001, 0x0000000
HKLM,"ControlSet001\Control\TimeZoneInformation", "StandardName", 0x00000000, "Pacific Standard Time"
HKLM,"ControlSet001\Control\TimeZoneInformation", "StandardStart", 0x00030001, \
        00, 00, 0A, 00, \
        05, 00, 02, 00, \
        00, 00, 00, 00, \
        00, 00, 00, 00

#endif


;
; strings section
;

;
; common section
;
[Strings]
US="US"
US_DVORAK="United States Dvorak"
US_INTERNATIONAL="United States International"
US_DVORAK_FOR_LEFT_HAND="United States Dvorak for left hand"
US_DVORAK_FOR_RIGHT_HAND="United States Dvorak for right hand"
NTVDM_WOWCMD="%SystemRoot%\system32\ntvdm.exe"
RSOP_SERVICE="Resultant Set of Policy Provider"
RSOP_SERVICE_DESCRIPTION="Group Policy Data Access Service for Resultant Set of Policy"
TIMEZONEINFO_BIAS=0
VOLUME_SNAPSHOT_SERVICE_DESCRIPTION="COM server supporting Volume Snapshots, used by Backup applications"
VOLUME_SNAPSHOT_SERVICE="Volume Snasphot Service (VSS)"
APPLICATION_MANAGEMENT="Application Management"
APPLICATION_MANAGEMENT_DESCRIPTION="Provides software installation services such as Assign, Publish, and Remove."
CLIPBOOK_SERVER="ClipBook"
CLIPBOOK_SERVER_DESCRIPTION="Supports ClipBook Viewer, which allows pages to be seen by remote ClipBooks."
CRYPTSVC_DISPLAYNAME = "Cryptographic Services"
CRYPTSVC_DESCRIPTION = "Provides key management services for this computer."
EVENTLOG="Event Log"
EVENTLOG_DESCRIPTION="Logs event messages issued by programs and Windows.  Event Log reports contain information that can be useful in diagnosing problems.  Reports are viewed in Event Viewer."
EVENTSYSTEM_SERVICE="COM+ Event System"
FX32_SERVICE="FX!32"
FX32_SERVICE_DESCRIPTION="Manages background optimization of x86 programs."
HID_KEYBOARD_PORT_DRIVER="HID Keyboard Port Driver"
HID_MOUSE_PORT_DRIVER="HID Mouse Port Driver"
HP_DESCRIPTOR = "HP Media Label Library"
IASJET_SERVICE = "IAS Jet Database Access"
IASJET_SERVICE_DESCRIPTION = "IAS Jet Database Access"
INSTALL_LANGUAGE="0409"
INTERSITE_MESSAGING_DESCRIPTION="Allows sending and receiving messages between Windows Advanced Server sites."
INTERSITE_MESSAGING_SERVICE="Intersite Messaging"
KERBEROS_KEY_DISTRIBUTION_CENTER="Kerberos Key Distribution Center"
KERBEROS_KEY_DISTRIBUTION_CENTER_DESCRIPTION="Generates session keys and grants service tickets for mutual client/server authentication."
LANMAN_PRINT_SERVICES="LanMan Print Services"
LANMAN_WORKSTATION_DESCRIPTION="Provides network connections and communications"
LANMAN_WORKSTATION_DISPLAY="Workstation"
MICROSOFT_NDIS_SYSTEM_DRIVER="NDIS System Driver"
MODEM="Modem"
MSI_SERVICE_DESCRIPTION="Installs, repairs and removes software according to instructions contained in .MSI files."
MTF_DESCRIPTOR = "MTF (Microsoft Tape Format) Media Label Library"
MUP="Mup"
NDIS_PROXY="NDIS Proxy"
NETDETECT="NetDetect"
NETMAN_NAME="Network Connections"
NETMAN_DESCRIPTION="Manages objects in the Network and Dial-Up Connections folder, in which you can view both local area network and remote connections."
NETWORK_ADAPTERS="Network Adapters"
NETWORK_ADAPTERS2="Network adapters"
NETWORK_CLIENT="Network Client"
NETWORK_DDE_DSDM="Network DDE DSDM"
NETWORK_DDE_DSDM_DESCRIPTION="Manages shared dynamic data exchange and is used by Network DDE"
NETWORK_DDE="Network DDE"
NETWORK_DDE_DESCRIPTION="Provides network transport and security for dynamic data exchange (DDE)."
NETWORK_PROTOCOL="Network Protocol"
NETWORK_SERVICE="Network Service"
NEW_HARDWARE_PROFILE="New Hardware Profile"
NTFR_DESCRIPTION="Maintains file synchronization of file directory contents among multiple servers."
NTFR_SERVICE_NAME="File Replication"
PLUG_AND_PLAY="Plug and Play"
PLUG_AND_PLAY_DESCRIPTION="Manages device installation and configuration and notifies programs of device changes."
PROTECTEDSTORAGE_DISPLAYNAME = "Protected Storage"
PROTECTEDSTORAGE_DESCRIPTION = "Provides protected storage for sensitive data, such as private keys, to prevent access by unauthorized services, processes, or users."
QIC_DESCRIPTOR = "QIC (QIC113 Format) Media Label Library"
REGISTRY_SERVER="Registry Server"
REGSVC_DESCRIPTION="Allows remote registry manipulation."
REGSVC_SERVICE="Remote Registry Service"
REMOTE_PROCEDURE_CALL_RPC_SERVICE="Remote Procedure Call (RPC)"
REMOTE_PROCEDURE_CALL_RPC_DESCRIPTION="Provides the endpoint mapper and other miscellaneous RPC services."
REMOVABLE_STORAGE_MANAGEMENT="Removable Storage"
REMOVABLE_STORAGE_MANAGEMENT_DESCRIPTION="Manages removable media, drives, and libraries."
SCESRV_DISPLAYNAME = "Security Configuration & Analysis"
SCESRV_DESCRIPTION = "Configures system security; the engine service is the core piece of the Security Configuration Tool Set."
SECURITY_ACCOUNTS_MANAGER_SERVICE="Security Accounts Manager"
SECURITY_ACCOUNTS_MANAGER_DESCRIPTION="Stores security information for local user accounts."
SENS_SERVICE="System Event Notification"
SENS_DESCRIPTION="Tracks system events such as Windows logon, network, and power events.  Notifies COM+ Event System subscribers of these events."
SIDEWINDER_OEMNAME="Microsoft SideWinder (Auto Detect)"
SIDEWINDER_SW3DPRO="Microsoft SideWinder 3D Pro"
SIDEWINDER_SWGPAD="Microsoft SideWinder game pad"
SIDEWINDER_PRECISIONPRO="Microsoft SideWinder Precision Pro"
SIDEWINDER_FORCEFEEDBACKPRO="Microsoft SideWinder Force Feedback Pro"
SIDEWINDER_FREESTYLEPRO="Microsoft SideWinder Freestyle Pro"
SIDEWINDER_FORCEFEEDBACKWHEEL="Microsoft SideWinder Force Feedback Wheel"
SMARTCARD_DRV_SUPPORT="Smart Card Helper"
SMARTCARD_DRV_SUPPORT_DESCRIPTION="Provides support for legacy smart card readers attached to the computer."
SMARTCARD_RESOURCE_MANAGER="Smart Card"
SMARTCARD_RESOURCE_MANAGER_DESCRIPTION="Manages and controls access to a smart card inserted into a smart card reader attached to the computer."
SPOOLER_DISPLAYNAME="Print Spooler"
SPOOLER_DESCRIPTION="Loads files to memory for later printing."
SYSMONLOG_DESCRIPTION="Configures performance logs and alerts."
SYSMONLOG="Performance Logs and Alerts"
TELEPHONY_SERVICE="Telephony"
TELEPHONY_SERVICE_DESCRIPTION="Provides Telephony API (TAPI) support for clients using programs that control telephony devices and IP-based voice connections. If this service is stopped, the function of all dependent programs will be impaired. If this service is disabled, any services that explicitly depend on it will fail to start."
TELNET_DISPLAYNAME="Telnet"
TELNET_DESCRIPTION="Allows a remote user to log on to the system and run console programs using the command line."
TRACK_SERVICE="Distributed Link Tracking Client"
TRACK_DESCRIPTION="Sends notifications of files moving between NTFS volumes in a network domain."
TRACT_SERVER_SERVICE="Distributed Link Tracking Server"
TRACT_SERVER_DESCRIPTION="Stores information so that files moved between volumes can be tracked for each volume in the domain."
UNKNOWN="Other devices"
UPS_DISPLAYNAME="Uninterruptible Power Supply"
UPS_DESCRIPTION="Manages an uninterruptible power supply (UPS) connected to the computer."
US_DVORAK_FOR_LEFT_HAND="United States Dvorak for left hand"
US_DVORAK_FOR_RIGHT_HAND="United States Dvorak for right hand"
US_DVORAK="United States Dvorak"
US_INTERNATIONAL="United States International"
US="US"
UTILMAN_DESCRIPTION="Starts and configures accessibility tools from one window "
UTILMAN_SERVICE="Utility Manager"
WINDOWMETRICS_BORDERWIDTH="1"
WINDOWS_TIME_SERVICE="Windows Time"
WINDOWS_TIME_DESCRIPTION="Sets the computer clock."
INDEXING_SERVICE="Indexing Service"
INDEXING_SERVICE_DESCRIPTION="Indexes contents and properties of files on local and remote computers; provides rapid access to files through flexible querying language."
strDMServiceDispName        = "Logical Disk Manager"
strDMServiceDescription     = "Logical Disk Manager Watchdog Service"
strDMSnapinNameString       = "Disk Management"
strDMSnapinNameStringEx     = "Disk Management Extension"
strDMSnapinProvider         = "Microsoft Corp., VERITAS Software Corp." 
strDMSnapinTypelib          = "Disk Management Snap-In Object Library"
strDMAdminDispName          = "Logical Disk Manager Administrative Service"
strDMAdminDescription       = "Administrative service for disk management requests"
strDMRemoteClientNameString = "Logical Disk Manager Remote Client"
strVdsDispName              = "Virtual Disk Service"
strVdsLoaderDispName        = "Virtual Disk Service Loader"
strVdsDescription           = "Provides software volume and hardware volume management service."
strBasicProviderDispName    = "VDS Basic Provider"
strBasicProviderDispName    = "VDS Dynamic Provider"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\winpe\usa\config.txt ===
/*:
@*: Put the correct localized starting string in the appropriate 
@*: language section. For strings which are command across languages
@*: put them outside the ifdef block
@*/

;
; localize loader prompt here
;
[InfChanges]
loaderprompt=txtsetup.sif,setupdata,"Starting Windows XP Preinstallation Environment..."


;
; you can add more language groups separated by comma to LanguageGroup key
;
[RegionalSettings]
LanguageGroup=1
Language=LANGUAGE_ID

#if LANGUAGE_ID == 0x405
// Czech
#elif LANGUAGE_ID == 0x406
// Danish
#elif LANGUAGE_ID == 0x408
// Greek
#elif LANGUAGE_ID == 0x40b
// Finnish
#elif LANGUAGE_ID == 0x40c
// French (standard)
#elif LANGUAGE_ID == 0x40e
// Hungarian
#elif LANGUAGE_ID == 0x410
// Italian (standard)
#elif LANGUAGE_ID == 0x413
// Dutch (Netherlands)
#elif LANGUAGE_ID == 0x414
// Norwegian (Bokmal)
#elif LANGUAGE_ID == 0x415
// Polish
#elif LANGUAGE_ID == 0x416
// Portuguese (Brazil)
#elif LANGUAGE_ID == 0x418
// Romanian
#elif LANGUAGE_ID == 0x419
// Russian
#elif LANGUAGE_ID == 0x41a
// Croatian
#elif LANGUAGE_ID == 0x41b
// Slovak
#elif LANGUAGE_ID == 0x41d
// Swedish
#elif LANGUAGE_ID == 0x41f
// Turkish
#elif LANGUAGE_ID == 0x424
// Slovenian
#elif LANGUAGE_ID == 0x816
// Portuguese (Standard)
#elif LANGUAGE_ID == 0xc0a
// Spanish (Modern Sort)
#endif
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\mergedcomponents\setupinfs\winpe\usa\winpedef.txt ===
/*
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; localized entries for winpe software hive (vijayj@microsoft.com)
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*/

;
; Common Section
;

[AddReg]

;
; language specific section
;

#if LANGUAGE_ID == 0x804
// CHS
#elif LANGUAGE_ID == 0x404
// CHT
#elif LANGUAGE_ID == 0x405
// Czech
HKCU,"Console", "FaceName", REG_SZ, "Lucida Console"
#elif LANGUAGE_ID == 0x406
// Danish
#elif LANGUAGE_ID == 0x408
// Greek
HKCU,"Console", "FaceName", REG_SZ, "Lucida Console"
#elif LANGUAGE_ID == 0x40b
// Finnish
#elif LANGUAGE_ID == 0x40c
// French (standard)
#elif LANGUAGE_ID == 0x40e
// Hungarian
HKCU,"Console", "FaceName", REG_SZ, "Lucida Console"
#elif LANGUAGE_ID == 0x410
// Italian (standard)
#elif LANGUAGE_ID == 0x411
// JPN
#elif LANGUAGE_ID == 0x412
// KOR
#elif LANGUAGE_ID == 0x413
// Dutch (Netherlands)
#elif LANGUAGE_ID == 0x414
// Norwegian (Bokmal)
#elif LANGUAGE_ID == 0x415
// Polish
HKCU,"Console", "FaceName", REG_SZ, "Lucida Console"
#elif LANGUAGE_ID == 0x416
// Portuguese (Brazil)
#elif LANGUAGE_ID == 0x418
// Romanian
#elif LANGUAGE_ID == 0x419
// Russian
HKCU,"Console", "FaceName", REG_SZ, "Lucida Console"
#elif LANGUAGE_ID == 0x41a
// Croatian
#elif LANGUAGE_ID == 0x41b
// Slovak
#elif LANGUAGE_ID == 0x41d
// Swedish
#elif LANGUAGE_ID == 0x41f
// Turkish
HKCU,"Console", "FaceName", REG_SZ, "Lucida Console"
#elif LANGUAGE_ID == 0x424
// Slovenian
#elif LANGUAGE_ID == 0x816
// Portuguese (Standard)
#elif LANGUAGE_ID == 0xc0a
// Spanish (Modern Sort)
#else
// ENGLISH (default)
#endif


;
; strings

[strings]

;
; common strings section
;


;
; language specific strings
;
#if LANGUAGE_ID == 0x804
// CHS
#elif LANGUAGE_ID == 0x404
// CHT
#elif LANGUAGE_ID == 0x405
// Czech
#elif LANGUAGE_ID == 0x406
// Danish
#elif LANGUAGE_ID == 0x407
// German
#elif LANGUAGE_ID == 0x408
// Greek
#elif LANGUAGE_ID == 0x40b
// Finnish
#elif LANGUAGE_ID == 0x40c
// French (standard)
#elif LANGUAGE_ID == 0x40e
// Hungarian
#elif LANGUAGE_ID == 0x410
// Italian (standard)
#elif LANGUAGE_ID == 0x411
// JPN
#elif LANGUAGE_ID == 0x412
// KOR
#elif LANGUAGE_ID == 0x413
// Dutch (Netherlands)
#elif LANGUAGE_ID == 0x414
// Norwegian (Bokmal)
#elif LANGUAGE_ID == 0x415
// Polish
#elif LANGUAGE_ID == 0x416
// Portuguese (Brazil)
#elif LANGUAGE_ID == 0x418
// Romanian
#elif LANGUAGE_ID == 0x419
// Russian
#elif LANGUAGE_ID == 0x41a
// Croatian
#elif LANGUAGE_ID == 0x41b
// Slovak
#elif LANGUAGE_ID == 0x41d
// Swedish
#elif LANGUAGE_ID == 0x41f
// Turkish
#elif LANGUAGE_ID == 0x424
// Slovenian
#elif LANGUAGE_ID == 0x816
// Portuguese (Standard)
#elif LANGUAGE_ID == 0xc0a
// Spanish (Modern Sort)
#else
// ENGLISH (default)
#endif
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\setup\license.txt ===
MICROSOFT DirectX Media

MICROSOFT SOFTWARE LICENSE

1.  GRANT OF LICENSE.  
DirectX Animation. Microsoft grants to you the right to use one copy of DirectX Animation ("Software") only in conjunction with a licensed copy of Windows 95. All rights not expressly granted are reserved to Microsoft.

2.  COPYRIGHT.  The Software is owned by Microsoft or its suppliers and is protected by United States copyright laws and international treaty provisions. You may not remove the copyright notice from any copy of the Software or any copy of the written materials, if any, accompanying the Software.

3.  OTHER RESTRICTIONS.  This Microsoft License Agreement is your proof of license to exercise the rights granted herein and must be retained by you. You may not rent or lease the Software.  You may not reverse engineer, decompile or disassemble the Software except to the extent that such limitation is expressly prohibited by applicable law.

NO WARRANTY.  ANY USE BY YOU OF THE SOFTWARE IS AT YOUR OWN RISK.  THE SOFTWARE IS PROVIDED FOR USE ONLY WITH MICROSOFT WINDOWS 95 AND RELATED APPLICATION SOFTWARE.  THE SOFTWARE IS PROVIDED FOR USE "AS IS" WITHOUT WARRANTY OF ANY KIND.  TO THE MAXIMUM EXTENT PERMITTED BY LAW, MICROSOFT AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING, WITHOUT LIMITATION, IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  MICROSOFT IS NOT OBLIGATED TO PROVIDE ANY UPDATES TO THE SOFTWARE.

LIMITATION OF LIABILITY.  MICROSOFT'S ENTIRE LIABILITY AND YOUR EXCLUSIVE REMEDY UNDER THIS AGREEMENT SHALL NOT EXCEED FIVE DOLLARS (US$5.00).

NO LIABILITY FOR CONSEQUENTIAL DAMAGES.  To the maximum extent permitted by applicable law, in no event shall Microsoft or its suppliers be liable for any damages whatsoever (including, without limitation, incidental, direct, indirect special and consequential damages, damages for loss of business profits, business interruption, loss of business information, or other pecuniary loss) arising out of the use or inability to use this Microsoft product, even if Microsoft has been advised of the possibility of such damages.  Because some states/countries do not allow the exclusion or limitation of liability for consequential or incidental damages, the above limitation may not apply to you.

U.S. GOVERNMENT RESTRICTED RIGHTS

The Software and documentation are provided with RESTRICTED RIGHTS.  Use, duplication, or disclosure by the Government is subject to restrictions as set forth in subparagraph (c)(1)(ii) of The Rights in Technical Data and Computer Software clause at DFARS 252.227-7013 or subparagraphs (c)(1) and (2) of the Commercial Computer Software - Restricted Rights at 48 CFR 52.227-19, as applicable.  Manufacturer is Microsoft Corporation/One Microsoft Way/Redmond, WA  98052-6399.

If you acquired this product in the United States, this Agreement is governed by the laws of the State of Washington.

Should you have any questions concerning this Agreement, or if you desire to contact Microsoft for any reason, please contact your local Microsoft subsidiary or write: Microsoft Customer Sales and Service/One Microsoft Way/Redmond, WA  98052-6399.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\src\baseaddr.txt ===
; COMPONENT     BASE ADDRESS    SIZE
danim.dll       0x61000000      0x700000
lmrt.dll        0x62000000      0x400000
datxd.dll       0x63000000      0x200000
datime.dll      0x63400000      0x200000
mmapi.dll       0x63800000      0x200000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\src\daxctl\controls\ihbase\dmpguid\pre_h.txt ===
/*
	iids.h

	This generated header files contains #defines necessary for the IHBase implementation
	of QueryInterface.  The values below are IID_X.Data1 - not available at compile time.

	To generate this header file, run MakeHdr.  To add more interfaces, modify dmpguids.cpp,
	rebuild dmpguids.exe, and then run MakeHdr.

*/

#ifndef __IIDS_H__
#define __IIDS_H__
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\src\daxctl\controls\mmctl\doc\mmctl.rtf ===
{\rtf1\ansi \deff0\deflang1033 {\fonttbl {\f0\froman Times New Roman;} {\f2\fswiss Arial;} {\f19\fmodern\fcharset0\fprq1 Courier New;} {\colortbl; \red0\green0\blue0; \red0\green0\blue255; \red0\green255\blue255; \red0\green255\blue0; \red255\green0\blue255; \red255\green0\blue0; \red255\green255\blue0; \red255\green255\blue255; \red0\green0\blue127; \red0\green127\blue127; \red0\green127\blue0; \red127\green0\blue127; \red127\green0\blue0; \red127\green127\blue0; \red127\green127\blue127; \red192\green192\blue192; {\stylesheet {\s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033 header;} {\s251\sb160\sa40\sl-280\keepn \b\f2\lang1033 heading 4;} {\s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 heading 3;} {\s253\li-1800\sb160\sa60\sl-380\keepn \b\f0\fs34\lang1033 heading 2;} {\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 heading 1;} {\*\cs10 \additive Default Paragraph Font;} {\sa160\sl240 \fs21\lang1033 Normal;} {\s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 Ex;} {\s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033 header rule;} {\s45\li-1800\sa180\sl-440\keepn\tx0 \b\f2\fs40\up8\lang1033 Rh1;} {\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Rmh;} {\s50\sl-240\keepn \f0\fs21\lang1033 Term1;} {\s53\li280\sl-240\keepn \f0\fs21\lang1033 Term2;} {\s54\li280\sa80\sl-240 \f0\fs21\lang1033 Def1;} {\s55\li560\sa80\sl-240 \f0\fs21\lang1033 Def2;} {\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 Rule;} {\s93\sl240 \fs21\lang1033  Index Link;} {\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 Table Text;} \paperw12240\paperh15840\margl3330\margr1530\margt-2540\margb-2220\gutter420  \facingp\deftab280\widowctrl\ftnbj  \sectd \binfsxn1\binsxn1\linex0\headery1990\footery360\endnhere\titlepg  {\headerl \pard\plain \s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033  {\field\flddirty{\*\fldinst PAGE}{\fldrslt 4}}{\expnd50  }Autodoc Output - 10/22/96\par  \pard\plain \s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033 \par } {\headerr \pard\plain \s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033  \tab Autodoc Output - 10/22/96{\expnd50   } {\field\flddirty{\*\fldinst PAGE}{\fldrslt 3}} \par \pard\plain \s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033  \par } \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 User's Guide For\par  \pard\plain \s93\sl240 \fs21\lang1033  {\fs48\i\b Multimedia Controls} \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Software Development Kit\par  \pard\plain \par \pard\plain \s93\sl240 \fs21\lang1033  1. About The MM Controls Project\par  \pard\plain \s93\sl240 \fs21\lang1033  2. Using The MM Controls SDK\par  \pard\plain \s93\sl240 \fs21\lang1033  3. SDK Part A: The Theatre Control Ensemble\par  \pard\plain \s93\sl240 \fs21\lang1033  4. SDK Part B: Writing Lightweight Controls & Containers\par  \pard\plain \s93\sl240 \fs21\lang1033  5. The ActiveX Control Architecture And MM Controls Extensions\par  \pard\plain \par \pard\plain \sa160\sl240 \fs21\lang1033 To report bugs, {\b mailto:MMCtl} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 For more information, see {\b http://consweb/tech/mmctl/} .\par  \pard\plain \par \pard\plain \par \pard\plain \sa160\sl240 \fs21\lang1033 Help file built: 10/22/96\par  \pard\plain \s93\sl240 \fs21\lang1033  About Autodoc\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 1. About The MM Controls Project\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \s93\sl240 \fs21\lang1033  1.1. MM Controls: Introduction And Goals\par  \pard\plain \s93\sl240 \fs21\lang1033  1.2. MM Controls Requirements Beyond ActiveX\par  \pard\plain \s93\sl240 \fs21\lang1033  1.3. Lessons Learned (So Far)\par  \pard\plain \s93\sl240 \fs21\lang1033  1.4. Related Efforts\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 1.1. MM Controls: Introduction And Goals\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The Multimedia Controls project is an effort within the Interactive  Media Technologies group in the Interactive Media (formerly Consumer) Division.  MM Controls begun in late 1995 with the following goals:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab 1. {\i Represent IMD-specific requirements for the ActiveX control  architecture to Sweeper and Forms3. }  IMD products tend to be  more media-rich and require more customized user interfaces than  other ActiveX clients.  Also, since animation plays a large role  in many IMD products, it's important to ensure that, in the long term,  animation capabilities are integrated fully into MS ActiveX containers;  black-box monolithic Shockwave-style animation isn't flexible enough.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab 2. {\i Promote the ActiveX control architecture throughout IMD.} Initially, many IMD product groups viewed the OLE Controls  architecture as too heavyweight to use as a way of dividing large  conventional CD-ROM applications into smaller components.  But  with OC96/ActiveX (with a push in the right direction) this is  no longer necessarily the case.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab 3. {\i As needed, provide the tools for building lightweight  "multimeda-enabled" ActiveX controls.}   MFC is insufficient for  building lightweight controls, and other toolkits (MarcWan, ATL) aren't  yet focussed on (a) helper DLLs to reduce average control size,  and (b) palette negotiation and other MM-specific issues.  Until  they are (and to help demonstrate requirements), the MM Controls  project provides an SDK to meet these needs.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab 4. {\i Become obsolete!}   Once the above goals have been met by  platform-provided tools and technologies, we can focus purely on  building above the platform.  (Of course, we'll ensure that  any clients of MM Controls have a smooth transition path toward  future Sweeper/Forms3 solutions.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 It is important to emphasize that MM Controls does not attempt to  create any new standards -- we simply want to make ActiveX work for IMD.\par  The MM Controls {\b Stage} and {\b Sprite} controls help drive  goal #1 (see {\b 1.2. MM Controls Requirements Beyond ActiveX}  and  {\b 3. SDK Part A: The Theatre Control Ensemble} ), and (by example)  goal #2.  The MM Controls SDK (see  {\b 4. SDK Part B: Writing Lightweight Controls & Containers} addresses goal #3.  To work toward goal #4, the MM Controls team is working  with Sweeper and Forms3 to ensure that the standard system components and  tools will obviate the need for the MM Controls SDK.\par  Current MM Controls clients include Sundance '97 (a multimedia electronic  greeting cards authoring tool) and the Blue Ribbon ActiveMusic control  (which generates interactive music).\par  For more information, see: {\b http://consweb/tech/mmctl/} \par  {\b IMPORTANT} :  If you want to use MM Controls, please {\b mailto:EricLe} first so we can make sure we can support your project.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 1.2. MM Controls Requirements Beyond ActiveX\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The ActiveX Controls architecture defines how a visible (windowed  or windowless) or invisible control can be embedded in a container.  In addition to the requirements of ActiveX, MM Controls has the following  needs:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i Palette negotiation and optimization:}   A container needs to  query each control for its ideal palette of colors, and then  {\i efficiently}  merge the colors into a single palette.  Various  proposed methods are either too simplistic (e.g. single  container-defined palette) or too slow (e.g. octree or median-cut  based methods using color histograms).  Our proposed solution is  O({\i n} ) (for {\i n}  total colors) and is prototyped in {\b Stage}  using {\b OCImg} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i Compositing via DIBSection/DirectDraw:}   OC96 allows for off-screen  composition, but having controls draw into an HDC is insufficient  (e.g. too slow) for some applications (e.g. when the control is an  animated sprite).  Our proposed solution is to adopt conventions for  drawing into off-screen DIBSection or DirectDraw buffers.  We have  partially prototyped this proposal in {\b Sprite} and {\b HostLW},  also using {\b OCImg} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i Audio transfer to container:}   Various controls may produce  audio (either MIDI-style music or waveform data), which the container  needs to have control over (e.g. to choose which audio sources to  mute, which to mix, which to apply effects to, etc.).  Our experience  with the sibling AudioMan project helps us understand how to solve  this problem, though no prototyping in this area has been done as  of 5/96.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i Animation event negotiation:}   When multiple overlapping controls  are animating, it's important to coalesce the redraw requests in order  to achieve best performance.  {\b HostLW}, {\b Stage}, and {\b Sprite}  prototype a simple {\b IAnimate} interface, but a more sophisticated  "animation event negotion" mechanism is needed (and a first draft has  been proposed).  We hope the SPAM animation team can help us here.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i Nested windowless conainers:}   Certain multimedia applications  require that a container of windowless controls itself be windowless  (and enabled for DIBSection/DirectDraw compositing) since an HWND  gets in the way of compositing.  OC96 leaves some issues (e.g.  activation sequence, grab handle drawing) ambiguous in this case;  {\b Stage} prototypes this concept.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i Design-time/run-time segmentation:}   The design-time (authoring)  features of a control are not needed during run-time, and we don't want  Internet end users to have to download any unnecessary code (or enable  features they didn't pay for), so it's important to allow for separate  design-time and run-time versions of control DLLs.  Forms3 has  recently proposed a solution; we will likely be the first to try  it out.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i Design-time UI:}   Our controls need to be able to provide a rich  design-time (authoring) user interface.  For example, the {\b Line}  sample allows the author to drag and resize the line or its endpoints,  as well as displaying context menu items and a property page.  Some  of these features are not yet fully enabled in the OC96 spec.\par  \pard\plain \sa160\sl240 \fs21\lang1033 For more information about how we've addressed these issues, see  {\b 5. The ActiveX Control Architecture And MM Controls Extensions} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 1.3. Lessons Learned (So Far)\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 MM Controls has been very much a hands-on, "try by doing" project.  We started with the idea of seeing how far we could stretch OC96, understanding  that we may have to "stretch" the rules to meet our goals.\par  So far, this is what we learned:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i OC96 (mostly) works!}   It's true we had to extend the OC96/ActiveX  rules a bit see {\b 1.2. MM Controls Requirements Beyond ActiveX}  and  {\b 5. The ActiveX Control Architecture And MM Controls Extensions} but for the most part OC96 appears to be a well-designed architecture  that allows for the kind of subsetting and supersetting we need.  As a result, our controls are valid ActiveX controls, though to get  some features you need to use them in an enhanced container  (such as {\b HostLW} or {\b OCTest} ).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i Very small ActiveX controls are possible.}   By paying careful  attention to what functionality is required and what can be left out,  we've written some very small controls.  Our smallest is TinyAuto,  which is under 10KB without using any helper DLLs (including the  C runtime).  Our other controls use a 30KB helper DLL ({\b OCHelp} ) to  achieve small size with much richer functionality than TinyAuto;  these controls can be as small as 10K.  The memory footprint of these  controls tends to be small as well -- most of them are windowless.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i High performance compositing is possible with windowless controls.} For example, {\b Sprite} directly manipulates the container's frame  buffer (when asked to draw) without knowing any specific details about  the container, and by this method it appears that {\b Sprite} can be  made as fast as any component with hard-codeded intimate knowledge of  its container.  In other words, packaging a component as an ActiveX  controls doesn't introduce any significant performance penalties.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i more to come...} \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 1.4. Related Efforts\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following projects at Microsoft are similar or related to  MM Controls:\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b ActiveX Controls And Containers:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i Sweeper:}   Owns the Internet Explorer browser, and the  Internet Control Pack, as well as all Internet-related underlying  system technologies.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 For more information, see {\b http://ohserv/} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i Forms3 ("forms cubed"):}   Owns the future (IE5?) HTML browser &  editor technology, as well as 2D layout container(s).  Hopefully,  {\b Stage} will be replaced entirely by a future version of the  Forms3 form container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 For more information, see {\b http://forms3/} \par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Writing ActiveX Controls:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i MFC (Microsoft Foundation Classes):}   Like the MM Controls SDK,  MFC provides a way to write ActiveX controls.  Currently MFC supports  only windowed (not windowless) controls.  MFC controls can be  relatively small (though not as small as a control developed using the  MM Controls SDK), though the MFC support DLL and memory footprint are  signficantly larger.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 For more information, see Visual C++.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i MarcWan/Sweeper Base Control:}   Provides C++ base classes for  developing ActiveX controls.  Controls are relatively small, though  the "housekeeping" functionality is not currently pulled out into a  separate DLL, so a set of controls using this base control may be  larger than a set created using the MM Controls SDK.  On the other  hand, the Sweeper Base Control pretty much defines correct control  behavior.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 For more information, see {\b http://ohserv/} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i ATL (ActiveX Template Library):}   Provides C++ class templates  for developing controls.  Control size and cababilities are similar  to the Sweeper Base Control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 For more information, see {\b http://ohserv/} \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 2. Using The MM Controls SDK\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \s93\sl240 \fs21\lang1033  2.1. Setting Up The SDK\par  \pard\plain \s93\sl240 \fs21\lang1033  2.2. Building Samples\par  \pard\plain \s93\sl240 \fs21\lang1033  2.3. Building The SDK\par  \pard\plain \s93\sl240 \fs21\lang1033  2.4. Using OCTest (ActiveX Control Test Container)\par  \pard\plain \s93\sl240 \fs21\lang1033  2.5. Using OCAuthor (VB-Based ActiveX Control Test Container)\par  \pard\plain \s93\sl240 \fs21\lang1033  2.6. Support, Feedback, More Information\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 2.1. Setting Up The SDK\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 To set up the MM Controls SDK, run  {\b file://imt/drop/mmctl/current/setup.exe} .\par  If you just want to set up the controls, helper DLLs, and test application,  and you don't need the entire SDK, run  {\b file://imt/drop/mmctl/current/setup.exe} .  (This will install  enough components to run MM Controls demos.)\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 2.2. Building Samples\par  \pard\plain \s93\sl240 \fs21\lang1033  Currently, the sample ActiveX controls and containers assume you are using  VC4 (Microsoft Visual C++ 4.0).\par  There are no special environment variables etc. you need to set up to use  the MM Controls SDK, since each dependent header file, .lib file, etc.  is referred to by a releative pathname instead of assuming a particular  INCLUDE path.  However, it's a good idea to do an Update All Dependencies  in VC4 on any project before building that project for the first time.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 2.3. Building The SDK\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The MM Controls SDK components are pre-built, and the .pdb files are  provided for debugging, so normally the information in this section is not  necessary.  The source code of the MM Controls SDK is provided primarily as  a debugging aid.  However, should you need to (e.g. to test a new  compiler -- forking the code is not a good reason!) it's possible to build  the SDK from the provided source code:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab As with the samples, the SDK assumes VC4.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The makefile in the root of the MM Controls SDK builds all components;  see the comments in the makefile for more information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Note that in order to build {\b OCImg} , you need to have the MKImg20  project enlisted in a peer directory of the MMCtl directory (so both  directories have the same parent), since {\b OCImg}  makes use of the  MKImg20*.lib static link libraries.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 2.4. Using OCTest (ActiveX Control Test Container)\par  \pard\plain \s93\sl240 \fs21\lang1033  OCTest is a simple Windows application that internally uses the {\b SiteLW}  object provided in the {\b OCMisc}  helper library (part of the MM Controls SDK)  to contain a single OLE/ActiveX control.\par  For more information, see {\b OCTest} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 2.5. Using OCAuthor (VB-Based ActiveX Control Test Container)\par  \pard\plain \s93\sl240 \fs21\lang1033  {\b OCAuthor}  is a simple Visual Basic application provided to demonstrate  the usage of the {\b OCEdit} control.  {\b OCAuthor}  operates in much the  same way as {\b OCTest} .\par  For more information, see {\b OCAuthor} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 2.6. Support, Feedback, More Information\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b For more information:}  {\b http://consweb/tech/mmctl/} .\par  Your feedback is important to us!  We can't achieve our goals unless we know  how well our technology and prototypes apply to a variety of application types,  so we're particularly interested in knowing how MM Controls works (or doesn't  work) for you.  To provide feedback, {\b mailto:MMCtl} {\b mailto:Ericle} .\par  To report bugs, {\b mailto:MMCtl} .\par  To receive status reports about MM Controls, you can join the MMCtl alias.  To do so, {\b mailto:EricLe}  and ask to be added to the MMCtl alias.\par  You can also access our RAID bug database:  {\b file://imt/drop/mmctl/mmctlro.rdq} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 3. SDK Part A: The Theatre Control Ensemble\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \s93\sl240 \fs21\lang1033  3.1. Introduction\par  \pard\plain \s93\sl240 \fs21\lang1033  3.2. Stage Control\par  \pard\plain \s93\sl240 \fs21\lang1033  3.3. Sprite Control\par  \pard\plain \s93\sl240 \fs21\lang1033  3.4. HostLW Control\par  \pard\plain \s93\sl240 \fs21\lang1033  3.5. ABAuto (Audio Mixer) Control\par  \pard\plain \s93\sl240 \fs21\lang1033  3.6. Animate Control (Coming Soon)\par  \pard\plain \s93\sl240 \fs21\lang1033  3.7. Theatre Control (Coming Soon)\par  \pard\plain \s93\sl240 \fs21\lang1033  3.8. OCEdit Control\par  \pard\plain \par \pard\plain \par \pard\plain \sa160\sl240 \fs21\lang1033 {\b See Also:} \par  \pard\plain \s93\sl240 \fs21\lang1033  2.4. Using OCTest (ActiveX Control Test Container)\par  \pard\plain \s93\sl240 \fs21\lang1033  2.5. Using OCAuthor (VB-Based ActiveX Control Test Container)\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 3.1. Introduction\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 In order to achieve our goal of representing the needs of media-rich  applications to Sweeper and Forms3, we started working on a prototype control,  {\b Stage}, which is a windowless control that can contain (and position in  2D space with z-ordering) other windowless controls.  (The demo version of  {\b Stage} also supports animation, though eventually all animation support  will move to a separate {\b Animate} control.)  We also created {\b Sprite}  to test bitmap and palette embedding and transparent/translucent blitting  and {\b HostLW} to allow {\b Stage} to be embedded in IE3 (which doesn't yet  support windowless controls).\par  The name "Theatre Control Ensemble" defines the collection of controls  which comprise our animation-related ActiveX control-based prototyping work.\par  Before too long it became clear that a subset of the Theatre ensemble can meet  the needs of a specific application: Sundance '97 (a multimedia electronic  greeting card application).  In fact, the ideal container for Sundance  would be the Forms3 control container, but it won't be ready for use by  Sundance in the time frame needed.  So {\b Stage} will be used initially,  and then {\b Stage} will be replaced by the Forms3 form object when it's  ready.\par  This helps underscore a goal for our controls and containers: they are  specifically designed to be "pin-compatible" with MS ActiveX standards.  (We do extend the standards in a few areas where they're lacking; see  {\b 5. The ActiveX Control Architecture And MM Controls Extensions} for more information.)\par  Although Sundance is the driving client for the Theatre ensemble, we are  willing to allow the control to be used in other applications provided such  an application can get by being a non-driving client (i.e. having limited  control over the feature set).  If you're interested in becoming a client  of MM Controls, please {\b mailto:EricLe} .\par  The following sections describe the functionality of each control in detail.\par  Note that one control, {\b OCEdit}, is a bit of an oddball because it's  not intended for use in IE3 at all -- rather it's designed to be used in  Visual Basic, to implement a simple ActiveX control editor much like OCTest.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 3.2. Stage Control\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Stage} is a lightweight windowless ActiveX control which is itself  a container for lightweight windowless controls.  {\b Stage} is analogous  to a Visual Basic or Forms3 form, in the sense that {\b Stage} contains  controls.  However, {\b Stage} is a small (under 50KB for non-demo runtime  version) container, and it supports palette negotiation (via {\b OCImg} animation event negotiation (see  {\b 5. The ActiveX Control Architecture And MM Controls Extensions} and other animation-related features, and {\b Stage} controls can be  nested arbitrarily.\par  For more information, see: {\b Stage}.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 3.3. Sprite Control\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Sprite} is a lightweight windowless ActiveX control which  displays a multi-frame bitmap and provides a mechanism for cycling  through the frames to simulate animation.  Parts of the bitmap can be  transparent, and the bitmap can be displayed at a given  opacity/translucency level (simulated by drawing an irregular pattern of  a given percentage of pixels).\par  For more information, see: {\b Sprite}.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 3.4. HostLW Control\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b HostLW} is a lightweight windowed ActiveX control which can embed a  lightweight windowless ActiveX control.  Can be used to allow IE3 to host  windowless controls.\par  For more information, see: {\b HostLW}.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 3.5. ABAuto (Audio Mixer) Control\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b ABAuto} is a lightweight invisible ActiveX control which accesses  the AudioBoy mixer to allow playing multiple waveform audio files at once.\par  For more information, see: {\b ABAuto}.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 3.6. Animate Control (Coming Soon)\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The {\b Animate} control has not yet been implemented.  It is planned  to be the core animation "engine" which drives animation in {\b Stage}.  (In the current demo version of {\b Stage}, simple animation features are  temporarily hard-coded into {\b Stage}.)  When used in conjunction with  the {\b Stage} and {\b Theatre} controls, {\b Animate} will allow a web page  author to create simple animations using any HTML editor.\par  If you're interested in {\b Animate}, please {\b mailto:EricLe} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 3.7. Theatre Control (Coming Soon)\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The {\b Theatre} control has not yet been implemented.  It is planned  to be a high-level easy-to-use animation control.  When used in conjunction  with the {\b Stage} and {\b Animate} controls, {\b Theatre} will allow a web page  author to create simple animations using any HTML editor.\par  {\b Theatre} is currently planned as a demonstration/prototype control,  not as a pacakaged product.\par  If you're interested in {\b Theatre}, please {\b mailto:EricLe} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 3.8. OCEdit Control\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 Among controls in the Theatre Control Ensemble, {\b OCEdit} is a bit of  an oddball because it's not intended for use in IE3 at all.  Instead, {\b OCEdit}  is designed to be used in Visual Basic, to implement a simple ActiveX control  editor much like OCTest.\par  For more information, see {\b OCEdit}.\par  A sample Visual Basic application, {\b OCAuthor} , is provided to demonstrate  the usage of {\b OCEdit}.  For more information, see {\b OCAuthor} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4. SDK Part B: Writing Lightweight Controls & Containers\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \s93\sl240 \fs21\lang1033  4.1. Introduction\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2. Writing Controls -- Step By Step\par  \pard\plain \s93\sl240 \fs21\lang1033  4.3. Sample Controls\par  \pard\plain \s93\sl240 \fs21\lang1033  4.4. Writing Control Containers\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5. OCHelp Reference\par  \pard\plain \s93\sl240 \fs21\lang1033  4.6. OCImg Reference\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7. OCMisc Reference\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.1. Introduction\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 As described in {\b 1.1. MM Controls: Introduction And Goals} one of the goals of the MM Controls is to make it easy to develop very  lightweight "multimedia-enabled" ActiveX controls.  This section  describes the following components of the MM Controls SDK designed to  satisfy these goals:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b OCHelp}  is a small helper DLL (also available in static-link form)  that provides the common functionality which many/most controls  must implement.  By centralizing this functionality in a single  small DLL, individual controls can be much smaller.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b OCImg}  is a small DLL that implements certain kinds of  graphics-intensive operations needed by many "multimedia-enabled"  controls.  OCImg is actually a subset of the MKImage library,  packaged as a DLL (instead of as a static-link library) to help  minimize the amount of code that would need to be downloaded for  Internet controls.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b OCMisc}  is a static-link library of helper functions that  provide ActiveX control-related functionality that may be useful to  some containers and/or controls, but isn't likely to be useful to most  or all controls.  For example, {\b OCMisc}  provides the {\b SiteLW}  object, which helps an application or control be an ActiveX control  container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 The following sections contain both tutorial-style and reference-style  information that should help you implement ActiveX controls and containers.\par  {\b Important:}  The emphasis of the MM Controls SDK is on {\i windowless} controls and containers, although basic support for {\i windowed}  controls  and containers is also provided.  If you find the windowed control/container  support lacking, please {\b mailto:EricLe}  -- no promises, but we'd like  to see if we can help.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2. Writing Controls -- Step By Step\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 This section (and the subsections listed below) describe how you can  implement an ActiveX windowed or windowless control optionally based on the  {\b OCHelp}  helper library and one of the minimal sample controls provided in  this SDK.  The resulting control should be small enough to be downloaded for use  on HTML web pages.\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2.1. Getting Started: Creating A Minimal Control\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2.2. Adding Support For Persistence And Simple IDispatch\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2.3. Adding Support For Properties And Methods\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2.4. Adding Support For Events\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2.5. Adding Support For Accessing Container's Ambient Properties\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2.6. Adding Support For Property Pages\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2.7. Adding Support For Context Menu Items\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2.8. Adding A Control To An Existing DLL\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2.9. Other Useful OCHelp Helper Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2.A. OCImg -- Helpers For Palette & Bitmap Manipulation\par  \pard\plain \s93\sl240 \fs21\lang1033  4.2.B. OCMisc -- Helpers For Implementing ActiveX Containers\par  \pard\plain \par \pard\plain \sa160\sl240 \fs21\lang1033 Any control built by the procedures described in this section is  implemented in a COM (component object model) self-registering in-process  server DLL.  The control is (by default) "lightweight" in the sense that a  subset of ActiveX interfaces may be implemented (and for those interfaces  that are implemented, a subset of methods may be implemented and others will  do nothing or return E_NOTIMPL).\par  A control based on {\b OCHelp}  should (hopefully) function identically to one  produced using MFC, ATL, or the Sweeper base control.  The advantage of  using {\b OCHelp}  is that it collects common helper functionality into a single  small DLL (much smaller than MFC) that need be downloaded only once and can  then be shared among multiple controls.  The emphasis here is primarily on  making controls very small, and to enable very lightweight windowless controls.  Another goal is to make controls relatively easy to implement.\par  Three kinds of controls, described below, can be built following the  procedures in this section.  For each type of control, one or two "skeleton"  controls (see the next section) is provided in this SDK -- you can use a  skeleton control as the basis for a new ActiveX control you implement.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab A {\i lightweight invisible control}  (also known as an "OLE automation  server"), like the TinyAuto or MiniAuto skeleton controls.  Such a  control has no visible appearance, and is typically used to provide  some kind of service to e.g. VBS code.  This control may be  embedded in VB4, in HTML (in IE3 and above), in {\b HostLW}, and in  {\b Stage}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab A {\i lightweight windowless control} , like the TinyOC skeleton control:  This control follows the OC96 specifications for windowless controls.  The control is visible but does not create an HWND to display itself.  (This allows the control to have transparent or translucent parts, and  efficiently animate inside an appropriate container such as  {\b HostLW} or future versons of IE.)  This control may be embedded in  {\b HostLW} and in {\b Stage}, and in HTML (in IE3 and above) and VB4  via {\b HostLW}, but such a control cannot be directly embedded in VB4  and IE3.  Future versions of IE (IE5?) will allow direct embedding of  windowless controls.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab A {\i lightweight windowed control} , like the CircOC skeleton control:  This is the same type of control produced by the Sweeper ActiveX  control framework.  The control is visible and uses an HWND to display  itself.  Such controls may be embedded in HTML (in IE3 and  above), and in {\b HostLW}, but currently cannot be directly embedded  in {\b Stage}.  In theory, CircOC can be embedded in VB4, but currently  that doesn't work because of the excessive demands VB4 places on a  control (e.g. full type library support), but if VB4 compatibility is  important to you it's probably possible to add the necessary features.\par  \pard\plain \sa160\sl240 \fs21\lang1033 All the skeleton controls (and, by default, any control you build  based on a skeleton control) have the following in common:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The controls have been built using VC 4.0 and tested using Win95.  They should work on NT as well, but haven't been extensively tested  on that platform.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab None of the controls requires the C/C++ runtime (either in static-link  or dynamic-link form) or the MFC runtime.  This is done to keep the  controls as small as possible.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab All the controls (except those based TinyAuto, described in the next  section) rely on the {\b OCHelp}  helper DLL provided in this SDK.  If you  choose, you can use the static-link version of {\b OCHelp}  instead,  so you don't need to rely on the {\b OCHelp}  DLL.  This will make your  control larger, but the combined size of your control and the {\b OCHelp} DLL may be smaller.  (Also, in doing so you lose the advantage of  having {\b OCHelp}  downloaded only once and shared among multiple  controls.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 (You might ask: why isn't a {\i base class}  provided instead of a DLL  full of {\i helper functions} ?  The reason is that base classes tend to  assume you want a given fixed set of functionality; {\b OCHelp} approach is more "a la carte" -- your control's size is only affected  by functionality you use.  Also, base classes tend to break the controls  that use them more often than is the case with helper functions,  because of the complex interdependencies introduced by shared data  members.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Currently, none of the controls requires the Internet (Sweeper) SDK  or any of its runtime DLLs (though you can choose to use these features  if you wish).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab A control may optionally have properties and methods, accessible to  C++, VBS, VB, and (presumably) Javascript programs.  (Most testing  to date has been done using VBS.  Some testing has been done using  VB4.  No testing has been done using Javascript.  This information  may be out of date -- check with EricLe if this is important to you.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab A control may optionally implement persistence (loading and saving of  its state) via {\b IPersistPropertyBag} (for text-based persistence, to  enable properties stored in e.g. HTML <PARAM>) and/or  {\b IPersistStream} (for binary stream persistence).  If  {\b AllocPropertyHelper} is used to implement text-based persistence,  then an {\b IDispatch} implementation is automatically provided that  allows the same properties initialized via <PARAM> tags to be  accessed via VBS code.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab A control may optionally fire events to the container, which typically  causes script code (e.g. a VBS subroutine) in the container to be  executed.  Note that although lightweight invisible controls may  fire events which can be used in VBS in IE3 and above, VB4 will ignore  these events.  events.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab For testing purposes, the OCTest application can embed all three  kinds of controls (though currently support for windowed controls  is limited, and there's not a lot of value in embedding an invisible  control unless the control supports a property page that you want  to test).\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2.1. Getting Started: Creating A Minimal Control\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 This section describes how to create a minimal ActiveX control  that's a valid working self-registering in-process server but which doesn't  do very much (yet).  If you already have a control, you can skip this  section and jump ahead to later sections which describe how to add specific  features to your control.\par  First, choose a "skeleton" control on which your control will be based.  (See the previous section for definitions of, and capabilities of,  lightweight invisible, windowless, and windowed controls.)  The MM Controls  SDK contains these skeleton controls you can use (each located in a directory  with the same name):\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b TinyAuto} : A lightweight {\i invisible}  control that doesn't require  use of the {\b OCHelp}  DLL.  This control implements a single test  property ("Foo", which has constant value 42) using {\b IDispatch}.  This is pretty much the smallest ActiveX control you can build.  Note  that if you want to add any feature provided by {\b OCHelp}  these  instructions assume you will start with MiniAuto instead of TinyAuto.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b MiniAuto} : A lightweight {\i invisible}  control similar to TinyAuto,  but MiniAuto uses {\b OCHelp}  to help implement events (which can be  fired to the container).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b TinyOC} : A lightweight {\i windowless}  control that displays a single  small ellipse which can be animated using the experimental {\b IAnimate}  interface.  (Animation only works when TinyOC is embedded in the OCTest  application or the {\b HostLW} control -- IE3 currently doesn't  directly support animation.)  Uses {\b OCHelp} .  TinyOC is set up to  build separate design-time and run-time versions of its DLL.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b CircOC} : A lightweight {\i windowed}  control similar to the "Circle"  control provided in the Internet (Sweeper) SDK, except that CircOC  uses {\b OCHelp}  instead of the Sweeper base control.  CircOC is set up  to build separate design-time and run-time versions of its DLL.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 Note that if you're looking for an IE3-compatible full-featured  windowed control to start from, see the comments about the "FubarOC"  sample control below.\par  \pard\plain \sa160\sl240 \fs21\lang1033 (A different approach would be to start with a more full-featured  control like {\b Line}, rename it and change its GUIDs, and add and remove  features as needed -- feel free to do this if you think your control will  need all the features of a control like {\b Line} anyway.  In fact, the  "FubarOC" sample control is essentially the CircOC skeleton control that  has had steps  {\b 4.2.2. Adding Support For Persistence And Simple IDispatch} {\b 4.2.3. Adding Support For Properties And Methods} , and  {\b 4.2.4. Adding Support For Events}  already applied to it -- if you're  looking for an IE3-compatible windowed control to start with, FubarOC might  be the control for you.  However, the instructions below help you understand  all the parts of a control, including which are optional and can be left out  if you need the control to be as small as possible.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 Once you've chosen a skeleton control, do the following steps:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Choose a control name.  These instructions assume that your control name  is 8 characters or less for a control based on TinyAuto or MiniAuto,  or 5 characters or less (replacing the word "Tiny" or "Circ") for a  control based on TinyOC or CircOC.  You can probably use longer names  provided you don't use SLM, but this hasn't been tested.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Copy all the skeleton control's files to a new directory (named  with the name of your control).  These instructions assume that the  directory is a subdirectory of your "MMCtl" directory (i.e. your  control's directory is a sibling of the directory containing the  skeleton control you used).  You can delete tinyaut4.mak, miniaut4.mak,  and slm.ini from your directory, if present.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Rename each file whose name starts with "TinyAuto" (if based on  TinyAuto), "MiniAuto" (if based on MiniAuto), "Tiny" (if based on  TinyOC), or "Circ" (if based on CircOC) so that it starts with  the name of your control.  For example, if your control is based  on TinyOC, and your new control's name is "Fubar", rename  "TinyOC.def" to "Fubar.def" and rename "TinyOC.mak" to "Fubar.mak".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\fi-360\li720\emdash\tab Using your favorite tool, make the following substitutions in all  text files in your control's directory (assuming the name of your  control is "Fubar"):\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\li1200 {\i If based on TinyAuto:}  change all "TinyAuto" to "Fubar"\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\li1200 {\i If based on MiniAuto:}  change all "MiniAuto" to "Fubar"\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\li1200 {\i If based on TinyOC:}  change all "Tiny" to "Fubar"\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li1200 {\i If based on CircOC:}  change all "Circ" to "Fubar"\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Run guidgen.exe (provided with VC4) and generate a new class ID  for your control.  The class ID is stored (in two forms) in  "control.h" in your control's directory.  If there are any .htm  files in the directory, change the GUID in the <OBJECT> tag  to the same GUID; in the case of controls based on TinyOC the  GUID you need to change in test.htm is the "value" attribute  of the "_embed" <PARAM> tag (because TinyOC is embedded in  {\b HostLW} in order to allow it to work in IE3).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 If there is a .odl file in the directory (currently only for controls  based on MiniAuto), the same GUID needs to be used in the "coclass"  construct.  Also, a new GUID needs to be generated for the top-level  "library" construct in the .odl file, and a new GUID needs to be  generated for the dispinterface in MiniAuto.h.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In VC4 (MSDev), use Open Workspace to open the .mak file.  (If you  have more than one .mak file, you didn't read the directions  above :-)  Select Build: Update All Dependencies (check all checkboxes)  and make sure you don't get any errors.  Then, build the control  using Build: Rebuild All, and make sure the control builds and  registers correctly.\par  \pard\plain \sa160\sl240 \fs21\lang1033 You now have a working (but minimal) ActiveX control.  You can test the  control in OCTest or (using the provided test.htm) in IE3.  (If your control is  invisible, OCTest works but is relatively pointless because there's nothing to  see.)  If your control is based on TinyOC, it must be "wrapped" in {\b HostLW}  (as shown in TinyOC\\test.htm) before being embedded in IE3 since IE3 does not  support windowless controls.\par  All the skeleton controls have at least some amount of default functionality  that you can delete and replace with your own functionality.  Search for  the string "TODO" to find these places in the code.\par  TinyOC and CircOC can build separate design-time and run-time versions,  depending on the project configuration: configurations with "DT" are  "design-time" (and may include authoring UI etc.); configurations with "RT"  are "run-time" (and do not include authoring UI).  You'll usually want to  develop using the DTDebug configuration, since it has debugging information  and includes all author-time functionality.\par  If you care, here's a quick look inside your control (so far):\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b dll.cpp} : Contains the functions that implement a COM in-process  self-registering server DLL (with some help from {\b OCHelp} , or  {\b autohelp.cpp}  in the case of controls based on TinyOC).  {\b _DllMainCRTStartup} is called when the DLL loads, unloads, and  at various other times.  {\b DllRegisterServer} and  {\b DllUnregisterServer} are called when an application (such as a  setup program or regsvr32.exe) are used to register or unregister  your control with the OS (so that your control can be located by  COM when {\b CoCreateInstance} is called by a user of your control).  {\b DllGetClassObject} returns S_FALSE if there are any objects  implemented by your DLL that are currently alive.  {\b DllGetClassObject} creates an instance of the class factory object  for your control, which in turn is used to create an instance of your  control.  Finally, global {\b new} and {\b delete} operators are  provided so that you don't need the C runtime; note that these  operators zero-initialize the memory they allocate (to reduce the need  for unnecessary initialization).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i If based on TinyAuto:}  {\b autohelp.cpp} : This is essentially a  very stripped-down version of {\b OCHelp}  that contains only the most  essential functions needed for implementing a class factory,  control self-registration, etc.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b control.h} : Declares the C++ object that implements your control.  This object is based on each interface that the control supports (via  multiple inheritence).  Controls based on TinyOC or CircOC support  COM-style aggregation by implementing both a delegating unknown  (named {\b IUnknown}) and a non-delegating unknown (named  {\b INonDelegatingUnknown} -- but this is just {\b IUnknown} renamed  because C++ won't allow a class to inherit the same interface twice).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b control.cpp} : Defines the C++ object that implements your control.  Also defines a function named {\b InitAutoObjectInfo} or  {\b InitControlInfo}, which is called once when your control's DLL  loads to initialize information about your control.  If you want to  change information about your control (such as its "friendly name"  or its ProgID) here's where you do it.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b control.odl} : (If present -- curently only in MiniAuto.) Used to  generate a type library, which is stored as a resource in the  control's DLL.  This is for event support (firing events to the  control's container).  Note that a .odl file is not required for  supporting properties and methods (if you use {\b OCHelp}  helper  functions {\b DispatchHelpGetIDsOfNames} and {\b DispatchGetArgs}).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b purevirt.c} : Avoids pulling in the C/C++ runtime.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b debug.h}  and {\b debug.cpp} : Defines {\b TRACE}, {\b ASSERT}, and  {\b VERIFY} macros, the same way they're defined in MFC (but without  calling MFC).  Also defines {\b DebugIIDName} and {\b DebugCLSIDName}  (see {\b QueryInterface} in control.cpp for an example) which can  be used to convert a GUID to an interface ID or class ID string.  These functions are disabled and compile to zero code in a release  build.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b *.def} , {\b *.rc} : The usual.  Note that the .rc file should  contain a version resource, especially if you want to be able to  use the IE3 downloadable code feature.\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b For more information:} \par  \pard\plain \s93\sl240 \fs21\lang1033  4.2. Writing Controls -- Step By Step\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2.2. Adding Support For Persistence And Simple IDispatch\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 This section describes how your control can use  {\b AllocPropertyhelper} load property values from an HTML page or a binary  stream.  Saving is also supported (if the container supports it -- note that  IE3 doesn't allow saving, but OCTest does).  Also, {\b AllocPropertyHelper}  provides a "free" (simple) implementation of {\b IDispatch} that allows e.g.  VBS scripts to access each of the properties exposed by your object.  (See {\b 4.2.3. Adding Support For Properties And Methods}  for  information about how to implement methods as well as properties on your  control.)\par  {\b AllocPropertyHelper} works like this: when your control is created, you  call {\b AllocPropertyHelper} to create a {\b PropertyHelper} object (which  is aggregated with your control).  In your control's {\b QueryInterface}  function, you pass requests for {\b IPersistStream}, {\b IPersistStreamInit},  {\b IPropertyBag}, and {\b IDispatch} onto {\b AllocPropertyHelper}.  You also  need to make your control support the helper interface {\b IPersistVariantIO};  inside the {\b IPersistVariantIO::DoPersist}  function you provide the names  of, and pointers to, all your control's properties, like this:\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 STDMETHODIMP CFubarOC::DoPersist(IVariantIO* pvio, DWORD dwFlags)\par          \{\par              HRESULT         hr;\par  \par              // load or save control properties\par              if (FAILED(hr = pvio->Persist(0,\par                      "Name", VT_LPSTR, &m_achName,\par                      "Height", VT_INT, &m_iHeight,\par                      "Married", VT_BOOL, &m_fMarried,\par                      NULL)))\par                  return hr;\par  \par              // if any properties changed, redraw the control\par              if ((hr == S_OK) && (m_poipsw != NULL))\par                  m_poipsw->InvalidateRect(NULL, TRUE);\par  \par              // clear the dirty bit if requested\par              if (dwFlags & PVIO_CLEARDIRTY)\par                  m_fDirty = FALSE;\par  \par              return S_OK;\par          \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 This example assumes that the control's C++ class contains member  variables named "m_achName" (a character array used as a string), "m_iHeight"  (an int), and "m_fMarried" (a BOOL).  {\b DoPersist} is called by  {\b PropertyHelper} in the following circumstances:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab When your control is first loaded.  The value of each property will  be stored in the associated member variable by the call to  {\b IVariantIO::Persist} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab When your control is saved.  The value of each property will be  copied from each member variable and saved (to a binary stream or a  text-based "property bag") using the associated property name.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab When a property of your control is accessed via {\b IDispatch}  (e.g. VBS script like "fubar.Height = 5" or "x = fubar.Height").  In this case only the member variable associated with the specified  property is read or written; the others are ignored.\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b PropertyHelper} provides file format "version safety": if you  use a newer control with older property data, or vice versa, your control  shouldn't crash.  The reason is that, assuming you initialize all your  member variables to reasonable default values, then during loading:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab if the data file contains properties that your control doesn't list  in the {\b IVariantIO::Persist}  call, the properties are simply ignored,  and\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab if the control lists a property that isn't in the data file, the  property is skipped (so it contains its default value).\par  \pard\plain \sa160\sl240 \fs21\lang1033 This is safer (and easier) than loading or saving a structure  containing control data.\par  To add {\b PropertyHelper} support to your control, do the following.  These  steps are illustrated by the example in {\b AllocPropertyHelper}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In e.g. control.h, add member variables named {\i m_fDirty} (a BOOL)  and {\i m_punkPropHelp} (an LPUNKNOWN) to your control's C++ class.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In e.g. control.h, make your control's C++ class be based on  {\b IPersistVariantIO}, and declare the methods of {\b IPersistVariantIO}  within the body of the class (you can copy them from the example  in {\b AllocPropertyHelper}).  In e.g. control.cpp, you also need to  return {\b IPersistVariantIO} from your {\b QueryInterface}  (or {\b NonDelegatingQueryInterface}) function.  Also, you need to  write the methods of {\b IPersistVariantIO}: you can implement  {\b IPersistVariantIO::DoPersist}  as shown above; you can return  E_NOTIMPL for {\b IPersistVariantIO::InitNew} ; you can return  ({\i m_fDirty} ? S_OK : S_FALSE) for {\b IPersistVariantIO::IsDirty} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In e.g. control.cpp, call {\b AllocPropertyHelper} in your constructor  and save the returned pointer in {\i m_punkPropHelp}.  In your  destructor, call {\i m_punkPropHelp}->{\i m_punkPropHelp} (if  non-NULL).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In e.g. control.cpp, in your {\b QueryInterface} (or  {\b NonDelegatingQueryInterface}) function, call  {\i m_punkPropHelp}->{\b QueryInterface} in response to queries for  {\b IPersistStream}, {\b IPersistStreamInit}, {\b IPropertyBag}, and  {\b IDispatch} (or in response to any unknown interface, as shown in  the example in {\b AllocPropertyHelper}).\par  \pard\plain \sa160\sl240 \fs21\lang1033 To test persistence, run OCTest and create an instance of your  control, then do File: Save As to save the control's data in CSV or HTML  format.  Alternatively, run OCTest and open the supplied "test.htm" file;  then do File: Save, which should rewrite test.htm with the new properties  added as <PARAM> tags.\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2.3. Adding Support For Properties And Methods\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 Section  {\b 4.2.2. Adding Support For Persistence And Simple IDispatch} describes how you can get "free" properties using {\b AllocPropertyHelper};  this section explains how you can add arbitrary properties and methods  to your control.\par  {\b OCHelp}  supports {\i late-bound}  properties and methods by helping you  implement {\b IDispatch::GetIDsOfNames}  and {\b IDispatch::Invoke}  in your  control; this method does not provide type information via  {\b IDispatch::GetTypeInfoCount}  and {\b IDispatch::GetTypeInfo} .  This  means that {\b OCHelp}  does not directly provide support for implementing  "dual interfaces" (which allow for both {\i early-bound}  and {\i late-bound} access).  It's important to understand that {\b OCHelp}  does not {\i preclude} you from implementing dual interfaces -- you simply need to create a .odl  file and call {\b CreateStdDispatch} when any of your {\b IDispatch} functions  is first called, and then forward that and future {\b IDispatch} calls to  the {\b StdDispatch} object.\par  (If you're wondering why {\b OCHelp}  took the late-bound approach: the reason is  that this approach reduces the size, complexity, and memory footprint of a  simple control, since no .odl file need be created and the standard type  library-based {\b IDispatch} object doesn't need to be loaded in memory.  Also, we think {\b OCHelp} 's approach implements a faster {\b IDispatch}, though  we haven't tested this extensively.  The major drawback is that {\b OCHelp} approach doesn't allow for early-bound function calls, which would be even  faster than {\b OCHelp} 's {\b IDispatch} support, but we felt that the speed of  script code was less importnat for controls intended for the HTML web pages,  which is {\b OCHelp} 's primary target.  Also, VBS currently doesn't even support  early-bound function calls, so the advantage of a dual interface is lost in  this case anyway.  Finally, controls like {\b Line} provide an interface like  {\b ILineOC}, which are even more efficient for C++ programs to access than  the most efficient dual interfaces, because {\b ILineOC} transfers data in  structure form rather than as individual properties.)\par  Also, if you already (or plan to) implement property bag persistence using  the method described section  {\b 4.2.2. Adding Support For Persistence And Simple IDispatch} see that section for more information about the "free" {\b IDispatch}  property support you get.  (If you want to use both the {\b IDispatch}  provided by {\b AllocPropertyHelper} and custom extra properties and methods,  just call the {\b IDispatch} returned by {\b AllocPropertyHelper} in your  {\b IDispatch::GetIDsOfNames}  and {\b IDispatch::Invoke}  functions instead  of returning DISP_E_UNKNOWNNAME or DISP_E_MEMBERNOTFOUND.)\par  To add {\b IDispatch} support to your control, do the following.  These  steps are illustrated by {\b IDispatch} methods in MiniAuto\\control.cpp.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In e.g. control.h, make your control's C++ class be based on  {\b IDispatch}, and declare the methods of {\b IDispatch}  within the body of the class (you can copy them from  MiniAuto\\control.h).  In e.g. control.cpp, you also need to  return {\b IDispatch} from your {\b QueryInterface}  (or {\b NonDelegatingQueryInterface}) function.  Also, you need to  write the methods of {\b IDispatch} -- for now, copy the methods from  MiniAuto\\control.cpp -- the instructions below expain how to  modify {\b IDispatch::Invoke} .  (For more information about how  {\b IDispatch::GetIDsOfNames}  works, see the {\b OCHelp}  function  {\b DispatchHelpGetIDsOfNames}, though you shouldn't need to modify  the default implementation copied from MiniAuto.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In e.g. control.h, define DISPID_ constants corresponding to each  of the methods and properties you want to define.  You also need to  define METH_PROP_NAMES to contain a list of property & method names,  corresponding to the DISPID_ values, with each name terminated by  '\\n'.  For an example, see the definition of DISPID_* and  METH_PROP_NAMES in MiniAuto\\MiniAuto.h.  (Note that this example  leaves DISPID zero unused, since it has special meaning.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In e.g. control.cpp, in your defininition of {\b IDispatch::Invoke} follow the example shown in the {\b Invoke} function copied from  MiniAuto, and define one {\b case} in the {\b switch} statement for each  property or method you want to implement.  A given {\b case} will  be executed whenever e.g. VBS script code accesses (reads, writes, or  calls) that property or method.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 {\b OCHelp}  helps you with one aspect of the implementation of  {\b Invoke}: "parsing" the arguments and coercing them to the desired  parameter types.  To do this, call {\b DispatchGetArgs}.  For example  "DispatchGetArgs({\i pdispparams}, 0, VT_INT, &{\i m_iFoo}, 0)"  will assume that {\i pdispparams} (passed to {\b Invoke}) contains  a single argument, which is coerced to type "int" and stored  in variable {\i m_iFoo}.  Note that VT_INT in this example refers to  the type of {\i m_iFoo} -- the actual passed argument can be of any  type that can be coerced to VT_INT.  See {\b DispatchGetArgs} for more  information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab If you need to return a string from a property or method call, the  {\b OCHelp}  function {\b VariantFromString} may help.\par  \pard\plain \sa160\sl240 \fs21\lang1033 To test {\b IDispatch} support, you can write VBS code as shown in  MiniAuto\\test.htm.  In the case of controls based on TinyAuto or MiniAuto,  you can also test the control in VB4, by loading the control using  VB's "CreateObject" function and accessing properties and methods through  a VB variable of type Object.\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2.4. Adding Support For Events\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 A control can notify its container (e.g. an HTML page) that an  event has occurred.  This is done by having the control "fire" an event,  which just means that the control calls a function provided by the  container (typically in the container's code, e.g. VBS script).  {\b OCHelp} helps a control implement support for firing events, including implementation  of {\b IProvideClassInfo}, {\b IConnectionPointContainer}, {\b IConnectionPoint},  and (via OLE automation helper functions) {\b ITypeLib} and {\b ITypeInfo}.\par  {\b Note:}  As of 5/96, event support does not work for windowless  controls embedded in IE3 via {\b HostLW} and/or {\b Stage}, because {\b HostLW}  and {\b Stage} do not yet implement event transfer.  This information may be  out of date -- if you need event support in a windowless control,  contact EricLe to get current information.\par  To add event support to your control, do the following.  These  steps are illustrated by MiniAuto\\control.odl, MiniAuto\\MiniAuto.h,  MiniAuto\\control.h, and MiniAuto\\control.cpp.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In e.g. control.h, make your control's C++ class be based on  {\b IConnectionPointContainer}, and declare the methods of  {\b IConnectionPointContainer} within the body of the class (you can  copy them from MiniAuto\\control.h).  In e.g. control.cpp, you also  need to return {\b IConnectionPointContainer} from your  {\b QueryInterface} (or {\b NonDelegatingQueryInterface}) function.  Also, you need to implement the methods of  {\b IConnectionPointContainer} -- but you can just copy the default  implementation from MiniAuto\\control.cpp.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 In e.g. control.h, declare a member variable {\i m_pconpt} of type  "IConnectionPointHelper *" in your control's C++ class.  In e.g.  control.cpp, call {\b AllocConnectionPointHelper} (as shown in  MiniAuto\\control.cpp) in your C++ class's constructor to initialize  {\i m_pconpt}, replacing "MiniAuto" with the name of your control  (e.g. "FubarOC").  Also, call {\b FreeConnectionPointHelper} in your  destructor to free {\i m_pconpt}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In e.g. control.h, make your control's C++ class be based on  {\b IProvideClassInfo}, and declare the method of {\b IProvideClassInfo}  within the body of the class (you can copy them from  MiniAuto\\control.h).  In e.g. control.cpp, you also need to  return {\b IProvideClassInfo} from your {\b QueryInterface}  (or {\b NonDelegatingQueryInterface}) function.  Also, you need to  implement {\b IProvideClassInfo::GetClassInfo}  -- but you can just  copy the default implementation from MiniAuto\\control.cpp  (and simply change CLSID_CMiniAuto to the class ID of your control).  (For more information about how {\b IProvideClassInfo::GetClassInfo} works, see the {\b OCHelp}  function {\b HelpGetClassInfoFromTypeLib},  though you shouldn't need to modify the default implementation copied  from MiniAuto.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In e.g. control.h, define DISPID_EVENT_ constants corresponding to each  of the events want to define.  For an example, see the definition of  DISPID_EVENT_* in MiniAuto\\MiniAuto.h.  (Note that this example  leaves DISPID zero unused, since it has special meaning.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In e.g. control.h, create a new GUID (using guidgen.exe) corresponding  to DIID_DFubarOCEvents, replacing "FubarOC" with the name of your  control.  This should look like the definition of  _DIID_DMiniAutoEvents and DIID_DMiniAutoEvents in MiniAuto\\MiniAuto.h.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Create a "control.odl" file that's initially a copy of  MiniAuto\\control.odl.  Change #include "MiniAuto.h" to #include  "control.h".  Replace all other occurrences of "MiniAuto" with the  name of your control (e.g. "FubarOC").  Use guidgen.exe to generate  a new GUID that replaces the GUID above the "library" line.  Replace the list of "methods:" with your control's actual events;  the "id()" values must be DISPID_EVENT_ constants as described above.  Add the control.odl file to your VC4 project (via Insert Files Into  Project).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Since you're #include-ing "control.h" into your .odl file, you need  to ensure that anything in your "control.h" other than #define  statements is surrounded by "#ifndef __MKTYPLIB__ ... #endif".  This includes statements like DEFINE_GUID(...), but not  #define _CLSID_... .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab If your control doesn't yet have any resources, create an empty  resource script as follows in VC4: click File, New, Resource Script,  OK.  Save the resource script (e.g. to "resource.rc").  Click Window,  Close All.  Use Insert Files Into Project to add your resource script  to your project.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In VC4, select View Resource Includes, and in the "Compile-time  directives" box type the following:\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 1 TYPELIB "control.tlb"\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 This makes the type library file generated from control.odl be  linked into your control's DLL as a resource.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In the .cpp file (e.g. dll.cpp) that contains "#include  <initguid.h>", add "#include <olectlid.h>" {\i after} <initguid.h>.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Anywhere in your code where you want to fire an event, simply call  {\i m_pconpt}->{\b FireEvent}, which calls  {\b IConnectionPointHelper::FireEvent} .  For example:\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 m_pconpt->FireEvent(DISPID_EVENT_BAR, VT_INT, i,\par              VT_LPSTR, ach, VT_BOOL, f, 0);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 This will invoke the event identified by DISPID_EVENT_BAR, passing  parameters {\i i}, {\i ach}, and {\i f}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 To test event support, you can write VBS event processing subroutines  (like the "Bar(i, sz, f)" example above) as shown in MiniAuto\\test.htm.  As of this writing, event support has not been tested in VB4; if it works,  it will only likely work for controls based on CircOC (and, eventually, maybe,  windowless controls embedded in HostLWOC).\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2.5. Adding Support For Accessing Container's Ambient Properties\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 An "ambient property" is a property (accessible via  {\b IDispatch::Invoke}  typically using special predefined DISPID_ constants with  negative value) that is defined on the site object that contains a given  control.  Examples of ambient properties are DISPID_AMBIENT_PALETTE (which  is the color table used by the container) and DISPID_AMBIENT_USERMODE  (which indicates whether the container is in "design" mode or "run" mode).\par  To access a container ambient property, a control must call {\b QueryInterface}  on the {\b IOleClientSite} pointer (passed to {\b IOleObject::SetClientSite} to acquire a pointer to the {\b IDispatch} interface on the site object.\par  The container notifies the control of changes in the value of an ambient  property by calling {\b IOleControl::OnAmbientPropertyChange} , passing either  the DISPID of the ambient property whose value has changed, or  DISPID_UNKNOWN which means that any or all ambient properties may have  changed.\par  To add ambient property access to your control, do the following:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab If your control does not yet support {\b IOleObject}, do the following:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 In e.g. control.h, make your control's C++ class be based on  {\b IOleObject}, and declare the methods of {\b IOleObject} within  the body of the class (you can copy them from LineOC\\control.h).  In e.g. control.cpp, you also need to return {\b IOleObject} from your  {\b QueryInterface} (or {\b NonDelegatingQueryInterface}) function.  Also, you need to implement the desired methods of {\b IOleObject};  you can copy a sample implementation from LineOC\\control.cpp.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 You can return E_NOTIMPL from most {\b IOleObject} methods.  The  methods you may want to implement are:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b SetClientSite}: Called by the container to pass you a pointer  to the container's client site.  See LineOC\\control.cpp for an  example.  You need to declare as member variables any pointers  you want to maintain on the client site.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b DoVerb}: For visible controls, {\b DoVerb} is called by the  container to request that your control switch states.  For  example, {\i iVerb}==OLEIVERB_UIACTIVATE indicates that the  container wants your control to "UI-activate" (which means e.g.  acquiring keyboard focus, perhaps because the user tabbed to  your control).  {\b DoVerb} is also called in response to  selection of right-mouse context menu items, as described in  section {\b 4.2.7. Adding Support For Context Menu Items} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b EnumVerbs}, {\b GetUserType}: Also required for supporting  right-mouse context menu items.  Both can be implemented using  helper functions, as demonstrated by LineOC\\control.cpp.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b GetMiscStatus}: Tells the container things like whether or not  your control wants to be activated whenever it is visible.  See the example in LineOC\\control.cpp.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 For the purposes of adding support for accessing container ambient  properties, you only need to implement {\b IOleObject::SetClientSite} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab If your control does not yet support {\b IOleControl} and you want  to be notified of ambient property changes, do the following:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 In e.g. control.h, make your control's C++ class be based on  {\b IOleControl}, and declare the methods of {\b IOleControl} within  the body of the class (you can copy them from LineOC\\control.h).  In e.g. control.cpp, you also need to return {\b IOleControl} from your  {\b QueryInterface} (or {\b NonDelegatingQueryInterface}) function.  Also, you need to implement the desired methods of {\b IOleControl};  you can copy a sample implementation from LineOC\\control.cpp.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 You can return E_NOTIMPL from all methods of {\b IOleControl} but  in order to receive notification of ambient property changes you  should implement {\b IOleControl::OnAmbientPropertyChange} .  See  LineOC\\control.cpp for an example; this function uses the {\b OCHelp} function {\b DispatchPropertyGet} to retrieve the actual ambient  property value.\par  \pard\plain \sa160\sl240 \fs21\lang1033 To test ambient property access, load your control into OCTest.  When you switch from design mode to run (or "preview") mode, your  control's {\b IOleControl::OnAmbientPropertyChange}  should be called, and  you can check the value of ambient property DISPID_AMBIENT_USERMODE to  see if OCTest is in design mode (zero) or run mode (nonzero).\par  Similarly, OCTest changes the value of DISPID_AMBIENT_PALETTE whenever  the ambient palette changes; see {\b IOleControl::OnAmbientPropertyChange} in PalOC\\control.cpp for an example.\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2.6. Adding Support For Property Pages\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 In containers (like OCTest) that allow authoring (i.e. that enable  "design mode"), a control's properties may be edited by a user using one or  more "property pages" provided by the control.  For example, run OCTest  and create a new {\b Line} control, then right-click on the line and select  "Properties...".\par  A property page (like the one labelled "Line" in the above example) is really  a simple invisible ActiveX control.  "Invisible," you ask?  Yes -- although  the property page itself is visible, the ActiveX control that implements the  property does not implement {\b IViewObject} or any HWND.  Instead, it only  implements {\b IPropertyPage}, which contains an {\b Activate} method which  is used to ask the property page to create a child window containing a  dialog box.  It's this dialog box that you actually see in the "Line"  property page in the example above.  (The window that contains one or more  pages, as well as OK, Cancel, and Apply buttons, is called a "property frame".)\par  {\b OCHelp}  simplifies the task of implementing a property page for your control:  much of the "housekeeping" work of maintaining the property page is done  by {\b OCHelp} 's {\b PropPageHelper} object, allocated using  {\b AllocPropPageHelper}.  Since property pages are normally available only in  the design-time version of a control, you may choose to enclose all  property-page related code in "#ifdef _DESIGN ... #endif", as shown in LineOC.\par  To add a property page to your control, do the following:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab If your control does not yet support {\b ISpecifyPropertyPages}, do the  following:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 In e.g. control.h, make your control's C++ class be based on  {\b ISpecifyPropertyPages}, and declare the methods of  {\b ISpecifyPropertyPages} within the body of the class (you can copy  them from LineOC\\control.h).  In e.g. control.cpp, you also need to  return {\b ISpecifyPropertyPages} from your {\b QueryInterface} (or  {\b NonDelegatingQueryInterface}) function.  Also, you need to  implement {\b ISpecifyPropertyPages::GetPages} , but you can simply  copy the sample implementation from LineOC\\control.cpp (changing  "CLSID_CLinePP" to a new class ID for your property page, e.g.  "CLSID_CFubarPP" if your control is named "Fubar").\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Copy LineOC\\proppage.cpp and LineOC\\proppage.h to your control's  directory.  Change all occurrences of "Line" to the name of your  control (e.g. "Fubar") -- the class ID name of the property page in  proppage.h should match that specified in  {\b ISpecifyPropertyPages::GetPages}  (above).  Use guidgen.exe to  change the value of the class ID in proppage.h.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab When the property page is displayed, the property page object  (e.g. FubarPP, defined in proppage.cpp) needs to have a way to  communicate with the objects it is operating upon (e.g. FubarOC,  defined in control.cpp).  "Objects" is plural because in theory  a single property page may operate on a multiple selection, though  many containers don't support this.  To accomplish this communication,  you need to define a private interface (e.g. {\b IFubarOC}) on your  control (e.g. FubarOC) that FubarPP can talk to.  (Careful: don't  assume you can cast an interface pointer back to a pointer to  CFubarOC -- it won't work.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 LineOC's private interface is called {\b ILineOC}, and is declared in  LineOC\\LineOC.h.  The interface is very simple: {\b ILineOC::GetInfo} retrieves a structure containing data (attributes) from the control,  and {\b ILineOC::SetInfo}  gives the control new data (attributes).  In addition to supporting property pages, this interface serves a  second purpose: it's an efficient way for C++ programs to access  the functionality of the object.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 You need to define an interface like {\b IFubarOC}, and if you haven't  already you should probably define a .h file (like FubarOC.h) to  contain "public" definitions.  (On the other hand, control.h contains  definitions private to your control's DLL.  FubarOC.h would need to  be #included by any C++ program that wants to access {\b ILineOC}.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In VC4, create a dialog box resource that contains the property page  (see LineOC for an example).  Make the ID of the property page be  IDD_PROPPAGE.  Also, define a string resource that contains the name  of the control to be used on the property page's tab (e.g. "Fubar"),  and make the ID of that string resource be IDS_PROPPAGE.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\fi-360\li720\emdash\tab In proppage.cpp, take a look at {\b FubarPPDialogProc}.  This is the  dialog box procedure that implements your property page.  This is  pretty much an ordinary dialog box procedure, except that:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\tx1200\fi-360\li1200\emdash\tab you get extra {\b PropPageHelperInfo} * and HRESULT * parameters, and\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\tx1200\fi-360\li1200\emdash\tab you never call {\b EndDialog}, and\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab you receive a WM_PPH_APPLY message when the user hits the "Apply"  button.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 In WM_INITDIALOG, you get information from the {\b PropPageHelperInfo},  including a list of pointers to {\b IFubarOC} interfaces, one pointer  for each object that the property sheet is operating on, and you  copy data from these control(s) into your property sheet dialog.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 Similarly, when WM_PPH_APPLY is received, data is copied from the  property sheet dialog into {\b IFubarOC}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Finally, in order to add the property page object to the list of  ActiveX objects implemented by your control's DLL, edit e.g. dll.cpp  or control.cpp (wherever the {\b ControlInfo} structure or array is  initialized).  If you curently have a single {\b ControlInfo}  structure (e.g. {\i g_ctlinfo}), change it to an array of two  elements (e.g. ControlInfo {\i g_actlinfo}[2]).  If it's already an  array, make it one element larger.  Add the property page object  to the end of the array as shown in LineOC\\dll.cpp; make sure to  "link" the previous item of the array to the new last item in the  array, as shown (by filling in the {\i pNext} field of the previous  item to point to the new last item which contains information about  CFubarPP).\par  \pard\plain \sa160\sl240 \fs21\lang1033 To test your property sheet, load your control into OCTest and  select File: Properties.\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2.7. Adding Support For Context Menu Items\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 Some containers (like OCTest) implement context menus on controls  For example, run OCTest and create a new {\b Line} control, then right-click  on the line.  The "Close", "Save", and "Properties..." menu items are  implemented by OCTest; the "Straighten" menu item is a custom command or  "verb" implemented by the {\b Line} control.  A control can have any number  of context menu items (though it should probably only have a few, else the  context menu will become too long).\par  Coontext menu items probably don't make sense for invisible controls.\par  Since context menu items are often available only in the design-time version  of a control, you may choose to enclose all property-page related code  in "#ifdef _DESIGN ... #endif", as shown in LineOC.\par  To add context menu support to your control, do the following:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab If your control does not yet support {\b IOleObject}, implement  {\b IOleObject} as described in section  {\b 4.2.5. Adding Support For Accessing Container's Ambient Properties} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 For the purposes of adding context menu support, you need to  implement {\b IOleObject::EnumVerbs}  and {\b IOleObject::GetUserType} Both can be implemented using helper functions, as demonstrated by  LineOC\\control.cpp.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 You also need to implement {\b IOleObject::DoVerb} , as demonstrated by  LineOC\\control.cpp.  When the user selects the first verb from the  right-click context menu, {\b DoVerb} is called with {\i iVerb}==0;  the second verb has {\i iVerb}==1, and so on.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab For each verb you want to add, create a string resource formatted  like the IDS_VERB_STRAIGHTEN string in LineOC.  Verbs should have  consecutive string ID numbers (e.g. 100, 101, 102, ...) and the  number to the left of the "=" in the string itself should be  consecutively numbered starting from 0 (e.g. "0=Straighten,0,2",  then "1=Set Color...,0,2", etc.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In dll.cpp or control.cpp (wherever you initialize the control's  {\b ControlInfo} structure), set the {\i uiVerbStrID} to the ID of the  first string resource created above.\par  \pard\plain \sa160\sl240 \fs21\lang1033 To test your context menu items, load your control into OCTest and  right-click on it.\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2.8. Adding A Control To An Existing DLL\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 All the skeleton controls except TinyAuto allow for multiple controls  to be implemented in the same DLL.  This section explains how to add a control  to an existing DLL, assuming the DLL uses {\b OCHelp} 's {\b RegisterControls} and  {\b HelpGetClassObject} (see in dll.cpp in the skeletons).\par  To add a control to your DLL, do the following:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Edit e.g. dll.cpp or control.cpp (wherever the {\b ControlInfo}  structure or array is initialized).  If you curently have a single  {\b ControlInfo} structure (e.g. {\i g_ctlinfo}), change it to an array  of two elements (e.g. ControlInfo {\i g_actlinfo}[2]).  If it's already  an array, make it one element larger.  Add the new control's  {\b ControlInfo} structure to the end of the array; make sure to "link"  the previous item of the array to the new last item in the array  (by filling in the {\i pNext} field of the previous item to point to  the new last item which contains information about the new control).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 For an example of how to do this, see the {\b _DllMainCRTStartup}  function in dll.cpp in LineOC.  (The second "control" in this case is  actually a property page, which is really a special kind of control,  but the registration procedure would be the same for any ordinary  ActiveX control.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Create new files similar to e.g. control.cpp and control.h to  define the C++ class that implements the new control.  Don't forget  to create a GUIDs for the control's class ID.  Add the new  .cpp file to your VC4 project.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Once the control DLL is registered again (which usually happens  automatically when the DLL is built), you should be able to access the  new control from OCTest or any compatible container.\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2.9. Other Useful OCHelp Helper Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 In addition to the {\b OCHelp}  helper functions described in the  previous section, {\b OCHelp}  contains the following useful helper functions:\par  \pard\plain \sa160\sl240 \fs21\lang1033 For sending messages between threads:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b MsgWndPostToCallback}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Posts a message to a hidden message-passing window.  When the  window receives the message, it calls a given callback function.  This can be used to safely pass information between threads.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b MsgWndSendToCallback}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Sends a message to a hidden message-passing window.  When the  window receives the message, it calls a given callback function.  This can be used to safely pass information between threads.\par  \pard\plain \sa160\sl240 \fs21\lang1033 For advising the container of changes in the control's display,  including changes in the control's palette (IE3 currently doesn't support  arbitrary palettes but OCTest does):\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b InitHelpAdvise}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Initializes a {\b HelpAdviseInfo} structure, used to help implement  {\b IViewObject::SetAdvise}  and {\b IViewObject::GetAdvise} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpSetAdvise}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b IViewObject::SetAdvise} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpGetAdvise}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b IViewObject::GetAdvise} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b UninitHelpAdvise}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Peforms final cleanup of a {\b HelpAdviseInfo} structure, including  releasing the {\b IAdviseSink} pointer if necessary.\par  \pard\plain \sa160\sl240 \fs21\lang1033 For helping implement hit-testing of windowless objects, required in  order to fully implement {\b IViewObjectEx}:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpQueryHitPoint}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b IViewObjectEx::QueryHitPoint}  on a control by  drawing the control into a small bitmap (centered on the point  being hit-tested) and checking if any pixels were drawn.\par  \pard\plain \sa160\sl240 \fs21\lang1033 For drawing custom control borders, and/or drawing a rectangular  border with 4 or 8 grab handles:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b CreateBorderBrush}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates and returns a hatch pattern brush used to draw control  resize borders and grab handles.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b DrawControlBorder}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Draws a border used to drag and resize controls.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Finally, see section {\b 2.A. Utility Functions}  for a list  of general-purpose handy utility functions, including memory management,  UNICODE conversions, HIMETRIC conversions, etc.\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2.A. OCImg -- Helpers For Palette & Bitmap Manipulation\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 OCImg is a small DLL that helps implement certain kinds of  graphics-intensive controls.\par  See section {\b 3.1. What Is OCImg.DLL?}  for more information  about OCImg.\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.2.B. OCMisc -- Helpers For Implementing ActiveX Containers\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 OCMisc is a static-link library of helper functions that  provide OC-related functionality that may be useful to some containers  and/or controls, but isn't likely to be useful to most or all controls.\par  See {\b 4.1. What Is OCMisc.LIB?}  for more information about OCMisc.\par  ***********************************************************************\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.3. Sample Controls\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The MM Controls SDK includes the following sample controls that are  built using the SDK.  The source code for each is contained in a directory  given the name of the control, with "OC" appendend for windowed and  windowless controls and "Auto" for invisible controls (also called OLE  automation servers).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b TinyAuto} , {\b MiniAuto} , {\b TinyOC} , {\b CircOC} : These are  "skeleton controls" that are used as a basis for the tutorial-like  instructions for writing a new ActiveX control.  For more information  on these skeleton controls, see  {\b 4.2.1. Getting Started: Creating A Minimal Control}  and  {\b 4.2. Writing Controls -- Step By Step} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b FubarOC}  is a lightweight windowed control that's equivalent to  CircOC, but with the first few steps of  {\b 4.2. Writing Controls -- Step By Step}  already applied to it.  (The steps that were applied are the steps that make the most sense  if you want IE3 compatibility.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b LineOC}  is a lightweight windowless control that displays a line  segment.  See {\b Line} for more information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b PalOC}  is a lightweight windowless control that displays the  container's ambient palette in a 16x16 grid.  PalOC is also useful  for demonstrating simple use of {\b OCImg} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.4. Writing Control Containers\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 In addition to providing helper functions for creating  multimedia-enabled lightweight ActiveX controls, the MM Controls SDK  provides some functions (in a separate static-link library) to help  implement ActiveX control containers.  For more information about any of  the following, see {\b OCMisc}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab To embed an ActiveX control, see {\b AllocSiteLW} and  {\b CreateControlInstance}, and {\b PickClass}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab To persist a control (load and save its data) in binary stream format  or HTML or CSV text format, see  {\b 4.7.4. Persistence Helper Functions}  as well as  {\b PersistSiteProperties} and {\b PersistChild}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab For various utility functions, see  {\b 4.7.A. Miscellaneous Functions}  and  {\b 4.7.5. String and Variant Conversion Functions} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 This SDK doesn't provide tutorial-like instructions for building an  ActiveX control because so few people write containers.  However, if you  need to write a container and would like to discuss the issues related to  doing so, please {\b mailto:EricLe} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5. OCHelp Reference\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 This section contains reference documentation for OCHelp.  For a more "tutorial" approach, see  {\b 4.2. Writing Controls -- Step By Step} .\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5.1. What Is OCHelp?\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5.2. Implementing An In-Process Control DLL\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5.3. Implementing Properties And Methods\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5.4. Calling Properties And Methods\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5.5. Firing Events\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5.6. Thread Safety And Popup Menus\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5.7. Implementing IViewObject\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5.8. Implementing IViewObjectEx\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5.9. Implementing Persistence and Simple IDispatch\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5.A. Utility Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  4.5.B. Design-Time Functions\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5.1. What Is OCHelp?\par  \pard\plain \s93\sl240 \fs21\lang1033  OCHelp is a small (currently about 30KB) DLL that makes it possible to  implement very small controls (under 10KB for relatively simple controls).\par  OCHelp is available in both static-link and dynamic-link forms:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\fi-360\li720\emdash\tab The static-link version will increase the size of your control,  but will eliminate any dependency on the OCHelp DLL.  To use the  the static-link version of OCHelp, link with one of the following  libraries:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\tx1200\fi-360\li1200\emdash\tab {\b debug/OCHelpSD.lib} : the debug version, containing both  design-time and run-time functions (your control will link with  whatever it needs).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b release/OCHelpS.lib} : the release version.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\fi-360\li720\emdash\tab The dynamic-link version can be shared among multiple controls, and is  the better choice if you plan to ship more than one control, or if  it's likely that the end-user's machine will already have the OCHelp  DLL (because the user already viewed a different HTML page or loaded  a different application that depends on OCHelp).  To use the  dynamic-link version of OCHelp, link with one of the following  libraries:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\tx1200\fi-360\li1200\emdash\tab {\b debug/OCHelpDD.lib} : the design-time debug version, which  causes your control to use {\b OCHelpDD.dll} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\tx1200\fi-360\li1200\emdash\tab {\b debug/OCHelpRD.lib} : the run-time debug version, which  causes your control to use {\b OCHelpRD.dll} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\tx1200\fi-360\li1200\emdash\tab {\b release/OCHelpD.lib} : the design-time release version, which  causes your control to use {\b OCHelpD.dll} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b release/OCHelpR.lib} : the run-time release version, which  causes your control to use {\b OCHelpR.dll} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 The various versions of the OCHelp DLLs are installed in the  windows\\system directory when MMCtl is set up.\par  \pard\plain \sa160\sl240 \fs21\lang1033 The following sections provide reference documentation for the  OCHelp API.  For a more "tutorial" approach, see  {\b 4.2. Writing Controls -- Step By Step} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5.2. Implementing An In-Process Control DLL\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following functions help implement an in-process control DLL,  specifically assisting with the implementation of {\b DllRegisterServer},  {\b DllUnregisterServer}, and {\b DllGetClassObject}.  Also, {\b ControlInfo}  contains a field which can be used to provide a one-line implementation  of {\b DllCanUnloadNow}.  These functions allow an arbitrary number of  controls to be implemented in a DLL.  (Note that an OLE property page is just  a simplified case of a control, so property pages are supported as well.)\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpGetClassObject}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b DllGetClassObject} (including the class factory  object it creates) for any number of controls.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b RegisterControls}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Registers or unregisters one or more controls.  Helps implement  {\b DllRegisterServer} and {\b DllUnregisterServer}.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5.3. Implementing Properties And Methods\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following functions make it easier to implement {\b IDispatch}  in your control, which allows other applications (such as VBS) to access  properties and methods of your controls.  Only late-bound OLE automation  is supported -- no early-bound or dual interfaces.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b DispatchGetArgs}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Retrieves arguments from a DISPPARAMS structure passed to  {\b IDispatch::Invoke} .  Arguments are stored in variables that  are passed to {\b DispatchGetArgs} as a va_list array.  Used to help implement {\b IDispatch::Invoke} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b DispatchGetArgsList}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Retrieves arguments from a DISPPARAMS structure passed to  {\b IDispatch::Invoke} .  Arguments are stored in variables that  are passed to {\b DispatchGetArgsList} as a va_list array.  Used to help implement {\b IDispatch::Invoke} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b DispatchHelpGetIDsOfNames}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b IDispatch::GetIDsOfNames}  given a string that  contains the list of {\b IDispatch} member names.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b VariantFromString}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Initializes a VARIANT to contain the copy of an LPCTSTR string.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5.4. Calling Properties And Methods\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following functions make it easier to call {\b IDispatch} to  access the properties and methods of another object (e.g. to fire events  from your control to the container, or to access ambient properites of  the container).\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b DispatchInvoke}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Calls {\b IDispatch::Invoke}  on a given {\b IDispatch} object, passing  arguments specified as a variable-length list of arguments.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b DispatchInvokeList}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Calls {\b IDispatch::Invoke}  on a given {\b IDispatch} object, passing  arguments specified as a va_list array.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b DispatchPropertyGet}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Gets the value of a given property on a given {\b IDispatch} object.  Used to help call {\b IDispatch::Invoke} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b DispatchPropertyPut}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Sets the value of a given property on a given {\b IDispatch} object.  Used to help call {\b IDispatch::Invoke} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5.5. Firing Events\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following functions make it easier to fire events (e.g. that  cause VBS code to be executed in the container).  Multicasting is supported.  Only a single {\b IDispatch}-based event set is supported per control.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocConnectionPointHelper}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Allocates a {\b ConnectionPointHelper} object, which provides a simple  implementation of an {\b IDispatch}-based {\b IConnectionPoint},  and methods for firing events.  Also contains helper functions for implementing  {\b IConnectionPointContainer::EnumConnectionPoints}  in the case where  this is only connection maintained by the connection point container.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b FreeConnectionPointHelper}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Frees a {\b ConnectionPointHelper} object allocated using  {\b AllocConnectionPointHelper}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpGetClassInfoFromTypeLib}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b IProvideClassInfo::GetClassInfo}  using a  caller-provided type library.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5.6. Thread Safety And Popup Menus\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following functions allow messages to be passed from one thread  to another by sending or posting window messages to a hidden window.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b MsgWndCreate}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates the hidden message-passing window (if it doesn't exist).  This window is used by {\b MsgWndSendToCallback},  {\b MsgWndPostToCallback}, and {\b MsgWndTrackPopupMenuEx}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b MsgWndDestroy}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Destroys a hidden message-passing window that was previously created  by calling {\b MsgWndCreate}.  Before the window is destroyed, all  pending messages are dispatched in it.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b MsgWndPostToCallback}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Posts a message to the control's hidden message-passing window  (typically created by calling {\b MsgWndCreate} in the control's  constructor).  When the window receives the message, it calls a given  callback function.  This can be used to safely pass information  between threads.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b MsgWndSendToCallback}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Sends a message to the control's hidden message-passing window  (typically created by calling {\b MsgWndCreate} in the control's  constructor).  When the window receives the message, it calls a given  callback function.  This can be used to safely pass information  between threads.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b MsgWndTrackPopupMenuEx}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Calls {\b TrackPopupMenuEx} to display a popup menu, and directs  WM_COMMAND messages to a given callback function.  Can be used by  a windowless control to display a popup context menu.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5.7. Implementing IViewObject\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following functions help a control writer implement  {\b IViewObject}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b InitHelpAdvise}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Initializes a {\b HelpAdviseInfo} structure, used to help implement  {\b IViewObject::SetAdvise}  and {\b IViewObject::GetAdvise} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpSetAdvise}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b IViewObject::SetAdvise} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpGetAdvise}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b IViewObject::GetAdvise} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b UninitHelpAdvise}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Peforms final cleanup of a {\b HelpAdviseInfo} structure, including  releasing the {\b IAdviseSink} pointer if necessary.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5.8. Implementing IViewObjectEx\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following functions help a control writer implement  {\b IViewObjectEx}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpQueryHitPoint}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b IViewObjectEx::QueryHitPoint}  on a control by  drawing the control into a small bitmap (centered on the point  being hit-tested) and checking if any pixels were drawn.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5.9. Implementing Persistence and Simple IDispatch\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following functions help implement {\b IPersistPropertyBag},  {\b IPersistStreamInit}, and a simple (simplistic?) but very lightweight  (control code size) {\b IDispatch}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocPropertyBagOnStream}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates a {\b PropertyBagOnStream} object which implements  {\b IPropertyBag} whose properties are contained in a given {\b IStream}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocPropertyBagOnVariantProperty}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates a {\b PropertyBagOnVariantProperty} object which implements  {\b IPropertyBag} whose only property is contained in a given  {\b VariantProperty}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocPropertyHelper}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Allocates a {\b PropertyHelper} object which provides an implementation  of {\b IPersist}, {\b IPersistPropertyBag}, {\b IPersistStream},  {\b IPersistStreamInit}, and a simplified implementation of  {\b IDispatch}, for any object which implements {\b IPersistVariantIO}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocVariantIOOnPropertyBag}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates a {\b VariantIOOnPropertyBag} object which provides an  implementation of {\b IVariantIO} (and {\b IManageVariantIO})  that operates on a given {\b IPropertyBag}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocVariantIOToMapDISPID}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates a {\b VariantIOToMapDISPID} object which provides an  implementation of {\b IVariantIO} which is used to map a property name  to a DISPID (property number) or vice versa.  Can also be used to get  or set the value of that property.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b LoadPropertyBagFromStream}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Load properties that are stored in an {\b IStream} (in the simple  tagged binary format written by {\b WriteVariantProperty}) into an  {\b IPropertyBag} object.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b PersistVariantIO}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Loads or saves a list of property name/value pairs, specified as a  variable-length list of arguments that's formatted in the same way as  {\b IVariantIO::Persist} , to/from an {\b IPropertyBag} object.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b PersistVariantIOList}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Loads or saves a list of property name/value pairs, specified as a  va_list array that's formatted in the same way as  {\b IVariantIO::Persist} , to/from an {\b IPropertyBag} object.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b ReadVariantProperty}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Reads a {\b VariantProperty} from an {\b IStream} in a simple tagged  binary format.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b VariantPropertyClear}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Frees data maintained in a {\b VariantProperty} structure.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b VariantPropertyInit}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Initializes a {\b VariantProperty} structure.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b WriteVariantProperty}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Writes a {\b VariantProperty} to an {\b IStream} in a simple tagged  binary format.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5.A. Utility Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following are general-purpose utility functions.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b ANSIToUNICODE}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Converts an ANSI string to UNICODE.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b CompareUNICODEStrings}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Compares two UNICODE strings.  The comparison is case-insensitive.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b FindCharInString}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Searches a string to find a specific character.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b FindCharInString}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Searches a string from back-to-front to find a specific character.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b FindStringByIndex}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Finds a string with a given index in a list of strings.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b FindStringByValue}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Looks up string in a list of strings and returns the index of the  string (if found).\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpDelete}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Frees memory allocated by {\b HelpNew}.  This is simply a macro  that calls {\b HelpMemFree} with specific flags.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpMemAlloc}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Allocates memory using either {\b GlobalAlloc} or the task memory  allocator retrieved using {\b CoGetMalloc}.  Optionally  zero-initializes the memory.  Optionally performs simple memory leak  detection.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpMemFree}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Frees a block of memory previously allocated using {\b HelpMemAlloc}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpMemSetFailureMode}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Sets failure conditions for the memory allocator.  This can be used  to simulate low-memory conditions and test a system's ability to  detect and/or handle these conditions.  Only available in DEBUG builds  of {\b OCHelp} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpNew}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Helps implement a version of the "new" operator that doesn't  use the C runtime.  Zero-initializes the allocated memory.  This is simply a macro that calls {\b HelpMemAlloc} with specific  flags.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HIMETRICToPixels}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Converts a width and height from HIMETRIC units to pixels  (on the default monitor).\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b PixelsToHIMETRIC}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Converts a width and height from pixels (on the default monitor)  to HIMETRIC units.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b TaskMemAlloc}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Allocates memory using the task memory allocator (see {\b CoGetMalloc}).  This is simply a macro that calls {\b HelpMemAlloc} with specific  flags.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b TaskMemFree}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Frees a block of memory previously allocated using {\b TaskMemAlloc}.  This is simply a macro that calls {\b HelpMemFree} with specific  flags.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b UNICODEToANSI}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Converts a UNICODE string to ANSI.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b UNICODEConcat}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Concatenates one UNICODE string to another.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b UNICODECopy}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Copies one UNICODE string to another.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.5.B. Design-Time Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following are only available in the design-time version of  OCHelp.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocPropPageHelper}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Allocates a {\b PropPageHelper} object which helps a control implement  a property page.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocVerbEnumHelper}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Allocates and initializes a verb enumeration helper.  Aids in  implementing {\b IOleObject::EnumVerbs} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b CreateBorderBrush}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates and returns a hatch pattern brush used to draw control  resize borders and grab handles.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b DrawControlBorder}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Draws a border used to drag and resize controls.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.6. OCImg Reference\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \s93\sl240 \fs21\lang1033  4.6.1. What Is OCImg?\par  \pard\plain \s93\sl240 \fs21\lang1033  4.6.2. Working With Bitmaps\par  \pard\plain \s93\sl240 \fs21\lang1033  4.6.3. Working With Palettes\par  \pard\plain \s93\sl240 \fs21\lang1033  4.6.4. Utility Functions\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.6.1. What Is OCImg?\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 OCImg is a small (30-40KB as of 5/96) DLL that helps implement  certain kinds of graphics-intensive controls.\par  OCImg is actually a subset of the MKImage library, packaged as a DLL (instead  of as a static-link library) to help minimize the amount of code that would  need to be downloaded for Internet controls.  Specifically, any topic in the  sections below that is not hyperlinked is not contained in OCImg -- though  if you think should be, contact the MM Controls team.\par  \pard\plain \s93\sl240 \fs21\lang1033  A.1. What Is MKImage 2.0?\par  \pard\plain \s93\sl240 \fs21\lang1033  A.2. MKImage Fundamentals\par  \pard\plain \s93\sl240 \fs21\lang1033  A.3. Using MKImage 2.0\par  \pard\plain \s93\sl240 \fs21\lang1033  A.4. MKImage Interfaces\par  \pard\plain \s93\sl240 \fs21\lang1033  A.5. MKImage Structures\par  \pard\plain \s93\sl240 \fs21\lang1033  A.6. Sample Code\par  \pard\plain \s93\sl240 \fs21\lang1033  A.7. MKImage HRESULT Codes\par  \pard\plain \s93\sl240 \fs21\lang1033  A.8. Changes Since MKImage 1.0\par  \pard\plain \s93\sl240 \fs21\lang1033  A.9. Known Bugs\par  \pard\plain \s93\sl240 \fs21\lang1033  A.A. MKImage Code Size\par  \pard\plain \par \pard\plain \sa160\sl240 \fs21\lang1033 To use OCImg, link with one of the following libraries:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\fi-360\li720\emdash\tab {\b debug/OCImgDD.lib} : the design-time debug version, which  causes your control to use {\b OCImgDD.dll} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\fi-360\li720\emdash\tab {\b debug/OCImgRD.lib} : the run-time debug version, which  causes your control to use {\b OCImgRD.dll} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\fi-360\li720\emdash\tab {\b release/OCImgD.lib} : the design-time release version, which  causes your control to use {\b OCImgD.dll} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b release/OCImgR.lib} : the run-time release version, which  causes your control to use {\b OCImgR.dll} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 The various versions of the OCImg DLLs are installed in the  windows\\system directory when MMCtl is set up.\par  Since the contents of each of the four variants of the OCImg DLL are still  in flux, the easiest way to see what functionality from MKImage is included  in run-time vs design-time versions is to take a look at the .def files  which define this: {\b OCImg/OCImgD.def}  and {\b OCImg/OCImgR.def} respectively.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.6.2. Working With Bitmaps\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Important:}   The following is documentation from MKImage,  from which OCImg*.DLL is derived.  Any topic in the sections below that is not  hyperlinked is not contained in OCImg -- though if you think should be,  contact the MM Controls team.\par  \pard\plain \s93\sl240 \fs21\lang1033  B.1. Creating And Converting Bitmaps\par  \pard\plain \s93\sl240 \fs21\lang1033  B.2. Bitmap I/O Via IStream\par  \pard\plain \s93\sl240 \fs21\lang1033  B.3. Bitmap I/O Convenience Utilities\par  \pard\plain \s93\sl240 \fs21\lang1033  B.4. Bitmap Clipboard Operations\par  \pard\plain \s93\sl240 \fs21\lang1033  B.5. Bitmap Drag & Drop Operations\par  \pard\plain \s93\sl240 \fs21\lang1033  B.6. Bitmap Drawing Operations\par  \pard\plain \s93\sl240 \fs21\lang1033  B.7. Bitmap Blt And Pixel Access Operations\par  \pard\plain \s93\sl240 \fs21\lang1033  B.8. Bitmap Filtering Operations\par  \pard\plain \s93\sl240 \fs21\lang1033  B.9. Bitmap Information/Utility Functions\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.6.3. Working With Palettes\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Important:}   The following is documentation from MKImage,  from which OCImg*.DLL is derived.  Any topic in the sections below that is not  hyperlinked is not contained in OCImg -- though if you think should be,  contact the MM Controls team.\par  \pard\plain \s93\sl240 \fs21\lang1033  C.1. Creating And Converting Palettes\par  \pard\plain \s93\sl240 \fs21\lang1033  C.2. Palette I/O Via IStream\par  \pard\plain \s93\sl240 \fs21\lang1033  C.3. Palette Clipboard Operations\par  \pard\plain \s93\sl240 \fs21\lang1033  C.4. Palette Utilities\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.6.4. Utility Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Important:}   The following is documentation from MKImage,  from which OCImg*.DLL is derived.  Any topic in the sections below that is not  hyperlinked is not contained in OCImg -- though if you think should be,  contact the MM Controls team.\par  \pard\plain \s93\sl240 \fs21\lang1033  D.1. Initializing MKImage\par  \pard\plain \s93\sl240 \fs21\lang1033  D.2. IStream Utilities\par  \pard\plain \s93\sl240 \fs21\lang1033  D.3. General-Purpose Utilities\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7. OCMisc Reference\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.1. What Is OCMisc?\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.2. Wrapping Windowless Controls\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.3. Creating Controls\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.4. Persistence Helper Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.5. String and Variant Conversion Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.6. Debugging Helper Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.7. Component Categories\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.8. Implementing Persistence and Simple IDispatch In Containers\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.9. Implementing a File MRU List\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.A. Miscellaneous Functions\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.1. What Is OCMisc?\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 OCMisc is a static-link library of helper functions that  provide OC-related functionality that may be useful to some containers  and/or controls, but isn't likely to be useful to most or all controls.  Contrast this with {\b OCHelp}  which contains functionality that is  required by many/most full-featured controls.\par  \pard\plain \sa160\sl240 \fs21\lang1033 To use OCMisc, link with one of the following libraries:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\fi-360\li720\emdash\tab {\b debug/OCMiscDD.lib} : the design-time debug version.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\fi-360\li720\emdash\tab {\b debug/OCMiscRD.lib} : the run-time debug version.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \sa0\tx720\fi-360\li720\emdash\tab {\b release/OCMiscD.lib} : the design-time release version.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b release/OCMiscR.lib} : the run-time release version.\par  \pard\plain \sa160\sl240 \fs21\lang1033 The following sections provide an overview of the OCMisc API.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.2. Wrapping Windowless Controls\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 These functions aid in wrapping an ActiveX lightweight, windowless  control inside of an ActiveX windowed control.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocSiteLW}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates a {\b SiteLW} object that can host a single lightweight  windowless ActiveX control.  (Actually {\b SiteLW} can also host a  windowed control, but support for windowed controls isn't nearly  as robust.  If you need this functionality, please {\b mailto:EricLe} .)\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b SiteLW}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Implements {\b ISiteLW}, which implements an ActiveX windowed  control that hosts an ActiveX lightweight windowless control.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b ISiteLW}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Interface to a {\b SiteLW} object, which implements an ActiveX  windowed control that hosts an ActiveX lightweight windowless  control.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.3. Creating Controls\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 These functions aid in creating controls.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b CreateControlInstance}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates a new instance of a control given either a class ID (in  string form) or a ProgID.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.4. Persistence Helper Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 These functions aid in implementing streams.\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.4.1. Generic Persistence Helper Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.4.2. CSV (Comma-Separated-Values) Persistence Helper Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  4.7.4.3. HTML Persistence Helper Functions\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.4.1. Generic Persistence Helper Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 These functions aid in implementing streams independent  of the stream format.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b GetStreamLengthToEnd}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Calculates the distance (in bytes) between the current position  in a stream and the end of the stream.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b ReadStreamToMemory}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Read bytes from a stream into memory (which is allocated by this  function).  Reads either a given number of bytes or until the end  of the stream.  The returned block of memory is null-terminated.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b LoadFromStream}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Read a stream that contains the class ID and data of an object  previously saved using {\b IPersistStream::Save} , and create an object  that contains the data from the stream.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b SaveToStream}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Save an object that supports {\b IPersistStream} to an  {\b IStream} in a simple binary tagged file format.  Can also be used to save just a class ID to a stream (which is  useful for saving an object that doesn't support any persistence  interface).\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.4.2. CSV (Comma-Separated-Values) Persistence Helper Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 These functions aid in implementing streams which store that  contain data in CSV format.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b LoadFromCSV}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Read a CSV (Excel-readable comma-delimited) format stream and  create an object that contains the data from that stream.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b LoadPropertyBagFromCSV}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Load properties that are stored in an {\b IStream} in CSV  (Excel-readable comma-delimited) format into a given  {\b IPropertyBag} object.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b ReadVariantPropertyFromCSV}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Reads a {\b VariantProperty} that's stored in CSV (Excel-readable  comma-delimited) format in a memory buffer.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b SaveToCSV}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Save an object that supports {\b IPersistPropertyBag} to an  {\b IStream} in CSV (Excel-readable comma-delimited) format.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b SaveVariantPropertiesToCSV}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Save an {\b IEnumVariantProperty} object to an {\b IStream} in  CSV (Excel-readable comma-delimited) format.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b WriteVariantPropertyToCSV}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Writes a {\b VariantProperty} to an {\b IStream} in CSV (Excel-readable  comma-delimited) format.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.4.3. HTML Persistence Helper Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 These functions aid in implementing streams which store that  contain data in HTML format.  (Actually, only the a single <OBJECT>  tag within an HTML file can be edited, although the formatting of the  rest of the file is retained.)\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b LoadFromHTML}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Reads an HTML format stream and creates an object specified by an  <OBJECT> tag in that stream.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b LoadPropertyBagFromHTML}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Loads properties that are stored in a <OBJECT> tag in an  {\b IStream} in HTML format into a given {\b IPropertyBag} object.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b ReadHTMLTagToVariantIO}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Reads an HTML tag from a memory buffer and returns an {\b VariantIO}  object that contains the contents of that tag.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b ReadHTMLToken}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Reads an HTML token (word, quoted string, etc.) from an ANSI buffer  and returns it as a BSTR.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b SaveToHTML}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Saves an object that supports {\b IPersistPropertyBag} to an  {\b IStream} in HTML format.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b SaveVariantPropertiesToHTML}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Saves an {\b IEnumVariantProperty} object to an {\b IStream} in  HTML format.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b WriteHTMLTagFromVariantIO}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Writes an HTML tag whose attributes are stored in an {\b VariantIO}  object to an {\b IStream}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b WriteHTMLToken}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Writes an HTML token (given as an LPOLESTR) to an {\b IStream}  in ANSI format.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b WriteVariantPropertyToHTML}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Writes a {\b VariantProperty} to an {\b IStream} in HTML format  as a "<PARAM>" tag.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.5. String and Variant Conversion Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 These functions aid in converting strings and variants.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b PrintableANSIToUNICODE}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Converts a printable ANSI string to UNICODE.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b UNICODEToPrintableANSI}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Converts a UNICODE string to a printable ANSI string.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b VariantTypeNameToNumber}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Converts a VARTYPE string name to a VARTYPE number.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b VariantTypeNumberToName}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Converts a VARTYPE value to a string name that can serve as the  name of the type.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b CLSIDToFriendlyName}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Finds the "friendly name" associated with a given class in the  system registry.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b TCHARFromGUID}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Converts a GUID to a TCHAR-based string representation.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b CLSIDFromTCHAR}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Converts a TCHAR-based string into a CLSID.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.6. Debugging Helper Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 These functions aid in debugging.  They are only available in  DEBUG builds.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b DebugIIDName}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Finds the name of an interface in the system registration  database given the interface's IID (for debugging purposes only).\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.7. Component Categories\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 These functions help select controls which implement particular  component categories.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b PickClass}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Displays a modal "class picker" dialog which lists all the  registered classes which support a given set of component  categories and lets the user choose one, returning its CLSID.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.8. Implementing Persistence and Simple IDispatch In Containers\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following functions (along {\b AllocPropertyHelper} and related  functions) help a control container implement {\b IPersistPropertyBag},  {\b IPersistStreamInit}, and a simple (simplistic?) but very lightweight  (control code size) {\b IDispatch}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocVariantIO}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates a {\b VariantIO} object which provides a property bag  implementation which supports {\b IPropertyBag} as well as  {\b IVariantIO}, {\b IManageVariantIO}, and {\b IEnumVariantProperty}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b PersistSiteProperties}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Loads or saves a list of property name/value pairs associated with  the site of the child of a given object from/to a given {\b IVariantIO}  object.  Used to help implement persistence in control containers.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b PersistChild}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Loads or saves a child of a given container object from/to a given.  {\b IVariantIO} object.  Used to help implement persistence in control  containers.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocChildPropertyBag}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates a {\b ChildPropertyBag} object which implements {\b IPropertyBag}  that provides a child object (contained within a parent object) access  to the child's properties, which are stored within the parent's  property bag.  The name of each child's property is prefixed with a  given string (e.g. "Controls(7).").\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocPropertyBagCompactor}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Creates a {\b PropertyBagCompactor} object which implements  {\b IPropertyBag}, and which reads and writes its data in a  more compact way in a second {\b IPropertyBag} by "folding" multiple  properties with the same period-terminated prefix (e.g. "Foo.X = 42,  Foo.Y = 'Hello'") into a single property (e.g. "Foo = 'X=42,Y=Hello'").\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AllocBindHostService}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Allocates an implementation of {\b IServiceProvider} which provides  the {\b IBindHost} service (SID_IBindHost, IID_IBindHost), which  provides for relative path name resolution when using functions  such as {\b URLOpenStream}.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.9. Implementing a File MRU List\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following functions can be used to implement a registry-based  file MRU list.  The entries in an MRU list are stored as values under a  given registry key.  The list contains a caller-specified maximum number  of entries.  When an entry is added to the list, it always becomes the  "most recent" entry, bumping down less recent entries and, if the list  is full, bumping the least recent entry off the list.  Entries in an  MRU list can be retrieved sequentially from most to least recent; entries  can also be retrieved by index.  Entries can be removed from an MRU  list either by index or by name, and the entire list can be cleared  en masse.  Finally, a utility function exists to map an MRU list  into an application menu.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b OpenMRUList}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Opens a new or existing registry-based MRU list.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b CloseMRUList}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Closes a previously opened MRU list.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b GetMRUListInfo}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Gets information about an MRU list such as the number of entries  in the list, the length of the longest entry, and the maximum  number of entries.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b SetMRUListMaxEntries}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Sets the maximum number of entries in an MRU list, possibly  truncating the list.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b GetNextMRUListEntry}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Retrieves the next entry in an MRU list.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b GetIthMRUListEntry}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Retrieves the i-th entry in an MRU list.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AtEndOfMRUList}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Tests if {\b GetNextMRUListEntry} has advanced to the end of  an MRU list.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b ResetMRUList}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Resets an MRU list so that the next call to  {\b GetNextMRUListEntry} will retrieve the first entry.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b AddMRUListEntry}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Adds an entry to the head of an MRU list.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b RemoveAllMRUListEntries}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Removes all the entries in an MRU list.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b RemoveIthMRUListEntry}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Removes an MRU list entry by index.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b RemoveMRUListEntry}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Removes an MRU list entry by name.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b MapMRUListToMenu}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Maps an MRU list into an application's menu.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 4.7.A. Miscellaneous Functions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following are miscellaneous functions that don't fit in any  other category.  In some cases these functions which may become obsolete  (see the descriptions for more information).  Note that since OCMisc is  a static link library your application is not penalized for the code size  of these functions unless you call them.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b FindStringInString}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Finds a string within another string.  The comparison can be either  case-sensitive or case-insensitive.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b HelpGetClassInfo}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b IProvideClassInfo::GetClassInfo} .  The  implementation provides very limited class information -- just  enough to allow firing events to VBS.  {\b Warning:} you should  probably use {\b HelpGetClassInfoFromTypeLib} instead.  See comments  for more information.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 {\b GetObjectSafety}\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Determines if an object is safe-for-scripting and/or safe-for-initializing  vis-a-vis a given set of interfaces.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 5. The ActiveX Control Architecture And MM Controls Extensions\par  \pard\plain \s93\sl240 \fs21\lang1033  \par  \pard\plain \sa160\sl240 \fs21\lang1033 (This section is under construction...)\par  See also {\b 1.2. MM Controls Requirements Beyond ActiveX} .\par  (Don't forget the IViewObject::Draw S_FALSE thing.)\par  TBD...\par  xxx\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 About Autodoc\par  \pard\plain \s93\sl240 \fs21\lang1033  The sources for this Help file were generated by Autodoc, the source code  documentation tool that generates Print or Help files from tagged  comments in C, C++, Assembly, and Basic source files.\par  For more information, contact Eric Artzt ({\b mailto:erica@microsoft.com} ).\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CircOC\par  \pard\plain \sa160\sl240 \fs21\lang1033 See {\b 4.3. Sample Controls} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 FubarOC\par  \pard\plain \sa160\sl240 \fs21\lang1033 See {\b 4.3. Sample Controls} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 LineOC\par  \pard\plain \sa160\sl240 \fs21\lang1033 See {\b 4.3. Sample Controls} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 MiniAuto\par  \pard\plain \sa160\sl240 \fs21\lang1033 See {\b 4.3. Sample Controls} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCAuthor\par  \pard\plain \sa160\sl240 \fs21\lang1033 OCAuthor is a simple Visual Basic application provided as part of  the MM Controls SDK that functions as a editor and viewer for  lightweight windowed and windowless controls.  OCAuthor supports  saving and editing an <OBJECT> tag in an HTML file.  Most importantly, OCAuthor is a sample application that  demonstrates how to use the {\b OCEdit} control to build ActiveX  control editors in Visual Basic.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 OCAuthor has the following features and restrictions:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCAuthor is a lightweight container that doesn't support all OC96  site interfaces and methods.  This should not be a problem for a  well-behaved OC96 control, since controls should not expect every  site interface to be fully implemented.  However, some controls  may operate incorrectly, or even crash, when used in OCAuthor.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCAuthor can contain only one control at a time.  However, that  control can be {\b Stage} (or {\b HostLW} containing a {\b Stage}),  which allows an arbitrary number of controls to be embedded.  Nested  {\b Stage} controls (i.e. {\b Stage} controls within {\b Stage} controls)  are supported.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCAuthor can save a control's data in {\b HTML}  (Hypertext Markup  Language):  If you create and edit a new control instance (via File  New) and Save As HTML, OCAuthor saves the control's data  (including its class ID) as a simple HTML file containing a single  <OBJECT> tag that contains the data of the control in  <PARAM> tags.  If you open an existing HTML file, then  OCAuthor searches for the first <object> tag (with "object"  spelled in lowercase -- so you can "mark" the one object you want to  edit by making its tag name lowercas), or, if not found, the first  <OBJECT> tag (with "OBJECT" spelled in uppercase), and lets you  edit that object; the rest of the HTML file is left untouched when you  use File Save.  HTML format is only supported for controls that  implement {\b IPersistPropertyBag}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCAuthor supports the concept of both "design mode" and "run mode"  (also called "preview" mode, since it uses the design-time version  of the loaded control and simply places that control in run mode).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCAuthor will display a property pages for the loaded control if  the control implements {\b ISpecifyPropertyPages} (typically only  in design mode).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCAuthor will display a right-click context menu for the control  if the control implements {\b IOleObject::EnumVerbs}  (typically only  in design mode).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In design mode, OCAuthor will display a border with grab handles  around a control, unless the control returns S_FALSE from  {\b IViewObject::Draw}  indicating that it wants to draw its own  grab handles (see  {\b 5. The ActiveX Control Architecture And MM Controls Extensions} for more information about this MM Controls convention).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCAuthor implements {\b IAnimate}, the very simple beginnings of  an "animation event negotiation" interface that allows an ActiveX  container to animate contained controls.  See  {\b 5. The ActiveX Control Architecture And MM Controls Extensions} for more information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 OCAuthor accepts a single command-line parameter, which may be  any of the following:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The ProgID of a control to create a new instance of (e.g.  "line.line.1").\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The class ID of a control to create a new instance of (e.g.  "\{BA6B5D20-8614-11CF-B8ED-0020AF344E0A\}").\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The name of an HTML file to open.\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCHelp\par  \pard\plain \sa160\sl240 \fs21\lang1033 For information about OCHelp, see:  {\b 4.5. OCHelp Reference}  and  {\b 4.2. Writing Controls -- Step By Step} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCImg\par  \pard\plain \sa160\sl240 \fs21\lang1033 For information about OCImg, see:  {\b 4.6. OCImg Reference} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCMisc\par  \pard\plain \sa160\sl240 \fs21\lang1033 For information about OCMisc, see:  {\b 4.7. OCMisc Reference}  and  {\b 4.4. Writing Control Containers} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCTest\par  \pard\plain \sa160\sl240 \fs21\lang1033 OCTest is a simple Windows application provided as part of the  MM Controls SDK that functions as a editor and viewer for  lightweight windowed and windowless controls.  OCTest supports  saving and editing an <OBJECT> tag in an HTML file.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 OCTest is a simple Windows application that internally uses the  {\b SiteLW} object provided in the OCMisc helper library (part of the  MM Controls SDK) to contain a single OLE/ActiveX control.\par  OCTest has the following features and restrictions:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCTest is a lightweight container that doesn't support all OC96  site interfaces and methods.  This should not be a problem for a  well-behaved OC96 control, since controls should not expect every  site interface to be fully implemented.  However, some controls  may operate incorrectly, or even crash, when used in OCTest.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCTest can contain only one control at a time.  However, that  control can be {\b Stage} (or {\b HostLW} containing a {\b Stage}),  which allows an arbitrary number of controls to be embedded.  Nested  {\b Stage} controls (i.e. {\b Stage} controls within {\b Stage} controls)  are supported.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCTest can save a control's data in one of three formats:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b HTML}  (Hypertext Markup Language):  If you create and edit a new  control instance (via File New) and Save As HTML, OCTest saves  the control's data (including its class ID) as a simple HTML file  containing a single <OBJECT> tag that contains the data  of the control in <PARAM> tags.  If you open an existing  HTML file, then OCTest searches for the first <object>  tag (with "object" spelled in lowercase -- so you can "mark" the  one object you want to edit by making its tag name lowercas), or,  if not found, the first <OBJECT> tag (with "OBJECT" spelled  in uppercase), and lets you edit that object; the rest of the  HTML file is left untouched when you use File Save.  HTML format  is only supported for controls that implement  {\b IPersistPropertyBag}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b CSV}  (Comma-Separated Variable):  This is a simple format that  Excel understands (helpful for debugging).  Unlike HTML, CSV saves  the data type (e.g.  VT_I4) of each property, which is useful  for testing a control's behavior when used with property bags that  preserve type information.  CSV format is only supported for  controls that implement {\b IPersistPropertyBag}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b STM}  ({\b IPersistStream} Binary Format):  This binary format  consists of a class ID followed by the data saved via the control's  {\b IPersistStream} interface.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCTest supports the concept of both "design mode" and "run mode"  (also called "preview" mode, since it uses the design-time version  of the loaded control and simply places that control in run mode).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCTest will display a property pages for the loaded control if  the control implements {\b ISpecifyPropertyPages} (typically only  in design mode).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCTest will display a right-click context menu for the control  if the control implements {\b IOleObject::EnumVerbs}  (typically only  in design mode).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab In design mode, OCTest will display a border with grab handles  around a control, unless the control returns S_FALSE from  {\b IViewObject::Draw}  indicating that it wants to draw its own  grab handles (see  {\b 5. The ActiveX Control Architecture And MM Controls Extensions} for more information about this MM Controls convention).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab OCTest implements {\b IAnimate}, the very simple beginnings of  an "animation event negotiation" interface that allows an ActiveX  container to animate contained controls.  See  {\b 5. The ActiveX Control Architecture And MM Controls Extensions} for more information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 OCTest accepts a single command-line parameter, which may be  any of the following:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The ProgID of a control to create a new instance of (e.g.  "line.line.1").\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The class ID of a control to create a new instance of (e.g.  "\{BA6B5D20-8614-11CF-B8ED-0020AF344E0A\}").\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The name of a file (HTML, CSV, STM) to open.  OCTest determines  the type of the file based on the extension (.htm or .html for HTML  files, .csv for CSV files, .stm for STM files).\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PalOC\par  \pard\plain \sa160\sl240 \fs21\lang1033 See {\b 4.3. Sample Controls} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 TinyAuto\par  \pard\plain \sa160\sl240 \fs21\lang1033 See {\b 4.3. Sample Controls} .\par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 TinyOC\par  \pard\plain \sa160\sl240 \fs21\lang1033 See {\b 4.3. Sample Controls} .\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ABAuto Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 A lightweight invisible ActiveX control which accesses the AudioBoy  mixer to allow playing multiple waveform audio files at once.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/ABAUTO.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b  {\b ABAuto::PlayFile} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Loads a .wave file into memory and plays it,  then automatically frees it when it's finished playing.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b  {\b ABAuto::LoadFile} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Loads a .wav file into memory and creates  and returns an {\b ABSound} object to refer to it.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b  {\b ABauto::AttachSound} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Creates and returns an {\b ABChannel}  object (associated with the {\b ABAuto} mixer) and attaches an  {\b ABSound} object to it.  The sound can then be played, stopped, etc.  using methods of {\b ABChannel}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b ABAuto} is a sound mixer.  You can load sounds (using e.g.  {\b ABAuto::LoadFile} ) and play the sounds through the mixer by  first creating a "channel" for each sound to play through  (using {\b ABAuto::AttachSound} ) and then controlling the channel  (using e.g. {\b ABChannel::Play} , {\b ABChannel::Stop} , etc.)  A given sound can be played through multiple channels at once.  All sounds are mixed.  See {\b ABAuto::LoadFile}  for an example.\par  Alternatively, you can play a sound simply by calling  {\b ABAuto::PlayFile} , but this doesn't give you as much control  over the playback.  See {\b ABAuto::PlayFile}  for an example.\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\i For all users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control can be directly embedded in IE3, but not in VB4  because VB doesn't support embedding of lightweight invisible  controls.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The class ID of the design-time version of this control is  "DA3327A0-C543-11CF-B705-00AA00BF27FD"\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab All files played back using {\b ABAuto} must be of the same  format (e.g. 8 or 16 bit, mono or stero, and same sampling  rate such as 22050 or 44100 samples per second).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Currently, compressed files are not supported.\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\i For C++ users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The class ID of this control is defined as CLSID_CABAuto in  "ABAuto.h".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The ProgID of this control is "ABAuto.ABAuto.1".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control implements the following interfaces:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IUnknown}: A delegating {\b IUnknown} that supports  aggregation\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IDispatch}: Provides access to the control's properties.  Does not provide type information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control sources (calls) the following interfaces (if  available) on the container-provided site object:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleClientSite}: The client site pointer provided by  the container.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ABAuto::AttachSound Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b {\b ABChannel} AttachSound(}{\b {\b ABSound}} {\i Sound}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates and returns an {\b ABChannel} object (associated with the  {\b ABAuto} mixer) and attaches a given {\b ABSound} object to it.  The sound can then be played, stopped, etc.  using methods of  {\b ABChannel}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/ABAUTO.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b ABChannel} object which can be used to control the  playback of {\i Sound}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Sound}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The sound to attach to the mixer.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b LoadFile} for an example.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ABAuto::LoadFile Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b {\b ABSound} LoadFile(}{\b String} {\i FileName}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Loads a .wav file into memory and creates and returns an {\b ABSound}  object to refer to it.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/ABAUTO.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b ABSound} object which can be played using  {\b AttachSound} and {\b ABChannel::Play} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i FileName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The name of the file to load.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 Assuming "mixer" is an {\b ABAuto} object, the following VBS code plays  the file "c:\\foo.wav".\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 Dim snd ' an ABSound object\par  Dim chn ' an ABChannel object\par  Set snd = mixer.LoadFile("c:\\foo.wav")\par  Set chn = mixer.AttachSound(snd)\par  chn.Play\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ABAuto::PlayFile Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b  PlayFile(}{\b String} {\i FileName}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Loads a .wav file into memory and plays it, then automatically frees  it when it's finished playing.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/ABAUTO.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i FileName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The name of the file to play.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 Assuming "mixer" is an {\b ABAuto} object, the following VBS code plays  the file "c:\\foo.wav".\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 mixer.PlayFile "c:\\foo.wav"\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ABChannel Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 An AudioBoy channel object.  A channel can have one {\b ABSound}  associated with it; the channel can then perform playback operations  such as {\b Play}, {\b Stop}, etc.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/ABAUTO.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Properties\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b  {\b ABChannel::Sound} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The associated {\b ABSound} object.  Read-only.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b  {\b ABChannel::Play} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Starts the associated {\b ABSound} object  playing.  When the sound reaches the end, playing does not stop  automatically -- so executing {\b Rewind} at this point will cause  the sound to play again.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b  {\b ABChannel::Stop} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Stops playback of the associated {\b ABSound}  object.  If {\b Play} is subsequently executed, playback continues  from the point at which it was stopped.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b  {\b ABChannel::Rewind} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Rewinds playback to the beginning of the  {\b ABSound} object.  If the {\b ABChannel} object is in "play" mode  (i.e.  {\b Play} was previously called, then playback begins  immediately from the beginning of the sound.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Note that a given {\b ABSound} object can be associated with multiple  {\b ABChannel} objects (using {\b ABAuto::AttachSound} ).  Each channel  will access the sound independently; for example, one channel may be  playing near the beginning of the sound, while another channel is  playing near the end of the sound, and a third channel is stopped.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ABChannel::Play Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b  Play(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Starts the associated {\b ABSound} object playing.  When  the sound reaches the end, playing does not stop automatically --  so executing {\b Rewind} at this point will cause the sound to  play again.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/ABAUTO.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b LoadFile} for an example.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ABChannel::Rewind Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b  Rewind(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Rewinds playback to the beginning of the {\b ABSound}  object.  If the {\b ABChannel} object is in "play" mode (i.e.  {\b Play} was previously called, then playback begins immediately  from the beginning of the sound.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/ABAUTO.D\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ABChannel::Sound Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b {\b ABSound}}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Returns the {\b ABSound} object associated with the {\b ABChannel}.  Read-only.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/ABAUTO.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 Assuming "mixer" is an {\b ABAuto} object, the following VBS code  creates a new {\b ABChannel}, {\i chn2}, that is associated with the  same sound that {\i chn1} (an {\b ABChannel}) is associated with.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 Dim chn2 ' an ABChannel\par  Set chn2 = mixer.AttachSound(chn1.Sound)\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ABChannel::Stop Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b  Stop(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Stops playback of the associated {\b ABSound} object.  If {\b Play} is subsequently executed, playback continues from  the point at which it was stopped.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/ABAUTO.D\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ABSound Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 An AudioBoy sound object.  Represents a waveform audio sound  (which may or may not be stored in a file).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/ABAUTO.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Properties\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long {\b ABSound::NumSamples} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of samples in the sound.  Files typically contain 11025, 22050, or 44100 samples per second.  Read-only.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ABSound::NumSamples Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Long}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Returns the number of samples in the sound.  Files typically contain  11025, 22050, or 44100 samples per second.  Read-only.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/ABAUTO.D\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AddMRUListEntry\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AddMRUListEntry(}{\b HMRULIST} {\i hMRUList}{\b , const TCHAR*} {\i szEntry}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Adds an entry to the head of an MRU list.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szEntry}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The entry to add.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The maximum number of entries the list may contain is established  when the list is opened (see {\b OpenMRUList}) or through the last  call to {\b SetMRUListMaxEntries}.\par  If {\i szEntry} is already at the head of the list, nothing happens.  If {\i szEntry} is already in the list, it is moved from its current  position to the head of the list.  In any event, {\i szEntry} is  already added to the head of the list, possibly moving less  recent elements down a slot.  ---------------------------------------------------------------------------\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocBindHostService\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocBindHostService(}{\b LPCTSTR} {\i szContainerFileName}{\b , IServiceProvider * *} {\i ppsp}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Allocates an implementation of {\b IServiceProvider} which provides  the {\b IBindHost} service (SID_IBindHost, IID_IBindHost), which  provides for relative path name resolution when using functions  such as {\b URLOpenStream}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ABHS.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szContainerFileName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The name of the file that  relative path names will be relative to.  For example, if  {\i szContainerFileName} is "c:\\foo\\bar.htm" and the caller  calls {\b URLOpenStream} to open "blorg.gif", then the file  "file://c:\\foo\\blorg.gif" will be opened (assuming that  the {\b IUnknown *} parameter of {\b URLOpenStream} implements  {\b IServiceProvider} which delegates to *{\i ppsp}).  If  {\i szContainerFileName} is NULL or "", then file names  are assumed to be relative to the current directory.  {\i szContainerFileName} should be under _MAX_PATH characters  in length.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppsp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store a pointer to the  newly created object.  NULL is stored in *{\i ppsp} on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Whenver the container's file name changes, the old {\b IBindHost}  servie provider should be freed and {\b AllocBindHostService} should be  called again to create a new {\b IBindHost} service provider.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocChildPropertyBag\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocChildPropertyBag(}{\b IPropertyBag *} {\i ppbParent}{\b , LPCSTR} {\i szPropNamePrefix}{\b , DWORD} {\i dwFlags}{\b , IPropertyBag * *} {\i pppbChild}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates a {\b ChildPropertyBag} object which implements {\b IPropertyBag}  that provides a child object (contained within a parent object) access  to the child's properties, which are stored within the parent's  property bag.  The name of each child's property is prefixed with a  given string (e.g. "Controls(7).").\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ACPB.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppbParent}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Parent's property bag.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szPropNamePrefix}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Prefix on the property name of each of the  child's properties that are stored within the parent's property bag.  This prefix does not appear on the properties in the returned  property bag *{\i pppbChild}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pppbChild}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the {\b IPropertyBag}  pointer to the new {\b ChildPropertyBag} object.  NULL is stored  in *{\i pppbChild} on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocConnectionPointHelper\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocConnectionPointHelper(}{\b IUnknown *} {\i punkParent}{\b , REFIID} {\i riid}{\b , IConnectionPointHelper *} {\i ppconpt}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Allocates a {\b ConnectionPointHelper} object, which provides a simple  implementation of an {\b IDispatch}-based {\b IConnectionPoint}.  Also contains helper functions for implementing  {\b IConnectionPointContainer::EnumConnectionPoints}  in the case where  this is only connection maintained by the connection point container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/CONNECT.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i punkParent}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The parent of the connection point, which  is the object that implements {\b IConnectionPointContainer}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The dispinterface (interface based on {\b IDispatch})  which is the event set that the parent object fires methods of.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppconpt}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the pointer to  the newly-allocated object.  NULL is stored in *{\i ppconpt} on  error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Important}  Unlike most COM objects, the parent object needs to  free the {\b ConnectionPointHelper} object by calling  {\b FreeConnectionPointHelper}, not {\b Release}.  The reason is that  the {\b ConnectionPointHelper} object doesn't maintain a reference  count if its own -- it simply forwards {\b AddRef} and {\b Release}  calls to {\i punkParent}.  Therefore, calling {\b Release} on  the {\b ConnectionPointHelper} object will simply cause {\b Release}  to be called on the parent.\par  To use the {\b ConnectionPointHelper} object, call  {\b IConnectionPointHelper::FireEvent}  to fire events to any object  connected to the {\b ConnectionPointHelper} object.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocPropertyBagCompactor\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocPropertyBagCompactor(}{\b IPropertyBag *} {\i ppbCompact}{\b , DWORD} {\i dwFlags}{\b , IPropertyBag * *} {\i pppb}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates a {\b PropertyBagCompactor} object which implements  {\b IPropertyBag}, and which reads and writes its data in a  more compact way in a second {\b IPropertyBag} by "folding" multiple  properties with the same period-terminated prefix (e.g. "Foo.X = 42,  Foo.Y = 'Hello'") into a single property (e.g. "Foo = 'X=42,Y=Hello'").\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/APBC.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppbCompact}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Compacted property bag.  {\b PropertyBagCompactor} will save compacted properties to this  property bag (if {\i dwFlags} doesn't include PBC_ISLOADING)  or load compacted properties from this property bag (if {\i dwFlags}  includes PBC_ISLOADING).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 PBC_ISLOADING\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 *{\i pppb} will be used to load data, i.e.  (*{\i pppb})->Read() will be called.  If this flag is not  set, then *{\i pppb} will be used to save data, i.e.  (*{\i pppb})->Write() will be called.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pppb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the {\b IPropertyBag}  pointer to the new {\b PropertyBagCompactor} object.  This "virtual  property bag" contains the uncompacted properties.  When writing into  this property bag, write a property with name and value equal to NULL  in order to "flush" the compacted property bag (i.e. complete writing  its contents).  NULL is stored in *{\i pppb} on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The returned {\b IPropertyBag} must be used either exclusively for  reading (i.e. only {\b IPropertyBag::Read}  is called) or exclusively  for writing (i.e. only {\b IPropertyBag::Write}  is called), depending  on whether PBC_ISLOADING is specified.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocPropertyBagOnStream\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocPropertyBagOnStream(}{\b IStream *} {\i pstream}{\b , DWORD} {\i dwFlags}{\b , IPropertyBag * *} {\i pppb}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates a {\b PropertyBagOnStream} object which implements  {\b IPropertyBag} whose properties are contained in a given {\b IStream}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/APBOS.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Stream to read from or write to (depending on  whether the returned {\b IPropertyBag} is used for reading or  writing).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pppb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the {\b IPropertyBag}  pointer to the new {\b PropertyBagOnStream} object.  NULL is stored  in *{\i pppb} on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The returned {\b IPropertyBag} must be used either exclusively for  reading (i.e. only {\b IPropertyBag::Read}  is called) or exclusively  for writing (i.e. only {\b IPropertyBag::Write}  is called).  The  properties are read/written starting from the current position of  {\i pstream}.  When reading/writing is complete, the current position  of {\i pstream} will be the end of the properties in the stream.\par  See {\b VariantPropertyHeader} for a description of the format of  the data in the {\b IStream}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocPropertyBagOnVariantProperty\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocPropertyBagOnVariantProperty(}{\b VariantProperty *} {\i pvp}{\b , DWORD} {\i dwFlags}{\b , IPropertyBag * *} {\i pppb}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates a {\b PropertyBagOnVariantProperty} object which implements  {\b IPropertyBag} whose only property is contained in a given  {\b VariantProperty}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/APBOVP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Holds the single property that the  implemented property bag contains.  The caller must allocate *{\i pvp};  the {\b PropertyBagOnVariantProperty} object {\i holds onto}  *{\i pvp}  for the duration of its lifetime, so the caller is responsible for  ensuring that *{\i pvp} is valid for the lifetime of this object.  Both {\i pvp}->{\i bstrPropName} and {\i pvp}->{\i varValue} must  be valid; at the very least, {\i pvp}->{\i varValue} must contain  an empty VARIANT (initialized using {\b VariantInit}).  After the  allocated object is freed, the caller is responsible for freeing  the contents of *{\i pvp}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pppb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the {\b IPropertyBag}  pointer to the new {\b PropertyBagOnVariantProperty} object.  NULL is  stored in *{\i pppb} on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If the returned {\b IPropertyBag} is written to, all properties are  ignored except the property named {\i pvp}->{\i bstrPropName},  whose value is saved to {\i pvp}->{\i varValue}.  If the property bag  is read from, {\b IPropertyBag::Read}  will return E_FAIL for all  properties except {\i pvp}->{\i bstrPropName}, whose returned value is  {\i pvp}->{\i varValue}.\par  {\b PropertyBagOnVariantProperty} is really only useful in specialized  applications which want to efficiently set or get a single property  value from an object.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocPropertyHelper\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocPropertyHelper(}{\b LPUNKNOWN} {\i punkOuter}{\b , IPersistVariantIO *} {\i ppvio}{\b , REFCLSID} {\i rclsid}{\b , DWORD} {\i dwFlags}{\b , LPUNKNOWN *} {\i ppunk}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Allocates a {\b PropertyHelper} object which provides an implementation  of {\b IPersist}, {\b IPersistPropertyBag}, {\b IPersistStream},  {\b IPersistStreamInit}, and a simplified implementation of  {\b IDispatch}, for any object which implements {\b IPersistVariantIO}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/APH.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i punkOuter}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The {\b IUnknown} of the parent object  object (presumably the same object that implements  {\b IPersistVariantIO}).  Will be used as the controlling unknown of  {\b PropertyHelper}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppvio}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The interface used to access the  properties of the parent object.  Note that this interface is  {\i not}  {\b AddRef}d by {\b AllocPropertyHelper}, since doing so  would likely cause a circular reference count.  Therefore it is  the caller's responsibility to ensure that {\i ppvio} remain valid  for the lifetime of the {\b PropertyHelper} object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The class of the containing object (the object  which implements {\b IPersistVariantIO}).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppunk}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store a pointer to the non-delegating  {\b IUnknown} of the allocated {\b PropertyHelper} object.  NULL is  stored in *{\i ppunk} on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b PropertyHelper} for more information.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how a control might use  {\b AllocPropertyHelper}.  This example control is aggregatable, though  the control need not be aggregatable to use {\b AllocPropertyHelper}.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 // control implementation\par  class CMyControl : public INonDelegatingUnknown, public IOleControl,\par  \tab public IPersistVariantIO ...\par  \{\par  \par  ///// general control state\par  protected:\par  \tab BOOL            m_fDirty;       // TRUE iff control needs saving\par  \tab IUnknown *      m_punkPropHelp; // aggregated PropertyHelper object\par  \tab ...\par  \par  ///// construction, destruction\par  public:\par  \tab CMyControl(IUnknown *punkOuter, HRESULT *phr);\par  \tab virtual ~CMyControl();\par  \par  ///// non-delegating IUnknown implementation\par  protected:\par  \tab ULONG           m_cRef;         // object reference count\par  \tab STDMETHODIMP NonDelegatingQueryInterface(REFIID riid, LPVOID *ppv);\par  \tab STDMETHODIMP_(ULONG) NonDelegatingAddRef();\par  \tab STDMETHODIMP_(ULONG) NonDelegatingRelease();\par  \par  ///// delegating IUnknown implementation\par  protected:\par  \tab LPUNKNOWN       m_punkOuter;    // controlling unknown\par  \tab STDMETHODIMP QueryInterface(REFIID riid, LPVOID *ppv)\par  \tab   \{ return m_punkOuter->QueryInterface(riid, ppv); \}\par  \tab STDMETHODIMP_(ULONG) AddRef()\par  \tab   \{ return m_punkOuter->AddRef(); \}\par  \tab STDMETHODIMP_(ULONG) Release()\par  \tab   \{ return m_punkOuter->Release(); \}\par  \par  ///// IOleControl implementation\par  protected:\par  \tab STDMETHODIMP GetControlInfo(LPCONTROLINFO pCI);\par  \tab STDMETHODIMP OnMnemonic(LPMSG pMsg);\par  \tab STDMETHODIMP OnAmbientPropertyChange(DISPID dispid);\par  \tab STDMETHODIMP FreezeEvents(BOOL bFreeze);\par  \par  ///// IPersistVariantIO implementation\par  protected:\par  \tab STDMETHODIMP InitNew();\par  \tab STDMETHODIMP IsDirty();\par  \tab STDMETHODIMP DoPersist(IVariantIO* pvio, DWORD dwFlags);\par  \par  ...\par  \};\par  \par  CMyControl::CMyControl(IUnknown *punkOuter, HRESULT *phr)\par  \{\par  \tab // initialize IUnknown state\par  \tab m_cRef = 1;\par  \tab m_punkOuter = (punkOuter == NULL ?\par  \tab \tab (IUnknown *) (INonDelegatingUnknown *) this : punkOuter);\par  \par  \tab // set the control's default properties\par  \tab ...\par  \par  \tab // allocate a PropertyHelper object (to be aggregated with this\par  \tab // object) to implement persistence and properties\par  \tab if (FAILED(*phr = AllocPropertyHelper(m_punkOuter, this,\par  \tab \tab \tab CLSID_CMyControl, 0, &m_punkPropHelp)))\par  \tab \tab return;\par  \par  \tab // other initialization\par  \tab ...\par  \par  \tab *phr = S_OK;\par  \}\par  \par  CMyControl::~CMyControl()\par  \{\par  \tab // clean up\par  \tab if (m_punkPropHelp != NULL)\par  \tab \tab m_punkPropHelp->Release();\par  \tab ...\par  \}\par  \par  STDMETHODIMP CMyControl::NonDelegatingQueryInterface(REFIID riid,\par  \tab LPVOID *ppv)\par  \{\par  \tab *ppv = NULL;\par  \tab if (IsEqualIID(riid, IID_IUnknown))\par  \tab \tab *ppv = (IUnknown *) (INonDelegatingUnknown *) this;\par  \tab else\par  \tab if (IsEqualIID(riid, IID_IOleControl))\par  \tab \tab *ppv = (IOleControl *) this;\par  \tab else\par  \tab ...\par  \tab else\par  \tab \tab return m_punkPropHelp->QueryInterface(riid, ppv);\par  \par  \tab ((IUnknown *) *ppv)->AddRef();\par  \tab return S_OK;\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocPropPageHelper\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocPropPageHelper(}{\b LPUNKNOWN} {\i punkOuter}{\b , PropPageHelperInfo *} {\i pInfo}{\b , UINT} {\i cbInfo}{\b , LPUNKNOWN *} {\i ppunk}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Allocates a {\b PropPageHelper} object which helps a control implement  a property page.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/PROPHELP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i punkOuter}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The {\b IUnknown} of the control's property page  object.  Will be used as the controlling unknown of {\b PropPageHelper}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a {\b PropPageHelperInfo}  structure allocated within the control's property page object.  Note that {\b PropPageHelper} will hold onto a pointer to this  structure.  These fields of {\i pInfo} must be initialized by the  caller: {\i idDialog}, {\i idTitle}, {\i hinst}, {\i pproc}, {\i iid}, and  {\i dwUser}.  The other fields will be initialized by {\b PropPageHelper}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size of the structure pointed to by {\i punkOuter}  (used for version checking).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppunk}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store a pointer to the non-delegating  {\b IUnknown} of the allocatedd {\b PropPageHelper} object.  NULL is  stored in *{\i ppunk} on error.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocSiteLW\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocSiteLW(}{\b HWND} {\i hwnd}{\b , HINSTANCE} {\i hinst}{\b , ISiteLW * *} {\i ppsite}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates a {\b SiteLW} object that can host a single lightweight  windowless ActiveX control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hwnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Window into which the site object will display the  loaded control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hinst}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Instance handle of the DLL which contains the  resources used by {\b SiteLW}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppsite}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the new {\b ISiteLW}  pointer.  NULL is stored in *{\i ppsite} on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The newly-created site object initially has no ActiveX control  loaded.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocVariantIO\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocVariantIO(}{\b IManageVariantIO * *} {\i ppmvio}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates a {\b VariantIO} object which provides a property bag  implementation which supports {\b IPropertyBag} as well as  {\b IVariantIO}, {\b IManageVariantIO}, and {\b IEnumVariantProperty}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppmvio}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the {\b IManageVariantIO}  pointer to the new {\b VariantIO} object.  NULL is stored in *{\i ppmvio}  on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Note that {\b IManageVariantIO} is based on {\b IVariantIO}, so  the pointer returned in *{\i ppmvio} can be safely cast to  an {\b IVariantIO} pointer.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocVariantIOOnPropertyBag\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocVariantIOOnPropertyBag(}{\b IPropertyBag *} {\i ppb}{\b , IManageVariantIO * *} {\i ppmvio}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates a {\b VariantIOOnPropertyBag} object which provides an  implementation of {\b IVariantIO} (and {\b IManageVariantIO})  that operates on a given {\b IPropertyBag}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/AVIOOPB.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Property bag that the new object is to  operate on.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppmvio}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the {\b IManageVariantIO}  pointer to the new {\b VariantIOOnPropertyBag} object.  NULL is stored  in *{\i ppmvio} on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Note that {\b IManageVariantIO} is based on {\b IVariantIO}, so  the pointer returned in *{\i ppmvio} can be safely cast to  an {\b IVariantIO} pointer.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocVariantIOToMapDISPID\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b AllocVariantIOToMapDISPID(}{\b char *} {\i pchPropName}{\b , DISPID *} {\i pdispid}{\b , VARIANT *} {\i pvar}{\b , DWORD} {\i dwFlags}{\b , IVariantIO * *} {\i ppvio}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates a {\b VariantIOToMapDISPID} object which provides an  implementation of {\b IVariantIO} which is used to map a property name  to a DISPID (property number) or vice versa.  Can also be used to get  or set the value of that property.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/AVIOTMD.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pchPropName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to a caller-allocated buffer  containing (on entry) either a property name to search for the DISPID  of, or "" if it's the property name being searched for (if  *{\i pdispid} contains a non-negative number on entry).  {\i pchPropName} must remain valid for the lifetime of the  allocated object.  If {\i pchPropName} is "" on entry, then it must  have enough space for _MAX_PATH characters.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdispid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to a caller-allocated DISPID variable  containing (on entry) either a DISPID to find the property name of,  or -1 if it's the DISPID that's being searched for (if {\i pchPropName}  is non-empty on entry).  *{\i pdispid} must remain valid for the  lifetime of the allocated object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvar}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to a caller-allocated VARIANT variable,  if either VIOTMD_GETPROP or VIOTMD_PUTPROP are specified in  {\i dwFlags} -- see those flags for more information.  If provided,  *{\i pvar} must be initialized by {\b VariantInit} on entry and must  remain valid for the lifetime of the allocated object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May optionally contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIOTMD_GETPROP\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The value of the property (if found) is  copied to *{\i pvar}.  The previous value in *{\i pvar}  is cleared using {\b VariantClear}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIOTMD_PUTPROP\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The value of the property (if found) is  set to *{\i pvar}, which must contain a valid valu on entry.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppvio}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the {\b IVariantIO}  pointer to the new {\b VariantIOToMapDISPID} object.  NULL is stored  in *{\i ppvio} on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 DISPIDs assigned by this function start at DISPID_BASE (defined in  ochelp.h) to avoid colliding with the DISPID values assigned by  {\b DispatchHelpGetIDsOfNames}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 To find the DISPID of property "Foo" implemented by an object {\i ppvio}  that implements {\b IPeristVariantIO}, do the following.  Error checking  is not shown.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 char *achPropName = "Foo";\par  DISPID dispid = -1;\par  IVariantIO *pvio;\par  AllocVariantIOToMapDISPID(&szPropName, &dispid, NULL, 0, &pvio);\par  ppvio->DoPersist(pvio, PVIO_PROPNAMESONLY);\par  if (dispid != -1)\par  \tab ... found DISPID <dispid> ...\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 To find the property name of a property with DISPID 7 implemented by an  object {\i ppvio} that implements {\b IPeristVariantIO}, do the  following.  Error checking is not shown.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 char achPropName[_MAX_PATH];\par  achPropName[0] = 0;\par  DISPID dispid = 7;\par  IVariantIO *pvio;\par  AllocVariantIOToMapDISPID(&achPropName, &dispid, NULL, 0, &pvio);\par  ppvio->DoPersist(pvio, PVIO_PROPNAMESONLY);\par  if (achPropName[0] != 0)\par  \tab ... found property name <achPropName>...\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 To set the value of the property with DISPID 7 to 32-bit integer  value 42, do the following.  Error checking is not shown.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 char achPropName[_MAX_PATH];\par  achPropName[0] = 0;\par  DISPID dispid = 7;\par  IVariantIO *pvio;\par  VARIANT var;\par  var.vt = VT_I2;\par  V_I2(&var) = 42;\par  AllocVariantIOToMapDISPID(&achPropName, &dispid, &var, VIOTMD_PUTPROP,\par  \tab &pvio);\par  ppvio->DoPersist(pvio, 0);\par  if (achPropName[0] != 0)\par  \tab ... successfully set property <dispid> to value <var> ...\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AllocVerbEnumHelper\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b IEnumOLEVERB*} {\b AllocVerbEnumHelper(}{\b LPUNKNOWN} {\i punkOuter}{\b , void*} {\i pOwner}{\b , CLSID} {\i clsidOwner}{\b , VERB_ENUM_CALLBACK*} {\i pCallback}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Allocates and initializes a verb enumeration helper.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/ENUMVERB.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 The verb enumeration helper's {\b IEnumOLEVerb} interface or  NULL if out of memory.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i punkOuter}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The controlling unknown.  May be NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pOwner}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The verbs' "owner".  That is, the object to which the verbs  refer.  May not be NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i clsidOwner}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The class ID of {\i pOwner}.  When the verb helper is  allocated, {\i clsidOwner} is passed to {\b OleRegEnumVerbs} to  get an {\b IEnumOLEVERB} interface.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCallback}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] This function will be called whenever the verb helper is  asked for verbs via its internal {\b IEnumOLEVERB::Next}  method.  {\i pCallback} is passed a pointer to each {\b OLEVERB}.  May not  be NULL.  {\b VERB_ENUM_CALLBACK} is defined as follows:\par  typedef HRESULT (VERB_ENUM_CALLBACK)(OLEVERB* pVerb, void* pOwner);\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 To implement {\b IOleObject::EnumVerbs} , make sure that {\i pObject}'s  class registers its verbs, define a {\b VERB_ENUM_CALLBACK}  callback function and implement {\b IOleObject::EnumVerbs} calling {\b AllocVerbEnumHelper}.  That's all it takes.\par  Typically the {\i pCallback} function adjusts the state of  the verb's menu item based on the state of the {\i pOwner} object.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows a typical implementation of  {\b IOleObject::EnumVerbs} , and the verb helper callback function:\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 STDMETHODIMP CMyControl::EnumVerbs(IEnumOLEVERB** ppEnumOleVerb)\par  \{\par  \tab HRESULT hResult;\par  \tab *ppEnumOleVerb = AllocVerbEnumHelper(NULL, CLSID_CMyControl,\par  \tab \tab \tab \tab \tab \tab &VerbEnumCallback, this);\par  \tab hResult = (*ppEnumOleVerb != NULL) ? S_OK : E_OUTOFMEMORY;\par  \tab return (hResult);\par  \}\par  \par  HRESULT VerbEnumCallback(\par  OLEVERB* pVerb,\par  void* pOwner)\par  \{\par  \tab int flag;\par  \tab CMyControl* pMyControl = (CMyControl*)pOwner;\par  \par  \tab switch (pVerb->lVerb)\par  \tab \{\par  \tab \tab case 0: // verb 0\par  \tab \tab \tab // if pMyControl indicates that verb 0 should be enabled\par  \tab \tab \tab //\tab \tab flag = MF_ENABLED;\par  \tab \tab \tab // else\par  \tab \tab \tab //\tab \tab flag = MF_GRAYED;\par  \tab \tab \tab break;\par  \tab \tab case 1: // verb 1\par  \tab \tab \tab // if pMyControl indicates that verb 1 should be enabled\par  \tab \tab \tab //\tab \tab flag = MF_ENABLED;\par  \tab \tab \tab // else\par  \tab \tab \tab //\tab \tab flag = MF_GRAYED;\par  \tab \tab \tab break;\par  \par  \tab \tab // etc.\par  \par  \tab \tab default:\par  \tab \tab \tab break;\par  \tab \}\par  \tab pVerb->fuFlags |= flag;\par  \tab return (S_OK);\par  \}\par  ---------------------------------------------------------------------------\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ANSIToUNICODE\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b int} {\b ANSIToUNICODE(}{\b LPWSTR} {\i pwchDst}{\b , LPCSTR} {\i pchSrc}{\b , int} {\i cwchDstMax}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Converts an ANSI string to UNICODE.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/UNICODE.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pwchDst}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The buffer that will hold the output UNICODE string.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pchSrc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The input ANSI string.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cwchDstMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The capacity of {\i pwchDst} (in wide characters).\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 AtEndOfMRUList\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b AtEndOfMRUList(}{\b HMRULIST} {\i hMRUList}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Tests if {\b GetNextMRUListEntry} has advanced to the end of  an MRU list.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns one of the following:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 TRUE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 At the end.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 FALSE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Not at the end.  ---------------------------------------------------------------------------\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ChildPropertyBag Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Implements {\b IPropertyBag} that provides a child object (contained  within a parent object) access to the child's properties, which  are stored within the parent's property bag.  The name of each child's  property is prefixed with a given string (e.g. "Controls(7).").\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ACPB.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IPropertyBag}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The interface through which the child object  accesses its properties.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use {\b AllocChildPropertyBag} to create a  {\b ChildPropertyBag} object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CloseMRUList\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CloseMRUList(}{\b HMRULIST} {\i hMRUList}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Closes a previously opened MRU list.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.  ---------------------------------------------------------------------------\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CLSIDFromTCHAR\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CLSIDFromTCHAR(}{\b const TCHAR*} {\i pszCLSID}{\b , CLSID*} {\i pclsid}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Converts a string into a CLSID.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/TCH2CLSD.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pszCLSID}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A TCHAR-based string representation of the CLSID.  Can't  be NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] Set to the resultant class ID.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function is a TCHAR equivalent of {\b CLSIDFromString} which  only works with an OLESTR.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.  The value of {\i pclsid} is indeterminate.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b TCHARFromGUID}  ---------------------------------------------------------------------------\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CLSIDToFriendlyName\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CLSIDToFriendlyName(}{\b REFCLSID} {\i clsid}{\b , TCHAR*} {\i pszFriendlyName}{\b , int} {\i cchMaxFriendlyNameLen}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Finds the "friendly name" associated with a given class in the  system registry.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/CLSID2FN.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i clsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The ID of the target class.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pszFriendlyName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] If successful, set to the first {\i cchMaxFriendlyNameLen}  charactes of the friendly name.  Assumed, on entry, to point to  a buffer of at least {\i cchMaxFriendlyNameLen} characters.  Cannot be NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cchMaxFriendlyNameLen}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The maximum number of characters of the friendly name  to retrieve.  Must be greater than 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Assumes that the system registry is structured as follows:\par  HKEY_CLASSES_ROOT  CLSID  {\i clsid}  ProgID=<progID>  <progID>=<friendly name>  ---------------------------------------------------------------------------\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell Failure.  {\i pszFriendlyName} is guaranteed to be set  to an empty string.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CompareUNICODEStrings\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b int} {\b CompareUNICODEStrings(}{\b LPCWSTR} {\i wsz1}{\b , LPCWSTR} {\i wsz2}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Compares two UNICODE strings.  The comparison is case-insensitive.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/CUS.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the same values as {\b lstrcmpi}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wsz1}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 First string.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wsz2}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Second string.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Currently, neither {\i wsz1} or {\i wsz2} can be longer than  _MAX_PATH characters.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ConnectionPointHelper Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Contains functions for implementing the {\b ConnectionPointHelper}  object, which provides a simple implementation of an  {\b IDispatch}-based {\b IConnectionPoint}.  Also contains helper  functions for implementing {\b IConnectionPointContainer} in the  case where this is only connection maintained by the connection  point container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/CONNECT.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IConnectionPoint}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Standard OLE connection point interface.  An arbitrary number of connections are supported.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IConnectionPointHelper}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Contains methods for firing events to  the objects connected to this object via {\b IConnectionPoint}.  Also contains helper functions for implementing  {\b IConnectionPointContainer} in the container object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CreateBorderBrush\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HBRUSH} {\b CreateBorderBrush(void}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates and returns a hatch pattern brush used to draw control  resize borders and grab handles.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/BRUSH.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a handle to the created brush.  The caller is responsible  for freeing the brush using {\b DeleteObject}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The returned brush is the standard brush for use in drawing  control borders and grab handles.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CreateControlInstance\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CreateControlInstance(}{\b LPCSTR} {\i szName}{\b , LPUNKNOWN} {\i punkOuter}{\b , DWORD} {\i dwClsContext}{\b , LPUNKNOWN *} {\i ppunk}{\b , CLSID *} {\i pclsid}{\b , BOOL *} {\i pfSafeForScripting}{\b , BOOL *} {\i pfSafeForInitializing}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates a new instance of a control given either a class ID (in  string form) or a ProgID.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/CCI.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The class ID or ProgID of the control to create.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i punkOuter}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The controlling unknown to use for the  new object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwClsContext}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the context in which the executable  is to be run. The values are taken from the enumeration CLSCTX.  A typical value is CLSCTX_INPROC_SERVER.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppunk}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the pointer to the loaded object.  NULL is stored in *{\i ppunk} on error.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the class ID of the loaded object.  If {\i pclsid} is NULL then this information is not returned.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pfSafeForScripting}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If non-NULL, *{\i pfSafeForScripting} is  set to TRUE or FALSE depending on whether the control is safe-for-scripting.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pfSafeForInitializing}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If non-NULL, *{\i pfSafeForInitializing} is  set to TRUE or FALSE depending on whether the control is safe-for-initializing.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRegMRUList::Init\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRegMRUList}{\b ::Init(}{\b int} {\i cMaxEntries}{\b , HKEY} {\i hKey}{\b , [in] LPCTSTR} {\i pszSubkey}{\b , [in] LPCTSTR} {\i pszListName}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Initializes an MRU list.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cMaxEntries}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The maximum number of entries in the list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hKey}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The list will be opened at the registry path,  {\i hKey}\\{\i pszSubkey}\\{\i pszListName}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pszSubkey}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 (See {\i hKey}.)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pszListName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 (See {\i hKey}.)\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This must be the first function called on the list after it has  been created.\par  If the registry key contains more than {\i cMaxEntries}, it will  be truncated to {\i cMaxEntries}.  ---------------------------------------------------------------------------\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DebugCLSIDName\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b ifdef _DEBUGLPCSTR} {\b DebugCLSIDName(}{\b REFCLSID} {\i rclsid}{\b , LPSTR} {\i pchName}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Finds the name of an interface in the system registration database  given the interface's CLSID (for debugging purposes only).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/DEBUG.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to {\i pchName}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Class ID to find the name of.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pchName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the class ID name string.  This buffer should be  large enough to hold _MAX_PATH characters.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If the interface name is not found, a hexadecimal string form of  {\i rclsid} will be returned  (e.g. "\{209D2C80-11D7-101B-BF00-00AA002FC1C2\}").\par  \pard\plain \sa160\sl240 \fs21\lang1033 This function is only available in a debug build.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DebugIIDName\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LPCSTR} {\b DebugIIDName(}{\b REFIID} {\i riid}{\b , LPSTR} {\i pchName}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Finds the name of an interface in the system registration database  given the interface's IID (for debugging purposes only).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/DEBUG.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to {\i pchName}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Interface ID to find the name of.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pchName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the class ID name string.  This buffer should be  large enough to hold _MAX_PATH characters.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If the interface name is not found, a hexadecimal string form of  {\i riid} will be returned  (e.g. "\{209D2C80-11D7-101B-BF00-00AA002FC1C2\}").\par  \pard\plain \sa160\sl240 \fs21\lang1033 This function is only available in a debug build.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DispatchGetArgs\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b DispatchGetArgs(}{\b DISPPARAMS *} {\i pdp}{\b , DWORD} {\i dwFlags}{\b , (varying)} {\i (arguments)}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Retrieves arguments from a DISPPARAMS structure passed to  {\b IDispatch::Invoke} .  Arguments are stored in variables that  are passed to {\b DispatchGetArgs} as a va_list array.  Used to help implement {\b IDispatch::Invoke} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/DISPHELP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The structure to retrieve arguments from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DGA_EXTRAOK\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Don't return an error code if {\i pdp} contains  more actual arguments than the number of formal parameters  specified in {\i (arguments)}.  Instead, just ignore the extra  arguments in {\i pdp}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DGA_FEWEROK\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Don't return an error code if {\i pdp} contains  fewer actual arguments than the number of formal parameters  specified in {\i (arguments)}.  Instead, ignore the extra  parameters.  In this case, the variables pointed to by  elements of {\i (arguments)} should be pre-initialized to  default values before this function is called.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i (arguments)}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A list of pointers to variables which will  receive the values of arguments from {\i pdp}.  These must consist of N  pairs of arguments followed by a 0 (zero value).  In each pair, the  first argument is a VARTYPE value that indicates the type of variable  that the the second argument points to.  (The actual arguments in  {\i pdp} will be coerced to the types specified in {\i (arguments)},  if possible.) The following VARTYPE values are supported:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_INT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is an int *.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_I2\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a short *.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_I4\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a long *.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_R4\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a float *.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_R8\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a double *.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_BOOL\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a BOOL * ({\i not} VARIANT_BOOL *).  Note that this behavior differs  slightly from the usual definition of VT_BOOL.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_BSTR\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a BSTR *.  The caller  of {\b DispatchGetArgs} should free this BSTR using  {\b SysFreeString}.  {\b IMPORTANT}  This behavior has changed:  previously the caller was {\b NOT}  supposed to free this BSTR.  (Note that the caller must free the BSTR because it may  have been coerced from e.g. an integer.)\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_LPSTR\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is an LPSTR that points  to a char array capable of holding at least _MAX_PATH  characters including the terminating NULL.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_DISPATCH\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is an LPDISPATCH *.  The caller of {\b DispatchGetArgs} should not call {\b Release}  on this LPDISPATCH.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_VARIANT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following arguement is a VARIANT *.  This allows arbitrary parameters to be passed using this  function.  Note that this behavior differs from the usual  definition of VT_VARIANT.  The caller of {\b DispatchGetArgs}  should not call VariantClear on this VARIANT.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows two parameters, an integer and a string,  being retrieved from {\i pdispparams} and stored into {\i i} and  {\i ach}.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 int i;\par  char ach[_MAX_PATH];\par  DispatchGetArgs(pdispparams, 0, VT_INT, &i, VT_LPSTR, ach, 0);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_BADPARAMCOUNT\cell The number of arguments in {\i pdp} doesn't match the number of  arguments specified in {\i (arguments)}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_BADVARTYPE\cell One of the VARTYPE values in {\i (arguments)} is invalid.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_TYPEMISMATCH\cell One of the arguements in {\i pdp} could not be coerced to the type  of the corresponding parameter in {\i (arguments)}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DispatchGetArgsList\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b DispatchGetArgsList(}{\b DISPPARAMS *} {\i pdp}{\b , DWORD} {\i dwFlags}{\b , va_list} {\i args}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Retrieves arguments from a DISPPARAMS structure passed to  {\b IDispatch::Invoke} .  Arguments are stored in variables that  are passed to {\b DispatchGetArgsList} as a va_list array.  Used to help implement {\b IDispatch::Invoke} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/DISPHELP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The structure to retrieve arguments from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DGA_EXTRAOK\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Don't return an error code if {\i pdp} contains  more actual arguments than the number of formal parameters  specified in {\i args}.  Instead, just ignore the extra  arguments in {\i pdp}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DGA_FEWEROK\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Don't return an error code if {\i pdp} contains  fewer actual arguments than the number of formal parameters  specified in {\i args}.  Instead, ignore the extra parameters.  In this case, the variables pointed to by elements of {\i args}  should be pre-initialized to default values before this  function is called.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i args}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A list of pointers to variables which will receive  the arguments from {\i pdp}.  See {\b DispatchGetArgs} for a description  of the organizatin of {\i args}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_BADPARAMCOUNT\cell The number of arguments in {\i pdp} doesn't match the number of  arguments specified in {\i args}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_BADVARTYPE\cell One of the VARTYPE values in {\i args} is invalid.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_TYPEMISMATCH\cell One of the arguements in {\i pdp} could not be coerced to the type  of the corresponding parameter in {\i args}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DispatchHelpGetIDsOfNames\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b DispatchHelpGetIDsOfNames(}{\b REFIID} {\i riid}{\b , LPOLESTR *} {\i rgszNames}{\b , UINT} {\i cNames}{\b , LCID} {\i lcid}{\b , DISPID *} {\i rgdispid}{\b , char *} {\i szList}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Helps implement {\b IDispatch::GetIDsOfNames}  given a string that  contains the list of {\b IDispatch} member names.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/DISPHELP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the same return codes as {\b IDispatch::GetIDsOfNames} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 As defined for {\b IDispatch::GetIDsOfNames} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rgszNames}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 As defined for {\b IDispatch::GetIDsOfNames} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cNames}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 As defined for {\b IDispatch::GetIDsOfNames} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lcid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 As defined for {\b IDispatch::GetIDsOfNames} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rgdispid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 As defined for {\b IDispatch::GetIDsOfNames} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The list of member names.  Each name in the list  must be terminated by a newline.  The first member name is assigned  DISPID value 0, the second 1, and so on.  For example, if {\i szList}  is "\\nFoo\\nBar\\n", then "Foo" is assigned DISPID value 1 and "Bar"  is assigned 2 (because, in this example, the first string in {\i szList}  is "").\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DispatchIDToName\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b DISPID} {\b DispatchIDToName(}{\b char *} {\i szList}{\b , DISPID} {\i dispid}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Look up a DISPID in a list of names of methods and properties and  return the member name (if found).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/DISPID.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to member number {\i dispid} in {\i szList} if found,  or NULL if not found.  Note that the returned string is terminated  by a newline character, not a null character -- user {\i ppch} to  copy the string (see the example below).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The list of member names to look up {\i szName} in.  {\i szList} consists of the concatenation of each member name,  where each member name is terminated by a newline character  (e.g. "Foo\\nBar\\n").\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dispid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The member ID to look up.  The first member in  {\i szList} has DISPID 1; the second 2, and so on.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following code stores "Bar" in {\i ach}.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 int cch;\par  char ach[100];\par  char *sz;\par  DISPID dispid = 2;\par  sz = DispatchIDToName("Foo\\nBar\\n", dispid, &cch);\par  if (sz != NULL)\par  \tab lstrcpyn(ach, sz, cch + 1);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DispatchInvoke\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b DispatchInvoke(}{\b IDispatch *} {\i pdisp}{\b , DISPID} {\i dispid}{\b , WORD} {\i wFlags}{\b , VARIANT *} {\i pvarResult}{\b , (varying)} {\i (arguments)}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Calls {\b IDispatch::Invoke}  on a given {\b IDispatch} object, passing  arguments specified as a variable-length list of arguments.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/DISPHELP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the same HRESULT as {\b IDispatch::Invoke} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdisp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The interface to call {\b IDispatch::Invoke}  on.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dispid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The ID of the property or method to invoke.  See  {\b IDispatch::Invoke}  for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May be one of the following values (see  {\b IDispatch::Invoke}  for more information):\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DISPATCH_METHOD\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The member {\i dispid} is being invoked as a  method.  If a property has the same name, both this and the  DISPATCH_PROPERTYGET flag may be set.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DISPATCH_PROPERTYGET\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The member {\i dispid} is being retrieved  as a property or data member.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DISPATCH_PROPERTYPUT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The member {\i dispid} is being changed  as a property or data member.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvarResult}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the return value from the  method or property-get call.  If {\i pvarResult} is NULL, the result  (if any) is discarded.  If {\i pvarResult} is non-NULL, then it is the  caller's responsibility to call {\b VariantClear}({\i pvarResult})  on exit (but the caller doesn't have to call  {\b VariantInit}({\i pvarResult}) on entry).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i (arguments)}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The arguments to pass to the method or  property.  These must consist of N pairs of arguments followed by  a 0 (zero value).  In each pair, the first argument is a VARTYPE  value that indicates the type of the second argument.  The following  VARTYPE values are supported:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_INT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is an int.  {\b Invoke}  passes this as VT_I4, so this parameter should be declared  as a Long in BASIC.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_I2\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a short.  In BASIC  this parameter should be declared as Integer.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_I4\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a long.  In BASIC  this parameter should be declared as Long.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_R4\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a float.  In BASIC  this parameter should be declared as Single.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_R8\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a double.  In BASIC  this parameter should be declared as Double.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_BOOL\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a BOOL ({\i not} VARIANT_BOOL).  In BASIC this parameter should be declared  as Boolean or Integer.  Note that this behavior differs  slightly from the usual definition of VT_BOOL.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_BSTR\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a BSTR.  In BASIC this  parameter should be declared as String.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_LPSTR\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is an LPSTR.  {\b Invoke}  passes this as a BSTR, so this parameter should be declared  as a String in BASIC.  Note that this behavior differs  from the usual definition of VT_LPSTR.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_DISPATCH\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is an LPDISPATCH.  In  BASIC this parameter should be declared as an Object.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_VARIANT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following arguement is a VARIANT that is  passed as-is to {\b Invoke}.  This allows arbitrary parameters  to be passed using this function.  Note that this behavior  differs from the usual definition of VT_VARIANT.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Named arguments are not supported by this function.\par  Don't forget to add a 0 argument to the end of the argument list.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example calls method DISPID_BAR, passing arguments  42, "Hi There", and TRUE.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 pdisp->DispatchInvoke(pdisp, DISPID_BAR, DISPATCH_METHOD,\par  \tab VT_INT, 42, VT_LPSTR, "Hi There", VT_BOOL, TRUE, 0);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DispatchInvokeList\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b DispatchInvokeList(}{\b IDispatch *} {\i pdisp}{\b , DISPID} {\i dispid}{\b , WORD} {\i wFlags}{\b , VARIANT *} {\i pvarResult}{\b , va_list} {\i args}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Calls {\b IDispatch::Invoke}  on a given {\b IDispatch} object, passing  arguments specified as a va_list array.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/DISPHELP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the same HRESULT as {\b IDispatch::Invoke} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdisp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The interface to call {\b IDispatch::Invoke}  on.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dispid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The ID of the property or method to invoke.  See  {\b IDispatch::Invoke}  for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May be one of the following values (see  {\b IDispatch::Invoke}  for more information):\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DISPATCH_METHOD\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The member {\i dispid} is being invoked as a  method.  If a property has the same name, both this and the  DISPATCH_PROPERTYGET flag may be set.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DISPATCH_PROPERTYGET\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The member {\i dispid} is being retrieved  as a property or data member.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DISPATCH_PROPERTYPUT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The member {\i dispid} is being changed  as a property or data member.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvarResult}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the return value from the  method or property-get call.  If {\i pvarResult} is NULL, the result  (if any) is discarded.  If {\i pvarResult} is non-NULL, then it is the  caller's responsibility to call {\b VariantClear}({\i pvarResult})  on exit (but the caller doesn't have to call  {\b VariantInit}({\i pvarResult}) on entry).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i args}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The arguments to pass to the method or property.  See {\b DispatchInvoke} for a description of the organization of  {\i args}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Named arguments are not supported by this function.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DispatchNameToID\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b DISPID} {\b DispatchNameToID(}{\b char *} {\i szList}{\b , char *} {\i szName}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Look up a {\b IDispatch} member name (e.g. the name of a method  or property) in a list of names and return the DISPID of the  member name (if found).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/DISPID.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the DISPID of {\i szName} if {\i szName} is found in  {\i szList}.  Returns -1 if {\i szName} is not found.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The list of member names to look up {\i szName} in.  {\i szList} consists of the concatenation of each member name,  where each member name is terminated by a newline character  (e.g. "Foo\\nBar\\n").\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The member name to look up.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following line of code sets {\i dispid} to 2.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 dispid = DispatchNameToID("Foo\\\\nBar\\\\n", "bar");\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DispatchPropertyGet\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b DispatchPropertyGet(}{\b IDispatch *} {\i pdisp}{\b , DISPID} {\i dispid}{\b , VARIANT *} {\i pvarResult}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Gets the value of a given property on a given {\b IDispatch} object.  Used to help call {\b IDispatch::Invoke} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/DISPHELP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the same HRESULT as {\b IDispatch::Invoke} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdisp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The interface to call {\b IDispatch::Invoke}  on.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dispid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The ID of the property.  See {\b IDispatch::Invoke} for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvarResult}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the return value from the  method or property-get call.  It is the caller's responsibility to  call {\b VariantClear}({\i pvarResult}) on exit (but the caller doesn't  have to call {\b VariantInit}({\i pvarResult}) on entry).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Properties with parameters are not supported -- use  {\b DispatchInvoke} instead.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DispatchPropertyPut\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b DispatchPropertyPut(}{\b IDispatch *} {\i pdisp}{\b , DISPID} {\i dispid}{\b , VARTYPE} {\i vt}{\b , (varying)} {\i value}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Sets the value of a given property on a given {\b IDispatch} object.  Used to help call {\b IDispatch::Invoke} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/DISPHELP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the same HRESULT as {\b IDispatch::Invoke} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdisp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The interface to call {\b IDispatch::Invoke}  on.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dispid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The ID of the property.  See {\b IDispatch::Invoke} for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i vt}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The type of the {\i value} parameter.  The valid values  for {\i vt} are the same as the VT_ values documented in  {\b DispatchInvoke}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i value}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The new property value.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Properties with parameters are not supported -- use  {\b DispatchInvoke} instead.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DrawControlBorder\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b DrawControlBorder(}{\b HDC} {\i hdc}{\b , RECT *} {\i prc}{\b , POINT *} {\i ppt}{\b , POINT *} {\i pptNew}{\b , int *} {\i piHit}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Draws a border used to drag and resize controls.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/BORDER.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hdc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Device context to draw into.  If {\i hdc} is NULL then  no drawing is performed.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i prc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to draw border.  The border is drawn {\i outside} this border.  If both {\i ppt} and {\i pptNew} are non-NULL, then  on exit *{\i prc} is modified to contain the border rectangle obtained  after the mouse is dragged from {\i ppt} to {\i pptNew}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppt}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Mouse position.  See {\i prc} and {\i piHit}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pptNew}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 New mouse position.  See {\i prc} and {\i piHit}.  Note that if {\i pptNew} specifies an invalid mouse move (e.g. it  would cause the right side of *{\i prc} to be dragged to the left of  the left side of *{\i prc}) then *{\i pptNew} is adjusted so that  it is valid.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i piHit}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If {\i pptNew} is NULL, then on exit *{\i piHit} contains  a "hit test code" that indicates which part of the contro border was  hit by *{\i ppt}.  If {\i pptNew} is not NULL, then on entry *{\i piHit}  must contain a hit test code (usually returned from a previous call  to {\b DrawControlBorder}) indicating which part of the control border  the user wants to drag.  The hit test codes are as follows:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_HIT_NONE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No part of the border was hit.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_HIT_EDGE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The edge of the border was hit, but no  grab handle was hit.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_HIT_GRAB({\i i}, {\i j})\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Grab handle ({\i i}, {\i j}) was hit,  where {\i i} is the horizontal position of the grab handle  (0=left, 1=middle, 2=right) and {\i j} is the vertical position  of the handle (0=top, 1=middle, 2=bottom).  See Comments below  for more information about how to interpret *{\i piHit}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_CORNERHANDLES\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Draw resize grab handles at the corners  of the border rectangle.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_SIDEHANDLES\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Draw resize grab handles at the sides  of the border rectangle.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_EDGE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Draw the edge of the border rectangle of the  border rectangle.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_XORED\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Draw the border with an exclusive-or brush.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_INFLATE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 On exit, inflate *{\i prc} enough so that it  encloses the control border.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 You can test if *{\i piHit} refers to a specific category of grab  handle by computing the value (1 << *{\i piHit}) and peforming a  bitwise and (&) with any of the following bit masks:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_CORNERHANDLES\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 *{\i piHit} refers to a corner grab handle.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_SIDEHANDLES\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 *{\i piHit} refers to a side grab handle.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_SIZENS\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 *{\i piHit} refers to a vertical (north-south  resize grab handle (on the left or right sides).\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_SIZEWE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 *{\i piHit} refers to a horizontal (west-east)  resize grab handle (on the left or right sides).\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_SIZENESW\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 *{\i piHit} refers to a resize grab handle at  the north-east or south-west corner.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DCB_SIZENWSE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 *{\i piHit} refers to a resize grab handle at  the north-west or south-east corner.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how to use {\b DrawControlBorder} to  draw a border around a control (which is at position {\i g_rcControl}  in the client area of a window) and allow the control to be moved  and resized.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 // globals\par  HINSTANCE       g_hinst;     // application instance handle\par  RECT            g_rcControl;// location of simulated control\par  RECT            g_rcGhost;  // location of ghost (XOR) image of border\par  POINT           g_ptPrev;   // previous mouse location\par  int             g_iDrag;    // which part of control border is dragged\par  \par  // window procedure of the window that contains the control\par  LRESULT CALLBACK AppWndProc(HWND hwnd, UINT uiMsg, WPARAM wParam,\par  \tab LPARAM lParam)\par  \{\par  \tab PAINTSTRUCT     ps;\par  \tab int             iHit;\par  \tab HDC             hdc;\par  \tab POINT           ptCursor;\par  \tab RECT            rc;\par  \tab LPCTSTR         sz;\par  \par  \tab switch (uiMsg)\par  \tab \{\par  \par  \tab case WM_PAINT:\par  \par  \tab \tab hdc = BeginPaint(hwnd, &ps);\par  \par  \tab \tab // draw the control\par  \tab \tab ...\par  \par  \tab \tab // draw the control border outside <g_rcControl>\par  \tab \tab DrawControlBorder(hdc, &g_rcControl, NULL, NULL, NULL,\par  \tab \tab \tab DCB_EDGE | DCB_CORNERHANDLES | DCB_SIDEHANDLES);\par  \par  \tab \tab EndPaint(hwnd, &ps);\par  \tab \tab return 0;\par  \par  \tab case WM_SETCURSOR:\par  \par  \tab \tab // set <ptCursor> to the mouse position\par  \tab \tab GetCursorPos(&ptCursor);\par  \tab \tab ScreenToClient(hwnd, &ptCursor);\par  \par  \tab \tab // set <iHit> to a hit code which indicates which part of the\par  \tab \tab // control border (if any) <ptCursor> is over\par  \tab \tab DrawControlBorder(NULL, &g_rcControl, &ptCursor, NULL, &iHit,\par  \tab \tab \tab \tab DCB_EDGE | DCB_CORNERHANDLES | DCB_SIDEHANDLES);\par  \par  \tab \tab // set the cursor based on <iHit>\par  \tab \tab if ((1 << iHit) & DCB_SIZENS)\par  \tab \tab \tab sz = IDC_SIZENS;\par  \tab \tab else\par  \tab \tab if ((1 << iHit) & DCB_SIZEWE)\par  \tab \tab \tab sz = IDC_SIZEWE;\par  \tab \tab else\par  \tab \tab if ((1 << iHit) & DCB_SIZENESW)\par  \tab \tab \tab sz = IDC_SIZENESW;\par  \tab \tab else\par  \tab \tab if ((1 << iHit) & DCB_SIZENWSE)\par  \tab \tab \tab sz = IDC_SIZENWSE;\par  \tab \tab else\par  \tab \tab \tab sz = IDC_ARROW;\par  \tab \tab SetCursor(LoadCursor(NULL, sz));\par  \tab \tab return TRUE;\par  \par  \tab case WM_LBUTTONDOWN:\par  \par  \tab \tab // set <ptCursor> to the mouse position\par  \tab \tab ptCursor.x = (short) LOWORD(lParam);\par  \tab \tab ptCursor.y = (short) HIWORD(lParam);\par  \par  \tab \tab // do nothing if <ptCursor> is not within the control border\par  \tab \tab if (DrawControlBorder(NULL, &g_rcControl,\par  \tab \tab \tab \tab &ptCursor, NULL, &g_iDrag,\par  \tab \tab \tab \tab DCB_EDGE | DCB_CORNERHANDLES | DCB_SIDEHANDLES) != S_OK)\par  \tab \tab \tab break;\par  \par  \tab \tab // capture the mouse\par  \tab \tab SetCapture(hwnd);\par  \par  \tab \tab // set the initial position of the border "ghost" (the XOR image\par  \tab \tab // of the border) to be the current position of the control\par  \tab \tab g_rcGhost = g_rcControl;\par  \par  \tab \tab // draw the control border XOR'd\par  \tab \tab hdc = GetDC(hwnd);\par  \tab \tab DrawControlBorder(hdc, &g_rcGhost, NULL, NULL, NULL,\par  \tab \tab \tab DCB_EDGE | DCB_CORNERHANDLES | DCB_SIDEHANDLES | DCB_XORED);\par  \tab \tab ReleaseDC(hwnd, hdc);\par  \par  \tab \tab // remember the current cursor position\par  \tab \tab g_ptPrev = ptCursor;\par  \tab \tab break;\par  \par  \tab case WM_MOUSEMOVE:\par  \par  \tab \tab // do nothing if we're not dragging\par  \tab \tab if (GetCapture() != hwnd)\par  \tab \tab \tab break;\par  \par  \tab \tab // set <ptCursor> to the mouse position\par  \tab \tab ptCursor.x = (short) LOWORD(lParam);\par  \tab \tab ptCursor.y = (short) HIWORD(lParam);\par  \par  \tab \tab // move the control XOR image\par  \tab \tab hdc = GetDC(hwnd);\par  \tab \tab DrawControlBorder(hdc, &g_rcGhost,\par  \tab \tab \tab &g_ptPrev, &ptCursor, &g_iDrag,\par  \tab \tab \tab DCB_EDGE | DCB_CORNERHANDLES | DCB_SIDEHANDLES | DCB_XORED);\par  \tab \tab ReleaseDC(hwnd, hdc);\par  \par  \tab \tab // remember the current cursor position\par  \tab \tab g_ptPrev = ptCursor;\par  \tab \tab break;\par  \par  \tab case WM_LBUTTONUP:\par  \par  \tab \tab // do nothing if we're not dragging\par  \tab \tab if (GetCapture() != hwnd)\par  \tab \tab \tab break;\par  \par  \tab \tab // erase the control border XOR image\par  \tab \tab hdc = GetDC(hwnd);\par  \tab \tab DrawControlBorder(hdc, &g_rcGhost, NULL, NULL, NULL,\par  \tab \tab \tab DCB_EDGE | DCB_CORNERHANDLES | DCB_SIDEHANDLES | DCB_XORED);\par  \tab \tab ReleaseDC(hwnd, hdc);\par  \par  \tab \tab // stop dragging\par  \tab \tab ReleaseCapture();\par  \par  \tab \tab // move the control to the new location\par  \tab \tab rc = g_rcControl;\par  \tab \tab DrawControlBorder(NULL, &rc, NULL, NULL, NULL,\par  \tab \tab \tab DCB_EDGE | DCB_CORNERHANDLES | DCB_SIDEHANDLES |\par  \tab \tab \tab DCB_INFLATE);\par  \tab \tab InvalidateRect(hwnd, &rc, TRUE);\par  \tab \tab g_rcControl = g_rcGhost;\par  \tab \tab rc = g_rcControl;\par  \tab \tab DrawControlBorder(NULL, &rc, NULL, NULL, NULL,\par  \tab \tab \tab DCB_EDGE | DCB_CORNERHANDLES | DCB_SIDEHANDLES |\par  \tab \tab \tab DCB_INFLATE);\par  \tab \tab InvalidateRect(hwnd, &rc, TRUE);\par  \tab \tab break;\par  \par  \tab ...\par  \par  \tab \}\par  \par  \tab return DefWindowProc(hwnd, uiMsg, wParam, lParam);\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell Success.  Also indicates that *{\i ppt} does not fall within  any portion of the control border.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 FindCharInString\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b char *} {\b FindCharInString(}{\b const char *} {\i sz}{\b , char} {\i chFind}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Search a string to find a specific character.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/FINDSTR.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the first occurence of {\i chFind} in  {\i sz}.  Returns NULL if {\i chFind} was not found.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i sz}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 String to search.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i chFind}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Character to find.  May be '\\0' to search for  the end of the string.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The search is case-sensitive.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 FindCharInStringRev\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b char *} {\b FindCharInStringRev(}{\b const char *} {\i sz}{\b , char} {\i chFind}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Search a string to find the last occurrence of a specific character.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/FINDSTR.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the last occurence of {\i chFind} in  {\i sz}.  Returns NULL if {\i chFind} was not found.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i sz}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 String to search.  If NULL, the function returns NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i chFind}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Character to find.  May be '\\0' to search for  the end of the string.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The search is case-sensitive.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 FindStringByIndex\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b const char *} {\b FindStringByIndex(}{\b const char *} {\i szList}{\b , int} {\i iString}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Find a string with a given index in a list of strings.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/FINDSTR.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to string number {\i iString} in {\i szList} if found,  or NULL if not found.  Note that the returned string is terminated  by a newline character, not a null character -- user {\i ppch} to  copy the string (see the example below).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The list of strings to look up {\i iString} in.  {\i szList} consists of the concatenation of each string, where each  string is terminated by a newline character (e.g. "Foo\\nBar\\n").\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iString}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The index of the string to find.  The first string in  {\i szList} has index 0; the second 1, and so on.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following code stores "Bar" in {\i ach}.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 int cch;\par  char ach[100];\par  char *sz = FindStringByIndex("Foo\\nBar\\n", 1, &cch);\par  if (sz != NULL)\par  \tab lstrcpyn(ach, sz, cch + 1);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 FindStringByValue\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b int} {\b FindStringByValue(}{\b const char *} {\i szList}{\b , const char *} {\i szFind}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Look up string in a list of strings and return the index of the  string (if found).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/FINDSTR.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the index of {\i szFind} if {\i szFind} is found in  {\i szList}.  The first string in {\i szList} has index 0; the second 1,  and so on.  Returns -1 if {\i szFind} is not found.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The list of strings to look up {\i szFind} in.  {\i szList} consists of the concatenation of each string in the list,  where each string is terminated by a newline character (e.g.  "Foo\\nBar\\n").\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szFind}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The string to look up.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The search is case-insensitive.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following line of code sets {\i iString} to12.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 iString = FindStringByValue("Foo\\\\nBar\\\\n", "bar");\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 FindStringInString\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LPCSTR} {\b FindStringInString(}{\b LPCSTR} {\i szToSearch}{\b , LPCSTR} {\i szToFind}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Finds a string within another string.  The comparison can be either  case-sensitive or case-insensitive.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/FSIS.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the substring within {\i szToSearch} that equals  {\i szToFind}.  Returns NULL if {\i szToFind} is not found in  {\i szToSearch}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szToSearch}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The string to search.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szToFind}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The string to search for.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 FSIS_IGNORECASE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The search is case-insensitive.  If this flag  is not specified, the search is case-sensitive.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 FreeConnectionPointHelper\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b FreeConnectionPointHelper(void}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Frees a {\b ConnectionPointHelper} object allocated using  {\b AllocConnectionPointHelper}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/CONNECT.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b AllocConnectionPointHelper} for information about why you  should not try to free the {\b ConnectionPointHelper} object  using {\b Release}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 GetHalftonePalette\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HPALETTE} {\b GetHalftonePalette(}{\b DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Return a halftone palette by calling CreateHalftonePalette in the way  appropriate for the current color depth and operating system.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/GHP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 GetIthMRUListEntry\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b GetIthMRUListEntry(}{\b HMRULIST} {\i hMRUList}{\b , int} {\i iEntry}{\b , TCHAR*} {\i szEntry}{\b , int*} {\i pcchEntryLen}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Retrieves the i-th entry in an MRU list.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iEntry}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The 0-based index of the desired entry.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szEntry}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] If successful, set to the first {\i pcchEntryLen} characters  of the next entry.  Cannot be NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pcchEntryLen}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in/out] On entry, the number of characters of the next entry  to copy into {\i szEntry}.  On exit, the actual number of characters  copied.  Cannot be NULL and cannot reference a number less than 1.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.  ---------------------------------------------------------------------------\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 GetMRUListInfo\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b GetMRUListInfo(}{\b HMRULIST} {\i hMRUList}{\b , int*} {\i pcEntries}{\b , int*} {\i pcchMaxEntryLen}{\b , int*} {\i pcMaxEntries}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Gets information about an MRU list such as the number of entries  in the list, the length of the longest entry, and the maximum  number of entries.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pcEntries}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] If non-NULL on entry, set to the number of entries in the  MRU list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pcchMaxEntryLen}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] If non-NULL on entry, set to the length (in characters)  of the longest entry in the MRU list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pcMaxEntries}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] If non-NULL on entry, set to the maximum number of entries  allowed in the list.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.  ---------------------------------------------------------------------------\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 GetNextMRUListEntry\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b GetNextMRUListEntry(}{\b HMRULIST} {\i hMRUList}{\b , TCHAR*} {\i szEntry}{\b , int*} {\i pcchEntryLen}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Retrieves the next entry in an MRU list.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szEntry}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] If successful, set to the first {\i pcchEntryLen} characters  of the next entry.  Can't be NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pcchEntryLen}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in/out] On entry, the number of characters of the next entry  to copy into {\i szEntry}.  On exit, the actual number of characters  copied.  Can't be NULL and can't reference a number less than 1.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Each time {\b GetNextMRUListEntry} is called, it retrieves  the next entry and then advance the current entry pointer.  Call {\b Reset} to move the current entry pointer to the first  entry.  ---------------------------------------------------------------------------\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.  A failure may indicate that there are no  more entries.  Call {\b AtEndOfMRUList} to test for this.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 GetObjectSafety\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b GetObjectSafety(}{\b BOOL*} {\i pfSafeForScripting}{\b , BOOL*} {\i pfSafeForInitializing}{\b , IUnknown*} {\i punk}{\b , CLSID*} {\i pclsid}{\b , IID*} {\i (interfaces)}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Determines if an object is safe-for-scripting and/or  safe-for-initializing vis-a-vis a given set of interfaces.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/OBJSAFE.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pfSafeForScripting}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] If non-NULL, set to TRUE if the object is safe-for-scripting.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pfSafeForInitializing}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] If non-NULL, set to TRUE if the object is safe-for-initializing\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i punk}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The object's IUnknown interface.  If non-NULL, an attempt  will be made to assess the object's safety via its {\b IObjectSafety}  interface.  If NULL, or the the object doesn't support this interface,  its safety will be assessed using {\i pclsid} and the system registry.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The object's class ID.  If {\i punk} is NULL or the object  doesn't support {\b IObjectSafety}, then {\i pclsid} will be used  to look up the object's safety in the system registry (as long  as {\i pclsid} is also non-NULL).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i (interfaces)}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A variable number of interfaces pointers, the last of which  must be NULL.  If the object's safety is assessed via  {\b IObjectSafety} (see {\i punk}) then it's safety is assessed  vis-a-vis this set of interfaces.  These interfaces are not used  if the object's safety is examined via the system registry.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If your code uses OCMisc (i.e., #includes ocmisc.h), it should also  [#include <objsafe.h>] whereever it #includes <initguid.h>.  This will  cause IID_IObjectSafety to be defined.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how to test whether an object is  safe-for-scripting and safe-for-initializing by checking the system  registry only:\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 BOOL fSafeForScripting;\par  BOOL fSafeForInitializing;\par  GetObjectSafety(&fSafeForScripting, &fSafeForInitializing,\par  \tab NULL, &CLSID_MyObject, NULL);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how to test whether an object is  safe-for-scripting via IDispatch using the object's {\b IObjectSafety}  interface:\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 BOOL fSafeForScripting;\par  GetObjectSafety(&fSafeForScripting, NULL, punk, NULL,\par  \tab &IID_IDispatch, NULL);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how to test whether an object is  safe-for-initialzing via IPersistStream, IPersistStreamInit, or  IPersistPropertyBag using the object's {\b IObjectSafety} interface  or, if {\b IObjectSafety} is not supported, the registry:\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 BOOL fSafeForInitializing;\par  GetObjectSafety(NULL, &safeForInitializing, punk, &CLSID_MyObject,\par  \tab &IID_IPersistStream, &IID_IPersistStreamInit,\par  \tab &IID_IPersistPropertyBag, NULL);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.  The object's safety was assessible and *{\i pfSafeForScripting}  and/or *{\i pfSafeForInitializing} have been set accordingly.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell Failure.  The object's safety couldn't be assessed.  The values  of *{\i pfSafeForScripting} and *{\i pfSafeForInitializing} are  indeterminate.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 GetStreamLengthToEnd\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b GetStreamLengthToEnd(}{\b IStream *} {\i pstream}{\b , ULONG *} {\i pcb}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Calculates the distance (in bytes) between the current position in a  stream and the end of the stream.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/GSLTE.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to use.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pcb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the number of bytes left to read  in {\i pstream}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell The distance between the current position in {\i pstream} and  the end of {\i pstream} exceeds the capacity of a ULONG.  Or, an I/O  error occurred.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HelpDelete\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b HelpDelete(}{\b void *} {\i pv}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Frees memory allocated by {\b HelpNew}.  This is simply a macro that  calls {\b HelpMemFree} with specific flags.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/HELPMEM.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pv}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The pointer to the memory to free.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b HelpNew} for more information.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HelpGetAdvise\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b HelpGetAdvise(}{\b DWORD *} {\i pdwAspects}{\b , DWORD *} {\i pdwAdvf}{\b , IAdviseSink * *} {\i ppAdvSink}{\b , HelpAdviseInfo *} {\i pha}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Helps implement {\b IViewObject::GetAdvise} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/ADVISE.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwAspects}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::GetAdvise} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwAdvf}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::GetAdvise} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppAdvSink}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::GetAdvise} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pha}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Caller-allocated structure that was  previously initialized using {\b InitHelpAdvise}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 You must call {\b InitHelpAdvise} before calling {\b HelpGetAdvise}  and {\b HelpGetAdvise}, and {\b UninitHelpAdvise} when the object  that contains the {\b HelpAdviseInfo} structure is deleted.\par  This function fills in *{\i pdwAspects}, *{\i pdwAdvf}, and  *{\i ppAdvSink} with information from {\i pha}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how to use {\b HelpGetAdvise} to help  implement {\b IViewObject::GetAdvise} , assuming {\i m_advise} is  a member variable of type {\b HelpAdviseInfo}.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 STDMETHODIMP CMyControl::GetAdvise(DWORD *pdwAspects, DWORD *pdwAdvf,\par  \tab IAdviseSink **ppAdvSink)\par  \{\par  \tab return HelpGetAdvise(pdwAspects, pdwAdvf, ppAdvSink, &m_advise);\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HelpGetClassInfo\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b HelpGetClassInfo(}{\b LPTYPEINFO *} {\i ppti}{\b , REFCLSID} {\i rclsid}{\b , char *} {\i szEventList}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Helps implement {\b IProvideClassInfo::GetClassInfo} .  The  implementation provides very limited class information -- just  enough to allow firing events to VBS.  {\b Warning:} you should  probably use {\b HelpGetClassInfoFromTypeLib} instead.  See comments  for more information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/HGCI.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppti}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to return the pointer to the  newly-allocated {\b ITypeInfo} interface.  NULL is stored in  *{\i ppti} on error.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The class ID of the object that is implementing  {\b IProvideClassInfo}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szEventList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A list of events that can be fired by the  parent object that is implementing {\b IProvideClassInfo}.  The event  names are concatenated, and each event name is terminated by a  newline character.  The first member name is assigned DISPID value 0,  the second 1, and so on.  For example, if {\i szEventList} is  "\\nFoo\\nBar\\n", then "Foo" is assigned DISPID value 1 and "Bar"  is assigned 2 (because the first element is "").  (These DISPID values  are passed to functions such as {\b IConnectionPointHelper::FireEvent} to invoke events on objects such as VBS scripts connected to the  parent object.)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b WARNING}  HelpGetClassInfo makes assumptions about the script  engine calling it.  Currently, this works with VBS, but the VBS group  will not guarantee that the assumptions made by HelpGetClassInfo will  remain valid in the future, so use at your own risk!  Consider using  {\b HelpGetClassInfoFromTypeLib} instead.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 In the following example, {\b CMyControl}  is a class that implements  (among other things) {\b IConnectionPointContainer} and  {\b IProvideClassInfo}.  The first part of this example shows how  {\b IProvideClassInfo::GetClassInfo}  is implemented by {\b CMyControl} The second part of the example shows how an event is fired,  assuming {\i m_pconpt} is a {\b IConnectionPointHelper} object.  (It's not required that you use {\b ConnectionPointHelper}, but  it's helpful.)\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 // IDispatch IDs for events fired by this object, and the\par  // corresponding method/property names (the order MUST MATCH)\par  #define DISPID_EVENT_FOO        1\par  #define DISPID_EVENT_BAR        2\par  #define EVENT_NAMES "\\n" \\\par  \tab \tab \tab \tab \tab "Foo\\n" \\\par  \tab \tab \tab \tab \tab "Bar\\n"\par  \par  STDMETHODIMP CMyControl::GetClassInfo(LPTYPEINFO FAR* ppTI)\par  \{\par  \tab return HelpGetClassInfo(ppTI, CLSID_CMyControl, EVENT_NAMES, 0);\par  \}\par  \par  // fire the "Bar" event (which has 3 parameters, which in BASIC\par  // are of these types: Integer, String, Boolean)\par  m_pconpt->FireEvent(DISPID_EVENT_BAR, VT_INT, 300 + i,\par  \tab VT_LPSTR, ach, VT_BOOL, TRUE, 0);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HelpGetClassInfoFromTypeLib\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b HelpGetClassInfoFromTypeLib(}{\b LPTYPEINFO *} {\i ppti}{\b , REFCLSID} {\i rclsid}{\b , ITypeLib *} {\i plib}{\b , HINSTANCE} {\i hinst}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Helps implement {\b IProvideClassInfo::GetClassInfo}  using a  caller-provided type library.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/TYPELIB.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppti}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to return the pointer to the  newly-allocated {\b ITypeInfo} interface.  NULL is stored in  *{\i ppti} on error.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The class ID of the object that is implementing  {\b IProvideClassInfo}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plib}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The type library containing events.  Should be  NULL if {\i plib} is non-NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hinst}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The DLL instance containing a type library  resource.  Should be NULL if {\i plib} is non-NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function accesses type information in the type library specified  by either {\i plib} (if the type library is already loaded) or  {\i hinst} (in which case this function loads the type library).\par  It is assumed that the type library contains a "coclass" typeinfo  and a an outgoing (source) "dispinterface" typeinfo.  The class ID  of the "coclass" typeinfo should be {\i rclsid}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 In the following example, {\b CMyControl}  is a class that implements  (among other things) {\b IConnectionPointContainer} and  {\b IProvideClassInfo}.  The first part of this example shows how  {\b IProvideClassInfo::GetClassInfo}  is implemented by {\b CMyControl} The second part of the example shows how an event is fired,  assuming {\i m_pconpt} is a {\b IConnectionPointHelper} object.  (It's not required that you use {\b ConnectionPointHelper}, but  it's helpful.)\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 // in MyControl.h...\par  \par  // IDispatch IDs for events fired by this object\par  #define DISPID_EVENT_BAR        1\par  #define DISPID_EVENT_LOAD       2\par  \par  // class ID\par  #define _CLSID_CMyControl 3CE08A80-9440-11CF-B705-00AA00BF27FD\par  #ifndef __MKTYPLIB__\par  DEFINE_GUID(CLSID_CMyControl, 0x3CE08A80L, 0x9440, 0x11CF,\par  \tab 0xB7, 0x05, 0x00, 0xAA, 0x00, 0xBF, 0x27, 0xFD);\par  #endif\par  \par  // dispinterface ID for event set\par  #define _DIID_DMyControlEvents 296CC160-9F5A-11CF-B705-00AA00BF27FD\par  #ifndef __MKTYPLIB__\par  DEFINE_GUID(DIID_DMyControlEvents, 0x296CC160L, 0x9F5A, 0x11CF,\par  \tab 0xB7, 0x05, 0x00, 0xAA, 0x00, 0xBF, 0x27, 0xFD);\par  #endif\par  \par  // in the .odl  file...\par  \par  #include <olectl.h>\par  #includ  "MyControl.h"\par  \par  [ uuid(B1179240-9445-11CF-B705-00AA00BF27FD), version(1.0), control ]\par  library MyControlLib\par  \{\par  \tab importlib(STDOLE_TLB);\par  \tab importlib(STDTYPE_TLB);\par  \par  \tab // event dispatch interface for CMyControl\par  \tab [ uuid(_DIID_DMyControlEvents) ]\par  \tab dispinterface _DMyControlEvents\par  \tab \{\par  \tab \tab properties:\par  \tab \tab methods:\par  \tab \tab \tab [id(DISPID_EVENT_BAR)] void Bar(long i, BSTR sz, boolean f);\par  \tab \tab \tab [id(DISPID_EVENT_LOAD)] void Load();\par  \tab \};\par  \par  \tab // class information for CMyControl\par  \tab [ uuid(_CLSID_CMyControl), control ]\par  \tab coclass MyControl\par  \tab \{\par  \tab \tab [default, source] dispinterface _DMyControlEvents;\par  \tab \};\par  \};\par  \par  // in some .cpp file...\par  \par  STDMETHODIMP CMyControl::GetClassInfo(LPTYPEINFO FAR* ppTI)\par  \{\par  \tab return HelpGetClassInfoFromTypeLib(ppTI, CLSID_CMyControl, NULL,\par  \tab \tab g_hinst, 0);\par  \}\par  \par  // in some .cpp file...\par  \par  // fire the "Bar" event (which has 3 parameters, which in BASIC\par  // are of these types: Integer, String, Boolean)\par  m_pconpt->FireEvent(DISPID_EVENT_BAR, VT_INT, 300 + i,\par  \tab VT_LPSTR, ach, VT_BOOL, TRUE, 0);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HelpGetClassObject\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b HelpGetClassObject(}{\b REFCLSID} {\i rclsid}{\b , REFIID} {\i riid}{\b , LPVOID *} {\i ppv}{\b , ControlInfo *} {\i pci}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Helps implement {\b DllGetClassObject} (including the class factory  object it creates) for any number of controls.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/FACTORY.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b DllGetClassObject}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b DllGetClassObject}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppv}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b DllGetClassObject}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pci}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Information about the control that's  implemented by the DLL.  See {\b ControlInfo} for more information.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b HelpGetClassObject} can support one control by making a linked list  out of your {\b ControlInfo} structures -- set each {\i pNext}  field to the next structure, and set the last {\i pNext} to NULL.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how to implement {\b DllGetClassObject}  using {\b HelpGetClassObject}.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 STDAPI DllGetClassObject(REFCLSID rclsid, REFIID riid, LPVOID *ppv)\par  \{\par  \tab return HelpGetClassObject(rclsid, riid, ppv, &g_ctlinfo);\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HelpMemAlloc\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LPVOID} {\b HelpMemAlloc(}{\b DWORD} {\i dwFlags}{\b , ULONG} {\i cb}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Allocates memory using either {\b GlobalAlloc} or the task memory  allocator retrieved using {\b CoGetMalloc}.  Optionally  zero-initializes the memory.  Optionally performs simple memory leak  detection.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/HELPMEM.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the allocated block of memory.  Returns NULL on  error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_TASKMEM\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The memory is allocated using {\b IMalloc::Alloc} (using the task memory allocator retrieved from  {\b CoGetMalloc}).  If HM_TASKMEM is not specified, then  {\b GlobalAlloc} is used to allocate the memory.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_ZEROINIT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The memory is zero-initialized.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_LEAKDETECT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 This DLL will keep track of the allocated  memory block using a simple leak detection mechanism.  {\b Important} : If HM_LEAKDETECT is specified, then the  returned memory pointer cannot be freed directly by  {\b GlobalFree} or {\b IMalloc::Free}  -- it must be freed  using {\b HelpMemFree}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of bytes of memory to allocate.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function allocates a block of {\i cb} bytes of memory, using  the allocation function (and optional zero-initialization) specified  by {\i dwFlags}.\par  If HM_LEAKDETECT is specified, then an extra few bytes is allocated  to keep track of leak detection information, and the returned pointer  actually points several bytes beyond the beginning of the memory block.  Therefore, {\b HelpMemFree} must be called to free the block of memory.\par  If HM_LEAKDETECT is {\b not}  specified, then {\b GlobalFree} or  {\b IMalloc::Free}  (depending on {\i dwFlags}) can be called directly  to free the block of memory.  ({\b HelpMemFree} may also be used to  free the memory block).\par  If {\b HelpMemFree} is called, the HM_TASKMEM and HM_LEAKDETECT flags  (if any) specified for {\b HelpMemAlloc} must also be passed to  {\b HelpMemFree}.\par  Leak detection occurs automatically when this DLL unloads: if an  unfreed block is detected, a message box (in the debug build) or  an {\b OutputDebugString} message (in the release build) is displayed.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HelpMemFree\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b HelpMemFree(}{\b DWORD} {\i dwFlags}{\b , LPVOID} {\i pv}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Frees a block of memory previously allocated using {\b HelpMemAlloc}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/HELPMEM.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_TASKMEM\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The memory was allocated using {\b IMalloc::Alloc} (using the task memory allocator retrieved from  {\b CoGetMalloc}).  If HM_TASKMEM is not specified, then it  is assumed that {\b GlobalAlloc} is used to allocate the memory.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_LEAKDETECT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The memory was allocated using {\b HelpMemAlloc}  with the HM_LEAKDETECT flag specified.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pv}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the block of memory that was previously  allocated using {\b HelpMemAlloc} or a NULL pointer.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The HM_TASKMEM and HM_LEAKDETECT flags (if any) specified for  {\b HelpMemAlloc} must also be passed to {\b HelpMemFree}.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HelpMemSetFailureMode\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b HelpMemSetFailureMode(}{\b LONG} {\i lParam}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Sets failure conditions for the memory allocator.  This can be used  to simulate low-memory conditions and test a system's ability to  detect and/or handle these conditions.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/HELPMEM.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Argument used in conjunction with {\i dwFlags}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags (all of which are mutually exclusive):\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_FAILNEVER\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Never fail memory allocation unless memory is truly exhausted.  {\i ulParam} is ignored.  This is the default failure mode for  the memory allocator.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_FAILAFTER\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Begin failing memory allocation after {\i ulParam} allocations have  been attempted.  If, for example, {\i ulParam} is 100, the next  100 calls to {\b HelpMemAlloc} will succeed (memory availability  permitting), but the 101-st, 102-nd, etc. calls will fail.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_FAILUNTIL\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Start failing memory allocation immediately and continue until  {\i ulParam} allocations have been attempted.  If, for example,  {\i ulParam} is 100, the next 100 calls to {\b HelpMemAlloc} will fail,  but the 101-st, 102-nd, etc. calls will succeed (memory availability  permitting).\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_FAILEVERY\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Fail every {\i ulParam}-th attempted memory allocation.  If,  for example, {\i ulParam} is 3, every third call to {\b HelpMemAlloc}  will fail.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_FAILRANDOMLY\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Simulate random memory allocation failure.  ({\i ulParam} mod 100)  indicates the percentage chance that a given call to  {\b HelpMemAlloc} will fail.  (Note: This flag currently has the  same effect as HM_FAILNEVER.)\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function is only available in DEBUG builds of {\b OCHelp} .  (There  is a stub implementation that does nothing in the release builds.)  Also, this function resets the allocation counter.  So, {\i ulParam} is  counted relative to the last call to this function.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HelpNew\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void *} {\b HelpNew(}{\b size_t} {\i cb}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Helps implement a version of the "new" operator that doesn't  use the C runtime.  Zero-initializes the allocated memory.  This is simply a macro that calls {\b HelpMemAlloc} with specific flags.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/HELPMEM.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the allocated block of memory.  Returns NULL on  error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of bytes to allocate.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how to use {\b HelpNew} and {\b HelpDelete}  to define default "new" and "delete" operators.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 void * operator new(size_t cb)\par  \{\par  \tab return HelpNew(cb);\par  \}\par  \par  void operator delete(void *pv)\par  \{\par  \tab HelpDelete(pv);\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HelpQueryHitPoint\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b HelpQueryHitPoint(}{\b IViewObject *} {\i pvo}{\b , DWORD} {\i dwAspect}{\b , LPCRECT} {\i prcBounds}{\b , POINT} {\i ptLoc}{\b , LONG} {\i lCloseHint}{\b , DWORD *} {\i pHitResult}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Helps implement {\b IViewObjectEx::QueryHitPoint}  on a control by  drawing the control into a small bitmap (centered on the point  being hit-tested) and checking if any pixels were drawn.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/QUERYHIT.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The {\b IViewObject} interface on the control  being hit-tested.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwAspect}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObjectEx::QueryHitPoint} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i prcBounds}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObjectEx::QueryHitPoint} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ptLoc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObjectEx::QueryHitPoint} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lCloseHint}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObjectEx::QueryHitPoint} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHitResult}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObjectEx::QueryHitPoint} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function helps implement {\b IViewObjectEx::QueryHitPoint} for the object {\i pvo}, by drawing {\i pvo} into a small  monochrome bitmap centered on {\i ptLoc} {\i pHitResult} is set to  HITRESULT_HIT if {\i ptLoc} is directly over a non-transparent  pixel of {\i pvo}; HITRESULT_CLOSE if {\i ptLoc} is within  {\i lCloseHint} himetric units of a non-transparent pixel of  {\i pvo}; HITRESULT_OUTSIDE otherwise.\par  In order for this function to work, {\i pvo} must implement  DVASPECT_MASK (as the first parameter to IViewObject::Draw),  which is defined to be the same as DVASPECT_CONTENT except  that non-transparent parts of the object are drawn black, and  transparent parts are either left untouched or drawn in  white.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HelpSetAdvise\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b HelpSetAdvise(}{\b DWORD} {\i dwAspects}{\b , DWORD} {\i dwAdvf}{\b , IAdviseSink *} {\i pAdvSink}{\b , HelpAdviseInfo *} {\i pha}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Helps implement {\b IViewObject::SetAdvise} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/ADVISE.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwAspects}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::SetAdvise} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwAdvf}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::SetAdvise} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pAdvSink}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::SetAdvise} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pha}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Caller-allocated structure that was  previously initialized using {\b InitHelpAdvise}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 You must call {\b InitHelpAdvise} before calling {\b HelpSetAdvise}  and {\b HelpGetAdvise}, and {\b UninitHelpAdvise} when the object  that contains the {\b HelpAdviseInfo} structure is deleted.\par  This function updates *{\i pha} with information given by the  parameters {\i dwAspects}, {\i dwAdvf}, and {\i pAdvSink}.  In particular,  the {\b IAdviseSink} pointer is stored in {\i pha}->{\i pAdvSink},  and you can use this pointer (when non-NULL) to advise the  view site object of changes in your object's view (e.g. by calling  {\i pha}->{\i pAdvSink}->OnViewChange()).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how to use {\b HelpSetAdvise} to help  implement {\b IViewObject::SetAdvise} , assuming {\i m_advise} is  a member variable of type {\b HelpAdviseInfo}.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 STDMETHODIMP CMyControl::SetAdvise(DWORD dwAspects, DWORD dwAdvf,\par  \tab IAdviseSink *pAdvSink)\par  \{\par  \tab return HelpSetAdvise(dwAspects, dwAdvf, pAdvSink, &m_advise);\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HIMETRICToPixels\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b HIMETRICToPixels(}{\b int} {\i cx}{\b , int} {\i cy}{\b , SIZE *} {\i psize}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Converts a width and height from HIMETRIC units to pixels  (on the default monitor).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/HIMETRIC.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cx}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The input width in HIMETRIC units.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cy}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The input height in HIMETRIC units.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i psize}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The output size in pixels.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HostLW Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 A lightweight windowed ActiveX control which can embed a  lightweight windowless ActiveX control.  Can be used to allow  IE3 to host windowless controls.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/HOSTLW.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Properties\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long {\b HostLW::TickInterval} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of milliseconds between ticks.  The frame rate (ticks per  second) is approximately 1000 / {\i TickInterval}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b  {\b HostLW::ToggleAnimation} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Starts the animation running if it is currently stopped, or stops the  animation if it is currently running.  Don't confuse this with the  Play/Stop feature in {\b OCTest}, which affects OCTest's internal  animation timer and not HostLW's animation timer.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b  {\b HostLW::RefreshBackground} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Causes the container's background image (e.g. the tiled bitmap in IE)  to be "re-captured" by HostLW, so that the background of HostLW appears  to be "transparent" (i.e.  you can see through to the container).  Normally, if the Capture Background checkbox is set (see below),  RefreshBackground is called automatically whenever the container's  background changes.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b  {\b HostLW::SetMemoryFailureMode} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Available only in the debugging version of HostLW.  This is a debugging  function which will simulate an out-of-memory condition (i.e.  {\b HelpMemAlloc} and functions which call it will fail) under specified  circumstances.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i For all users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The easiest way to construct an HTML page that uses HostLW  to embed a windowless control is to run {\b OCTest}, use File New  to create a new instance of HostLW, and then right-click in  HostLW and embed a new instance of the desired windowless  control.  Then, use {\b OCTest}'s File Save As to save the  HostLW control's data (and the embedded windowless control's data)  to an HTML file.  You can then edit that HTML file using any  HTML tools.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 Later, you can open the HTML file in {\b OCTest}, edit the  embedded windowles control, and save back to HTML -- the contents  of the HTML file outside of the {\b HostLW}  <object>...</object> construct will be untouched.  (If you have more than one <object> tag in the HTML tag,  you can specify the one you want OCTest to edit by naming the  {\b HostLW} <object> tag in lowercase and all other  <OBJECT> tags in uppercase -- only the word "object" itself  needs to be made lowercase or uppercase.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b HostLW} is still undergoing continuing development, both to  improve compatibility with all important containers (e.g.  Nashville, Forms3, etc.)\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control is packaged in both design-time and run-time versions.  The design time version allows a control to be embedded via  the right-click context menu.  (There is also a property page,  which may or may not exist in the final version of {\b HostLW}.)  The run-time version has no such authoring features, in order to  reduce code size.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab The class ID of the design-time version of this control is  "861301A0-99FA-11CF-B705-00AA00BF27FD".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab The class ID of the run-time version of this control is  "TBD" (currently the same as the design-time version).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b HostLW} implements a property sheet (which can be  accessed by File Properties in {\b OCTest}) with the following  properties:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Stretch To Window (unchecked by default): If checked, the  control loaded into HostLW is sized to occupy the entire  size of the HostLW control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Off-Screen Buffer (checked by default): If checked,  then the control loaded into HostLW (if windowless) is  drawn into an off-screen DIBSection bitmap buffer before  being drawn.  This makes greatly reduces animation flicker,  and some controls (e.g. {\b Sprite}) {\i require}  this  feature in order to operate correctly (since some controls  cannot draw directly to the screen and must have an off-screen  buffer to "compose" into).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Hatched Background (unchecked by default): If checked, and  if Capture Background is unchecked, then the background  behind the loaded control is a hatched pattern (mostly useful  for debugging).  If unchecked, and if Capture Background is  also unchecked, then the background is a solid color (currently  always black).  If Capture Background is checked, then  Hatched Background is ignored.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Always Show Border (unchecked by default): Causes the resize  border (with grab handles) to be displayed around the control  even when the control is not UI active (i.e. "selected").  This only affects the design-time version of HostLW, since the  run-time version does not show a resize border.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab No Custom Palette (checked by default): If checked, HostLW  will not ask the container of HostLW to use the color palette  of the loaded control, and instead HostLW will simply use  whatever palette the container of HostLW uses (e.g. the  halftone palette).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Capture Background (checked by default): If checked, then  HostLW attempts to use whatever is behind the HostLW control  (e.g. the tiled background bitmap in IE3) as the background  for the loaded control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Disable Double-Click Start/Stop (unchecked by default):  If checked, then double-clicking the HostLW control will not  toggle (i.e. start and stop) the animation.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Auto-Start (unchecked by default): If checked, then animation  begins as soon as the HostLW control is loaded.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Save Compacted Properties (checked by default): If checked,  then properties are saved in a compacted form.  For example,  rather than storing Players(1).Width="17" and  Players(1).Height="42" as two separate properties (in an  HTML, CSV, or other file), Save Compacted Properties will  cause a single property to be saved:  Players(1)="Width=17,Height=42".  This makes files  (particularly HTML files) smaller and improves load time.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Tick Interval: The number of milliseconds between frames.  The frame rate (ticks per second) is approximately 1000 /  Tick Interval.  Note: {\b OCTest} has its own fixed tick  rate, which you get if you use OCTest's Play/Stop menu item;  to avoid this, use {\b HostLW::ToggleAnimation} DoubleClick or Alt+DoubleClick to start/stop animation  instead of using Play/Stop in OCTest.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b HostLW} treats certain keyboard-mouse combinations specially:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Alt+Click advances animation by one frame.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Alt+DoubleClick toggles (i.e. starts and stops) the animation,  unless the "Disble Double-Click Start/Stop" checkbox in the  property sheet is checked (see above).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Alt+Ctrl+DoubleClick toggles the animation, regardless of the  setting of the "Disble Double-Click Start/Stop" checkbox in the  property sheet.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Alt+Shift+DoubleClick toggles (i.e. turns on/off) display of  performance statistics during animation, as described under  "Monitoring performance".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Monitoring performance: As described above, Alt+Shift+DoubleClick  toggles (i.e. turns on/off) display of performance statistics  during animation.  When turned on, the following information is  displayed in the upper-left corner of the HostLW control.  When  turned off, all statistics are reset to zero.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab E.g. "76:": The current "frame number" since performance  monitoring was last turned on.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab E.g. "002+008ms": The amount of time (in milliseconds)  required to process {\b IAnimate::Tick}  and {\b UpdateWindow}  (including compositing loop), respectively.  This time  is the average over the last two frames.  Generally, the  first number should be very small (e.g. no more than a few  milliseconds, and certainly a small fraction of the second  number).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab E.g. "7x": The number of extra WM_PAINT messages, i.e.  WM_PAINT messages that were not the result of  {\b IAnimate::Tick} .  During animation, this number should  remain constant -- if it increases over time a this may be an  indication that the loaded control (or some control it  contains) may be calling {\b UpdateWindow} which can  significantly reduce performance.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab E.g. "3s": The number of skipped ticks.  Although (by  definition) frames are nevers skipped, it's possible that  an animation timer tick may be skipped if a frame is taking  too long to display.  Typically, ticks are skipped whenever  the container is in a tight loop (e.g. while dragging the  IE window) or if the frame rate is too fast for the computer.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab E.g. "avg: 012ms": The average number of milliseconds required  to process a frame (including both {\b IAnimate::Tick}  and  {\b UpdateWindow}).  This average is measured since the  performance monitoring was turned on (i.e. since frame 0).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab E.g. "10f/s": The average number of frames per second being  displayed.  This average is measured since the performance  monitoring was turned on (i.e. since frame 0).  Meaningless  while single-stepping.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab E.g. "012%": The average CPU saturation caused by frame  display.  If there are no other threads running, this is the  approximate percentage of CPU time consumed by HostLW.  When this number reaches approximately 100%, the CPU is  fully "saturated", meaning that the frame rate cannot be  further increased.  At this point, HostLW will automatically  slow the frame rate as needed.  Meaningless while  single-stepping.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Event support: Since {\b Stage} cannot fire events originating from  embedded controls via the normal {\b IConnectionPoint} mechanism,  {\b HostLW} provides a hack workaround.  ({\b Important:}  This  workaround is temporary -- expect it to change!)  HostLW implements  an event named "Event" which can be handled in VBS in the usual  way.  The "Event" event has three parameters:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\i ctl} (type Variant, containing an Object, i.e. a  VT_DISPATCH value): the control (or x-object/site aggregated  with the control) that caused the event;\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\i evname} (type Variant, containing a String, i.e. a  VT_BSTR value): the name of the event (e.g. "Click");\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\i args} (type Variant, containing an Array of Variants, i.e. a  VT_ARRAY | VT_BYVAL | VT_VARIANT): the arguments of the  event.  The first argument is in element 1 of {\i args},  the second is in element 2, and so on.  {\i args} may in fact  have elements with indices below 1, but the event function  is required to ignore these.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 VBS users: See HostLW\\test.htm for an example of how to use  the "Event" event.  Typically you'll get the Name property of  the control that fired the event (via "ctl.Name") and then  handle the event based on which control fired it.  But: beware  that {\i ctl} may not have a Name property in all cases, so use  "On Error Resume Next" before "ctl.Name".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 C++ users: To cause HostLW to fire the "Event" event from within  a control, you need to do the following.  See HostLW\\control.cpp  (search for SAFEARRAYBOUND) for an example.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Use {\b SafeArrayCreate} to create an array that contains N+2  elements of type VT_VARIANT, where N is the number of  parameters of the event.  The lower bound of the array should  be -1.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Set element -1 of the array to the {\b IDispatch} pointer of  the control or site/x-object that caused the event -- don't  forget to {\b AddRef} this pointer.  Set element 0 of the array  to a VT_BSTR element containing the string name of the event  (e.g. "Click").  Set slements 1...N of the array to the  arguments of the event.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Get the HWND of HostLW, by calling {\b IOleWindow::GetWindow} on the site of your control.  (If the container is not HostLW,  then the event will be harmlessly ignored.)  Use  {\b RegisterWindowMessage} to get the message ID of the  window message named "HostLWEvent".  Use {\b SendMessage}  to send this message to the container window (hopefully  the HostLW window); {\i wParam} of the message should be the  SAFEARRAY pointer allocated above, and {\i lParam} should be  zero.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab Use {\b SafeArrayDestroy} to free the array.\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\i For C++ users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The class ID of this control is defined as CLSID_CHostLWOC in  "HostLWOC.h".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The ProgID of this control is "HostLW.HostLW.1".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control implements the following interfaces:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IUnknown}: A delegating {\b IUnknown} that supports  aggregation\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IHostLWOC}: Provides low-level efficient access to the  properties of a {\b HostLW} control.  See that interface  for more information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleObject} subset: Used to allow the container to provide  the client site pointer, invoke control verbs, and get control  state.  Only {\b SetClientSite}, {\b Close}, {\b DoVerb},  {\b EnumVerbs} (design time version only), and {\b GetMiscStatus}  are implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleInPlaceObject} subset (based on {\b IOleWindow}): Used  to change control state.  Only {\b InPlaceDeactivate},  {\b UIDeactivate}, and {\b SetObjectRects}, are implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleControl} subset: Used to inform the control of  ambient property changes.  Only {\b OnAmbientPropertyChange}  is implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b ISpecifyPropertyPages} (only in the design-time version):  Used to retrieve information about the control's property page.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IPersistStreamInit} (based on {\b IPersistStream}):  Used to persist the control's data to/from an {\b IStream},  including the data of the embedded control (if any).  The file format is compatible with past and future versions  of this control (i.e. adding and removing properties won't  break the control).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IPersistPropertyBag}: Used to persist the control's data  to/from an {\b IPropertyBag}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IDispatch}:  Provides access to the control's properties.  Does not provide type information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control sources (calls) the following interfaces (if  available) on the container-provided site object:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleClientSite}: The client site pointer provided by  the container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IDispatch}: Used to access ambient properties (currently  DISPID_AMBIENT_USERMODE).\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HostLW::RefreshBackground Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b  RefreshBackground(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Causes the container's background image (e.g. the tiled bitmap in IE)  to be "re-captured" by HostLW, so that the background of HostLW appears  to be "transparent" (i.e.  you can see through to the container).  Normally, if the Capture Background checkbox is set (see below),  RefreshBackground is called automatically whenever the container's  background changes.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/HOSTLW.D\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HostLW::SetMemoryFailureMode Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b  SetMemoryFailureMode(}{\b Long} {\i param}{\b , Long} {\i flags} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Available only in the debugging version of HostLW.  This is a debugging  function which will simulate an out-of-memory condition (i.e.  {\b HelpMemAlloc} and functions which call it will fail) under specified  circumstances.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/HOSTLW.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i param}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The meaning of this parameter depends on {\i flags}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i flags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May be one of the following values:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_FAILNEVER (value 1)\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Never fail memory allocation unless memory is truly exhausted.  {\i param} is ignored.  This is the default failure mode for the  memory allocator.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_FAILAFTER (value 2)\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Begin failing memory allocation after {\i param} allocations  have been attempted.  If, for example, {\i param} is 100, the  next 100 calls to HelpMemAlloc will succeed (memory  availability permitting), but the 101-st, 102-nd, etc. calls  will fail.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_FAILUNTIL (value 4)\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Start failing memory allocation immediately and continue  until {\i param} allocations have been attempted.  If, for  example, {\i param} is 100, the next 100 calls to HelpMemAlloc  will fail, but the 101-st, 102-nd, etc. calls will succeed  (memory availability permitting).\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 HM_FAILEVERY (value 8)\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Fail every {\i param}-th attempted memory allocation.  If, for  example, {\i param} is 3, every third call to HelpMemAlloc  will fail.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HostLW::TickInterval Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Long}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 The number of milliseconds between ticks.  The frame rate (ticks per  second) is approximately 1000 / {\i TickInterval}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/HOSTLW.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following VBS code sets the frame rate to approximately 24  frames per second (assuming {\i host} is a {\b HostLW} object).\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 host.TickInterval = 1000 / 24\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HostLW::ToggleAnimation Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b  ToggleAnimation(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Starts the animation running if it is currently stopped, or stops the  animation if it is currently running.  Don't confuse this with the  Play/Stop feature in {\b OCTest}, which affects OCTest's internal  animation timer and not HostLW's animation timer.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/HOSTLW.D\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConnectionPointHelper Interface\par \pard\plain \sa160\sl240 \fs21\lang1033 Contains functions for implementing the {\b ConnectionPointHelper}  object, which provides a simple implementation of an  {\b IDispatch}-based {\b IConnectionPoint}.  Also contains helper  functions for implementing {\b IConnectionPointContainer} in the case  where this is only connection maintained by the connection point  container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/CONNECT.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT FireEventList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Fire a given {\b IDispatch}-based event on all objects (e.g. VBS)  connected to this {\b ConnectionPointHelper} object.  Parameters  for the event are passed as a va_list array.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT FireEvent}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Fire a given {\b IDispatch}-based event on all objects (e.g. VBS)  connected to this {\b ConnectionPointHelper} object.  Parameters  for the event are passed as a varying argument list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT EnumConnectionPoints}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b IConnectionPointContainer::EnumConnectionPoints} in the case where this object implements the only connection maintained  by the connection point container.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT FindConnectionPoint}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Helps implement {\b IConnectionPointContainer::FindConnectionPoint} in the case where this object implements the only connection maintained  by the connection point container.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 To allocate an {\b ConnectionPointHelper} object, call  {\b AllocConnectionPointHelper}.  To free the object, call  {\b FreeConnectionPointHelper} (not {\b Release} -- see  {\b AllocConnectionPointHelper} for more information).\par  This interface is based on {\b IConnectionPoint}.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConnectionPointHelper::EnumConnectionPoints Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT EnumConnectionPoints(}{\b LPENUMCONNECTIONPOINTS *} {\i ppEnum}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Helps implement {\b IConnectionPointContainer::EnumConnectionPoints} in the case where this object implements the only connection maintained  by the connection point container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/CONNECT.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the same error codes as  {\b IConnectionPointContainer::EnumConnectionPoints} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppEnum}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See  {\b IConnectionPointContainer::EnumConnectionPoints} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 In the following example, {\b CMyControl}  is a class that is based  on (among other things) {\b IConnectionPointContainer}.  This example  shows how to use this {\b EnumConnectionPoints} function to  implement {\b IConnectionPointContainer::EnumConnectionPoints} .\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 STDMETHODIMP CMyControl::EnumConnectionPoints(\par  \tab LPENUMCONNECTIONPOINTS *ppEnum)\par  \{\par  \tab return m_pconpt->EnumConnectionPoints(ppEnum);\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConnectionPointHelper::FindConnectionPoint Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT FindConnectionPoint(}{\b LPENUMCONNECTIONPOINTS *} {\i ppFindConnectionPoint}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Helps implement {\b IConnectionPointContainer::FindConnectionPoint} in the case where this object implements the only connection maintained  by the connection point container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/CONNECT.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the same error codes as  {\b IConnectionPointContainer::FindConnectionPoint} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppFindConnectionPoint}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See  {\b IConnectionPointContainer::FindConnectionPoint} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 In the following example, {\b CMyControl}  is a class that is based  on (among other things) {\b IConnectionPointContainer}.  This example  shows how to use this {\b FindConnectionPoint} function to  implement {\b IConnectionPointContainer::FindConnectionPoint} .\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 STDMETHODIMP CMyControl::FindConnectionPoint(REFIID riid,\par  \tab LPCONNECTIONPOINT *ppCP)\par  \{\par  \tab return m_pconpt->FindConnectionPoint(riid, ppCP);\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConnectionPointHelper::FireEvent Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT FireEvent(}{\b DISPID} {\i dispid}{\b , (varying)} {\i (arguments)} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Fire a given {\b IDispatch}-based event on all objects (e.g. VBS)  connected to this {\b ConnectionPointHelper} object.  Parameters  for the event are passed as a varying argument list.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/CONNECT.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dispid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The ID of the event to fire.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i (arguments)}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The arguments to pass to the event.  These must consist of N pairs of arguments followed by a 0  (zero value).  In each pair, the first argument is a VARTYPE  value that indicates the type of the second argument.  Only a  certain subset of VARTYPEs are supported.  See {\b DispatchInvoke}  for more information about the format of these arguments.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example fires the event DISPID_EVENT_BAR, which has  two parameters (which in BASIC would be a Long and a String) --  42 and "Hello", respectively, are passed as arguments.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 pconpt->FireEvent(DISPID_EVENT_BAR, VT_INT, 42, VT_LPSTR, "Hello", 0);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConnectionPointHelper::FireEventList Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT FireEventList(}{\b DISPID} {\i dispid}{\b , va_list} {\i args} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Fire a given {\b IDispatch}-based event on all objects (e.g. VBS)  connected to this {\b ConnectionPointHelper} object.  Parameters  for the event are passed as a va_list array.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/CONNECT.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dispid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The ID of the event to fire.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i args}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The arguments to pass.  See  {\b FireEventList} for information about  the organization of these arguments.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IEnumVariantProperty Interface\par \pard\plain \sa160\sl240 \fs21\lang1033 Allows the properties of an object to be enumerated.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT Next}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Retrieves a specified number of items in the  enumeration sequence.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT Skip}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Skips over a specified number of items in the  enumeration sequence.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT Reset}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Resets the enumeration sequence to the beginning.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT Clone}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Creates another enumerator that contains the same  enumeration state as the current one.  Note that {\b VariantIO} does  not implement this method.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The {\b VariantIO} implementation of {\b IEnumVariantProperty}  has these restrictions:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b Clone} is not supported.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b Reset} is automatically called whenever a property is  removed from the {\b VariantIO} object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IEnumVariantProperty::Clone Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT Clone(}{\b IEnumVariantProperty * *} {\i ppenum}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates another enumerator that contains the same enumeration state  as the current one.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_UNEXPECTED\cell An unexpected error occurred.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppenum}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 On exit, contains the duplicate  enumerator.  If the function was unsuccessful, this parameter's value  is undefined.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Note that {\b VariantIO} does not implement this method.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IEnumVariantProperty::Next Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT Next(}{\b unsigned long} {\i celt}{\b , VariantProperty *} {\i rgvp} {\b , unsigned long *} {\i pceltFetched} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Retrieves a specified number of items in the enumeration sequence.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The number of elements returned is {\i celt}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell The number of elements returned is not {\i celt}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i celt}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of elements being requested.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rgvp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Receives an array of size {\i celt}  (or larger) of the elements to be returned.  The caller is responsible  for calling {\b SysFreeString} and {\i VariantClear} on the  {\i bstrPropName} and {\i varValue} fields, respectively, of each  element returned in {\i rgvp}.  (Alternatively, the caller can simply  call {\b VariantPropertyClear} on each element returned in {\i rgvp}.)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pceltFetched}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 On return, contains the number of  elements actually returned in {\i rgelt}.  If {\i pceltFetched} is NULL,  this information is not returned.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IEnumVariantProperty::Reset Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT Reset(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Resets the enumeration sequence to the beginning.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 There is no guarantee that the same set of objects will be enumerated  after the reset, because it depends on the collection being enumerated.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IEnumVariantProperty::Skip Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT Skip(}{\b unsigned long} {\i celt}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Skips over a specified number of items in the enumeration sequence.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The number of elements skipped is {\i celt}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell The number of elements skipped is not {\i celt}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i celt}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of elements that are to be skipped.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IHostLWOC Interface\par \pard\plain \sa160\sl240 \fs21\lang1033 Provides low-level efficient access to the properties of a {\b HostLW}  control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/HOSTLW.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Retrieves control properties.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets control properties.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This interface is defined in "HostLWOC.h".\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IHostLWOC::GetInfo Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetInfo(}{\b HostLWOCInfo *} {\i pInfo}{\b , UINT} {\i cbInfo} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Retrieves control properties.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/HOSTLW.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell This object supports an earlier version of the {\b HostLWOCInfo}  structure than is specified by {\i cbInfo}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer.  Information retrieved by  {\b GetInfo} will be stored in this buffer.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pInfo}  (used for version checking).\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IHostLWOC::SetInfo Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetInfo(}{\b HostLWOCInfo *} {\i pInfo}{\b , UINT} {\i cbInfo} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Sets control properties.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/HOSTLW.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell This object supports an earlier version of the {\b HostLWOCInfo}  structure than is specified by {\i cbInfo}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer containing information that  is to be stored in the control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pInfo}  (used for version checking).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If you only want to change some of the fields of {\i pInfo}, call  {\b GetInfo} first to initialize {\i pInfo} and then change the  desired fields and call {\b SetInfo}.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ILineOC Interface\par \pard\plain \sa160\sl240 \fs21\lang1033 Provides low-level efficient access to the properties of a {\b Line}  control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/LINE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Retrieves control properties.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets control properties.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This interface is defined in "LineOC.h".\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ILineOC::GetInfo Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetInfo(}{\b LineOCInfo *} {\i pInfo}{\b , UINT} {\i cbInfo} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Retrieves control properties.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/LINE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell This object supports an earlier version of the {\b LineOCInfo}  structure than is specified by {\i cbInfo}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer.  Information retrieved by  {\b GetInfo} will be stored in this buffer.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pInfo}  (used for version checking).\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ILineOC::SetInfo Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetInfo(}{\b LineOCInfo *} {\i pInfo}{\b , UINT} {\i cbInfo} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Sets control properties.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/LINE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell This object supports an earlier version of the {\b LineOCInfo}  structure than is specified by {\i cbInfo}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer containing information that  is to be stored in the control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pInfo}  (used for version checking).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If you only want to change some of the fields of {\i pInfo}, call  {\b GetInfo} first to initialize {\i pInfo} and then change the  desired fields and call {\b SetInfo}.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IManageVariantIO Interface\par \pard\plain \sa160\sl240 \fs21\lang1033 Based on {\b IVariantIO}.  Allows the caller to control how the methods  of the {\b IVariantIO} object operate (e.g. whether the {\b IVariantIO}  object is in loading mode or saving mode).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetMode}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets the mode of the {\b IVariantIO} object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetMode}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Gets the mode of the {\b IVariantIO} object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT DeleteAllProperties}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Removes all property/value pairs from  the {\b VariantIO} object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IManageVariantIO::DeleteAllProperties Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT DeleteAllProperties(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Removes all property/value pairs from the {\b VariantIO} object.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IManageVariantIO::GetMode Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetMode(}{\b DWORD *} {\i *pdwFlags}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Gets the mode of the {\b IVariantIO} object.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i *pdwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns the flag specifying the current mode of  the {\b IVariantIO} object.  See {\b SetMode} for a description of  these flags.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 When a {\b VariantIO} object is created, its initial mode is such that  none of the flags in {\i dwFlags} are specified.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IManageVariantIO::SetMode Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetMode(}{\b DWORD} {\i dwFlags}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Sets the mode of the {\b IVariantIO} object.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIO_ISLOADING\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Set the {\b IVariantIO} object to loading  mode, so that {\b IVariantIO::Persist}  and  {\b IVariantIO::PersistList}  copy data from properties  to variables.  If this flag is not spacified, then  the {\b IVariantIO} object will be set to saving mode,  so that {\b IVariantIO::Persist}  and {\b IVariantIO::PersistList} copy data from variables to properties.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIO_ZEROISDEFAULT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Inform the {\b IVariantIO} object that  0 is the default values for properties and that 0-valued  properties should not be saved via {\b IVariantIO::Persist}  and  {\b IVariantIO::PersistList} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 When a {\b VariantIO} object is created, its initial mode is such that  none of the flags in {\i dwFlags} are specified.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 InitHelpAdvise\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b InitHelpAdvise(}{\b HelpAdviseInfo *} {\i pha}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Initializes a {\b HelpAdviseInfo} structure, used to help implement  {\b IViewObject::SetAdvise}  and {\b IViewObject::GetAdvise} .\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/ADVISE.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pha}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Caller-allocated structure that contains  information used to help implement {\b IViewObject::SetAdvise}  and  {\b IViewObject::GetAdvise} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 You must call {\b InitHelpAdvise} before calling {\b HelpSetAdvise}  and {\b HelpGetAdvise}, and {\b UninitHelpAdvise} when the object  that contains the {\b HelpAdviseInfo} structure is deleted.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IPersistVariantIO Interface\par \pard\plain \sa160\sl240 \fs21\lang1033 Loads or saves properties from/to a given {\b IVariantIO} object  (control).  Used by {\b PropertyHelper} to help an object implement  {\b IPersistpropertyBag}, {\b IPersistStream}, {\b IPersistStreamInit},  and a simplified implementation of {\b IDispatch}, for any object which  implements {\b IPersistVariantIO}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/APH.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT InitNew}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Informs the control that it has been created  in a "new" state, so it should initialize its state data (if not  done already).  If the control is being loaded from a stream,  {\b DoPersist} will be called instead of {\b InitNew}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT IsDirty}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns S_OK if the object has changed since it  was last saved, S_FALSE otherwise.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT DoPersist}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Instructs the object to load or save its  properties to a gieven {\b IVariantIO} object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IPersistVariantIO::DoPersist Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT DoPersist(}{\b IVariantIO *} {\i pvio}{\b , DWORD} {\i dwFlags} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Instructs the object to load or save its properties to a gieven  {\b IVariantIO} object.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/APH.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvio}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 {\b IVariantIO} object to save to or load from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 PVIO_PROPNAMESONLY\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The caller is calling {\b DoPersist}  purely to get a list of the names of properties from the  control.  The control can safely ignore this flag, unless  it wishes to use this information for optimization purposes.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 PVIO_CLEARDIRTY\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The control should clear its dirty flag  (so that the next call to {\b IsDirty} should return S_FALSE).\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 PVIO_NOKIDS\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The control need not persist any child controls that  it may contain.  For example, this flag is used by the property  helper object when it calls DoPersist inside its  IDispatch::GetIDsOfNames and IDispatch::Invoke.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how a control might implement  {\b DoPersist}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 STDMETHODIMP CMyControl::DoPersist(IVariantIO* pvio, DWORD dwFlags)\par  \{\par  \tab // load or save control properties to/from <info>\par  \tab HRESULT hr;\par  \tab if (FAILED(hr = pvio->Persist(0,\par  \tab \tab \tab "BorderWidth", VT_INT, &m_iWidth,\par  \tab \tab \tab "BorderColor", VT_INT, &m_rgb,\par  \tab \tab \tab "X1", VT_INT, &m_iX1,\par  \tab \tab \tab "Y1", VT_INT, &m_iY1,\par  \tab \tab \tab "X2", VT_INT, &m_iX2,\par  \tab \tab \tab "Y2", VT_INT, &m_iY2,\par  \tab \tab \tab NULL)))\par  \tab \tab return hr;\par  \tab if (hr == S_OK)\par  \tab \tab ...one or more properties changed, so repaint etc. control...\par  \par  \tab // clear the dirty bit if requested\par  \tab if (dwFlags & PVIO_CLEARDIRTY)\par  \tab \tab m_fDirty = FALSE;\par  \par  \tab return S_OK;\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IPersistVariantIO::InitNew Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT InitNew(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Informs the control that it has been created in a "new" state, so it  should initialize its state data (if not done already).  If the  control is being loaded from a stream, {\b DoPersist} will be called  instead of {\b InitNew}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/APH.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_NOTIMPL\cell The control does not implement this method.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The control can safely return E_NOTIMPL from this method if it  initializes its data when it is created.  In this case, if the control  needs to be re-initialized, the container will simply destroy and  re-create it (which is what almost every container does anyway).\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IPersistVariantIO::IsDirty Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT IsDirty(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns S_OK if the object has changed since it was last saved,  S_FALSE otherwise.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/APH.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The object has changed since it was last saved.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell The object has not changed since it was last saved.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The control should maintain an internal "dirty flag" (e.g. a BOOL  {\i m_fDirty} class member), which should be initialized to FALSE,  but set to TRUE whenever the control's data changes and set to  FALSE in {\b DoPersist} when the PVIO_CLEARDIRTY flag is specified.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how a control might implement  {\b IsDirty}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 STDMETHODIMP CMyControl::IsDirty()\par  \{\par  \tab return (m_fDirty ? S_OK : S_FALSE);\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW Interface\par \pard\plain \sa160\sl240 \fs21\lang1033 Interface to a {\b SiteLW} object, which implements an ActiveX  windowed control that hosts an ActiveX lightweight windowless control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetSiteWindow}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets the site HWND of the {\b SiteLW} object.  This is an alternative  to providing the HWND to {\b AllocSiteLW}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetSiteWindowParameters}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets parameters of the {\b SiteLW} site window.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetDefaultPalette}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Provides the site window with a default palette, to be used as the  palette of the off-screen compositing bitmap if the  SSWP_NOCUSTOMPALETTE is specified.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetControlColorSet}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns a LOGPALETTE containing the colors of the embedded control's  preferred palette (if any).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetServiceProvider}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Provides the site window with a pointer to an implementation of  {\b IServiceProvider} that the site should forward calls to  {\b IServiceProvider::QueryService}  to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetAdvise}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Identical to {\b IViewObject::SetAdvise} .  {\b IAdviseSink::OnViewChange} is called when the palette of the embedded control changes.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetAdvise}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Identical to {\b IViewObject::GetAdvise} .  See {\b SetAdvise}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT NewControl}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Creates an instance of a control and embeds the control in the  {\b SiteLW} control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT CloseControl}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Disconnects the loaded control (if any) from the site and releases it.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT ControlIsLoaded}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns S_OK if there is control loaded, S_FALSE otherwise.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT ControlQueryInterface}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an {\b AddRef}d pointer to a specific interface on the loaded  control (if any).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetDesignMode}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Put the {\b SiteLW} object into either design mode or run mode.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetDesignMode}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns S_OK if the site is in design mode, S_FALSE if the site is in  run mode.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT CanShowProperties}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns S_OK if there is a control loaded and it has one or more  property sheets, S_FALSE otherwise.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT ShowProperties}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Show the property sheet for the currently loaded control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT ShowContextMenu}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Displays the context menu that contains menu items from both  the {\b SiteLW} object and, optionally, the embedded control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b LRESULT OnSiteWindowResized}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Informs the site that the site window has received a WM_SIZE message.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b LRESULT OnSiteWindowQueryNewPalette}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Informs the site that the site window has received a WM_QUERYNEWPALETTE  message.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b LRESULT OnSiteWindowPaletteChanged}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Informs the site that the site window has received a WM_PALETTECHANGED  message.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b LRESULT OnSiteWindowPaintRequest}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Informs the site that the site window has received a WM_PAINT request.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b LRESULT OnSiteWindowMouseMessage}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Informs the site that the site window has received a mouse message.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b LRESULT OnSiteWindowCursorMessage}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Informs the site that the site window has received a WM_CURSOR message.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b LRESULT OnSiteWindowKeyboardMessage}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Informs the site that the site window has received a keyboard  message.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b LRESULT OnSiteWindowCommand}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Informs the site that the site window has received a WM_COMMAND message.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b void OnSiteWindowTick}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Tells the site window to tell the loaded control to advance one step in  its animation (if applicable).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b void OnSiteWindowRewind}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Tells the site window to tell the loaded control to rewind its  animation (if applicable).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OnTranslateAccelerator}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Informs the site that the site's container has requested translation  of an accelerator.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The owner of the site window is responsible for forwarding various  window messages to the {\b SiteLW} object.  See each OnSiteWindowXXX  method for more information.\par  Note that the site window will also receive various following  WM_COMMAND commands which need to be interpreted in particular ways.  See {\b OnSiteWindowCommand} for more information.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::CanShowProperties Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT CanShowProperties(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns S_OK if there is a control loaded and it has one or more  property sheets, S_FALSE otherwise.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The {\b SiteLW} object can show a property sheet using  {\b ShowProperties}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The {\b SiteLW} object cannot currently show a property sheet  using {\b ShowProperties}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::CloseControl Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT CloseControl(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Disconnects the loaded control (if any) from the site and releases it.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::ControlIsLoaded Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT ControlIsLoaded(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns S_OK if there is control loaded, S_FALSE otherwise.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell A control is loaded.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell No control is loaded.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::ControlQueryInterface Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT ControlQueryInterface(}{\b REFIID} {\i riid}{\b , LPVOID *} {\i ppv} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b AddRef}d pointer to a specific interface on the loaded  control (if any).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell No control is loaded.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_NOINTERFACE\cell The control doesn't support interface {\i riid}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The requested interface.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppv}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store an {\b AddRef}d pointer to interface  {\i riid}.  NULL is stored in *{\i ppv} on error.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::GetAdvise Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetAdvise(}{\b DWORD *} {\i pdwAspects}{\b , DWORD *} {\i pdwAdvf} {\b , IAdviseSink * *} {\i ppAdvSink} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Identical to {\b IViewObject::GetAdvise} .  See {\b SetAdvise}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwAspects}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::GetAdvise} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwAdvf}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::GetAdvise} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppAdvSink}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::GetAdvise} .\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::GetControlColorSet Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetControlColorSet(}{\b LOGPALETTE * *} {\i pplp}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a LOGPALETTE containing the colors of the embedded control's  preferred palette (if any).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pplp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store a pointer to the allocated  LOGPALETTE which is allocated by the {\b ISiteLW} object and freed  by the caller using {\b CoTaskMemFree}.  NULL is stored in *{\i pplp}  on error.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::GetDesignMode Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetDesignMode(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns S_OK if the site is in design mode, S_FALSE if the site is in  run mode.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The site is in design mode.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell The site is in run mode.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::NewControl Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT NewControl(}{\b IUnknown *} {\i punk}{\b , DWORD} {\i dwFlags} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates an instance of a control and embeds the control in the  {\b SiteLW} control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i punk}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The control to embed.  This pointer is {\b AddRef}d  by {\b NewControl}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NC_DONTSETSITE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Don't call {\b IOleObject::SetClientSite} on {\i punk} (presumably because SetClientSite was already  called on {\i punk} before {\i punk} was depersisted (loaded).\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::OnSiteWindowCommand Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT OnSiteWindowCommand(}{\b UINT} {\i uiMsg}{\b , WPARAM} {\i wParam} {\b , LPARAM} {\i lParam} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Informs the site that the site window has received a WM_COMMAND message.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value to return from the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i uiMsg}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The message that was received.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The WPARAM parameter of the message.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The LPARAM parameter of the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function should be called when the site window owner receives  a WM_COMMAND message that the site window owner doesn't otherwise  handle.\par  Note that the site window will also receive the following WM_COMMAND  commands in certain circumstances:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 SITELW_ID_NEW\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The user chose "New..." from the context menu.  The site window should display a dialog box to allow the user  to select a new control to create, and then call  {\b NewControl}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 SITELW_ID_OPEN\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The user chose "Open..." from the context menu.  The site window should display a dialog box to allow the user  to choose a control data file to open, and then call  {\b OpenControl}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 SITELW_ID_CLOSE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The user chose "Close" from the context menu.  The site window should call {\b CloseControl}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 SITELW_ID_SAVE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The user chose "Save" from the context menu.  The site window should display a dialog box to allow the user  to choose a control data file to save to, and then call  {\b SaveControl}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 SITELW_ID_PROPERTIES\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The user chose "Properties..." from the  context menu.  The site window should call {\b ShowProperties}.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::OnSiteWindowCursorMessage Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT OnSiteWindowCursorMessage(}{\b UINT} {\i uiMsg}{\b , WPARAM} {\i wParam} {\b , LPARAM} {\i lParam} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Informs the site that the site window has received a WM_SETCURSOR  message.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value to return from the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i uiMsg}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The message that was received.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The WPARAM parameter of the message.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The LPARAM parameter of the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function should be called when the site window owner receives  a WM_SETCURSOR message.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::OnSiteWindowKeyboardMessage Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT OnSiteWindowKeyboardMessage(}{\b UINT} {\i uiMsg}{\b , WPARAM} {\i wParam} {\b , LPARAM} {\i lParam} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Informs the site that the site window has received a keyboard  message.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value to return from the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i uiMsg}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The message that was received.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The WPARAM parameter of the message.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The LPARAM parameter of the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function should be called when the site window owner receives  a WM_KEYDOWN, WM_KEYUP, WM_CHAR, WM_DEADCHAR, WM_SYSKEYDOWN,  WM_SYSKEYUP, WM_SYSDEADCHAR, WM_IME_xxx, WM_HELP, or WM_CANCELMODE  message.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::OnSiteWindowMouseMessage Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT OnSiteWindowMouseMessage(}{\b UINT} {\i uiMsg}{\b , WPARAM} {\i wParam} {\b , LPARAM} {\i lParam} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Informs the site that the site window has received a mouse message.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value to return from the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i uiMsg}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The message that was received.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The WPARAM parameter of the message.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The LPARAM parameter of the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function should be called when the site window owner receives  a WM_LBUTTONDOWN, WM_RBUTTONDOWN, WM_LBUTTONUP, WM_RBUTTONUP,  WM_LBUTTONDBLCLK, WM_RBUTTONDBLCLK, or WM_MOUSEMOVE message.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::OnSiteWindowPaintRequest Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT OnSiteWindowPaintRequest(}{\b WPARAM} {\i wParam}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Informs the site that the site window has received a WM_PAINT request.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value to return from the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The WPARAM parameter of the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function should be called when the site window owner receives  a WM_PAINT message.\par  Important: when the site window owner receives WM_ERASEBKGND,  0 should be returned (i.e. {\b DefWindowProc} should not be called).\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::OnSiteWindowPaletteChanged Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT OnSiteWindowPaletteChanged(}{\b WPARAM} {\i wParam}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Informs the site that the site window has received a WM_PALETTECHANGED  message.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value to return from the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The WPARAM parameter of the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function should be called when the site window owner receives  a WM_PALETTECHANGED message.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::OnSiteWindowQueryNewPalette Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT OnSiteWindowQueryNewPalette(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Informs the site that the site window has received a WM_QUERYNEWPALETTE  message.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value to return from the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function should be called when the site window owner receives  a WM_QUERYNEWPALETTE message.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::OnSiteWindowResized Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT OnSiteWindowResized(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Informs the site that the site window has received a WM_SIZE message.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value to return from the message.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function should be called when the site window owner receives  a WM_SIZE message.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::OnSiteWindowRewind Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void OnSiteWindowRewind(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Tells the site window to tell the loaded control to rewind its  animation (if applicable).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::OnSiteWindowTick Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void OnSiteWindowTick(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Tells the site window to tell the loaded control to advance one step in  its animation (if applicable).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::OnTranslateAccelerator Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OnTranslateAccelerator(}{\b LPMSG} {\i lpMsg}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Informs the site that the site's container has requested translation  of an accelerator.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Return values are the same as for  IOleInPlaceActiveObject::TranslateAccelerator:  S_OK if the  accelerator was processed, S_FALSE if not.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpMsg}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to message structure that needs translation.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::SetAdvise Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetAdvise(}{\b DWORD} {\i dwAspects}{\b , DWORD} {\i dwAdvf} {\b , IAdviseSink *} {\i pAdvSink} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Identical to {\b IViewObject::SetAdvise} .  {\b IAdviseSink::OnViewChange} is called when the palette of the embedded control changes.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwAspects}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::SetAdvise} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwAdvf}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::SetAdvise} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pAdvSink}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b IViewObject::SetAdvise} .\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::SetDefaultPalette Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetDefaultPalette(}{\b HPALETTE} {\i hpal}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Provides the site window with a default palette, to be used as the  palette of the off-screen compositing bitmap if the  SSWP_NOCUSTOMPALETTE is specified.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hpal}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The palette to use as the default palette.  {\b SiteLW} takes over ownership of this palette and will  be responsible for calling {\b DeleteObject} on it to free it.  {\i hpal} can be NULL to specify no default palette.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::SetDesignMode Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetDesignMode(}{\b BOOL} {\i f}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Put the {\b SiteLW} object into either design mode or run mode.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i f}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If TRUE, the {\b SiteLW} object is put into design mode.  If FALSE, the {\b SiteLW} object is put into run mode.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::SetServiceProvider Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetServiceProvider(}{\b IServiceProvider *} {\i psp}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Provides the site window with a pointer to an implementation of  {\b IServiceProvider} that the site should forward calls to  {\b IServiceProvider::QueryService}  to.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i psp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 When the embedded control calls  {\b IServiceProvider} on the site, the site forwards the calls  to {\i psp}.  If {\i psp} is NULL then calls to {\b IServiceProvider}  on the site return E_FAIL.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The caller should call this function with {\i psp}==NULL before  freeing the site object, to release the reference count to the site.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::SetSiteWindow Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetSiteWindow(}{\b HWND} {\i hwnd}{\b , DWORD} {\i dwFlags} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Sets the site HWND of the {\b SiteLW} object.  This is an alternative  to providing the HWND to {\b AllocSiteLW}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hwnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Window into which the site object will display the  loaded control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to zero.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::SetSiteWindowParameters Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetSiteWindowParameters(}{\b DWORD} {\i dwFlags}{\b , IMKBitmap *} {\i pbmBkgnd} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Sets parameters of the {\b SiteLW} site window.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 SSWP_OFFSCREEN\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The loaded control is drawn into an  off-screen bitmap (after filling the bitmap with the  background brush) which is then blitted to the screen.  This reduces flicker at the cost of speed and temporary  memory.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 SSWP_HATCHEDBKGND\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The background is drawn with a hatched  brush.  If this flag is not specified, the background is drawn  with the user's window color (COLOR_WINDOW).\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 SSWP_STRETCHTOWINDOW\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The loaded control is drawn large  enough to fill the entire site window client area; requests  by the control to set its bounding rectangle are denied.  If  this flag is not specified, then the control is drawn at its  natural size (determined by calling {\b IViewObject2::GetExtent} on the control) and {\b IOleInPlaceSite::OnPosRectChange} requests are honored.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 SSWP_CONTEXTNOFILEIO\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The context menu displayed when the  user right-clicks does not include file I/O menu items  ("Open...", "Save").\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 SSWP_NOCUSTOMPALETTE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 SiteLW will not query the loaded  control for a custom palette.  Instead, SiteLW will simply  use the container's ambient palette, or the halftone palette  if no ambient palette exists.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 SSWP_STATICPALETTE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Once the ambient palette has been  specified, it will never change for the lifetime of the  loaded object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbmBkgnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Background bitmap to display in the site  window (behind the loaded control, if any).  If {\i pbmBkgnd} is NULL,  then the background brush (see SSWP_HATCHEDBKGND) is used instead.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::ShowContextMenu Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT ShowContextMenu(}{\b POINT} {\i pt}{\b , BOOL} {\i fIncludeEmbeddedControl} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Displays the context menu that contains menu items from both  the {\b SiteLW} object and, optionally, the embedded control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pt}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to display the context menu (in client  coordinates).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fIncludeEmbeddedControl}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If TRUE, add menu items from  the embedded control to the context menu.  If FALSE, only  use menu items for the {\b SiteLW} object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISiteLW::ShowProperties Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT ShowProperties(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Show the property sheet for the currently loaded control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISprite Interface\par \pard\plain \sa160\sl240 \fs21\lang1033 Provides low-level efficient access to the properties of a {\b Sprite}  control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Retrieves control properties.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets control properties.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This interface is defined in "isprite.h".\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISprite::GetInfo Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetInfo(}{\b {\b SpriteBitmapInfo}*} {\i pBitmapInfo}{\b , UINT} {\i cbBitmapInfo} {\b , {\b SpriteTranslucencyInfo}*} {\i pTranslucencyInfo} {\b , UINT} {\i cbTranslucencyInfo} {\b , {\b SpriteRotationInfo}*} {\i pRotationInfo} {\b , UINT} {\i cbRotationInfo} {\b , {\b SpriteQuadrangleInfo}*} {\i pQuadrangleInfo} {\b , UINT} {\i cbQuadrangleInfo} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Retrieves control properties.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell This object supports an earlier version of the desired structure.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pBitmapInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer.  Information about the Sprite's  bitmap will be stored in this buffer.  If NULL, no bitmap information  will be retrieved.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbBitmapInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pBitmapInfo}  (used for version checking).  Ignored if {\i pBitmapInfo} is NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pTranslucencyInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer.  Information about the Sprite's  translucency will be stored in this buffer.  If NULL, no translucency  information will be retrieved.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbTranslucencyInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pTranslucencyInfo}  (used for version checking).  Ignored if {\i pTranslucencyInfo} is NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pRotationInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer.  Information about the Sprite's  rotation will be stored in this buffer.  If NULL, no rotation  information will be retrieved.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbRotationInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pRotationInfo}  (used for version checking).  Ignored if {\i pRotationInfo} is NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pQuadrangleInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer into which information about the  Sprite's BLT-ing quadrangle will be stored.  If NULL, no information  about the Sprite's BLT-ing quadrangle will be retrieved.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbQuadrangleInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pQuadrangleInfo}  (used for version checking).  Ignored if {\i pQuadrangleInfo} is NULL.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ISprite::SetInfo Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetInfo(}{\b {\b SpriteBitmapInfo}*} {\i pBitmapInfo}{\b , UINT} {\i cbBitmapInfo} {\b , IMKBitmap*} {\i pMKBitmap} {\b , {\b SpriteTranslucencyInfo}*} {\i pTranslucencyInfo} {\b , UINT} {\i cbTranslucencyInfo} {\b , {\b SpriteRotationInfo}*} {\i pRotationInfo} {\b , UINT} {\i cbRotationInfo} {\b , {\b SpriteQuadrangleInfo}*} {\i pQuadrangleInfo} {\b , UINT} {\i cbQuadrangleInfo} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Sets control properties.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell This object supports an earlier version of the provided structure.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pBitmapInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer containing information about the  Sprite's bitmap that is to be stored.  If NULL, the Sprite's bitmap  information won't be altered.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbBitmapInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pBitmapInfo}  (used for version checking).  Ignored if {\i pBitmapInfo} is NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMKBitmap}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If non-NULL, the Sprite will AddRef and use this bitmap, assuming it is the  bitmap referred to in {\i pBitmapInfo}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pTranslucencyInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer containing information about the Sprite's  translucency.  If NULL, the Sprite's translucency characteristics won't be  altered.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbTranslucencyInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pTranslucencyInfo}  (used for version checking).  Ignored if {\i pTranslucencyInfo} is NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pRotationInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer containing information about the Sprite's  rotation.  If NULL, the Sprite's rotation characteristics won't be altered.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbRotationInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pRotationInfo}  (used for version checking).  Ignored if {\i pRotationInfo} is NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pQuadrangleInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a caller-provided buffer containing information about the Sprite's  BLT-ing quadrangle.  If NULL, Sprite's BLT-ing quadrangle won't be altered.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbQuadrangleInfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size (in bytes) of the structure pointed to by {\i pQuadrangleInfo}  (used for version checking).  Ignored if {\i pQuadrangleInfo} is NULL.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IVariantIO Interface\par \pard\plain \sa160\sl240 \fs21\lang1033 Allows property name/value pairs to be loaded or saved.  {\b IVariantIO}  is an alternative to {\b IPropertyBag} which allows the caller to  implement property-based persistence with less code.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT PersistList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Loads or saves a list of property name/value  pairs, specified as a va_list array.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT Persist}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Loads or saves a list of property name/value  pairs, specified as a variable-length list of arguments.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT IsLoading}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Return S_OK if the {\b IVariantIO} object is  being used to load properties, S_FALSE if it is being used to save  properties.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IVariantIO::IsLoading Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT IsLoading(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Return S_OK if the {\b IVariantIO} object is being used to load  properties, S_FALSE if it is being used to save\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The {\b IVariantIO} object is in loading mode, so  {\b Persist} and {\b PersistList} will  copy data from properties to variables.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell The {\b IVariantIO} object is in saving mode, so that  {\b Persist} and {\b PersistList} will copy  data from variables to properties.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IVariantIO::Persist Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT Persist(}{\b DWORD} {\i dwFlags}{\b , (varying)} {\i (arguments)} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Loads or saves a list of property name/value pairs, specified as a  variable-length list of arguments.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.  At least one of the variables listed in  {\i (arguments)} was written to, so the control may want to update  itself accordingly.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell None of the variables listed in {\i (arguments)} were  written to (either because the {\b IVariantIO} object is in  saving mode or because none of the properties named in  {\i (arguments)} exist in the {\b IVariantIO} object.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_BADVARTYPE\cell One of the VARTYPE values in {\i (arguments)} is invalid.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_TYPEMISMATCH\cell One of the variables in {\i (arguments)} could not be coerced to the  type of the corresponding property in the {\b IVariantIO} object, or  vice versa.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Optional flags.  See {\b IManageVariantIO::SetMode}  for  possible values.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i (arguments)}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The names, types, and pointers to variables  containing the properties to persist.  These must consist of a series  of argument triples (sets of 3 arguments) followed by a NULL.  In each triplet, the first argument is an LPSTR which contains the  name of the property; the second argument is a VARTYPE value that  indicates the type of the property; the third argument is a pointer  to a variable (typically a member variable of the control's C++ class)  that holds the value of the property.  This variable will be read  from or written to depending on the mode of the {\b VariantIO} object  (see {\b IsLoading}) -- therefore the variables should  contain valid values before {\b Persist} is called.  The following  VARTYPE values are supported:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_INT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is an int *.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_I2\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a short *.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_I4\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a long *.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_BOOL\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a BOOL * ({\i not} VARIANT_BOOL *).  Note that this behavior differs  slightly from the usual definition of VT_BOOL.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_BSTR\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is a BSTR *.  If  {\b Persist} changes the value of this BSTR, the previous  BSTR is automatically freed using {\b SysFreeString}.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_LPSTR\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is an LPSTR that points  to a char array capable of holding at least _MAX_PATH  characters including the terminating NULL.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_UNKNOWN\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is an LPUNKNOWN *.  If  {\b Persist} changes the value of this LPUNKNOWN, the previous  LPUNKNOWN is automatically freed using {\b Release}, and the  new value is automatically {\b AddRef}d.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_DISPATCH\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following argument is an LPDISPATCH *.  If  {\b Persist} changes the value of this LPDISPATCH, the previous  LPDISPATCH is automatically freed using {\b Release}, and the  new value is automatically {\b AddRef}d.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VT_VARIANT\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The following arguement is a VARIANT *.  This allows arbitrary parameters to be passed using this  function.  Note that this behavior differs from the usual  definition of VT_VARIANT.  If {\b Persist} changes the value  of this VARIANT, the previous VARIANT value is automatically  cleared using {\b VariantClear}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example persists two properties (which in BASIC would  be a Long and a String, respectively) named "Foo" and "Bar",  respectively.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 pvio->Persist(0, "Foo", VT_INT, &m_iFoo, "Bar", VT_LPSTR, &m_achBar,\par  \tab NULL);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IVariantIO::PersistList Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT PersistList(}{\b DWORD} {\i dwFlags}{\b , va_list} {\i args} {\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Loads or saves a list of property name/value pairs, specified as a  va_list array.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.  At least one of the variables listed in  {\i args} was written to, so the control may want to update  itself accordingly.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell None of the variables listed in {\i args} were  written to (either because the {\b IVariantIO} object is in  saving mode or because none of the properties named in  {\i args} exist in the {\b IVariantIO} object).\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_BADVARTYPE\cell One of the VARTYPE values in {\i args} is invalid.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_TYPEMISMATCH\cell One of the variables in {\i args} could not be  coerced to the type of the corresponding property in the {\b IVariantIO}  object, or vice versa.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Optional flags.  See {\b IManageVariantIO::SetMode}  for  possible values.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i args}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The arguments to pass.  See {\b Persist}  for information about the organization of these arguments.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Line Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 A lightweight windowless ActiveX control which displays as a  single line segment of adjustable width and 24-bpp color.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/LINE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Properties\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long BorderColor}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The color of the line, expressed as a standard  24-bit RGB value.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long BorderWidth}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The width of the line, in pixels.  This value  is between 1 and 4 inclusive; if {\i BorderWidth} is set to a number  outside this range it is changed to 1 or 4, whichever is closer.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long X1}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The x-coordinate of the head end of the line.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long Y1}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The y-coordinate of the head end of the line.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long X2}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The x-coordinate of the tail end of the line.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long Y2}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The y-coordinate of the tail end of the line.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i For all users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\i X1}, {\i Y1}, {\i X2}, and {\i Y2} are measured in pixels relative  to the origin of the container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control cannot be directly embedded in IE3, since IE3 does  not support windowless controls.  Instead, embed the {\b HostLW}  control in IE3, and then embed this control into the {\b HostLW}  control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control is packaged in both design-time and run-time versions.  The design time version allows the control to be dragged at  either end (to move an endpoint) or in the middle (to move the  entire line).  The line draws its own grab handles and provides  cursor-change feedback.  A property page is provided for editing  all properties.  A "Straighten" verb (typically accessed via the  right mouse) is provided to make the line horizontal or vertical.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 The run-time version drops editing features (most notably the  property page) in order to reduce code size.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab The class ID of the design-time version of this control is  "BA6B5D20-8614-11CF-B8ED-0020AF344E0A".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab The class ID of the run-time version of this control is  "TBD".\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\i For C++ users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The class ID of this control is defined as CLSID_CLineOC in  "LineOC.h".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The ProgID of this control is "Line.Line.1".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control implements the following interfaces:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IUnknown}: A delegating {\b IUnknown} that supports  aggregation\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b ILineOC}: Provides low-level efficient access to the  properties of a {\b Line} control.  See that interface  for more information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IViewObjectEx} subset (based on {\b IViewObject} and  {\b IViewObject2}): Used to display the object.  DVASPECT_CONTENT is the only supported aspect.  {\b Freeze},  {\b Unfreeze}, {\b GetRect}, {\b GetViewStatus}, {\b QueryHitRect},  and {\b GetNaturalExtent} are not implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleObject} subset: Used to allow the container to provide  the client site pointer, invoke control verbs, and get control  state.  Only {\b SetClientSite}, {\b DoVerb}, {\b EnumVerbs}  (design time version only), and {\b GetMiscStatus} are  implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleInPlaceObjectWindowless} subset (based on {\b IOleWindow}  and {\b IOleInPlaceObject}): Used to change control state and  pass window messages to the control.  Only {\b UIDeactivate},  {\b SetObjectRects}, and {\b OnWindowmessage}, are implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleControl} subset: Used to inform the control of  ambient property changes.  Only {\b OnAmbientPropertyChange}  is implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b ISpecifyPropertyPages}: Used to retrieve information about  the control's property page.  {\b GetPages} is implemented  only in the design time version.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IPersistStreamInit} (based on {\b IPersistStream}):  Used to persist the control's data to/from an {\b IStream}.  The file format is compatible with past and future versions  of this control (i.e. adding and removing properties won't  break the control).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IPersistPropertyBag}: Used to persist the control's data  to/from an {\b IPropertyBag}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IDispatch}:  Provides access to the control's properties.  Does not provide type information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control sources (calls) the following interfaces (if  available) on the container-provided site object:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleClientSite}: The client site pointer provided by  the container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleInPlaceSiteWindowless}: Used to request that the  control's position be changed, acquire mouse capture,  invalidate and update the display of the control, and  (at design time only) draw XOR'd image of the control during  dragging.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IDispatch}: Used to access ambient properties (currently  DISPID_AMBIENT_USERMODE).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IAdviseSink} (provided via {\b IViewObject::SetAdvise} Used to advise the container that the palette of the  control changed.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 LoadFromCSV\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b LoadFromCSV(}{\b IOleClientSite *} {\i psite}{\b , IStream *} {\i pstream}{\b , LPUNKNOWN} {\i punkOuter}{\b , DWORD} {\i dwClsContext}{\b , LPUNKNOWN *} {\i ppunk}{\b , CLSID *} {\i pclsid}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Read a CSV (Excel-readable comma-delimited) format stream and  create an object that contains the data from that stream.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/LFCSV.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i psite}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The site of the new object.  If {\i psite}  is not NULL, then {\b IOleObject::SetClientSite} ({\i psite}) is called  on the newly-created object before {\b IPersistPropertyBag::Load} is called.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to read from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i punkOuter}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The controlling unknown to use for the  new object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwClsContext}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the context in which the executable  is to be run. The values are taken from the enumeration CLSCTX.  A typical value is CLSCTX_INPROC_SERVER.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppunk}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the pointer to the loaded object.  NULL is stored in *{\i ppunk} on error.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the class ID of the loaded object.  If {\i pclsid} is NULL then this information is not returned.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 LoadFromHTML\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b LoadFromHTML(}{\b IOleClientSite *} {\i psite}{\b , IStream *} {\i pstream}{\b , LPUNKNOWN} {\i punkOuter}{\b , DWORD} {\i dwClsContext}{\b , LPUNKNOWN *} {\i ppunk}{\b , CLSID *} {\i pclsid}{\b , LPSTR *} {\i ppchPage}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Reads an HTML format stream and creates an object specified by an  <OBJECT> tag in that stream.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/LFHTML.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i psite}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The site of the new object.  If {\i psite}  is not NULL, then {\b IOleObject::SetClientSite} ({\i psite}) is called  on the newly-created object before {\b IPersistPropertyBag::Load} is called.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to read from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i punkOuter}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The controlling unknown to use for the  new object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwClsContext}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the context in which the executable  is to be run. The values are taken from the enumeration CLSCTX.  A typical value is CLSCTX_INPROC_SERVER.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppunk}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the pointer to the loaded object.  NULL is stored in *{\i ppunk} on error.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the class ID of the loaded object.  If {\i pclsid} is NULL then this information is not returned.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppchPage}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store a pointer to a null-terminated  memory buffer (allocated by {\b LoadFromHTML}) into which the HTML  file is read.  The caller is responsible for freeing this buffer  using {\b CoTaskMemFree}.  This buffer may be used in subsequent calls  to {\b SaveToHTML} to serve as a "template" -- {\b SaveToHTML} will  write out the same HTML file that was read in (except for the  <OBJECT> tag itself).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If {\i pstream} contains multiple <OBJECT> tags, the following  rules are used to determine which <OBJECT> tag is replaced  by {\i pppb}:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab If {\i pstream} contains a <object> tag with the word  "object" spelled in lowercase, the first such tag is used.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Otherwise, the first <OBJECT> tag is used; in this case  the case of the word "object" does not matter.\par  \pard\plain \sa160\sl240 \fs21\lang1033 So, if you want to allow a specific object in an HTML file to be  edited, spell its <object> tag in lowercase and spell other  <OBJECT> tags in uppercase (or mixed case).\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 LoadFromStream\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b LoadFromStream(}{\b IOleClientSite *} {\i psite}{\b , IStream *} {\i pstream}{\b , LPUNKNOWN} {\i punkOuter}{\b , DWORD} {\i dwClsContext}{\b , LPUNKNOWN *} {\i ppunk}{\b , CLSID *} {\i pclsid}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Read a stream that contains the class ID and data of an object  previously saved using {\b IPersistStream::Save} , and create an object  that contains the data from the stream.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/LFS.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i psite}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The site of the new object.  If {\i psite}  is not NULL, then {\b IOleObject::SetClientSite} ({\i psite}) is called  on the newly-created object before {\b IPersistPropertyBag::Load} is called.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to read from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i punkOuter}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The controlling unknown to use for the  new object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwClsContext}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the context in which the executable  is to be run. The values are taken from the enumeration CLSCTX.  A typical value is CLSCTX_INPROC_SERVER.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppunk}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the pointer to the loaded object.  NULL is stored in *{\i ppunk} on error.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the class ID of the loaded object.  If {\i pclsid} is NULL then this information is not returned.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 LoadPropertyBagFromCSV\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b LoadPropertyBagFromCSV(}{\b IStream *} {\i pstream}{\b , int} {\i cch}{\b , IPropertyBag *} {\i ppb}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Load properties that are stored in an {\b IStream} in CSV  (Excel-readable comma-delimited) format into a given  {\b IPropertyBag} object.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/LPBFCSV.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to read from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cch}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of bytes to read in {\i pstream}.  If {\i cch}  is -1, then {\i pstream} is read to its end.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The property bag to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Note that this function does not (cannot, in fact) empty {\i ppb}  prior to loading property name/value pairs from {\i pstream}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell I/O error.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 LoadPropertyBagFromHTML\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b LoadPropertyBagFromHTML(}{\b IStream *} {\i pstream}{\b , int} {\i cch}{\b , IPropertyBag *} {\i ppb}{\b , LPSTR *} {\i ppchPage}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Load properties that are stored in a <OBJECT> tag in an  {\b IStream} in HTML format into a given {\b IPropertyBag} object.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/LPBFHTML.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to read from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cch}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of bytes to read in {\i pstream}.  If {\i cch}  is -1, then {\i pstream} is read to its end.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The property bag to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppchPage}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store a pointer to a null-terminated  memory buffer (allocated by this function) into which the HTML  file is read.  The caller is responsible for freeing this buffer  using {\b CoTaskMemFree}.  See {\b LoadFromHTML} for more information  about {\i ppchPage}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If {\i pstream} contains multiple <OBJECT> tags, the same  rules specified in {\b LoadFromHTML} are used to determine which  <OBJECT> tag is replaced by {\i pppb}.\par  Note that this function does not (cannot, in fact) empty {\i ppb}  prior to loading property name/value pairs from {\i pstream}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell I/O error.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 LoadPropertyBagFromStream\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b LoadPropertyBagFromStream(}{\b IStream *} {\i pstream}{\b , IPropertyBag *} {\i ppb}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Load properties that are stored in an {\b IStream} (in the simple  tagged binary format written by {\b WriteVariantProperty}) into an  {\b IPropertyBag} object.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/LPBFS.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to read from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The property bag to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Note that this function does not (cannot, in fact) empty {\i ppb}  prior to loading property name/value pairs from {\i pstream}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell I/O error.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 MapMRUListToMenu\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b MapMRUListToMenu(}{\b HMRULIST} {\i hMRUList}{\b , HMENU} {\i hMenu}{\b , UINT} {\i cBaseMenuItems}{\b , UINT} {\i iItemAfterMRUList}{\b , UINT} {\i iFirstMRUItem}{\b , const TCHAR*} {\i pszEmptyListMenuItem}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Maps an MRU list into an application's menu.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMenu}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The handle of the menu to modify.  Can't be NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cBaseMenuItems}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The size (i.e., number of items) in the menu excluding the MRU  list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iItemAfterMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The {\b relative} , 0-based index of the item in the menu immediately  following the MRU list.  Typically the index of a separator.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iFirstMRUItem}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The {\b absolute}  resource ID of the first MRU menu item.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pszEmptyListMenuItem}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The name of the grayed menu item to insert if the MRU list is  empty.  If NULL, "File List" will be used.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The algorithm is...\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The menu item at relative offset {\i iItemAfterMRUList} - 1  is repeatedly deleted until the number of items in the  menu is less than or equal to {\i cBaseMenuItems}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab If the receiver MRU list is empty, then the  {\i pszEmptyListMenuItem} is inserted into the menu  as a grayed item with ID {\i iFirstMRUItem}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Otherwise, all the entries from the MRU list are inserted  into the menu before {\i iItemAfterMRUList}.  The entries  are preceeded by a 1-based index.  The ID of the first  MRU item is set to {\i iFirstMRUItem}, the second MRU  item is {\i iFirstMRUItem}+1, etc.  ---------------------------------------------------------------------------\par  \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 MsgWndCreate\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HWND} {\b MsgWndCreate(void}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Creates the hidden message-passing window (if it doesn't exist).  This window is used by {\b MsgWndSendToCallback},  {\b MsgWndPostToCallback}, and {\b MsgWndTrackPopupMenuEx}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/MSGWND.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the handle of the message-passing window.  Returns NULL on  error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 You should call {\b MsgWndCreate} in the constructor of your  control to ensure that the window gets created on the same thread  as the thread which created your control.\par  You should call {\b MsgWndDestroy} in the destructor of your control.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 MsgWndDestroy\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT} {\b MsgWndDestroy(}{\b HWND} {\i hwnd}{\b , DWORD} {\i dwFlags}{\b , STDAPI_(void)} {\i MsgWndDestroy}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Destroys a hidden message-passing window that was previously created  by calling {\b MsgWndCreate}.  Before the window is destroyed, all  pending messages are dispatched in it.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/MSGWND.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hwnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The hidden message-passing window which was created  by calling {\b MsgWndCreate} (usually in the constructor of the  control, to ensure that the window is created in the same thread  that created the control).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to zero.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i MsgWndDestroy}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 {\b MsgWndDestroy} is typically called in the destructor of a control.\par  {\b MsgWndDestroy} should only be called in the thread that called  {\b MsgWndCreate}.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 MsgWndPostToCallback\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT} {\b MsgWndPostToCallback(}{\b HWND} {\i hwnd}{\b , MsgWndCallback *} {\i pproc}{\b , UINT} {\i uiMsg}{\b , LPARAM} {\i lParam}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Posts a message to the control's hidden message-passing window  (typically created by calling {\b MsgWndCreate} in the control's  constructor).  When the window receives the message, it calls a given  callback function.  This can be used to safely pass information  between threads.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/MSGWND.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value returned by {\b PostMessage} (-1 on error).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hwnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The hidden message-passing window which was created  by calling {\b MsgWndCreate} (usually in the constructor of the  control, to ensure that the window is created in the same thread  that created the control).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pproc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The callback function that is to receive  the message.  This function will be called on whatever thread  calls {\b DispatchMessage}.  The {\i wParam} parameter of this function  should be ignored by the callback function.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i uiMsg}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A message number to pass to {\i pproc}.  This is a  window message number, so it must be in the range WM_USER through  0x7FFF.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A parameter to pass to {\i pproc}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Message {\i uiMsg} is posted (via {\b PostMessage}) to the hidden  message-passing window {\i hwnd}.  When the window receives the  message, it calls {\i pproc}({\i uiMsg}, {\i lParam}).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example declares a callback function and calls it  via {\b MsgWndPostToCallback}.  Note that {\i wParam} is for internal  use by {\b MsgWndPostToCallback} and should be ignored by the  callback function.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 void CALLBACK MyMsgWndCallback(UINT uiMsg, WPARAM wParam, LPARAM lParam)\par  \{\par  \tab TRACE("got the callback: uiMsg=%u, lParam=%d\\n", uiMsg, lParam);\par  \}\par  \par  ...\par  MsgWndPostToCallback(MyMsgWndCallback, WM_USER, 42);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 MsgWndSendToCallback\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT} {\b MsgWndSendToCallback(}{\b HWND} {\i hwnd}{\b , MsgWndCallback *} {\i pproc}{\b , UINT} {\i uiMsg}{\b , LPARAM} {\i lParam}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Sends a message to the control's hidden message-passing window  (typically created by calling {\b MsgWndCreate} in the control's  constructor).  When the window receives the message, it calls a given  callback function.  This can be used to safely pass information  between threads.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/MSGWND.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value returned by {\b SendMessage} (-1 on error).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hwnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The hidden message-passing window which was created  by calling {\b MsgWndCreate} (usually in the constructor of the  control, to ensure that the window is created in the same thread  that created the control).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pproc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The callback function that is to receive  the message.  This function will be called on whatever thread  calls {\b DispatchMessage}.  The {\i wParam} parameter of this function  should be ignored by the callback function.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i uiMsg}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A message number to pass to {\i pproc}.  This is a  window message number, so it must be in the range WM_USER through  0x7FFF.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A parameter to pass to {\i pproc}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Message {\i uiMsg} is sended (via {\b SendMessage}) to the hidden  message-passing window {\i hwnd}.  When the window receives the  message, it calls {\i pproc}({\i uiMsg}, {\i lParam}).\par  Note that the calling thread blocks until the message is processed  by the receiving thread.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example declares a callback function and calls it  via {\b MsgWndSendToCallback}.  Note that {\i wParam} is for internal  use by {\b MsgWndPostToCallback} and should be ignored by the  callback function.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 void CALLBACK MyMsgWndCallback(UINT uiMsg, WPARAM wParam, LPARAM lParam)\par  \{\par  \tab TRACE("got the callback: uiMsg=%u, lParam=%d\\n", uiMsg, lParam);\par  \}\par  \par  ...\par  MsgWndSendToCallback(MyMsgWndCallback, WM_USER, 42);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 MsgWndSetTimer\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT} {\b MsgWndSetTimer(}{\b HWND} {\i hwnd}{\b , MsgWndCallback *} {\i pproc}{\b , UINT} {\i nIDEvent}{\b , UINT} {\i uElapse}{\b , LPARAM} {\i lParam}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Calls {\b SetTimer} to cause WM_TIMER messages to be sent to the  the control's hidden message-passing window (typically created  by calling {\b MsgWndCreate} in the control's constructor).  When the window receives the message, it calls a given  callback function.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/MSGWND.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value returned by {\b SetTimer} (0 on error).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hwnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The hidden message-passing window which was created  by calling {\b MsgWndCreate} (usually in the constructor of the  control, to ensure that the window is created in the same thread  that created the control).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pproc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The callback function that is called  when the timer fires.  This function will be called on whatever thread  calls {\b DispatchMessage}.  When {\i pproc} receives WM_TIMER, {\i wParam}  is {\i nIDEvent} and {\i lParam} is the value of {\i lParam} passed  to {\b MsgWndSetTimer}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i nIDEvent}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See WM_TIMER.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i uElapse}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See WM_TIMER.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A parameter to pass to {\i pproc}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Note that only one callback function {\i pproc} can be used per  message-passing HWND.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 MsgWndTrackPopupMenuEx\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LRESULT} {\b MsgWndTrackPopupMenuEx(}{\b HWND} {\i hwnd}{\b , HMENU} {\i hmenu}{\b , UINT} {\i fuFlags}{\b , int} {\i x}{\b , int} {\i y}{\b , LPTPMPARAMS} {\i lptpm}{\b , MsgWndCallback *} {\i pproc}{\b , LPARAM} {\i lParam}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Calls {\b TrackPopupMenuEx} to display a popup menu, and directs  WM_COMMAND messages to a given callback function.  Can be used by  a windowless control to display a popup context menu.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/MSGWND.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the value returned by {\b TrackPopupMenuEx} (FALSE on error).  Returns FALSE if the message window is currently being used for  another popup menu.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hwnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The hidden message-passing window which was created  by calling {\b MsgWndCreate} (usually in the constructor of the  control, to ensure that the window is created in the same thread  that created the control).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hmenu}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b TrackPopupMenuEx}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fuFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b TrackPopupMenuEx}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i x}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b TrackPopupMenuEx}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i y}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b TrackPopupMenuEx}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lptpm}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See {\b TrackPopupMenuEx}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pproc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The callback function that is to receive  WM_COMMAND messages.  The {\i wParam} parameter of this function  is the {\i wParam} of the WM_COMMAND message.  The {\i lParam} parameter  of this function is the {\i lParam} of {\b MsgWndTrackPopupMenuEx}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lParam}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A parameter to pass to {\i pproc}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function calls {\b TrackPopupMenuEx}.  Any WM_COMMAND messages  from {\b TrackPopupMenuEx} are passed to {\i pproc}.\par  The hidden message-passing window is used to receive WM_COMMAND  messages; this window is created if it doesn't yet exist.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 A heavyweight ActiveX control which can be used in a Visual Basic  application to implement a simple ActiveX Control editor.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Properties\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b String {\b OCEdit::AppTitle} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets or gets the title of the application, as defined by the  application, for use in message boxes etc.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b String {\b OCEdit::Version} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns the version of the OCEdit control, as a string.  Read-only.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Boolean {\b OCEdit::DesignMode} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets the OCEdit control to be in either design or run mode, or  gets the current mode.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Boolean {\b OCEdit::IsControlLoaded} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns True if there is a control loaded into the {\b OCEdit} control,  False otherwise.  Read-only.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Object {\b OCEdit::Control} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns the loaded control, if any.  (More precisely, this property  returns an object (IDispatch) reference to the currently-loaded  control.)  This can be used to access the properties and methods  of the control.  Read-only.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b String {\b OCEdit::ControlType} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns the name of the class of the loaded control, if any.  Read-only.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Boolean {\b OCEdit::IsControlDirty} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns True if the embedded control has been changed since it was  last saved, or False otherwise.  Returns False if no control is  loaded.  Read-only.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b String {\b OCEdit::ControlFileName} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns the name of the data file (.htm, .csv, .stm) associated with  the current control, if any.  Read-only.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b String {\b OCEdit::ControlFileTitle} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns the title of the data file (.htm, .csv, .stm) associated with  the current control, if any.  Read-only.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Boolean {\b OCEdit::CanShowControlProperties} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns True if {\b OCEdit::ShowControlProperties}  can be called at  this time to display the control's property page(s), False otherwise.  Read-only.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long {\b OCEdit::NewControl} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Closes the currently-loaded control, if any, and creates a new  instance of a control which is embedded in the OCEdit control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long {\b OCEdit::OpenControl} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Closes the currently-loaded control, if any, and loads a new control  from a given file (.htm, .csv, or .stm).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long {\b OCEdit::CloseControl} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Closes the currently-loaded control, if any.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long {\b OCEdit::SaveControl} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Saves the currently-loaded control into a given file  (.htm, .csv, or .stm).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long {\b OCEdit::PromptToSaveControl} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Prompts the user to save the currently-loaded control (if the control  was modified since it was last saved).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long {\b OCEdit::ShowControlProperties} }\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Displays a property frame containing the property pages of the  loaded control.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 OCEdit is designed for use in VB4 (not IE3).  OCEdit can be used  to implement, in a Visual Basic application, a simple OLE Control  (i.e. ActiveX Control) editor similar to OCTest.\par  The following events are fired by OCEdit:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b ControlFileNameChanged} : Fired when the {\b OCEdit::ControlFileName} and/or {\b OCEdit::ControlFileTitle}  properties change.  No parameters.  Can be used to update application UI (e.g. caption).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b ControlTypeChanged} : Fired when the {\b OCEdit::ControlType} property changes.  No parameters.  Can be used to update application  UI (e.g. caption).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b ControlEvent} : Fired when the loaded control fires an event.  ControlEvent is currently under construction; at the moment the  only parameter is a Long which indicates the ID (1, 2, ...) of the  event being fired.  Coming soon: event name and parameters.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::AppTitle Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b String}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Sets or gets the title of the application, as defined by the  application, for use in message boxes etc.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The value of the AppTitle property is used whenever {\b OCEdit} needs  to refer to the name of the application.  For example, when  {\b PromptToSaveControl} is called, the AppTitle property is  used in the title of the message box.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::CanShowControlProperties Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Boolean}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Returns True if {\b ShowControlProperties} can be called at  this time to display the control's property page(s), False otherwise.  Read-only.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::CloseControl Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b Long CloseControl(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Closes the currently-loaded control, if any.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a non-negative HRESULT code on success, or a negative HRESULT  error code on error.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::Control Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Object}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Returns the loaded control, if any.  (More precisely, this property  returns an object (IDispatch) reference to the currently-loaded  control.)  This can be used to access the properties and methods  of the control.  Read-only.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example sets the {\i BorderWidth} property of the control  loaded into {\b OCEdit} control {\i oced} to 1, assuming the loaded  control supports the {\i BorderWidth} property (e.g. if the loaded  control is a {\b Line}).\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 oced.Control.BorderWidth = 1\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::ControlFileName Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b String}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Returns the name of the data file (.htm, .csv, .stm) associated with  the current control, if any.  Read-only.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::ControlFileTitle Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b String}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Returns the title of the data file (.htm, .csv, .stm) associated with  the current control, if any.  Read-only.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::ControlType Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b String}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Returns the name of the class of the loaded control, if any.  Read-only.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 If {\b oced} is an {\b OCEdit} control that currently contains a  {\b Line} control, then the following will set {\i str} to "Line".\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 Dim str As String\par  str = oced.ControlType\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::DesignMode Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Boolean}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Sets the OCEdit control to be in either design or run mode, or  gets the current mode.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If {\b DesignMode} is True, then the OCEdit control is in design  mode, which means that editing is enabled.  If {\b DesignMode}  is False, then OCEdit is in Run mode, which means that editing  features are disabled.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::Flags Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Long}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Sets or gets the current OCEdit flags.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The flag values are the same as those described in  {\b ISiteLW::SetSiteWindowParameters} .\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::IsControlDirty Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Boolean}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Returns True if the embedded control has been changed since it was  last saved, or False otherwise.  Returns False if no control is  loaded.  Read-only.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::IsControlLoaded Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b Object}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Returns True if there is a control loaded into the {\b OCEdit} control,  False otherwise.  Read-only.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::NewControl Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b Long NewControl(}{\b String} {\i Type}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Closes the currently-loaded control, if any, and creates a new  instance of a control which is embedded in the OCEdit control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns 1 if the user presses the Cancel button (if prompted).  Otherwise returns a nonnegative HRESULT value on success, or a  negative HRESULT on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Type}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The type of control to create.  This is either a  class ID in braces (e.g. "\{4E1F2E00-BD85-11CF-B705-00AA00BF27FD\}")  or a ProgID (e.g. "HostLW.HostLW.1").  Alternatively, {\i Type}  may be "" to prompt the user for a control to load.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 This example loads a {\b HostLW} control into the {\b OCEdit} control  named {\i oced}.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 Dim hr As Long\par  hr = oced.NewControl("HostLW.HostLW.1")\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::OpenControl Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b Long OpenControl(}{\b String} {\i FileName}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Closes the currently-loaded control, if any, and loads a new control  from a given file (.htm, .csv, or .stm).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns 1 if the user presses the Cancel button (if prompted).  Otherwise returns a nonnegative HRESULT value on success, or a  negative HRESULT on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i FileName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The name of the file to load, or "" to prompt  for the name of a file to load.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 This example loads "c:\\foo.htm" into the {\b OCEdit} control named  {\i oced}.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 Dim hr As Long\par  hr = oced.OpenControl("c:\\foo.htm")\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::PromptToSaveControl Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b Long PromptToSaveControl(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Prompts the user to save the currently-loaded control (if the control  was modified since it was last saved).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns 1 if the user presses the Cancel button.  Returns another  nonnegative HRESULT success code if the loaded control didn't need  saving, or if it did need saving but was successfully saved.  Returns  a negative HRESULT on error.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::SaveControl Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b Long SaveControl(}{\b String} {\i FileName}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Saves the currently-loaded control into a given file  (.htm, .csv, or .stm).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns 1 if the user presses the Cancel button (if prompted).  Otherwise returns a nonnegative HRESULT value on success, or a  negative HRESULT on error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i FileName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The name of the file to save to, or "" to prompt  for the name of a file to save to.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 This example saves the control loaded into the {\b OCEdit} named  {\i oced} into "c:\\foo.htm".\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 Dim hr As Long\par  hr = oced.SaveControl("c:\\foo.htm")\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::ShowControlProperties Method\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b Long ShowControlProperties(}{\b )}\par \pard\plain \sa160\sl240 \fs21\lang1033 Displays a property frame containing the property pages of the  loaded control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a non-negative HRESULT code on success, or a negative HRESULT  error code on error.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OCEdit::Version Property\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Data Type\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\b String}\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Returns the version of the OCEdit control, as a string.  Read-only.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCEDIT/OCEDCTL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Example of the value returned by the {\b Version} property:  "1.00.0042", which indicates that the version of the OCEdit control  is build 42 of version 1.0.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OpenMRUList\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b OpenMRUList(}{\b int} {\i cMaxEntries}{\b , HKEY} {\i hKey}{\b , LPCTSTR} {\i pszSubkey}{\b , LPCTSTR} {\i pszListName}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Opens a new or existing registry-based MRU list.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a handle to the open MRU list if successful.  Returns  NULL on failure.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cMaxEntries}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The maximum number of entries in the list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hKey}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The list will be opened at the registry path,  {\i hKey}\\{\i pszSubkey}\\{\i pszListName}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pszSubkey}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] (See {\i hKey}.)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pszListName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] (See {\i hKey}.)\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If the registry key contains more than {\i cMaxEntries}, it will  be truncated to {\i cMaxEntries}.  ---------------------------------------------------------------------------\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PersistChild\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b PersistChild(}{\b IVariantIO *} {\i pvio}{\b , LPCSTR} {\i szCollection}{\b , int} {\i iChild}{\b , LPUNKNOWN} {\i punkOuter}{\b , DWORD} {\i dwClsContext}{\b , LPUNKNOWN *} {\i ppunk}{\b , CLSID *} {\i pclsid}{\b , BOOL *} {\i pfSafeForScripting}{\b , BOOL *} {\i pfSafeForInitializing}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Loads or saves a child of a given container object from/to a given.  {\b IVariantIO} object.  Used to help implement persistence in control  containers.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/PC.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvio}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The {\b IVariantIO} object to read properties from  or write properties to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szCollection}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The name of the collection that the child  object belongs to.  See {\b PersistSiteProperties} for more information  about collections.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iChild}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The index (into the collection named by {\i szCollection})  of the child object whose site properties are being persisted by this  call to {\b PersistSiteProperties}.  Conventionally, indices are 1-based  (i.e. the first child object in the collection is numbered 1, not 0).  See {\b PersistSiteProperties} for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i punkOuter}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The controlling unknown to use for the  new child object, if the child object is loaded (i.e. if {\i pvio}  is in loading mode and if a child object is successfully loaded).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwClsContext}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the context in which the executable  is to be run. The values are taken from the enumeration CLSCTX.  A typical value is CLSCTX_INPROC_SERVER.  This parameter is ignored  unless if {\i pvio} is in loading mode and a child object is  successfully loaded.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppunk}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to an LPUNKNOWN variable that currently  contains (if {\i pvio} is in saving mode) or into which will be stored  (if {\i pvio} is in loading mode) the pointer to the child control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the class ID of the child object,  if {\i pvio} is in loading mode.  If {\i pclsid} is NULL then this  information is not returned.  If {\i pvio} is in saving mode and  {\i pclsid} is not NULL, then on entry *{\i pclsid} is assumed to contain  the class ID of the child object (useful if the child object does not  implement {\b IPersist}); if not specified, the class ID of the child  is obtained by calling {\b IPersist} on the child.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pfSafeForScripting}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If non-NULL, *{\i pfSafeForScripting} is  set to TRUE or FALSE depending on whether the control is safe-for-scripting.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pfSafeForInitializing}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If non-NULL, *{\i pfSafeForInitializing} is  set to TRUE or FALSE depending on whether the control is safe-for-initializing.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b PersistSiteProperties} for an example of how {\b PersistChild}  is used.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell {\i pvio} is in loading mode, and collection {\i szCollection}  does not contain a child numbered {\i iChild}.  (This typically tells  the container that it can stop trying to load children.)\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PersistSiteProperties\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b PersistSiteProperties(}{\b IVariantIO *} {\i pvio}{\b , LPCSTR} {\i szCollection}{\b , int} {\i iChild}{\b , DWORD} {\i dwFlags}{\b , (varying)} {\i (arguments)}{\b , HRESULT __cdecl} {\i PersistSiteProperties}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Loads or saves a list of property name/value pairs associated with  the site of the child of a given object from/to a given {\b IVariantIO}  object.  Used to help implement persistence in control containers.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/PSP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvio}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The {\b IVariantIO} object to read properties from  or write properties to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szCollection}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The name of the collection that the child  object belongs to.  The parent object may contain one or more  collections of children; when children are accessed via {\b IDispatch},  they are conventionally addressed by indexing into the property array  named by this index.  For example, if the parent contains a collection  named "Mailboxes" (that contains a collection of child "Mailbox"  objects), a VB script writer might access the first child in the  collection using code like "parent.Mailboxes(1).NumLetters".  See  Comments for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iChild}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The index (into the collection named by {\i szCollection}  of the child object whose site properties are being persisted by this  call to {\b PersistSiteProperties}.  Conventionally, indices are 1-based  (i.e. the first child object in the collection is numbered 1, not 0).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i (arguments)}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The names, types, and pointers to variables  containing the properties to persist.  These must consist of a series  of argument triples (sets of 3 arguments) followed by a NULL.  See {\b IVariantIO::Persist}  for more information about the format  of {\i (arguments)}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i PersistSiteProperties}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The site of a child object is the object maintained by the container  that's associated with that specific child.  The site may have its  own properties, logically associated with the child's properties  by the user (or script writer), but implemented separatedly.  For  example, the site may maintain a "Visible" property indicating whether  or not the child is visible.\par  Note that {\b PropertyHelper} does not automatically implement  {\b IDispatch} access to collections, but {\b PersistSiteProperties}  will name the site properties according to a similer naming convention:  e.g. if "NumLetters" is a site property of a "Mailbox" object,  {\b PersistSiteProperties} saves the property under the name  "Mailboxes(1).NumLetters".\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example persists two site properties (which in BASIC  would be a Long and a String, respectively) named "Foo" and "Bar",  respectively.  These site properties belong to the first child  of the collection named "Controls".\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 PersistSiteProperties(pvio, "Controls", 1, 0,\par  \tab "Foo", VT_INT, &m_iFoo, "Bar", VT_LPSTR, &m_achBar, NULL);\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how a container control might implement  {\b IPersistVariantIO::DoPersist} , assuming the container maintains  an array {\i m_apunkChild} containing {\i m_cChild} {\b IUnknown} pointers  that each point to a child object.  The array {\i m_afVisible} contains  one BOOL value for each child object containing the value of the  site property "Visible" for that child.  (Both arrays are 1-based,  which means the zeroeth element is not used and the array has an  extra element allocated at the end.)\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 STDMETHODIMP CMyControl::DoPersist(IVariantIO* pvio, DWORD dwFlags)\par  \{\par  \tab // persist the container's own properties, "BackColor" and\par  \tab // "Rectangular"\par  \tab HRESULT hr;\par  \tab if (FAILED(hr = pvio->Persist(0,\par  \tab \tab \tab "BackColor", VT_INT, &m_rgb,\par  \tab \tab \tab "Rectangular", VT_BOOL, &m_fRect,\par  \tab \tab \tab NULL)))\par  \tab \tab return hr;\par  \tab if (hr == S_OK)\par  \tab \tab ...one or more properties changed, so repaint etc. container...\par  \par  \tab // loop once for each child object in collection "Controls"\par  \tab // (which is the container's only collection in this example);\par  \tab // if <pvio> is in loading mode, this loops once for each child\par  \tab // object whose data is stored in <pvio>\par  \tab for (iChild = 1;\par  \tab \tab  (iChild <= m_cChild) || (IsLoading(pvio) == S_OK)\par  \tab \tab  iChild++)\par  \tab \{\par  \tab \tab // persist the site properties of child number <iChild>\par  \tab \tab if (FAILED(hr = PersistSiteProperties(pvio, "Controls", iChild,\par  \tab \tab \tab \tab 0, "Visible", VT_BOOL, m_afVisible + iChild, NULL)))\par  \tab \tab \tab return hr;\par  \tab \tab if (hr == S_OK)\par  \tab \tab \tab ...site property changed, so repaint etc. child...\par  \par  \tab \tab // persist the child: in saving mode this writes the\par  \tab \tab // properties of the child to <pvio>; in loading mode this\par  \tab \tab // loads the child control whose data is in <pvio> and\par  \tab \tab // stores its IUnknown pointer in m_punkChild[iChild]\par  \tab \tab if (FAILED(hr = PersistChild(pvio, "Controls", iChild, NULL,\par  \tab \tab \tab \tab CLSCTX_INPROC_SERVER, m_apunkChild + iChild, NULL, 0)))\par  \tab \tab \tab return hr;\par  \tab \tab if (hr == S_FALSE)\par  \tab \tab \{\par  \tab \tab \tab // we're in loading mode, but we finished loading the\par  \tab \tab \tab // last control in the "Controls" collection, so quit\par  \tab \tab \tab break;\par  \tab \tab \}\par  \tab \}\par  \par  \tab // clear the dirty bit if requested\par  \tab if (dwFlags & PVIO_CLEARDIRTY)\par  \tab \tab m_fDirty = FALSE;\par  \par  \tab return S_OK;\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.  At least one of the variables listed in  {\i (arguments)} was written to, so the control may want to update  itself accordingly.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell None of the variables listed in {\i (arguments)} were  written to (either because the {\b IVariantIO} object is in  saving mode or because none of the properties named in  {\i (arguments)} exist in the {\b IVariantIO} object.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_BADVARTYPE\cell One of the VARTYPE values in {\i (arguments)} is invalid.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_TYPEMISMATCH\cell One of the variables in {\i (arguments)} could not be coerced to the  type of the corresponding property in the {\b IVariantIO} object, or  vice versa.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PersistVariantIO\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b PersistVariantIO(}{\b DWORD} {\i dwFlags}{\b , (varying)} {\i (arguments)}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Loads or saves a list of property name/value pairs, specified as a  variable-length list of arguments that's formatted in the same way as  {\b IVariantIO::Persist} , to/from an {\b IPropertyBag} object.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/PVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the same flags passed to  {\b IManageVariantIO::SetMode}  (e.g. VIO_ISLOADING).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i (arguments)}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The names, types, and pointers to variables  containing the properties to persist.  These must consist of a series  of argument triples (sets of 3 arguments) followed by a NULL.  See {\b IVariantIO::Persist}  for information about the format of  these arguments.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.  At least one of the variables listed in  {\i (arguments)} was written to, so the control may want to update  itself accordingly.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell None of the variables listed in {\i (arguments)} were  written to (either because the {\b IVariantIO} object is in  saving mode or because none of the properties named in  {\i (arguments)} exist in the {\b IVariantIO} object.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_BADVARTYPE\cell One of the VARTYPE values in {\i (arguments)} is invalid.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_TYPEMISMATCH\cell One of the variables in {\i (arguments)} could not be coerced to the  type of the corresponding property in the {\b IVariantIO} object, or  vice versa.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PersistVariantIOList\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b PersistVariantIOList(}{\b DWORD} {\i dwFlags}{\b , va_list} {\i args}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Loads or saves a list of property name/value pairs, specified as a  va_list array that's formatted in the same way as  {\b IVariantIO::Persist} , to/from an {\b IPropertyBag} object.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/PVIOL.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the same flags passed to  {\b IManageVariantIO::SetMode}  (e.g. VIO_ISLOADING).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i args}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The arguments to pass.  See {\b IVariantIO::Persist} for information about the organization of these arguments.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.  At least one of the variables listed in  {\i args} was written to, so the control may want to update  itself accordingly.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell None of the variables listed in {\i args} were  written to (either because the {\b IVariantIO} object is in  saving mode or because none of the properties named in  {\i args} exist in the {\b IVariantIO} object).\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_BADVARTYPE\cell One of the VARTYPE values in {\i args} is invalid.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DISP_E_TYPEMISMATCH\cell One of the variables in {\i args} could not be  coerced to the type of the corresponding property in the {\b IVariantIO}  object, or vice versa.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PickClass\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b PickClass(}{\b HINSTANCE} {\i hInstance}{\b , UINT} {\i residDialogTitle}{\b , UINT} {\i cCategories}{\b , const CATID[]} {\i rgCategories}{\b , CLSID*} {\i pclsid}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Displays a modal "class picker" dialog which lists all the  registered classes which support a given set of component  categories and lets the user choose one, returning its CLSID.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/PICKCLS.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hInstance}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The handle of the instance which owns {\i residDialogTitle}.  May be NULL only if {\i residDialogTitle} is 0.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i residDialogTitle}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The ID of a string resource to be used as the the dialog  box's title.  If 0, the default title, "Insert Object", is  displayed.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cCategories}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The number of categories in {\i rgCategories}.  Must be  non-zero.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rgCategories}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] An array of {\i cCategories} component category IDs.  The  dialog will display the friendly names of all registered classes  which implement all of the categories.  May not be NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] If the function is successful, {\i pclsid} is set to the  class ID of the selected class.  On entry, {\i pclsid} may not  be NULL.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 To make use of this function, you must include ochelp.rc into your  project\\'s resource file.  To do this from within Developer Studio,  select the menu item, View | "Resource Includes", and add  #include "..\\ocmisc\\ocmisc.rc" to the "Compile-time directives".  (The path may be different depending on where your project is located  relative to ocmisc.)\par  This functions makes the following assumptions about the state of the  system registry:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab A registered class might have one or more keys  of the form: HKEY_CLASSES_ROOT\\CLSID\\\{clsid\}\\Implemented Categories\\\{catid\}.  If a class has this key it signifies that the class with  CLSID \{clsid\} implements the component category with CATID \{catid\}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Such a class will also have a key: HKEY_CLASSES_ROOT\\CLSID\\\{clsid\}\\ProgID,  the value of which is the class' programmatic identifier.  There will also  be a key: HKEY_CLASSES_ROOT\\\{progid\} matching the class' ProgID, the  value of which is the "friendly name" for the class.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Each class that implements all the {\i rgCategories} must also have a ProgID  and a friendly name or else it will not be displayed in the class picker dialog.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 Here's a typical usage scenario:\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 const int c_cCategories = 3;\par  CLSID clsid;\par  HRESULT hResult;\par  LPUNKNOWN pUnknown;\par  CATID rgCategories[c_cCategories];\par  rgCategories[0] = CATID_Insertable;\par  rgCategories[1] = CATID_Control;\par  rgCategories[2] = CATID_MMControl;\par  \par  if (SUCCEEDED(PickClass(hInstance,\par  \tab \tab \tab \tab \tab \tab IDS_CLASS_PICKER_TITLE,\par  \tab \tab \tab \tab \tab \tab c_cCategories,\par  \tab \tab \tab \tab \tab \tab rgCategories,\par  \tab \tab \tab \tab \tab \tab &clsid)))\par  \{\par  \tab hResult = CoCreateInstance(clsid,\par  \tab \tab \tab \tab \tab \tab \tab    NULL,\par  \tab \tab \tab \tab \tab \tab \tab    CLSCTX_INPROC_SERVER,\par  \tab \tab \tab \tab \tab \tab \tab    IID_IUnknown,\par  \tab \tab \tab \tab \tab \tab \tab    (void**)pUnknown);\par  \tab if (SUCCEEDED(hResult))\par  \tab \{\par  \tab \tab //...\par  \tab \}\par  \}\par  ---------------------------------------------------------------------------\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.  {\i pclsid} is set to the selected class ID.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.  A variety of failures are possible:  the user did not select a class, no registered classes  implemented all specified categories, out of memory,  etc.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PixelsToHIMETRIC\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b PixelsToHIMETRIC(}{\b int} {\i cx}{\b , int} {\i cy}{\b , SIZE *} {\i psize}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Converts a width and height from pixels (on the default monitor)  to HIMETRIC units.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/HIMETRIC.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cx}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The input width in pixels.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cy}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The input height in pixels.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i psize}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The output size in HIMETRIC units.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PrintableANSIToUNICODE\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b int} {\b PrintableANSIToUNICODE(}{\b LPWSTR} {\i pwchDst}{\b , LPCSTR} {\i pchSrc}{\b , int} {\i cwchDstMax}{\b , LPCSTR *} {\i ppchSrcEnd}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Converts a printable ANSI string to UNICODE.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/PATU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 If the function succeeds, and {\i cwchDstMax} is nonzero, the return  value is the number of wide characters (including the terminating null  wide character) written to the buffer pointed to by {\i pwchDst}.  If  the function succeeds, and {\i cwchDstMax} is zero, the return value is  the required size, in wide characters, for a buffer that can receive  the translated string.  If the function fails, the return value is 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pwchDst}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The buffer that will hold the output UNICODE string.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pchSrc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The input ANSI string.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cwchDstMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The capacity of {\i pwchDst} (in wide characters).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppchSrcEnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store a pointer to the first character  past the end of the printable ANSI string in {\i pchSrc}.  This  character will be either a a carriage return, a line feed,  a terminating null character, or one of the delimiter characters  (see {\i dwFlags}).  If {\i ppchSrcEnd} is NULL, then this information  is not returned.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 PA_CSV\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The string being read is a CSV (comma-separated  variable) token.  The only delimiter character is ",".\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 PA_HTML\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The string being read is an HTML token.  The  delimiter characters are "=", " ", tab, "<", and ">".\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b UNICODEToPrintableANSI} for a definition of "printable ANSI  string".  {\b PrintableANSIToUNICODE} reads a single string starting  at location {\i pchSrc}, performing decoding as needed (e.g. ignoring  surrounding quotation marks, un-doubling doubled quotation and  percent characters, and converting hexadecimal escape sequences to  binary values); the resulting string (which may contain embedded  null characters) is stored in {\i pwchDst}.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PropertyBagCompactor Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Implements an {\b IPropertyBag} that reads and writes its data in a  more compact way in a second {\b IPropertyBag} by "folding" multiple  properties with the same period-terminated prefix (e.g. "Foo.X = 42,  Foo.Y = 'Hello'") into a single property (e.g. "Foo = 'X=42,Y=Hello'").\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/APBC.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IPropertyBag}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The interface to use to access the uncompacted  properties.  When writing into this property bag, write a property  with name and value equal to NULL in order to "flush" the compacted  property bag (i.e. complete writing its contents).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use {\b AllocPropertyBagCompactor} to create a {\b PropertyBagCompactor}  object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PropertyBagOnStream Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Implements {\b IPropertyBag} whose properties are contained in  a given {\b IStream}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/APBOS.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IPropertyBag}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The interface to use to access the properties  stored in the given {\b IStream}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use {\b AllocPropertyBagOnStream} to create a {\b PropertyBagOnStream}  object.\par  \pard\plain \sa160\sl240 \fs21\lang1033 See {\b VariantPropertyHeader} for a description of the format of  the data in the {\b IStream}.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PropertyBagOnVariantProperty Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Implements {\b IPropertyBag} whose only property is contained in  a given {\b VariantProperty}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/APBOVP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IPropertyBag}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The interface to use to access the single property  stored in the given {\b VariantProperty}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use {\b AllocPropertyBagOnVariantProperty} to create a  {\b PropertyBagOnVariantProperty} object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PropertyHelper Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Provides an implementation of {\b Persist}, {\b IPersistPropertyBag},  {\b IPersistStream}, {\b IPersistStreamInit}, and a simplified  implementation of {\b IDispatch}, for any object which implements  {\b IPersistVariantIO}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/APH.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IPersistPropertyBag}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Loads or saves properties from/to a given  {\b IPropertyBag} object.  Used to provide a textual representation of  the data of the object that implements {\b IPersistVariantIO}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IPersistStream}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Loads or saves the data of the object that  implements {\b IPersistVariantIO} as a stream of bytes.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IPersistStreamInit}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Like {\b IPersistStream}, but with an extra  method that allows the object to be created in a "newly initialized"  state.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IDispatch}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Provides script engines etc. access to the properties  exposed by the {\b IPersistVariantIO}.  This {\b IDispatch}  implementation isn't particularly fast, but it's an inexpensive way  for a control to provide a rudimentary {\b IDispatch} implementation.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use {\b AllocPropertyHelper} to create a {\b PropertyHelper} object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PropPageHelper Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Implements {\b IPropertyPage}.  Designed to be aggregated by an  object that wants to provide a specific propery page implementation.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/PROPHELP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IPropertyPage}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Standard OLE property page implementation.  The  information about the property page is maintained in a  {\b PropPageHelperInfo} structure that's allocated by the  aggregator and shared with {\b PropPageHelper}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b AllocPropPageHelper} for more information.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ReadHTMLTagToVariantIO\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b ReadHTMLTagToVariantIO(}{\b LPSTR *} {\i ppchTag}{\b , IManageVariantIO * *} {\i ppmvio}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Reads an HTML tag from a memory buffer and returns an {\b VariantIO}  object that contains the contents of that tag.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/RHTMLTAG.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppchTag}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a variable to read the HTML tag from.  On entry, *{\i ppchTag} should point to the "<" character that  starts the tag.  On exit, *{\i ppchTag} will point to the character  after the ">" character that ends the tag.  (Or, *{\i ppchTag} will  point to a null character if a null is encountered before the closing  ">" character.)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppmvio}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store a pointer to the  allocated {\b VariantIO} object.  NULL is stored in *{\i ppmvio} on  error.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ReadHTMLToken\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b ReadHTMLToken(}{\b LPCSTR} {\i pchSrc}{\b , LPCSTR *} {\i ppchSrcEnd}{\b , BSTR *} {\i pbstr}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Reads an HTML token (word, quoted string, etc.) from an ANSI buffer  and returns it as a BSTR.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/RHTMLTOK.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pchSrc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The input ANSI string.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppchSrcEnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store a pointer to the first character  past the end of the printable ANSI string in {\i pchSrc}.  If  {\i ppchSrcEnd} is NULL, then this information is not returned.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbstr}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store a pointer to the allocated string  containing the token's value.  The string is allocated by this  function, but must be freed by the caller using {\b SysFreeString}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 An HTML token is defined as a sequence of nonblank characters not  including "=", ">", or white space (except that the token may  be surrounded by double quotation marks).\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ReadStreamToMemory\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b ReadStreamToMemory(}{\b IStream *} {\i pstream}{\b , int} {\i cch}{\b , char * *} {\i ppchBuf}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Read bytes from a stream into memory (which is allocated by this  function).  Reads either a given number of bytes or until the end  of the stream.  The returned block of memory is null-terminated.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/RSTM.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to read from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cch}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of bytes to read in {\i pstream}.  If {\i cch}  is -1, then {\i pstream} is read to its end.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppchBuf}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store a pointer to the returned block  of memory.  NULL is stored in *{\i ppchBuf} on error.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ReadVariantProperty\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b ReadVariantProperty(}{\b IStream *} {\i pstream}{\b , VariantProperty *} {\i pvp}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Reads a {\b VariantProperty} from an {\b IStream} in a simple tagged  binary format.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/RVP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to read from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the property name/value pair  that's read in.  Any unknown records in {\i pstream} are automatically  skipped.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b VariantPropertyHeader} for a description of the format of  the data read from {\i pstream} by this function.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell The end-of-stream marker was read in.  (This is the data  that's written using {\b WriteVariantProperty} with NULL {\i pvp}.)\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ReadVariantPropertyFromCSV\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b ReadVariantPropertyFromCSV(}{\b LPCSTR} {\i pch}{\b , VariantProperty *} {\i pvp}{\b , LPCSTR *} {\i ppchEnd}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Reads a {\b VariantProperty} that's stored in CSV (Excel-readable  comma-delimited) format in a memory buffer.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/RVPFCSV.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pch}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The buffer to read from.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the property name/value pair.  *{\i pvp} need not be initialized on entry.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppchEnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to store the pointer to the end of the  line (that begins with {\i pch}).  On exit, *{\i ppchEnd} will point  to the character past the carriage return and/or line feed, to  the beginning of the next line (or the terminating null).  If  {\i ppchEnd} is NULL then this information is not returned.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 RegDeleteTree\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LONG} {\b RegDeleteTree(}{\b HKEY} {\i hParentKey}{\b , LPCTSTR} {\i szKeyName}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Delete a registry key and all its subkeys (i.e., its "tree").\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/REG.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hParentKey}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The parent key of the the key to delete.  May not be NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szKeyName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The name of the key at the top of the tree to delete.  May not  be NULL.  Assumed to be a subkey of {\i hParentKey}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function is almost identical to the Win32 API,  {\b RegDeleteKey}.  However, {\b RegDeleteKey} only deletes the  key and its subkeys under Win95, not WinNT.  ---------------------------------------------------------------------------\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 ERROR_SUCCESS\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 ERROR_CANTOPEN\cell Failure.  The key {\i hParentKey}\\{\i szKeyName}  couldn't be opened (probably because it doesn't exist).\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.  An error occurred while deleting keys.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 RegisterControls\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b RegisterControls(}{\b ICatRegister*} {\i pCatReg}{\b , ControlInfo *} {\i pctlinfo}{\b , DWORD} {\i dwAction}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Registers or unregisters one or more controls.  Helps implement  {\b DllRegisterServer} and {\b DllUnregisterServer}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/REG.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCatReg}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A component category registration  manager.  Used to register or unregister the various component  categories specified for the control via {\i pctlinfo}.  Can't  be NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pctlinfo}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Information about the control that's  being registered or unregistered.  See {\b ControlInfo} for more  information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwAction}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May be one of the following:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 RC_REGISTER\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Registers the control.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 RC_UNREGISTER\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Unregisters the control.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 You can register more than one control by making a linked list  out of your {\b ControlInfo} structures -- set each {\i pNext}  field to the next structure, and set the last {\i pNext} to NULL.\par  All controls which are registered by this function are registered  as "safe for scripting" and "safe for initializing".\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example shows how to implement {\b DllRegisterServer}  and {\b DllUnregisterServer} using {\b RegisterControls}.\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 STDAPI DllRegisterServer(void)\par  \{\par  \tab return RegisterControls(&g_ctlinfo, RC_REGISTER);\par  \}\par  \par  STDAPI DllUnregisterServer(void)\par  \{\par  \tab return RegisterControls(&g_ctlinfo, RC_UNREGISTER);\par  \}\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell The operation failed.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 RemoveAllMRUListEntries\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b RemoveAllMRUListEntries(}{\b HMRULIST} {\i hMRUList}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Removes all the entries in an MRU list.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Removes all the registry entries.  Automatically calls  {\b ResetMRUList}.  ---------------------------------------------------------------------------\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 RemoveIthMRUListEntry\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b RemoveIthMRUListEntry(}{\b HMRULIST} {\i hMRUList}{\b , int} {\i iEntry}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Removes an MRU list entry by index.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iEntry}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The 0-based index of the entry to remove.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.  ---------------------------------------------------------------------------\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 RemoveMRUListEntry\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b RemoveMRUListEntry(}{\b HMRULIST} {\i hMRUList}{\b , const TCHAR*} {\i szEntry}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Removes an MRU list entry by name.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szEntry}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The name of the entry to remove.  If NULL, nothing happens.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 (other)\cell Failure.  ---------------------------------------------------------------------------\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ResetMRUList\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b ResetMRUList(}{\b HMRULIST} {\i hMRUList}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Resets an MRU list so that the next call to  {\b GetNextMRUListEntry} will retrieve the first entry.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.  ---------------------------------------------------------------------------\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SaveToCSV\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b SaveToCSV(}{\b IStream *} {\i pstream}{\b , CLSID *} {\i pclsid}{\b , IPersistPropertyBag *} {\i pppb}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Save an object that supports {\b IPersistPropertyBag} to an  {\b IStream} in CSV (Excel-readable comma-delimited) format.  Can also be used to save just a class ID to a stream (which is  useful for saving an object that doesn't support any persistence  interface).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/STCSV.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The class ID to save to the stream.  If {\i pclsid} is NULL then the class ID is obtained from {\i pppb}  (by calling {\b IPerist::GetClassID} , assuming {\i pppb} is not also  NULL).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pppb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The object to save.  If {\i pppb} is  NULL, then only the class ID *{\i pclsid} (if {\i pclsid} is not NULL)  is saved to the stream.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SaveToHTML\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b SaveToHTML(}{\b IStream *} {\i pstream}{\b , CLSID *} {\i pclsid}{\b , IPersistPropertyBag *} {\i pppb}{\b , LPCSTR} {\i szPage}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Saves an object that supports {\b IPersistPropertyBag} to an  {\b IStream} in HTML format.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/STHTML.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The class ID to save to the stream.  If {\i pclsid} is NULL then the class ID is obtained from {\i pppb}  (by calling {\b IPerist::GetClassID} , assuming {\i pppb} is not also  NULL).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pppb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The object to save.  If {\i pppb} is  NULL, then only the class ID *{\i pclsid} (if {\i pclsid} is not NULL)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szPage}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 An HTML file (perhaps returned by a previous call  to {\b LoadFromHTML}) to use as a "template".  The HTML file that  is written to {\i pstream} is the same as this file, except that  the <OBJECT> tag is replaced by the object specified by {\i pppb}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If {\i szPage} contains multiple <OBJECT> tags, the same  rules specified in {\b LoadFromHTML} are used to determine which  <OBJECT> tag is replaced by {\i pppb}.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SaveToStream\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b SaveToStream(}{\b IStream *} {\i pstream}{\b , CLSID *} {\i pclsid}{\b , IPersistStream *} {\i pps}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Save an object that supports {\b IPersistStream} to an  {\b IStream} in a simple binary tagged file format.  Can also be used to save just a class ID to a stream (which is  useful for saving an object that doesn't support any persistence  interface).\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/STS.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The class ID to save to the stream.  If {\i pclsid} is NULL then the class ID is obtained from {\i pps}  (by calling {\b IPerist::GetClassID} , assuming {\i pps} is not also  NULL).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pps}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The object to save.  If {\i pps} is  NULL, then only the class ID *{\i pclsid} (if {\i pclsid} is not NULL)  is saved to the stream.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SaveVariantPropertiesToCSV\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b SaveVariantPropertiesToCSV(}{\b IStream *} {\i pstream}{\b , IEnumVariantProperty *} {\i pevp}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Save an {\b IEnumVariantProperty} object to an {\b IStream} in  CSV (Excel-readable comma-delimited) format.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/SVPTCSV.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pevp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The property bag to save.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell I/O error.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SaveVariantPropertiesToHTML\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b SaveVariantPropertiesToHTML(}{\b IStream *} {\i pstream}{\b , IEnumVariantProperty *} {\i pevp}{\b , LPCSTR} {\i szPage}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Saves an {\b IEnumVariantProperty} object to an {\b IStream} in  HTML format.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/SVPTHTML.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pevp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The property bag to save.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szPage}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 An HTML file (perhaps returned by a previous call  to {\b LoadFromHTML}) to use as a "template".  See {\b SaveToHTML}  for more information about this parameter.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell I/O error.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SetMRUListMaxEntries\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b SetMRUListMaxEntries(}{\b HMRULIST} {\i hMRUList}{\b , int} {\i cMaxEntries}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Sets the maximum number of entries in an MRU list, possibly  truncating the list.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/MRU.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMRUList}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A handle to a previously opened MRU list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cMaxEntries}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The maximum number of entries allowed in the list.  Must be  greater than 0 and less than 999.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If {\i cMaxEntries} is less than the number of entries currently  in the list, any excess entries will be removed from the list.  ---------------------------------------------------------------------------\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SiteLW Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Implements {\b ISiteLW}, which implements an ActiveX windowed control  that hosts an ActiveX lightweight windowless control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/ASLW.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b ISiteLW}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Provides functions to manipulate the site object.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use {\b AllocSiteLW} to create a {\b SiteLW} object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SiteWL Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 For each embedded control, the {\b Stage} control maintains a {\b SiteWL}  object ("Site WindowLess" that provides additional properties and  methods for the embedded control.  {\b SiteWL} is not directly  accessible. {\b SiteWL} should not be confused with {\b SiteLW}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SITEWL.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Properties\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b int Width}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Width of the control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b int Height}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Height of the control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b int Left}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 X offset of the top left corner of the control from the  top left corner of the {\b Stage}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b int Top}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Y offset of the top left corner of the control from the  top left corner of the {\b Stage}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b int Z}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Z order of the control.  Higher Zs are further toward the  back.  Z can be negative.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BOOL Visible}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Whether the control is visible.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b LPSTR Name}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Name of the control.  New controls are automatically  assigned unique names.  The current limit on name length is 31  characters, not including a terminating NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BSTR Tag}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Control tag.  The tag can be used to store user data.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b int Cursor}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 ID of the cursor that is shown when the mouse is over  the object.  The ID can be any of the OCR_* values in winuser.h.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i For all users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b SiteWL} currently supports many other animation-related  properties and methods for demonstration purposes only.  The functionality provided by these properties will eventually  be moved to a separate control.  If you wish to use these  properties before then, please see the demos in the mmctl\\demo  directory or contact MikeVK.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Sprite Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 A lightweight windowless ActiveX control which displays a  bitmap.  The bitmap may contain multiple "frames", in which  case the Sprite can "animate" by cycling between its frames.\par  The Sprite may be transparent, translucent, or entirely  opaque.  If translucent, the Sprite translucency can also  be made to cycle as the Sprite steps from frame to frame.\par  The Sprite can also be made to rotate.  If a Sprite is set to rotate,  only the first frame of its bitmap is displayed.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Properties\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer NumFrames}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The total number of frames in the bitmap.  Must be at least 1.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer FramesAcross}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of frames in each row of bitmap frames.  Must be at least 1.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer FramesDown}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of frames in each row of bitmap frames.  Must be at least 1.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b String BitmapPath}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The file system path to the bitmap file.  May be absolute or relative.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Boolean NotTransparent}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Whether or not the Sprite is transparent.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 True\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The Sprite has no transparent sections.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 False\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The Sprite is transparent in those areas where it is colored with  its 0th palette entry.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer InitTranslucency}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The initial translucency value.  Must be between  {\b SPRITE_MIN_TRANS}  (transparent) and  {\b SPRITE_MAX_TRANS}  (opaque), and between  {\b MinTranslucency}  and {\b MaxTranslucency} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer MinTranslucency}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The minimum translucency value.  Must be between  {\b SPRITE_MIN_TRANS}  (transparent) and  {\b SPRITE_MAX_TRANS}  (opaque).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer MaxTranslucency}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The maximum translucency value.  Must be between  {\b SPRITE_MIN_TRANS}  (transparent) and  {\b SPRITE_MAX_TRANS}  (opaque).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer TranslucencyStep}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The change in translucency which occurs with every call to the Sprite's  {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_TRANSSTEP}  (slowest) and  {\b SPRITE_MAX_TRANSSTEP}  (fastest).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer TranslucencyBoundaryAction}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 What happens after the Sprite's translucency hits {\b MinTranslucency} {\b MaxTranslucency} .  See {\b SPRITE_BOUNDARYACTION} for possible values.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer InitTranslucencyDelay}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite translucency stepping that occurs when the Sprite first appears.  Measured in terms of the number of calls to the Sprite's {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_TRANSDELAY}  (no delay) and  {\b SPRITE_MAX_TRANSDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer TranslucencyDelayAtMin}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite translucency stepping that occurs when the Sprite hits its  minimum translucency.  Measured in terms of the number of calls to the  Sprite's {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_TRANSDELAY}  (no delay) and  {\b SPRITE_MAX_TRANSDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer TranslucencyDelayAtMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite translucency stepping that occurs when the Sprite hits its  maximum translucency.  Measured in terms of the number of calls to the  Sprite's {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_TRANSDELAY}  (no delay) and  {\b SPRITE_MAX_TRANSDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer RotationType}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 How the Sprite will rotate when animated.  See {\b SPRITE_ROTATION_TYPE}  for possible values.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer InitRotation}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The Sprite's initial rotation.  Ignored if {\b RotationType} is  {\b SPRITE_ROT_NONE} .  Must be between  {\b SPRITE_MIN_ROT}  and {\b SPRITE_MAX_ROT} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer MinRotation}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The Sprite's minimum rotation.  Ignored if {\b RotationType} is  {\b SPRITE_ROT_NONE} .  Must be between  {\b SPRITE_MIN_ROT}  and {\b SPRITE_MAX_ROT} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer MaxRotation}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The Sprite's maximum rotation.  Ignored if {\b RotationType} is  {\b SPRITE_ROT_NONE} .  Must be between  {\b SPRITE_MIN_ROT}  and {\b SPRITE_MAX_ROT} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer RotationStep}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The change in rotation which occurs with every call to the Sprite's  {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_ROTSTEP}  (slowest) and  {\b SPRITE_MAX_ROTSTEP}  (fastest).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer RotationBoundaryAction}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 What happens after the Sprite's rotation hits {\b MinRotation} {\b MaxRotation} .  See {\b SPRITE_BOUNDARYACTION} for possible values.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer InitRotationDelay}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite rotation stepping that occurs when the Sprite first appears.  Measured in terms of the number of calls to the Sprite's {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_ROTDELAY}  (no delay) and  {\b SPRITE_MAX_ROTSDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer RotationDelayAtMin}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite rotation stepping that occurs when the Sprite hits its  minimum rotation.  Measured in terms of the number of calls to the  Sprite's {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_ROTDELAY}  (no delay) and  {\b SPRITE_MAX_ROTSDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer RotationDelayAtMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite rotation stepping that occurs when the Sprite hits its  maximum rotation.  Measured in terms of the number of calls to the  Sprite's {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_ROTDELAY}  (no delay) and  {\b SPRITE_MAX_ROTSDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer X1}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The x-coordinate of the first vertex of an arbitrary quadrangle  in which to draw the Sprite.  If any of the coordinates in the four  quadrangle vertices (X1,Y1), (X2,Y2), (X3,Y3), or (X4,Y4) is non-zero,  the Sprite will be drawn using quadrangle BLT-ing, ignoring any  translucency or rotation settings.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer Y1}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The y-coordinate of the first vertex of an arbitrary quadrangle  in which to draw the Sprite.  See {\b X1} for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer X2}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The x-coordinate of the second vertex of an arbitrary quadrangle  in which to draw the Sprite.  See {\b X1} for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer Y2}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The y-coordinate of the second vertex of an arbitrary quadrangle  in which to draw the Sprite.  See {\b X1} for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer X3}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The x-coordinate of the third vertex of an arbitrary quadrangle  in which to draw the Sprite.  See {\b X1} for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer Y3}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The y-coordinate of the third vertex of an arbitrary quadrangle  in which to draw the Sprite.  See {\b X1} for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer X4}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The x-coordinate of the fourth vertex of an arbitrary quadrangle  in which to draw the Sprite.  See {\b X1} for more information.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Integer Y4}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The y-coordinate of the fourth vertex of an arbitrary quadrangle  in which to draw the Sprite.  See {\b X1} for more information.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b  SizeToContent}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Set the Sprite's bounding rectangle to the same size as any frame  in the Sprite's underlying bitmap.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i For all users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control cannot be directly embedded in IE3, since IE3 does  not support windowless controls.  Instead, embed the {\b HostLW}  control in IE3, and then embed this control into the {\b HostLW}  control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control is packaged in both design-time and run-time versions.  The design time version provides a property page for editing all  the control's properties.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 The run-time version eliminates the property pages (in order to reduce  code size).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab The class ID of the design-time version of this control is  "40DA82E1-70FE-11CF-92F8-00AA00613BF1".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab The class ID of the run-time version of this control is  "TBD (currently the same as the design-time version)".\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\i For C++ users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The class ID of this control is defined as CLSID_CSpriteControl in  "csprite.h".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The ProgID of this control is "Sprite.Sprite.3".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control implements the following interfaces:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IUnknown}: A delegating {\b IUnknown} that supports  aggregation\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b ISprite}: Provides low-level efficient access to the  properties of a {\b Sprite} control.  See that interface  for more information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IViewObjectEx} subset (based on {\b IViewObject} and  {\b IViewObject2}): Used to display the object.  DVASPECT_CONTENT is the only supported aspect.  {\b Freeze},  {\b Unfreeze}, {\b GetRect}, {\b GetViewStatus}, {\b QueryHitRect},  and {\b GetNaturalExtent} are not implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleObject} subset: Used to allow the container to provide  the client site pointer, invoke control verbs, and get control  state.  Only {\b SetClientSite}, {\b DoVerb}, {\b EnumVerbs}  (design time version only), and {\b GetMiscStatus} are  implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleInPlaceObjectWindowless} subset (based on {\b IOleWindow}  and {\b IOleInPlaceObject}): Used to change control state and  pass window messages to the control.  Only {\b UIDeactivate},  {\b SetObjectRects}, and {\b OnWindowMessage} are implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleControl} subset: Used to inform the control of  ambient property changes.  Only {\b OnAmbientPropertyChange}  is implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b ISpecifyPropertyPages}: Used to retrieve information about  the control's property page.  {\b GetPages} is implemented  only in the design time version.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IPersistStreamInit} (based on {\b IPersistStream}):  Used to persist the control's data to/from an {\b IStream}.  The file format is compatible with past and future versions  of this control (i.e. adding and removing properties won't  break the control).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IPersistPropertyBag}: Used to persist the control's data  to/from an {\b IPropertyBag}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IAnimate}: Used to control which frame of the bitmap is  displayed.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b ISprite}: Provides a vtable mechanism for getting and setting  Sprite properties.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IPersistVariantIO}: Used to persist Sprite properties and to  get and set persistable properties via OLE automation.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IServiceProvider}: Used to pass service requests (via  {\b QueryService} to Sprite's client site.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleCommandTarget}: Used to stop the Sprite if it is in the  middle of loading.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IDispatch}: Used to implement non-persistable properties  and methods.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control sources (calls) the following interfaces (if  available) on the container-provided site object:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleClientSite}: The client site pointer provided by  the container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleInPlaceSiteWindowless}: Used to request that the  control's position be changed, acquire mouse capture,  invalidate and update the display of the control, and  (at design time only) draw XOR'd image of the control during  dragging.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IDispatch}: Used to access ambient properties (currently  DISPID_AMBIENT_USERMODE).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IAdviseSink} (provided via {\b IViewObject::SetAdvise} Used to advise the container that the palette of the  control changed.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Stage Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 A lightweight windowless ActiveX control which is itself a container  for lightweight windowless controls.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/STAGE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Properties\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Boolean Transparent}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 True if the stage is transparent (i.e. you  can see through it to any controls or background underneath),  False if the stage is opaque (in which case the color is {\i BackColor}).  This doesn't affect the controls within the stage.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long BorderColor}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The background color of the stage, expressed as a  standard 24-bit RGB value.  {\i BorderColor} is ignored if  {\i Transparent} is True.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Long Count}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of "Players" (controls) contained in the  {\b Stage}.  Read-only.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i For all users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The controls contained within the {\b Stage} are accessible via  OLE Automation.  See the "For VBS Users" section for details.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Currently {\b Stage} provides animation functionality for  demonstration purposes only\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control cannot be directly embedded in IE3, since IE3 does  not support windowless controls.  Instead, embed the {\b HostLW}  control in IE3, and then embed this control into the {\b HostLW}  control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b Stage} is packaged in both design-time and run-time versions.  The design time version allows controls to be embedded in  {\b Stage} using the right-click context menu.  Various property  pages are provided for editing most properties, including "site"  properties which are implemented by {\b Stage} but maintained  separately by {\b SiteWL} for each embedded control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab To change the background color while authoring, select  the control and press "c".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Stage fires an event to the container whenever a contained  control is clicked.  The event parameters include object-relative  X and Y coordinates of the click location.  See the notify.htm  sample in the mmctl\\demo directory for details.  Stage also  supports MouseEnter, MouseLeave, MouseUp, and MouseDown events.  See input.htm for examples.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Stage also supports Tick and EdgeAction events; see notify.htm,  and note that the way these events are supported may change.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 The run-time version drops editing features (most notably the  property page) in order to reduce code size.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab The class ID of the design-time version of this control is  "2E0E7F00-6F81-11CF-AB13-00AA00A437B1".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab The class ID of the run-time version of this control is  "TBD" (currently the same as the design-time version).\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\i For VBS users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Use the Players method to access a control by name; for example,  "Stage1.Players("Sprite 2").\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Use the Count property with the PlayerNum method to loop through  all the controls in a Stage.  For an example, see vbstest.htm in  the MM Controls demo directory.  If you want to change the Z order of  all controls, use a variation on that method:  Loop through the  controls and assign each one to an object variable (probably in an  array), and then loop through the array and set Z.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The numerical arguments to the PlayerNum method refer to Stage's  own internal numbering of the controls.  This numbering may not  be the same as the numbering you see in the HTML file when Stage  writes out the properties of its embedded controls -- for example,  "Players(1).Name=Tiny".  In this example, do not expect that you  can use "PlayerNum(1)" to refer to the control named "Tiny".  When you want to refer to a particular control, use the Players  method with the control name, e.g. "Stage1.Players("Tiny").\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab You can use identical names at different levels of the containment  hierarchy and distinguish them by providing a complete "path" to  the name. For example, if you have one Stage nested inside another  inside another, and all are named "Stage1", you can access the  innermost one as "Stage1.Players("Stage 1").Players.("Stage 1").  If a name at a lower level of the hierarchy is unambiguous, you  can access it directly from the top level.  For example, if a  deeply nested control named "Banner Text" is uniquely named, you  can access it as Stage1.Players("Banner Text").\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\i For C++ users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The class ID of this control is defined as CLSID_CStageOC in  "Stage.h".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The ProgID of this control is "Stage.Stage.1".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control implements the following interfaces:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IUnknown}: A delegating {\b IUnknown} that supports  aggregation\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IStage}: Provides low-level efficient access to the  properties of a {\b Stage} control.  See that interface  for more information.  [TBD]\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IViewObjectEx} subset (based on {\b IViewObject} and  {\b IViewObject2}): Used to display the object.  DVASPECT_CONTENT is the only supported aspect.  {\b Freeze},  {\b Unfreeze}, {\b GetRect}, {\b GetViewStatus}, {\b QueryHitRect},  and {\b GetNaturalExtent} are not implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleObject} subset: Used to allow the container to provide  the client site pointer, invoke control verbs, and get control  state.  Only {\b SetClientSite}, {\b DoVerb}, {\b EnumVerbs}  (design time version only), and {\b GetMiscStatus} are  implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleInPlaceObjectWindowless} subset (based on {\b IOleWindow}  and {\b IOleInPlaceObject}): Used to change control state and  pass window messages to the control.  Only {\b UIDeactivate},  {\b SetObjectRects}, and {\b OnWindowmessage}, are implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleControl} subset: Used to inform the control of  ambient property changes.  Only {\b OnAmbientPropertyChange}  is implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b ISpecifyPropertyPages}: Used to retrieve information about  the control's property page.  {\b GetPages} is implemented  only in the design time version.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IPersistStreamInit} (based on {\b IPersistStream}):  Used to persist the control's data to/from an {\b IStream}.  The file format is compatible with past and future versions  of this control (i.e. adding and removing properties won't  break the control).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IPersistPropertyBag}: Used to persist the control's data  to/from an {\b IPropertyBag}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IDispatch}:  Provides access to the control's properties.  Does not provide type information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control sources (calls) the following interfaces (if  available) on the container-provided site object:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleClientSite}: The client site pointer provided by  the container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleInPlaceSiteWindowless}: Used to request that the  control's position be changed, acquire mouse capture,  invalidate and update the display of the control, and  (at design time only) draw XOR'd image of the control during  dragging.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IDispatch}: Used to access ambient properties (currently  DISPID_AMBIENT_USERMODE).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IAdviseSink} (provided via {\b IViewObject::SetAdvise} Used to advise the container that the palette of the  control changed.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 TaskMemAlloc\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b LPVOID} {\b TaskMemAlloc(}{\b ULONG} {\i cb}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Allocates memory using the task memory allocator (see {\b CoGetMalloc}).  This is simply a macro that calls {\b HelpMemAlloc} with specific flags.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/HELPMEM.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the allocated block of memory.  Returns NULL on  error.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of bytes of memory to allocate.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 TaskMemFree\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b TaskMemFree(}{\b LPVOID} {\i pv}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Frees a block of memory previously allocated using {\b TaskMemAlloc}.  This is simply a macro that calls {\b HelpMemFree} with specific flags.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/HELPMEM.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pv}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the block of memory to allocate.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 TCHARFromGUID\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b TCHAR*} {\b TCHARFromGUID(}{\b REFGUID} {\i guid}{\b , TCHAR*} {\i pszGUID}{\b , int} {\i cchMaxGUIDLen}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Converts a GUID to a TCHAR-based string representation.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/GUID2TCH.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns an alias to {\i pszGUID}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] The GUID to convert.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pszGUID}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] The string form of the {\i guid}.  Can't be NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cchMaxGUIDLen}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] {\i szGUID} is, on entry, assumed to point to a buffer of  at least {\i cchMaxGUIDLen} characters in length.  Must be  greater at least 39.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Unlike {\b StringFromGUID2} which always returns an OLECHAR form  of the GUID string, this function returns a wide or single-byte  form of the string depending on the build environment.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b CLSIDFromTCHAR}  ---------------------------------------------------------------------------\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 TextFX Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 A lightweight windowless ActiveX control that displays and  animates text.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/TEXTFX.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Properties\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b LPSTR Text}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Text displayed by the control.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b COLORREF TextColor}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Text color.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b COLORREF BackColor}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Background color.  Ignored if BackTransparent  is TRUE.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BOOL BackTransparent}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Whether background is transparent.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b int BorderWidth}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Border width.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b int Angle}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Angle (in degrees) at which the text is drawn.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b DWORD FXFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Flags that determine what effects are used to  display the text.  The only flag currently supported is FX_USEGUIDES.  However, other effects such as rotation are available via other  properties such as Angle.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b (various) Font...}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 See Win32 doc for LOGFONT:  all LOGFONT fields  are available as properties where "lf" is replaced by "Font" (e.g.  FontHeight, FontFaceName, and so on).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b int Guide...}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 (Guide[Top | Bot][X | Y][1 | 2 | 3 | 4]Now;  for example, GuideBotY2Now).  Control points for  Bezier guidelines that determine where text is drawn, if FX_USEGUIDES  is set in FXFlags.  For example, GuideTopX1Now is the X coordinate of  one endpoint of the top guideline.  The first and fourth points on each  guideline are endpoints, and the second and third points are control  points of the Bezier curve that defines the guideline.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i For all users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab To change the text color while authoring, select the  control and press "c" (or use the Font dialog available on  the context menu).  To change the background color, select the  control and press "C".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab {\b TextFX} currently supports many other animation-related  properties for demonstration purposes only.  The functionality  provided by these properties will eventually be moved to a  separate control.  If you wish to use these  properties before then, please see the demos in the mmctl\\demo  directory or contact MikeVK.\par  \pard\plain \sa160\sl240 \fs21\lang1033 {\i For C++ users:} \par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The class ID of this control is defined as CLSID_CTextFXOC in  "textfx.h".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab The ProgID of this control is "TextFX.TextFX.1".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control implements the following interfaces:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IUnknown}: A delegating {\b IUnknown} that supports  aggregation\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b ITextFX}: Provides low-level efficient access to the  properties of a {\b TextFX} control.  See that interface  for more information.  [TBD]\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IViewObjectEx} subset (based on {\b IViewObject} and  {\b IViewObject2}): Used to display the object.  DVASPECT_CONTENT is the only supported aspect.  {\b Freeze},  {\b Unfreeze}, {\b GetRect}, {\b GetViewStatus}, {\b QueryHitRect},  and {\b GetNaturalExtent} are not implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleObject} subset: Used to allow the container to provide  the client site pointer, invoke control verbs, and get control  state.  Only {\b SetClientSite}, {\b DoVerb}, {\b EnumVerbs}  (design time version only), and {\b GetMiscStatus} are  implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleInPlaceObjectWindowless} subset (based on {\b IOleWindow}  and {\b IOleInPlaceObject}): Used to change control state and  pass window messages to the control.  Only {\b UIDeactivate},  {\b SetObjectRects}, and {\b OnWindowmessage}, are implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleControl} subset: Used to inform the control of  ambient property changes.  Only {\b OnAmbientPropertyChange}  is implemented.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b ISpecifyPropertyPages}: Used to retrieve information about  the control's property page.  {\b GetPages} is implemented  only in the design time version.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IPersistStreamInit} (based on {\b IPersistStream}):  Used to persist the control's data to/from an {\b IStream}.  The file format is compatible with past and future versions  of this control (i.e. adding and removing properties won't  break the control).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IPersistPropertyBag}: Used to persist the control's data  to/from an {\b IPropertyBag}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IDispatch}:  Provides access to the control's properties.  Does not provide type information.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab This control sources (calls) the following interfaces (if  available) on the container-provided site object:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleClientSite}: The client site pointer provided by  the container.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IOleInPlaceSiteWindowless}: Used to request that the  control's position be changed, acquire mouse capture,  invalidate and update the display of the control, and  (at design time only) draw XOR'd image of the control during  dragging.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IDispatch}: Used to access ambient properties (currently  DISPID_AMBIENT_USERMODE).\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\tx1200\fi-360\li1200\emdash\tab {\b IAdviseSink} (provided via {\b IViewObject::SetAdvise} Used to advise the container that the palette of the  control changed.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 UNICODEConcat\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b UNICODEConcat(}{\b wchar_t *} {\i wpchDst}{\b , const wchar_t *} {\i wpchSrc}{\b , int} {\i wcchDstMax}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Concatenates one UNICODE string to another.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/UCAT.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wpchDst}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to copy {\i wpchSrc} to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wpchSrc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 String to copy.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wcchDstMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Capacity of {\i wpchDst} (in wide characters).  If {\i wcchDstMax} is less than or equal to zero, this function  does nothing.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Provided {\i wcchDstMax} greater than zero, {\i wpchDst} is always  null-terminated.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 UNICODECopy\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b UNICODECopy(}{\b wchar_t *} {\i wpchDst}{\b , const wchar_t *} {\i wpchSrc}{\b , int} {\i wcchDstMax}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Copies one UNICODE string to another.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/UCOPY.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wpchDst}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Where to copy {\i wpchSrc} to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wpchSrc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 String to copy.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wcchDstMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Capacity of {\i wpchDst} (in wide characters).  If {\i wcchDstMax} is less than or equal to zero, this function  does nothing.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Provided {\i wcchDstMax} greater than zero, {\i wpchDst} is always  null-terminated.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 UNICODEToANSI\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b int} {\b UNICODEToANSI(}{\b LPSTR} {\i pchDst}{\b , LPCWSTR} {\i pwchSrc}{\b , int} {\i cchDstMax}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Converts a UNICODE string to ANSI.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/UNICODE.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pchDst}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The buffer that will hold the output ANSI string.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pwchSrc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The input UNICODE string.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cchDstMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The capacity of {\i pchDst} (in characters).\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 UNICODEToPrintableANSI\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b int} {\b UNICODEToPrintableANSI(}{\b LPSTR} {\i pchDst}{\b , LPCWSTR} {\i pwchSrc}{\b , int} {\i cchDstMax}{\b , int} {\i cchSrc}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Converts a UNICODE string to a printable ANSI string.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/UTPA.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 If the function succeeds, and {\i cchDstMax} is nonzero, the return  value is the number of characters (including the terminating null)  written to the buffer pointed to by {\i pchDst}.  If the function  succeeds, and {\i cchDstMax} is zero, the return value is the required  size, in bytes, for a buffer that can receive the translated string.  If the function fails, the return value is 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pchDst}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The buffer that will hold the output ANSI string.  {\i pchDst} should be NULL if {\i cchDstMax} is zero.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pwchSrc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The input UNICODE string.  If {\i cchSrc} is  specified (i.e. is not -1), then {\i pwchSrc} may contain embedded  null characters (which are each written out as "%00").\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cchDstMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The capacity of {\i pchDst} (in characters).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cchSrc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The length of {\i pwchSrc} (in wide characters).  If {\i cchSrc} is -1, then {\i pwchSrc} is assumed to be null-terminated  and the length is calculated automatically.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 May contain the following flags.  Only one of  PA_CSV or PA_HTML may be specified.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 PA_CSV\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The string being written is a CSV (comma-separated  variable) token.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 PA_HTML\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The string being written is an HTML token.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The printable ANSI string stored in {\i pchDst} is compatible with  the CSV (Excel-readable comma-delimited) format, i.e. the output  string may be used as a field in a CSV file.  The output string  is the same as the input string (converted to ANSI), but with the  following processing applied:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab If the string contains a double quotation mark '"',  then the string is surrounded in double quotation marks.  If PA_HTML is specified, then the string is quoted if it is empty  (i.e. "") or contains any characters other than a-z, A-Z, 0-9,  or dash "-" or underscore "_".  If PA_CSV is specified, then the  string is quoted if it contains a comma ",".\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Any double quotation mark '"', percent '%', or pipe '|' characters  in the string are doubled (e.g. "%" becomes "%%").  Exception:  '%' or '|' characters at the end of the string are not doubled.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Any nonprintable ANSI characters (in the range 0-255) are  represented in hexadecimal with a percent character prefix  (e.g. %07 represents character 7).  The hexadecimal number must  contain exactly two digits.\par  \pard\plain \sa160\sl240 \fs21\lang1033 \tx720\fi-360\li720\emdash\tab Any nonprintable UNICODE characters (in the range 256-65535) are  represented in hexadecimal with a pipe character prefix  (e.g. |0123 represents character 0x123).  The hexadecimal number  must contain exactly four digits.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 UninitHelpAdvise\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b UninitHelpAdvise(}{\b HelpAdviseInfo *} {\i pha}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Peforms final cleanup of a {\b HelpAdviseInfo} structure, including  releasing the {\b IAdviseSink} pointer if necessary.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/ADVISE.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pha}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Caller-allocated structure that was  previously initialized using {\b InitHelpAdvise}.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 You must call {\b InitHelpAdvise} before calling {\b HelpSetAdvise}  and {\b HelpGetAdvise}, and {\b UninitHelpAdvise} when the object  that contains the {\b HelpAdviseInfo} structure is deleted.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VariantFromString\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b VariantFromString(}{\b VARIANT *} {\i pvarDst}{\b , LPCTSTR} {\i szSrc}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Initializes a VARIANT to contain the copy of an LPCTSTR string.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/DISPHELP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvarDst}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A caller-supplied VARIANT structure to  initialize.  The initial contents of {\i pvarDst} are ignored;  the caller does not need to call {\b VariantInit} before  calling {\b VariantFromString}.  Both {\i pvarDst}->{\i vt} and  {\i pvarDst}->{\i bstrVal} are initialized by this function.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i szSrc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The string to copy.  Can't be NULL.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par \trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Success.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VariantIO Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Provides a property bag implementation which supports {\b IPropertyBag}  as well as {\b IVariantIO}, {\b IManageVariantIO}, and  {\b IEnumVariantProperty}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IPropertyBag}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Allows properties to be read from and written to the  {\b VariantIO} object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IVariantIO}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 An alternative to {\b IPropertyBag} which allows the  caller to implement property-based persistence with less code.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IManageVariantIO}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Based on {\b IVariantIO}.  Allows the caller to  control how the methods of {\b IVariantIO} operate (e.g. whether the  {\b IVariantIO} is in loading mode or saving mode).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IEnumVariantProperty}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Allows the caller to enumerate the  properties that are currently in the {\b VariantIO} object.  Note that  {\b VariantIO} does not implement {\b IEnumVariantProperty::Clone} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use {\b AllocVariantIO} to create a {\b VariantIO} object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VariantIOOnPropertyBag Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Provides an implementation of {\b IVariantIO} (and {\b IManageVariantIO})  that operates on a given {\b IPropertyBag}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/AVIOOPB.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IVariantIO}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 An alternative to {\b IPropertyBag} which allows the  caller to implement property-based persistence with less code.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IManageVariantIO}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Based on {\b IVariantIO}.  Allows the caller to  control how the methods of {\b IVariantIO} operate (e.g. whether the  {\b IVariantIO} is in loading mode or saving mode).  Note that  {\b VariantIOOnPropertyBag} does not implement  {\b IManageVariantIO::DeleteAllProperties} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IPropertyBag}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Provides access to the same {\b IPropertyBag}  object that was given to {\b AllocVariantIOOnPropertyBag} as  the {\b IPropertyBag} to operate on.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use {\b AllocVariantIOOnPropertyBag} to create a  {\b VariantIOOnPropertyBag} object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VariantIOToMapDISPID Object\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par  \pard\plain \sa160\sl240 \fs21\lang1033 Provides an implementation of {\b IVariantIO} which is used to map a  property name to a DISPID (property number) or vice versa.  Can also  be used to get or set the value of that property.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/AVIOTMD.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b {\b IVariantIO}}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Typically used as a parameter to  {\b IPersistVariantIO::DoPersist} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use {\b AllocVariantIOToMapDISPID} to create a  {\b VariantIOToMapDISPID} object.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VariantPropertyClear\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b VariantPropertyClear(}{\b VariantProperty *} {\i pvp}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Frees data maintained in a {\b VariantProperty} structure.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/VPC.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The structure to clear.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function calls {\b SysFreeString} on {\i pvp}->{\i bstrPropName}  and {\b VariantClear} on {\i pvp}->{\i varValue}.\par  Unlike {\b VariantPropertyInit}, this function {\b does}  assume  that {\i pvp} was correctly initialized before this function  was called.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VariantPropertyInit\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b VariantPropertyInit(}{\b VariantProperty *} {\i pvp}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Initializes a {\b VariantProperty} structure.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/VPI.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The structure to initialize.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Unlike {\b VariantPropertyClear}, this function does not assume  that {\i pvp} contained valid data on entry.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VariantTypeNameToNumber\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b VARTYPE} {\b VariantTypeNameToNumber(}{\b char *} {\i sz}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Converts a VARTYPE string name to a VARTYPE number.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/VTNAME.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the VARTYPE value identified by string name {\i sz}.  On error, 0 (VT_EMPTY) is returned.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i sz}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The VARTYPE string name.  The case of {\i sz} doesn't  matter.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i sz} should contain the same string as the VT_ identifier name,  but without the "VT_" (e.g. "I2" should stored in {\i sz} to indicate  the type VT_I2).  If {\i sz} starts with a '#' character, then the  following number is interpreted as a VARTYPE value.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VariantTypeNumberToName\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b VariantTypeNumberToName(}{\b VARTYPE} {\i vt}{\b , char *} {\i pch}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Converts a VARTYPE value to a string name that can serve as the  name of the type.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/VTNUM.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i vt}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The type number to convert.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pch}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A buffer to store the string name in.  This buffer  should be large enough to hold _MAX_PATH characters.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If {\i vt} isn't a known type, then "#{\i vt}" (e.g "#42") is stored  in {\i pch}.  Otherwise, what's stored in {\i pch} is the same  as the VT_ identifier name, but without the "VT_" (e.g. "I2" is stored  in {\i pch} if {\i vt} is VT_I2).\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 WriteHTMLTagFromVariantIO\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b WriteHTMLTagFromVariantIO(}{\b IStream *} {\i pstream}{\b , IEnumVariantProperty *} {\i pevp}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Writes an HTML tag whose attributes are stored in an {\b VariantIO}  object to an {\b IStream}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/WHTMLTAG.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pevp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 An interface on the {\b VariantIO}  object containing the attribute name/value pairs.  The tag name  should be stored in {\i pevp} as the "_tag" property.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 WriteHTMLToken\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b WriteHTMLToken(}{\b IStream *} {\i pstream}{\b , LPLOLESTR} {\i wsz}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Writes an HTML token (given as an LPOLESTR) to an {\b IStream}  in ANSI format.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/WHTMLTOK.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wsz}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The token to write.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 WriteVariantProperty\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b WriteVariantProperty(}{\b IStream *} {\i pstream}{\b , VariantProperty *} {\i pvp}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Writes a {\b VariantProperty} to an {\b IStream} in a simple tagged  binary format.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/WVP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The property name/value pair to write.  If {\i pvp} is NULL, then this function writes a VariantPropertyHeader  containing {\i iType}==-1 and {\i cbData}==0 to mark the end of the  stream.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b VariantPropertyHeader} for a description of the format of  the data written to {\i pstream} by this function.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 WriteVariantPropertyToCSV\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b WriteVariantPropertyToCSV(}{\b IStream *} {\i pstream}{\b , VariantProperty *} {\i pvp}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Writes a {\b VariantProperty} to an {\b IStream} in CSV (Excel-readable  comma-delimited) format.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/WVPTCSV.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The property name/value pair to write.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 *{\i pvp} is written as a single line of text in the following format:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 {\i name} ,{\i type} ,{\i value} \par  \pard\plain \sa160\sl240 \fs21\lang1033 ...where {\i name}  is the property name, {\i type}  is the type  (a string returned by {\b VariantTypeNumberToName}), and {\i value} is the value (coerced to a string by {\b VariantChangeType}).  Each of these three strings is processed by {\b UNICODEToPrintableANSI}  before being written out.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 WriteVariantPropertyToHTML\par  \pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b WriteVariantPropertyToHTML(}{\b IStream *} {\i pstream}{\b , VariantProperty *} {\i pvp}{\b , DWORD} {\i dwFlags}{\b ) }\par \pard\plain \sa160\sl240 \fs21\lang1033 Writes a {\b VariantProperty} to an {\b IStream} in HTML format  as a "<PARAM>" tag.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/WVPTHTML.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pstream}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The stream to write to.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pvp}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The property name/value pair to write.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Currently unused.  Must be set to 0.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 *{\i pvp} is written as a single line of text in the following format:\par  \pard\plain \sa160\sl240 \fs21\lang1033 \li720 <PARAM name={\i name}  value={\i value} >\par  \pard\plain \sa160\sl240 \fs21\lang1033 ...where {\i name}  is the property name and {\i value}  is the value  (coerced to a string by {\b VariantChangeType}).  Each of these three strings is processed by {\b UNICODEToPrintableANSI}  before being written out.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ControlInfo Structure\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab UINT cbSize;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab LPCTSTR tszProgID;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab LPCTSTR tszFriendlyName;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab const CLSID * pclsid;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab HMODULE hmodDLL;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab LPCTSTR tszVersion;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iToolboxBitmapID;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwMiscStatusDefault;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwMiscStatusContent;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab GUID * pguidTypeLib;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwTypeLibFlags;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab AllocOCProc * pallocproc;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab ULONG * pcLock;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwFlags;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab ControlInfo* pNext;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab UINT uiVerbStrID;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} ControlInfo;\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Contains information used by {\b RegisterControls} to register and  unregister a control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/REG.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b cbSize}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The size of this structure (used for version  control).  Must be set to sizeof(ControlInfo).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b tszProgID}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The ProgID of the object, e.g.  "MYCTLLIB.TinyCtl.1".\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b tszFriendlyName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The human-readable name of the object  (at most 40 characters or so), e.g. "My Control".\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b pclsid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to the class ID of the object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b hmodDLL}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The module handle of the DLL implementing the  object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b tszVersion}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The version number of the object, e.g. "1.0".\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iToolboxBitmapID}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The resource ID of the toolbox bitmap of  the object, if the object is a control.  The resource must be located  in the same DLL specified by {\i tszDLLPath} and/or {\i hmodDLL}.  If {\i iToolboxBitmapID} is -1, it is ignored.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwMiscStatusDefault}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The MiscStatus bits (OLEMISC_XXX)  to use for all display apsects except DVASPECT_CONTENT.  Typically 0.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwMiscStatusContent}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The MiscStatus bits (OLEMISC_XXX)  to use for display aspect DVASPECT_CONTENT.  See the example below.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b pguidTypeLib}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The object's type library GUID, or NULL if  the object doesn't have a type library.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwTypeLibFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Type library flags.  I don't know what these  are yet (they're registered as TypeLib\\\{guid\}<version>\\Flags),  but 0 and 2 seem to be common values.  Ignored if {\i pguidTypeLib}  is NULL.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b pallocproc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Function which can allocate an instance  of the OLE control and return an {\b AddRef}'d {\b IUnknown} pointer  to it.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b pcLock}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a DLL lock count variable defined as a  global variable in your DLL.  This global variable maintains a count  of locks used by {\b IClassFactory::LockServer} .  To increment or  decrement this lock count, use {\b InterlockedIncrement} and  {\b InterlockedDecrement} instead of modifying it directly.  This will  ensure that access to the lock count is synchronized between your  control's server and the OCHelp-supplied class factory.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Zero or more of the following:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CI_INSERTABLE\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Marks the COM object as "Insertable".  Probably  should not be used for ActiveX controls.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CI_CONTROL\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Marks the COM object as a "Control".  Probably  should not be used for ActiveX controls.\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CI_MMCONTROL\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Marks the COM object as a "Multimedia Control".\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CI_SAFEFORSCRIPTING\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Marks the COM object as "safe-for-scripting"  meaning that the object promises that, no matter how malicious a  script is, the object's automation model does not allow any harm  to the user, either in the form of data corruption or security leaks.  If a control is not "safe-for-scripting", the user will receive a warning  dialog whenever the control is inserted on an untrusted page in  Internet Explorer (IE), asking whether the object should be visible from scripts.  (This is only at medium security level, at high security, the object  is never visible to scripts, and at low, always visible.)  If a  control, C1, can potentially contain another control, C2, which might  be unsafe, then C1 should probably not declare itself "safe-for-scripting".\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CI_SAFEFORINITIALIZING\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Marks the COM object as "safe-for-initializing"  meaning that it guarantees to do nothing bad regardless of the data with  which it is initialized.  From IE, the user will be given a warning  dialog (described above) if an untrusted page attempts to initialize  a control that is not "safe-for-initializing".\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CI_NOAPARTMENTTHREADING\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 By default, {\b RegisterControls} will register  a control as "apartment-aware".  If this flag is set, the control will  *not* be registered as apartment-aware.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b pNext}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to a {\i ControlInfo} struct for the next  control that {\b RegisterControls} should register.  Use this field to  chain together a linked-list of all the controls that {\b RegisterControls}  should register.  {\i pNext} should set to NULL for the last {\i ControlInfo}  struct in the list.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b uiVerbStrID}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A string resource ID.  The string is a definition  of an OLE verb applicable to the control.  The string is assumed to  have the following format:\par  <verb_number>=<name>, <menu_flags>, <verb_flags>\par  See help on {\b IOleObject::EnumVerbs}  for a description of each field.  {\b RegisterControls} will call {\b LoadString} to read all the  consecutively-numbered string resources beginning with {\i uiVerbStrID}  until either {\b LoadString} fails (i.e., the resource doesn't exist) or  an empty string is returned.  {\b RegisterControls} will  register/unregister each verb string it reads.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This structure is used by {\b RegisterControls} and  {\b HelpCreateClassObject}.\par  {\i Important:}  The objects pointed to by pointer fields of  {\i ControlInfo} must be defined statically in the DLL, since functions  that use {\i ControlInfo} holds onto this pointer.  This can be  accomplished by making {\i ControlInfo} and all the data it points to  be global variables/literals in your DLL.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 HostLWOCInfo Structure\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwFlags;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} HostLWOCInfo;\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Contains information about a {\b HostLW} control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/HOSTLW.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwFlags}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Flags that modify the behavior of the control.  These are the same SSWP_ flags specified in  {\b ISiteLW::SetSiteWindowParameters} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b IHostLWOC::GetInfo}  and {\b IHostLWOC::SetInfo}  for more  information.\par  This structure is defined in "HostLWOC.h".\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 LineOCInfo Structure\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iWidth;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab COLORREF rgb;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab POINT2 pt2;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} LineOCInfo;\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Contains information about a {\b Line} control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/LINE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iWidth}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The line's width (in pixels).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b rgb}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The line's color.  This must be an RGB color,  created using the {\b RGB} macro.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b pt2}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The line's position.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b ILineOC::GetInfo}  and {\b ILineOC::SetInfo}  for more  information.\par  This structure is defined in "LineOC.h".\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 POINT2 Structure\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab POINT apt[2];\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} POINT2;\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 An array of two POINT values, used to represent a geometrical element  such as a line segment.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/LINE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b apt[2]}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The two endpoints.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This structure is used by {\b LineOCInfo}, for example.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 PropPageHelperInfo Structure\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int idDialog;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int idTitle;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab HINSTANCE hinst;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab PropPageHelperProc pproc;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab IID iid;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwUser;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab IPropertyPageSite * psite;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab LPUNKNOWN * ppunk;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int cpunk;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab HWND hwnd;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BOOL fDirty;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BOOL fLockDirty;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} PropPageHelperInfo;\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Maintains information describing a property page.  Used by  {\b PropPageHelper}, but allocated by the object that aggregates  {\b PropPageHelper}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/PROPHELP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b idDialog}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 ID of propery page dialog resource.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b idTitle}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 ID of a string resource containing the page's title  (used on the page tab).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b hinst}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The instance of the DLL that contains the  resources specified by {\i idDialog} and {\i idTitle}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b pproc}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A callback function that receives property  page window messages.  {\i pproc} is similar to a DLGPROC but has  extra parameters: a pointer to this structure, and a pointer to  an HRESULT to be used when responding to the following special  messages:\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 WM_PPH_APPLY\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 {\i pproc} should apply any property page  changes to the objects {\i ppunk} that the property page  is operating on.  This is the same as {\b IPropertyPage::Apply} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 WM_PPH_HELP\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Identical to {\b IPropertyPage::Help} The WPARAM parameter of {\i pproc} contains the  LPCOLESTR argument of {\b IPropertyPage::Help} .\par  \pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 WM_PPH_TRANSLATEACCELERATOR\par  \pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Identical to  {\b IPropertyPage::TranslateAccelerator} The WPARAM parameter of {\i pproc} contains the  LPMSG argument of {\b IPropertyPage::TranslateAccelerator} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iid}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The interface that will be used to communicate with  objects that the property page will operate upon.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwUser}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Arbitrary information stored by the caller of  {\b AllocPropPageHelper}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b psite}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The frame's page site object.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b ppunk}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 An array of {\i cpunk} pointers to the objects  that this property page will operate upon.  The interface ID of  each element of {\i ppunk} is actually {\i iid}.  If {\i cpunk}==0,  then presumably none of the objects that the property page was  requested to operate upon supports the interface {\i iid}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b cpunk}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of elements in {\i ppunk}.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b hwnd}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The property page window.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b fDirty}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 TRUE if changes to the property page have not yet  been applied to the objects in {\i ppunk}, FALSE otherwise.  (If TRUE,  the Apply button should be visible.)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b fLockDirty}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If TRUE, {\i fDirty} should not be changed.  {\i fLockDirty} is TRUE during initialization of the property page  (during which time it's inappropriate to be telling the property  page that it's dirty).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b AllocPropPageHelper} for more information.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SPRITE_BOUNDARYACTION\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 enum SPRITE_BOUNDARYACTION \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_BOUNDARYACTION_BOUNCE,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_BOUNDARYACTION_WRAP,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_BOUNDARYACTION_STICK\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \};\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 What to do when a {\b Sprite}'s time-varying parameter (e.g., translucency  or rotation) hits a "boundary" (i.e., a minimum or maximum value).\par \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_BOUNDARYACTION_BOUNCE}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Reverse direction.  That is, if at the minimum value, begin stepping toward  the maximum; if at the maximum, begin stepping toward the minimum.  (ordinal 0)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_BOUNDARYACTION_WRAP}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Wrap around.  That is, if at the minimum value, jump to the maximum; if at  the maximum, jump to the minimum.  (ordinal 1)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_BOUNDARYACTION_STICK}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Don't change.  That is, if at the minimum or maximum value, remain stuck  at that value.  (ordinal 2)\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SPRITE_ROT_VALS\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 enum SPRITE_ROT_VALS \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MIN_ROT,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MAX_ROT,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_INIT_ROT,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MIN_ROTSTEP,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MAX_ROTSTEP,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_INIT_ROTSTEP,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MIN_ROTDELAY,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MAX_ROTDELAY\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \};\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Possible values for the fields of {\b SpriteRotationInfo} and the various  rotation-related properties of {\b Sprite}.  All rotation values are  measured in degrees.  For 2D rotation, rotation values increase in the  counter-clockwise direction from the positive x-axis.  For 3D rotation,  rotation values increase out of the plane of the display and decrease  into the plane of the display.\par \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MIN_ROT}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The mimimum possible rotation (in degrees).  (value = -360)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MAX_ROT}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The maximum possible rotation (in degress).  (value = 360)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_INIT_ROT}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The default initial rotation (in degrees).  (value = 0)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MIN_ROTSTEP}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The minimum possible rotation step (in degrees).  (value = -360)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MAX_ROTSTEP}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The maximum possible rotation step (in degrees).  (value = 360)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_INIT_ROTSTEP}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The default initial rotation step (in degrees).  (value = 0)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MIN_ROTDELAY}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The minimum possible rotation step delay (in animation ticks).  (value = 0)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MAX_ROTDELAY}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The maximum possible rotation step delay (in animation ticks).  (value = 100)\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SPRITE_ROTATION_TYPE\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 enum SPRITE_ROTATION_TYPE \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT_NONE,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT2D_CENTER,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT2D_TOPLEFT,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT2D_TOPRIGHT,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT2D_BOTTOMRIGHT,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT2D_BOTTOMLEFT,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT2D_TOPMIDPOINT,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT2D_RIGHTMIDPOINT,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT2D_BOTTOMMIDPOINT,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT2D_LEFTMIDPOINT,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT3D_TOPEDGE,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT3D_LEFTEDGE,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT3D_BOTTOMEDGE,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT3D_RIGHTEDGE,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT3D_VERTICALMIDLINE,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT3D_HORIZONTALMIDLINE,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT3D_DIAGONALDOWN,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_ROT3D_DIAGONALUP\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \};\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Possible types of {\b Sprite} rotation.  Possible values for  {\b Sprite::RotationType}  and {\b iType} .\par \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT_NONE}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 No rotation.  (ordinal 0)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT2D_CENTER}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 2D rotation about the {\b Sprite}'s center.  (ordinal 1)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT2D_TOPLEFT}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 2D rotation about the {\b Sprite}'s top-left corner.  (ordinal 2)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT2D_TOPRIGHT}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 2D rotation about the {\b Sprite}'s top-right corner.  (ordinal 3)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT2D_BOTTOMRIGHT}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 2D rotation about the {\b Sprite}'s bottom-right corner.  (ordinal 4)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT2D_BOTTOMLEFT}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 2D rotation about the {\b Sprite}'s bottom-left corner.  (ordinal 5)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT2D_TOPMIDPOINT}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 2D rotation about the midpoint of the {\b Sprite}'s top edge.  (ordinal 6)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT2D_RIGHTMIDPOINT}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 2D rotation about the midpoint the {\b Sprite}'s right edge.  (ordinal 7)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT2D_BOTTOMMIDPOINT}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 2D rotation about the midpoint of the {\b Sprite}'s bottom edge.  (ordinal 8)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT2D_LEFTMIDPOINT}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 2D rotation about the midpoint of the {\b Sprite}'s left edge.  (ordinal 9)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT3D_TOPEDGE}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pseudo-3D rotation into or out of the plane of the display using  the {\b Sprite}'s top edge as the axis of rotation.  (ordinal 10)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT3D_LEFTEDGE}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pseudo-3D rotation into or out of the plane of the display using  the {\b Sprite}'s left edge as the axis of rotation.  (ordinal 11)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT3D_BOTTOMEDGE}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pseudo-3D rotation into or out of the plane of the display using  the {\b Sprite}'s bottom edge as the axis of rotation.  (ordinal 12)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT3D_RIGHTEDGE}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pseudo-3D rotation into or out of the plane of the display using  the {\b Sprite}'s right edge as the axis of rotation.  (ordinal 13)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT3D_VERTICALMIDLINE}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pseudo-3D rotation into or out of the plane of the display using  the {\b Sprite}'s vertical midline as the axis of rotation.  (ordinal 14)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT3D_HORIZONTALMIDLINE}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pseudo-3D rotation into or out of the plane of the display using  the {\b Sprite}'s horizontal midline as the axis of rotation.  (ordinal 15)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT3D_DIAGONALDOWN}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pseudo-3D rotation into or out of the plane of the display using  the diagonal from the {\b Sprite}'s top-left to bottom-right corners  as the axis of rotation.  Note: This rotation type is not currently  implemented.  (ordinal 16)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_ROT3D_DIAGONALUP}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pseudo-3D rotation into or out of the plane of the display using  the diagonal from the {\b Sprite}'s bottom-left to top-right corners  as the axis of rotation.  Note: This rotation type is not currently  implemented.  (ordinal 17)\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SPRITE_TRANS_VALS\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 enum SPRITE_TRANS_VALS \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MIN_TRANS,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MAX_TRANS,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MIN_TRANSSTEP,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MAX_TRANSSTEP,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MIN_TRANSDELAY,\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab SPRITE_MAX_TRANSDELAY\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \};\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Possible values for the fields of {\b SpriteTranslucencyInfo} and the  various translucency-related properties of {\b Sprite}.\par \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MIN_TRANS}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The minimum possible opacity (i.e., completely translucent).  (value = 0)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MAX_TRANS}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The maximum possible opacity (i.e., completely opaque).  (value = 255)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MIN_TRANSSTEP}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The minimum possible translucency step.  (value = -255)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MAX_TRANSSTEP}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The maximum possible translucency step.  (value = 255)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MIN_TRANSDELAY}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The minimum possible translucency step delay (in animation ticks).  (value = 0)\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SPRITE_MAX_TRANSDELAY}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The maximum possible translucency step delay (in animation ticks).  (value = 100)\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SpriteBitmapInfo Structure\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab TCHAR[MAX_PATH + 1] szBitmapPath;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int cFramesTotal;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int cFramesAcross;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int cFramesDown;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} SpriteBitmapInfo;\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Contains about the bitmap associated with a {\b Sprite} control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b szBitmapPath}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The file system path to the Sprite's bitmap file; if  szBitmapPath[0] is '\\0', the Sprite isn't currently associated  with a bitmap.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b cFramesTotal}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The total number of frames in the bitmap; less than  {\b cFramesAcross}  * {\b cFramesDown}  if some frames in the last row are  unused.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b cFramesAcross}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of frames running across the bitmap (i.e., #columns);  less than {\b cFrames}  / {\b cFramesDown}  if some frames in the last  row are unused.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b cFramesDown}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of frames running down the bitmap (i.e., #rows); less  than {\b cFrames}  / {\b cFramesAcross}  if some frames in the last  row are unused.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b ISprite::GetInfo}  and {\b ISprite::SetInfo}  for more  information.\par  This structure is defined in "isprite.h".\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SpriteQuadrangleInfo Structure\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab POINT vertex[4];\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab LONG coord[8];\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} SpriteQuadrangleInfo;\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Information about a {\b Sprite} control's BLT-ing quadrangle.  Note: this  data structure is implemented as a union.  Therefore, the coordinates of  the quadrangle may be accessed as four vertices or as eight individual  x- and y-coordinates, whichever is most convenient.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b vertex[4]}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The four vertices of the quadrangle in the order (x1,y1), (x2,y2),  (x3,y3), and (x4,y4).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b coord[8]}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The eight coordinates of the vertex in the order x1, y1, x2, y2, x3,  y3, x4, y4.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SpriteRotationInfo Structure\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iType;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iNow;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iMin;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iMax;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iSpeed;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iDelayNow;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iDelayAtMin;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iDelayAtMax;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab {\b SPRITE_BOUNDARYACTION} edgeAction;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} SpriteRotationInfo;\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Contains rotation information about a {\b Sprite} control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iType}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The rotation type.  See {\b SPRITE_ROTATION_TYPE} for possible values.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iNow}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The initial rotation value.  Must be between  {\b SPRITE_MIN_ROT}  and  {\b SPRITE_MAX_ROT} , and between  {\b iMin}  and {\b iMax} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iMin}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The minimum rotation value.  Must be between {\b SPRITE_MIN_ROT}  and  {\b SPRITE_MAX_ROT} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The minimum rotation value.  Must be between {\b SPRITE_MIN_ROT}  and  {\b SPRITE_MAX_ROT} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iSpeed}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The change in rotation which occurs with every call to the Sprite's  {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_ROTSTEP}  (slowest) and  {\b SPRITE_MAX_ROTSTEP}  (fastest).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iDelayNow}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite rotation stepping that occurs when the Sprite first appears.  Measured in terms of the number of calls to the Sprite's {\b IAnimate::Tick}  method.  Must be between {\b SPRITE_MIN_ROTDELAY}  (no delay) and  {\b SPRITE_MAX_ROTDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iDelayAtMin}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite rotation stepping that occurs when the Sprite hits its  minimum rotation.  Measured in terms of the number of calls to  the Sprite's {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_ROTDELAY}  (no delay) and  {\b SPRITE_MAX_ROTDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iDelayAtMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite rotation stepping that occurs when the Sprite hits its  maximum rotation.  Measured in terms of the number of calls to  the Sprite's {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_ROTDELAY}  (no delay) and  {\b SPRITE_MAX_ROTDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b edgeAction}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 What happens after the rotation hits {\b iMin}  or {\b iMax} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b ISprite::GetInfo}  and {\b ISprite::SetInfo}  for more  information.\par  This structure is defined in "isprite.h".\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SpriteTranslucencyInfo Structure\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iNow;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iMin;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iMax;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iSpeed;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iDelayNow;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iDelayAtMin;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iDelayAtMax;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab {\b SPRITE_BOUNDARYACTION} edgeAction;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} SpriteTranslucencyInfo;\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Contains translucency information about a {\b Sprite} control.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/AUTODOC/SPRITE.D\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iNow}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The initial translucency value.  Must be between  {\b SPRITE_MIN_TRANS}  (transparent) and  {\b SPRITE_MAX_TRANS}  (opaque), and must be between  {\b iMin}  and {\b iMax} .\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iMin}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The minimum translucency value.  Must be between  {\b SPRITE_MIN_TRANS}  (transparent) and  {\b SPRITE_MAX_TRANS}  (opaque).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The maximum translucency value.  Must be between  {\b SPRITE_MIN_TRANS}  (transparent) and  {\b SPRITE_MAX_TRANS}  (opaque).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iSpeed}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The change in translucency which occurs with every call to the Sprite's  {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_TRANSSTEP}  (slowest) and  {\b SPRITE_MAX_TRANSSTEP}  (fastest).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iDelayNow}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite translucency stepping that occurs when the Sprite first appears.  Measured in terms of the number of calls to the Sprite's {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_TRANSDELAY}  (no delay) and  {\b SPRITE_MAX_TRANSDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iDelayAtMin}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite translucency stepping that occurs when the Sprite hits its  minimum translucency.  Measured in terms of the number of calls to  the Sprite's {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_TRANSDELAY}  (no delay) and  {\b SPRITE_MAX_TRANSDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iDelayAtMax}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The delay in Sprite translucency stepping that occurs when the Sprite hits its  maximum translucency.  Measured in terms of the number of calls to  the Sprite's {\b IAnimate::Tick}  method.  Must be between  {\b SPRITE_MIN_TRANSDELAY}  (no delay) and  {\b SPRITE_MAX_TRANSDELAY}  (longest delay).\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b edgeAction}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 What happens after the translucency hits {\b iMin}  or {\b iMax} .\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b ISprite::GetInfo}  and {\b ISprite::SetInfo}  for more  information.\par  This structure is defined in "isprite.h".\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VariantProperty Structure\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BSTR bstrPropName;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab VARIANT varValue;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} VariantProperty;\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 Contains the name and value of a property.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCMISC/AVIO.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b bstrPropName}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The name of the property.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b varValue}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The value of the property.\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IEnumVariantProperty} uses this structure.\par  \pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par  \pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VariantPropertyHeader Structure\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab int iType;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab unsigned int cbData;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} VariantPropertyHeader;\par  \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par  \pard\plain \sa160\sl240 \fs21\lang1033 The beginning part of a record (in a stream) that contains the  serialized data of a {\b VariantProperty}.\par  \pard\plain \sa160\sl240 \fs21\lang1033 Defined in: C:/DEV/MMCTL21/SRC/OCHELP/RVP.CPP\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b iType}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The type of the record.  If this value is greater than  or equal to zero, then it represents a VARTYPE, and the record  represents a property name/value pair, and the type of the value is  specified by the VARTYPE.  In this case, the data following the  {\b VariantPropertyHeader} consists of the property name followed by  the property value (coerced to a string value by {\b VariantChangeType});  each string is a non-null-terminated Unicode string preceded by an  unsigned 32-bit integer count of Unicode characters.  {\i iType} is  not a known VARTYPE value, then the record should be skipped when read  (by skipping the {\i cbData} bytes that follow the  {\b VariantPropertyHeader} rather than generating an error.\par  \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b cbData}\par  \pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of bytes of data that follow  this {\b VariantPropertyHeader}.  In other words, the total length  of the header is {\i cbData} + sizeof({\b VariantPropertyHeader}).\par  \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This structure helps define the file format used by  {\b WriteVariantProperty} and {\b ReadVariantProperty}.\par
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\src\javacab\instructions.txt ===
Contacts in the Java team for this are

Mike Sliger
Patrick McCormick

They report to Mike D. Smith

Instructions:

Your dxmedia.cab drop failed the BVT tests because the files were packaged under ms\dxmedia instead of com\ms\dxmedia.  This is an easy mistake with dubuild; I've appended the following example of a session that builds a CAB and checks it to ensure it is packaged right.

--Pat

D:\>cd \projects\JPMBrowser

D:\projects\JPMBrowser>path
PATH=C:\WIN95;C:\WIN95\COMMAND;C:\SDK-JAVA.20\BIN;

D:\projects\JPMBrowser>dubuild JPM.cab . /d "JPM Browser" /I *.class

Microsoft (R) Distribution Unit Builder - Version 4.79.2220
Copyright (C) Microsoft Corporation 1997. All rights reserved.


D:\projects\JPMBrowser>extract /d jpm.cab
Microsoft (R) Diamond Extraction Tool - Version (16) 1.00.0530 (04/3/95)
Copyright (c) Microsoft Corp 1994-1995. All rights reserved.

 Cabinet jpm.cab

07-30-1997  5:50:32p ----           295 JPM Browser.osd
07-20-1997  6:38:42p A---         1,960 com\ms\JPMBrowser\JPMPanel.class
07-20-1997  6:38:42p A---           678 com\ms\JPMBrowser\BrowserFrame.class
07-20-1997  6:38:42p A---         1,289 com\ms\JPMBrowser\BrowserApplet.class
                 4 Files          4,222 bytes

The OSD file above is automatically generated by DUBUILD.  It contains a list of all Java packages found and sets the version number to be 1.0.0.0.

Make sure that your packages are in the com\ms subdirectory as seen above.

------------------------------------------------------------------------------------------
Since we need to call in COM, we have to be trusted classes, part of the system.

You need to add the parameters -S * to your command line to mark all packages as SYSTEM packages:

	C> dubuild dajava.cab dajava -S * ...
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\src\javacab\faqjpm.doc ===
Microsoft Word Document MSWordDoc Word.Document.8FAQ for the Java Package Manager Title _PID_GUIDFAQ for the Java Package Manager Patrick McCormick Normal.dot Patrick McCormick Microsoft Word 8.0Developer FAQ for the Java Package Manager MICROSOFT CONFIDENTIAL Last Changed July 24, 1997  TOC \n \t "Heading 2,3"  Q1.  What is the Java Package Manager? Q2.  How do I use non-JPM aware Java development tools? Q3.  Can I extract individual packages from the Package Manager? Q4.  How can I list currently installed packages? Q5.  What is the order of a class search? Q6.  What is a Distribution Unit? Q7.  How do I make a Distribution Unit for my Java classes? Q8.  How do I provide updates for a Distribution Unit? Q9.  How do I install a distribution unit via IE4? Q10.  How do I install a distribution unit or Java ZIP from the command line?  AUTONUM    What is the Java Package Manager? The Package Manager for Java is used by the Microsoft Java Virtual Machine to organize Java packages.  A Java package is a set of Java classes that are related; often they form a toolkit or an application.  The current method of installing and using Java packages consists of placing all the class files into a ZIP, JAR, or CAB file and then placing this file at the end of the environment variable named CLASSPATH.  The CLASSPATH is a list of directories and archives that contain class files.  When a Java Virtual Machine needs a class, it searches through each entry of the class path to find it. After intensive Java usage, the CLASSPATH can become filled with references to packages that are old or unused.  It is difficult to know what packages are needed and which ones are not.  The CLASSPATH may even have references to different versions of the same package!  To address these and other concerns, the Package Manager can be used to organize Java packages, supplanting the CLASSPATH variable. Package Management offers: Version Control.  Package version numbers are tracked, allowing Java programs and installers to intelligently update the system. Improved Security.  Instead of having to fully trust all installed classes, the package manager stores the allowed capabilities of each package, as verified by Authenticode. Ease Of Use.  Java programs can now install packages without having to alter the CLASSPATH and require a reboot. Compatibility.  The JPM will accept ZIP, CAB, and uncompressed JAR formats for installation. Cross-Platform Flexibility.  Applications control the JPM through COM, DLL, and Java interfaces. Scalability.  JPM can quickly search a large number of libraries, unlike the CLASSPATH which fast becomes unwieldy and makes class-searching bugs hard to uncover. When a Java package is installed in the Package Manager, the original archive file is removed, and the classes are stored internally.  Thus, developers need to use the clspack command (described in Q3 below) to generate the ZIP files used by Java compilers.  All of the standard Java packages shipped with this version of Internet Explorer 4 are installed in the Package Manager, except for the AFC.  AFC will be in  the package manager in the final version.  AUTONUM    How do I use non-JPM aware Java development tools? You can create an old-style ZIP set of packages using the clspack tool, which is supplied with the VM. This tool allows you to take packages that are currently installed via the package manager, and write their contents into a ZIP file. The easiest way to use clspack is to type: clspack  auto.  This will create a single CLASSES.ZIP in your %WINDIR%\Java\Classes directory that contains all classes stored in the package manager.  The Microsoft Java compiler looks in this location by default for classes, so there is no need to set your CLASSPATH environment variable. For other compilers that do not check this location by default, set your CLASSPATH environment variable with: set CLASSPATH=%WINDIR%\Java\Classes\Classes.zip before running the compiler.  It s a good idea to place this command in a batch file for easy use.  AUTONUM    Can I extract individual packages from the Package Manager? The clspack tool can also be used to extract individual packages. The usage is: clspack myzipfile.zip listfile Here, listfile is the name of a text file containing the list of packages to write to the zip, say: java.io com.ms.util com.ms.util.cab com.ms.fx  AUTONUM    How can I list currently installed packages? The clspack tool can list all of the packages currently installed in the package manager with: clspack -dump  AUTONUM    What is the order of a class search? When a class is requested, the package manager searches for it in the following order: Check explicitly-specified path (generally supplied via the -classpath command-line option)  Check HKLM\Software\Microsoft\Java VM\DevClasspath registry entry Search installed classes Check HKLM\Software\Microsoft\Java VM\TrustedClasspath registry entry Check HKLM\Software\Microsoft\Java VM\TrustedLibsDirectory registry entry Check HKLM\Software\Microsoft\Java VM\Classpath registry entry Check HKLM\Software\Microsoft\Java VM\LibsDirectory registry entry Check CLASSPATH local environment variable Packages installed through the package manager will override classes sitting on any classpaths stored in the registry except for DevClasspath.  This is for both performance and compatibility.  However, there are still occasions when developers may want to temporarily override the package manager with a registry setting. To handle this, there is now a new class path that the VM supports, called the DevClasspath.  This works just like the old class path, but its priority in the search order is different.  Classes on the DevClasspath will be used before classes installed through the package manager, while classes on the old class path won't. To set your DevClasspath, make the following registry entry: HKLM\Software\Microsoft\Java VM\DevClasspath=<class path (string value)>  AUTONUM    What is a Distribution Unit? A Distribution Unit (DU) is a transport standard for applications, libraries, etc.  It is a CAB file that contains a Distribution Unit Profile (DUP) which contains details on what version the DU is, the versions of the contents of the DU, and how to install the contents of the DU.  DUs are handled by the Code Download feature of Internet Explorer 4.0.  Simply place your DU on an HTML page with the <EMBED> or <OBJECT> tags and Internet Explorer will automatically install it onto client systems. If a DU contains Java packages, it invokes the JPM to install them. More information on DUs is available in the DU specification.  AUTONUM    How do I make a Distribution Unit for my Java classes? To make a DU for a set of Java packages, use the dubuild tool from the JPM.  Given a tree of Java classes, it will bundle the tree into a CAB file and create an OSD that has an entry for each package in the tree. For example, given the directory tree: C:\tree  ---- tools +- image then: DUBuild first.cab tree /N MyProductBits will create c:\first.cab with the packages tree.tools and tree.image.  AUTONUM    How do I provide updates for a Distribution Unit? It is possible to create  delta  DUs that consists only of changed packages and have pointers to a secondary   DU that contains the other unchanged packages.  To do this, invoke DU this way: DUBuild second.cab tree first.cab This creates a cabinet named  second.cab  that has only the changed packages in the tree from the time first.cab was created.  The DUP in second.cab points to first.cab for all unchanged packages.  Note that a package is considered changed if any one of the files inside has been modified since the time first.cab was created.  AUTONUM    How do I install a distribution unit via IE4? In IE4, use the following HTML to install your distribution unit: <OBJECT   classid= clsid:00202ACD-ABCD-ABCD-ABCD-020202023423   codebase= myjava.cab#version=1,0,100,3 </OBJECT> where you replace the classid parameter with a GUID for your DU, and place your DU filename and version in the codebase parameter.  AUTONUM    How do I install a distribution unit or Java ZIP from the command line? To install a package into the JPM, first put it into a standard ZIP or CAB file with OSD.  Then use the JPM RUNDLL interface as follows: rundll32 c:\windows\system\msjava.dll,JavaPkgMgr_Install <filename>,<file type>,<hi version>,<lo version>,<build>,<package flags>,<install flags>,<namespace> File Type: 0=CAB 1=ZIP Package Flags: 0=System class 1=Non system class 2=Needs trusted source Install Flags: 1=No version check 2=No signer check 4=Autodetect packages 8=Delete input file A sample command line would be: rundll32 c:\windows\system\msjava.dll,JavaPkgMgr_Install myclasses.zip,1,4,79,2151,0,12 }urolfc`] |vspm
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\tools\toolsrc\quadgrid\readme.txt ===
Description

    quadgrid is a tool that generates quadrilateral meshes at a given
    resolution.  This program generates a VRML1 file that goes to the standard
    ouptut stream.  Such meshes are useful for well-illuminated walls, since
    light sources such as spotlights or attenuated lights have enough vertices
    to show good, smooth dropoffs.

    Note that the generated panel is in the Z=0 plane, and both X and Y range
    from -1 to +1.

Exmaple Uses

    quadgrid 10    >panel10x10.wrl      // Generates a 10x10 panel
    quadgrid 10 20 >panel10x20.wrl      // Generates a 10x20 panel
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\tools\x86\glu\readme.txt ===
To build libtess.lib:
1) Run expand from %AP_ROOT%\tools\x86\glu
1) tree copy the entire src directory to %AP_ROOT%\src\appel\libtess.
   (tc src %AP_ROOT%\src\appel\libtess)
2) nmake fresh from %AP_ROOT%\src\appel\libtess directory
3) libtess.lib will be built in %AP_ROOT%\build\win\debug(ship)\libtess.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\tools\x86\aactive\readme.txt ===
This directory contains files associated with the AudioActive engine.


./inc contains AudioActive header files

./lib contains AudioActive library files

./doc contains help and doc files

NOTE: I have mangled the official names of the files so they can be saved within slm.
      the dll, aactive.dll, should be installed on the target machine as: audioactive.dll
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\tools\x86\icecap\faq.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Internal Development Tools IceCAP Frequently Asked QuestionsIceCAP Frequently Asked Questions Normal.dot G. S. Rana Microsoft Word for Windows 95IceCAP Frequently Asked Questions Last updated:   SAVEDATE \@ "d MMMM, yyyy" \* MERGEFORMAT  24 May, 1996 When REPORT.EXE is run, it displays: ReadRecords unknown record type 0; skipping remaining records. This generally means that ICAP.DLL was unable to close the .MEA file properly at the end of the profile run. The resulting report should still be correct -- all that has happened is that REPORT has skipped the part of the .MEA file that did not contain real records. This can happen if you terminate your application externally, or if your application calls TerminateProcess or TerminateThread to exit. ICAP.DLL closes (and truncates) the .MEA file when it receives a DLL_PROCESS_DETACH notification. A telltale sign that this has occurred is if your .MEA file is exactly 33,554,432 bytes long (32M), since ICAP.DLL creates a memory mapped file of that size and truncates it at the end of the profile run. A separate utility TruncMEA can be used to truncate the unused records and fix this problem. Please see TruncMEA.DOC on the IceCAP share for more information on this utility. Can IceCAP read PDBs created with VC 4.1? Yes. Please note that IceCAP 3.1 no longer requires MSPDB4x.DLL.  Instead it requires IMAGEHLP.DLL v 1242 or higher.  IMAGEHLP.DLL understands both version 4.1 and 4.0 PDB files. When REPORT.EXE is run, it displays: WARNING: Context switch during time delta calculation  substituting 0 for delta. What does this warning mean? What is happening here is that a context switch occurred while the portion of the code (in VCYCLE.VxD), where thread times are calculated, was being executed. It is easy to identify the functions where such context switch occurred, the times reported for such functions are reported as 0. The amount of code where such conflict occurs is minimal and number of functions that are impacted should be low.  IceCAP 3.1 includes a fix for this problem. When I profile my application on NT 4.0, the number of page faults is sometimes higher than when the application is profiled on NT 3.51. Does IceCAP report more page fault information for NT 4.0 than NT 3.51? With NT 4.0, kernel faults in the context of the process are reported as working set changes along with the user-mode changes. These pages were probably being faulted on NT 3.51 as well, but not reported. It is simply a case of NT 4.0 providing more information than NT 3.51. Reporting of system calls can be suppressed by using the -NOSYSTEM option. What is the difference between Total time and Attributed time? The sum of time that is attributed to functions listed in the body of the report is known as Total attributed time. The time that is used to calculate % calculations is called Total time. Total time and Total attributed time are rarely equal. It is best to explain this difference by using the following scenario.  Assuming profile=0 in ICAP.INI, and application consists of the following code: main()    preA();    preB();    StartCAP();    .. other code    A();    B();    ... other code    C();    .. other code    StopCAP();    postA();    postB(); The body of the report will list functions A, B, and C (but not main). The time spent in A, B, and C is the total attributed time. The time spent from StartCAP() to StopCAP() is the total time. Just like total time is not same as total attributed time, total pages are not same as total attributed pages.  The total time and total code and data pages used to calculate the %s in the body of the report, and include all time and all page faults between the StartCAP and StopCAP calls.  Everything before or after these calls is neither counted towards total time or total pages nor reported. The trace output will include all time and all page faults between the StartCAP and StopCAP calls. The body of the report includes only the attributed time and page faults. The trace will not include anything before the StartCAP call or after the StopCAP call. The un-attributed time and page faults at the beginning are listed in the trace output under the first trace point, i.e. call to first profiled function (A() in this example). The un-attributed time and page faults in the middle of profile run (other code between B() and C(), for example) are reported at the first next trace point (entry to C() in this case). The un-attributed time and page faults at the end of the profile (other code after return from C() and before StopCAP in the example) are listed at the trace point for entry to StopCAP(). If profiling is always ON (profile=1) and IceCAP APIs were not used then all page faults before the first profile event (un-attributed page faults in the beginning) are reported at the first trace point (call to first function). The un-attributed page faults at the end of the application (page faults after return from last profiled function) are not reported. When I run REPORT.EXE with -SORTBY:EXCLCODE switch, the REPORT.EXE GPFs. There is a known bug in IceCAP 3.0 and 3.1 where using memory related switches (-INCLCODE, EXCLCODE, INCLDATA, etc.,) on a MEA file which does not have memory profiling data, can cause REPORT.EXE to crash. 25June1996 Normal Heading 1 Heading 3 Heading 4 Default Paragraph Font Question .#\\Gsrana1\c$\icap\docs\user\faq.doc .#\\GSRANA1\C$\icap\docs\user\faq.doc .#\\GSRANA1\C$\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq2.doc G. S. Rana C:\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq.doc @\\GSRANA\HP5L Ne00: winspool HP LaserJet 4L \\GSRANA\HP5L etter \\GSRANA\HP5L etter Times New Roman Symbol Arial Courier New !IceCAP Frequently Asked Questions G. S. Rana
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\tools\x86\icecap\readme.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Internal Development Tools M ConfidentialM Confidential G. S. Rana Normal.dot G. S. Rana Microsoft Word for Windows 95M Confidential IceCAP 3.1, Release notes May 14, 1996 For questions about this document, please contact GSRana. What is IceCAP? IceCAP is a call-attributed execution and memory profiler. It is designed to profile Win32 applications running on Windows NT or Windows 95. IceCAP can be used to answer the question: "What time and memory resources did an application use as it went from point A to B?" IceCAP and IceCAP technology is currently Microsoft Confidential and is for internal use at Microsoft. Please do not discuss it outside of Microsoft. For detailed discussion on using IceCAP please read ICECAP31.DOC on IceCAP 3.1 share (\\toolsvr\tools\toolbox\icecap\). Requirements NT 3.5x, 4.0 or Win95 running on 486, Pentium, or Pentium Pro machines with 40 Mb free hard disk space. s new in IceCAP 3.1? Improved Win95 thread time support  - fewer  context switch during delta calculation  warnings. Make sure you pick up the new VCYCLE.VXD! Support for BBT (previously known as Lego) binaries (as long as they don t use PDB symbol files; this will be fixed soon). Make sure you pick up the new IMAGEHLP.DLL! In-process memory profiling! You no longer have to use ICECAP.EXE to profile your application for memory. ICECAP.EXE runs an application as a debugging process, which can slow down the execution times. To use this feature, do the following: Set Pages=All or Pages=New in the ICAP.INI file. Run your application as you normally would for execution profiling, i.e., without using ICECAP.EXE. Trace output now also includes: Pagelists (memory information) for every profiled event. Delta pages for every profiled event. Inclusive/Exclusive stats for both time and memory at every call return. A new option NOATTRIBTRACE has been added to suppress this output, if so desired. Pagelist output now shows data pages separated into STACK and DATA. For this feature to take effect, the MEA file must have been generated with IceCAP 3.1 ICAP.DLL. New APIs: StartCAPAll, StopCAPAll, SuspendCAPAll, ResumeCAPAll, These APIs can be used to start or suspend profiling for the whole process, i.e. all threads. (StartCAP/ StopCAP/ SuspendCAP/ ResumeCAP APIs are thread specific.) IceCAP 3.0 s SetJmp handling was inefficient. We have redesigned IceCAP s SetJmp handling to address this issue. ICAP.INI NOIMPORT option for disabling import patching of specific functions and modules. A new option NOFUNCLIST can be used to suppress the caller/called function list part of the report. IceCAP APIs (StartCAP, SuspendCAP, etc.,) now return start/suspend counts. This information can be used to detect unbalanced API (StopCAP/SuspendCAP, etc.,) calls. Support for NT 4.0 fibers.  All ICAP.INI options are now reported in the report header. -suppress:icap is no longer implicitly set when report run on memory profiles. ICAP.DLL now looks for ICAP.INI file in the current directory first. Fixes a problem where ICAP.DLL could fault after calling _chkstck or _alloca_probe. Known issues: Report.exe is not able to resolve symbol names for binaries whose debug information is in a .PDB file AND which have been run through the Basic Block Tools (BBT).  If the debug information was not put in a .PDB file or if the binary was not run through BBT, then Report.exe will resolve the symbol names correctly. Installation IceCAP 3.1 is available on \\toolsvr\tools\toolbox\icecap. To install IceCAP 3.1 on your machine: Copy X86\PENTER.LIB, X86\ICAP.LIB to your library directory. Copy ICAPEXP.H to your include directory (also copy PROLOGUE.INC if you use it). Copy X86\REPORT.EXE, X86\ICAPCTRL.EXE, X86\ICECAP.EXE, and X86\ICAP.DLL to a directory on your path. For Windows NT, also copy: PSAPI.DLL (from NT SDK or X86\NT directory) to a directory on your path. For Win95, also copy: X86\WIN95\VCYCLE.VXD to [windows path]\SYSTEM directory. X86\WIN95\VMM.VXD to [windows path]\SYSTEM\VMM32 directory. X86\WIN95\MEMMON.VXD to [windows path]\SYSTEM directory. X86\WIN95\PSAPI.DLL to a directory on your path. PSAPI.DLL for Win95 is different than, and a subset of the PSAPI.DLL that comes with NT SDK.  Make sure you copy the correct PSAPI.DLL from IceCAP share. Additional steps necessary on Windows 95: In [windows path]\SYSTEM.INI add the following entry to the [386Enh] section: device=[windows path]\system\memmon.vxd Restart the system (This is an important step!) Notes REPORT.EXE requires MSPDB41.DLL, MFC40.DLL, MSVCRT.DLL, and MSVCRT40.DLL. You will find copies of these in the X86\VC4 sub-directory if you don't already have them on your machine. REPORT.EXE requires IMAGEHLP.DLL. You will find an updated copy of this in the X86\NT and X86\WIN95 sub-directories. Please use this one if it is dated later than any IMAGEHLP.DLL you have. Though REPORT.EXE can be run against MEA files generated by earlier version ICAP.DLL, it is a good idea to regenerate your MEA files with ICAP.DLL included with this drop. Other documentation ICECAP31.DOC - IceCAP 3.1 users guide. TRUNCMEA.DOC   TruncMEA utility users guide. FAQ.DOC   Compile of frequently asked question about IceCAP. Aliases For general support questions, use ICAPSUP alias.  Send bugs and suggestion to ICAPBUG alias. Please include the usual fun details like operating system & version, processor type, ICAP.INI file (if any), steps to reproduce. Thanks Team IceCAP http://pdrserve/icecap/ Where did you spend your time today? Normal Heading 2 Default Paragraph Font Alexander G. Tilles \\gsrana1\mcplus\readme.doc G. S. Rana C:\mcplus\readme.doc G. S. Rana0\\toolsvr\tools\ToolBox\IceCap\mcplus\readme.doc .0\\TOOLSVR\TOOLS\ToolBox\IceCap\mcplus\ReadMe.doc .6\\TOOLSVR\TOOLS\ToolBox\IceCap\IceCAP31.rc1\ReadMe.doc .6\\TOOLSVR\TOOLS\ToolBox\IceCap\IceCAP31.rc1\ReadMe.doc G. S. Rana \\gsrana\bingo$\gsr\readme.doc G. S. Rana \\gsrana\bingo$\GSR\readme.doc C:\GSR\readme.doc G. S. Rana C:\icap\docs\user\readme.doc @\\GSRANA\HP5L Ne00: winspool HP LaserJet 4L \\GSRANA\HP5L etter \\GSRANA\HP5L etter Times New Roman Symbol Arial Microsoft Logo Courier New M Confidential G. S. Rana G. S. Rana
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\tools\x86\icecap\_faq.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Internal Development Tools IceCAP Frequently Asked QuestionsIceCAP Frequently Asked Questions Normal.dot G. S. Rana Microsoft Word for Windows 95IceCAP Frequently Asked Questions Last updated:   SAVEDATE \@ "d MMMM, yyyy" \* MERGEFORMAT  24 May, 1996 When REPORT.EXE is run, it displays: ReadRecords unknown record type 0; skipping remaining records. This generally means that ICAP.DLL was unable to close the .MEA file properly at the end of the profile run. The resulting report should still be correct -- all that has happened is that REPORT has skipped the part of the .MEA file that did not contain real records. This can happen if you terminate your application externally, or if your application calls TerminateProcess or TerminateThread to exit. ICAP.DLL closes (and truncates) the .MEA file when it receives a DLL_PROCESS_DETACH notification. A telltale sign that this has occurred is if your .MEA file is exactly 33,554,432 bytes long (32M), since ICAP.DLL creates a memory mapped file of that size and truncates it at the end of the profile run. A separate utility TruncMEA can be used to truncate the unused records and fix this problem. Please see TruncMEA.DOC on the IceCAP share for more information on this utility. Can IceCAP read PDBs created with VC 4.1? Yes. Please note that IceCAP 3.1 no longer requires MSPDB4x.DLL.  Instead it requires IMAGEHLP.DLL v 1242 or higher.  IMAGEHLP.DLL understands both version 4.1 and 4.0 PDB files. When REPORT.EXE is run, it displays: WARNING: Context switch during time delta calculation  substituting 0 for delta. What does this warning mean? What is happening here is that a context switch occurred while the portion of the code (in VCYCLE.VxD), where thread times are calculated, was being executed. It is easy to identify the functions where such context switch occurred, the times reported for such functions are reported as 0. The amount of code where such conflict occurs is minimal and number of functions that are impacted should be low.  IceCAP 3.1 includes a fix for this problem. When I profile my application on NT 4.0, the number of page faults is sometimes higher than when the application is profiled on NT 3.51. Does IceCAP report more page fault information for NT 4.0 than NT 3.51? With NT 4.0, kernel faults in the context of the process are reported as working set changes along with the user-mode changes. These pages were probably being faulted on NT 3.51 as well, but not reported. It is simply a case of NT 4.0 providing more information than NT 3.51. Reporting of system calls can be suppressed by using the -NOSYSTEM option. What is the difference between Total time and Attributed time? The sum of time that is attributed to functions listed in the body of the report is known as Total attributed time. The time that is used to calculate % calculations is called Total time. Total time and Total attributed time are rarely equal. It is best to explain this difference by using the following scenario.  Assuming profile=0 in ICAP.INI, and application consists of the following code: main()    preA();    preB();    StartCAP();    .. other code    A();    B();    ... other code    C();    .. other code    StopCAP();    postA();    postB(); The body of the report will list functions A, B, and C (but not main). The time spent in A, B, and C is the total attributed time. The time spent from StartCAP() to StopCAP() is the total time. Just like total time is not same as total attributed time, total pages are not same as total attributed pages.  The total time and total code and data pages used to calculate the %s in the body of the report, and include all time and all page faults between the StartCAP and StopCAP calls.  Everything before or after these calls is neither counted towards total time or total pages nor reported. The trace output will include all time and all page faults between the StartCAP and StopCAP calls. The body of the report includes only the attributed time and page faults. The trace will not include anything before the StartCAP call or after the StopCAP call. The un-attributed time and page faults at the beginning are listed in the trace output under the first trace point, i.e. call to first profiled function (A() in this example). The un-attributed time and page faults in the middle of profile run (other code between B() and C(), for example) are reported at the first next trace point (entry to C() in this case). The un-attributed time and page faults at the end of the profile (other code after return from C() and before StopCAP in the example) are listed at the trace point for entry to StopCAP(). If profiling is always ON (profile=1) and IceCAP APIs were not used then all page faults before the first profile event (un-attributed page faults in the beginning) are reported at the first trace point (call to first function). The un-attributed page faults at the end of the application (page faults after return from last profiled function) are not reported. When I run REPORT.EXE with -SORTBY:EXCLCODE switch, the REPORT.EXE GPFs. There is a known bug in IceCAP 3.0 and 3.1 where using memory related switches (-INCLCODE, EXCLCODE, INCLDATA, etc.,) on a MEA file which does not have memory profiling data, can cause REPORT.EXE to crash. 25June1996is is result of a. This crash is result of scontain . The memory profiling is off by default. Normal Heading 1 Heading 2 Heading 3 Heading 4 Default Paragraph Font Question List 2 Body Text Normal Heading 1 Heading 2 Heading 3 Heading 4 Default Paragraph Font Question List 2 Body Text .#\\GSRANA1\C$\icap\docs\user\faq.doc .#\\GSRANA1\C$\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq2.doc G. S. Rana C:\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq.doc G. S. Rana C:\icap\docs\user\faq.doc @\\GSRANA\HP5L Ne00: winspool HP LaserJet 4L \\GSRANA\HP5L etter \\GSRANA\HP5L etter Times New Roman Symbol Arial Courier New !IceCAP Frequently Asked Questions G. S. Rana
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\tools\x86\icecap\truncmea.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Internal Development Tools TruncMEA SpecificationTruncMEA Specification G. S. Rana Normal.dot G. S. Rana Microsoft Word for Windows 95TruncMEA If you have questions about this document, please e-mail ICAPSUP. What is TruncMEA? TruncMEA is a utility developed by IceCAP support team to truncate unused records from IceCAP MEA files. Background ICAP.DLL can sometimes fail to close the .MEA file properly. This leaves a large (usually 32M) file on the user s machine. If REPORT.EXE is run on such file, user gets a warning message: ReadRecords unknown record type 0; skipping remaining records.   This can happen if an application is terminated externally, or if application calls TerminateProcess or TerminateThread to exit. ICAP.DLL closes (and truncates) the .MEA file only when it receives a DLL_PROCESS_DETACH notification. A telltale sign that this has occurred is if the MEA file is exactly 33,554,432 bytes long (or MaxMeaSize setting in ICAP.INI), since ICAP.DLL creates a memory mapped file of that size at the beginning. Although the reports generated from such MEA files are generally correct, the resulting reports display the  Total number of pages  and  Total time  values as 0. Thus %age calculations are also reported as 0.  TruncMEA provides a work-around to this problem by truncating unused records from end of an IceCAP MEA file and thereby providing following benefits: The ReadRecords warning message is eliminated. The percentage for time and pages are reported correctly. Unnecessary disk space is freed. Using TruncMEA TruncMEA is a Win32 command line application running on both Windows 95 and NT. This application will take a MEA file as input and truncate the unused records at the end. The format for using this program is: TRUNCMEA [PATH]FileName[Extension] Where:  Parameters in [] are optional. Path, if not specified is assumed to be the current directory. Filename must be specified. Extension, if not specified, is assumed to be .MEA. TruncMEA will scan for unused records at the end of MEA file and truncate the unused records from the file. If the file is already truncated or has no unused records, TruncMEA leaves the MEA file unchanged. A good way to use TruncMEA is to place it in a CMD or BAT file to run it just before REPORT.EXE. After truncating the MEA file, TrunMEA reports a status consisting of following information:  MEA file name, size of original file, size of file after truncation, and amount of disk space freed. Last updated   DATE  02/19/96 m Confidential Totvalue is reported as 0percentagefor pages  02/20/96 the following  ning on both Windows 95 and NT.MEA  02/20/96 Normal Heading 1 Heading 2 Heading 3 Default Paragraph Font Header Footer Normal Heading 1 Heading 2 Heading 3 Default Paragraph Font Header Footer Unknown Alexander G. Tilles G. S. Rana tech setup $G. S. Rana Alexander G. Tilles $Alexander G. Tilles tech setup $Alexander G. Tilles G. S. Rana $Alexander G. Tilles tech setup tech setup Maureen O'Hara tech setup Maureen O'Hara Maureen O'Hara $Alexander G. Tilles tech setup tech setup Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara tech setup Maureen O'Hara tech setup Maureen O'Hara $Alexander G. Tilles tech setup (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup tech setup Maureen O'Hara (Alexander G. Tilles Maureen O'Hara tech setup Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup tech setup Maureen O'Hara (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup tech setup Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup $Alexander G. Tilles tech setup (Alexander G. Tilles Maureen O'Hara tech setup Maureen O'Hara tech setup Maureen O'Hara tech setup Maureen O'Hara (Alexander G. Tilles Maureen O'Hara (Alexander G. Tilles Maureen O'Hara $Alexander G. Tilles tech setup tech setup Maureen O'Hara Maureen O'Hara tech setup Lee GibbonZ Michael Sheridan[ Mary E S Tjarnberg\ #Mary E S Tjarnberg Lee Gibbon Diana Andonian Ackerley^ A Valued Microsoft Customer_ 9Diana Andonian Ackerley A Valued Microsoft Customer Susan Voellera Kemewb #Diana Andonian Ackerley Kemew #Diana Andonian Ackerley Kemew #Diana Andonian Ackerley Kemew #Diana Andonian Ackerley Kemew #Diana Andonian Ackerley Kemew #Diana Andonian Ackerley Kemew Susan Voeller Susan Voeller +Diana Andonian Ackerley Susan Voeller Diana Andonian Ackerley Susan Voeller Susan Voeller Susan Voeller Susan Voeller Diana Andonian Ackerley Diana Andonian Ackerley Gale Chocks Lisayt A Valued Microsoft Customer Anna Mackinnonv Jason Goldingw Jason Golding Jason Golding Jason Golding Jason Golding Jason Golding Jason Golding Jason Golding Hillarie Flood Diane Tibbott evaco TRIO Apsetup Technical Support Group leigh Anna Mackinnon "Anna Mackinnon Jason Golding Jason Golding evaco Jason Golding evaco Jason Golding evaco Jason Golding evaco Jason Golding evaco Jason Golding evaco Jason Golding evaco Janet Angell. Tracy Rooney. Tracy Rooney. Tracy Rooney. Tracy Rooney. Tracy Rooney. Tracy Rooney. Tracy Rooney. Tracy Rooney. Tracy Rooney. Tracy Rooney. Tracy Rooney. Tracy Rooney. Tracy Rooney. David Trowbridge Paul Shustak  Paul Shustak Janet Angell. Alfonso R. Luna Mauricio Gonzalez de la Fuente Word Development Lat Am HQ .Lat Am HQ Mauricio Gonzalez de la Fuente Andreasc Robert J. Bach Robert J. Bach Matt Mizerak Brendan May betsyd Jay Gibson Heidi Winterkorn Julie Chaloupka Julie Chaloupka Julie Chaloupka Shelby Barnes marianne allison monicah marianne allison monicah marianne allison monicah marianne allison monicah marianne allison monicah marianne allison monicah marianne allison monicah $Shelby Barnes marianne allison marianne allison monicah $Shelby Barnes marianne allison $Shelby Barnes marianne allison marianne allison monicah marianne allison monicah $Shelby Barnes marianne allison marianne allison monicah marianne allison monicah $Shelby Barnes marianne allison marianne allison monicah donnatr ,Heidi Winterkorn Ann Fenner Ann Fenner !Heidi Winterkorn Ann Fenner !Heidi Winterkorn Ann Fenner !Heidi Winterkorn Ann Fenner Heidi Winterkorn Heidi Winterkorn !Heidi Winterkorn Ann Fenner Ann Fenner Heidi Winterkorn Ann Fenner Heidi Winterkorn !Heidi Winterkorn Ann Fenner Ann Fenner !Heidi Winterkorn Ann Fenner Ann Fenner Heidi Winterkorn Heidi Winterkorn Heidi Winterkorn Ann Fenner Ann Fenner Ann Fenner Ann Fenner Ann Fenner Ann Fenner Ann Fenner Ann Fenner !Heidi Winterkorn Ann Fenner Heidi Winterkorn !Heidi Winterkorn Ann Fenner !Heidi Winterkorn Ann Fenner Heidi Winterkorn !Heidi Winterkorn Ann Fenner !Heidi Winterkorn Ann Fenner !Heidi Winterkorn Ann Fenner !Heidi Winterkorn Ann Fenner !Heidi Winterkorn Ann Fenner !Heidi Winterkorn Ann Fenner Heidi Winterkorn James H. Cox David Witus David Witus David Witus David Witus Teresa L. Falco Mike Schackwitz Ruthann Lorentzen Irene O'Riordan "Irene O'Riordan Markus Glunz Diarmuid Mulcahy Markus Glunz #Markus Glunz Diarmuid Mulcahy "Irene O'Riordan Markus Glunz "Markus Glunz Irene O'Riordan "Markus Glunz Irene O'Riordan Christopher R. Jones Cy Cedar #Cy Cedar Christopher R. Jones Markus Glunz Cy Cedar 'Markus Glunz Christopher R. Jones TRIO Apsetup Markus Glunz Mary Beth Maines CJ Liu !Mike Mathieu Todd G. Roshak #Julie Rowlands Charlie Kindel Tina Headley Mike Mathieu Tina Headley CJ Liu Julie Rowlands Allen D. Wilcox Mark Kroese !Mark Kroese Allen D. Wilcox 1Allen D. Wilcox A Valued Microsoft Customer !Mark Kroese Allen D. Wilcox Tina Headley Mark Kroese Libby Duzan Lorraine Nay John Coake Cory Van Arsdale #Tina Headley Cory Van Arsdale #Tina Headley Cory Van Arsdale Laura Jennings Laura Jennings Suzanne Dennehey Noah Tratt Bruce Jacobsen melissap melissap Bruce Jacobsen Bruce Jacobsen melissap Don Edmond  Diane Tibbott Beverly Jones" Chris Capossela# "Beverly Jones Chris Capossela #Beverly Jones Chris Capossela #Beverly Jones Chris Capossela #Beverly Jones Chris Capossela Stuart C. Jenner) Caribe A. Malo* %Caribe A. Malo Stuart C. Jenner %Caribe A. Malo Stuart C. Jenner $Caribe A. Malo Stuart C. Jenner %Caribe A. Malo Stuart C. Jenner %Caribe A. Malo Stuart C. Jenner %Caribe A. Malo Stuart C. Jenner %Caribe A. Malo Stuart C. Jenner Krista L. Weberg2 Kylie A. Hansen3 Jay Henningsen4 "Beverly Jones Jay Henningsen Cathy Licht6 !Cathy Licht Chris Capossela !Cathy Licht Chris Capossela !Cathy Licht Chris Capossela !Cathy Licht Chris Capossela !Cathy Licht Chris Capossela !Cathy Licht Chris Capossela !Cathy Licht Chris Capossela Cathy Licht Josh Herst? John Gable@ Peter LundstromA  Peter Lundstrom John Gable !Peter Lundstrom Cathy Licht !Peter Lundstrom Cathy Licht !Peter Lundstrom Cathy Licht !Peter Lundstrom Cathy Licht !Peter Lundstrom Cathy Licht !Peter Lundstrom Cathy Licht "Peter Lundstrom Cathy Licht !Peter Lundstrom Cathy Licht !Peter Lundstrom Cathy Licht Bridget BakkenL John Gable Patsy Riley Patsy RileyN !Word Development John Gable Wayne A. FeigP !Word Development John Gable !Word Development John Gable !Word Development John Gable !Word Development John Gable !Word Development John Gable &Peter Lundstrom Word Development Scott FallonW #Scott Fallon Krista L. Weberg "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon Peter Lundstrom Scott Fallonh "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon "Peter Lundstrom Scott Fallon Zarahjmo John Gable Zarahjm Judy Chaseq !Word Development Judy Chase !Word Development John Gable #Word Development John Gable !Word Development John Gable Francine S. Margolisv +Francine S. Margolis Krista L. Weberg *Peter Lundstrom Francine S. Margolis &Peter Lundstrom Word Development  Cathy Licht Bridget Bakken "Francine S. Margolis Zarahjm Christopher D. Payne| &Cathy Licht Christopher D. Payne &Cathy Licht Christopher D. Payne &Christopher D. Payne Cathy Licht &Christopher D. Payne Cathy Licht &Cathy Licht Christopher D. Payne &Cathy Licht Christopher D. Payne &Cathy Licht Christopher D. Payne  Cathy Licht Bridget Bakken &Cathy Licht Christopher D. Payne &Cathy Licht Christopher D. Payne &Cathy Licht Christopher D. Payne &Cathy Licht Christopher D. Payne &Cathy Licht Christopher D. Payne &Christopher D. Payne Cathy Licht &Cathy Licht Christopher D. Payne &Cathy Licht Christopher D. Payne &Christopher D. Payne Cathy Licht &Cathy Licht Christopher D. Payne &Cathy Licht Christopher D. Payne &Christopher D. Payne Cathy Licht Gary Haarsager  Gary Haarsager Cathy Licht Karl F. Buhl Narendra Nath  Karl F. Buhl Narendra Nath  Karl F. Buhl Narendra Nath  Karl F. Buhl Narendra Nath  Karl F. Buhl Narendra Nath Madeline Kirbach Pierre de Vries David Armour !Gary Haarsager David Armour Peter V. Lundstrom David Williams Josh Davidson )Peter V. Lundstrom Word Development Judy Chase Tina Headley Alee Spencer Judy Chase Judy Chase #Peter V. Lundstrom Judy Chase #Peter V. Lundstrom Judy Chase #Peter V. Lundstrom Josh Herst Carlotta Boyd Dave Malcolm David Tuniman Michael T. Foley #Michael T. Foley Dave Malcolm #Michael T. Foley Dave Malcolm Phillip Gray  Beverly Jones Phillip Gray Francine S. Haman Paul West Paul West Diane Tibbott %Beverly Jones Chris Capossela 'Caribe A. Malo Stuart C. Jenner 'Peter Lundstrom 0Word Development #Word Development John Gable (Cathy Licht Christopher D. Payne (Christopher D. Payne Cathy Licht +Peter V. Lundstrom Word Development %Michael T. Foley Dave Malcolm Karen Hoiem Karen Hoiem Don Edmond Paul West Karen Hoiem Paul West evaco Paul West evaco John Porcaro Greg Weber John Porcaro Jean Cho Jean Cho Jean Cho Charlie Bermant Kerri Grubb Fred Brewflaught Homer Sunds "Fred Brewflaught Homer Sunds Kerri Grubb t-cchang t-cchang Fred Brewflaught t-cchang Fred Brewflaught Wes Rataushk Wes Rataushk Kerri Grubb Wes Rataushk Kerri Grubb Maria King Gregg Smith Maria King Gregg Smith Wes Rataushk Maria King Shari G. Smith Kelli Jerome ScottCA mikelar David Garber Kurt Smith Walter Myers III Bill Vaughn Jean Cho Unknown lisa Irwin Jean Cho melissap Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Jean Cho Karen Meredith Karen Meredith Unknown Steve Trautman Lewisl Greg Weber John Porcaro Trish May Laura Schildkraut Deborah Willingham Jeanne Chase Michael Harvey Charles Stevens Bev Auld Wynne Wolf Doug Martin Peter Bladin Trish May Peter Bladin "Trish May Deborah Willingham Microsoft Corporation 0TRIO Apsetup Bruce Jacobsen melissap Greg Weber melissap Bruce Jacobsen Kathleen Martin Fiander Joan Cummings matthew david peterson sue barnes Janet Angell. sue barnes Janet Angell. sue barnes Anna MacKinnon Brad Chase Gaby Adam  +A Valued Microsoft Customer Gaby Adam Joel P. Dehlin" Jim Oker# H. Steven Banfield$ Geraint Davies% 'Geraint Davies H. Steven Banfield 'H. Steven Banfield Geraint Davies 'H. Steven Banfield Geraint Davies 'H. Steven Banfield Geraint Davies 'H. Steven Banfield Geraint Davies Gerson Stumpf+ Gerson Stumpf Unknown BRIANMC- Gerson Stumpf BRIANMC BRIANMC Unknown Gerson Stumpf BRIANMC Gerson Stumpf BRIANMC Gerson Stumpf BRIANMC Gerson Stumpf BRIANMC TUVALM4 TUVALM Gerson Stumpf TUVALM Gerson Stumpf kavis7 kavis Craig S. Bartholomew9  Craig S. Bartholomew kavis Craig S. Bartholomew jodid< JayG= Deloitte6> Chris Anderson? Fred Magnota@ TonyChA Angie OngB Paul HiginbothamC Flanagan, Timothy R. R.D Adrian WebsterE Deanna HearnsF markG $G. S. Rana Alexander G. Tilles $G. S. Rana Alexander G. Tilles Emily BrooksJ Emily Brooks1K  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks  Emily Brooks1 Emily Brooks G. S. Rana susan voellern G. S. Rana"C:\GSR\icap\docs\user\truncmea.doc G. S. Rana"C:\GSR\icap\docs\user\truncmea.doc G. S. Rana"C:\GSR\icap\docs\user\truncmea.doc G. S. Rana"C:\GSR\icap\docs\user\truncmea.doc G. S. Rana"C:\GSR\icap\docs\user\truncmea.doc G. S. Rana"C:\GSR\icap\docs\user\truncmea.doc G. S. Rana"C:\GSR\icap\docs\user\truncmea.doc G. S. Rana"C:\GSR\icap\docs\user\truncmea.doc G. S. Rana"C:\GSR\icap\docs\user\truncmea.doc G. S. Rana"C:\GSR\icap\docs\user\truncmea.doc @\\MSPRINT3\21/2159 PRIVP 157.57.40.244 Ne01: winspool HP LaserJet 4Si/4Si MX PS \\MSPRINT3\21/2159 PRIVP 157.57 etter PRIV`  N N N \\MSPRINT3\21/2159 PRIVP 157.57 etter PRIV`  N N N Times New Roman Symbol Arial Microsoft Logo Tms Rmn TruncMEA Specification G. S. Rana G. S. Rana
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\ddk\ddk_multimedia.ini ===
; FORMAT : SourceDir, SourceFile, DestDir, DestFile, OPERATION
; All fields are required
; [subname]* is allowed for source, in which case * required for destination

; Whacked - sample is moving to the SDK...
;DirectX\dmusic\dmsynth                 , clist.cpp   , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , clist.h     , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , control.cpp , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , csynth.cpp  , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , csynth.h    , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , ddksources  , src\audio\dmusic\ddksynth                         , sources     , COPY        
;DirectX\dmusic\dmsynth                 , ddksynth.htm, src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , debug.cpp   , src\audio\dmusic\ddksynth                         , *           , HSPLIT      
;DirectX\dmusic\dmsynth                 , debug.h     , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , dmsynth.cpp , src\audio\dmusic\ddksynth                         , ddksynth.cpp, HSPLIT      
;DirectX\dmusic\dmsynth                 , dmsynth.def , src\audio\dmusic\ddksynth                         , ddksynth.def, HSPLIT      
;DirectX\dmusic\dmsynth                 , dmsynth.rc  , src\audio\dmusic\ddksynth                         , ddksynth.rc , HSPLIT      
;DirectX\dmusic\dmsynth                 , guids.cpp   , src\audio\dmusic\ddksynth                         , *           , HSPLIT      
;DirectX\dmusic\dmsynth                 , instr.cpp   , src\audio\dmusic\ddksynth                         , *           , HSPLIT      
;DirectX\dmusic\dmsynth                 , midi.cpp    , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , misc.h      , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , mix.cpp     , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , mmx.cpp     , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , oledll.cpp  , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , oledll.h    , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , plclock.cpp , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , plclock.h   , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , simple.h    , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , synth.h     , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth                 , umsynth.cpp , src\audio\dmusic\ddksynth                         , *           , HSPLIT      
;DirectX\dmusic\dmsynth                 , umsynth.h   , src\audio\dmusic\ddksynth                         , *           , HSPLIT      
;DirectX\dmusic\dmsynth                 , voice.cpp   , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\dmsynth\daytona         , makefile    , src\audio\dmusic\ddksynth                         , *           , COPY        
;DirectX\dmusic\shared                  , validate.h  , src\audio\dmusic\ddksynth                         , *           , COPY        

;CPLSVR1 sample
Directx\dxddk\dinput\samples\cplsvr1    , Cplsvr1.htm , src\input\dinput\cplsvr1                          , Cplsvr1.htm , COPY
Directx\dxddk\dinput\samples\cplsvr1    , BtnDwn.ico  , src\input\dinput\cplsvr1                          , BtnDwn.ico  , COPY
Directx\dxddk\dinput\samples\cplsvr1    , BtnUp.ico   , src\input\dinput\cplsvr1                          , BtnUp.ico   , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Button.cpp  , src\input\dinput\cplsvr1                          , Button.cpp  , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Config.ico  , src\input\dinput\cplsvr1                          , Config.ico  , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Cplsvr1.cpp , src\input\dinput\cplsvr1                          , Cplsvr1.cpp , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Cplsvr1.def , src\input\dinput\cplsvr1                          , Cplsvr1.def , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Cplsvr1.h   , src\input\dinput\cplsvr1                          , Cplsvr1.h   , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Cplsvr1.inf , src\input\dinput\cplsvr1                          , Cplsvr1.inf , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Cplsvr1.mak , src\input\dinput\cplsvr1                          , Cplsvr1.mak , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Cplsvr1.rc  , src\input\dinput\cplsvr1                          , Cplsvr1.rc  , COPY
Directx\dxddk\dinput\samples\cplsvr1    , CplsvrNT.inf, src\input\dinput\cplsvr1                          , CplsvrNT.inf, COPY
Directx\dxddk\dinput\samples\cplsvr1    , Dicpl.h     , src\input\dinput\cplsvr1                          , Dicpl.h     , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Dicputil.h  , src\input\dinput\cplsvr1                          , Dicputil.h  , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Pages.h     , src\input\dinput\cplsvr1                          , Pages.h     , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Resource.h  , src\input\dinput\cplsvr1                          , Resource.h  , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Resrc1.h    , src\input\dinput\cplsvr1                          , Resrc1.h    , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Winflag.ico , src\input\dinput\cplsvr1                          , Winflag.ico , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Makefile    , src\input\dinput\cplsvr1                          , Makefile    , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Dicputil.cpp, src\input\dinput\cplsvr1                          , Dicputil.cpp, COPY
Directx\dxddk\dinput\samples\cplsvr1    , Pages.cpp   , src\input\dinput\cplsvr1                          , Pages.cpp   , COPY
Directx\dxddk\dinput\samples\cplsvr1    , Sources     , src\input\dinput\cplsvr1                          , Sources     , COPY
                                                                                                                           
;FFDRV1 sample                                                                                                             
Directx\dxddk\dinput\samples\ffdrv1     , clsfact.c   , src\input\dinput\ffdrv1                           , clsfact.c   , COPY
Directx\dxddk\dinput\samples\ffdrv1     , effdrv.c    , src\input\dinput\ffdrv1                           , effdrv.c    , COPY
Directx\dxddk\dinput\samples\ffdrv1     , effhw.c     , src\input\dinput\ffdrv1                           , effhw.c     , COPY
Directx\dxddk\dinput\samples\ffdrv1     , main.c      , src\input\dinput\ffdrv1                           , main.c      , COPY
Directx\dxddk\dinput\samples\ffdrv1     , effdrv.h    , src\input\dinput\ffdrv1                           , effdrv.h    , COPY
Directx\dxddk\dinput\samples\ffdrv1     , effpub.h    , src\input\dinput\ffdrv1                           , effpub.h    , COPY
Directx\dxddk\dinput\samples\ffdrv1     , ffdrv1.def  , src\input\dinput\ffdrv1                           , ffdrv1.def  , COPY
Directx\dxddk\dinput\samples\ffdrv1     , ffdrv1.inf  , src\input\dinput\ffdrv1                           , ffdrv1.inf  , COPY
Directx\dxddk\dinput\samples\ffdrv1     , ffdrv1.rc   , src\input\dinput\ffdrv1                           , ffdrv1.rc   , COPY
Directx\dxddk\dinput\samples\ffdrv1     , default.mk  , src\input\dinput\ffdrv1                           , default.mk  , COPY
Directx\dxddk\dinput\samples\ffdrv1     , watcom.mk   , src\input\dinput\ffdrv1                           , watcom.mk   , COPY
Directx\dxddk\dinput\samples\ffdrv1     , makefile.wat, src\input\dinput\ffdrv1                           , makefile.wat, COPY
Directx\dxddk\dinput\samples\ffdrv1     , readme.txt  , src\input\dinput\ffdrv1                           , readme.txt  , COPY
Directx\dxddk\dinput\samples\ffdrv1     , makefile    , src\input\dinput\ffdrv1                           , makefile    , COPY
Directx\dxddk\dinput\samples\ffdrv1     , makefile1   , src\input\dinput\ffdrv1                           , makefile1   , COPY
Directx\dxddk\dinput\samples\ffdrv1     , sources     , src\input\dinput\ffdrv1                           , sources     , COPY
                                                                                                                           
;DIMapCfg tool
Directx\dxddk\dinput\tools\dimapcfg     , DIMapCfg.chm, tools\dimapcfg                                    , dimapcfg.chm, COPY
Directx\dxddk\dinput\tools\dimapcfg\i386, dimapcfg.exe, tools\dimapcfg\x86                                , dimapcfg.exe, COPYX86
Directx\dxddk\dinput\tools\dimapcfg\i386, diactfrm.dll, tools\dimapcfg\x86                                , diactfrm.dll, COPYX86
Directx\dxddk\dinput\tools\dimapcfg\i386, genre.ini   , tools\dimapcfg\x86                                , genre.ini   , COPYX86
Directx\dxddk\dinput\tools\dimapcfg\win9x,dimapcfg.exe, tools\dimapcfg\win9x                              , dimapcfg.exe, COPYX86
Directx\dxddk\dinput\tools\dimapcfg\win9x,diactfrm.dll, tools\dimapcfg\win9x                              , diactfrm.dll, COPYX86
Directx\dxddk\dinput\tools\dimapcfg\win9x,genre.ini   , tools\dimapcfg\win9x                              , genre.ini   , COPYX86
Directx\dxddk\dinput\tools\dimapcfg\ia64, dimapcfg.exe, tools\dimapcfg\ia64                               , dimapcfg.exe, COPYIA64
Directx\dxddk\dinput\tools\dimapcfg\ia64, diactfrm.dll, tools\dimapcfg\ia64                               , diactfrm.dll, COPYIA64
Directx\dxddk\dinput\tools\dimapcfg\ia64, genre.ini   , tools\dimapcfg\ia64                               , genre.ini   , COPYIA64

Media\msacm\gsm610                     , *           , src\mmedia\gsm610                                 , *           , HSPLIT      
; Moved to mmedia
;Media\msacm\gsm610                     , *           , src\audio\acm\gsm610                              , *           , HSPLIT      

Media\msacm\imaadpcm                   , *           , src\mmedia\imaadpcm                               , *           , HSPLIT      
; Moved to mmedia
;Media\msacm\imaadpcm                   , *           , src\audio\acm\imaadpcm                            , *           , HSPLIT      

Media\msacm\msfilter                   , *           , src\mmedia\msfilter                               , *           , HSPLIT      
; Moved to mmedia
;Media\msacm\msfilter                   , *           , src\audio\acm\msfilter                            , *           , HSPLIT      

DirectX\dxddk\video\3dlabs\perm3\disp\dx\win9x , makefile    , src\video\displays\3dlabs\perm3\disp\dx\win9x , *       , HSPLIT
DirectX\dxddk\video\3dlabs\perm3\disp\dx\win9x , *.def       , src\video\displays\3dlabs\perm3\disp\dx\win9x , *       , HSPLIT
DirectX\dxddk\video\3dlabs\perm3\disp\dx\win9x , *.rc        , src\video\displays\3dlabs\perm3\disp\dx\win9x , *       , HSPLIT
DirectX\dxddk\video\3dlabs\perm3\disp\dx\win9x , *.h         , src\video\displays\3dlabs\perm3\disp\dx\win9x , *       , HSPLIT
DirectX\dxddk\video\3dlabs\perm3\disp\dx\win9x , sources.wdk , src\video\displays\3dlabs\perm3\disp\dx\win9x , sources , HSPLIT
DirectX\dxddk\video\3dlabs\perm3\disp\dx\win9x , *.c         , src\video\displays\3dlabs\perm3\disp\dx\win9x , *       , HSPLIT
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\tools\x86\icecap\sample\icap.ini ===
[settings]
; settings in this section apply to all apps, unless over-ridden in the individual
; sections below.

; Use the following to have profiling initially off
; profile = 0

; Use the following (or nothing) to have profiling initially on
; profile = 1

; Use the following to disable profiling
; profile = never

; Use the following to specify a different name for the .mea file
; output = other.mea

; Use the following to turn off import function patching (default is on)
; imports = 0

; MaxMeaSize setting specfies the maximum size allowed for the 
; .MEA file to be created.  Value is in megabytes.  Default is 32
MaxMeaSize=50

; CycleSpeed specifies clock cycle speed (in Mhz)
CycleSpeed=90

[word96]
;for Word96, only detect new pages touched.  Output file is 
; word96t.mea, and has a max size of 100 MB
Pages=new
output=word96t.mea
MaxMeaSize=100

[excel96]
; for excel96, profiling is initially on.  Report all pages touched (default).  
; Output file has a max size of 50 MB (from [settings] section).  Don't patch imports.
profile=1
Pages=All
imports=0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\danim\tools\x86\icecap\icecap31.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Internal Development Tools IceCAPIceCAP Internal Call Attributed Profiler For Windows 95 and Windows NT Normal.dot G. S. Rana Microsoft Word for Windows 95PBrush PBrush PBrush0 0 254 229 TITLE  \* MERGEFORMAT  IceCAP  SUBJECT  \* MERGEFORMAT  Internal Call Attributed Profiler  COMMENTS  \* MERGEFORMAT  For Windows 95 and Windows NT Version 3.1 s Guide Last updated:   SAVEDATE \@ "MMMM d, yyyy" \* MERGEFORMAT  May 12, 1996 Table of Contents  TOC \o "1-3"  Table of Contents  GOTOBUTTON _Toc356562721    PAGEREF _Toc356562721  Overview  GOTOBUTTON _Toc356562722    PAGEREF _Toc356562722  What is IceCAP?  GOTOBUTTON _Toc356562723    PAGEREF _Toc356562723  What is new in IceCAP 3.1?  GOTOBUTTON _Toc356562724    PAGEREF _Toc356562724  Restrictions  GOTOBUTTON _Toc356562725    PAGEREF _Toc356562725  Getting started  GOTOBUTTON _Toc356562726    PAGEREF _Toc356562726  Profiling an Application  GOTOBUTTON _Toc356562727    PAGEREF _Toc356562727  Preparing for Profiling  GOTOBUTTON _Toc356562728    PAGEREF _Toc356562728  Profiling Runs  GOTOBUTTON _Toc356562729    PAGEREF _Toc356562729  Diagnosing failures  GOTOBUTTON _Toc356562730    PAGEREF _Toc356562730  ICAP.INI option summary  GOTOBUTTON _Toc356562731    PAGEREF _Toc356562731  Report Generator  GOTOBUTTON _Toc356562732    PAGEREF _Toc356562732  Reading reports  GOTOBUTTON _Toc356562733    PAGEREF _Toc356562733  Report Headers.  GOTOBUTTON _Toc356562734    PAGEREF _Toc356562734  Summaries  GOTOBUTTON _Toc356562735    PAGEREF _Toc356562735  Caller/Callee function list  GOTOBUTTON _Toc356562736    PAGEREF _Toc356562736  Trace output  GOTOBUTTON _Toc356562737    PAGEREF _Toc356562737  Miscellaneous report topics  GOTOBUTTON _Toc356562738    PAGEREF _Toc356562738  Delimited reports  GOTOBUTTON _Toc356562739    PAGEREF _Toc356562739  Controlling data collection  GOTOBUTTON _Toc356562740    PAGEREF _Toc356562740  Thread specific APIs  GOTOBUTTON _Toc356562741    PAGEREF _Toc356562741  Process specific APIs  GOTOBUTTON _Toc356562742    PAGEREF _Toc356562742  Example  GOTOBUTTON _Toc356562743    PAGEREF _Toc356562743  ICAPCTRL Applet  GOTOBUTTON _Toc356562744    PAGEREF _Toc356562744  API counters  GOTOBUTTON _Toc356562745    PAGEREF _Toc356562745  Special Problems  GOTOBUTTON _Toc356562746    PAGEREF _Toc356562746  Assembly language  GOTOBUTTON _Toc356562747    PAGEREF _Toc356562747  Turning profiling off  GOTOBUTTON _Toc356562748    PAGEREF _Toc356562748  NT 4.0 Fibers  GOTOBUTTON _Toc356562749    PAGEREF _Toc356562749  Memory Profiling Notes  GOTOBUTTON _Toc356562750    PAGEREF _Toc356562750  Profiling for Memory  Out-of-process  GOTOBUTTON _Toc356562751    PAGEREF _Toc356562751  Summary of Restrictions  GOTOBUTTON _Toc356562752    PAGEREF _Toc356562752  IceCAP Support, Aliases, and Web sites  GOTOBUTTON _Toc356562753    PAGEREF _Toc356562753  FAQ.DOC  GOTOBUTTON _Toc356562754    PAGEREF _Toc356562754  icapsup  GOTOBUTTON _Toc356562755    PAGEREF _Toc356562755  icapbug  GOTOBUTTON _Toc356562756    PAGEREF _Toc356562756  icapuser  GOTOBUTTON _Toc356562757    PAGEREF _Toc356562757  IceCAP web site  GOTOBUTTON _Toc356562758    PAGEREF _Toc356562758  Toolbox  GOTOBUTTON _Toc356562759    PAGEREF _Toc356562759  About Internal Tools  GOTOBUTTON _Toc356562760    PAGEREF _Toc356562760  Overview What is IceCAP? The IceCAP profiler is designed to provide detailed call-attributed profiling with minimal overhead.  One uses IceCAP to answer the question, "What time and memory resources did an application use as it went from point A to B?"  IceCAP provides the following key features: Profiling for execution times and memory. Support for Win32 applications running on Windows 95 and Windows NT. Per-thread times on Windows 95 Pentium machines. Support for applications that use exceptions, multi-threading, setjmp, and recursive calls. Minimal steps for preparing an application for profiling. Low overhead while the application is running. Support for COFF and CV symbols. Support for BBT d (formerly Lego) binaries. Same binaries for both Windows 95 and x86 Windows NT. Documented time units and configuration. Summary, call-attributed list, trace, and delimited report formats. For every profiled function, IceCAP can report the following information: Number of calls. Minimum, maximum, average, inclusive, and exclusive times. All or new(page faults) memory pages touched for CODE, DATA, and STACK. IceCAP and IceCAP technology is currently Microsoft Confidential and is for internal use at Microsoft only. Please do not discuss it outside of Microsoft. What is new in IceCAP 3.1? In-process memory profiling. No need to use ICECAP.EXE -- which slows profiling by running your application as a debugee process. Improved TRACE output. Trace output now includes delta and attributed information for timing as well as memory. Symbol support for BBT d binaries.  No more MODULE+OFFSET messages for MFC40.DLL functions, correct symbol resolution for BBT (previously  known as LEGO) builds. IceCAP API enhancements.  Ability to start, stop, suspend, or resume profiling at thread or process (global) level. ICAP.DLL performance improvements. Faster data gathering for applications that use multiple threads or setjmp. More profiling and report options.  Exclude import patching by function or module, for example. Support for NT 4.0 Fibers, bug fixes, and more! Restrictions IceCAP will only run on 80486 and Pentium machines. IceCAP may not work properly on some multi-processor machines. We are unable to get reliable timer information on 486 multi-processor machines. If you need to profile an application on a multi-processor system, we suggest that you use a Pentium machine with UseCycleCounter set to 1 (which is the default for Pentium machines). This will make IceCAP use Pentium on-chip cycle counter instead of the NT timer APIs. When profiling multiple threads with elapsed time (as opposed to thread time), the elapsed time for a thread does not exclude profiling overhead of other threads. As a result, the elapsed time for a thread can be off significantly.  However, thread time reports (only available on Windows 95 Pentium machines) will be correct, since both profiling overhead and time spent in other threads is ignored. Elapsed time reports for multiple threads can still be useful for analyzing individual sections of consecutive calls by a single thread (see -THREAD, -START, and -STOP report options, below). Because page reference measurement APIs are process specific, IceCAP can not record memory reference data on per-thread basis. When profiling multiple threads for memory, IceCAP will record page reference data for the first thread that profiling was turned on. For all subsequent threads that profiling is turned on, only timing (execution) data is recorded and page reference data is ignored. Please see  Memory Profiling Notes  for more discussion on this topic. The maximum size of the data file generated by IceCAP is fixed and set at initialization time. (See MaxMeaSize in ICAP.INI settings, below). Getting started Please read README.DOC file, available on IceCAP share, for instructions on  installing IceCAP. Profiling an Application Preparing for Profiling VC NOTE: You may wish to create a new Target (e.g. Win32 Profile) so that you can choose between profile and non-profile builds. Include  icapexp.h  in any file that will call the profiling API. Compile all source files with these options in addition to whatever is required by the project: Generates  _penter  calls in all function prologs; _penter collects performance data during a test run. VC NOTE: You can specify this option on the Project Settings/ C/C++  tab by adding /Gh to the  Project Options  field. For VC 4.x this tab is accessible via the Build/Settings menu option. Generates debugging information. VC NOTE: You can specify this option on the Project Settings/ C/C++  tab by selecting Category=General and then under  Debug Info  selecting  Program Database For VC 4.x this tab is accessible via the Build/Settings menu option. Generates a demand for MSVCRT.LIB and, thence, for MSVCRTxx.DLL. That is, runtime library routines will be resolved to the runtime DLL. This option is required if the application calls  setjmp s useful in other cases so you can profile runtime library calls. VC NOTE: You can specify this option  on the Project Settings/ C/C++  tab by selecting Category=Code Generation and then under  Use Run-Time Library  selecting  Multithreaded DLL For VC 4.x this tab is accessible via the Build/Settings menu option. VC NOTE:  When using MFC,  specify  Use MFC in a shared DLL  (either when using the MFC app wizard or by accessing the Project Settings/General tab and under  Microsoft Foundation Classes  selecting  Use MFC in a shared DLL For VC 4.x this tab is accessible via the Build/Settings menu option. NOTE!  If you use  setjmp , make sure to link with the runtime DLL. If you are explicitly linking with a runtime library, choose msvcrt.lib and not libc.lib or libcmt.lib. Link with ICAP.LIB and the -DEBUG:MAPPED option. If you are profiling on Windows 95, do not link with the optidata linker option (this is a new option that puts the import table in the same section as the code). VC NOTE: You can specify ICAP.LIB on the Project Settings/Link tab by adding icap.lib to the  Object/Library Modules  field. This tab is accessible via the Build/Settings menu option of VC 4.x. VC NOTE: You can specify -DEBUG:MAPPED on the Project Settings/Link tab by adding -DEBUG:MAPPED to the  Project Options  field. This tab is accessible via the Build/Settings menu option of VC 4.x. IceCAP 3.1 does not require debug information to be in a .PDB file. If you want the debug information included in the binary instead, specify -PDB:NONE in the link options. VC NOTE: VC automatically inserts a pdb setting in the link options. You can edit it to  pdb:none  on the Project Settings/Link in the  Project Options  field. This tab is accessible via the Build/Settings menu option of VC 4.x. If you don t want profiling to start immediately, create or modify ICAP.INI in the Windows directory to have a section for your application (see ICAP.INI option summary, below). Ensure that the IceCAP files have been installed as described in the Setup Instructions (README.DOC), and the system has been rebooted. Profiling Runs Once an application has been built for profiling, it is ready for profiling. IceCAP allows you to profile an application for execution and memory. To profile an application for execution, i.e., no memory profiling: Use the Pages=Never (default) setting in the ICAP.INI file. See ICAP.INI option summary below for more information on this setting. To record execution and memory profiling data: Set Pages=New or the Pages=All setting in the ICAP.INI file. See ICAP.INI option summary below for more information on this setting. NOTE: Execution data gathered with memory profiling is not a reliable indicator of application s performance. See Memory Profiling Notes below for more information. Execute your application with ICAP.DLL in the path. As the application executes, the profiling data is recorded into a measurement  file. By default, this file is in the same directory as the application and has an MEA extension. You can override the default name in the INI file (see ICAP.INI option summary below). The default maximum size of the MEA file is 32M. If desired, you can alter this default by setting a value in the ICAP.INI file (see ICAP.INI option summary, below). NOTE! You must have free disk space equal to or greater than the maximum MEA size to profile your application, otherwise ICAP.DLL will fail to load. After the application has finished executing, the MEA file is ready for analysis. You can run the report generator as described in the next section to analyze the test run. Diagnosing failures _adjust_fdiv If you get a popup stating that the procedure entry point _adjust_fdiv could not be located in the dynamic link library MSVCRTxx.DLL, you need to get the MSVCRTxx.DLL from VC 2.x or VC 4.0. It has an extra entry point for the Pentium divide problem workaround. pop ups If ICAP.DLL encounters an error it will bring up a pop up window describing the error. You can disable this feature with a setting in ICAP.INI; see below. general failures If you get some failure which is not diagnosable, try running the application under the debugger. ICAP.DLL will send error messages to the debug port so you will see them there. ICAP.INI option summary You can use an optional ICAP.INI file to control various profiling options. This file can be placed in your Windows directory or the current directory. IceCAP looks for ICAP.INI file in the current directory first and then in the Windows directory. Each of the following options can appear in either the general [settings] section of ICAP.INI or in application specific sections named by the application base name (e.g. foo.exe options would appear in section [foo]).  The precedence of options is: application specific values, general settings values, defaults, i.e., the application specific settings override the settings in the [settings] section. A sample ICAP.INI file is available in the \sample directory of IceCAP share. Option Values Description Cache Per thread caching for recording timing data is not enabled (default). See Cache=1 setting for more explanation of this setting. Cache Per thread caching for recording timing data is enabled. This option is useful only if your application uses a high number of threads and an application is profiled on SMP machines. When this option is on, IceCAP caches the write requests to MEA file, thereby reducing contention for MEA (which is memory mapped) file memory. The drawback of using this option is that you lose the sequential information in the trace output. Trace output, in this case, is sorted by threads. CycleSpeed Specifies clock cycle speed (n is in Mhz). This setting is purely for documentation purposes. IceCAP does not use this value for any computational purposes. IcapCtrl Disables ICAPCTRL applet support, eliminating shared memory usage. IcapCtrl Enables ICAPCTRL support (default). Imports Turns off import patching  for all DLLs (time will be attributed to calling function instead).  See also NoImport setting. Imports Turns on import patching (default). See also NoImport setting. MaxMeaSize Maximum .MEA file size in megabytes (default is 32). You must have free disk space equal to or greater than n, otherwise ICAP.DLL will fail to load.  MaxCallDepth Maximum call stack depth (default is 256) MessageBoxErrors Prevents errors from bringing up a MessageBox MessageBoxErrors Allows errors to bring up a MessageBox (default) NoImport module[.DLL][:FunctionName] Allows suppression of import patching at module or function level. The values enclosed in parentheses    are optional. Module name is case insensitive, Function name is case sensitive. For example: NoImport=User32.DLL will suppress import patching for all functions in User32.DLL, and NoImport=User32.DLL:alloca will suppress import patching for alloca function in User32 module. The time and pages for suppressed functions are reported as part of their caller function. Multiple NoImport settings can be specified in both the application specific and the general [settings] sections. The settings from both sections are used. See also Imports setting. Output Overrides the path for MEA file (default is same as the application directory). Output [path]filename Overrides the path and/or name of the MEA file. Pages never Memory profiling is disabled (default). Pages Memory profiling is enabled. Data for all referenced pages is recorded. Pages Memory profiling is enabled. Data for new pages (faults) touched by each function is recorded.  This is configuration dependent setting, i.e., new pages list will be dependent on amount of available memory on your system.  This setting is useful when you want to profile an application on a specific configuration. Profile Sets profiling initially off.  Use this option in conjunction with StartCAP() and StopCAP() APIs to profile specific sections of code. Profile Sets profiling initially on (default). Profile never No profiling (no .MEA file generated). thread Timings will be per thread time (default for Windows 95). Thread times are available on Windows 95 Pentium machines and when memory profiling is not enabled. elapsed Timings will be elapsed time (default for Windows NT). UseCycleCounter Disables usage of Pentium on-chip clock cycle counter. UseCycleCounter Enables usage of Pentium on-chip clock cycle counter (default on Pentium machines). Report Generator The report generator has the following syntax: REPORT filename[.MEA] [options] [@response-file] Option Description -ADDRESS Display function addresses as well as function names. -DELIMITED Generate a tab-delimited report file suitable for use in a spreadsheet program like Excel. -EXCEL Synonym for -DELIMITED included for IceCAP 1.0 compatibility. -IGNORE:name Ignore time and pages used in and below the named function. This option lets you exclude uninteresting consumers of time like GetMessage. Calls to  ignored  functions show up in the report, but with zero time. The ICAP API functions (StartCAP, etc.) are automatically  ignored Also, see -SUPPRESS option. -MODULES Display module and function names. -NOATTRIBTRACE Ignore call attribution (inclusive/exclusive times, pages touched) information in the trace output. IceCAP 3.1 added this information. This option was added for backward compatibility. -NOFUNCLIST Ignore caller/callee lists from the output. This option is useful, if you are only interested  in summaries or trace output. -NOHEADERS Suppress the column headers in the report file. You don t get headers if you specify  DELIMITED. -NOINDENT Suppress function name indentation in trace output (-DELIMITED output is never indented) -NOSUMMARY Suppress the  top-10 functions  reports at the start of the output file. Use this if you want one list of functions and you re specifying the sort order. -NOSYSTEM Suppress reporting of system calls. This is like using the  SUPPRESS option to suppress calls to KERNEL32, USER32, and GDI32. The suppressed functions don t show up in the report, but the time they consumed is included in the exclusive (non-attributed) time of their callers as well as in the inclusive (fully attributed) time. -NOTIMES Timing information is not included in the report. However, function names and the number of calls information is included. This option is useful when you have recorded memory reference data and do not want to see execution (timing) columns in the report. -NOWARN If you have ignored or suppressed functions, the report normally contains a series of warnings aimed at avoiding surprises in the report. Use this option to suppress the warnings. This option will also suppress command line warnings about missing symbol files, etc. -OVERHEAD:n Specifies an additional overhead amount to be subtracted from each incoming time stamp. This is an escape valve to deal with incorrect calibration of the time stamp determination overhead. You can adjust this so that an empty function appears to consume just a few machine cycles. -PAGELIST[:Section] Includes detailed page list identifying each page as Code, Data, or Stack and if possible, resolving it s symbol. Default for this option is OFF, i.e. page lists are not printed. This list consists of exclusive pages referenced by the corresponding function. Inclusive list of pages is not printed. Possible values for [:Section] are: TRACE, i.e., -PAGELIST:TRACE. The page list information is included in the trace output, but not in the caller/callee list. BODY, i.e., -PAGELIST:BODY. The page list information is included for the caller/callee list, but not for the trace output. None, i.e., -PAGELIST. This is the default value. The page list information is printed for both caller/callee list and the trace output. This option is valid only if memory page information was recorded by ICAP.DLL and the DELIMITED option was not used. -PCVA Include extra detail for Program Counter and Virtual Address. This option works with  PAGELIST option to provide extra information for each listed page. Default for this options is ON when  PAGELIST option is used. Please see  Page Lists  section for details on these columns. If PAGELIST option is not specified, then this option turns the PAGELIST option ON. -REMOTE:drive Specifies a drive letter to use instead of whatever is recorded in the MEA file. For example, if your test run loaded modules from a C: drive but you are running the report from a networked computer where that drive is now the X: drive, say  -REMOTE:X: . (The last colon is optional.) -SORTBY:how Specifies how to sort the main section of the report. The choices are: EXCLCODE Sort by descending number of exclusive code pages. EXCLDATA Sort by descending number of exclusive data pages. EXCLTIME Sort by descending exclusive (non-attributed) time. Use this to identify functions that time consumers and may need to be re-coded. CALLS Sort by descending number of function calls. INCLCODE Sort by descending number of inclusive code pages. INCLDATA Sort by descending number of inclusive data pages. INCLTIME Sort by descending inclusive (fully attributed) time. Use this to identify algorithmic problems where the time spent in and below a function is of interest. Sort alphabetically by function name (the default). Leading underscores aren t used in the sort. -START:n Ignores all records whose cumulative time is less than n. Combining this option with  STOP option is a good way of reducing the size of report as well as identifying functions in a specific time frame.  Cumulative time for any function can be found in the trace output. -STOP:n Ignores all records whose cumulative time is greater than n. Combining this option with  START option is a good way of reducing the size of report as well as identifying functions in a specific time frame. -SUPPRESS:name Suppress calls to functions in a specified module. The time and pages referenced by suppressed functions do not show up in the report, but are included in the exclusive (non-attributed) time of their callers as well as in the inclusive (fully attributed) time. See also the -IGNORE option. -THREAD:n Only process records for thread n -TRACE Generates a call/return trace from each of the data records in the MEA file. See  Trace output  section for more information. You can mix options and the MEA filename in any order. You can place any or all of the command-line options in a response file, and you can nest response files. This functionality is mostly meaningless generality, but you might want long lists of -IGNORE or -SUPPRESS options that won t easily fit on a command line. The output file is an ASCII file named  filename.RPT  in the same directory as the MEA file. You can t currently change this. Use your favorite editor to view it, or specify -DELIMITED and use Excel. NOTE! When running report.exe, you may get error messages such as: ERROR: ReadRecords unknown record type 0 ERROR: CMEARecordEnum Unrecognized record type 0 . This message generally means that ICAP.DLL was unable to close the .MEA file properly at the end of the profile run.  ICAP.DLL closes the MEA file when it receives the DLL_PROCESS_DETACH message. The resulting report will still be correct - all that has happened is that REPORT has skipped the part of the .MEA file that did not contain real records. Reading reports IceCAP reports have four sections: Headers, Summaries, Caller/Callee lists, and the optional trace output. Report Headers. This section shows reference information useful for interpreting reports, e.g., the command line used to invoke report (handy for remembering which options were specified), configuration information about the machine used to generate the profile, and the profile options used. Key report header fields are explained below: Time type: The choices are Elapsed or Thread times. Thread times are only available on Windows 95 Pentium machines. Time method: The choices are Pentium cycle counter or the  QueryPerformanceCounter. Pentium cycle counts are more granular than units returned by the QueryPerformanceCounter API. Time frequency (units per millisecond): This value is taken from the CycleSpeed setting of the ICAP.INI file. IceCAP does not detect or use this value. This value could be helpful in interpreting the time units.  Time overhead: Default is 33. IceCAP excludes all the time that is spent in ICAP.DLL except for the minuscule portion where actual time stamp is taken. Report subtracts this value from each function to make this adjustment. You can change this value by using the -OVERHEAD option of Report. Summaries Following summaries are printed by default. Top 10 functions by number of calls. Top 10 functions by exclusive (non-attributed) time. Top 10 functions by inclusive (fully attributed) time. Top 10 functions by exclusive (non-attributed) CODE Pages. Top 10 functions by exclusive (non-attributed) DATA Pages. Top 10 functions by inclusive (fully attributed) CODE Pages. Top 10 functions by inclusive (fully attributed) DATA Pages. Summaries related to time can be suppressed by specifying -NOTIMES option, and summaries related to memory (pages) are printed only if memory profiling was enabled.  Summaries section can be suppressed by using -NOSUMMARIES option. Caller/Callee function list In general, the report is a series of blocks like this:    <Function that called Foo    >Function called by Foo Inclusive (fully attributed) time refers to time spent in Foo and in the functions which Foo may have called. Exclusive (non attributed) time refers to time spent in Foo excluding functions which Foo may have called.  For example, If the exclusive time for Foo is 5 cycles and Foo calls only Bar whose exclusive time is 10 cycles then the inclusive time for Foo will be 15 cycles. Similarly, inclusive pages refer to pages referenced by Foo and functions which Foo may have called. Exclusive pages refer to pages referenced by Foo excluding the pages referenced by functions which Foo may have called. This section of the report can be suppressed by using the -NOFUNCLIST option. Trace output This section of the report prints profile information for every profile event in an application. The profile event is defined as every function entry and exit in the profiled section of the application. The function entry point is signified by a plus   sign and an exit is signified by a minus   sign. The  Delta  columns represent time and/or pages since the last profile event. The  Cumulative  columns represent total time and/or pages. While the function list output can answer a question like:  How many times function foo was called? ,  the trace output is useful in answering the question:  How many timing and memory resources were used on the nth call to function Foo? NOTE: Generating trace output is an intensive process and therefore takes considerably longer than when normal reports are produced.  You must use the -TRACE option to print this section. Miscellaneous report topics Symbols If a function is listed as a module + offset, then IceCAP was unable to find the symbol name for that function. If the symbol information is in a PDB or DBG file, IceCAP uses the following algorithm to find the symbol file: First, IceCAP looks for symbol files at the location stored in the .EXE or .DLL Next, IceCAP looks for the symbol file in the same directory as the .EXE or .DLL. NOTE: IceCAP is unable to report symbol names for static functions. IceCAP will recognize (i.e. display module names and symbols for) DLLs that are either statically referenced or which are loaded with any flavor of LoadLibrary. Times IceCAP measures different times in different units based on the configuration used for profiling. You can control time types and units using ICAP.INI options (see   option and  UseCycleCounter  option. The defaults are: Configuration Units Pentium running Win95 thread CPU cycles 486 running Win95 elapsed QueryPerformanceCounter ticks Pentium running NT elapsed CPU cycles 486 running NT elapsed QueryPerformanceCounter ticks Page Lists When memory profiling is ON, IceCAP reports CODE and DATA pages referenced by each profiled function. You can use -Pagelist option to get extra detail for each page. CODE page list columns have the following  meanings: Column Description Address of the referenced code page Module +  Offset for the address in Column 1. This column is blank if the module for this address is not found. Program Counter, i.e., Address of the instruction on the Code page that first caused this code page to be referenced. Exact symbol, Nearest symbol + Offset, or Module + Offset for the address in Column 3. This column is blank, if the module for the address is not found. *These columns can be suppressed by using the -NOPCVA option. In the page list output, DATA pages are further broken down into STACK pages and DATA pages. DATA and STACK page list columns have the following meanings: Column Description Address of the data page which was referenced. Module +  Offset for the address in Column 1. This column is blank, if the module for this address is not found. Program Counter, i.e., Address of the instruction on the Code page which first caused this data page to be referenced. Exact symbol, Nearest symbol + Offset, or Module + Offset calculated for the address in Column 3. This column is blank if the module for this address is not found. Virtual Address, i.e., the address on the data page which first caused the data page to be referenced. Exact symbol, Nearest symbol + Offset, or Module + Offset for the address in Column 5. If the module for this address is not found then this column is blank.  NOTE: This column will mostly be blank because for dynamic data addresses, which is mostly the case, a symbol can not be found. *These columns can be suppressed by using the -NOPCVA option. Delimited reports The -DELIMITED option is used to generate a tab-delimited report file for use in a spreadsheet program like Excel. To facilitate sorting and analyzing of report data, the delimited output fields are organized differently than the text output report. Delimited output fields are ordered as follows: 0 = total root function data, 1 = callee data, 2 = caller data Function Either root, callee, or caller (based on type) Address Function  address (if -ADDRESS specified) Module Function module name (if -MODULES specified) #Calls Total number of root calls, root calls from function, or root calls to function (based on type) %Calls #Calls / total calls Excl Time Total time spent in function, when called by function, or in child function (based on type) Min Excl Minimum exclusive time for single call Max Excl Maximum exclusive time for single call Avg Excl Exclusive Time / # of Calls %Total Excl Exclusive Time / Total time Incl Time Total time spent in function and children, when called by function, or in child tree (based on type) Min Incl Minimum inclusive time for single call Max Incl Maximum inclusive time for single call Avg Incl Inclusive Time / # of Calls %Total Incl Exclusive Time / Total time Excl Code Pages Total number of exclusive code pages referenced by this function  Excl Data Pages Total number of exclusive data pages referenced by this function Incl Code Pages Total number of inclusive (function and children) code pages referenced by this function Incl Data Pages Total number of inclusive (function and children) data pages referenced by this function Root Function Root function Root Address Root function address (if -ADDRESS specified) Root Module  Root function module name (if -MODULES specified) Root #Calls Total number of root calls  Root Excl Time Total time spent in root function Root Incl Time Total time spent in root function and children Root Excl Code Pages Total number of exclusive code pages referenced by the root function Root Excl Data Pages Total number of exclusive data pages referenced by the root function Root Incl Code Pages Total number of code pages referenced by the root function and its children Root Incl Data Pages Total number of data pages referenced by the root function and its children Column 2 can be used as part of a sort sequence to relate lines together because it always contains the function name. For example, sorting on column 2 (function) and column 1 (type) gives an alphabetic sort, whereas sorting on column 24 (root #calls), column 2 (function), and column 1 (type) gives a by calls sort.  Controlling data collection ICAP exports two sets of APIs: Thread specific and Process specific. Both sets of the APIs can be used to control whether profiling data is collected or not. Thread specific APIs These APIs operate only on the thread in which they are called. For example, if you have two threads with profiling on and you call SuspendCAP in one thread, profiling is suspended only for that thread. Thread specific APIs are: StartCAP() Start profiling. StopCAP() Stop profiling SuspendCAP() Suspend profiling ResumeCAP() Resume profiling These API s manipulate two per thread counters within ICAP.DLL: Start/Stop counter and Suspend/Resume counter. Process specific APIs These APIs operate on all of the threads in an application, i.e., the profiling is started or suspended for all of the threads. StartCAPAll() Start profiling. StopCAPAll() Stop profiling SuspendCAPAll() Suspend profiling ResumeCAPAll() Resume profiling These APIs manipulate two per-process counters within ICAP.DLL: Start/Stop counter and Suspend/Resume counter. Example This example shows how to use IceCAP APIs to profile certain functions and suspend profiling around un-interesting functions. Consider the scenario as depicted in the following diagram:  Call to function1 is enclosed in a StartCAP/StopCAP pair. If profiling is initially set off by including profile=0 setting in ICAP.INI, this turns profiling for function1 ON. Function1 calls function2. In function2, call to function3 is enclosed in another StartCAP/StopCAP pair. Profiling continues, because the StartCounter is still greater than 0. In function3, calls to a function like  waiting for user input  are enclosed in SuspendCAP()/ResumeCAP pair. This skips profiling for the  waiting for user input  function.  In this example, SuspendCAP()/ResumeCAP() pair can not be replaced with StartCAP()/StopCAP(). This is because the StartCounter will still be greater than 0 and profiling will continue. ICAPCTRL Applet The ICAPCTRL applet provides additional profiling control with its Start, Stop, Suspend, and Resume buttons. These buttons control a global start and suspend counter and work in conjunction with the thread and process specific counters. See API Counters below for more information on this topic.   EMBED PBrush   If you are going to use the API or ICAPCTRL, you should have a  profile=0  entry in ICAP.INI. Otherwise, ICAP will start profiling the application from its very first function call anyway. If you have added a  profile=0  entry to ICAP.INI that you later want to undo, you can either remove the entry or change the value to a nonzero numeric value such as  . This will cause profiling to commence when the application starts. It is not necessary to run ICAPCTRL to profile applications. API counters IceCAP maintains three sets of Start/Stop and Suspend/Resume counters: Per-thread counters. These counters are manipulated by the thread specific APIs as described above. Per-process counters. These counters are manipulated by the process specific APIs as described above. Global counters. These counters are system-wide counters and can be manipulated by using ICAPCTRL applet as described above. The start/stop counter indicates the relative excess of StartCAP calls over StopCAP calls. This counter must be greater than zero for data to be collected. The suspend/resume counter indicates the relative excess of SuspendCAP calls over ResumeCAP calls. This counter must be less than or equal to zero for data to be collected. In tandem, these counters allow an application to temporarily suspend data collection by calling SuspendCAP even if someone should call StartCAP. An application can also call StartCAP and StopCAP in a naturally matching way without disabling profiling on behalf of a spawning application. IceCAP uses the following algorithm to determine if profiling for a given thread is ON or OFF: If ((thread-start-count + process-start-count + global-start-count) > 0 AND (thread-suspend-count + process-suspend-count + global-suspend-count) <= 0), then this thread is being profiled otherwise the profiling is suspended or OFF. The global counts never change per thread or per process counts and vice versa, but all are used to determine profiling state. Special Problems Assembly language The assembly language functions can be profiled by putting a _penter call into the function prologue. This can be automatically done with code like this: profile = 1 include prologue.inc myfcn proc far c public uses edi, ... Alternatively: include prologue.inc myfcn proc far c public <profile> uses edi, ... Turning profiling off There are three ways in which profiling can be disabled: By adding a section to ICAP.INI that includes a profile=never statement. Relinking the application with PENTER.LIB instead of ICAP.LIB. This stubs out all of the ICAP calls. The application can always be linked later with ICAP.LIB to restore the profiling capability. Recompiling everything without the -Gh option and with -DPROFILE=0.  This, of course, makes the application unprofilable. NT 4.0 Fibers NT 4.0 added support for a new execution context called fiber. Fiber is a lightweight execution context and has following characteristics: Each Fibers contain a separate stack Fibers run on top of native Win32 threads. Actually from the system's standpoint, a fiber assumes the identity of the Win32 thread it is running on.  Fiber shares the thread local storage of its parent thread. Fibers are non-preemptive with respect to the thread they are currently running on i.e., they are switched manually. IceCAP 3.1 supports applications which use fibers. As noted above, fibers are only available on NT 4.0. When an application uses fibers, the per-thread APIs (StartCAP, StopCAP, ResumeCAP, SuspendCAP) are treated as fiber specific. In fact, IceCAP assumes that each thread as at least one fiber. If an application does use Fibers and profile=0 in ICAP.INI then following will be true: StartCAP will start profiling for the Fiber from which the StartCAP API call was made. Subsequent Fibers for the same thread will continue to have the profiling off. The user will have to issue StartCAP for each Fiber. Similarly StopCAP will stop profiling for the Fiber from which the StopCAP was called. IceCAP trace output includes the fiber number after the thread ID. For example, if an application creates three fibers from thread number 3, the thread ID for the first fiber will be printed as 3, the second fiber will be printed as 3.1, the third fiber as 3.2, and so on. Note that the id for the first fiber is not printed. Memory Profiling Notes When profiling an application for memory references, keep the following in mind: Even though IceCAP allows you to profile an application for execution and memory at the same time,  the timing information in such case is heavily skewed and should not be relied upon for performance tuning purposes. We recommend profiling your application for execution and memory separately. Memory profiling will slow the execution of your application. Profiling for all pages (Pages=All setting) is slower than profiling for page faults (Pages=New setting). This is because, when Pages=All, ICAP.DLL will clear the working set for the application at every call entry and exit. Instead of gathering memory data for all of your application, we suggest that you start with profiling off (profile=0 in ICAP.INI) and use StartCAP(), StopCAP() APIs to record memory reference data for the critical portions of your application. When memory profiling is ON, the amount of data that ICAP.DLL needs to record to MEA file is considerably larger than the execution profiling data. When memory profiling data is recorded, allow MEA file size to be 2 to 3 times larger than when only execution data is recorded. When profiling multiple threads for memory, the IceCAP will record page reference data for the first thread that profiling was turned on. For all subsequent threads for which profiling is turned on, only timing (execution) data is recorded and page reference data is ignored. If an application has any background threads running while memory reference data is recorded, the page reference lists will be contaminated with pages belonging to background threads. Ideally, while doing memory profiling, all background threads should be turned off. However, if this is not possible we suggest that you minimize the number of background threads and be aware of such contamination. When an application is profiled under Windows 95, the system pages information is not process specific. Under Windows 95, system pages are shared by all processes. Furthermore, some of the system pages are always locked. Therefore, under Windows 95 system pages report could include pages that were brought in by another process and some system pages (that are always locked) may never show up in the page reference list. On Windows 95, when memory profiling is ON, IceCAP is not able to record thread times correctly. Therefore, on Windows 95, if memory profiling is ON,  IceCAP defaults to the  time=elapsed  setting. Profiling for Memory  Out-of-process When profiling for memory in-process, IceCAP excludes the pages used by ICAP.DLL. If the profiled application also uses any of the pages which are used by ICAP.DLL, then these pages will be incorrectly excluded from the report. Generally, this will only happen if your application was using the same working set or system APIs as ICAP.DLL   a rare case. If you are profiling for new pages (Pages=New setting), this is even a more trivial problem.  If you are concerned about this IceCAP behavior, you can profile for memory  out-of-process . This is where you run your application through ICECAP.EXE (provided on the IceCAP share). ICECAP.EXE then spawns the application as a debugee process and measures memory data out-of-process. To use ICECAP.EXE, enter the following as command line: ICECAP <your-app> <your-app-options> For example, to profile  Sample -X , you would run  ICECAP Sample -X NOTE: Recording page reference data out-of-process requires that at every profile event there is a context switch to the parent application (ICECAP.EXE), which records the data and switches control back to ICAP.DLL. This means that  gathering memory data  out-of-process  considerably slows your application. When memory profiling data is gathered using ICECAP.EXE, the differences in the following ICAP.INI settings should be noted: Setting In-process memory profiling Out-of-process memory profiling (ICECAP.EXE is used). Pages=All Memory profiling is enabled. All referenced pages for each function are recorded. Memory profiling is enabled (default). All referenced pages for each function are recorded. Pages=New Memory profiling is enabled. Only page faults for each function are recorded. Memory profiling is enabled. Only page faults for each function are recorded. Pages=Never Memory profiling is disabled (default). Pages=All setting is assumed, i.e., memory profiling is enabled and all referenced pages for each function are recorded. Summary of Restrictions Free disk space equal to MaxMeaSize (default 32M) is required. (icap.dll creates a large memory mapped file during the profile run). If an application calls setjmp, then the runtime library DLL must be used. Code which directly modifies return addresses on the stack can not be profiled. Do not use the optidata linker option when building for profiling on Windows 95 (as this prevents IceCAP from safely writing to the import table). If function depth exceeds MaxCallDepth (default 256) the profiling is suspended. Only public functions are listed in the reports. Functions called through a GetProcAddress pointer can not be profiled, unless they were compiled with -Gh and linked with ICAP.LIB Second instance of a profiled application can run but only the first one can be profiled. Memory reference data is only recorded for the first thread that profiling is ON. For subsequent threads only execution (timing) data is recorded. IceCAP Support, Aliases, and Web sites FAQ.DOC This file, available on the IceCAP share, includes answers to most frequently asked questions and is regularly updated. icapsup Use the icapsup alias for general support questions. icapbug Use the icapbug alias to send bug reports or suggestions. If reporting a bug, please include the usual fun details like operating system & version, processor type, ICAP.INI file (if any), steps to repro. icapuser Join the icapuser alias to receive information about subsequent releases and to share feedback with other IceCAP users. IceCAP web site The IceCAP home page can be accessed at http://pdrserve/IceCAP/ Toolbox This is an internal web site which has collection of tools which are available for sharing across Microsoft. If you have a macro, utility, or applet that enhances the usability of IceCAP, please add it to this web site. You can access the Toolbox web site at http://pdrserve/Toolbox/ About Internal Tools "Our mission is to provide Microsoft with a competitive advantage by providing the best development tools and processes If you have an idea for a development tool that can help us fulfill this mission, please contact GSRana. To view the current list of our projects visit our web site at http://pdrserve/Tooltown/  Import patching allows IceCAP to report time and memory used by functions in DLLs which are not compiled for profiling, e.g., system, user32, etc.,  See FAQ.DOC on the IceCAP share for more explanation on this topic.  Run Link -dump -headers command, and look at the debug directory information to see this location.  In this example, the  profile  option appears in the  macroarg  portion of the syntax specified in the MASM Programmer s Guide.  ICAPEXP.H assumes you mean PROFILE = 1 if you don t define the symbol explicitly. Why else would you have included the file? IceCAP 3.1 User s Guide m Confidential Page  void main ( ) StartCAP(); call to function1 StopCAP(); call function2 function1 StartCAP(); call to function3 StopCAP(); function2 SuspendCAP(); Wait for user input ResumeCAP(); function3 Normal Heading 1 Heading 2 Heading 3 Heading 4 Default Paragraph Font TOC 3 TOC 2 TOC 1 Footer Footnote Reference Footnote Text Normal Indent table text title subtitle byline Header sample TOC 4 TOC 5 TOC 6 TOC 7 TOC 8 TOC 9 Body Text future Question _Toc356562721 _Toc317804749 _Toc356562722 OLE_LINK1 _Toc356562723 _Toc356562724 _Toc356562725 _Toc356562726 _Toc356562727 _Toc317804750 _Toc356562728 _Toc317804751 _Toc356562729 _Toc356562730 _Toc356562731 _Toc356562732 _Toc317804752 _Toc356562733 _Toc356562734 _Toc356562735 _Toc356562736 _Toc356562737 _Toc356562738 _Toc356562739 _Toc356562740 _Toc356562741 _Toc356562742 _Toc356562743 _Toc356562744 _Toc356562745 _Toc317804753 _Toc356562746 _Toc317804754 _Toc356562747 _Toc317804755 _Toc356562748 _Toc356562749 _Toc356562750 _Toc317804764 _Toc356562751 _Toc356562752 _Toc317804756 _Toc356562753 _Toc356562754 _Toc356562755 _Toc356562756 _Toc356562757 _Toc356562758 _Toc356562759 _Toc356562760 C:\GSR\icecap31.doc C:\GSR\icecap31.doc C:\GSR\icecap31.doc C:\GSR\icecap31.doc C:\GSR\icecap31.doc C:\GSR\icecap31.doc C:\gsr\icecap31.doc C:\gsr\icecap31.doc G. S. Rana C:\icap\docs\user\icecap31.doc C:\GSR\icecap3A.doc @\\GSRANA\HP5L Ne00: winspool HP LaserJet 4L \\GSRANA\HP5L etter \\GSRANA\HP5L etter Times New Roman Symbol Arial Microsoft Logo Book Antiqua Courier New Wingdings Palatino IceCAP!Internal Call Attributed Profiler For Windows 95 and Windows NT G. S. Rana
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\readme.txt ===
The DirectInput headers are generated from the following location
%_NTDRIVE%%_NTROOT%\MultiMedia\Published\DirectX\Dinput

The Directory structure of this tree is as follows:

Dinput - 
	- DiConfig		Mapper UI
	- Diquick		Test application for Dinput functionality
	- Dx7
		- Dll		Dinput7A DLL code
	- Dx8
		- Dll		Dinput8 DLL code
		- DiMap		Device configuration ini parser
	* DxFF			Force Editing tool ( SDK team will be taking over)
	- IhvMap		Image and configuration files for selected devices
	- mmDrv			Win9x components
		- JoyHid	VjoyD mini driver to enable HID devices to talk to winMM
		- MsAnalog	Default driver for analog gameport devices
		- MsJstick	
		- VjoyD		Win9x joystick class driver
	- PID			USB/HID Force Feedback class driver
	- VxD			Dinput VxD
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\dimapcfg\dimapcfg.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Using DIMapCfg to create DirectInput device map files Title _PID_HLINKSUsing DIMapCfg to create DirectInput device map files David Kline Normal.dot Shane Evans Microsoft Word 9.0^C(NL , #&')*) -0-(0%()( (((((((((((((((((((((((((((((((((((((((((((((((((( %&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz &'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz >(xDy %rFG'  Oo:,EF vvq[jsG kj3Iy|  n/!r Upp:P CpCgx Wybibs ].9.5 WiUvd IeV(J YU]Q# =wNIo# xcT/4l Zd]Iw ?%gh[ E9nEn} 8`[*C 6w"Y& 6Cdc> 9;UFO` (<Ias .n|ie k;\$o bLy`mR~ KMF[ym e;ZFP_* go0Q" gPK7{ Moiwr :TW6Ww 1kjZ@ m{P+uk o/Zed 1 IP: ]RkyPI Peu#! HRYuDy u@.cS$L TYu8cl E_1 +# oa+Cp K31bY XYB+H HeVxU )$+*($''-2@7-0=0''8L9=CEHIH+6OUNFT@GHE !E.'.EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE %&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz &'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz yl/%y +[y$b UU[hB %9T`Gs, l2@c` pZ&YeF 7+.FG dCt'f Ersiz ,bxl- rF;*(  (9%p 1ZtQ@ YuK%0 u]FFV gp~e&# ++[BU QH$6N ~tX.z  , #&')*) -0-(0%()( (((((((((((((((((((((((((((((((((((((((((((((((((( %&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz &'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz 8U<r?: k?$Yy o^/_F i;wG< #Y5I# >fO3i?* .R[,} VW2I2: YF=$q =OTYm$  iGIMJ W&|co} GIUeH qu<q: _^MgP qpx.+x f;]@e jm>,m< ySH%h zUy|= kd1#s sejm& S]/O[w #~]UN 8;w1&Gl;2 V-hmYx X_X]4 )$+*($''-2@7-0=0''8L9=CEHIH+6OUNFT@GHE !E.'.EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE %&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz &'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz yl/%y +[y$b UU[hB %9T`Gs, l2@c` pZ&YeF 7+.FG dCt'f Ersiz ,bxl- rF;*(  (9%p 1ZtQ@ YuK%0 u]FFV gp~e&# ++[BU QH$6N ~tX.z  , #&')*) -0-(0%()( (((((((((((((((((((((((((((((((((((((((((((((((((( %&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz &'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz 9_FCa X'+:~ &fgbILJ _!7St zh{(e PIQc} e2m^Lqmf >'Aom '%b'8 7_DQG 'o#j9u* K}*Kkk{Y -$`,Q<"D- Kvu[; h~!h'Tt E|57S @o/`9aE 9,cbTI9 -hdK}` (cm&-h n=YFI#= #9fga &@&R@ "Im"; 7sy>o "DcVm "*2+CI Cugo/ an")n nlRH<G b+-WR n|Wco k3E,glxea TBcKy  , #&')*) -0-(0%()( (((((((((((((((((((((((((((((((((((((((((((((((((( %&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz &'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz 8U<r?: k?$Yy o^/_F i;wG< #Y5I# >fO3i?* .R[,} VW2I2: YF=$q =OTYm$  iGIMJ W&|co} GIUeH qu<q: _^MgP qpx.+x f;]@e jm>,m< ySH%h zUy|= kd1#s sejm& S]/O[w #~]UN 8;w1&Gl;2 V-hmYx X_X]4  , #&')*) -0-(0%()( (((((((((((((((((((((((((((((((((((((((((((((((((( %&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz &'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz ]nmsO m48|a _Mp|[a5 <Eg}am} u;mSR m|Gqp }7KXc lCi;uN xrHu[{m*+ wsjx.Z j:yv1 b`mog oo5U" SZ[Oyu m<XEj ))b6d ffb@UU 9J+CR .-"iH. +[Kksg) [muz, tF/$q |(|M3R O}!.,$ ZKy}"I"A Z[Kw4 9x~vT&@ L6rHt .r4WUs rW3]7 .IKhu -3YKO yw/ gp*5_ zi_A7b "y u5V uY%32 rW3]7 S]^M, {q[AY\ mu[o"e xjMAm 3Bw[]F moL6lG z"M<oh <2G,L2 1bw37% .I',}MV ?7QF2 MB[hA S_A|? rW3]7 7\W)]_ j=R+& lI{zGV nf?:$ :K7B~ ?:Mo< lv?h* W`?.) kFBiW []r;V QRPWW 7Whe, !(Jo` b8=3D  POV= $SLgWoq yEe9B Igul@&5P ^[kzD zc\Owm UXacE 1PHS" $r.@ 2: TP#W998 ,4=]t 6.c`c`\ Y6RWg 5[=KO 8 pF+W #20d%YNA h%dpA Xt8e  +]]Ck rR69^DN m_O[;yfp -kNi4KPc 6$eb$ /<;{w cm+<j $V ne Gdut8e9 Cf9ch ]j($h G=s4` gMyq{q 2'[X~ G=s4` G=s4` \HQ,#] JUei4 rUaeF.^X ^\C,2A$R[ k+qsex ]Y'8IbjbjU The DIMapCfg Tool  TOC \o "1-3" \h \z   HYPERLINK \l "_Toc483761200"  The DIMapCfg Tool  PAGEREF _Toc483761200 \h   HYPERLINK \l "_Toc483761201"  About DIMapCfg  PAGEREF _Toc483761201 \h   HYPERLINK \l "_Toc483761202"  User Interface tour  PAGEREF _Toc483761202 \h   HYPERLINK \l "_Toc483761203"  Main application window  PAGEREF _Toc483761203 \h   HYPERLINK \l "_Toc483761204"  Layout Mode  PAGEREF _Toc483761204 \h   HYPERLINK \l "_Toc483761205"  Importing Image Files  PAGEREF _Toc483761205 \h   HYPERLINK \l "_Toc483761206"  Creating and Modifying Callouts  PAGEREF _Toc483761206 \h   HYPERLINK \l "_Toc483761207"  Modifying Callouts  PAGEREF _Toc483761207 \h   HYPERLINK \l "_Toc483761208"  Assigning Actions  PAGEREF _Toc483761208 \h   HYPERLINK \l "_Toc483761209"  Saving  PAGEREF _Toc483761209 \h   HYPERLINK \l "_Toc483761210"  Testing device mappings  PAGEREF _Toc483761210 \h   HYPERLINK \l "_Toc483761211"  Known issues  PAGEREF _Toc483761211 \h  About DIMapCfg The DirectInput Mapper Configuration tool (DIMapCfg) is an tool designed to simplify the process of generating custom device mappings.  DIMapCfg provides a graphical interface for placing callout lines and text, and for choosing default mappings for the genres supported in DirectX 8.0. Note: This tool is a work in progress. Please refer to the   HYPERLINK  \l "_Known_issues"  Known Issues  section for more information. User Interface tour The DIMapCfg user interface consists of two windows: the main application window and the configuration dialog. Main application window The main DIMapCfg window provides controls for enumerating and configuring devices.  The window is divided into two sections:  Genre and device selection Edit Graphic (also for assigning mappings) The main DIMapCfg window Use the  Genre group  list to specify the type of genre (arcade, sports, flight, etc) you are interested in configuring, then select the desired genre from the Genre list. When the tool starts, it automatically enumerates installed devices and fills the Devices dropdown list to contain all of the joystick/gaming devices connected to your system, sorted alphabetically. To import the images (views Graphic), callouts, and overlays for a device, select it in the Devices list, then click the Edit button. Clicking this button invokes the graphic and configuration window, where you can import device images and overlays, as well as create callout lines and text boxes. All actions are performed through a context-sensitive popup menu that is displayed when you right click within the layout section of the interface.  Clicking in the area bounded by the red dashed line opens the popup menu used to import/remove images for the device and to create/remove callouts, as shown below.  Clicking in the area bounded by the white dashed line for a callout opens the popup menu used to manipulate the callout, as shown here. Both of these menus are described in more detail later in this document. Layout Mode Click the Edit Graphic button to invoke DirectInput Mapper Default UI in Layout Mode. Layout mode is a special mode of the default UI in which you import images, create callouts and attach overlays, as well as provide default mapping for your device. Note the Layout button that appears at the botomm of the UI when in Layout Mode. Clicking this button toggles the red dashed line that marks the image area, and the white dashed lines around each callout rectangle. Importing Image Files Click the Edit Graphic button on the main application window to open the UI in Layout Mode. The first task you need to perform is to import a device image file for your device. All graphic and callout editing in the DirectInput Mapper is initiated via the right mouse button.   A right-click within the red outline displays the following menu: Choose the Select Image(s) menu item to invoke a standard Open File common dialog, then navigate to the desired image and click the Open button to import it. Note the following restrictions for image files: Dimensions: 384x320 Format: BMP supported in tool, BMP and PNG to be supported in DirectX 8. Attributes: 24-bit color, alpha channel. Image should show device over transparent background with antialiased edges. Creating and Modifying Callouts Follow these steps to create a callout: Click within the red dashed line that denotes the image area of the UI to bring up the main context menu (pictured in the preceding section).  Choose the New Callout menu item to begin creating a callout. As soon as you choose the New Callout item, the UI changes input modes (silently).  Left click within the image area to set the top left corner of the text rectangle in which games will display an action name. Drag the rectangle to the desired size and left click again to enter Alignment Mode. Alignment Mode sets the recommended text alignment within the text rectangle. In this mode, an alignment box follows the cursor. You can set center, left, right, top, bottom, or any combination of top/bottom left/right. When the alignment box is properly placed, Left Click to enter Line Mode. While in Line Mode, each Left Click generates a point for a series of segments in a line. Lines can be drawn with up to four segments (5 points). Lines are drawn originating from the text box, so make sure you create the first point in the line near the text rectangle. Exit line mode by right clicking anywhere within the image area. Line mode completes automatically when five points have been created. After the line is drawn, the device object assignment dialog appears, as shown below. Select the device object to which the callout corresponds and click OK.  When the device object is selected, an Open File dialog appears for overlay image selection. Select the desired overlay image, and click Open. If you do not wish to include an overlay for this control, click Cancel. Modifying Callouts Right clicking within the white dashed rectangle for a callout displayed the context menu for modifying that callout.  Use this menu to change the attributes of any existing callout. Choosing any of these options takes you back to corresponding step from Creating Callouts, though subsequent steps are not automatically invoked. Assigning Actions Click the Layout button at the bottom of the UI to hide the layout lines. Assigning actions is simple. Select a device control by clicking on the callout rectangle for a control, then selecting an action from the action list at the right side of the UI. In this mode, you are setting the defaults users will receive when playing a game of this genre. Choose defaults to be intuitive for each device, for each genre. Saving To save callout data, and any action mappings for the currently selected genre, right click within the image area (but outside the boundary for any callouts) to bring up the main context menu. Choose the Save/Export item to save the settings into an ini file for your device and create a registry entry which DirectInput uses to access the ini and image files. (The registry entry can be changed later within regedit, if the files are not located in the desired directory at the time the content is authored.) Note: Clicking OK within the UI does not save your settings. The button serves no purpose within the context of this tool. Testing device mappings The Developer Preview release of DIMapCfg uses the DirectInput Mapper user interface to test (view) the current mappings for your device.   By using the mapper interface to display the current settings for your device, DIMapCfg provides the opportunity to see what your customers are going to see when using your device in a DirectX 8 title. To test your device using the mapper user interface: Launch DIMapCfg (if not currently running) Select the desired genre via the  Genre group  and  Genre  lists Click the View Mappings button Examine the image, callout positions, etc Click   to close the mapper interface This test option allows you to view your device s image, callouts and mappings for the currently selected genre.  This is the same view of the device that your customers will have when using a DirectInput Mapper enabled application. DirectInput Mapper user interface Known issues Below is a list of the known issues with the developer preview release of the DirectInput Mapper Configuration tool. Once you have saved a mapping ini file on your machine, there is no way to specify a different filename for that device unless you clear the OEMMapFile registry entry in the type key Launching the application takes quite a bit of time due the the fact that no performance optimizations have been implemented for loading genre.ini Regardless of whether or not you changed / saved changes in the configure mappings dialog, you will be prompted to save on close. You are prompted to save once per tab that you visit when closing the configure mappings dialog The tool does not yet support importing multiple device views. This will be supported in a subsequent build. Please report any issues you encounter with this tool to directx@microsoft.com.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\dimapcfg\readme.txt ===
DDK tool to enable IHVs to generate device configuration ini files.
This tool uses the genre.ini file generated in the directory ..\inc\genre.ini
The tool uses the configure mode of the dimapcfg UI
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\dx7\dll\dinput.txt ===
DirectInput 5.0 Beta 2 release notes

What's new in DirectInput for this release
==========================================
-New game controller control panel.  This new control panel replaces joy.cpl.
It allows hardware manufacturers to create property sheets for testing and
calibrating their devices.  The default property sheet allows calibration
and testing for a devices with up to 6 axes, 1 POV control, and up to 32 buttons.

-DirectInput now supports joysticks and other gaming devices using the same IDirectInput 
and IDirectInputDevice interfaces.  Take a look at the DirectInput documentation as well 
as the Space Donuts sample to see samples of using DirectInput to read joystick data.

-Force feedback support.  Support for force feedback controllers is new for DX 5.  
In order to support force feedback, a new interface called IDirectEffect was created 
as well as IDirectInputDevice2.  IDirectInputDevice2 contains the functionality of 
IDirectInputDevice as well as changes needed specifically to support force feedback devices.

-Driver support for force feedback devices.  DirectInput supports force feedback devices 
with either user or kernel mode drivers.

-VJOYD enhancements and bug fixes.
The analog polling part of VJOYD has now been placed in a new mini-driver called 
msanalog.vxd.  Therefore, VJOYD no longer requires any I/O resources.

Mini-drivers using configuration manager resources are now informed of its resources 
through a CM_START message when selected as the current driver in control panel.  
Restart no longer required.

msanalog can do standard analog polling at addresses other than the standard range 
of 200h to 20Fh.  Also, if two port ranges are given, the second one is no longer 
required to be a one byte length.

A reboot is no longer required if the first four joystick IDs were previously assigned 
to devices using mini-drivers but were changed to be assigned to analog devices.

VJOYD will no longer continue polling a mini-driver on a particular joystick id 
after the mini-driver has failed the JoyId callback for that id.

VJOYD will only call the mini-driver configuration manager callbacks for one driver 
for a particular set of resources so the resources a mini-driver is given can be assumed 
to private.

-Improved documentation.  The documentation contains all of the DirectInput API, 
method, and structure information as well as examples of using DirectInput to communicate 
with keyboards, mice and gaming devices.  Please report any problems with the documentation 
as bugs against DirectInput.  

Force Feedback
==============
As mentioned above, this release is the first containing support for force feedback 
devices.  We have created a new interface called IDirectInputEffect that represents a 
force feedback effect.  We have also created a new interface called IDirectInputDevice2.  
This interface contains all of the methods and functionality of IDirectInputDevice, as well 
as new methods and functionality added to support force feedback devices.


INITGUID vs. DXGUID.LIB
=======================
You can generate the DirectInput GUIDs yourself by defining INITGUID.  However, 
if you want to avoid generating all of the DirectInput GUIDs (including the ones you 
don't use), link to DXGUID.LIB instead of defining INITGUID.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\dx8\dll\dinput.txt ===
DirectInput 5.0 Beta 2 release notes

What's new in DirectInput for this release
==========================================
-New game controller control panel.  This new control panel replaces joy.cpl.
It allows hardware manufacturers to create property sheets for testing and
calibrating their devices.  The default property sheet allows calibration
and testing for a devices with up to 6 axes, 1 POV control, and up to 32 buttons.

-DirectInput now supports joysticks and other gaming devices using the same IDirectInput 
and IDirectInputDevice interfaces.  Take a look at the DirectInput documentation as well 
as the Space Donuts sample to see samples of using DirectInput to read joystick data.

-Force feedback support.  Support for force feedback controllers is new for DX 5.  
In order to support force feedback, a new interface called IDirectEffect was created 
as well as IDirectInputDevice2.  IDirectInputDevice2 contains the functionality of 
IDirectInputDevice as well as changes needed specifically to support force feedback devices.

-Driver support for force feedback devices.  DirectInput supports force feedback devices 
with either user or kernel mode drivers.

-VJOYD enhancements and bug fixes.
The analog polling part of VJOYD has now been placed in a new mini-driver called 
msanalog.vxd.  Therefore, VJOYD no longer requires any I/O resources.

Mini-drivers using configuration manager resources are now informed of its resources 
through a CM_START message when selected as the current driver in control panel.  
Restart no longer required.

msanalog can do standard analog polling at addresses other than the standard range 
of 200h to 20Fh.  Also, if two port ranges are given, the second one is no longer 
required to be a one byte length.

A reboot is no longer required if the first four joystick IDs were previously assigned 
to devices using mini-drivers but were changed to be assigned to analog devices.

VJOYD will no longer continue polling a mini-driver on a particular joystick id 
after the mini-driver has failed the JoyId callback for that id.

VJOYD will only call the mini-driver configuration manager callbacks for one driver 
for a particular set of resources so the resources a mini-driver is given can be assumed 
to private.

-Improved documentation.  The documentation contains all of the DirectInput API, 
method, and structure information as well as examples of using DirectInput to communicate 
with keyboards, mice and gaming devices.  Please report any problems with the documentation 
as bugs against DirectInput.  

Force Feedback
==============
As mentioned above, this release is the first containing support for force feedback 
devices.  We have created a new interface called IDirectInputEffect that represents a 
force feedback effect.  We have also created a new interface called IDirectInputDevice2.  
This interface contains all of the methods and functionality of IDirectInputDevice, as well 
as new methods and functionality added to support force feedback devices.


INITGUID vs. DXGUID.LIB
=======================
You can generate the DirectInput GUIDs yourself by defining INITGUID.  However, 
if you want to avoid generating all of the DirectInput GUIDs (including the ones you 
don't use), link to DXGUID.LIB instead of defining INITGUID.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\act_rs.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=ACT LABS RS
[ACT LABS RS]
Name=ACT LABS RS
Controls=X Axis,Y Axis,PointofViewHat,Button 0,Button 1,Button 2,Button 3,Button 4,Button 5,Button 6,Button 7,Button 8
ImageFileName.0=ACT_RS.PNG
[X Axis]
Type=0x2
Name=X-axis
Linedata.0=(212,18),(129,11),(33,11)
Align.0=L
CalloutMax.0=(0,0),(111,20)
[Y Axis]
Type=0x102
Name=Y-axis
Linedata.0=(304,173),(377,266),(377,295)
Align.0=C
CalloutMax.0=(327,286),(429,309)
[PointofViewHat]
Type=0x10
Name=POV 0
Linedata.0=(217,95),(309,156),(350,156)
Align.0=L
CalloutMax.0=(323,145),(430,168)
[Button 0]
Type=0x4
Name=Button 0
Linedata.0=(180,108),(122,164),(29,161)
Align.0=L
CalloutMax.0=(0,152),(111,175)
[Button 1]
Type=0x104
Name=Button 1
Linedata.0=(236,87),(284,114),(334,114)
Align.0=L
CalloutMax.0=(323,103),(430,126)
[Button 2]
Type=0x204
Name=Button 2
Linedata.0=(180,77),(117,85),(22,85)
Align.0=L
CalloutMax.0=(0,74),(109,96)
[Button 3]
Type=0x304
Name=Button 3
Linedata.0=(234,59),(304,41),(345,41)
Align.0=L
CalloutMax.0=(319,30),(430,51)
[Button 4]
Type=0x404
Name=Button 4
Linedata.0=(177,69),(119,54),(54,54)
Align.0=L
CalloutMax.0=(0,43),(110,65)
[Button 5]
Type=0x504
Name=Button 5
Linedata.0=(184,85),(120,118),(8,118)
Align.0=L
CalloutMax.0=(0,106),(110,130)
[Button 6]
Type=0x604
Name=Button 6
Linedata.0=(231,69),(350,69)
Align.0=L
CalloutMax.0=(320,59),(430,82)
[Button 7]
Type=0x704
Name=Button 7
Linedata.0=(241,49),(301,11),(327,11)
Align.0=L
CalloutMax.0=(317,0),(430,22)
[Button 8]
Type=0x804
Name=Button 8
Linedata.0=(222,142),(121,210),(40,210)
Align.0=L
CalloutMax.0=(0,198),(111,221)
[ACT LABS RS.Genre.2]
X Axis=1
Y Axis=2
PointofViewHat=1
Button 0=5
Button 1=4
Button 2=2
Button 3=3
Button 4=8
Button 5=6
Button 6=254
Button 7=1
Button 8=253
[ACT LABS RS.Genre.3]
Button 0=5
Button 1=4
Button 2=2
Button 3=1
Button 4=6
Button 6=254
Button 7=3
Button 8=253
X Axis=1
Y Axis=3
PointofViewHat=1
[ACT LABS RS.Genre.1]
X Axis=1
PointofViewHat=1
Button 0=2
Button 1=1
Button 2=3
Button 3=5
Button 4=4
Button 5=8
Button 6=9
Button 7=7
Button 8=253
Y Axis=2
[ACT LABS RS.Genre.41]
X Axis=1
Y Axis=4
PointofViewHat=1
Button 0=4
Button 1=6
Button 2=2
Button 3=1
Button 4=5
Button 5=7
Button 6=8
Button 7=3
Button 8=253
[ACT LABS RS.Genre.33]
X Axis=1
Y Axis=2
PointofViewHat=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=5
Button 7=253
Button 8=254
[ACT LABS RS.Genre.34]
X Axis=1
Y Axis=2
PointofViewHat=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=5
Button 7=253
Button 8=254
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\glmda_g.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=USB Human Interface Device
[USB Human Interface Device]
VID=1784
PID=41728
Name=GUILLEMOT DUAL ANALOG GAMEPAD
Controls=BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9,BUTTON 10,BUTTON 11,BUTTON 12,HAT SWITCH,Y AXIS,X AXIS,SLIDER,Z ROTATION
ImageFileName.0=GLMDA.PNG
ImageFormat.0=BMP
[Button 0]
UsagePage=0x9
Usage=0x1
Linedata.0=(423,198),(301,198),(244,186)
Align.0=C
CalloutMax.0=(306,176),(425,198)
Type=0x4
Name=BUTTON 0
[Button 1]
UsagePage=0x9
Usage=0x2
Linedata.0=(422,226),(302,226),(250,196)
Align.0=C
CalloutMax.0=(305,204),(424,227)
Type=0x104
Name=BUTTON 1
[Button 2]
UsagePage=0x9
Usage=0x3
Linedata.0=(423,169),(301,169),(189,186)
Align.0=C
CalloutMax.0=(305,146),(425,168)
Type=0x204
Name=BUTTON 2
[Button 3]
UsagePage=0x9
Usage=0x4
Linedata.0=(421,257),(301,257),(183,196)
Align.0=C
CalloutMax.0=(304,234),(424,257)
Type=0x304
Name=BUTTON 3
[Button 4]
UsagePage=0x9
Usage=0x5
Linedata.0=(421,128),(299,128),(180,80)
Align.0=C
CalloutMax.0=(302,105),(423,128)
Type=0x404
Name=BUTTON 4
[Button 5]
UsagePage=0x9
Usage=0x6
Linedata.0=(421,69),(296,69),(250,76),(182,66)
Align.0=C
CalloutMax.0=(302,46),(423,69)
Type=0x504
Name=BUTTON 5
[Button 6]
UsagePage=0x9
Usage=0x7
Linedata.0=(421,39),(296,39),(202,63)
Align.0=C
CalloutMax.0=(301,16),(424,39)
Type=0x604
Name=BUTTON 6
[Button 7]
UsagePage=0x9
Usage=0x8
Linedata.0=(422,96),(298,96),(202,78)
Align.0=C
CalloutMax.0=(301,74),(425,96)
Type=0x704
Name=BUTTON 7
[Button 8]
UsagePage=0x9
Usage=0x9
Linedata.0=(7,211),(101,210),(149,128)
Align.0=C
CalloutMax.0=(7,190),(98,211)
Type=0x804
Name=BUTTON 8
[Button 9]
UsagePage=0x9
Usage=0xA
Linedata.0=(164,26),(262,26),(187,26),(187,94)
Align.0=C
CalloutMax.0=(164,6),(264,26)
Type=0x904
Name=BUTTON 9
[Button 10]
UsagePage=0x9
Usage=0xB
Linedata.0=(360,301),(259,301),(231,226),(232,226)
Align.0=C
CalloutMax.0=(262,281),(362,301)
Type=0xA04
Name=BUTTON 10
[Button 11]
UsagePage=0x9
Usage=0xC
Linedata.0=(77,299),(183,299),(202,224)
Align.0=C
CalloutMax.0=(78,279),(178,299)
Type=0xB04
Name=BUTTON 11
[Button 12]
UsagePage=0x9
Usage=0xD
Linedata.0=(269,169),(205,169),(180,129)
Align.0=C
CalloutMax.0=(210,150),(270,170)
Type=0xC04
Name=BUTTON 12
[Hat Switch]
UsagePage=0x1
Usage=0x39
Linedata.0=(9,96),(106,96),(109,137),(109,138)
Align.0=C
CalloutMax.0=(10,77),(110,97)
Type=0x10
Name=HAT SWITCH
[Y Axis]
UsagePage=0x1
Usage=0x31
Linedata.0=(7,272),(124,272),(156,142)
Align.0=C
CalloutMax.0=(7,251),(117,273)
Type=0x102
Name=Y AXIS
[X Axis]
UsagePage=0x1
Usage=0x30
Linedata.0=(8,244),(111,244),(139,141)
Align.0=C
CalloutMax.0=(8,222),(108,245)
Type=0x2
Name=X AXIS
[Slider]
UsagePage=0x1
Usage=0x36
Linedata.0=(9,56),(140,56),(178,109)
Align.0=C
CalloutMax.0=(10,33),(130,56)
Type=0x202
Name=SLIDER
[Z Rotation]
UsagePage=0x1
Usage=0x35
Linedata.0=(11,28),(138,28),(178,89)
Align.0=C
CalloutMax.0=(10,6),(130,29)
Type=0x502
Name=Z ROTATION
[USB Human Interface Device.Genre.34]
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=5
Button 11=253
Button 12=254
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.33]
Button 3=1
Button 4=4
Button 5=2
Button 6=5
Button 7=3
Button 9=254
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.24]
Button 0=7
Button 2=4
Button 3=3
Button 4=5
Button 5=6
Button 6=1
Button 7=2
Button 9=254
Button 10=8
Button 11=9
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.26]
Button 0=7
Button 2=8
Button 3=3
Button 4=4
Button 5=1
Button 6=5
Button 7=2
Button 9=254
Button 10=9
Button 11=6
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.27]
Button 0=6
Button 1=7
Button 2=5
Button 3=8
Button 4=4
Button 5=1
Button 6=2
Button 7=3
Button 9=254
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.25]
Button 0=7
Button 2=8
Button 3=3
Button 4=2
Button 5=4
Button 6=5
Button 7=1
Button 9=254
Button 10=6
Button 11=9
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.13]
Button 0=6
Button 1=8
Button 2=7
Button 3=3
Button 4=4
Button 5=5
Button 6=2
Button 7=1
Button 9=254
Button 10=9
Button 11=10
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=3
Z Rotation=1
[USB Human Interface Device.Genre.28]
Button 0=6
Button 1=2
Button 4=3
Button 5=5
Button 6=4
Button 7=1
Button 9=254
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.32]
Button 0=7
Button 3=1
Button 4=4
Button 5=5
Button 6=2
Button 7=3
Button 10=6
Button 11=254
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.31]
Button 0=9
Button 1=10
Button 2=8
Button 3=3
Button 4=7
Button 5=1
Button 6=2
Button 7=5
Button 8=12
Button 9=254
Button 10=6
Button 11=4
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.30]
Button 0=10
Button 1=13
Button 2=5
Button 3=6
Button 4=3
Button 5=4
Button 6=2
Button 7=1
Button 8=11
Button 9=254
Button 10=8
Button 11=9
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
Slider=3
[USB Human Interface Device.Genre.29]
Button 0=3
Button 1=7
Button 3=5
Button 4=2
Button 5=4
Button 6=6
Button 7=1
Button 9=254
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.9]
Button 0=4
Button 1=3
Button 2=8
Button 3=2
Button 6=7
Button 7=1
Button 9=254
Button 10=5
Button 11=6
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
Z Rotation=3
[USB Human Interface Device.Genre.41]
Button 0=3
Button 1=2
Button 2=6
Button 3=1
Button 6=8
Button 7=7
Button 9=254
Button 10=5
Button 11=4
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
Slider=4
Z Rotation=3
[USB Human Interface Device.Genre.1]
Button 0=3
Button 2=4
Button 4=5
Button 5=6
Button 6=9
Button 7=7
Button 8=8
Button 9=254
Button 10=2
Button 11=1
Button 12=253
Hat Switch=1
Y Axis=3
X Axis=1
Slider=2
[USB Human Interface Device.Genre.3]
Button 0=6
Button 1=4
Button 2=5
Button 3=1
Button 9=254
Button 10=3
Button 11=2
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
Slider=3
Z Rotation=4
[USB Human Interface Device.Genre.39]
Button 0=3
Button 1=7
Button 2=12
Button 3=1
Button 4=4
Button 5=2
Button 6=6
Button 7=5
Button 8=10
Button 9=254
Button 10=13
Button 11=14
Button 12=253
Y Axis=2
Slider=1
[USB Human Interface Device.Genre.40]
Button 0=3
Button 1=9
Button 3=10
Button 4=4
Button 5=2
Button 6=6
Button 7=5
Button 8=1
Button 9=254
Button 10=8
Button 11=7
Button 12=253
Y Axis=1
X Axis=2
Slider=3
Z Rotation=4
[]
ImageFileName.0=DUAL ANALOG.PNG
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.8]
MapExists=1
Z ROTATION=0x1
Y AXIS=0x2
BUTTON 4=0x1
BUTTON 7=0x2
BUTTON 5=0x3
BUTTON 10=0x4
BUTTON 11=0x5
BUTTON 0=0x6
BUTTON 1=0x7
BUTTON 12=0xFD
BUTTON 3=0x8
HAT SWITCH=0x1
BUTTON 2=0x9
X AXIS=0x3
BUTTON 6=0xA
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.10]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 3=0x2
BUTTON 2=0x3
BUTTON 10=0x4
BUTTON 11=0x5
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 6=0x6
BUTTON 4=0x7
BUTTON 5=0x8
Z ROTATION=0x3
BUTTON 1=0x9
BUTTON 7=0xA
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.11]
MapExists=1
Z ROTATION=0x1
Y AXIS=0x2
BUTTON 4=0x1
BUTTON 1=0x2
BUTTON 0=0x3
BUTTON 7=0x4
BUTTON 3=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 2=0x8
BUTTON 11=0x9
X AXIS=0x3
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.12]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 3=0x1
BUTTON 4=0x2
BUTTON 7=0x3
BUTTON 6=0x4
BUTTON 5=0x5
BUTTON 12=0xFD
BUTTON 0=0x6
BUTTON 2=0x7
BUTTON 11=0x8
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.14]
MapExists=1
Z ROTATION=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 5=0x2
BUTTON 4=0x3
BUTTON 6=0x4
BUTTON 8=0x5
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 11=0x6
X AXIS=0x3
BUTTON 2=0x7
BUTTON 3=0x8
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.15]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 6=0x4
BUTTON 7=0x5
BUTTON 4=0x6
BUTTON 5=0x7
BUTTON 3=0x8
BUTTON 12=0xFD
BUTTON 10=0x9
BUTTON 11=0xA
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.16]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 6=0x2
BUTTON 5=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 12=0xFD
BUTTON 0=0x6
BUTTON 2=0x7
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.17]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 3=0x2
BUTTON 6=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 7=0x6
BUTTON 12=0xFD
BUTTON 0=0x7
BUTTON 1=0x8
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.18]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 5=0x2
BUTTON 0=0x3
BUTTON 6=0x4
BUTTON 7=0x5
BUTTON 11=0x6
BUTTON 3=0x7
BUTTON 4=0x8
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 1=0x9
BUTTON 10=0xA
BUTTON 8=0xB
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.19]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.19]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 4=0x2
BUTTON 6=0x3
BUTTON 7=0x4
BUTTON 0=0x5
BUTTON 3=0x6
BUTTON 5=0x7
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 8=0x8
BUTTON 1=0x9
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.20]
MapExists=1
BUTTON 4=0x1
BUTTON 6=0x2
BUTTON 7=0x3
BUTTON 12=0xFD
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.21]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.21]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 3=0x2
BUTTON 4=0x3
BUTTON 7=0x4
BUTTON 6=0x5
BUTTON 5=0x6
BUTTON 12=0xFD
BUTTON 1=0x7
BUTTON 11=0x8
BUTTON 2=0x9
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.22]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 5=0x1
BUTTON 7=0x2
BUTTON 4=0x3
BUTTON 6=0x4
BUTTON 3=0x5
BUTTON 12=0xFD
BUTTON 2=0x6
BUTTON 1=0x7
BUTTON 10=0x8
BUTTON 0=0x9
BUTTON 8=0xA
BUTTON 11=0xB
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.23]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 3=0x2
BUTTON 6=0x3
BUTTON 2=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 12=0xFD
BUTTON 11=0x7
BUTTON 0=0x9
BUTTON 10=0xA
BUTTON 1=0xB
BUTTON 8=0xD
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.2]
MapExists=1
X AXIS=0x1
SLIDER=0x2
Y AXIS=0x3
BUTTON 3=0x1
BUTTON 10=0x2
BUTTON 11=0x3
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 5=0x4
BUTTON 6=0x5
BUTTON 4=0x6
BUTTON 7=0x7
BUTTON 2=0x8
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.4]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 10=0x1
BUTTON 11=0x2
BUTTON 7=0x3
BUTTON 12=0xFD
HAT SWITCH=0x1
Z ROTATION=0x5
BUTTON 0=0x4
BUTTON 1=0x5
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 11=0xFD
HAT SWITCH=0x1
BUTTON 3=0x4
Z ROTATION=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 12=0xFE
BUTTON 10=0xFC
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.7]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 3=0x1
BUTTON 5=0x2
BUTTON 6=0x3
BUTTON 12=0xFD
HAT SWITCH=0x1
Z ROTATION=0x5
BUTTON 4=0x4
BUTTON 11=0x5
BUTTON 1=0x6
BUTTON 0=0x7
BUTTON 8=0x8
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.35]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.35]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 11=0xFD
HAT SWITCH=0x1
Z ROTATION=0x4
BUTTON 4=0x5
BUTTON 12=0xFE
BUTTON 10=0xFC
[USB HUMAN INTERFACE DEVICE.Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 11=0xFD
HAT SWITCH=0x1
Z ROTATION=0x4
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 12=0xFE
BUTTON 10=0xFC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\glmda.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=USB Human Interface Device
[USB Human Interface Device]
VID=1784
PID=41728
Name=DUALANALOGLEADERUSB
Controls=BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9,BUTTON 10,BUTTON 11,BUTTON 12,HAT SWITCH,Y AXIS,X AXIS,SLIDER,Z ROTATION
ImageFileName.0=GLMDA.PNG
ImageFormat.0=BMP
[Button 0]
UsagePage=0x9
Usage=0x1
Linedata.0=(423,198),(301,198),(244,186)
Align.0=C
CalloutMax.0=(306,176),(425,198)
Type=0x4
Name=BUTTON 0
[Button 1]
UsagePage=0x9
Usage=0x2
Linedata.0=(422,226),(302,226),(250,196)
Align.0=C
CalloutMax.0=(305,204),(424,227)
Type=0x104
Name=BUTTON 1
[Button 2]
UsagePage=0x9
Usage=0x3
Linedata.0=(423,169),(301,169),(189,186)
Align.0=C
CalloutMax.0=(305,146),(425,168)
Type=0x204
Name=BUTTON 2
[Button 3]
UsagePage=0x9
Usage=0x4
Linedata.0=(421,257),(301,257),(183,196)
Align.0=C
CalloutMax.0=(304,234),(424,257)
Type=0x304
Name=BUTTON 3
[Button 4]
UsagePage=0x9
Usage=0x5
Linedata.0=(421,128),(299,128),(180,80)
Align.0=C
CalloutMax.0=(302,105),(423,128)
Type=0x404
Name=BUTTON 4
[Button 5]
UsagePage=0x9
Usage=0x6
Linedata.0=(421,69),(296,69),(250,76),(182,66)
Align.0=C
CalloutMax.0=(302,46),(423,69)
Type=0x504
Name=BUTTON 5
[Button 6]
UsagePage=0x9
Usage=0x7
Linedata.0=(421,39),(296,39),(202,63)
Align.0=C
CalloutMax.0=(301,16),(424,39)
Type=0x604
Name=BUTTON 6
[Button 7]
UsagePage=0x9
Usage=0x8
Linedata.0=(422,96),(298,96),(202,78)
Align.0=C
CalloutMax.0=(301,74),(425,96)
Type=0x704
Name=BUTTON 7
[Button 8]
UsagePage=0x9
Usage=0x9
Linedata.0=(7,211),(101,210),(149,128)
Align.0=C
CalloutMax.0=(7,190),(98,211)
Type=0x804
Name=BUTTON 8
[Button 9]
UsagePage=0x9
Usage=0xA
Linedata.0=(164,26),(262,26),(187,26),(187,94)
Align.0=C
CalloutMax.0=(164,6),(264,26)
Type=0x904
Name=BUTTON 9
[Button 10]
UsagePage=0x9
Usage=0xB
Linedata.0=(360,301),(259,301),(231,226),(232,226)
Align.0=C
CalloutMax.0=(262,281),(362,301)
Type=0xA04
Name=BUTTON 10
[Button 11]
UsagePage=0x9
Usage=0xC
Linedata.0=(77,299),(183,299),(202,224)
Align.0=C
CalloutMax.0=(78,279),(178,299)
Type=0xB04
Name=BUTTON 11
[Button 12]
UsagePage=0x9
Usage=0xD
Linedata.0=(269,169),(205,169),(180,129)
Align.0=C
CalloutMax.0=(210,150),(270,170)
Type=0xC04
Name=BUTTON 12
[Hat Switch]
UsagePage=0x1
Usage=0x39
Linedata.0=(9,96),(106,96),(109,137),(109,138)
Align.0=C
CalloutMax.0=(10,77),(110,97)
Type=0x10
Name=HAT SWITCH
[Y Axis]
UsagePage=0x1
Usage=0x31
Linedata.0=(7,272),(124,272),(156,142)
Align.0=C
CalloutMax.0=(7,251),(117,273)
Type=0x102
Name=Y AXIS
[X Axis]
UsagePage=0x1
Usage=0x30
Linedata.0=(8,244),(111,244),(139,141)
Align.0=C
CalloutMax.0=(8,222),(108,245)
Type=0x2
Name=X AXIS
[Slider]
UsagePage=0x1
Usage=0x36
Linedata.0=(9,56),(140,56),(178,109)
Align.0=C
CalloutMax.0=(10,33),(130,56)
Type=0x202
Name=SLIDER
[Z Rotation]
UsagePage=0x1
Usage=0x35
Linedata.0=(11,28),(138,28),(178,89)
Align.0=C
CalloutMax.0=(10,6),(130,29)
Type=0x502
Name=Z ROTATION
[USB Human Interface Device.Genre.34]
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=5
Button 11=253
Button 12=254
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.33]
Button 3=1
Button 4=4
Button 5=2
Button 6=5
Button 7=3
Button 9=254
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.24]
Button 0=7
Button 2=4
Button 3=3
Button 4=5
Button 5=6
Button 6=1
Button 7=2
Button 9=254
Button 10=8
Button 11=9
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.26]
Button 0=7
Button 2=8
Button 3=3
Button 4=4
Button 5=1
Button 6=5
Button 7=2
Button 9=254
Button 10=9
Button 11=6
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.27]
Button 0=6
Button 1=7
Button 2=5
Button 3=8
Button 4=4
Button 5=1
Button 6=2
Button 7=3
Button 9=254
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.25]
Button 0=7
Button 2=8
Button 3=3
Button 4=2
Button 5=4
Button 6=5
Button 7=1
Button 9=254
Button 10=6
Button 11=9
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.13]
Button 0=6
Button 1=8
Button 2=7
Button 3=3
Button 4=4
Button 5=5
Button 6=2
Button 7=1
Button 9=254
Button 10=9
Button 11=10
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=3
Z Rotation=1
[USB Human Interface Device.Genre.28]
Button 0=6
Button 1=2
Button 4=3
Button 5=5
Button 6=4
Button 7=1
Button 9=254
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.32]
Button 0=7
Button 3=1
Button 4=4
Button 5=5
Button 6=2
Button 7=3
Button 10=6
Button 11=254
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.31]
Button 0=9
Button 1=10
Button 2=8
Button 3=3
Button 4=7
Button 5=1
Button 6=2
Button 7=5
Button 8=12
Button 9=254
Button 10=6
Button 11=4
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.30]
Button 0=10
Button 1=13
Button 2=5
Button 3=6
Button 4=3
Button 5=4
Button 6=2
Button 7=1
Button 8=11
Button 9=254
Button 10=8
Button 11=9
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
Slider=3
[USB Human Interface Device.Genre.29]
Button 0=3
Button 1=7
Button 3=5
Button 4=2
Button 5=4
Button 6=6
Button 7=1
Button 9=254
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.9]
Button 0=4
Button 1=3
Button 2=8
Button 3=2
Button 6=7
Button 7=1
Button 9=254
Button 10=5
Button 11=6
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
Z Rotation=3
[USB Human Interface Device.Genre.41]
Button 0=3
Button 1=2
Button 2=6
Button 3=1
Button 6=8
Button 7=7
Button 9=254
Button 10=5
Button 11=4
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
Slider=4
Z Rotation=3
[USB Human Interface Device.Genre.1]
Button 0=3
Button 2=4
Button 4=5
Button 5=6
Button 6=9
Button 7=7
Button 8=8
Button 9=254
Button 10=2
Button 11=1
Button 12=253
Hat Switch=1
Y Axis=3
X Axis=1
Slider=2
[USB Human Interface Device.Genre.3]
Button 0=6
Button 1=4
Button 2=5
Button 3=1
Button 9=254
Button 10=3
Button 11=2
Button 12=253
Hat Switch=1
Y Axis=2
X Axis=1
Slider=3
Z Rotation=4
[USB Human Interface Device.Genre.39]
Button 0=3
Button 1=7
Button 2=12
Button 3=1
Button 4=4
Button 5=2
Button 6=6
Button 7=5
Button 8=10
Button 9=254
Button 10=13
Button 11=14
Button 12=253
Y Axis=2
Slider=1
[USB Human Interface Device.Genre.40]
Button 0=3
Button 1=9
Button 3=10
Button 4=4
Button 5=2
Button 6=6
Button 7=5
Button 8=1
Button 9=254
Button 10=8
Button 11=7
Button 12=253
Y Axis=1
X Axis=2
Slider=3
Z Rotation=4
[]
ImageFileName.0=DUAL ANALOG.PNG
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.8]
MapExists=1
Z ROTATION=0x1
Y AXIS=0x2
BUTTON 4=0x1
BUTTON 7=0x2
BUTTON 5=0x3
BUTTON 10=0x4
BUTTON 11=0x5
BUTTON 0=0x6
BUTTON 1=0x7
BUTTON 12=0xFD
BUTTON 3=0x8
HAT SWITCH=0x1
BUTTON 2=0x9
X AXIS=0x3
BUTTON 6=0xA
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.10]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 3=0x2
BUTTON 2=0x3
BUTTON 10=0x4
BUTTON 11=0x5
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 6=0x6
BUTTON 4=0x7
BUTTON 5=0x8
Z ROTATION=0x3
BUTTON 1=0x9
BUTTON 7=0xA
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.11]
MapExists=1
Z ROTATION=0x1
Y AXIS=0x2
BUTTON 4=0x1
BUTTON 1=0x2
BUTTON 0=0x3
BUTTON 7=0x4
BUTTON 3=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 2=0x8
BUTTON 11=0x9
X AXIS=0x3
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.12]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 3=0x1
BUTTON 4=0x2
BUTTON 7=0x3
BUTTON 6=0x4
BUTTON 5=0x5
BUTTON 12=0xFD
BUTTON 0=0x6
BUTTON 2=0x7
BUTTON 11=0x8
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.14]
MapExists=1
Z ROTATION=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 5=0x2
BUTTON 4=0x3
BUTTON 6=0x4
BUTTON 8=0x5
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 11=0x6
X AXIS=0x3
BUTTON 2=0x7
BUTTON 3=0x8
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.15]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 6=0x4
BUTTON 7=0x5
BUTTON 4=0x6
BUTTON 5=0x7
BUTTON 3=0x8
BUTTON 12=0xFD
BUTTON 10=0x9
BUTTON 11=0xA
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.16]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 6=0x2
BUTTON 5=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 12=0xFD
BUTTON 0=0x6
BUTTON 2=0x7
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.17]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 3=0x2
BUTTON 6=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 7=0x6
BUTTON 12=0xFD
BUTTON 0=0x7
BUTTON 1=0x8
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.18]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 5=0x2
BUTTON 0=0x3
BUTTON 6=0x4
BUTTON 7=0x5
BUTTON 11=0x6
BUTTON 3=0x7
BUTTON 4=0x8
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 1=0x9
BUTTON 10=0xA
BUTTON 8=0xB
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.19]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.19]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 4=0x2
BUTTON 6=0x3
BUTTON 7=0x4
BUTTON 0=0x5
BUTTON 3=0x6
BUTTON 5=0x7
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 8=0x8
BUTTON 1=0x9
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.20]
MapExists=1
BUTTON 4=0x1
BUTTON 6=0x2
BUTTON 7=0x3
BUTTON 12=0xFD
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.21]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.21]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 3=0x2
BUTTON 4=0x3
BUTTON 7=0x4
BUTTON 6=0x5
BUTTON 5=0x6
BUTTON 12=0xFD
BUTTON 1=0x7
BUTTON 11=0x8
BUTTON 2=0x9
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.22]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 5=0x1
BUTTON 7=0x2
BUTTON 4=0x3
BUTTON 6=0x4
BUTTON 3=0x5
BUTTON 12=0xFD
BUTTON 2=0x6
BUTTON 1=0x7
BUTTON 10=0x8
BUTTON 0=0x9
BUTTON 8=0xA
BUTTON 11=0xB
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.23]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 3=0x2
BUTTON 6=0x3
BUTTON 2=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 12=0xFD
BUTTON 11=0x7
BUTTON 0=0x9
BUTTON 10=0xA
BUTTON 1=0xB
BUTTON 8=0xD
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.2]
MapExists=1
X AXIS=0x1
SLIDER=0x2
Y AXIS=0x3
BUTTON 3=0x1
BUTTON 10=0x2
BUTTON 11=0x3
BUTTON 12=0xFD
HAT SWITCH=0x1
BUTTON 5=0x4
BUTTON 6=0x5
BUTTON 4=0x6
BUTTON 7=0x7
BUTTON 2=0x8
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.4]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 10=0x1
BUTTON 11=0x2
BUTTON 7=0x3
BUTTON 12=0xFD
HAT SWITCH=0x1
Z ROTATION=0x5
BUTTON 0=0x4
BUTTON 1=0x5
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 11=0xFD
HAT SWITCH=0x1
BUTTON 3=0x4
Z ROTATION=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 12=0xFE
BUTTON 10=0xFC
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.7]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 3=0x1
BUTTON 5=0x2
BUTTON 6=0x3
BUTTON 12=0xFD
HAT SWITCH=0x1
Z ROTATION=0x5
BUTTON 4=0x4
BUTTON 11=0x5
BUTTON 1=0x6
BUTTON 0=0x7
BUTTON 8=0x8
BUTTON 9=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.35]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.35]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 11=0xFD
HAT SWITCH=0x1
Z ROTATION=0x4
BUTTON 4=0x5
BUTTON 12=0xFE
BUTTON 10=0xFC
[USB HUMAN INTERFACE DEVICE.Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 11=0xFD
HAT SWITCH=0x1
Z ROTATION=0x4
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 12=0xFE
BUTTON 10=0xFC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\glmdiggp.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=USB Human Interface Device
[USB Human Interface Device]
VID=1784
PID=41729
Name=DigitalGamePadUSB
Controls=BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9,BUTTON 10,BUTTON 11,BUTTON 12,Y AXIS,X AXIS
ImageFileName.0=GlmDigGP.PNG
ImageFormat.0=BMP
[Button 0]
UsagePage=0x9
Usage=0x1
Linedata.0=(423,209),(294,209),(245,186)
Align.0=L
CalloutMax.0=(299,186),(426,210)
Type=0x4
Name=BUTTON 0
[Button 1]
UsagePage=0x9
Usage=0x2
Linedata.0=(422,259),(293,259),(250,195)
Align.0=L
CalloutMax.0=(298,237),(424,259)
Type=0x104
Name=BUTTON 1
[Button 2]
UsagePage=0x9
Usage=0x3
Linedata.0=(421,181),(290,181),(195,177),(191,186),(190,186)
Align.0=L
CalloutMax.0=(299,158),(423,182)
Type=0x204
Name=BUTTON 2
[Button 3]
UsagePage=0x9
Usage=0x4
Linedata.0=(423,233),(295,233),(184,195)
Align.0=L
CalloutMax.0=(299,211),(424,233)
Type=0x304
Name=BUTTON 3
[Button 4]
UsagePage=0x9
Usage=0x5
Linedata.0=(281,25),(157,26),(157,64),(181,79)
Align.0=L
CalloutMax.0=(160,5),(283,27)
Type=0x404
Name=BUTTON 4
[Button 5]
UsagePage=0x9
Usage=0x6
Linedata.0=(343,50),(213,50),(182,64)
Align.0=L
CalloutMax.0=(219,29),(343,51)
Type=0x504
Name=BUTTON 5
[Button 6]
UsagePage=0x9
Usage=0x7
Linedata.0=(399,74),(271,74),(201,62)
Align.0=L
CalloutMax.0=(275,52),(401,75)
Type=0x604
Name=BUTTON 6
[Button 7]
UsagePage=0x9
Usage=0x8
Linedata.0=(422,101),(298,101),(201,78)
Align.0=L
CalloutMax.0=(301,79),(428,102)
Type=0x704
Name=BUTTON 7
[Button 8]
UsagePage=0x9
Usage=0x9
Linedata.0=(423,153),(300,153),(181,98)
Align.0=L
CalloutMax.0=(301,131),(429,153)
Type=0x804
Name=BUTTON 8
[Button 9]
UsagePage=0x9
Usage=0xA
Linedata.0=(422,126),(301,126),(201,95)
Align.0=C
CalloutMax.0=(304,107),(430,127)
Type=0x904
Name=BUTTON 9
[Button 10]
UsagePage=0x9
Usage=0xB
Linedata.0=(360,305),(257,305),(233,223)
Align.0=C
CalloutMax.0=(261,284),(361,304)
Type=0xA04
Name=BUTTON 10
[Button 11]
UsagePage=0x9
Usage=0xC
Linedata.0=(53,302),(185,302),(202,224)
Align.0=C
CalloutMax.0=(53,283),(180,303)
Type=0xB04
Name=BUTTON 11
[Button 12]
UsagePage=0x9
Usage=0xD
Linedata.0=(291,172),(193,172),(181,128)
Align.0=C
CalloutMax.0=(193,152),(293,172)
Type=0xC04
Name=BUTTON 12
[Y Axis]
UsagePage=0x1
Usage=0x31
Linedata.0=(26,60),(105,60),(105,131)
Align.0=L
CalloutMax.0=(26,38),(152,60)
Type=0x102
Name=Y AXIS
[X Axis]
UsagePage=0x1
Usage=0x30
Linedata.0=(105,35),(6,35),(6,142),(99,142),(102,142)
Align.0=L
CalloutMax.0=(7,11),(133,36)
Type=0x2
Name=X AXIS
[USB Human Interface Device.Genre.34]
Button 2=1
Button 3=3
Button 9=2
Y Axis=2
X Axis=1
Button 0=4
Button 1=5
Button 5=254
Button 12=253
[USB Human Interface Device.Genre.33]
Button 0=2
Button 1=5
Button 2=1
Button 3=4
Button 5=254
Button 9=3
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.24]
Button 0=2
Button 1=5
Button 2=6
Button 3=9
Button 4=8
Button 5=254
Button 6=7
Button 9=1
Button 10=4
Button 11=3
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.26]
Button 0=3
Button 1=7
Button 2=1
Button 3=5
Button 5=254
Button 6=6
Button 8=4
Button 9=2
Button 10=8
Button 11=9
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.27]
Button 0=4
Button 1=2
Button 2=1
Button 3=6
Button 5=254
Button 7=5
Button 9=3
Button 10=7
Button 11=8
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.25]
Button 0=4
Button 1=3
Button 2=2
Button 3=5
Button 5=254
Button 7=7
Button 8=6
Button 9=1
Button 10=8
Button 11=9
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.28]
Button 0=4
Button 1=6
Button 2=1
Button 3=2
Button 5=254
Button 8=5
Button 9=3
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.32]
Button 0=3
Button 1=5
Button 2=1
Button 4=6
Button 5=254
Button 8=2
Button 9=4
Button 11=7
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.31]
Button 0=2
Button 1=3
Button 2=7
Button 3=1
Button 4=12
Button 5=254
Button 6=8
Button 7=10
Button 8=9
Button 9=5
Button 10=6
Button 11=4
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.30]
Button 0=1
Button 1=6
Button 2=2
Button 3=10
Button 4=7
Button 5=254
Button 6=12
Button 7=11
Button 8=3
Button 9=5
Button 10=13
Button 11=4
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.29]
Button 0=6
Button 1=3
Button 2=4
Button 4=7
Button 5=254
Button 8=5
Button 9=1
Button 10=2
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.9]
Button 0=4
Button 1=2
Button 2=3
Button 3=8
Button 5=254
Button 7=7
Button 9=1
Button 10=5
Button 11=6
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.7]
Button 0=4
Button 1=5
Button 2=7
Button 3=6
Button 4=8
Button 5=254
Button 9=1
Button 10=3
Button 11=2
Button 12=253
Y Axis=4
X Axis=1
[USB Human Interface Device.Genre.41]
Button 0=6
Button 1=3
Button 2=2
Button 3=4
Button 5=254
Button 6=8
Button 9=1
Button 10=7
Button 11=5
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.1]
Button 0=3
Button 1=9
Button 2=7
Button 3=6
Button 4=1
Button 5=254
Button 7=2
Button 9=4
Button 10=5
Button 11=8
Button 12=253
Y Axis=2
X Axis=1
[USB Human Interface Device.Genre.3]
Button 0=4
Button 2=5
Button 5=254
Button 8=6
Button 9=1
Button 10=3
Button 11=2
Button 12=253
Y Axis=2
X Axis=1
[]
ImageFileName.0=DIGITAL GAMEPAD.PNG
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.8]
MapExists=1
Y AXIS=0x2
BUTTON 1=0x1
BUTTON 0=0x2
BUTTON 2=0x3
BUTTON 10=0x4
BUTTON 11=0x5
BUTTON 9=0x6
BUTTON 8=0x7
BUTTON 12=0xFD
BUTTON 7=0x8
BUTTON 6=0x9
X AXIS=0x3
BUTTON 3=0xA
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.10]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 9=0x2
BUTTON 3=0x3
BUTTON 2=0x4
BUTTON 8=0x5
BUTTON 12=0xFD
BUTTON 6=0x6
BUTTON 10=0x7
BUTTON 11=0x8
BUTTON 0=0x9
BUTTON 1=0xA
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.11]
MapExists=1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 9=0x4
BUTTON 3=0x5
BUTTON 10=0x6
BUTTON 11=0x7
BUTTON 12=0xFD
BUTTON 4=0x8
BUTTON 7=0x9
X AXIS=0x3
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.12]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 8=0x2
BUTTON 9=0x3
BUTTON 11=0x4
BUTTON 7=0x5
BUTTON 12=0xFD
BUTTON 4=0x6
BUTTON 1=0x7
BUTTON 3=0x8
BUTTON 2=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.13]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.13]
MapExists=1
Y AXIS=0x2
BUTTON 9=0x1
BUTTON 0=0x2
BUTTON 2=0x3
BUTTON 8=0x4
BUTTON 1=0x5
BUTTON 4=0x6
BUTTON 3=0x7
BUTTON 12=0xFD
BUTTON 7=0x8
X AXIS=0x3
BUTTON 10=0x9
BUTTON 11=0xA
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.14]
MapExists=1
Y AXIS=0x2
BUTTON 9=0x1
BUTTON 0=0x2
BUTTON 8=0x3
BUTTON 1=0x4
BUTTON 2=0x5
BUTTON 12=0xFD
BUTTON 3=0x6
X AXIS=0x3
BUTTON 10=0x7
BUTTON 11=0x8
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.15]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 11=0x1
BUTTON 0=0x2
BUTTON 10=0x3
BUTTON 2=0x4
BUTTON 9=0x5
BUTTON 8=0x6
BUTTON 7=0x7
BUTTON 1=0x8
BUTTON 12=0xFD
BUTTON 3=0x9
BUTTON 4=0xA
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.16]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 0=0x3
BUTTON 9=0x4
BUTTON 3=0x5
BUTTON 12=0xFD
BUTTON 11=0x6
BUTTON 7=0x7
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.17]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 2=0x3
BUTTON 8=0x4
BUTTON 0=0x5
BUTTON 9=0x6
BUTTON 12=0xFD
BUTTON 11=0x7
BUTTON 10=0x8
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.18]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 8=0x1
BUTTON 3=0x2
BUTTON 9=0x3
BUTTON 2=0x4
BUTTON 1=0x5
BUTTON 10=0x6
BUTTON 0=0x7
BUTTON 11=0x8
BUTTON 12=0xFD
BUTTON 4=0x9
BUTTON 7=0xA
BUTTON 6=0xC
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.19]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.19]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 9=0x4
BUTTON 10=0x5
BUTTON 1=0x6
BUTTON 11=0x7
BUTTON 12=0xFD
BUTTON 4=0x8
BUTTON 6=0x9
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.20]
MapExists=1
BUTTON 0=0x1
BUTTON 9=0x2
BUTTON 8=0x3
BUTTON 12=0xFD
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.21]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.21]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 2=0x2
BUTTON 1=0x3
BUTTON 0=0x4
BUTTON 9=0x5
BUTTON 11=0x6
BUTTON 12=0xFD
BUTTON 10=0x7
BUTTON 3=0x8
BUTTON 8=0x9
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.22]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 8=0x1
BUTTON 10=0x2
BUTTON 11=0x3
BUTTON 9=0x4
BUTTON 2=0x5
BUTTON 12=0xFD
BUTTON 1=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 3=0x9
BUTTON 4=0xA
BUTTON 0=0xB
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.23]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 11=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 9=0x4
BUTTON 3=0x5
BUTTON 0=0x6
BUTTON 12=0xFD
BUTTON 8=0x7
BUTTON 10=0x9
BUTTON 7=0xA
BUTTON 6=0xB
BUTTON 4=0xD
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.2]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 11=0x2
BUTTON 10=0x3
BUTTON 12=0xFD
BUTTON 4=0x4
BUTTON 7=0x5
BUTTON 1=0x6
BUTTON 0=0x7
BUTTON 9=0x8
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.4]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 9=0x2
BUTTON 0=0x3
BUTTON 12=0xFD
BUTTON 11=0x4
BUTTON 10=0x5
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 9=0x1
BUTTON 11=0x2
BUTTON 10=0x3
BUTTON 12=0xFD
BUTTON 4=0x4
BUTTON 1=0x5
BUTTON 8=0x6
BUTTON 2=0x7
BUTTON 3=0x8
BUTTON 0=0x9
BUTTON 5=0xFE
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[USB HUMAN INTERFACE DEVICE.Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 9=0x1
BUTTON 11=0x2
BUTTON 10=0x3
BUTTON 12=0xFD
BUTTON 8=0x4
BUTTON 2=0x5
BUTTON 7=0x6
BUTTON 0=0x7
BUTTON 5=0xFE
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\gr3001_g.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=USB Human Interface Device

[USB Human Interface Device]
VID=0x47D
PID=0x3901
Name=GRAVIS XXTERMINATOR DUAL CONTROL
Controls=Y AXIS,X AXIS,Z ROTATION,DIAL,Z AXIS,HAT SWITCH,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8
ImageFileName.0=GR3001.PNG

[Y Axis]
Type=0x102
UsagePage=0x1
Usage=0x31
Linedata.0=(279,175),(279,133)
Align.0=C
CalloutMax.0=(235,142),(321,231)
Name=Y-AXIS
[X Axis]
Type=0x2
UsagePage=0x1
Usage=0x30
Linedata.0=(187,87),(187,125),(253,125)
Align.0=C
CalloutMax.0=(139,51),(235,103)
Name=X-AXIS
[Z Rotation]
Type=0x502
UsagePage=0x1
Usage=0x35
Name=RZ-AXIS
[Dial]
Type=0x202
UsagePage=0x1
Usage=0x37
Name=Z-AXIS
Align.0=C
CallOutMax.0=(0,262),(157,297)
LineData.0=(81,278),(81,262),(150,262),(150,128)
[Z Axis]
Type=0x602
UsagePage=0x1
Usage=0x32
Name=U-AXIS
[Hat Switch]
Type=0x10
UsagePage=0x1
Usage=0x39
Linedata.0=(368,215)
Align.0=C
CalloutMax.0=(321,0),(430,35)
Name=POV 0
[Button 0]
Type=0x4
UsagePage=0x9
Usage=0x1
Linedata.0=(199,33),(199,44),(266,44)
Align.0=C
CalloutMax.0=(144,0),(257,48)
Name=BUTTON 0
[Button 1]
Type=0x104
UsagePage=0x9
Usage=0x2
Linedata.0=(357,195),(330,195),(330,98),(289,57)
Align.0=C
CalloutMax.0=(322,175),(429,217)
Name=BUTTON 1
[Button 2]
Type=0x204
UsagePage=0x9
Usage=0x3
Linedata.0=(360,124),(337,124),(337,79),(309,56)
Align.0=C
CalloutMax.0=(333,87),(429,164)
Name=BUTTON 2
[Button 3]
Type=0x304
UsagePage=0x9
Usage=0x4
Linedata.0=(359,60),(331,60),(312,47)
Align.0=C
CalloutMax.0=(328,36),(429,86)
Name=BUTTON 3
[Button 4]
Type=0x404
UsagePage=0x9
Usage=0x5
Linedata.0=(129,21),(134,21),(134,122)
Align.0=R
CalloutMax.0=(0,0),(130,45)
Name=BUTTON 4
[Button 5]
Type=0x504
UsagePage=0x9
Usage=0x6
Linedata.0=(83,65),(105,65),(105,125)
Align.0=C
CalloutMax.0=(0,45),(129,88)
Name=BUTTON 5
[Button 6]
Type=0x604
UsagePage=0x9
Usage=0x7
Linedata.0=(56,97),(86,97),(86,134)
Align.0=T
CalloutMax.0=(0,89),(73,191)
Name=BUTTON 6
[Button 7]
Type=0x704
UsagePage=0x9
Usage=0x8
Linedata.0=(136,231),(136,139)
Align.0=R
CalloutMax.0=(0,225),(146,258)
Name=BUTTON 7
[Button 8]
Type=0x804
UsagePage=0x9
Usage=0x9
Linedata.0=(119,198),(119,143)
Align.0=R
CalloutMax.0=(0,193),(131,223)
Name=BUTTON 8
[USB Human Interface Device.Genre.34]
Y Axis=2
X Axis=1
Hat Switch=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=5
Button 7=253
Button 8=254
[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[USB HUMAN INTERFACE DEVICE.Genre.2]
MapExists=1
X AXIS=0x1
DIAL=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 7=0xFD
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 8=0x9

[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[USB HUMAN INTERFACE DEVICE.Genre.3]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
DIAL=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 7=0xFD
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 8=0xFE

[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1

[USB HUMAN INTERFACE DEVICE.Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 7=0xFD
HAT SWITCH=0x1
BUTTON 3=0x4
Z ROTATION=0x4
BUTTON 4=0x5
BUTTON 5=0x6
DIAL=0x6
BUTTON 6=0x7
BUTTON 8=0x9

[USB HUMAN INTERFACE DEVICE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[USB HUMAN INTERFACE DEVICE.Genre.1]
MapExists=1
X AXIS=0x1
DIAL=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 7=0xFD
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 8=0x9
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\glmdgp_g.ini ===
;gameport file
[DirectInput]
DirectXVersion=0x800
Devices=Guillemot Digital GamePad
[Guillemot Digital GamePad]
VID=1784
PID=41729
Name=Guillemot Digital GamePad
Controls=BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9,BUTTON 10,BUTTON 11,BUTTON 12,Y AXIS,X AXIS
ImageFileName.0=GlmDigGP.PNG
ImageFormat.0=BMP
[Button 0]
UsagePage=0x9
Usage=0x1
Linedata.0=(423,209),(294,209),(245,186)
Align.0=L
CalloutMax.0=(299,186),(426,210)
Type=0x4
Name=BUTTON 0
[Button 1]
UsagePage=0x9
Usage=0x2
Linedata.0=(422,259),(293,259),(250,195)
Align.0=L
CalloutMax.0=(298,237),(424,259)
Type=0x104
Name=BUTTON 1
[Button 2]
UsagePage=0x9
Usage=0x3
Linedata.0=(421,181),(290,181),(195,177),(191,186),(190,186)
Align.0=L
CalloutMax.0=(299,158),(423,182)
Type=0x204
Name=BUTTON 2
[Button 3]
UsagePage=0x9
Usage=0x4
Linedata.0=(423,233),(295,233),(184,195)
Align.0=L
CalloutMax.0=(299,211),(424,233)
Type=0x304
Name=BUTTON 3
[Button 4]
UsagePage=0x9
Usage=0x5
Linedata.0=(281,25),(157,26),(157,64),(181,79)
Align.0=L
CalloutMax.0=(160,5),(283,27)
Type=0x404
Name=BUTTON 4
[Button 5]
UsagePage=0x9
Usage=0x6
Linedata.0=(343,50),(213,50),(182,64)
Align.0=L
CalloutMax.0=(219,29),(343,51)
Type=0x504
Name=BUTTON 5
[Button 6]
UsagePage=0x9
Usage=0x7
Linedata.0=(399,74),(271,74),(201,62)
Align.0=L
CalloutMax.0=(275,52),(401,75)
Type=0x604
Name=BUTTON 6
[Button 7]
UsagePage=0x9
Usage=0x8
Linedata.0=(422,101),(298,101),(201,78)
Align.0=L
CalloutMax.0=(301,79),(428,102)
Type=0x704
Name=BUTTON 7
[Button 8]
UsagePage=0x9
Usage=0x9
Linedata.0=(423,153),(300,153),(181,98)
Align.0=L
CalloutMax.0=(301,131),(429,153)
Type=0x804
Name=BUTTON 8
[Button 9]
UsagePage=0x9
Usage=0xA
Linedata.0=(422,126),(301,126),(201,95)
Align.0=C
CalloutMax.0=(304,107),(430,127)
Type=0x904
Name=BUTTON 9
[Button 10]
UsagePage=0x9
Usage=0xB
Linedata.0=(360,305),(257,305),(233,223)
Align.0=C
CalloutMax.0=(261,284),(361,304)
Type=0xA04
Name=BUTTON 10
[Button 11]
UsagePage=0x9
Usage=0xC
Linedata.0=(53,302),(185,302),(202,224)
Align.0=C
CalloutMax.0=(53,283),(180,303)
Type=0xB04
Name=BUTTON 11
[Button 12]
UsagePage=0x9
Usage=0xD
Linedata.0=(291,172),(193,172),(181,128)
Align.0=C
CalloutMax.0=(193,152),(293,172)
Type=0xC04
Name=BUTTON 12
[Y Axis]
UsagePage=0x1
Usage=0x31
Linedata.0=(26,60),(105,60),(105,131)
Align.0=L
CalloutMax.0=(26,38),(152,60)
Type=0x102
Name=Y AXIS
[X Axis]
UsagePage=0x1
Usage=0x30
Linedata.0=(105,35),(6,35),(6,142),(99,142),(102,142)
Align.0=L
CalloutMax.0=(7,11),(133,36)
Type=0x2
Name=X AXIS
[Guillemot Digital GamePad.Genre.34]
Button 2=1
Button 3=3
Button 9=2
Y Axis=2
X Axis=1
Button 0=4
Button 1=5
Button 5=254
Button 12=253
[Guillemot Digital GamePad.Genre.33]
Button 0=2
Button 1=5
Button 2=1
Button 3=4
Button 5=254
Button 9=3
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.24]
Button 0=2
Button 1=5
Button 2=6
Button 3=9
Button 4=8
Button 5=254
Button 6=7
Button 9=1
Button 10=4
Button 11=3
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.26]
Button 0=3
Button 1=7
Button 2=1
Button 3=5
Button 5=254
Button 6=6
Button 8=4
Button 9=2
Button 10=8
Button 11=9
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.27]
Button 0=4
Button 1=2
Button 2=1
Button 3=6
Button 5=254
Button 7=5
Button 9=3
Button 10=7
Button 11=8
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.25]
Button 0=4
Button 1=3
Button 2=2
Button 3=5
Button 5=254
Button 7=7
Button 8=6
Button 9=1
Button 10=8
Button 11=9
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.28]
Button 0=4
Button 1=6
Button 2=1
Button 3=2
Button 5=254
Button 8=5
Button 9=3
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.32]
Button 0=3
Button 1=5
Button 2=1
Button 4=6
Button 5=254
Button 8=2
Button 9=4
Button 11=7
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.31]
Button 0=2
Button 1=3
Button 2=7
Button 3=1
Button 4=12
Button 5=254
Button 6=8
Button 7=10
Button 8=9
Button 9=5
Button 10=6
Button 11=4
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.30]
Button 0=1
Button 1=6
Button 2=2
Button 3=10
Button 4=7
Button 5=254
Button 6=12
Button 7=11
Button 8=3
Button 9=5
Button 10=13
Button 11=4
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.29]
Button 0=6
Button 1=3
Button 2=4
Button 4=7
Button 5=254
Button 8=5
Button 9=1
Button 10=2
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.9]
Button 0=4
Button 1=2
Button 2=3
Button 3=8
Button 5=254
Button 7=7
Button 9=1
Button 10=5
Button 11=6
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.7]
Button 0=4
Button 1=5
Button 2=7
Button 3=6
Button 4=8
Button 5=254
Button 9=1
Button 10=3
Button 11=2
Button 12=253
Y Axis=4
X Axis=1
[Guillemot Digital GamePad.Genre.41]
Button 0=6
Button 1=3
Button 2=2
Button 3=4
Button 5=254
Button 6=8
Button 9=1
Button 10=7
Button 11=5
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.1]
Button 0=3
Button 1=9
Button 2=7
Button 3=6
Button 4=1
Button 5=254
Button 7=2
Button 9=4
Button 10=5
Button 11=8
Button 12=253
Y Axis=2
X Axis=1
[Guillemot Digital GamePad.Genre.3]
Button 0=4
Button 2=5
Button 5=254
Button 8=6
Button 9=1
Button 10=3
Button 11=2
Button 12=253
Y Axis=2
X Axis=1
[]
ImageFileName.0=DIGITAL GAMEPAD.PNG
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1
[Guillemot Digital GamePad.Genre.8]
MapExists=1
Y AXIS=0x2
BUTTON 1=0x1
BUTTON 0=0x2
BUTTON 2=0x3
BUTTON 10=0x4
BUTTON 11=0x5
BUTTON 9=0x6
BUTTON 8=0x7
BUTTON 12=0xFD
BUTTON 7=0x8
BUTTON 6=0x9
X AXIS=0x3
BUTTON 3=0xA
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1
[Guillemot Digital GamePad.Genre.10]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 9=0x2
BUTTON 3=0x3
BUTTON 2=0x4
BUTTON 8=0x5
BUTTON 12=0xFD
BUTTON 6=0x6
BUTTON 10=0x7
BUTTON 11=0x8
BUTTON 0=0x9
BUTTON 1=0xA
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1
[Guillemot Digital GamePad.Genre.11]
MapExists=1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 9=0x4
BUTTON 3=0x5
BUTTON 10=0x6
BUTTON 11=0x7
BUTTON 12=0xFD
BUTTON 4=0x8
BUTTON 7=0x9
X AXIS=0x3
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1
[Guillemot Digital GamePad.Genre.12]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 8=0x2
BUTTON 9=0x3
BUTTON 11=0x4
BUTTON 7=0x5
BUTTON 12=0xFD
BUTTON 4=0x6
BUTTON 1=0x7
BUTTON 3=0x8
BUTTON 2=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.13]
MapExists=1
[Guillemot Digital GamePad.Genre.13]
MapExists=1
Y AXIS=0x2
BUTTON 9=0x1
BUTTON 0=0x2
BUTTON 2=0x3
BUTTON 8=0x4
BUTTON 1=0x5
BUTTON 4=0x6
BUTTON 3=0x7
BUTTON 12=0xFD
BUTTON 7=0x8
X AXIS=0x3
BUTTON 10=0x9
BUTTON 11=0xA
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1
[Guillemot Digital GamePad.Genre.14]
MapExists=1
Y AXIS=0x2
BUTTON 9=0x1
BUTTON 0=0x2
BUTTON 8=0x3
BUTTON 1=0x4
BUTTON 2=0x5
BUTTON 12=0xFD
BUTTON 3=0x6
X AXIS=0x3
BUTTON 10=0x7
BUTTON 11=0x8
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1
[Guillemot Digital GamePad.Genre.15]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 11=0x1
BUTTON 0=0x2
BUTTON 10=0x3
BUTTON 2=0x4
BUTTON 9=0x5
BUTTON 8=0x6
BUTTON 7=0x7
BUTTON 1=0x8
BUTTON 12=0xFD
BUTTON 3=0x9
BUTTON 4=0xA
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1
[Guillemot Digital GamePad.Genre.16]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 0=0x3
BUTTON 9=0x4
BUTTON 3=0x5
BUTTON 12=0xFD
BUTTON 11=0x6
BUTTON 7=0x7
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1
[Guillemot Digital GamePad.Genre.17]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 2=0x3
BUTTON 8=0x4
BUTTON 0=0x5
BUTTON 9=0x6
BUTTON 12=0xFD
BUTTON 11=0x7
BUTTON 10=0x8
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1
[Guillemot Digital GamePad.Genre.18]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 8=0x1
BUTTON 3=0x2
BUTTON 9=0x3
BUTTON 2=0x4
BUTTON 1=0x5
BUTTON 10=0x6
BUTTON 0=0x7
BUTTON 11=0x8
BUTTON 12=0xFD
BUTTON 4=0x9
BUTTON 7=0xA
BUTTON 6=0xC
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.19]
MapExists=1
[Guillemot Digital GamePad.Genre.19]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 9=0x4
BUTTON 10=0x5
BUTTON 1=0x6
BUTTON 11=0x7
BUTTON 12=0xFD
BUTTON 4=0x8
BUTTON 6=0x9
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1
[Guillemot Digital GamePad.Genre.20]
MapExists=1
BUTTON 0=0x1
BUTTON 9=0x2
BUTTON 8=0x3
BUTTON 12=0xFD
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.21]
MapExists=1
[Guillemot Digital GamePad.Genre.21]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 2=0x2
BUTTON 1=0x3
BUTTON 0=0x4
BUTTON 9=0x5
BUTTON 11=0x6
BUTTON 12=0xFD
BUTTON 10=0x7
BUTTON 3=0x8
BUTTON 8=0x9
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1
[Guillemot Digital GamePad.Genre.22]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 8=0x1
BUTTON 10=0x2
BUTTON 11=0x3
BUTTON 9=0x4
BUTTON 2=0x5
BUTTON 12=0xFD
BUTTON 1=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 3=0x9
BUTTON 4=0xA
BUTTON 0=0xB
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1
[Guillemot Digital GamePad.Genre.23]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 11=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 9=0x4
BUTTON 3=0x5
BUTTON 0=0x6
BUTTON 12=0xFD
BUTTON 8=0x7
BUTTON 10=0x9
BUTTON 7=0xA
BUTTON 6=0xB
BUTTON 4=0xD
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[Guillemot Digital GamePad.Genre.2]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 11=0x2
BUTTON 10=0x3
BUTTON 12=0xFD
BUTTON 4=0x4
BUTTON 7=0x5
BUTTON 1=0x6
BUTTON 0=0x7
BUTTON 9=0x8
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[Guillemot Digital GamePad.Genre.4]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 9=0x2
BUTTON 0=0x3
BUTTON 12=0xFD
BUTTON 11=0x4
BUTTON 10=0x5
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[Guillemot Digital GamePad.Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 9=0x1
BUTTON 11=0x2
BUTTON 10=0x3
BUTTON 12=0xFD
BUTTON 4=0x4
BUTTON 1=0x5
BUTTON 8=0x6
BUTTON 2=0x7
BUTTON 3=0x8
BUTTON 0=0x9
BUTTON 5=0xFE
[Guillemot Digital GamePad.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[Guillemot Digital GamePad.Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 9=0x1
BUTTON 11=0x2
BUTTON 10=0x3
BUTTON 12=0xFD
BUTTON 8=0x4
BUTTON 2=0x5
BUTTON 7=0x6
BUTTON 0=0x7
BUTTON 5=0xFE
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\gr3001.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=USB HUMAN INTERFACE DEVICE,Gravis Xterminator Dual Control

[USB Human Interface Device]
VID=0x47D
PID=0x3001
Name=Gravis XXterminator Dual Control
Controls=Y AXIS,X AXIS,Z ROTATION,DIAL,Z AXIS,HAT SWITCH,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8
ImageFileName.0=GR3001.PNG

[Y Axis]
Type=0x102
UsagePage=0x1
Usage=0x31
Linedata.0=(279,175),(279,133)
Align.0=C
CalloutMax.0=(235,142),(321,231)
Name=Y AXIS
[X Axis]
Type=0x2
UsagePage=0x1
Usage=0x30
Linedata.0=(187,87),(187,125),(253,125)
Align.0=C
CalloutMax.0=(139,51),(235,103)
Name=X AXIS
[Z Rotation]
Type=0x502
UsagePage=0x1
Usage=0x35
Align.0=C
Linedata.0=(281,251),(199,251),(199,162),(195,162)
CalloutMax.0=(209,231),(368,272)
Name=Z ROTATION
[Z ROTATION (GP)]
Type=0x602
UsagePage=0x1
Usage=0x37
Name=Z ROTATION
Align.0=C
Linedata.0=(281,251),(199,251),(199,162),(195,162)
CalloutMax.0=(209,231),(368,272)
[Dial]
Type=0x202
UsagePage=0x1
Usage=0x37
Name=DIAL
Align.0=TL
CallOutMax.0=(183,276),(361,309)
LineData.0=(189,278),(189,173)
[DIAL (GP)]
Type=0x302
UsagePage=0x1
Usage=0x33
Name=DIAL
Align.0=TL
CallOutMax.0=(183,276),(361,309)
LineData.0=(189,278),(189,173)
[Z Axis]
Type=0x602
UsagePage=0x1
Usage=0x32
Name=Z AXIS
Align.0=TR
CallOutMax.0=(3,265),(159,309)
LineData.0=(153,266),(153,128)
[THROTTLE]
Type=0x202
UsagePage=0x2
Usage=0xBB
Name=THROTTLE
Align.0=TR
CallOutMax.0=(2,264),(164,309)
LineData.0=(155,265),(155,128)
[Hat Switch]
Type=0x10
UsagePage=0x1
Usage=0x39
Linedata.0=(354,17),(321,17),(321,41)
Align.0=C
CalloutMax.0=(321,0),(430,35)
Name=HAT SWITCH
[Button 0]
Type=0x4
UsagePage=0x9
Usage=0x1
Linedata.0=(199,33),(199,44),(266,44)
Align.0=C
CalloutMax.0=(144,0),(257,48)
Name=BUTTON 0
[Button 1]
Type=0x104
UsagePage=0x9
Usage=0x2
Linedata.0=(357,195),(330,195),(330,98),(289,57)
Align.0=C
CalloutMax.0=(322,175),(429,217)
Name=BUTTON 1
[Button 2]
Type=0x204
UsagePage=0x9
Usage=0x3
Linedata.0=(360,124),(337,124),(337,79),(309,56)
Align.0=C
CalloutMax.0=(333,87),(429,164)
Name=BUTTON 2
[Button 3]
Type=0x304
UsagePage=0x9
Usage=0x4
Linedata.0=(359,60),(331,60),(312,47)
Align.0=C
CalloutMax.0=(328,36),(429,86)
Name=BUTTON 3
[Button 4]
Type=0x404
UsagePage=0x9
Usage=0x5
Linedata.0=(129,21),(134,21),(134,122)
Align.0=R
CalloutMax.0=(0,0),(130,45)
Name=BUTTON 4
[Button 5]
Type=0x504
UsagePage=0x9
Usage=0x6
Linedata.0=(83,65),(105,65),(105,125)
Align.0=C
CalloutMax.0=(0,45),(129,88)
Name=BUTTON 5
[Button 6]
Type=0x604
UsagePage=0x9
Usage=0x7
Linedata.0=(56,97),(86,97),(86,134)
Align.0=T
CalloutMax.0=(0,89),(73,191)
Name=BUTTON 6
[Button 7]
Type=0x704
UsagePage=0x9
Usage=0x8
Linedata.0=(136,231),(136,139)
Align.0=R
CalloutMax.0=(0,225),(146,258)
Name=BUTTON 7
[Button 8]
Type=0x804
UsagePage=0x9
Usage=0x9
Linedata.0=(119,198),(119,143)
Align.0=R
CalloutMax.0=(0,193),(131,223)
Name=BUTTON 8

[USB Human Interface Device.Genre.34]
Y Axis=2
X Axis=1
Hat Switch=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=5
Button 7=253
Button 8=254

[Gravis XTerminator Dual Control]
VID=0x47D
PID=0x3901
Name=Gravis XXterminator Dual Control
ImageFileName.0=GR3001.PNG
Controls=Y AXIS,X AXIS,Z ROTATION (GP),DIAL (GP),THROTTLE,HAT SWITCH,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8

[Gravis XTerminator Dual Control.Genre.34]
Y Axis=2
X Axis=1
Hat Switch=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=5
Button 7=253
Button 8=254
[Gravis XTerminator Dual Control.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[Gravis XTerminator Dual Control.Genre.2]
MapExists=1
X AXIS=0x1
DIAL=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 7=0xFD
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 8=0x9

[Gravis XTerminator Dual Control.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[Gravis XTerminator Dual Control.Genre.3]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
DIAL=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 7=0xFD
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 8=0xFE

[Gravis XTerminator Dual Control.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1

[Gravis XTerminator Dual Control.Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 7=0xFD
HAT SWITCH=0x1
BUTTON 3=0x4
Z ROTATION=0x4
BUTTON 4=0x5
BUTTON 5=0x6
DIAL=0x6
BUTTON 6=0x7
BUTTON 8=0x9


[GRAVIS XTERMINATOR DUAL CONTROL.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[GRAVIS XTERMINATOR DUAL CONTROL.Genre.1]
MapExists=1
X AXIS=0x1
THROTTLE=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 8=0x9
BUTTON 7=0xFD
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\gr4005.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Gravis Eliminator GamePad Pro

[Gravis Eliminator GamePad Pro]
VID=1149
PID=16389
Name=Gravis Eliminator GamePad Pro
Controls=Y AXIS,X AXIS,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9
ImageFileName.0=GR4005.PNG

[Y Axis]
UsagePage=0x1
Usage=0x31
Linedata.0=(110,185),(110,95)
Align.0=TR
CalloutMax.0=(0,186),(119,250)
Type=0x102
Name=Y AXIS

[X Axis]
UsagePage=0x1
Usage=0x30
Linedata.0=(52,116),(52,86),(89,86)
Align.0=T
CalloutMax.0=(0,117),(97,184)
Type=0x2
Name=X AXIS

[Button 0]
UsagePage=0x9
Usage=0x1
Linedata.0=(206,248),(206,95),(195,84)
Align.0=T
CalloutMax.0=(145,250),(271,305)
Type=0x4
Name=BUTTON 0

[Button 1]
UsagePage=0x9
Usage=0x2
Linedata.0=(302,194),(248,194),(248,116),(222,90)
Align.0=TL
CalloutMax.0=(303,185),(429,231)
Type=0x104
Name=BUTTON 1

[Button 2]
UsagePage=0x9
Usage=0x3
Linedata.0=(303,158),(260,158),(260,95),(233,68)
Align.0=L
CalloutMax.0=(303,132),(429,186)
Type=0x204
Name=BUTTON 2

[Button 3]
UsagePage=0x9
Usage=0x4
Linedata.0=(303,239),(218,239),(218,99),(204,69)
Align.0=TL
CalloutMax.0=(303,230),(429,304)
Type=0x304
Name=BUTTON 3

[Button 4]
UsagePage=0x9
Usage=0x5
Linedata.0=(127,23),(127,56),(62,56),(62,74)
Align.0=L
CalloutMax.0=(112,0),(298,33)
Type=0x404
Name=BUTTON 4

[Button 5]
UsagePage=0x9
Usage=0x6
Linedata.0=(310,5),(302,5),(302,50),(236,50),(236,56)
Align.0=TL
CalloutMax.0=(311,0),(429,57)
Type=0x504
Name=BUTTON 5

[Button 6]
UsagePage=0x9
Usage=0x7
Linedata.0=(16,32),(16,101),(42,101)
Align.0=L
CalloutMax.0=(0,0),(112,48)
Type=0x604
Name=BUTTON 6

[Button 7]
UsagePage=0x9
Usage=0x8
Linedata.0=(366,80),(366,71),(269,71)
Align.0=T
CalloutMax.0=(303,82),(429,134)
Type=0x704
Name=BUTTON 7

[Button 8]
UsagePage=0x9
Usage=0x9
Linedata.0=(122,260),(122,113),(162,113)
Align.0=TR
CalloutMax.0=(0,262),(135,309)
Type=0x804
Name=BUTTON 8

[Button 9]
UsagePage=0x9
Usage=0xA
Linedata.0=(190,140),(190,108)
Align.0=TR
CalloutMax.0=(128,141),(203,243)
Type=0x904
Name=BUTTON 9
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\gr4003.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Xterminator Digital Gamepad,Xterminator Digital Gamepad (Game Port)

[Xterminator Digital GamePad]
VID=1149
PID=16387
Name=Gravis XXterminator Digital Gamepad
Controls=Y AXIS,X AXIS,Z AXIS,Z ROTATION,DIAL,X ROTATION,HAT SWITCH,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9,BUTTON 10
ImageFileName.0=GR4003.PNG

[Y Axis]
UsagePage=0x1
Usage=0x31
Linedata.0=(82,89),(142,89),(156,83)
Align.0=C
CalloutMax.0=(0,74),(127,107)
Type=0x102
Name=Y AXIS

[X Axis]
UsagePage=0x1
Usage=0x30
Linedata.0=(83,57),(145,57),(151,75)
Align.0=C
CalloutMax.0=(0,45),(128,74)
Type=0x2
Name=X AXIS

[Z Axis]
UsagePage=0x1
Usage=0x32
Linedata.0=(247,237),(247,83)
Align.0=R
CalloutMax.0=(122,229),(269,268)
Type=0x202
Name=Z AXIS

[Z Rotation]
UsagePage=0x1
Usage=0x35
Linedata.0=(249,24),(197,71),(247,26),(266,80)
Align.0=L
CalloutMax.0=(237,0),(429,35)
Type=0x502
Name=Z ROTATION

[Dial]
UsagePage=0x1
Usage=0x37
Linedata.0=(85,114),(135,114),(135,101),(155,101)
Align.0=TR
CalloutMax.0=(0,106),(95,187)
Type=0x602
Name=DIAL

[X Rotation]
UsagePage=0x1
Usage=0x33
Linedata.0=(170,144),(154,144),(154,116)
Align.0=C
CalloutMax.0=(154,116),(226,173)
Type=0x702
Name=X ROTATION

[Hat Switch]
UsagePage=0x1
Usage=0x39
Linedata.0=(175,201),(226,201),(226,119),(215,119)
Align.0=C
CalloutMax.0=(113,175),(202,229)
Type=0x10
Name=HAT SWITCH

[Button 0]
UsagePage=0x9
Usage=0x1
Linedata.0=(294,291),(282,291),(282,140),(255,113)
Align.0=L
CalloutMax.0=(295,274),(430,310)
Type=0x4
Name=BUTTON 0

[Button 1]
UsagePage=0x9
Usage=0x2
Linedata.0=(348,254),(288,254),(288,126),(269,110)
Align.0=C
CalloutMax.0=(307,241),(430,273)
Type=0x104
Name=BUTTON 1

[Button 2]
UsagePage=0x9
Usage=0x3
Linedata.0=(314,215),(303,215),(303,117),(288,110)
Align.0=L
CalloutMax.0=(314,200),(429,235)
Type=0x204
Name=BUTTON 2

[Button 3]
UsagePage=0x9
Usage=0x4
Linedata.0=(390,51),(283,51),(237,78),(239,104)
Align.0=R
CalloutMax.0=(287,36),(430,72)
Type=0x304
Name=BUTTON 3

[Button 4]
UsagePage=0x9
Usage=0x5
Linedata.0=(351,80),(280,80),(261,99)
Align.0=TL
CalloutMax.0=(337,72),(430,131)
Type=0x404
Name=BUTTON 4

[Button 5]
UsagePage=0x9
Usage=0x6
Linedata.0=(356,164),(326,164),(326,102),(290,102)
Align.0=C
CalloutMax.0=(323,132),(430,199)
Type=0x504
Name=BUTTON 5

[Button 6]
UsagePage=0x9
Usage=0x7
Linedata.0=(96,186),(96,143),(135,143)
Align.0=TR
CalloutMax.0=(0,187),(104,248)
Type=0x604
Name=BUTTON 6

[Button 7]
UsagePage=0x9
Usage=0x8
Linedata.0=(268,287),(275,287),(275,168),(253,168)
Align.0=R
CalloutMax.0=(122,268),(269,310)
Type=0x704
Name=BUTTON 7

[Button 8]
UsagePage=0x9
Usage=0x9
Linedata.0=(130,8),(230,8),(230,71)
Align.0=C
CalloutMax.0=(0,0),(223,21)
Type=0x804
Name=BUTTON 8

[Button 9]
UsagePage=0x9
Usage=0xA
Linedata.0=(109,246),(109,228),(235,228),(235,132)
Align.0=TR
CalloutMax.0=(0,248),(121,310)
Type=0x904
Name=BUTTON 9

[Button 10]
UsagePage=0x9
Usage=0xB
Linedata.0=(115,32),(223,32),(223,75)
Align.0=C
CalloutMax.0=(0,20),(195,44)
Type=0xA04
Name=BUTTON 10

[Xterminator Digital Gamepad (Game Port)]
VID=0x47D
PID=0x4903
Name=Gravis XXterminator Digital Gamepad (Game Port)
ImageFileName.0=GR4003.png
Controls=Y AXIS,X AXIS,Z AXIS,Z ROTATION,DIAL,X ROTATION,HAT SWITCH,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9,BUTTON 10
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\gr4001.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=GAMEPAD PRO USB,Gravis GamePad Pro (GamePort)

[GamePad Pro USB]
VID=1064
PID=16385
Name=GRAVIS GAMEPAD PRO
Controls=Y AXIS,X AXIS,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9
ImageFileName.0=GR4001.PNG

[Y Axis]
UsagePage=0x1
Usage=0x31
Linedata.0=(15,120),(15,146),(118,146)
Align.0=TL
CalloutMax.0=(0,103),(125,172)
Type=0x102
Name=Y AXIS

[X Axis]
UsagePage=0x1
Usage=0x30
Linedata.0=(15,239),(15,170),(102,170)
Align.0=L
CalloutMax.0=(0,218),(103,299)
Type=0x2
Name=X AXIS

[BUTTON 0]
UsagePage=0x9
Usage=0x1
Linedata.0=(231,129),(255,129)
Align.0=R
CalloutMax.0=(125,106),(233,156)
Type=0x4
Name=BUTTON 0

[BUTTON 1]
UsagePage=0x9
Usage=0x2
Linedata.0=(287,188),(287,149)
Align.0=C
CalloutMax.0=(238,167),(375,233)
Type=0x104
Name=BUTTON 1

[BUTTON 2]
UsagePage=0x9
Usage=0x3
Linedata.0=(343,116),(307,116)
Align.0=L
CalloutMax.0=(344,99),(429,167)
Type=0x204
Name=BUTTON 2

[BUTTON 3]
UsagePage=0x9
Usage=0x4
Linedata.0=(406,80),(406,95),(275,95)
Align.0=R
CalloutMax.0=(249,45),(429,99)
Type=0x304
Name=BUTTON 3

[BUTTON 4]
UsagePage=0x9
Usage=0x5
Linedata.0=(155,56),(155,89),(109,89)
Align.0=T
CalloutMax.0=(105,39),(216,97)
Type=0x404
Name=BUTTON 4

[BUTTON 5]
UsagePage=0x9
Usage=0x6
Linedata.0=(363,14),(363,41),(263,41),(263,53)
Align.0=T
CalloutMax.0=(307,0),(429,45)
Type=0x504
Name=BUTTON 5

[BUTTON 6]
UsagePage=0x9
Usage=0x7
Linedata.0=(15,41),(15,96),(77,96)
Align.0=L
CalloutMax.0=(0,0),(98,69)
Type=0x604
Name=BUTTON 6

[BUTTON 7]
UsagePage=0x9
Usage=0x8
Linedata.0=(191,21),(191,32),(234,32),(234,62)
Align.0=C
CalloutMax.0=(103,0),(297,28)
Type=0x704
Name=BUTTON 7

[BUTTON 8]
UsagePage=0x9
Usage=0x9
Linedata.0=(163,254),(163,165),(188,165)
Align.0=R
CalloutMax.0=(102,232),(201,310)
Type=0x804
Name=BUTTON 8

[BUTTON 9]
UsagePage=0x9
Usage=0xA
Linedata.0=(217,260),(217,159)
Align.0=L
CalloutMax.0=(209,233),(338,310)
Type=0x904
Name=BUTTON 9

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[GAMEPAD PRO USB.Genre.1]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x8
BUTTON 1=0x4
BUTTON 2=0x5
BUTTON 3=0x6
BUTTON 4=0x3
BUTTON 5=0x7
BUTTON 6=0x2
BUTTON 7=0x1
BUTTON 8=0x9
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[GAMEPAD PRO USB.Genre.2]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x8
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x7
BUTTON 5=0x6
BUTTON 6=0x5
BUTTON 7=0x4
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[GAMEPAD PRO USB.Genre.3]
MapExists=1
X AXIS=0x1
Y AXIS=0x3
BUTTON 0=0x1
BUTTON 1=0x6
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 6=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1

[GAMEPAD PRO USB.Genre.4]
MapExists=1
X AXIS=0x1
Y AXIS=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0xFE
BUTTON 4=0x4
BUTTON 6=0x5
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1

[GAMEPAD PRO USB.Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x5
BUTTON 4=0x7
BUTTON 5=0x4
BUTTON 6=0x8
BUTTON 7=0x6
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1

[GAMEPAD PRO USB.Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x5
BUTTON 4=0x6
BUTTON 5=0x4
BUTTON 6=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1

[GAMEPAD PRO USB.Genre.7]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0xFE
BUTTON 6=0x7
BUTTON 7=0x5
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1

[GAMEPAD PRO USB.Genre.8]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0xA
BUTTON 8=0x8
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.9]
MapExists=1

[GAMEPAD PRO USB.Genre.9]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x3
BUTTON 2=0x2
BUTTON 3=0x4
BUTTON 4=0x8
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x5
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1

[GAMEPAD PRO USB.Genre.10]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x4
BUTTON 2=0x3
BUTTON 3=0x1
BUTTON 4=0x9
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0xA
BUTTON 9=0xFC
[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1

[GAMEPAD PRO USB.Genre.11]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x6
BUTTON 2=0x2
BUTTON 3=0x7
BUTTON 4=0x5
BUTTON 5=0x4
BUTTON 6=0x8
BUTTON 7=0x3
BUTTON 8=0x9
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1

[GamePad Pro USB.Genre.12]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.13]
MapExists=1

[GAMEPAD PRO USB.Genre.13]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x9
BUTTON 7=0xA
BUTTON 8=0x7
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1

[GAMEPAD PRO USB.Genre.14]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x4
BUTTON 3=0x3
BUTTON 4=0x8
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x6
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1

[GAMEPAD PRO USB.Genre.15]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x1
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0x8
BUTTON 6=0x7
BUTTON 7=0x5
BUTTON 8=0x9
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1

[GamePad Pro USB.Genre.16]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1

[GamePad Pro USB.Genre.17]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x6
BUTTON 2=0x3
BUTTON 3=0x5
BUTTON 4=0x1
BUTTON 5=0x4
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1

[GAMEPAD PRO USB.Genre.18]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0xD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.19]
MapExists=1

[GamePad Pro USB.Genre.19]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1

[GamePad Pro USB.Genre.20]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.21]
MapExists=1

[GamePad Pro USB.Genre.21]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x4
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1

[GamePad Pro USB.Genre.22]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x4
BUTTON 2=0x3
BUTTON 3=0x1
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1

[GamePad Pro USB.Genre.23]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.24]
MapExists=1

[GAMEPAD PRO USB.Genre.24]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x5
BUTTON 3=0x6
BUTTON 4=0x8
BUTTON 5=0x3
BUTTON 6=0x7
BUTTON 7=0x4
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.25]
MapExists=1

[GAMEPAD PRO USB.Genre.25]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.26]
MapExists=1

[GAMEPAD PRO USB.Genre.26]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.27]
MapExists=1

[GAMEPAD PRO USB.Genre.27]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
BUTTON 6=0x6
BUTTON 7=0x7
BUTTON 8=0x8
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.28]
MapExists=1

[GAMEPAD PRO USB.Genre.28]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x3
BUTTON 2=0x5
BUTTON 3=0x4
BUTTON 4=0xFE
BUTTON 5=0x6
BUTTON 7=0x2
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.29]
MapExists=1

[GAMEPAD PRO USB.Genre.29]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x4
BUTTON 2=0x6
BUTTON 3=0x1
BUTTON 4=0xFE
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x3
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.30]
MapExists=1

[GamePad Pro USB.Genre.30]
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x9
BUTTON 5=0x6
BUTTON 6=0xA
BUTTON 7=0x7
BUTTON 8=0x5
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.31]
MapExists=1

[GAMEPAD PRO USB.Genre.31]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x9
BUTTON 4=0x8
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x6
BUTTON 8=0x4
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.32]
MapExists=1

[GAMEPAD PRO USB.Genre.32]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x7
BUTTON 5=0x5
BUTTON 6=0x6
BUTTON 7=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.33]
MapExists=1

[GamePad Pro USB.Genre.33]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 7=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1

[GAMEPAD PRO USB.Genre.34]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x1
BUTTON 2=0x5
BUTTON 3=0x4
BUTTON 4=0xFE
BUTTON 5=0x3
BUTTON 8=0xFD
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.35]
MapExists=1

[GAMEPAD PRO USB.Genre.35]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 2=0x4
BUTTON 3=0xFD
BUTTON 4=0x5
BUTTON 5=0xFE
BUTTON 8=0x1
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.36]
MapExists=1

[GAMEPAD PRO USB.Genre.36]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 2=0x4
BUTTON 3=0xFD
BUTTON 4=0x5
BUTTON 5=0xFE
BUTTON 8=0x1
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.37]
MapExists=1

[GAMEPAD PRO USB.Genre.37]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 2=0x4
BUTTON 3=0xFD
BUTTON 4=0x5
BUTTON 5=0xFE
BUTTON 8=0x1
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.38]
MapExists=1

[GAMEPAD PRO USB.Genre.38]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 2=0x4
BUTTON 3=0xFD
BUTTON 4=0x5
BUTTON 5=0xFE
BUTTON 8=0x1
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.39]
MapExists=1

[GAMEPAD PRO USB.Genre.39]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x6
BUTTON 1=0x4
BUTTON 2=0x2
BUTTON 3=0xFD
BUTTON 4=0x8
BUTTON 5=0xB
BUTTON 6=0xA
BUTTON 7=0xD
BUTTON 8=0x1
BUTTON 9=0x3
[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.40]
MapExists=1

[GAMEPAD PRO USB.Genre.40]
MapExists=1
X AXIS=0x1
Y AXIS=0x3
BUTTON 0=0x8
BUTTON 1=0x4
BUTTON 2=0x7
BUTTON 3=0x2
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0xFD
BUTTON 7=0x3
BUTTON 8=0x1
BUTTON 9=0xFC

[GAMEPAD PRO USB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1

[GAMEPAD PRO USB.Genre.41]
MapExists=1
X AXIS=0x1
Y AXIS=0x4
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x6
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro (GamePort)]
VID=0x428
PID=0x4901
Name=Gravis GamePad Pro (GamePort)
ImageFileName.0=GR4001_G.PNG
Controls=Y AXIS GP,X AXIS GP,BUTTON 0 GP,BUTTON 1 GP,BUTTON 2 GP,BUTTON 3 GP,BUTTON 4 GP,BUTTON 5 GP,BUTTON 6 GP,BUTTON 7 GP,BUTTON 8 GP,BUTTON 9 GP

[Y Axis GP]
UsagePage=0x1
Usage=0x31
Linedata.0=(28,119),(28,159),(116,159)
Align.0=TL
CalloutMax.0=(0,103),(125,172)
Type=0x102
Name=Y AXIS

[X Axis GP]
UsagePage=0x1
Usage=0x30
Linedata.0=(40,246),(40,186),(107,186)
Align.0=L
CalloutMax.0=(0,218),(103,299)
Type=0x2
Name=X AXIS

[BUTTON 0 GP]
UsagePage=0x9
Usage=0x1
Linedata.0=(227,116),(252,116)
Align.0=TR
CalloutMax.0=(125,106),(233,156)
Type=0x4
Name=BUTTON 0

[BUTTON 1 GP]
UsagePage=0x9
Usage=0x2
Linedata.0=(287,175),(287,131)
Align.0=T
CalloutMax.0=(238,167),(375,233)
Type=0x104
Name=BUTTON 1

[BUTTON 2 GP]
UsagePage=0x9
Usage=0x3
Linedata.0=(346,108),(297,108),(297,96)
Align.0=TL
CalloutMax.0=(344,99),(429,167)
Type=0x204
Name=BUTTON 2

[BUTTON 3 GP]
UsagePage=0x9
Usage=0x4
Linedata.0=(387,74),(263,74)
Align.0=R
CalloutMax.0=(249,45),(429,99)
Type=0x304
Name=BUTTON 3

[BUTTON 4 GP]
UsagePage=0x9
Usage=0x5
Linedata.0=(122,82),(90,82),(90,101)
Align.0=B
CalloutMax.0=(105,39),(216,97)
Type=0x404
Name=BUTTON 4

[BUTTON 5 GP]
UsagePage=0x9
Usage=0x6
Linedata.0=(310,36),(244,36)
Align.0=BL
CalloutMax.0=(307,0),(429,45)
Type=0x504
Name=BUTTON 5

[BUTTON 6 GP]
UsagePage=0x9
Usage=0x7
Linedata.0=(65,60),(65,117)
Align.0=BR
CalloutMax.0=(0,0),(98,69)
Type=0x604
Name=BUTTON 6

[BUTTON 7 GP]
UsagePage=0x9
Usage=0x8
Linedata.0=(210,19),(210,53)
Align.0=B
CalloutMax.0=(103,0),(297,28)
Type=0x704
Name=BUTTON 7

[BUTTON 8 GP]
UsagePage=0x9
Usage=0x9
Linedata.0=(163,254),(163,165),(188,165)
Align.0=R
CalloutMax.0=(102,232),(201,310)
Type=0x804
Name=BUTTON 8

[BUTTON 9 GP]
UsagePage=0x9
Usage=0xA
Linedata.0=(224,255),(224,150)
Align.0=L
CalloutMax.0=(209,233),(338,310)
Type=0x904
Name=BUTTON 9
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\gr4001_g.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Gravis GamePad Pro

[Gravis GamePad Pro]
Name=Gravis GamePad Pro
Controls=Y AXIS,X AXIS,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9
ImageFileName.0=GR4001_G.png

[Y Axis]
UsagePage=0x1
Usage=0x31
Linedata.0=(13,136),(13,158),(114,158)
Align.0=TL
CalloutMax.0=(0,125),(104,187)
Type=0x102
Name=Y AXIS

[X Axis]
UsagePage=0x1
Usage=0x30
Linedata.0=(22,258),(22,188),(104,188)
Align.0=L
CalloutMax.0=(0,229),(103,310)
Type=0x2
Name=X AXIS

[BUTTON 0]
UsagePage=0x9
Usage=0x1
Linedata.0=(232,130),(251,130),(251,114)
Align.0=R
CalloutMax.0=(125,106),(233,156)
Type=0x4
Name=BUTTON 0

[BUTTON 1]
UsagePage=0x9
Usage=0x2
Linedata.0=(287,191),(287,128)
Align.0=C
CalloutMax.0=(238,167),(375,233)
Type=0x104
Name=BUTTON 1

[BUTTON 2]
UsagePage=0x9
Usage=0x3
Linedata.0=(343,132),(318,132),(318,95),(299,95)
Align.0=L
CalloutMax.0=(344,99),(429,167)
Type=0x204
Name=BUTTON 2

[BUTTON 3]
UsagePage=0x9
Usage=0x4
Linedata.0=(304,70),(266,70),(266,78)
Align.0=R
CalloutMax.0=(249,45),(429,99)
Type=0x304
Name=BUTTON 3

[BUTTON 4]
UsagePage=0x9
Usage=0x5
Linedata.0=(150,92),(150,102),(92,102)
Align.0=B
CalloutMax.0=(98,37),(209,95)
Type=0x404
Name=BUTTON 4

[BUTTON 5]
UsagePage=0x9
Usage=0x6
Linedata.0=(364,16),(364,37),(242,37)
Align.0=T
CalloutMax.0=(307,0),(429,45)
Type=0x504
Name=BUTTON 5

[BUTTON 6]
UsagePage=0x9
Usage=0x7
Linedata.0=(15,50),(15,118),(62,118)
Align.0=L
CalloutMax.0=(0,0),(98,69)
Type=0x604
Name=BUTTON 6

[BUTTON 7]
UsagePage=0x9
Usage=0x8
Linedata.0=(190,23),(190,34),(209,34),(209,57)
Align.0=C
CalloutMax.0=(103,0),(297,28)
Type=0x704
Name=BUTTON 7

[BUTTON 8]
UsagePage=0x9
Usage=0x9
Linedata.0=(163,254),(163,165),(188,165)
Align.0=R
CalloutMax.0=(102,232),(201,310)
Type=0x804
Name=BUTTON 8

[BUTTON 9]
UsagePage=0x9
Usage=0xA
Linedata.0=(219,252),(219,151)
Align.0=L
CalloutMax.0=(209,233),(338,310)
Type=0x904
Name=BUTTON 9

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[Gravis GamePad Pro.Genre.2]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x8
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x7
BUTTON 5=0x6
BUTTON 6=0x5
BUTTON 7=0x4
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[Gravis GamePad Pro.Genre.3]
MapExists=1
X AXIS=0x1
Y AXIS=0x3
BUTTON 0=0x1
BUTTON 1=0x6
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 6=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1

[Gravis GamePad Pro.Genre.4]
MapExists=1
X AXIS=0x1
Y AXIS=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0xFE
BUTTON 4=0x4
BUTTON 6=0x5
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1

[Gravis GamePad Pro.Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x5
BUTTON 4=0x7
BUTTON 5=0x4
BUTTON 6=0x8
BUTTON 7=0x6
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1

[Gravis GamePad Pro.Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x5
BUTTON 4=0x6
BUTTON 5=0x4
BUTTON 6=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1

[Gravis GamePad Pro.Genre.7]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0xFE
BUTTON 6=0x7
BUTTON 7=0x5
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1

[Gravis GamePad Pro.Genre.8]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0xA
BUTTON 8=0x8
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.9]
MapExists=1

[Gravis GamePad Pro.Genre.9]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x3
BUTTON 2=0x2
BUTTON 3=0x4
BUTTON 4=0x8
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x5
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1

[Gravis GamePad Pro.Genre.10]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x4
BUTTON 2=0x3
BUTTON 3=0x1
BUTTON 4=0x9
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0xA
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1

[Gravis GamePad Pro.Genre.11]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x6
BUTTON 2=0x2
BUTTON 3=0x7
BUTTON 4=0x5
BUTTON 5=0x4
BUTTON 6=0x8
BUTTON 7=0x3
BUTTON 8=0x9
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1

[Gravis GamePad Pro.Genre.12]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.13]
MapExists=1

[Gravis GamePad Pro.Genre.13]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x9
BUTTON 7=0xA
BUTTON 8=0x7
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1

[Gravis GamePad Pro.Genre.14]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x4
BUTTON 3=0x3
BUTTON 4=0x8
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x6
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1

[Gravis GamePad Pro.Genre.15]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x1
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0x8
BUTTON 6=0x7
BUTTON 7=0x5
BUTTON 8=0x9
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1

[Gravis GamePad Pro.Genre.16]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1

[Gravis GamePad Pro.Genre.17]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x6
BUTTON 2=0x3
BUTTON 3=0x5
BUTTON 4=0x1
BUTTON 5=0x4
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1

[Gravis GamePad Pro.Genre.18]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0xD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.19]
MapExists=1

[Gravis GamePad Pro.Genre.19]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1

[Gravis GamePad Pro.Genre.20]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.21]
MapExists=1

[Gravis GamePad Pro.Genre.21]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x4
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1

[Gravis GamePad Pro.Genre.22]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x4
BUTTON 2=0x3
BUTTON 3=0x1
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1

[Gravis GamePad Pro.Genre.23]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.24]
MapExists=1

[Gravis GamePad Pro.Genre.24]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x5
BUTTON 3=0x6
BUTTON 4=0x8
BUTTON 5=0x3
BUTTON 6=0x7
BUTTON 7=0x4
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.25]
MapExists=1

[Gravis GamePad Pro.Genre.25]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.26]
MapExists=1

[Gravis GamePad Pro.Genre.26]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x6
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.27]
MapExists=1

[Gravis GamePad Pro.Genre.27]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
BUTTON 6=0x6
BUTTON 7=0x7
BUTTON 8=0x8
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.28]
MapExists=1

[Gravis GamePad Pro.Genre.28]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x3
BUTTON 2=0x5
BUTTON 3=0x4
BUTTON 4=0xFE
BUTTON 5=0x6
BUTTON 7=0x2
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.29]
MapExists=1

[Gravis GamePad Pro.Genre.29]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x4
BUTTON 2=0x6
BUTTON 3=0x1
BUTTON 4=0xFE
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x3
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.30]
MapExists=1

[Gravis GamePad Pro.Genre.30]
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x9
BUTTON 5=0x6
BUTTON 6=0xA
BUTTON 7=0x7
BUTTON 8=0x5
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.31]
MapExists=1

[Gravis GamePad Pro.Genre.31]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x9
BUTTON 4=0x8
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x6
BUTTON 8=0x4
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.32]
MapExists=1

[Gravis GamePad Pro.Genre.32]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x7
BUTTON 5=0x5
BUTTON 6=0x6
BUTTON 7=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.33]
MapExists=1

[Gravis GamePad Pro.Genre.33]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 7=0xFE
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1

[Gravis GamePad Pro.Genre.34]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x1
BUTTON 2=0x5
BUTTON 3=0x4
BUTTON 4=0xFE
BUTTON 5=0x3
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.35]
MapExists=1

[Gravis GamePad Pro.Genre.35]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 2=0x4
BUTTON 3=0xFD
BUTTON 4=0x5
BUTTON 5=0xFE
BUTTON 8=0x1
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.36]
MapExists=1

[Gravis GamePad Pro.Genre.36]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 2=0x4
BUTTON 3=0xFD
BUTTON 4=0x5
BUTTON 5=0xFE
BUTTON 8=0x1
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.37]
MapExists=1

[Gravis GamePad Pro.Genre.37]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 2=0x4
BUTTON 3=0xFD
BUTTON 4=0x5
BUTTON 5=0xFE
BUTTON 8=0x1
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.38]
MapExists=1

[Gravis GamePad Pro.Genre.38]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x2
BUTTON 1=0x3
BUTTON 2=0x4
BUTTON 3=0xFD
BUTTON 4=0x5
BUTTON 5=0xFE
BUTTON 8=0x1
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.39]
MapExists=1

[Gravis GamePad Pro.Genre.39]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x6
BUTTON 1=0x4
BUTTON 2=0x2
BUTTON 3=0xFD
BUTTON 4=0x8
BUTTON 5=0xB
BUTTON 6=0xA
BUTTON 7=0xD
BUTTON 8=0x1
BUTTON 9=0x3
[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.40]
MapExists=1

[Gravis GamePad Pro.Genre.40]
MapExists=1
X AXIS=0x1
Y AXIS=0x3
BUTTON 0=0x8
BUTTON 1=0x4
BUTTON 2=0x7
BUTTON 3=0x2
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0xFD
BUTTON 7=0x3
BUTTON 8=0x1
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1

[Gravis GamePad Pro.Genre.41]
MapExists=1
X AXIS=0x1
Y AXIS=0x4
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x6
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0xFD
BUTTON 9=0xFC

[Gravis GamePad Pro.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[Gravis GamePad Pro.Genre.1]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 6=0x2
BUTTON 4=0x3
BUTTON 1=0x4
BUTTON 2=0x5
BUTTON 3=0x6
BUTTON 5=0x7
BUTTON 0=0x8
BUTTON 8=0x9
BUTTON 9=0xFC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\hammer.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=INTERACT/3DFX SV-262A HAMMERHEAD FX,INTERACT/3DFX SV-262 HAMMERHEAD FX

[InterAct/3dfx SV-262A HammerHead Fx]
Name=InterAct/3dfxx SV-262A HammerHead Fxx
Controls=X AXIS,Y AXIS,Z AXIS,Z ROTATION,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9,BUTTON 10,BUTTON 11,HAT SWITCH,CTRL514
VID=0x5FD
PID=0x262A
ImageFileName.0=SV-262E1.PNG
ImageFileName.1=SV-262E3.PNG
ImageFileName.2=SV-262E4.PNG

[X Axis]
Type=0x2
UsagePage=0x1
Usage=0x30
Name=X AXIS
Align.1=BL
CallOutMax.1=(296,17),(386,59)
LineData.1=(310,60),(310,76),(268,76)

[Y AXIS]
Type=0x102
UsagePage=0x1
Usage=0x31
Name=Y AXIS
Align.1=B
CallOutMax.1=(197,0),(290,37)
LineData.1=(242,37),(242,64)

[Z AXIS]
Type=0x202
UsagePage=0x1
Usage=0x32
Name=Z AXIS
Align.1=BR
CallOutMax.1=(5,20),(90,61)
LineData.1=(77,58),(77,74),(124,74)

[Z ROTATION]
Type=0x502
UsagePage=0x1
Usage=0x35
Name=Z ROTATION
Align.1=B
CallOutMax.1=(103,0),(196,37)
LineData.1=(144,37),(144,64)

[Button 0]
Type=0x4
UsagePage=0x9
Usage=0x1
Name=BUTTON 0
Align.0=T
CallOutMax.0=(165,211),(236,289)
LineData.0=(223,207),(223,87)

[Button 1]
Type=0x104
UsagePage=0x9
Usage=0x2
Name=BUTTON 1
Align.0=TR
CallOutMax.0=(0,184),(63,298)
LineData.0=(40,183),(40,59),(218,59)

[Button 2]
Type=0x204
UsagePage=0x9
Usage=0x3
Name=BUTTON 2
Align.0=R
CallOutMax.0=(10,5),(211,40)
LineData.0=(211,19),(246,19),(246,38)

[Button 11]
Type=0xB04
UsagePage=0x9
Usage=0xC
Name=BUTTON 11
Align.0=TR
CallOutMax.0=(75,199),(160,247)
LineData.0=(157,203),(194,203),(194,98)

[Hat Switch]
Type=0x10
UsagePage=0x1
Usage=0x39
Name=HAT SWITCH
Align.1=T
CallOutMax.1=(379,80),(422,267)
LineData.1=(374,104),(328,104)

[Button 3]
Type=0x304
UsagePage=0x9
Usage=0x4
Name=BUTTON 3
Align.0=L
CallOutMax.0=(298,227),(419,291)
LineData.0=(295,259),(248,259),(248,97)

[Button 4]
Type=0x404
UsagePage=0x9
Usage=0x5
Name=BUTTON 4
Align.0=L
CallOutMax.0=(344,67),(422,139)
LineData.0=(341,101),(258,101),(258,77)

[Button 5]
Type=0x504
UsagePage=0x9
Usage=0x6
Name=BUTTON 5
Align.0=C
CallOutMax.0=(332,19),(423,55)
LineData.0=(331,36),(264,36),(264,47)

[Button 6]
Type=0x604
UsagePage=0x9
Usage=0x7
Name=BUTTON 6
Align.1=T
CallOutMax.1=(240,250),(367,297)
LineData.1=(305,244),(305,212)

[Button 7]
Type=0x704
UsagePage=0x9
Usage=0x8
Name=BUTTON 7
Align.1=T
CallOutMax.1=(11,247),(159,301)
LineData.1=(83,242),(83,213)

[Button 8]
Type=0x804
UsagePage=0x9
Usage=0x9
Name=BUTTON 8
Align.2=T
CallOutMax.2=(200,215),(291,302)
LineData.2=(252,213),(252,102),(293,102)

[Button 10]
Type=0xA04
UsagePage=0x9
Usage=0xB
Name=BUTTON 10
Align.0=T
CallOutMax.0=(81,154),(159,199)
LineData.0=(134,155),(134,89),(174,89)

[Button 9]
Type=0x904
UsagePage=0x9
Usage=0xA
Name=BUTTON 9
Align.2=T
CallOutMax.2=(92,217),(189,301)
LineData.2=(132,212),(132,100),(93,100)

[INTERACT/3DFX SV-262 HAMMERHEAD FX]
Name=INTERACT SV-262 HAMMERHEAD FXX
Controls=CTRL16777218,CTRL33556228,CTRL33555972,CTRL33556740,CTRL33554692,CTRL16777730,CTRL16,CTRL33556484,CTRL33555204,CTRL33554948,CTRL33555716,CTRL33554436,CTRL33555460,CTRL16777474,CTRL1282
ImageFileName.0=SV-262E1.PNG
ImageFormat.0=BMP
ImageFileName.1=SV-262E3.PNG
ImageFormat.1=BMP
ImageFileName.2=SV-262E4.PNG
ImageFormat.2=BMP

[CTRL16777218]
Type=0x1000002
Name=X AXIS
Align.1=BL
CallOutMax.1=(296,17),(386,59)
LineData.1=(310,60),(310,76),(268,76)

[CTRL33556228]
Type=0x2000704
Name=R
Align.1=T
CallOutMax.1=(11,247),(159,301)
LineData.1=(83,242),(83,213)

[CTRL33555972]
Type=0x2000604
Name=L
Align.1=T
CallOutMax.1=(240,250),(367,297)
LineData.1=(305,244),(305,212)

[CTRL33556740]
Type=0x2000904
Name=R1
Align.2=T
CallOutMax.2=(92,217),(189,301)
LineData.2=(132,212),(132,100),(93,100)

[CTRL33554692]
Type=0x2000104
Name=BUTTON B
Align.0=TR
CallOutMax.0=(0,184),(63,298)
LineData.0=(40,183),(40,59),(218,59)

[CTRL16777730]
Type=0x1000202
Name=I AXIS
Align.1=B
CallOutMax.1=(1,27),(79,70)
LineData.1=(35,72),(35,76),(120,76)

[CTRL16]
Type=0x10
Name=POV 0
Align.1=T
CallOutMax.1=(379,80),(422,267)
LineData.1=(374,104),(328,104)

[CTRL33556484]
Type=0x2000804
Name=L1
Align.2=T
CallOutMax.2=(200,215),(291,302)
LineData.2=(252,213),(252,102),(293,102)

[CTRL33555204]
Type=0x2000304
Name=BUTTON D
Align.0=L
CallOutMax.0=(298,227),(419,291)
LineData.0=(295,259),(248,259),(248,97)

[CTRL33554948]
Type=0x2000204
Name=BUTTON C
Align.0=R
CallOutMax.0=(10,5),(211,40)
LineData.0=(211,19),(246,19),(246,38)

[CTRL33555716]
Type=0x2000504
Name=F
Align.0=C
CallOutMax.0=(332,19),(423,55)
LineData.0=(331,36),(264,36),(264,47)

[CTRL33554436]
Type=0x2000004
Name=BUTTON A
Align.0=T
CallOutMax.0=(165,211),(236,289)
LineData.0=(223,207),(223,87)

[CTRL33555460]
Type=0x2000404
Name=E
Align.0=L
CallOutMax.0=(344,67),(422,139)
LineData.0=(341,101),(258,101),(258,77)

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.2]
MapExists=1
CTRL16777218=0x1
CTRL33556740=0x1
CTRL33556484=0x2
CTRL33554436=0x3
CTRL16777730=0x4
CTRL33556228=0x4
CTRL33555972=0x5
CTRL33555204=0x6
CTRL33554692=0x7
CTRL33555460=0x8
CTRL33554948=0xFE
CTRL33555716=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[CTRL16777474]
Type=0x1000102
Name=Y AXIS
Align.1=B
CallOutMax.1=(197,0),(290,37)
LineData.1=(242,37),(242,64)

[CTRL1282]
Type=0x502
Name=RZ-AXIS
Align.1=B
CallOutMax.1=(103,0),(196,37)
LineData.1=(144,37),(144,64)

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.3]
MapExists=1
CTRL16777218=0x1
CTRL16777474=0x2
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33556740=0x3
CTRL33554436=0xFD
CTRL16=0x1
CTRL16777730=0x5
CTRL33555204=0x4
CTRL33554692=0x5
CTRL33556484=0x6
CTRL33554948=0xFE
CTRL33555716=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.41]
MapExists=1
CTRL16777218=0x1
CTRL16777730=0x2
CTRL16777474=0x3
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33556740=0x3
CTRL33556484=0x4
CTRL33554436=0x5
CTRL33555204=0x6
CTRL33554692=0xFD
CTRL33554948=0x7
CTRL33555716=0x8
CTRL33555460=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.9]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.9]
MapExists=1
CTRL16777218=0x1
CTRL16777474=0x2
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33554436=0x3
CTRL33555204=0x4
CTRL33556740=0x5
CTRL33556484=0x6
CTRL33554692=0xFD
CTRL16=0x1
CTRL33555460=0x7
CTRL1282=0x3
CTRL33555716=0x8
CTRL33554948=0xFE

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.11]
MapExists=1
CTRL1282=0x1
CTRL16777474=0x2
CTRL33554436=0x1
CTRL33555204=0x2
CTRL33554692=0x3
CTRL33556228=0x4
CTRL33555972=0x5
CTRL33556740=0x6
CTRL33556484=0x7
CTRL33554948=0xFD
CTRL33555716=0x8
CTRL16777218=0x3
CTRL33555460=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.12]
MapExists=1
CTRL16777218=0x1
CTRL16777474=0x2
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33556740=0x3
CTRL33556484=0x4
CTRL33554436=0x5
CTRL33555204=0xFD
CTRL33554692=0x6
CTRL33554948=0x7
CTRL33555716=0x8
CTRL33555460=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.13]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.13]
MapExists=1
CTRL1282=0x1
CTRL16777474=0x2
CTRL33556228=0x1
CTRL33554436=0x2
CTRL33555972=0x3
CTRL33555204=0x4
CTRL33556740=0x5
CTRL33556484=0x6
CTRL33555716=0xFD
CTRL16=0x1
CTRL33554948=0x8
CTRL16777218=0x3
CTRL33555460=0x9
CTRL33554692=0xA

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.14]
MapExists=1
CTRL1282=0x1
CTRL16777474=0x2
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33556740=0x3
CTRL33556484=0x4
CTRL33555204=0x5
CTRL33554436=0xFD
CTRL16=0x1
CTRL33555716=0x6
CTRL16777218=0x3
CTRL33555460=0x7
CTRL33554692=0x8
CTRL33554948=0xFE

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.15]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33555972=0x1
CTRL33556228=0x2
CTRL33556740=0x3
CTRL33556484=0x4
CTRL33554436=0x5
CTRL33555204=0x6
CTRL33554692=0x7
CTRL33555460=0x8
CTRL33555716=0xFD
CTRL33554948=0x9

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.16]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33555972=0x1
CTRL33556228=0x2
CTRL33556484=0x3
CTRL33556740=0x4
CTRL33554436=0x5
CTRL33555716=0xFD
CTRL33555204=0x6
CTRL33554692=0x7
CTRL33555460=0xFE
CTRL33554948=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.17]
MapExists=1
CTRL16777218=0x1
CTRL16777474=0x2
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33554436=0x3
CTRL33555204=0x4
CTRL33554692=0x5
CTRL33555460=0x6
CTRL33554948=0x7
CTRL33555716=0x8

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.28]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.25]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.26]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.27]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.27]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33555204=0x1
CTRL33555460=0x2
CTRL33554436=0x3
CTRL33554692=0x4
CTRL16=0x1
CTRL33556484=0x5
CTRL33556228=0x6
CTRL33556740=0x7
CTRL33555972=0x8
CTRL33554948=0xFE
CTRL33555716=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.24]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.24]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33554436=0x3
CTRL33555204=0x4
CTRL33555460=0x5
CTRL33554948=0x6
CTRL33555716=0xFD
CTRL16=0x1
CTRL33554692=0x7
CTRL33556740=0x8
CTRL33556484=0x9

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.29]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.29]
MapExists=1
CTRL16777474=0x1
CTRL1282=0x2
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33556740=0x3
CTRL33554436=0x4
CTRL33556484=0x5
CTRL33555204=0x6
CTRL33555460=0xFD
CTRL16=0x1
CTRL33554692=0x7
CTRL33554948=0xFE
CTRL33555716=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.32]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.33]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.34]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33555204=0x1
CTRL33554436=0x2
CTRL33556740=0x3
CTRL33556228=0x4
CTRL33555972=0x5
CTRL33555716=0xFD
CTRL33554948=0xFE
CTRL33556484=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.35]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.35]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.26]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33555460=0x1
CTRL33554436=0x2
CTRL33555204=0x3
CTRL33554692=0x4
CTRL16=0x1
CTRL33556484=0x6
CTRL33556228=0x7
CTRL33556740=0x8
CTRL33555972=0x9
CTRL33554948=0xFE
CTRL33555716=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.25]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33554436=0x1
CTRL33555460=0x2
CTRL33555204=0x3
CTRL33554692=0x4
CTRL16=0x1
CTRL33556484=0x6
CTRL33556228=0x7
CTRL33556740=0x8
CTRL33555972=0x9
CTRL33554948=0xFE
CTRL33555716=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.30]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.31]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.31]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33554436=0x1
CTRL33555204=0x2
CTRL33556228=0x3
CTRL33555972=0x4
CTRL33554692=0x5
CTRL33556484=0x7
CTRL16=0x1
CTRL33555460=0x8
CTRL33555716=0x9
CTRL33554948=0xA
CTRL33556740=0xB

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.18]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33554948=0x1
CTRL33554436=0x2
CTRL33554692=0x3
CTRL33555460=0x4
CTRL33555716=0x5
CTRL33556228=0x6
CTRL33555204=0x7
CTRL33555972=0x8
CTRL16=0x1
CTRL33556740=0xB
CTRL33556484=0xC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.19]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.32]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33554436=0x3
CTRL33555204=0x4
CTRL33555460=0x5
CTRL33555716=0xFD
CTRL16=0x1
CTRL33556740=0x6
CTRL33554692=0x7
CTRL33554948=0xFE
CTRL33556484=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.21]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.21]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33556740=0x1
CTRL33554692=0x2
CTRL33554436=0x3
CTRL33555716=0x4
CTRL33554948=0x5
CTRL33555460=0x6
CTRL33556484=0xFD
CTRL33555204=0x7
CTRL33556228=0x8
CTRL33555972=0x9

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.20]
MapExists=1
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33554436=0x3
CTRL33554692=0xFD
CTRL33554948=0xFE
CTRL33555204=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.8]
MapExists=1
CTRL1282=0x1
CTRL16777474=0x2
CTRL33554436=0x1
CTRL33555204=0x2
CTRL33556228=0x3
CTRL33555972=0x4
CTRL33555460=0x5
CTRL33554692=0x6
CTRL33554948=0x7
CTRL33556740=0xFD
CTRL33556484=0x8
CTRL16=0x1
CTRL16777218=0x3
CTRL33555716=0xA

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.10]
MapExists=1
CTRL16777218=0x1
CTRL16777474=0x2
CTRL33556740=0x1
CTRL33555716=0x2
CTRL33554948=0x3
CTRL33556484=0x4
CTRL33554436=0x5
CTRL33555460=0xFD
CTRL16=0x1
CTRL33555204=0x6
CTRL33555972=0x7
CTRL33556228=0x8
CTRL1282=0x3
CTRL33554692=0x9

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.19]
MapExists=1
CTRL16777218=0x1
CTRL16777474=0x2
CTRL33554436=0x1
CTRL33555204=0x2
CTRL33555460=0x3
CTRL33554692=0x4
CTRL33554948=0x5
CTRL33555716=0x6
CTRL33556228=0x7
CTRL33556740=0xFD
CTRL33555972=0x8
CTRL33556484=0x9

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.22]
MapExists=1
CTRL16777218=0x1
CTRL16777474=0x2
CTRL33554436=0x1
CTRL33555972=0x2
CTRL33556228=0x3
CTRL33554692=0x4
CTRL33554948=0x5
CTRL33556484=0xFD
CTRL33555204=0x6
CTRL33556740=0x7
CTRL33555460=0x8
CTRL33555716=0x9

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.23]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33556484=0x1
CTRL33556740=0x2
CTRL33554436=0x3
CTRL33554692=0x4
CTRL33555460=0x5
CTRL33555204=0x6
CTRL33554948=0x7
CTRL33555716=0x8
CTRL33556228=0x9
CTRL33555972=0xA

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.28]
MapExists=1
CTRL16777218=0x1
CTRL1282=0x2
CTRL33556228=0x1
CTRL33555204=0x2
CTRL33555972=0x3
CTRL33555460=0x4
CTRL33554436=0x5
CTRL33554948=0xFD
CTRL16=0x1
CTRL33556740=0x6
CTRL33554692=0xFE
CTRL33555716=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.30]
MapExists=1
CTRL16777218=0x1
CTRL16777474=0x2
CTRL1282=0x3
CTRL33554436=0x1
CTRL33555460=0x2
CTRL33556228=0x3
CTRL33555972=0x4
CTRL33554692=0x5
CTRL16=0x1
CTRL33556740=0x8
CTRL33556484=0x9
CTRL33555204=0xB
CTRL33554948=0xC
CTRL33555716=0xD

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.33]
MapExists=1
CTRL16777474=0x1
CTRL16777218=0x2
CTRL33555204=0x1
CTRL33555460=0x2
CTRL33554436=0x3
CTRL33556228=0x4
CTRL33555972=0x5
CTRL33555716=0xFD
CTRL16=0x1
CTRL33554948=0xFE
CTRL33556484=0xFC

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.39]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.39]
MapExists=1

[AXISPAD]
VID=0x5FD
PID=0x3002
Name=AXISPAD

[AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.39]
MapExists=1

[AXISPAD.Genre.39]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.7]
MapExists=1
CTRL16777218=0x1
CTRL16777474=0x2
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33554436=0x3
CTRL33555204=0xFD
CTRL16=0x1
CTRL16777730=0x4
CTRL1282=0x5
CTRL33554692=0x4
CTRL33554948=0x5
CTRL33556740=0x6
CTRL33556484=0x7
CTRL33555460=0x8
CTRL33555716=0xFC

[AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1

[AXISPAD.Genre.7]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[INTERACT/3DFX SV-262 HAMMERHEAD FX.Genre.1]
MapExists=1
CTRL16777218=0x1
CTRL33556228=0x1
CTRL33555972=0x2
CTRL33556740=0x3
CTRL33554692=0xFD
CTRL16777730=0x4
CTRL16=0x1
CTRL33556484=0x4
CTRL33555204=0x5
CTRL33554948=0x6
CTRL33555716=0x7
CTRL33554436=0x8
CTRL33555460=0x9
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ia3002_g.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=INTERACT AXISPAD

[INTERACT AXISPAD]
Name=INTERACT I-73002 DUAL IMPACT PC
ImageFileName.0=IA3002_1.PNG
ImageFileName.1=IA3002_2.PNG
Controls=CTRL16,CTRL516,CTRL1028,CTRL772,CTRL1540,CTRL1796,CTRL1284,CTRL258,CTRL2,CTRL4,CTRL260,CTRL2308,CTRL2052

[CTRL16]
Type=0x10
Name=POV 0
Align.0=B
CallOutMax.0=(6,4),(127,56)
LineData.0=(52,55),(52,120),(67,120),(68,120)

[CTRL4]
Type=0x4
Name=BUTTON 0
Align.0=B
CallOutMax.0=(205,0),(312,34)
LineData.0=(260,26),(260,108)

[CTRL260]
Type=0x104
Name=BUTTON 1
Align.0=L
CallOutMax.0=(328,61),(427,121)
LineData.0=(326,92),(296,92)

[CTRL516]
Type=0x204
Name=BUTTON 2
Align.0=TL
CallOutMax.0=(360,239),(429,309)
LineData.0=(367,246),(283,246),(283,158)

[CTRL1028]
Type=0x404
Name=BUTTON 4
Align.1=TL
CallOutMax.1=(354,201),(423,303)
LineData.1=(353,206),(340,206),(340,187),(333,187)

[CTRL772]
Type=0x304
Name=BUTTON 3
Align.0=TL
CallOutMax.0=(361,153),(429,238)
LineData.0=(358,158),(304,158),(304,134)

[CTRL1540]
Type=0x604
Name=BUTTON 6
Align.1=T
CallOutMax.1=(210,241),(294,309)
LineData.1=(250,238),(250,224),(276,224)

[CTRL1796]
Type=0x704
Name=BUTTON 7
Align.1=T
CallOutMax.1=(106,242),(192,309)
LineData.1=(148,237),(148,224),(121,224)

[CTRL1284]
Type=0x504
Name=BUTTON 5
Align.1=T
CallOutMax.1=(6,244),(95,308)
LineData.1=(45,240),(45,183),(56,183)

[CTRL258]
Type=0x102
Name=Y-AXIS
Align.1=B
CallOutMax.1=(8,0),(111,58)
LineData.1=(55,45),(55,87),(124,87)

[CTRL2]
Type=0x2
Name=X-AXIS
Align.1=BL
CallOutMax.1=(283,5),(403,74)
LineData.1=(304,74),(304,86),(267,86)


[CTRL2052]
Type=0x804
Name=BUTTON 8
Align.0=T
CallOutMax.0=(105,262),(184,310)
LineData.0=(142,268),(142,180)

[CTRL2308]
Type=0x904
Name=BUTTON 9
Align.0=T
CallOutMax.0=(201,262),(280,310)
LineData.0=(238,268),(238,180)

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[INTERACT AXISPAD.Genre.2]
MapExists=1
CTRL2=0x1
CTRL2052=0x1
CTRL1796=0x2
CTRL260=0x3
CTRL4=0xFD
CTRL1282=0x4
CTRL16=0x1
CTRL1540=0x4
CTRL1284=0x5
CTRL772=0x6
CTRL516=0x7
CTRL1028=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[INTERACT AXISPAD.Genre.3]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL260=0xFD
CTRL16=0x1
CTRL1282=0x5
CTRL772=0x4
CTRL516=0x5
CTRL1796=0x6
CTRL4=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1

[INTERACT AXISPAD.Genre.41]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1282=0x4
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL1796=0x4
CTRL772=0x5
CTRL516=0x6
CTRL4=0xFD
CTRL260=0x7
CTRL16=0x1
CTRL1028=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1

[INTERACT AXISPAD.Genre.7]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL260=0x3
CTRL4=0xFD
CTRL16=0x1
CTRL1282=0x5
CTRL516=0x4
CTRL1028=0x5
CTRL2052=0x6
CTRL1796=0x7
CTRL772=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.9]
MapExists=1

[INTERACT AXISPAD.Genre.9]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL260=0x3
CTRL772=0x4
CTRL2052=0x5
CTRL1796=0x6
CTRL4=0xFD
CTRL16=0x1
CTRL1282=0x3
CTRL1028=0x8
CTRL516=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1

[INTERACT AXISPAD.Genre.10]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL2052=0x1
CTRL1028=0x2
CTRL1796=0x4
CTRL260=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL772=0x6
CTRL1284=0x7
CTRL1540=0x8
CTRL1282=0x3
CTRL516=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1

[INTERACT AXISPAD.Genre.11]
MapExists=1
CTRL1282=0x1
CTRL258=0x2
CTRL260=0x1
CTRL772=0x2
CTRL516=0x3
CTRL1540=0x4
CTRL1284=0x5
CTRL2052=0x6
CTRL1796=0x7
CTRL4=0xFD
CTRL16=0x1
CTRL1028=0x8
CTRL2=0x3
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1

[INTERACT AXISPAD.Genre.12]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL1796=0x4
CTRL260=0x5
CTRL4=0xFD
CTRL772=0x6
CTRL516=0x7
CTRL1028=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.13]
MapExists=1

[INTERACT AXISPAD.Genre.13]
MapExists=1
CTRL1282=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL260=0x2
CTRL1284=0x3
CTRL772=0x4
CTRL2052=0x5
CTRL1796=0x6
CTRL4=0xFD
CTRL16=0x1
CTRL2=0x3
CTRL1028=0x9
CTRL516=0xA
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1

[INTERACT AXISPAD.Genre.14]
MapExists=1
CTRL1282=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL1796=0x4
CTRL772=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL260=0x6
CTRL2=0x3
CTRL1028=0x7
CTRL516=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1

[INTERACT AXISPAD.Genre.15]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1284=0x1
CTRL1540=0x2
CTRL2052=0x3
CTRL1796=0x4
CTRL260=0x5
CTRL772=0x6
CTRL516=0x7
CTRL1028=0x8
CTRL4=0xFD
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1

[INTERACT AXISPAD.Genre.16]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1284=0x1
CTRL1540=0x2
CTRL1796=0x3
CTRL2052=0x4
CTRL260=0x5
CTRL4=0xFD
CTRL772=0x6
CTRL516=0x7
CTRL1028=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1

[INTERACT AXISPAD.Genre.17]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL260=0x3
CTRL772=0x4
CTRL516=0x5
CTRL1028=0x6
CTRL4=0xFD
CTRL2052=0x7
CTRL1796=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1

[INTERACT AXISPAD.Genre.18]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL260=0x2
CTRL516=0x3
CTRL1028=0x4
CTRL1540=0x6
CTRL772=0x7
CTRL1284=0x8
CTRL4=0xFD
CTRL16=0x1
CTRL2052=0xB
CTRL1796=0xC
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1

[INTERACT AXISPAD.Genre.20]
MapExists=1
CTRL1540=0x1
CTRL1284=0x2
CTRL772=0x3
CTRL4=0xFD
CTRL516=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.21]
MapExists=1

[INTERACT AXISPAD.Genre.21]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL516=0x2
CTRL260=0x3
CTRL2052=0x4
CTRL1796=0x5
CTRL1028=0x6
CTRL4=0xFD
CTRL772=0x7
CTRL1540=0x8
CTRL1284=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1

[INTERACT AXISPAD.Genre.22]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL260=0x1
CTRL1284=0x2
CTRL1540=0x3
CTRL516=0x4
CTRL2052=0x5
CTRL4=0xFD
CTRL772=0x6
CTRL1028=0x8
CTRL1796=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1

[INTERACT AXISPAD.Genre.23]
MapExists=1
CTRL260=0x3
CTRL516=0x4
CTRL1028=0x5
CTRL772=0x6
CTRL4=0xFD
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.24]
MapExists=1

[INTERACT AXISPAD.Genre.24]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL260=0x3
CTRL772=0x4
CTRL1028=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL516=0x7
CTRL2052=0x8
CTRL1796=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.25]
MapExists=1

[INTERACT AXISPAD.Genre.25]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL260=0x1
CTRL1028=0x2
CTRL772=0x3
CTRL516=0x4
CTRL4=0xFD
CTRL16=0x1
CTRL1796=0x6
CTRL1540=0x7
CTRL2052=0x8
CTRL1284=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.26]
MapExists=1

[INTERACT AXISPAD.Genre.26]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1028=0x1
CTRL260=0x2
CTRL772=0x3
CTRL516=0x4
CTRL4=0xFD
CTRL16=0x1
CTRL1796=0x6
CTRL1540=0x7
CTRL2052=0x8
CTRL1284=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.27]
MapExists=1

[INTERACT AXISPAD.Genre.27]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL772=0x1
CTRL1028=0x2
CTRL260=0x3
CTRL516=0x4
CTRL4=0xFD
CTRL16=0x1
CTRL1796=0x5
CTRL1540=0x6
CTRL2052=0x7
CTRL1284=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.28]
MapExists=1

[INTERACT AXISPAD.Genre.28]
MapExists=1
CTRL2=0x1
CTRL1282=0x2
CTRL772=0x2
CTRL1028=0x4
CTRL260=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL2052=0x6
CTRL516=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.29]
MapExists=1

[INTERACT AXISPAD.Genre.29]
MapExists=1
CTRL2=0x1
CTRL1282=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL260=0x4
CTRL1796=0x5
CTRL772=0x6
CTRL4=0xFD
CTRL16=0x1
CTRL516=0x7
CTRL1028=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.30]
MapExists=1

[INTERACT AXISPAD.Genre.30]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1282=0x3
CTRL260=0x1
CTRL1028=0x2
CTRL1540=0x3
CTRL1284=0x4
CTRL516=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL2052=0x8
CTRL1796=0x9
CTRL772=0xB
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.31]
MapExists=1

[INTERACT AXISPAD.Genre.31]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL260=0x1
CTRL772=0x2
CTRL1540=0x3
CTRL1284=0x4
CTRL516=0x5
CTRL1796=0x7
CTRL4=0xFD
CTRL16=0x1
CTRL1028=0x8
CTRL2052=0xB
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.32]
MapExists=1

[INTERACT AXISPAD.Genre.32]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL260=0x3
CTRL772=0x4
CTRL1028=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL2052=0x6
CTRL516=0x7
CTRL1796=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1

[INTERACT AXISPAD.Genre.34]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL772=0x1
CTRL260=0x2
CTRL2052=0x3
CTRL1540=0x4
CTRL1284=0x5
CTRL4=0xFD
CTRL1796=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1

[INTERACT AXISPAD.Genre.8]
MapExists=1
CTRL1282=0x1
CTRL258=0x2
CTRL260=0x1
CTRL772=0x2
CTRL1540=0x3
CTRL1284=0x4
CTRL1028=0x5
CTRL516=0x6
CTRL2052=0xFD
CTRL1796=0x8
CTRL16=0x1
CTRL2=0x3
CTRL4=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[INTERACT AXISPAD.Genre.1]
MapExists=1
CTRL2=0x1
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL4=0xFD
CTRL258=0x4
CTRL16=0x1
CTRL1796=0x4
CTRL772=0x5
CTRL516=0x6
CTRL260=0x8
CTRL1028=0x9
CTRL2308=0xFE
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ia3002.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=INTERACT AXISPAD

[INTERACT AXISPAD]
Name=InterAct AxxisPad
ImageFileName.0=IA3002_1.PNG
ImageFileName.1=IA3002_2.PNG
VID=1533
PID=12290
Controls=CTRL16,CTRL516,CTRL1028,CTRL772,CTRL1540,CTRL2052,CTRL1796,CTRL1284,CTRL1282,CTRL258,CTRL2,CTRL514,CTRL4,CTRL2052_1,CTRL2308

[CTRL16]
UsagePage=0x1
Usage=0x39
Type=0x10
Name=HAT SWITCH
Align.0=B
CallOutMax.0=(6,4),(127,56)
LineData.0=(52,55),(52,120),(67,120),(68,120)

[CTRL516]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 1
Align.0=L
CallOutMax.0=(328,61),(427,121)
LineData.0=(326,92),(296,92)

[CTRL1028]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 3
Align.0=TL
CallOutMax.0=(361,153),(429,238)
LineData.0=(358,158),(304,158),(304,134)

[CTRL772]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 2
Align.0=TL
CallOutMax.0=(360,239),(429,309)
LineData.0=(367,246),(283,246),(283,158)

[CTRL1540]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 5
Align.1=T
CallOutMax.1=(6,244),(95,308)
LineData.1=(45,240),(45,183),(56,183)

[CTRL2052]
UsagePage=0x9
Usage=0x8
Type=0x704
Name=BUTTON 7
Align.1=T
CallOutMax.1=(100,237),(204,306)
LineData.1=(149,234),(149,219),(117,219)

[CTRL1796]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON 6
Align.1=T
CallOutMax.1=(210,236),(312,305)
LineData.1=(259,234),(259,223),(276,223)

[CTRL1284]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 4
Align.1=TL
CallOutMax.1=(354,201),(423,303)
LineData.1=(353,206),(340,206),(340,187),(333,187)

[CTRL1282]
UsagePage=0x1
Usage=0x35
Type=0x502
Name=Z ROTATION
Align.1=B
CallOutMax.1=(0,37),(92,70)
LineData.1=(44,69),(44,89),(123,89)

[CTRL258]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y AXIS
Align.1=B
CallOutMax.1=(178,42),(264,73)
LineData.1=(216,71),(216,89),(221,89)

[CTRL2]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X AXIS
Align.1=BL
CallOutMax.1=(283,5),(403,74)
LineData.1=(302,78),(302,88),(268,88)

[CTRL514]
Type=0x202
UsagePage=0x1
Usage=0x32
Name=Z AXIS
Align.1=B
CallOutMax.1=(125,0),(228,42)
LineData.1=(174,43),(174,89),(170,89)


[CTRL4]
Type=0x4
Name=BUTTON 0
Align.0=B
CallOutMax.0=(222,0),(299,37)
LineData.0=(261,39),(261,106)
UsagePage=0x9
Usage=0x1

[CTRL260]
Type=0x104
Name=BUTTON 1
Align.0=TR
CallOutMax.0=(104,220),(196,305)
LineData.0=(184,218),(184,211),(257,211),(257,134)

[CTRL2052_1]
Type=0x804
UsagePage=0x9
Usage=0x9
Name=BUTTON 8
Align.0=T
CallOutMax.0=(105,262),(184,310)
LineData.0=(142,268),(142,180)

[CTRL2308]
Type=0x904
Name=BUTTON 9
Align.0=T
CallOutMax.0=(201,262),(280,310)
LineData.0=(238,268),(238,180)
UsagePage=0x9
Usage=0xA

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[INTERACT AXISPAD.Genre.2]
MapExists=1
CTRL2=0x1
CTRL2052=0x1
CTRL1796=0x2
CTRL260=0x3
CTRL4=0xFD
CTRL1282=0x4
CTRL16=0x1
CTRL1540=0x4
CTRL1284=0x5
CTRL772=0x6
CTRL516=0x7
CTRL1028=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[INTERACT AXISPAD.Genre.3]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL260=0xFD
CTRL16=0x1
CTRL1282=0x5
CTRL772=0x4
CTRL516=0x5
CTRL1796=0x6
CTRL4=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1

[INTERACT AXISPAD.Genre.41]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1282=0x4
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL1796=0x4
CTRL772=0x5
CTRL516=0x6
CTRL4=0xFD
CTRL260=0x7
CTRL16=0x1
CTRL1028=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1

[INTERACT AXISPAD.Genre.7]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL260=0x3
CTRL4=0xFD
CTRL16=0x1
CTRL1282=0x5
CTRL516=0x4
CTRL1028=0x5
CTRL2052=0x6
CTRL1796=0x7
CTRL772=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.9]
MapExists=1

[INTERACT AXISPAD.Genre.9]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL260=0x3
CTRL772=0x4
CTRL2052=0x5
CTRL1796=0x6
CTRL4=0xFD
CTRL16=0x1
CTRL1282=0x3
CTRL1028=0x8
CTRL516=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1

[INTERACT AXISPAD.Genre.10]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL2052=0x1
CTRL1028=0x2
CTRL1796=0x4
CTRL260=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL772=0x6
CTRL1284=0x7
CTRL1540=0x8
CTRL1282=0x3
CTRL516=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1

[INTERACT AXISPAD.Genre.11]
MapExists=1
CTRL1282=0x1
CTRL258=0x2
CTRL260=0x1
CTRL772=0x2
CTRL516=0x3
CTRL1540=0x4
CTRL1284=0x5
CTRL2052=0x6
CTRL1796=0x7
CTRL4=0xFD
CTRL16=0x1
CTRL1028=0x8
CTRL2=0x3
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1

[INTERACT AXISPAD.Genre.12]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL1796=0x4
CTRL260=0x5
CTRL4=0xFD
CTRL772=0x6
CTRL516=0x7
CTRL1028=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.13]
MapExists=1

[INTERACT AXISPAD.Genre.13]
MapExists=1
CTRL1282=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL260=0x2
CTRL1284=0x3
CTRL772=0x4
CTRL2052=0x5
CTRL1796=0x6
CTRL4=0xFD
CTRL16=0x1
CTRL2=0x3
CTRL1028=0x9
CTRL516=0xA
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1

[INTERACT AXISPAD.Genre.14]
MapExists=1
CTRL1282=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL1796=0x4
CTRL772=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL260=0x6
CTRL2=0x3
CTRL1028=0x7
CTRL516=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1

[INTERACT AXISPAD.Genre.15]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1284=0x1
CTRL1540=0x2
CTRL2052=0x3
CTRL1796=0x4
CTRL260=0x5
CTRL772=0x6
CTRL516=0x7
CTRL1028=0x8
CTRL4=0xFD
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1

[INTERACT AXISPAD.Genre.16]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1284=0x1
CTRL1540=0x2
CTRL1796=0x3
CTRL2052=0x4
CTRL260=0x5
CTRL4=0xFD
CTRL772=0x6
CTRL516=0x7
CTRL1028=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1

[INTERACT AXISPAD.Genre.17]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL260=0x3
CTRL772=0x4
CTRL516=0x5
CTRL1028=0x6
CTRL4=0xFD
CTRL2052=0x7
CTRL1796=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1

[INTERACT AXISPAD.Genre.18]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL260=0x2
CTRL516=0x3
CTRL1028=0x4
CTRL1540=0x6
CTRL772=0x7
CTRL1284=0x8
CTRL4=0xFD
CTRL16=0x1
CTRL2052=0xB
CTRL1796=0xC
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1

[INTERACT AXISPAD.Genre.20]
MapExists=1
CTRL1540=0x1
CTRL1284=0x2
CTRL772=0x3
CTRL4=0xFD
CTRL516=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.21]
MapExists=1

[INTERACT AXISPAD.Genre.21]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL516=0x2
CTRL260=0x3
CTRL2052=0x4
CTRL1796=0x5
CTRL1028=0x6
CTRL4=0xFD
CTRL772=0x7
CTRL1540=0x8
CTRL1284=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1

[INTERACT AXISPAD.Genre.22]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL260=0x1
CTRL1284=0x2
CTRL1540=0x3
CTRL516=0x4
CTRL2052=0x5
CTRL4=0xFD
CTRL772=0x6
CTRL1028=0x8
CTRL1796=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1

[INTERACT AXISPAD.Genre.23]
MapExists=1
CTRL260=0x3
CTRL516=0x4
CTRL1028=0x5
CTRL772=0x6
CTRL4=0xFD
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.24]
MapExists=1

[INTERACT AXISPAD.Genre.24]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL260=0x3
CTRL772=0x4
CTRL1028=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL516=0x7
CTRL2052=0x8
CTRL1796=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.25]
MapExists=1

[INTERACT AXISPAD.Genre.25]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL260=0x1
CTRL1028=0x2
CTRL772=0x3
CTRL516=0x4
CTRL4=0xFD
CTRL16=0x1
CTRL1796=0x6
CTRL1540=0x7
CTRL2052=0x8
CTRL1284=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.26]
MapExists=1

[INTERACT AXISPAD.Genre.26]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1028=0x1
CTRL260=0x2
CTRL772=0x3
CTRL516=0x4
CTRL4=0xFD
CTRL16=0x1
CTRL1796=0x6
CTRL1540=0x7
CTRL2052=0x8
CTRL1284=0x9
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.27]
MapExists=1

[INTERACT AXISPAD.Genre.27]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL772=0x1
CTRL1028=0x2
CTRL260=0x3
CTRL516=0x4
CTRL4=0xFD
CTRL16=0x1
CTRL1796=0x5
CTRL1540=0x6
CTRL2052=0x7
CTRL1284=0x8
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.28]
MapExists=1

[INTERACT AXISPAD.Genre.28]
MapExists=1
CTRL2=0x1
CTRL1282=0x2
CTRL772=0x2
CTRL1028=0x4
CTRL260=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL2052=0x6
CTRL516=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.29]
MapExists=1

[INTERACT AXISPAD.Genre.29]
MapExists=1
CTRL2=0x1
CTRL1282=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL260=0x4
CTRL1796=0x5
CTRL772=0x6
CTRL4=0xFD
CTRL16=0x1
CTRL516=0x7
CTRL1028=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.30]
MapExists=1

[INTERACT AXISPAD.Genre.30]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1282=0x3
CTRL260=0x1
CTRL1028=0x2
CTRL1540=0x3
CTRL1284=0x4
CTRL516=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL2052=0x8
CTRL1796=0x9
CTRL772=0xB
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.31]
MapExists=1

[INTERACT AXISPAD.Genre.31]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL260=0x1
CTRL772=0x2
CTRL1540=0x3
CTRL1284=0x4
CTRL516=0x5
CTRL1796=0x7
CTRL4=0xFD
CTRL16=0x1
CTRL1028=0x8
CTRL2052=0xB
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.32]
MapExists=1

[INTERACT AXISPAD.Genre.32]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL1540=0x1
CTRL1284=0x2
CTRL260=0x3
CTRL772=0x4
CTRL1028=0x5
CTRL4=0xFD
CTRL16=0x1
CTRL2052=0x6
CTRL516=0x7
CTRL1796=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1

[INTERACT AXISPAD.Genre.34]
MapExists=1
CTRL2=0x1
CTRL258=0x2
CTRL772=0x1
CTRL260=0x2
CTRL2052=0x3
CTRL1540=0x4
CTRL1284=0x5
CTRL4=0xFD
CTRL1796=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1

[INTERACT AXISPAD.Genre.8]
MapExists=1
CTRL1282=0x1
CTRL258=0x2
CTRL260=0x1
CTRL772=0x2
CTRL1540=0x3
CTRL1284=0x4
CTRL1028=0x5
CTRL516=0x6
CTRL2052=0xFD
CTRL1796=0x8
CTRL16=0x1
CTRL2=0x3
CTRL4=0xFE
CTRL2308=0xFC

[INTERACT AXISPAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[INTERACT AXISPAD.Genre.1]
MapExists=1
CTRL2=0x1
CTRL1540=0x1
CTRL1284=0x2
CTRL2052=0x3
CTRL4612=0xFD
CTRL1282=0x4
CTRL16=0x1
CTRL1796=0x4
CTRL772=0x5
CTRL516=0x6
CTRL2052_1=0x7
CTRL4=0x8
CTRL1028=0x9
CTRL2308=0xE0
CTRL4868=0xFE
CTRL4356=0xFC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\lgc202.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Logitech WingMan Formula (Yellow)(USB),Logitech WingMan Formula (Yellow)

[Logitech WingMan Formula (Yellow)]
VID=1133
PID=49192
Name=LOGITECHWINGMANRALLY2
Controls=X Axis,Button 0,Button 1,Button 2,Button 3,Button 4,Button 5,Y Axis
ImageFileName.0=LGC202.PNG

[Logitech WingMan Formula (Yellow)(USB)]
VID=1133
PID=49666
Name=VID_046D&PID_C202
Controls=X AXIS,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,Y AXIS
ImageFileName.0=LGC202.PNG



[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X AXIS
Align.0=R
CallOutMax.0=(2,233),(97,254)
LineData.0=(200,197),(124,243),(89,243)


[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 0
Align.0=R
CallOutMax.0=(2,10),(110,31)
LineData.0=(196,117),(128,21),(82,20)


[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 1
Align.0=L
CallOutMax.0=(317,11),(426,32)
LineData.0=(243,119),(293,21),(327,21)


[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 2
Align.0=R
CallOutMax.0=(2,36),(111,57)
LineData.0=(196,126),(124,46),(86,46)


[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 3
Align.0=L
CallOutMax.0=(316,38),(425,60)
LineData.0=(244,131),(300,49),(329,49)


[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 4
Align.0=R
CallOutMax.0=(2,63),(111,84)
LineData.0=(191,141),(124,74),(102,74)


[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 5
Align.0=L
CallOutMax.0=(316,66),(425,88)
LineData.0=(243,147),(301,78),(330,77)


[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y AXIS
Align.0=TR
CallOutMax.0=(2,191),(97,213)
LineData.0=(123,152),(89,201)


[Logitech WingMan Formula (Yellow)(USB).Genre.2]
X Axis=1
Button 0=5
Button 1=4
Button 2=8
Button 3=1
Button 4=3
Button 5=2
Y Axis=2
[Logitech WingMan Formula (Yellow)(USB).Genre.3]
X Axis=1
Button 0=3
Button 1=2
Button 2=6
Button 3=1
Button 4=253
Button 5=4
Y Axis=3
[Logitech WingMan Formula (Yellow)(USB).Genre.41]
X Axis=1
Button 0=3
Button 1=2
Button 2=6
Button 3=1
Button 4=4
Button 5=5
Y Axis=4
[Logitech WingMan Formula (Yellow)(USB).Genre.4]
X Axis=1
Button 0=3
Button 1=1
Button 2=2
Button 3=4
Button 4=253
Button 5=5
Y Axis=3
[Logitech WingMan Formula (Yellow)(USB).Genre.5]
X Axis=1
Button 0=9
Button 1=2
Button 2=5
Button 3=1
Button 4=253
Button 5=3
Y Axis=3
[Logitech WingMan Formula (Yellow)(USB).Genre.6]
X Axis=1
Button 0=7
Button 1=2
Button 2=6
Button 3=1
Button 4=253
Button 5=3
Y Axis=5
[Logitech WingMan Formula (Yellow)(USB).Genre.7]
X Axis=1
Button 0=8
Button 1=2
Button 2=4
Button 3=1
Button 4=253
Button 5=3
Y Axis=2
[Logitech WingMan Formula (Yellow)(USB).Genre.35]
X Axis=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=253
Button 5=254
Y Axis=2
[Logitech WingMan Formula (Yellow)(USB).Genre.36]
X Axis=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=253
Button 5=254
Y Axis=2
[Logitech WingMan Formula (Yellow)(USB).Genre.37]
X Axis=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=253
Button 5=254
Y Axis=2
[Logitech WingMan Formula (Yellow)(USB).Genre.38]
X Axis=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=253
Button 5=254
Y Axis=2
[Logitech WingMan Formula (Yellow)(USB).Genre.39]
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=5
Button 5=6
[Logitech WingMan Formula (Yellow)(USB).Genre.40]
X Axis=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=253
Button 5=6
Y Axis=2

;;==Gameport version
[Logitech WingMan Formula (Yellow).Genre.1]
X Axis=1
Button 0=2
Button 1=1
Button 2=4
Button 3=3
Button 4=8
Button 5=253
Y Axis=2
[Logitech WingMan Formula (Yellow).Genre.2]
X Axis=1
Button 0=5
Button 1=4
Button 2=8
Button 3=1
Button 4=3
Button 5=2
Y Axis=2
[Logitech WingMan Formula (Yellow).Genre.3]
X Axis=1
Button 0=3
Button 1=2
Button 2=6
Button 3=1
Button 4=253
Button 5=4
Y Axis=3
[Logitech WingMan Formula (Yellow).Genre.41]
X Axis=1
Button 0=3
Button 1=2
Button 2=6
Button 3=1
Button 4=4
Button 5=5
Y Axis=4
[Logitech WingMan Formula (Yellow).Genre.4]
X Axis=1
Button 0=3
Button 1=1
Button 2=2
Button 3=4
Button 4=253
Button 5=5
Y Axis=3
[Logitech WingMan Formula (Yellow).Genre.5]
X Axis=1
Button 0=9
Button 1=2
Button 2=5
Button 3=1
Button 4=253
Button 5=3
Y Axis=3
[Logitech WingMan Formula (Yellow).Genre.6]
X Axis=1
Button 0=7
Button 1=2
Button 2=6
Button 3=1
Button 4=253
Button 5=3
Y Axis=5
[Logitech WingMan Formula (Yellow).Genre.7]
X Axis=1
Button 0=8
Button 1=2
Button 2=4
Button 3=1
Button 4=253
Button 5=3
Y Axis=2
[Logitech WingMan Formula (Yellow).Genre.35]
X Axis=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=253
Button 5=254
Y Axis=2
[Logitech WingMan Formula (Yellow).Genre.36]
X Axis=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=253
Button 5=254
Y Axis=2
[Logitech WingMan Formula (Yellow).Genre.37]
X Axis=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=253
Button 5=254
Y Axis=2
[Logitech WingMan Formula (Yellow).Genre.38]
X Axis=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=253
Button 5=254
Y Axis=2
[Logitech WingMan Formula (Yellow).Genre.39]
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=5
Button 5=6
[Logitech WingMan Formula (Yellow).Genre.40]
X Axis=1
Button 0=1
Button 1=2
Button 2=3
Button 3=4
Button 4=253
Button 5=6
Y Axis=2
[LOGITECH WINGMAN FORMULA (YELLOW)(USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[LOGITECH WINGMAN FORMULA (YELLOW)(USB).Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 1=0x1
BUTTON 0=0x2
BUTTON 3=0x3
BUTTON 5=0xFD
Y AXIS=0x4
BUTTON 2=0x5
BUTTON 4=0x8
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\lgc207.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Logitech WingMan Extreme Digital 3D (USB),Logitech WingMan Extreme Digital 3D (Gameport)
[Logitech WingMan Extreme Digital 3D (USB)]
VID=1133
PID=49671
Name=VID_046D&PID_C207
Controls=Y AXIS,X AXIS,HAT SWITCH,Z ROTATION U,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,SLIDER U
ImageFileName.0=LGC207.PNG
ImageFormat.0=BMP
[Logitech WingMan Extreme Digital 3D (Gameport)]
VID=1133
PID=49193
Name=LOGITECHWINGMANEXXTREMEDIGITAL3D
Controls=Y AXIS,X AXIS,HAT SWITCH,Z ROTATION,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,SLIDER
ImageFileName.0=LGC207.PNG
ImageFormat.0=BMP
[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y AXIS
Align.0=L
CallOutMax.0=(306,205),(412,224)
LineData.0=(203,184),(259,218),(320,218)
[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X AXIS
Align.0=R
CallOutMax.0=(13,249),(120,271)
LineData.0=(178,184),(135,213),(135,257),(111,257)
[Hat Switch]
UsagePage=0x1
Usage=0x39
Type=0x10
Name=HAT SWITCH
Align.0=L
CallOutMax.0=(297,25),(410,46)
LineData.0=(161,62),(192,37),(319,37)
[Z Rotation]
UsagePage=2
Usage=186
Type=0x502
Name=Z ROTATION
Align.0=L
CallOutMax.0=(301,156),(418,176)
LineData.0=(216,153),(237,138),(307,167)
[Z Rotation U]
UsagePage=1
Usage=53
Type=0x502
Name=Z ROTATION
Align.0=L
CallOutMax.0=(301,156),(418,176)
LineData.0=(216,153),(237,138),(307,167)
[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 0
Align.0=R
CallOutMax.0=(23,71),(124,91)
LineData.0=(150,87),(135,87),(113,79)
[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 1
Align.0=R
CallOutMax.0=(12,19),(120,39)
LineData.0=(152,78),(140,29),(106,29)
[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 2
Align.0=R
CallOutMax.0=(23,116),(122,134)
LineData.0=(163,83),(156,127),(113,127)
[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 3
Align.0=L
CallOutMax.0=(297,65),(410,85)
LineData.0=(178,59),(245,76),(316,76)
[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 4
Align.0=L
CallOutMax.0=(299,101),(413,119)
LineData.0=(181,70),(244,110),(316,110)
[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 5
Align.0=R
CallOutMax.0=(14,185),(88,208)
LineData.0=(120,189),(101,199),(66,200)
[Button 6]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON 6
Align.0=R
CallOutMax.0=(13,151),(109,172)
LineData.0=(141,187),(136,160),(86,160)
[Slider]
UsagePage=2
Usage=187
Type=0x202
Name=SLIDER
Align.0=L
CallOutMax.0=(307,260),(417,282)
LineData.0=(171,203),(261,270),(318,270)
[Slider U]
UsagePage=1
Usage=54
Type=0x202
Name=SLIDER
Align.0=L
CallOutMax.0=(307,260),(417,282)
LineData.0=(171,203),(261,270),(318,270)
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.2]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 1=0x3
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 6=0x6
BUTTON 5=0x8
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.3]
MapExists=1
X AXIS=0x1
SLIDER U=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
HAT SWITCH=0x1
Y AXIS=0x5
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0xFE
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.41]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION U=0x3
SLIDER U=0x4
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
HAT SWITCH=0x1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER U=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
HAT SWITCH=0x1
BUTTON 3=0x4
Z ROTATION U=0x4
BUTTON 4=0x5
BUTTON 6=0x7
BUTTON 5=0x9
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
HAT SWITCH=0x1
Z ROTATION U=0x4
SLIDER U=0x5
BUTTON 3=0x4
BUTTON 5=0x5
BUTTON 6=0x6
BUTTON 4=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.7]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER U=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
HAT SWITCH=0x1
Z ROTATION U=0x5
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 6=0x6
BUTTON 5=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.8]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 4=0x4
BUTTON 3=0x5
BUTTON 5=0x6
BUTTON 6=0x7
HAT SWITCH=0x1
Z ROTATION U=0x3
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.9]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.10]
MapExists=1
Z ROTATION U=0x1
Y AXIS=0x2
BUTTON 6=0x1
BUTTON 0=0x2
BUTTON 5=0x3
BUTTON 4=0x4
BUTTON 1=0x5
HAT SWITCH=0x1
X AXIS=0x3
BUTTON 2=0x9
BUTTON 3=0xA
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.11]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 5=0x1
BUTTON 4=0x2
BUTTON 3=0x3
BUTTON 0=0x4
BUTTON 6=0x5
BUTTON 2=0x6
BUTTON 1=0x7
HAT SWITCH=0x1
Z ROTATION U=0x3
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.12]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
BUTTON 6=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.9]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 5=0x5
BUTTON 6=0x6
HAT SWITCH=0x1
Z ROTATION U=0x3
BUTTON 4=0x8
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.14]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
HAT SWITCH=0x1
Z ROTATION U=0x3
BUTTON 6=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.40]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.40]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 5=0xFD
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 6=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 3=0x1
BUTTON 4=0x2
BUTTON 1=0x3
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 0=0x4
BUTTON 6=0x5
BUTTON 2=0x7
BUTTON 5=0x8
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.39]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.39]
MapExists=1
SLIDER U=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (USB).Genre.4]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER U=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 5=0xFD
HAT SWITCH=0x1
Z ROTATION U=0x5
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 6=0xFE
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.2]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 1=0x3
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 6=0x6
BUTTON 5=0x8
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.3]
MapExists=1
X AXIS=0x1
SLIDER=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
HAT SWITCH=0x1
Y AXIS=0x5
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0xFE
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.41]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION=0x3
SLIDER=0x4
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
HAT SWITCH=0x1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
HAT SWITCH=0x1
BUTTON 3=0x4
Z ROTATION=0x4
BUTTON 4=0x5
BUTTON 6=0x7
BUTTON 5=0x9
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
HAT SWITCH=0x1
Z ROTATION=0x4
SLIDER=0x5
BUTTON 3=0x4
BUTTON 5=0x5
BUTTON 6=0x6
BUTTON 4=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.7]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
HAT SWITCH=0x1
Z ROTATION=0x5
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 6=0x6
BUTTON 5=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.8]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 4=0x4
BUTTON 3=0x5
BUTTON 5=0x6
BUTTON 6=0x7
HAT SWITCH=0x1
Z ROTATION=0x3
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.9]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.10]
MapExists=1
Z ROTATION=0x1
Y AXIS=0x2
BUTTON 6=0x1
BUTTON 0=0x2
BUTTON 5=0x3
BUTTON 4=0x4
BUTTON 1=0x5
HAT SWITCH=0x1
X AXIS=0x3
BUTTON 2=0x9
BUTTON 3=0xA
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.11]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 5=0x1
BUTTON 4=0x2
BUTTON 3=0x3
BUTTON 0=0x4
BUTTON 6=0x5
BUTTON 2=0x6
BUTTON 1=0x7
HAT SWITCH=0x1
Z ROTATION=0x3
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.12]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
BUTTON 6=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.9]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 5=0x5
BUTTON 6=0x6
HAT SWITCH=0x1
Z ROTATION=0x3
BUTTON 4=0x8
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.14]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
HAT SWITCH=0x1
Z ROTATION=0x3
BUTTON 6=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.40]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.40]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 5=0xFD
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 6=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 3=0x1
BUTTON 4=0x2
BUTTON 1=0x3
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 0=0x4
BUTTON 6=0x5
BUTTON 2=0x7
BUTTON 5=0x8
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.39]
MapExists=1
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.39]
MapExists=1
SLIDER=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
[LOGITECH WINGMAN EXTREME DIGITAL 3D (Gameport).Genre.4]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 5=0xFD
HAT SWITCH=0x1
Z ROTATION=0x5
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 6=0xFE
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\lgc291.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=LOGITECHWINGMANRALLYFORCEUSB,LOGITECHWINGMANRALLYFORCESERIAL

[LOGITECHWINGMANRALLYFORCESERIAL]
VID=0
PID=0
Name=LOGITECHWINGMANRALLYFORCESERIAL
ImageFileName.0=LGC291.png
Controls=CTRL16777218,CTRL33554436,CTRL33554692,CTRL33554948,CTRL33555460,CTRL16777474,CTRL33555204,CTRL33555716

[LOGITECHWINGMANRALLYFORCEUSB]
VID=0x46D
PID=0xC291
Name=LOGITECHWINGMANRALLYFORCEUSB
ImageFileName.0=LGC291.png
Controls=CTRL16777218,CTRL33554436,CTRL33554692,CTRL33554948,CTRL33555460,CTRL16777474,CTRL33555204,CTRL33555716

[CTRL16777218]
Type=0x1000002
UsagePage=0x1
Usage=0x30
Name=X AXIS
Align.0=R
CallOutMax.0=(2,236),(115,257)
LineData.0=(204,201),(143,247),(95,247)

[CTRL33554436]
Type=0x4
UsagePage=0x9
Usage=0x1
Name=BUTTON 0
Align.0=R
CallOutMax.0=(3,25),(112,47)
LineData.0=(198,121),(132,35),(91,35)

[CTRL33554692]
Type=0x104
UsagePage=0x9
Usage=0x2
Name=BUTTON 1
Align.0=L
CallOutMax.0=(326,27),(429,49)
LineData.0=(246,122),(296,37),(345,37)

[CTRL33554948]
Type=0x204
UsagePage=0x9
Usage=0x3
Name=BUTTON 2
Align.0=R
CallOutMax.0=(4,53),(112,73)
LineData.0=(198,134),(131,66),(98,66)

[CTRL33555460]
Type=0x404
UsagePage=0x9
Usage=0x5
Name=BUTTON 4
Align.0=R
CallOutMax.0=(2,82),(112,102)
LineData.0=(193,148),(125,94),(94,94)

[CTRL16777474]
Type=0x1000102
UsagePage=0x1
Usage=0x31
Name=Y AXIS
Align.0=TR
CallOutMax.0=(1,187),(114,209)
LineData.0=(130,159),(109,192)

[CTRL33555204]
Type=0x304
UsagePage=0x9
Usage=0x4
Name=BUTTON 3
Align.0=L
CallOutMax.0=(326,54),(430,76)
LineData.0=(243,138),(307,66),(350,67)

[CTRL33555716]
Type=0x504
UsagePage=0x9
Usage=0x6
Name=BUTTON 5
Align.0=L
CallOutMax.0=(325,81),(429,102)
LineData.0=(242,153),(307,94),(336,94)

[LOGITECHWINGMANRALLYFORCESERIAL.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[LOGITECHWINGMANRALLYFORCESERIAL.Genre.1]
MapExists=1
CTRL16777218=0x1
CTRL33554436=0x1
CTRL33554692=0x2
CTRL33554948=0x3
CTRL33555460=0xFD
CTRL16777474=0x4
CTRL33555204=0x4
CTRL33555716=0x6

[LOGITECHWINGMANRALLYFORCEUSB.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[LOGITECHWINGMANRALLYFORCEUSB.Genre.1]
MapExists=1
CTRL16777218=0x1
CTRL33554436=0x1
CTRL33554692=0x2
CTRL33554948=0x3
CTRL33555460=0xFD
CTRL16777474=0x4
CTRL33555204=0x4
CTRL33555716=0x6
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\lgc20a.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=VID_046D&PID_C20A,VID_046D&PID_C20A_1

[VID_046D&PID_C20A]
Name=VID_046D&PID_C20A
Controls=CTRL33556228,CTRL514,CTRL33554948,CTRL33555716,CTRL33555460,CTRL33555972,CTRL16,CTRL16777474,CTRL16777218,CTRL33555204,CTRL33554692,CTRL33554436,CTRL33556484,CTRL1538,CTRL1282_1
ImageFileName.0=LGC20A.png

[CTRL514]
Type=0x202
UsagePage=0x1
Usage=0x32
Name=THROTTLE
Align.0=L
CallOutMax.0=(321,23),(427,45)
LineData.0=(262,73),(297,35),(332,35)

[CTRL16777474]
Type=0x1000102
UsagePage=0x1
Usage=0x31
Name=Y AXIS
Align.0=R
CallOutMax.0=(2,206),(85,224)
LineData.0=(156,165),(119,213),(75,213)

[CTRL16777218]
Type=0x1000002
UsagePage=0x1
Usage=0x30
Name=X AXIS
Align.0=R
CallOutMax.0=(2,180),(85,198)
LineData.0=(145,150),(99,187),(67,187)

[CTRL1538]
Type=0x602
UsagePage=0x1
Usage=0x36
Name=SLIDER
Align.0=L
CallOutMax.0=(244,227),(329,249)
LineData.0=(224,167),(224,202),(244,238)

[CTRL1282_1]
Type=0x502
UsagePage=0x1
Usage=0x35
Name=RUDDER
Align.0=T
CallOutMax.0=(143,254),(228,276)
LineData.0=(211,152),(184,222),(184,258)

[CTRL33556228]
Type=0x2000704
UsagePage=0x9
Usage=0x8
Name=BUTTON 7
Align.0=B
CallOutMax.0=(209,0),(303,22)
LineData.0=(255,67),(255,9)

[CTRL33554948]
Type=0x2000204
UsagePage=0x9
Usage=0x3
Name=BUTTON 2
Align.0=L
CallOutMax.0=(321,97),(429,119)
LineData.0=(282,101),(307,108),(336,107)

[CTRL33555716]
Type=0x2000504
UsagePage=0x9
Usage=0x6
Name=BUTTON 5
Align.0=L
CallOutMax.0=(321,71),(429,92)
LineData.0=(267,87),(297,82),(343,82)

[CTRL33555460]
Type=0x2000404
UsagePage=0x9
Usage=0x5
Name=BUTTON 4
Align.0=L
CallOutMax.0=(321,48),(427,68)
LineData.0=(248,91),(289,59),(334,59)

[CTRL33555972]
Type=0x2000604
UsagePage=0x9
Usage=0x7
Name=BUTTON 6
Align.0=B
CallOutMax.0=(85,1),(184,22)
LineData.0=(134,66),(134,8)

[CTRL16]
Type=0x10
UsagePage=0x1
Usage=0x39
Name=POV 0
Align.0=BR
CallOutMax.0=(3,26),(85,47)
LineData.0=(119,97),(75,35)

[CTRL33555204]
Type=0x2000304
UsagePage=0x9
Usage=0x4
Name=BUTTON 3
Align.0=L
CallOutMax.0=(319,176),(429,196)
LineData.0=(232,107),(264,185),(332,185)

[CTRL33554692]
Type=0x2000104
UsagePage=0x9
Usage=0x2
Name=BUTTON 1
Align.0=L
CallOutMax.0=(321,125),(428,145)
LineData.0=(259,110),(297,135),(338,135)

[CTRL33554436]
Type=0x2000004
UsagePage=0x9
Usage=0x1
Name=BUTTON 0
Align.0=L
CallOutMax.0=(320,149),(429,171)
LineData.0=(242,122),(292,156),(336,156)

[CTRL33556484]
Type=0x2000804
UsagePage=0x9
Usage=0x9
Name=BUTTON 8
Align.0=R
CallOutMax.0=(3,151),(86,173)
LineData.0=(139,126),(106,163),(68,163)

[VID_046D&PID_C20A.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[VID_046D&PID_C20A.Genre.1]
MapExists=1

[VID_046D&PID_C20A.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1

[VID_046D&PID_C20A.Genre.34]
MapExists=1
CTRL16777218=0x1
CTRL16777474=0x2
CTRL33554692=0x1
CTRL33554436=0x2
CTRL33555460=0x3
CTRL33556228=0x4
CTRL33555972=0x5
CTRL33554948=0xFD
CTRL16=0x1
CTRL33555716=0xFE
CTRL33556484=0xFC


[VID_046D&PID_C20A_1]
VID=0x46D
PID=0xC20A
Name=VID_046D&PID_C20A
Controls=CTRL16777730_1,CTRL16777218_1,CTRL33554436_1,CTRL33554692_1,CTRL33554948_1,CTRL33556228_1,CTRL16777474_1,CTRL16_1,CTRL33555204_1,CTRL33555460_1,CTRL33555716_1,CTRL33555972_1,CTRL33556484_1,CTRL514_1,CTRL1282,CTRL1538_1
ImageFileName.0=LGC20A.PNG

[CTRL16777730_1]
Type=0x1000202
UsagePage=0x1
Usage=0x36
Name=SLIDER
Align.0=L
CallOutMax.0=(244,227),(329,249)
LineData.0=(224,167),(224,202),(244,238)

[CTRL16777218_1]
Type=0x1000002
UsagePage=0x1
Usage=0x30
Name=X AXIS
Align.0=R
CallOutMax.0=(2,180),(85,198)
LineData.0=(145,150),(99,187),(67,187)

[CTRL16777474_1]
Type=0x1000102
UsagePage=0x1
Usage=0x31
Name=Y AXIS
Align.0=R
CallOutMax.0=(2,206),(85,224)
LineData.0=(156,165),(119,213),(75,213)

[CTRL514_1]
Type=0x202
UsagePage=0x1
Usage=0x32
Name=THROTTLE
Align.0=L
CallOutMax.0=(321,23),(427,45)
LineData.0=(262,73),(297,35),(332,35)

[CTRL1282]
Type=0x502
UsagePage=0x1
Usage=0x35
Name=RUDDER
Align.0=T
CallOutMax.0=(143,254),(228,276)
LineData.0=(211,152),(184,222),(184,258)

[CTRL33554436_1]
Type=0x2000004
UsagePage=0x9
Usage=0x1
Name=TRIGGER
Align.0=L
CallOutMax.0=(320,149),(429,171)
LineData.0=(242,122),(292,156),(336,156)

[CTRL33554692_1]
Type=0x2000104
UsagePage=0x9
Usage=0x2
Name=BUTTON 2
Align.0=L
CallOutMax.0=(321,125),(428,145)
LineData.0=(259,110),(297,135),(338,135)

[CTRL33554948_1]
Type=0x2000204
UsagePage=0x9
Usage=0x3
Name=BUTTON 3
Align.0=L
CallOutMax.0=(321,97),(429,119)
LineData.0=(282,101),(307,108),(336,107)

[CTRL33556228_1]
Type=0x2000704
UsagePage=0x9
Usage=0x8
Name=BUTTON 8
Align.0=B
CallOutMax.0=(209,0),(303,22)
LineData.0=(255,67),(255,9)

[CTRL16_1]
Type=0x10
UsagePage=0x1
Usage=0x39
Name=HAT SWITCH
Align.0=BR
CallOutMax.0=(3,26),(85,47)
LineData.0=(119,97),(75,35)

[CTRL33555204_1]
Type=0x2000304
UsagePage=0x9
Usage=0x4
Name=BUTTON 4
Align.0=L
CallOutMax.0=(319,176),(429,196)
LineData.0=(232,107),(264,185),(332,185)

[CTRL33555460_1]
Type=0x2000404
UsagePage=0x9
Usage=0x5
Name=BUTTON 5
Align.0=L
CallOutMax.0=(321,48),(427,68)
LineData.0=(248,91),(289,59),(334,59)

[CTRL33555716_1]
Type=0x2000504
UsagePage=0x9
Usage=0x6
Name=BUTTON 6
Align.0=L
CallOutMax.0=(321,71),(429,92)
LineData.0=(267,87),(297,82),(343,82)

[CTRL33555972_1]
Type=0x2000604
UsagePage=0x9
Usage=0x7
Name=BUTTON 7
Align.0=B
CallOutMax.0=(85,1),(184,22)
LineData.0=(134,66),(134,8)

[CTRL33556484_1]
Type=0x2000804
UsagePage=0x9
Usage=0x9
Name=BUTTON 9
Align.0=R
CallOutMax.0=(3,151),(86,173)
LineData.0=(139,126),(106,163),(68,163)

[CTRL1538_1]
Type=0x602
UsagePage=0x1
Usage=0x32
Name=EXTRA
Align.0=TR
CallOutMax.0=(143,32),(227,87)
LineData.0=(226,40),(238,40),(238,70)




[VID_046D&PID_C20A_1.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[VID_046D&PID_C20A_1.Genre.1]
MapExists=1
CTRL16777218_1=0x1
CTRL33554436_1=0x1
CTRL33554692_1=0x2
CTRL33554948_1=0x3
CTRL33556228_1=0xFD
CTRL16777474_1=0x4
CTRL16_1=0x1
CTRL33555204_1=0x4
CTRL33555460_1=0x5
CTRL33555716_1=0x6
CTRL33555972_1=0x7
CTRL33556484_1=0x9
[VID_046D&PID_C20A_1.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1
[VID_046D&PID_C20A_1.Genre.8]
MapExists=1
CTRL16777218_1=0x1
CTRL16777474_1=0x2
CTRL33554436_1=0x1
CTRL33554692_1=0x2
CTRL33554948_1=0x3
CTRL33555204_1=0x4
CTRL33555460_1=0x5
CTRL33555716_1=0x6
CTRL33555972_1=0x7
CTRL33556228_1=0xFD
CTRL16_1=0x1
CTRL33556484_1=0x9
CTRL1282=0x3
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\lgc209.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Logitech WingMan Gamepad Black (USB),Logitech WingMan Gamepad Black (Gameport)
[Logitech WingMan Gamepad Black (USB)]
VID=1133
PID=49673
Name=VID_046D&PID_C209
Controls=BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,Y AXIS,X AXIS,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9,BUTTON 10
ImageFileName.0=LGC209.PNG
ImageFormat.0=BMP
[Logitech WingMan Gamepad Black (Gameport)]
VID=1133
PID=49190
Name=LOGITECHWINGMANGAMEPAD2
Controls=BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,Y AXIS,X AXIS,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9,BUTTON 10
ImageFileName.0=LGC209.PNG
ImageFormat.0=BMP
[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 0
Align.0=L
CallOutMax.0=(158,209),(242,227)
LineData.0=(220,131),(205,186),(198,213)
[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 1
Align.0=L
CallOutMax.0=(327,187),(411,207)
LineData.0=(236,122),(297,197),(342,197)
[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 2
Align.0=L
CallOutMax.0=(328,125),(410,145)
LineData.0=(255,117),(300,133),(339,133)
[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 3
Align.0=BL
CallOutMax.0=(8,136),(77,156)
LineData.0=(216,111),(141,148),(46,148)
[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y AXIS
Align.0=L
CallOutMax.0=(15,8),(124,30)
LineData.0=(170,96),(153,19),(114,19)
[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X AXIS
Align.0=BL
CallOutMax.0=(15,39),(124,61)
LineData.0=(148,104),(135,50),(91,49)
[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 4
Align.0=L
CallOutMax.0=(329,94),(409,115)
LineData.0=(230,104),(304,104),(347,104)
[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 5
Align.0=L
CallOutMax.0=(328,65),(409,85)
LineData.0=(250,97),(303,74),(348,74)
[Button 6]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON 6
Align.0=L
CallOutMax.0=(299,7),(409,27)
LineData.0=(177,78),(251,17),(331,17)
[Button 7]
UsagePage=0x9
Usage=0x8
Type=0x704
Name=BUTTON 7
Align.0=L
CallOutMax.0=(299,37),(410,56)
LineData.0=(231,78),(268,49),(310,49)
[Button 8]
UsagePage=0x9
Usage=0x9
Type=0x804
Name=BUTTON 8
Align.0=L
CallOutMax.0=(328,156),(412,175)
LineData.0=(261,136),(294,165),(340,165)
[Button 9]
UsagePage=0x9
Usage=0xA
Type=0x904
Name=BUTTON 9
Align.0=BL
CallOutMax.0=(7,171),(76,191)
LineData.0=(199,140),(135,183),(53,183)
[Button 10]
UsagePage=0x9
Usage=0xB
Type=0xA04
Name=BUTTON 10
Align.0=L
CallOutMax.0=(159,249),(242,266)
LineData.0=(240,140),(286,259),(183,259)
[LOGITECH WINGMAN GAMEPAD BLACK (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[LOGITECH WINGMAN GAMEPAD BLACK (USB).Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 9=0xFD
Y AXIS=0x4
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 10=0xFE
[LOGITECH WINGMAN GAMEPAD BLACK (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.39]
MapExists=1
[LOGITECH WINGMAN GAMEPAD BLACK (USB).Genre.39]
MapExists=1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 9=0xFD
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 10=0xB
[LOGITECH WINGMAN GAMEPAD BLACK (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[LOGITECH WINGMAN GAMEPAD BLACK (Gameport).Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 9=0xFD
Y AXIS=0x4
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 10=0xFE
[LOGITECH WINGMAN GAMEPAD BLACK (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.39]
MapExists=1
[LOGITECH WINGMAN GAMEPAD BLACK (Gameport).Genre.39]
MapExists=1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 9=0xFD
BUTTON 7=0x8
BUTTON 8=0x9
BUTTON 10=0xB
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms1b.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=SideWinder Force Feedback 2 Joystick

[SideWinder Force Feedback 2 Joystick]
VID=1118
PID=27
Name=SideWinder Force Feedback 2 Joystick
Controls=X AXIS,Y AXIS,Z ROTATION,SLIDER,HAT SWITCH,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7
ImageFileName.0=MS1B.PNG

[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x1000002
Name=X AXIS
Align.0=L
CallOutMax.0=(252,131),(426,151)
LineData.0=(250,143),(214,143)

[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x1000102
Name=Y AXIS
Align.0=R
CallOutMax.0=(1,108),(160,128)
LineData.0=(162,121),(188,121)

[Z Rotation]
UsagePage=0x1
Usage=0x35
Type=0x502
Name=Z ROTATION
Align.0=R
CallOutMax.0=(0,141),(153,161)
LineData.0=(153,153),(190,153)

[Slider]
UsagePage=0x1
Usage=0x36
Type=0x202
Name=SLIDER
OverlayFileName.0=MS1B_01.PNG
OverlayRect.0=(183,206),(695,718)
Align.0=TL
CallOutMax.0=(293,205),(427,253)
LineData.0=(290,216),(199,216)

[Hat Switch]
UsagePage=0x1
Usage=0x39
Type=0x10
Name=HAT SWITCH
OverlayFileName.0=MS1B_02.PNG
OverlayRect.0=(188,66),(700,578)
Align.0=BL
CallOutMax.0=(45,22),(241,43)
LineData.0=(69,41),(69,71),(192,71)

[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x2000004
Name=BUTTON 0
OverlayFileName.0=MS1B_03.PNG
OverlayRect.0=(171,80),(683,592)
Align.0=R
CallOutMax.0=(1,78),(156,98)
LineData.0=(157,89),(175,89)

[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x2000104
Name=BUTTON 1
OverlayFileName.0=MS1B_04.PNG
OverlayRect.0=(200,85),(712,597)
Align.0=TL
CallOutMax.0=(231,101),(410,122)
LineData.0=(244,109),(244,94),(209,94)

[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x2000204
Name=BUTTON 2
OverlayFileName.0=MS1B_05.PNG
OverlayRect.0=(191,83),(703,595)
Align.0=L
CallOutMax.0=(250,75),(427,95)
LineData.0=(248,86),(198,86)

[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x2000304
Name=BUTTON 3
OverlayFileName.0=MS1B_06.PNG
OverlayRect.0=(202,75),(714,587)
Align.0=BL
CallOutMax.0=(214,50),(402,69)
LineData.0=(234,68),(234,78),(208,78)

[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x2000404
Name=BUTTON 4
OverlayFileName.0=MS1B_07.PNG
OverlayRect.0=(146,199),(658,711)
Align.0=R
CallOutMax.0=(0,165),(143,188)
LineData.0=(144,178),(152,178),(152,201)

[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x2000504
Name=BUTTON 5
OverlayFileName.0=MS1B_08.PNG
OverlayRect.0=(129,203),(641,715)
Align.0=TR
CallOutMax.0=(0,191),(104,230)
LineData.0=(104,200),(135,200),(135,207)

[Button 6]
UsagePage=0x9
Usage=0x7
Type=0x2000604
Name=BUTTON 6
OverlayFileName.0=MS1B_09.PNG
OverlayRect.0=(125,216),(637,728)
Align.0=TR
CallOutMax.0=(1,237),(114,274)
LineData.0=(114,248),(131,248),(131,222)

[Button 7]
UsagePage=0x9
Usage=0x8
Type=0x2000704
Name=BUTTON 7
OverlayFileName.0=MS1B_10.PNG
OverlayRect.0=(141,211),(653,723)
Align.0=TR
CallOutMax.0=(2,276),(159,299)
LineData.0=(147,273),(147,218)

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 3=0x1
BUTTON 2=0x2
BUTTON 1=0x3
BUTTON 5=0xFD
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 6=0x5
BUTTON 4=0x6
BUTTON 7=0x7
BUTTON 0=0x8

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.2]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 4=0x3
BUTTON 5=0xFD
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 2=0x5
BUTTON 6=0x6
BUTTON 7=0x7

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.3]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 5=0xFD
HAT SWITCH=0x1
SLIDER=0x5
BUTTON 1=0x4
BUTTON 6=0x5

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.41]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION=0x3
SLIDER=0x4
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 1=0x6
BUTTON 6=0xFD
HAT SWITCH=0x1
BUTTON 7=0x8

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.4]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 1=0x1
BUTTON 4=0x2
BUTTON 5=0x3
BUTTON 6=0xFD
HAT SWITCH=0x1
Z ROTATION=0x5
BUTTON 3=0x4
BUTTON 2=0x5

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0xFD
HAT SWITCH=0x1
BUTTON 5=0x4
Z ROTATION=0x4
BUTTON 1=0x5
BUTTON 6=0x8
BUTTON 7=0x9

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0xFD
HAT SWITCH=0x1
Z ROTATION=0x4
SLIDER=0x5
BUTTON 5=0x4
BUTTON 1=0x5
BUTTON 6=0x6
BUTTON 7=0x7

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.7]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0xFD
HAT SWITCH=0x1
Z ROTATION=0x5
BUTTON 1=0x4
BUTTON 5=0x5
BUTTON 6=0x6
BUTTON 7=0x7



[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.9]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.9]
MapExists=1
Z ROTATION=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 4=0x2
BUTTON 5=0x3
BUTTON 6=0x4
BUTTON 2=0x5
BUTTON 3=0x6
HAT SWITCH=0x1
BUTTON 1=0x7
X AXIS=0x3
BUTTON 7=0x8

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.10]
MapExists=1
Z ROTATION=0x1
Y AXIS=0x2
BUTTON 4=0x1
BUTTON 0=0x2
BUTTON 5=0x3
BUTTON 6=0x4
BUTTON 3=0x5
HAT SWITCH=0x1
BUTTON 1=0x6
X AXIS=0x3
BUTTON 2=0x9
BUTTON 7=0xA

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.11]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 4=0x1
BUTTON 5=0x2
BUTTON 6=0x3
BUTTON 0=0x4
BUTTON 1=0x5
BUTTON 2=0x6
BUTTON 3=0x7
HAT SWITCH=0x1
BUTTON 7=0x8
Z ROTATION=0x3

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.12]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 1=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
BUTTON 6=0x6
BUTTON 7=0x7

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.13]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.13]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 4=0x3
BUTTON 5=0x4
BUTTON 6=0x5
BUTTON 7=0x6
HAT SWITCH=0x1
Z ROTATION=0x3
BUTTON 2=0x9
BUTTON 3=0xA

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.14]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 4=0x3
BUTTON 5=0x4
BUTTON 6=0x5
BUTTON 7=0xFD
HAT SWITCH=0x1
Z ROTATION=0x3
BUTTON 2=0x7
BUTTON 3=0x8

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.15]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 1=0x1
BUTTON 0=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.16]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 1=0x1
BUTTON 0=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
BUTTON 6=0x6
BUTTON 7=0x7

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.17]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 0=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.18]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
HAT SWITCH=0x1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.19]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.19]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0xFD
HAT SWITCH=0x1



[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.21]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.21]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 1=0x1
BUTTON 4=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 0=0x5
BUTTON 5=0x6
BUTTON 6=0xFD
BUTTON 7=0x8





[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.24]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.24]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 3=0x3
BUTTON 2=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0xFD
HAT SWITCH=0x1
BUTTON 7=0x7

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.25]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.25]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
HAT SWITCH=0x1
BUTTON 6=0x6
BUTTON 7=0x7

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.26]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.26]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
HAT SWITCH=0x1
BUTTON 6=0x6
BUTTON 7=0x7

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.27]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.27]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0xFD
HAT SWITCH=0x1
BUTTON 5=0x5
BUTTON 6=0x6

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.28]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.28]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
HAT SWITCH=0x1
BUTTON 6=0x6





[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.32]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.32]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 1=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
HAT SWITCH=0x1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.33]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.33]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 1=0x4
BUTTON 4=0x5
BUTTON 5=0xFD
HAT SWITCH=0x1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1

[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.34]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 3=0x1
BUTTON 0=0x2
BUTTON 2=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 6=0xFD
HAT SWITCH=0x1
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.8]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 4=0x3
BUTTON 2=0x4
BUTTON 3=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0xFD
HAT SWITCH=0x1
Z ROTATION=0x3
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.20]
MapExists=1
BUTTON 1=0x1
BUTTON 0=0x2
BUTTON 4=0x3
BUTTON 5=0xFD
BUTTON 6=0xFE
BUTTON 7=0xFC
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.22]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 1=0x4
BUTTON 4=0x5
BUTTON 6=0x6
BUTTON 7=0x7
BUTTON 5=0x8
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.23]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 1=0x1
BUTTON 0=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 7=0x7
BUTTON 6=0x8
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.30]
MapExists=1
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.30]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION=0x3
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 1=0x4
BUTTON 4=0x5
BUTTON 5=0x6
HAT SWITCH=0x1
BUTTON 6=0xA
BUTTON 7=0xD
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.31]
MapExists=1
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.31]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 1=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
HAT SWITCH=0x1
BUTTON 7=0xB
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.40]
MapExists=1
[SIDEWINDER FORCE FEEDBACK 2 JOYSTICK.Genre.40]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
Z ROTATION=0x3
BUTTON 1=0x2
SLIDER=0x4
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms26.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=USB HUMAN INTERFACE DEVICE

[USB Human Interface Device]
Name=USB Human Interface Device
Controls=Y AXIS,X AXIS,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8
ImageFileName.0=MS26.PNG
VID=1118
PID=38


[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y AXIS
OverlayFileName.0=MS26_01.PNG
OverlayRect.0=(110,108),(622,620)
Align.0=TR
CallOutMax.0=(4,48),(113,90)
LineData.0=(114,56),(126,56),(126,110)

[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X AXIS
OverlayFileName.0=MS26_01.PNG
OverlayRect.0=(110,108),(622,620)
Align.0=R
CallOutMax.0=(1,98),(91,142)
LineData.0=(93,119),(117,119)

[Button 8]
UsagePage=0x9
Usage=0x9
Type=0x804
Name=BUTTON 8
OverlayFileName.0=MS26_02.PNG
OverlayRect.0=(121,136),(633,648)
Align.0=TL
CallOutMax.0=(27,249),(181,288)
LineData.0=(49,244),(49,230),(129,230),(129,148)


[Button 6]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON 6
Align.0=R
CallOutMax.0=(15,21),(140,39)
LineData.0=(141,28),(151,28),(151,103)


[Button 7]
UsagePage=0x9
Usage=0x8
Type=0x704
Name=BUTTON 7
Align.0=L
CallOutMax.0=(278,124),(426,143)
LineData.0=(274,135),(254,135),(254,148)


[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 3
OverlayFileName.0=MS26_03.PNG
OverlayRect.0=(190,150),(702,662)
Align.0=L
CallOutMax.0=(243,22),(392,40)
LineData.0=(238,32),(201,32),(201,156)


[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 4
OverlayFileName.0=MS26_04.PNG
OverlayRect.0=(212,149),(724,661)
Align.0=L
CallOutMax.0=(263,46),(413,65)
LineData.0=(260,57),(221,57),(221,154)


[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 5
OverlayFileName.0=MS26_05.PNG
OverlayRect.0=(234,153),(746,665)
Align.0=L
CallOutMax.0=(276,75),(427,93)
LineData.0=(271,85),(243,85),(243,156)


[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 0
OverlayFileName.0=MS26_06.PNG
OverlayRect.0=(195,169),(707,681)
Align.0=L
CallOutMax.0=(270,240),(414,258)
LineData.0=(265,251),(204,251),(204,181)


[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 1
OverlayFileName.0=MS26_07.PNG
OverlayRect.0=(216,167),(728,679)
Align.0=L
CallOutMax.0=(276,214),(420,231)
LineData.0=(272,223),(223,223),(223,180)


[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 2
OverlayFileName.0=MS26_08.PNG
OverlayRect.0=(236,170),(748,682)
Align.0=L
CallOutMax.0=(284,187),(422,205)
LineData.0=(279,198),(244,198),(244,183)


[USBHID.Genre.9]
Y Axis=1
X Axis=2
Button 0=2
Button 1=4
Button 2=5
Button 3=6
Button 4=7
Button 5=8
Button 6=9
Button 7=3
Button 8=1

[USB Human Interface Device.Genre.9]
Y Axis=1
X Axis=2
Button 0=6
Button 1=3
Button 2=7
Button 3=1
Button 4=5
Button 5=8
Button 6=2
Button 7=4
Button 8=253

[USB Human Interface Device.Genre.33]
Y Axis=2
X Axis=1
Button 0=1
Button 1=2
Button 2=254
Button 3=3
Button 4=4
Button 7=254
Button 8=253
Button 6=5
[USB Human Interface Device.Genre.34]
Y Axis=2
X Axis=1
Button 0=1
Button 2=254
Button 3=2
Button 4=4
Button 6=5
Button 7=3
Button 8=253

[USB Human Interface Device.Genre.2]
Y Axis=2
X Axis=1
Button 0=8
Button 1=2
Button 2=7
Button 3=1
Button 4=3
Button 5=6
Button 6=5
Button 7=4
Button 8=253
[USB Human Interface Device.Genre.3]
Y Axis=3
X Axis=1
Button 0=6
Button 1=5
Button 2=3
Button 3=1
Button 4=4
Button 5=254
Button 7=3
Button 8=253
Button 6=2
[USB Human Interface Device.Genre.41]
Y Axis=4
X Axis=1
Button 0=6
Button 1=5
Button 2=4
Button 3=1
Button 4=7
Button 5=8
Button 6=3
Button 7=2
Button 8=253
[USB Human Interface Device.Genre.8]
Y Axis=2
X Axis=1
Button 0=2
Button 1=7
Button 2=8
Button 3=1
Button 4=6
Button 5=3
Button 6=5
Button 7=4
Button 8=253
[USB Human Interface Device.Genre.10]
Y Axis=1
X Axis=2
Button 0=5
Button 1=4
Button 2=1
Button 3=2
Button 4=9
Button 5=6
Button 6=3
Button 7=10
Button 8=253
[USB Human Interface Device.Genre.4]
Y Axis=3
X Axis=1
Button 0=5
Button 1=254
Button 3=4
Button 4=2
Button 6=3
Button 7=1
Button 8=253
[USB Human Interface Device.Genre.5]
Y Axis=3
X Axis=1
Button 0=5
Button 1=4
Button 2=8
Button 3=1
Button 4=3
Button 5=7
Button 6=9
Button 7=2
Button 8=253
[USB Human Interface Device.Genre.6]
Y Axis=2
X Axis=1
Button 0=6
Button 1=4
Button 2=5
Button 3=1
Button 4=3
Button 5=254
Button 6=7
Button 7=2
Button 8=253
[USB Human Interface Device.Genre.7]
Y Axis=2
X Axis=1
Button 0=3
Button 1=5
Button 2=7
Button 3=1
Button 4=4
Button 5=6
Button 6=8
Button 7=2
Button 8=253
[USB Human Interface Device.Genre.13]
Y Axis=2
X Axis=1
Button 0=5
Button 1=2
Button 2=254
Button 3=1
Button 4=6
Button 5=4
Button 6=3
Button 7=7
Button 8=253
[USB Human Interface Device.Genre.14]
Y Axis=2
X Axis=1
Button 0=3
Button 1=254
Button 2=7
Button 3=1
Button 4=5
Button 5=8
Button 6=4
Button 7=2
Button 8=253
[USB Human Interface Device.Genre.15]
Y Axis=2
X Axis=1
Button 0=8
Button 1=6
Button 2=7
Button 3=3
Button 4=2
Button 5=4
Button 6=1
Button 7=5
Button 8=253
[USB Human Interface Device.Genre.16]
Y Axis=2
X Axis=1
Button 0=4
Button 1=6
Button 2=254
Button 3=2
Button 4=5
Button 5=7
Button 6=3
Button 7=1
Button 8=253
[USB Human Interface Device.Genre.17]
Y Axis=2
X Axis=1
Button 0=1
Button 1=4
Button 2=6
Button 3=3
Button 4=2
Button 5=5
Button 6=7
Button 7=8
Button 8=253
[USB Human Interface Device.Genre.18]
Y Axis=2
X Axis=1
Button 0=3
Button 1=4
Button 2=2
Button 3=1
Button 4=5
Button 5=8
Button 6=6
Button 7=7
Button 8=253
[USB Human Interface Device.Genre.19]
Y Axis=2
X Axis=1
Button 0=1
Button 1=3
Button 2=7
Button 3=2
Button 4=4
Button 5=8
Button 6=5
Button 7=6
Button 8=253
[USB Human Interface Device.Genre.20]
Button 0=3
Button 1=2
Button 2=3
Button 7=253
Button 8=253
Button 3=2
Button 5=254
Button 6=1
[USB Human Interface Device.Genre.21]
Y Axis=2
X Axis=1
Button 0=6
Button 1=4
Button 2=7
Button 3=5
Button 4=3
Button 5=2
Button 6=1
Button 7=9
Button 8=253
[USB Human Interface Device.Genre.22]
Y Axis=2
X Axis=1
Button 0=1
Button 1=4
Button 2=3
Button 3=8
Button 4=9
Button 5=2
Button 6=5
Button 7=7
Button 8=253
[USB Human Interface Device.Genre.23]
Y Axis=2
X Axis=1
Button 0=3
Button 1=5
Button 2=7
Button 3=4
Button 4=6
Button 5=9
Button 6=2
Button 7=1
Button 8=253
[USB Human Interface Device.Genre.24]
Y Axis=2
X Axis=1
Button 0=6
Button 1=5
Button 2=4
Button 3=1
Button 4=8
Button 5=3
Button 6=7
Button 7=2
Button 8=253
[USB Human Interface Device.Genre.25]
Y Axis=2
X Axis=1
Button 0=2
Button 1=8
Button 2=7
Button 3=1
Button 4=5
Button 5=9
Button 6=4
Button 7=3
Button 8=253
[USB Human Interface Device.Genre.26]
Y Axis=2
X Axis=1
Button 0=4
Button 1=8
Button 2=7
Button 3=2
Button 4=5
Button 5=9
Button 6=1
Button 7=3
Button 8=253
[USB Human Interface Device.Genre.27]
Y Axis=2
X Axis=1
Button 0=4
Button 1=7
Button 2=6
Button 3=3
Button 4=1
Button 5=8
Button 6=5
Button 7=2
Button 8=253
[USB Human Interface Device.Genre.28]
Y Axis=2
X Axis=1
Button 0=5
Button 1=4
Button 2=2
Button 3=3
Button 4=1
Button 5=6
Button 7=254
Button 8=253
Button 6=6
[USB Human Interface Device.Genre.29]
Y Axis=2
X Axis=1
Button 0=2
Button 1=6
Button 2=254
Button 3=1
Button 4=4
Button 5=3
Button 6=7
Button 7=5
Button 8=253
[USB Human Interface Device.Genre.30]
Y Axis=2
X Axis=1
Button 0=2
Button 1=3
Button 2=12
Button 3=1
Button 4=5
Button 5=11
Button 6=6
Button 7=4
Button 8=253
[USB Human Interface Device.Genre.31]
Y Axis=2
X Axis=1
Button 0=1
Button 1=3
Button 2=8
Button 3=2
Button 4=5
Button 5=7
Button 6=6
Button 7=4
Button 8=253
[USB Human Interface Device.Genre.32]
Y Axis=2
X Axis=1
Button 0=2
Button 1=4
Button 2=6
Button 3=1
Button 4=3
Button 5=7
Button 6=5
Button 7=254
Button 8=253
[USB Human Interface Device.Genre.11]
Y Axis=2
X Axis=1
Button 0=5
Button 1=6
Button 2=1
Button 3=4
Button 4=7
Button 5=2
Button 6=8
Button 7=3
Button 8=253
[USB Human Interface Device.Genre.12]
Y Axis=2
X Axis=1
Button 0=5
Button 1=7
Button 2=8
Button 3=1
Button 4=3
Button 5=6
Button 6=2
Button 7=4
Button 8=253
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms28.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Dual Strike

[Dual Strike]
VID=1118
PID=40
Name=Dual Strike
Controls=Y AXIS,X AXIS,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,HAT SWITCH
ImageFileName.0=MS28.PNG

[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y AXIS
Align.0=TR
CallOutMax.0=(12,258),(164,297)
LineData.0=(164,266),(199,266),(199,200)

[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X AXIS
Align.0=T
CallOutMax.0=(2,206),(152,245)
LineData.0=(76,218),(76,188),(183,188)

[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 0
OverlayFileName.0=MS28_1.PNG
OverlayRect.0=(239,153),(251,167)
Align.0=L
CallOutMax.0=(298,143),(430,170)
LineData.0=(308,156),(253,156)

[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 1
OverlayFileName.0=MS28_2.PNG
OverlayRect.0=(223,159),(241,171)
Align.0=L
CallOutMax.0=(260,236),(429,255)
LineData.0=(258,247),(229,247),(229,166)

[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 2
OverlayFileName.0=MS28_3.PNG
OverlayRect.0=(246,168),(260,182)
Align.0=L
CallOutMax.0=(285,181),(429,204)
LineData.0=(283,193),(253,193),(253,178)

[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 3
OverlayFileName.0=MS28_4.PNG
OverlayRect.0=(233,171),(246,188)
Align.0=L
CallOutMax.0=(267,210),(429,229)
LineData.0=(267,219),(239,219),(239,184)

[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 4
OverlayFileName.0=MS28_5.PNG
OverlayRect.0=(118,149),(137,164)
Align.0=L
CallOutMax.0=(180,28),(380,49)
LineData.0=(177,40),(167,40),(167,157),(131,157)

[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 5
OverlayFileName.0=MS28_6.PNG
OverlayRect.0=(110,162),(129,178)
Align.0=L
CallOutMax.0=(197,56),(392,76)
LineData.0=(196,68),(178,68),(178,172),(123,172)

[Button 6]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON 6
Align.0=BL
CallOutMax.0=(2,25),(140,63)
LineData.0=(28,62),(28,74),(131,74),(131,82)

[Button 7]
UsagePage=0x9
Usage=0x8
Type=0x704
Name=BUTTON 7
Align.0=TL
CallOutMax.0=(283,92),(429,135)
LineData.0=(281,103),(254,103),(254,136)

[Button 8]
UsagePage=0x9
Usage=0x9
Type=0x804
Name=BUTTON 8
OverlayFileName.0=MS28_7.PNG
OverlayRect.0=(129,134),(146,153)
Align.0=L
CallOutMax.0=(168,2),(375,24)
LineData.0=(165,17),(157,17),(157,144),(140,144)

[Hat Switch]
UsagePage=0x1
Usage=0x39
Type=0x10
Name=HAT SWITCH
OverlayFileName.0=MS28_8.PNG
OverlayRect.0=(97,97),(137,137)
Align.0=TL
CallOutMax.0=(2,131),(109,171)
LineData.0=(21,130),(21,114),(105,114)


[DUAL STRIKE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[DUAL STRIKE.Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 7=0xFD
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 8=0x9

[DUAL STRIKE.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.9]
MapExists=1
[DUAL STRIKE.Genre.9]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 7=0x1
BUTTON 8=0x2
BUTTON 5=0x3
BUTTON 4=0x4
BUTTON 6=0x7
HAT SWITCH=0x1
BUTTON 0=0xE0
BUTTON 3=0xE8
BUTTON 1=0xE4
BUTTON 2=0xEC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms34.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=SideWinder Force Feedback Wheel (USB),Microsoft SideWinder Force Feedback Wheel

[SideWinder Force Feedback Wheel (USB)]
VID=1118
PID=52
Name=SideWinder Force Feedback Wheel (USB)
Controls=X AXIS,Y AXIS,Z ROTATION,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7
ImageFileName.0=MS34.PNG

[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x1000002
Name=X AXIS
Align.0=TR
CallOutMax.0=(0,194),(111,233)
LineData.0=(110,205),(127,205),(144,188)

[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x1000102
Name=Y AXIS
OverlayFileName.0=MS34_01.png
OverlayRect.0=(299,185),(811,697)
Align.0=R
CallOutMax.0=(53,259),(220,279)
LineData.0=(219,271),(262,271),(312,221)

[Z Rotation]
UsagePage=0x1
Usage=0x35
Type=0x502
Name=Z ROTATION
OverlayFileName.0=MS34_02.PNG
OverlayRect.0=(270,168),(270,168)
Align.0=R
CallOutMax.0=(39,235),(201,256)
LineData.0=(200,248),(230,248),(279,199)

[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x2000004
Name=BUTTON 0
OverlayFileName.0=MS34_03.PNG
OverlayRect.0=(181,79),(181,79)
Align.0=L
CallOutMax.0=(265,58),(427,79)
LineData.0=(264,71),(251,71),(251,89),(192,89)

[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x2000104
Name=BUTTON 1
OverlayFileName.0=MS34_04.PNG
OverlayRect.0=(182,91),(182,91)
Align.0=L
CallOutMax.0=(263,89),(429,109)
LineData.0=(260,100),(191,100)

[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x2000204
Name=BUTTON 2
OverlayFileName.0=MS34_05.PNG
OverlayRect.0=(180,103),(180,103)
Align.0=L
CallOutMax.0=(257,138),(421,159)
LineData.0=(256,151),(232,151),(232,113),(189,113)

[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x2000304
Name=BUTTON 3
OverlayFileName.0=MS34_06.PNG
OverlayRect.0=(127,75),(127,75)
Align.0=TR
CallOutMax.0=(0,43),(98,79)
LineData.0=(97,55),(107,55),(134,82)

[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x2000404
Name=BUTTON 4
OverlayFileName.0=MS34_07.PNG
OverlayRect.0=(121,86),(121,86)
Align.0=TR
CallOutMax.0=(1,81),(98,115)
LineData.0=(97,92),(129,92)

[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x2000504
Name=BUTTON 5
OverlayFileName.0=MS34_08.PNG
OverlayRect.0=(119,96),(119,96)
Align.0=TL
CallOutMax.0=(38,141),(205,164)
LineData.0=(77,140),(112,105),(126,105)

[Button 6]
UsagePage=0x9
Usage=0x7
Type=0x2000604
Name=BUTTON 6
Align.0=BL
CallOutMax.0=(25,4),(222,25)
LineData.0=(51,24),(51,33),(108,33),(144,69)

[Button 7]
UsagePage=0x9
Usage=0x8
Type=0x2000704
Name=BUTTON 7
Align.0=L
CallOutMax.0=(260,29),(427,48)
LineData.0=(258,42),(247,42),(207,82)

[SideWinder Force Feedback Wheel (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[SideWinder Force Feedback Wheel (USB).Genre.1]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION=0x3
BUTTON 7=0x1
BUTTON 6=0x2
BUTTON 0=0x3
BUTTON 1=0xFD
BUTTON 2=0x5
BUTTON 3=0x6
BUTTON 4=0x7
BUTTON 5=0x8

[SideWinder Force Feedback Wheel (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[SideWinder Force Feedback Wheel (USB).Genre.2]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION=0x3
BUTTON 0=0x1
BUTTON 3=0x2
BUTTON 4=0x3
BUTTON 1=0xFD
BUTTON 7=0x4
BUTTON 6=0x5
BUTTON 2=0x6
BUTTON 5=0x7

[SideWinder Force Feedback Wheel (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[SideWinder Force Feedback Wheel (USB).Genre.3]
MapExists=1
X AXIS=0x1
Y AXIS=0x3
BUTTON 7=0x1
BUTTON 6=0x2
BUTTON 3=0x3
BUTTON 1=0xFD
Z ROTATION=0x4
BUTTON 0=0x4
BUTTON 2=0x5
BUTTON 4=0x6
[SideWinder Force Feedback Wheel (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[SIDEWINDER FORCE FEEDBACK WHEEL (USB).Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 6=0xFD
Y AXIS=0x4
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 7=0x8

[Microsoft SideWinder Force Feedback Wheel]
VID=1118
PID=21
Name=Microsoft SideWinder Force Feedback Wheel
Controls=X,ACCELERATOR,BRAKE,BUTTON A,BUTTON B,BUTTON C,BUTTON X,BUTTON Y,BUTTON Z,BUTTON L,BUTTON R,CTRL2052
ImageFileName.0=MS34.PNG

[X]
UsagePage=0x2
Usage=0xC8
Type=0x1000002
Name=X
Align.0=TR
CallOutMax.0=(0,194),(111,233)
LineData.0=(110,205),(127,205),(144,188)

[Accelerator]
UsagePage=0x2
Usage=0xC4
Type=0x1000102
Name=ACCELERATOR
OverlayFileName.0=MS34_01.png
OverlayRect.0=(299,185),(811,697)
Align.0=R
CallOutMax.0=(53,259),(220,279)
LineData.0=(219,271),(262,271),(312,221)

[Brake]
UsagePage=0x2
Usage=0xC5
Type=0x502
Name=BRAKE
OverlayFileName.0=MS34_02.png
OverlayRect.0=(270,168),(270,168)
Align.0=R
CallOutMax.0=(39,235),(201,256)
LineData.0=(200,248),(230,248),(279,199)

[Button A]
UsagePage=0x9
Usage=0x1
Type=0x2000004
Name=BUTTON A
OverlayFileName.0=MS34_03.PNG
OverlayRect.0=(181,79),(693,591)
Align.0=L
CallOutMax.0=(265,58),(427,79)
LineData.0=(264,71),(251,71),(251,89),(192,89)

[Button B]
UsagePage=0x9
Usage=0x2
Type=0x2000104
Name=BUTTON B
OverlayFileName.0=MS34_04.PNG
OverlayRect.0=(182,91),(694,603)
Align.0=L
CallOutMax.0=(263,89),(429,109)
LineData.0=(260,100),(191,100)

[Button C]
UsagePage=0x9
Usage=0x3
Type=0x2000204
Name=BUTTON C
OverlayFileName.0=MS34_05.PNG
OverlayRect.0=(180,103),(692,615)
Align.0=L
CallOutMax.0=(257,138),(421,159)
LineData.0=(256,151),(232,151),(232,113),(189,113)

[Button X]
UsagePage=0x9
Usage=0x4
Type=0x2000304
Name=BUTTON X
OverlayFileName.0=MS34_06.PNG
OverlayRect.0=(127,75),(639,587)
Align.0=TR
CallOutMax.0=(0,43),(98,79)
LineData.0=(97,55),(107,55),(134,82)

[Button Y]
UsagePage=0x9
Usage=0x5
Type=0x2000404
Name=BUTTON Y
OverlayFileName.0=MS34_07.PNG
OverlayRect.0=(121,86),(633,598)
Align.0=TR
CallOutMax.0=(1,81),(98,115)
LineData.0=(97,92),(129,92)

[Button Z]
UsagePage=0x9
Usage=0x6
Type=0x2000504
Name=BUTTON Z
OverlayFileName.0=MS34_08.PNG
OverlayRect.0=(119,96),(631,608)
Align.0=TL
CallOutMax.0=(38,141),(205,164)
LineData.0=(77,140),(112,105),(126,105)

[Button L]
UsagePage=0x9
Usage=0x7
Type=0x2000604
Name=BUTTON L
Align.0=BL
CallOutMax.0=(25,4),(222,25)
LineData.0=(51,24),(51,33),(108,33),(144,69)

[Button R]
UsagePage=0x9
Usage=0x8
Type=0x2000704
Name=BUTTON R
Align.0=L
CallOutMax.0=(260,29),(427,48)
LineData.0=(258,42),(247,42),(207,82)


[MICROSOFT SIDEWINDER FORCE FEEDBACK WHEEL.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK WHEEL.Genre.1]
MapExists=1
X=0x1
ACCELERATOR=0x2
BRAKE=0x3
BUTTON A=0x1
BUTTON B=0x2
BUTTON C=0x3
BUTTON R=0xFD
BUTTON X=0x4
BUTTON Y=0x5
BUTTON Z=0x6
BUTTON L=0x7
CTRL2052=0x9
[CTRL2052]
Type=0x804
UsagePage=0x9
Usage=0x9
Name=BUTTON 8
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms27.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder Plug & Play Game Pad

[Microsoft SideWinder Plug & Play Game Pad]
VID=1118
PID=39
Name=Microsoft SideWinder Plug & Play Game Pad
Controls=Y AXIS,X AXIS,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5
ImageFileName.0=MS27.PNG

[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y AXIS
OverlayFileName.0=MS27_1.PNG
OverlayRect.0=(102,112),(614,624)
Align.0=TR
CallOutMax.0=(1,224),(142,273)
LineData.0=(116,220),(116,139)

[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X AXIS
OverlayFileName.0=MS27_1.PNG
OverlayRect.0=(102,112),(614,624)
Align.0=BL
CallOutMax.0=(0,61),(136,99)
LineData.0=(21,99),(21,119),(111,119)

[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 0
OverlayFileName.0=MS27_2.PNG
OverlayRect.0=(197,145),(709,657)
Align.0=L
CallOutMax.0=(268,200),(429,221)
LineData.0=(264,212),(212,212),(212,159)

[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 1
OverlayFileName.0=MS27_3.PNG
OverlayRect.0=(220,147),(732,659)
Align.0=L
CallOutMax.0=(274,167),(429,189)
LineData.0=(270,181),(234,181),(234,163)

[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 2
OverlayFileName.0=MS27_4.PNG
OverlayRect.0=(198,129),(710,641)
Align.0=L
CallOutMax.0=(253,42),(427,63)
LineData.0=(249,55),(210,55),(210,135)

[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 3
OverlayFileName.0=MS27_5.PNG
OverlayRect.0=(221,131),(733,643)
Align.0=L
CallOutMax.0=(265,69),(428,89)
LineData.0=(262,81),(231,81),(231,136)

[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 4
Align.0=BR
CallOutMax.0=(9,10),(163,55)
LineData.0=(150,55),(150,100)

[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 5
Align.0=L
CallOutMax.0=(258,108),(429,130)
LineData.0=(254,122),(244,122),(244,133)


[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Genre.2]
MapExists=1
X AXIS=0x1
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 0=0x3
Y AXIS=0x4
BUTTON 5=0x4
BUTTON 4=0x5
BUTTON 3=0x9
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Genre.3]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 0=0x3
BUTTON 4=0x4
BUTTON 5=0x6
BUTTON 3=0x7
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Genre.41]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 0=0x3
BUTTON 3=0x9
BUTTON 5=0xE4
BUTTON 4=0xEC
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Genre.4]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 3=0x2
BUTTON 2=0x3
BUTTON 5=0x4
BUTTON 4=0x5
BUTTON 1=0xFC
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 0=0x3
BUTTON 4=0x4
BUTTON 5=0x6
BUTTON 3=0x9
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 0=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 3=0x7
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Genre.7]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 0=0x3
BUTTON 5=0x4
BUTTON 4=0x5
BUTTON 3=0x9
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.33]
MapExists=1
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Genre.33]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0xFE
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[MICROSOFT SIDEWINDER PLUG & PLAY GAME PAD.Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 4=0xFD
Y AXIS=0x4
BUTTON 3=0x4
BUTTON 5=0x6
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms3b.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder Game Voice 
[Microsoft SideWinder Game Voice]
VID=1118
PID=59
Name=Microsoft SideWinder Game Voice
Controls=BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,All,Team,CnC,Mute
ImageFileName.0=ms3b.png

[Button 1]
UsagePage=9
Usage=19
Offset=0x1204
Name=BUTTON 1
OverlayFileName.0=ms3b_1.png
OverlayRect.0=(125,159),(637,671)
Align.0=R
CallOutMax.0=(1,159),(76,203)
LineData.0=(60,179),(127,179)

[Button 2]
UsagePage=9
Usage=20
Offset=0x1304
Name=BUTTON 2
OverlayFileName.0=ms3b_2.png
OverlayRect.0=(125,131),(637,643)
Align.0=R
CallOutMax.0=(0,111),(75,152)
LineData.0=(59,129),(103,129),(130,141)

[Button 3]
UsagePage=9
Usage=21
Offset=0x1404
Name=BUTTON 3
OverlayFileName.0=ms3b_3.png
OverlayRect.0=(144,117),(656,629)
Align.0=R
CallOutMax.0=(0,55),(73,99)
LineData.0=(55,76),(102,76),(159,121)

[Button 4]
UsagePage=9
Usage=22
Offset=0x1504
Name=BUTTON 4
OverlayFileName.0=ms3b_4.png
OverlayRect.0=(180,115),(692,627)
Align.0=R
CallOutMax.0=(0,0),(72,39)
LineData.0=(54,16),(197,16),(197,115)

[Team]
UsagePage=9
Usage=18
Offset=0x1104
Name=Team
OverlayFileName.0=ms3b_t.png
OverlayRect.0=(202,134),(714,646)
Align.0=L
CallOutMax.0=(356,0),(429,37)
LineData.0=(364,16),(225,16),(225,134)

[Mute]
UsagePage=9
Usage=24
Offset=0x1704
Name=Mute
OverlayFileName.0=ms3b_m.png
OverlayRect.0=(161,143),(673,655)
Align.0=R
CallOutMax.0=(0,218),(76,259)
LineData.0=(63,237),(104,237),(167,175)

[All]
UsagePage=9
Usage=17
Offset=0x1004
Name=All Players
OverlayFileName.0=ms3b_a.png
OverlayRect.0=(187,166),(699,678)
Align.0=L
CallOutMax.0=(359,252),(430,290)
LineData.0=(381,270),(325,270),(222,197)

[CnC]
UsagePage=9
Usage=23
Offset=0x1604
Name=Command and Control
OverlayFileName.0=ms3b_c.png
OverlayRect.0=(231,123),(743,635)
Align.0=L
CallOutMax.0=(356,136),(430,172)
LineData.0=(373,153),(286,153)

[Microsoft SideWinder Game Voice.Genre.131]
All=10
Team=9
Button 1=1
Button 2=2
Button 3=3
Button 4=4
CnC=16
Mute=11
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms34_g.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder Force Feedback Wheel

[Microsoft SideWinder Force Feedback Wheel]
Name=Microsoft SideWinder Force Feedback Wheel
Controls=X AXIS,Y AXIS,Z ROTATION,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7
ImageFileName.0=MS34.PNG

[X AXIS]
Type=0x1000002
Name=X
Align.0=TR
CallOutMax.0=(0,194),(111,233)
LineData.0=(110,205),(127,205),(144,188)

[Y AXIS]
Type=0x1000102
Name=Y
OverlayFileName.0=MS34_01.png
OverlayRect.0=(299,185),(811,697)
Align.0=R
CallOutMax.0=(53,259),(220,279)
LineData.0=(219,271),(262,271),(312,221)

[Z Rotation]
Type=0x502
Name=Rz
OverlayFileName.0=MS34_02.PNG
OverlayRect.0=(270,168),(270,168)
Align.0=R
CallOutMax.0=(39,235),(201,256)
LineData.0=(200,248),(230,248),(279,199)

[Button 0]
Type=0x2000004
Name=BUTTON A
OverlayFileName.0=MS34_03.PNG
OverlayRect.0=(181,79),(181,79)
Align.0=L
CallOutMax.0=(265,58),(427,79)
LineData.0=(264,71),(251,71),(251,89),(192,89)

[Button 1]
Type=0x2000104
Name=BUTTON B
OverlayFileName.0=MS34_04.PNG
OverlayRect.0=(182,91),(182,91)
Align.0=L
CallOutMax.0=(263,89),(429,109)
LineData.0=(260,100),(191,100)

[Button 2]
Type=0x2000204
Name=BUTTON C
OverlayFileName.0=MS34_05.PNG
OverlayRect.0=(180,103),(180,103)
Align.0=L
CallOutMax.0=(257,138),(421,159)
LineData.0=(256,151),(232,151),(232,113),(189,113)

[Button 3]
Type=0x2000304
Name=BUTTON X
OverlayFileName.0=MS34_06.PNG
OverlayRect.0=(127,75),(127,75)
Align.0=TR
CallOutMax.0=(0,43),(98,79)
LineData.0=(97,55),(107,55),(134,82)

[Button 4]
Type=0x2000404
Name=BUTTON Y
OverlayFileName.0=MS34_07.PNG
OverlayRect.0=(121,86),(121,86)
Align.0=TR
CallOutMax.0=(1,81),(98,115)
LineData.0=(97,92),(129,92)

[Button 5]
Type=0x2000504
Name=BUTTON Z
OverlayFileName.0=MS34_08.PNG
OverlayRect.0=(119,96),(119,96)
Align.0=TL
CallOutMax.0=(38,141),(205,164)
LineData.0=(77,140),(112,105),(126,105)

[Button 6]
Type=0x2000604
Name=BUTTON L
Align.0=BL
CallOutMax.0=(25,4),(222,25)
LineData.0=(51,24),(51,33),(108,33),(144,69)

[Button 7]
Type=0x2000704
Name=BUTTON R
Align.0=L
CallOutMax.0=(260,29),(427,48)
LineData.0=(258,42),(247,42),(207,82)

[MICOSOFT SIDEWINDER FORCE FEEDBACK WHEEL.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[MICOSOFT SIDEWINDER FORCE FEEDBACK WHEEL.Genre.1]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION=0x3
BUTTON 7=0x1
BUTTON 6=0x2
BUTTON 0=0x3
BUTTON 1=0xFD
BUTTON 2=0x5
BUTTON 3=0x6
BUTTON 4=0x7
BUTTON 5=0x8

[MICOSOFT SIDEWINDER FORCE FEEDBACK WHEEL.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[MICOSOFT SIDEWINDER FORCE FEEDBACK WHEEL.Genre.2]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION=0x3
BUTTON 0=0x1
BUTTON 3=0x2
BUTTON 4=0x3
BUTTON 1=0xFD
BUTTON 7=0x4
BUTTON 6=0x5
BUTTON 2=0x6
BUTTON 5=0x7

[MICOSOFT SIDEWINDER FORCE FEEDBACK WHEEL.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[MICOSOFT SIDEWINDER FORCE FEEDBACK WHEEL.Genre.3]
MapExists=1
X AXIS=0x1
Y AXIS=0x3
BUTTON 7=0x1
BUTTON 6=0x2
BUTTON 3=0x3
BUTTON 1=0xFD
Z ROTATION=0x4
BUTTON 0=0x4
BUTTON 2=0x5
BUTTON 4=0x6

[MICOSOFT SIDEWINDER FORCE FEEDBACK WHEEL.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[MICOSOFT SIDEWINDER FORCE FEEDBACK WHEEL.Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 6=0xFD
Y AXIS=0x4
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 7=0x8
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms6.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder Force Feedback Pro
[Microsoft SideWinder Force Feedback Pro]
VID=1118
PID=6
Name=Microsoft SideWinder Force Feedback Pro
Controls=X,Y,THROTTLE,RUDDER,HAT SWITCH,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON A,BUTTON B,BUTTON C,BUTTON D,SHIFT
ImageFileName.0=MS6.png
[X]
UsagePage=0x1
Usage=0x30
Type=0x1000002
Name=X
Align.0=BL
CallOutMax.0=(327,105),(430,141)
LineData.0=(332,140),(332,153),(227,153)
[Y]
UsagePage=0x1
Usage=0x31
Type=0x1000102
Name=Y
Align.0=TL
CallOutMax.0=(328,228),(430,270)
LineData.0=(327,233),(218,233),(218,169)
[Throttle]
UsagePage=0x2
Usage=0xBB
Type=0x202
Name=THROTTLE
OverlayFileName.0=MS6_9.png
OverlayRect.0=(170,200),(682,712)
Align.0=TL
CallOutMax.0=(156,279),(245,310)
LineData.0=(184,277),(184,228)
[Rudder]
UsagePage=0x2
Usage=0xBA
Type=0x502
Name=RUDDER
Align.0=L
CallOutMax.0=(329,166),(430,205)
LineData.0=(327,185),(249,185),(232,173)
[Hat Switch]
UsagePage=0x1
Usage=0x39
Type=0x10
Name=HAT SWITCH
OverlayFileName.0=MS6_2.png
OverlayRect.0=(210,85),(722,597)
Align.0=T
CallOutMax.0=(177,0),(268,35)
LineData.0=(216,19),(216,81)
[Button 1]
UsagePage=0x9
Usage=0x1
Type=0x2000004
Name=BUTTON 1
Align.0=R
CallOutMax.0=(0,69),(97,112)
LineData.0=(97,89),(194,89)
[Button 2]
UsagePage=0x9
Usage=0x2
Type=0x2000104
Name=BUTTON 2
OverlayFileName.0=MS6_1.png
OverlayRect.0=(201,87),(713,599)
Align.0=R
CallOutMax.0=(0,16),(97,61)
LineData.0=(97,36),(206,36),(206,86)
[Button 3]
UsagePage=0x9
Usage=0x3
Type=0x2000204
Name=BUTTON 3
OverlayFileName.0=MS6_4.png
OverlayRect.0=(220,85),(732,597)
Align.0=B
CallOutMax.0=(275,0),(377,39)
LineData.0=(316,38),(316,89),(231,89)
[Button 4]
UsagePage=0x9
Usage=0x4
Type=0x2000304
Name=BUTTON 4
OverlayFileName.0=MS6_3.png
OverlayRect.0=(222,96),(734,608)
Align.0=T
CallOutMax.0=(327,49),(430,88)
LineData.0=(376,67),(376,100),(231,100)
[Button A]
UsagePage=0x9
Usage=0x5
Type=0x2000404
Name=BUTTON A
OverlayFileName.0=MS6_8.png
OverlayRect.0=(146,177),(658,689)
Align.0=R
CallOutMax.0=(1,271),(101,309)
LineData.0=(100,290),(153,290),(153,190)
[Button B]
UsagePage=0x9
Usage=0x6
Type=0x2000504
Name=BUTTON B
OverlayFileName.0=MS6_8.png
OverlayRect.0=(130,171),(642,683)
Align.0=R
CallOutMax.0=(0,112),(98,156)
LineData.0=(98,131),(136,131),(136,168)
[Button C]
UsagePage=0x9
Usage=0x7
Type=0x2000604
Name=BUTTON C
OverlayFileName.0=MS6_5.png
OverlayRect.0=(117,180),(629,692)
Align.0=R
CallOutMax.0=(0,167),(96,205)
LineData.0=(96,183),(115,183)
[Button D]
UsagePage=0x9
Usage=0x8
Type=0x2000704
Name=BUTTON D
OverlayFileName.0=MS6_7.png
OverlayRect.0=(133,185),(645,697)
Align.0=R
CallOutMax.0=(1,219),(100,261)
LineData.0=(100,238),(138,238),(138,199)
[Shift]
UsagePage=0x9
Usage=0xA
Type=0x2000904
Name=SHIFT
OverlayFileName.0=MS6_10.png
OverlayRect.0=(197,227),(709,739)
Align.0=TL
CallOutMax.0=(248,279),(324,308)
LineData.0=(256,276),(256,241),(214,241)
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.1]
MapExists=1
X=0x1
THROTTLE=0x2
BUTTON B=0x1
BUTTON D=0x2
BUTTON 3=0x3
Y=0x4
HAT SWITCH=0x1
BUTTON A=0x4
BUTTON 4=0x6
BUTTON 2=0x7
BUTTON 1=0x8
BUTTON C=0xE0
SHIFT=0xFC
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.41]
MapExists=1
X=0x1
Y=0x2
RUDDER=0x3
THROTTLE=0x4
BUTTON 1=0x1
BUTTON 4=0x2
BUTTON 3=0x3
BUTTON A=0x4
BUTTON B=0x6
BUTTON C=0x7
HAT SWITCH=0x1
BUTTON D=0x8
BUTTON 2=0x9
SHIFT=0xFC
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.4]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
RUDDER=0x5
BUTTON B=0x4
BUTTON A=0x5
BUTTON C=0xE0
BUTTON D=0xE8
SHIFT=0xFC
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.5]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 4=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
BUTTON B=0x4
RUDDER=0x4
BUTTON C=0x5
BUTTON A=0x6
BUTTON 2=0x9
BUTTON D=0xA
SHIFT=0xFC
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.6]
MapExists=1
X=0x1
Y=0x2
BUTTON 1=0x1
BUTTON 4=0x2
BUTTON 3=0x3
BUTTON A=0xFD
HAT SWITCH=0x1
RUDDER=0x4
THROTTLE=0x5
BUTTON B=0x4
BUTTON C=0x5
BUTTON D=0x6
BUTTON 2=0x7
SHIFT=0xFC
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.7]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 4=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
RUDDER=0x5
BUTTON C=0x4
BUTTON A=0x5
BUTTON B=0x6
BUTTON D=0x7
BUTTON 2=0x9
SHIFT=0xFC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms6_g.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder Force Feedback Pro
[Microsoft SideWinder Force Feedback Pro]
Name=Microsoft SideWinder Force Feedback Pro
Controls=X,Y,Throttle,Rudder,Hat Switch,Button 1,Button 2,Button 3,Button 4,Button A,Button B,Button C,Button D,Shift
ImageFileName.0=MS6.PNG
[X]
Name=X
Type=0x1000002
Align.0=BL
CallOutMax.0=(327,105),(430,141)
LineData.0=(332,140),(332,153),(227,153)
[Y]
Name=Y
Type=0x1000102
Align.0=TL
CallOutMax.0=(328,228),(430,270)
LineData.0=(327,233),(218,233),(218,169)
[Throttle]
Name=Dial
Type=0x202
OverlayFileName.0=MS6_9.png
OverlayRect.0=(170,200),(682,712)
Align.0=TL
CallOutMax.0=(156,279),(245,310)
LineData.0=(184,277),(184,228)
[Rudder]
Name=Rz
Type=0x502
Align.0=L
CallOutMax.0=(329,166),(430,205)
LineData.0=(327,185),(249,185),(232,173)
[Hat Switch]
Name=Hat Switch
Type=0x10
OverlayFileName.0=MS6_2.png
OverlayRect.0=(210,85),(722,597)
Align.0=T
CallOutMax.0=(177,0),(268,35)
LineData.0=(216,19),(216,81)
[Button 1]
Name=Button 1
Type=0x2000004
Align.0=R
CallOutMax.0=(0,69),(97,112)
LineData.0=(97,89),(194,89)
[Button 2]
Name=Button 2
Type=0x2000104
OverlayFileName.0=MS6_1.png
OverlayRect.0=(201,87),(713,599)
Align.0=R
CallOutMax.0=(0,16),(97,61)
LineData.0=(97,36),(206,36),(206,86)
[Button 3]
Name=Button 3
Type=0x2000204
OverlayFileName.0=MS6_4.png
OverlayRect.0=(220,85),(732,597)
Align.0=B
CallOutMax.0=(275,0),(377,39)
LineData.0=(316,38),(316,89),(231,89)
[Button 4]
Name=Button 4
Type=0x2000304
OverlayFileName.0=MS6_3.png
OverlayRect.0=(222,96),(734,608)
Align.0=T
CallOutMax.0=(327,49),(430,88)
LineData.0=(376,67),(376,100),(231,100)
[Button A]
Name=Button A
Type=0x2000404
OverlayFileName.0=MS6_8.png
OverlayRect.0=(146,177),(658,689)
Align.0=R
CallOutMax.0=(1,271),(101,309)
LineData.0=(100,290),(153,290),(153,190)
[Button B]
Name=Button B
Type=0x2000504
OverlayFileName.0=MS6_8.png
OverlayRect.0=(130,171),(642,683)
Align.0=R
CallOutMax.0=(0,112),(98,156)
LineData.0=(98,131),(136,131),(136,168)
[Button C]
Name=Button C
Type=0x2000604
OverlayFileName.0=MS6_5.png
OverlayRect.0=(117,180),(629,692)
Align.0=R
CallOutMax.0=(0,167),(96,205)
LineData.0=(96,183),(115,183)
[Button D]
Name=Button D
Type=0x2000704
OverlayFileName.0=MS6_7.png
OverlayRect.0=(133,185),(645,697)
Align.0=R
CallOutMax.0=(1,219),(100,261)
LineData.0=(100,238),(138,238),(138,199)
[Shift]
Name=Shift
Type=0x2000904
OverlayFileName.0=MS6_10.png
OverlayRect.0=(197,227),(709,739)
Align.0=TL
CallOutMax.0=(248,279),(324,308)
LineData.0=(256,276),(256,241),(214,241)
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.1]
MapExists=1
X=0x1
THROTTLE=0x2
BUTTON B=0x1
BUTTON D=0x2
BUTTON 3=0x3
Y=0x4
HAT SWITCH=0x1
BUTTON A=0x4
BUTTON 4=0x6
BUTTON 2=0x7
BUTTON 1=0x8
BUTTON C=0xE0
SHIFT=0xFC
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.41]
MapExists=1
X=0x1
Y=0x2
RUDDER=0x3
THROTTLE=0x4
BUTTON 1=0x1
BUTTON 4=0x2
BUTTON 3=0x3
BUTTON A=0x4
BUTTON B=0x6
BUTTON C=0x7
HAT SWITCH=0x1
BUTTON D=0x8
BUTTON 2=0x9
SHIFT=0xFC
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.4]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
RUDDER=0x5
BUTTON B=0x4
BUTTON A=0x5
BUTTON C=0xE0
BUTTON D=0xE8
SHIFT=0xFC
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.5]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 4=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
BUTTON B=0x4
RUDDER=0x4
BUTTON C=0x5
BUTTON A=0x6
BUTTON 2=0x9
BUTTON D=0xA
SHIFT=0xFC
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.6]
MapExists=1
X=0x1
Y=0x2
BUTTON 1=0x1
BUTTON 4=0x2
BUTTON 3=0x3
BUTTON A=0xFD
HAT SWITCH=0x1
RUDDER=0x4
THROTTLE=0x5
BUTTON B=0x4
BUTTON C=0x5
BUTTON D=0x6
BUTTON 2=0x7
SHIFT=0xFC
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[MICROSOFT SIDEWINDER FORCE FEEDBACK PRO.Genre.7]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 4=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
RUDDER=0x5
BUTTON C=0x4
BUTTON A=0x5
BUTTON B=0x6
BUTTON D=0x7
BUTTON 2=0x9
SHIFT=0xFC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms56.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=SideWinder Precision 2 USB Joystick

[SideWinder Precision 2 USB Joystick]
VID=1118
PID=56
Name=SideWinder Precision 2 USB Joystick
Controls=Y AXIS,X AXIS,SLIDER,Z ROTATION,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,HAT SWITCH
ImageFileName.0=MS56.PNG

[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y AXIS
Align.0=R
CallOutMax.0=(1,105),(159,125)
LineData.0=(160,117),(186,117)

[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X AXIS
Align.0=L
CallOutMax.0=(246,121),(422,139)
LineData.0=(242,131),(216,131)

[Slider]
UsagePage=0x1
Usage=0x36
Type=0x202
Name=SLIDER
OverlayFileName.0=MS56_1.PNG
OverlayRect.0=(187,197),(699,709)
Align.0=TL
CallOutMax.0=(276,233),(417,275)
LineData.0=(273,241),(202,241),(202,224)

[Z Rotation]
UsagePage=0x1
Usage=0x35
Type=0x502
Name=Z ROTATION
Align.0=R
CallOutMax.0=(1,128),(166,147)
LineData.0=(166,137),(190,137)

[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 0
OverlayFileName.0=MS56_3.png
OverlayRect.0=(165,68),(677,580)
Align.0=BR
CallOutMax.0=(0,43),(156,62)
LineData.0=(146,53),(146,69),(163,69)

[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 1
OverlayFileName.0=MS56_4.png
OverlayRect.0=(199,76),(711,588)
Align.0=TL
CallOutMax.0=(239,92),(425,111)
LineData.0=(254,92),(254,83),(210,83)

[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 2
OverlayFileName.0=MS56_5.png
OverlayRect.0=(188,71),(700,583)
Align.0=R
CallOutMax.0=(0,78),(131,109)
LineData.0=(114,92),(194,92),(194,82)

[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 3
OverlayFileName.0=MS56_5.PNG
OverlayRect.0=(198,63),(710,575)
Align.0=L
CallOutMax.0=(231,38),(418,56)
LineData.0=(245,56),(245,69),(206,69)

[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 4
OverlayFileName.0=MS56_7.png
OverlayRect.0=(149,199),(661,711)
Align.0=R
CallOutMax.0=(2,159),(143,181)
LineData.0=(143,173),(156,173),(156,203)

[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 5
OverlayFileName.0=MS56_7.png
OverlayRect.0=(128,204),(640,716)
Align.0=TR
CallOutMax.0=(2,186),(110,229)
LineData.0=(111,195),(135,195),(135,208)

[Button 6]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON 6
OverlayFileName.0=MS56_9.png
OverlayRect.0=(121,219),(631,731)
Align.0=TR
CallOutMax.0=(2,231),(113,274)
LineData.0=(113,242),(127,242),(127,228)

[Button 7]
UsagePage=0x9
Usage=0x8
Type=0x704
Name=BUTTON 7
OverlayFileName.0=MS56_10.png
OverlayRect.0=(142,211),(654,723)
Align.0=TR
CallOutMax.0=(3,275),(162,299)
LineData.0=(149,273),(149,220)

[Hat Switch]
UsagePage=0x1
Usage=0x39
Type=0x10
Name=HAT SWITCH
OverlayFileName.0=MS56_2.png
OverlayRect.0=(186,54),(698,566)
Align.0=R
CallOutMax.0=(11,17),(171,40)
LineData.0=(172,32),(193,32),(193,57)


[SIDEWINDER PRECISION 2 USB JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[SIDEWINDER PRECISION 2 USB JOYSTICK.Genre.2]
MapExists=1
X AXIS=0x1
SLIDER=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 6=0x4
BUTTON 7=0x5
BUTTON 4=0x7
BUTTON 5=0x8
BUTTON 1=0x9
[SIDEWINDER PRECISION 2 USB JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1
[SIDEWINDER PRECISION 2 USB JOYSTICK.Genre.3]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
BUTTON 5=0x4
BUTTON 7=0x5
BUTTON 6=0x6
BUTTON 1=0x7
[SIDEWINDER PRECISION 2 USB JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1
[SIDEWINDER PRECISION 2 USB JOYSTICK.Genre.41]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION=0x3
SLIDER=0x4
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 7=0x4
BUTTON 4=0x5
BUTTON 6=0x6
BUTTON 5=0x7
HAT SWITCH=0x1
BUTTON 1=0x9
[SIDEWINDER PRECISION 2 USB JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[SIDEWINDER PRECISION 2 USB JOYSTICK.Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
BUTTON 6=0x4
Z ROTATION=0x4
BUTTON 5=0x5
BUTTON 7=0x6
BUTTON 1=0x9
BUTTON 4=0xA
[SIDEWINDER PRECISION 2 USB JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[SIDEWINDER PRECISION 2 USB JOYSTICK.Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
Z ROTATION=0x4
BUTTON 6=0x4
BUTTON 5=0x5
BUTTON 7=0x6
BUTTON 1=0x7
[SIDEWINDER PRECISION 2 USB JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[SIDEWINDER PRECISION 2 USB JOYSTICK.Genre.7]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
SLIDER=0x3
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
Z ROTATION=0x5
BUTTON 6=0x4
BUTTON 4=0x6
BUTTON 7=0x7
BUTTON 5=0x8
BUTTON 1=0x9
[SIDEWINDER PRECISION 2 USB JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.33]
MapExists=1
[SIDEWINDER PRECISION 2 USB JOYSTICK.Genre.33]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 6=0x5
HAT SWITCH=0x1
[SIDEWINDER PRECISION 2 USB JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1
[SIDEWINDER PRECISION 2 USB JOYSTICK.Genre.34]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 6=0x5
HAT SWITCH=0x1
BUTTON 5=0x6
[SIDEWINDER PRECISION 2 USB JOYSTICK.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[SIDEWINDER PRECISION 2 USB JOYSTICK.Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 6=0xFD
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 7=0x8
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms7_g.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder game pad
[Microsoft SideWinder game pad]
VID=1118
PID=3
ImageFileName.0=MS7.PNG
Name=Microsoft SideWinder game pad
Controls=Y AXIS,X AXIS,Button 0,Button 1,Button 2,Button 3,Button 4,Button 5,Button 6,Button 7,Button 8,Button 9

[Y Axis]
Name=Y
Type=0x102
UsagePage=0x1
Usage=0x31
OverlayFileName.0=MS7_1.PNG
OverlayRect.0=(119,110),(631,622)
Align.0=TR
CallOutMax.0=(0,177),(127,245)
LineData.0=(125,192),(139,192),(139,141)

[X Axis]
Name=X
Type=0x2
UsagePage=0x1
Usage=0x30
OverlayFileName.0=MS7_1.PNG
OverlayRect.0=(119,110),(631,622)
Align.0=TR
CallOutMax.0=(1,66),(120,108)
LineData.0=(120,77),(129,77),(129,119)

[Button 0]
Name=BUTTON A
Type=0x4
UsagePage=0x9
Usage=0x1
OverlayFileName.0=MS7_2.PNG
OverlayRect.0=(193,152),(705,664)
Align.0=L
CallOutMax.0=(275,240),(429,263)
LineData.0=(273,253),(200,253),(200,163)

[Button 1]
Name=BUTTON B
Type=0x104
UsagePage=0x9
Usage=0x2
OverlayFileName.0=MS7_3.PNG
OverlayRect.0=(215,146),(727,658)
Align.0=L
CallOutMax.0=(284,206),(429,229)
LineData.0=(283,221),(224,221),(224,158)

[Button 2]
Name=BUTTON C
Type=0x204
UsagePage=0x9
Usage=0x3
OverlayFileName.0=MS7_4.PNG
OverlayRect.0=(237,143),(749,655)
Align.0=TL
CallOutMax.0=(284,156),(429,201)
LineData.0=(283,167),(246,167),(246,153)

[Button 3]
Name=BUTTON X
Type=0x304
UsagePage=0x9
Usage=0x4
OverlayFileName.0=MS7_5.PNG
OverlayRect.0=(197,132),(709,644)
Align.0=L
CallOutMax.0=(248,14),(428,38)
LineData.0=(247,26),(203,26),(203,137)

[Button 4]
Name=BUTTON Y
Type=0x404
UsagePage=0x9
Usage=0x5
OverlayFileName.0=MS7_6.PNG
OverlayRect.0=(215,127),(727,639)
Align.0=L
CallOutMax.0=(256,42),(429,68)
LineData.0=(254,56),(223,56),(223,132)

[Button 5]
Name=BUTTON Z
Type=0x504
UsagePage=0x9
Usage=0x6
OverlayFileName.0=MS7_7.PNG
OverlayRect.0=(234,125),(746,637)
Align.0=L
CallOutMax.0=(270,74),(426,96)
LineData.0=(269,84),(240,84),(240,131)

[Button 6]
Name=BUTTON L
Type=0x604
UsagePage=0x9
Usage=0x7
Align.0=BR
CallOutMax.0=(0,14),(146,54)
LineData.0=(145,44),(165,44),(165,95)

[Button 7]
Name=BUTTON R
Type=0x704
UsagePage=0x9
Usage=0x8
Align.0=TL
CallOutMax.0=(276,105),(429,143)
LineData.0=(276,114),(259,114),(259,125)

[Button 8]
Name=START
Type=0x804
UsagePage=0x9
Usage=0x9
OverlayFileName.0=MS7_8.PNG
OverlayRect.0=(171,147),(683,659)
Align.0=L
CallOutMax.0=(220,275),(419,299)
LineData.0=(217,289),(179,289),(179,155)

[Button 9]
Name=SHIFT
Type=0x904
UsagePage=0x9
Usage=0xA
OverlayFileName.0=MS7_9.PNG
OverlayRect.0=(158,160),(670,672)
Align.0=TR
CallOutMax.0=(6,258),(145,300)
LineData.0=(144,269),(168,269),(168,169)

[MICROSOFT SIDEWINDER GAME PAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[MICROSOFT SIDEWINDER GAME PAD.Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 8=0xFD
Y AXIS=0x4
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 9=0xFE
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms8.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder Precision Pro (USB)
[Microsoft SideWinder Precision Pro (USB)]
VID=1118
PID=8
Name=VID_045E&PID_0008
Controls=HAT SWITCH,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,Y AXIS,X AXIS,Z ROTATION,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,SLIDER
ImageFileName.0=MS8.PNG

[Hat Switch]
UsagePage=0x1
Usage=0x39
Type=0x10
Name=HAT SWITCH
OverlayFileName.0=MS8_2.PNG
OverlayRect.0=(200,68),(712,580)
Align.0=L
CallOutMax.0=(348,5),(430,45)
LineData.0=(356,24),(207,24),(207,65)

[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 0
Align.0=R
CallOutMax.0=(0,65),(85,109)
LineData.0=(69,86),(181,86)

[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 1
OverlayFileName.0=MS8_3.PNG
OverlayRect.0=(193,76),(705,588)
Align.0=R
CallOutMax.0=(1,7),(85,47)
LineData.0=(72,24),(196,24),(196,73)

[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 2
OverlayFileName.0=MS8_4.PNG
OverlayRect.0=(212,69),(724,581)
Align.0=L
CallOutMax.0=(348,44),(430,79)
LineData.0=(368,60),(214,60),(214,65)

[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 3
OverlayFileName.0=MS8_5.PNG
OverlayRect.0=(214,79),(726,591)
Align.0=L
CallOutMax.0=(347,78),(430,119)
LineData.0=(358,96),(217,96),(217,90)

[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y AXIS
Align.0=L
CallOutMax.0=(346,197),(429,232)
LineData.0=(350,206),(221,206),(221,182)

[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X AXIS
Align.0=L
CallOutMax.0=(346,118),(430,154)
LineData.0=(361,134),(229,134)

[Z Rotation]
UsagePage=0x1
Usage=0x35
Align.0=L
CallOutMax.0=(346,153),(430,198)
LineData.0=(356,173),(243,173),(234,168)
Type=0x502
Name=Z ROTATION

[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 4
OverlayFileName.0=MS8_6.PNG
OverlayRect.0=(149,193),(661,705)
Align.0=R
CallOutMax.0=(0,129),(85,178)
LineData.0=(68,152),(155,152),(155,190)

[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 5
OverlayFileName.0=MS8_7.PNG
OverlayRect.0=(129,194),(641,706)
Align.0=R
CallOutMax.0=(0,178),(85,219)
LineData.0=(76,196),(127,196)

[Button 6]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON 6
OverlayFileName.0=MS8_8.PNG
OverlayRect.0=(116,204),(628,716)
Align.0=R
CallOutMax.0=(0,237),(86,277)
LineData.0=(71,254),(121,254),(121,221)

[Button 7]
UsagePage=0x9
Usage=0x8
Type=0x704
Name=BUTTON 7
OverlayFileName.0=MS8_9.PNG
OverlayRect.0=(136,203),(648,715)
Align.0=R
CallOutMax.0=(0,277),(86,309)
LineData.0=(73,293),(144,293),(144,218)

[Button 8]
UsagePage=0x9
Usage=0x9
Type=0x804
Name=BUTTON 8
OverlayFileName.0=MS8_10.PNG
OverlayRect.0=(221,226),(733,738)
Align.0=L
CallOutMax.0=(345,231),(427,262)
LineData.0=(359,244),(243,244)

[Slider]
UsagePage=0x1
Usage=0x36
OverlayFileName.0=MS8_1.PNG
OverlayRect.0=(185,208),(697,720)
Align.0=L
CallOutMax.0=(345,271),(429,309)
LineData.0=(353,290),(201,290),(201,230)
Type=0x202
Name=SLIDER

[MICROSOFT SIDEWINDER PRECISION PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO (USB).Genre.1]
MapExists=1
X AXIS=0x1
SLIDER=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 7=0x3
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 6=0x5
BUTTON 4=0x6
BUTTON 5=0x7
BUTTON 2=0x8

[MICROSOFT SIDEWINDER PRECISION PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO (USB).Genre.2]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
Y AXIS=0x4
HAT SWITCH=0x1
BUTTON 6=0x4
BUTTON 7=0x5
BUTTON 4=0x6
BUTTON 5=0x8
BUTTON 1=0x9

[MICROSOFT SIDEWINDER PRECISION PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO (USB).Genre.3]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
BUTTON 5=0x4
BUTTON 7=0x5
BUTTON 6=0x6
BUTTON 1=0x7

[MICROSOFT SIDEWINDER PRECISION PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO (USB).Genre.41]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION=0x3
SLIDER=0x4
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 6=0x6
BUTTON 5=0x7
HAT SWITCH=0x1
BUTTON 7=0x8
BUTTON 1=0x9

[MICROSOFT SIDEWINDER PRECISION PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO (USB).Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
BUTTON 6=0x4
Z ROTATION=0x4
BUTTON 4=0x5
SLIDER=0x6
BUTTON 1=0x9
BUTTON 5=0xA

[MICROSOFT SIDEWINDER PRECISION PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO (USB).Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
Z ROTATION=0x4
BUTTON 6=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 1=0x7

[MICROSOFT SIDEWINDER PRECISION PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO (USB).Genre.7]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 2=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
Z ROTATION=0x5
BUTTON 5=0x4
BUTTON 4=0x5
BUTTON 6=0x6
BUTTON 7=0x7
BUTTON 1=0x9

[MICROSOFT SIDEWINDER PRECISION PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.33]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO (USB).Genre.33]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 7=0xFD
HAT SWITCH=0x1

[MICROSOFT SIDEWINDER PRECISION PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO (USB).Genre.34]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 7=0xFD
HAT SWITCH=0x1
BUTTON 5=0x6
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\mse.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder Freestyle Pro (USB)
[Microsoft SideWinder Freestyle Pro (USB)]
VID=1118
PID=14
Name=VID_045E&PID_000E
Controls=HAT SWITCH,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,Y AXIS,X AXIS,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8,BUTTON 9,SLIDER
ImageFileName.0=MSE.PNG

[Hat Switch]
UsagePage=0x1
Usage=0x39
Type=0x10
Name=HAT SWITCH
OverlayFileName.0=MSE_1.PNG
OverlayRect.0=(106,142),(618,654)
Align.0=BL
CallOutMax.0=(0,104),(120,140)
LineData.0=(27,138),(27,155),(112,155)

[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 0
OverlayFileName.0=MSE_2.PNG
OverlayRect.0=(218,162),(730,674)
Align.0=TL
CallOutMax.0=(301,206),(430,246)
LineData.0=(300,217),(227,217),(227,175)

[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 1
OverlayFileName.0=MSE_3.PNG
OverlayRect.0=(234,149),(746,661)
Align.0=L
CallOutMax.0=(294,183),(430,203)
LineData.0=(292,195),(246,195),(246,163)

[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 2
OverlayFileName.0=MSE_4.PNG
OverlayRect.0=(253,143),(765,655)
Align.0=L
CallOutMax.0=(292,157),(430,178)
LineData.0=(291,170),(261,170),(261,156)

[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 3
OverlayFileName.0=MSE_5.PNG
OverlayRect.0=(207,142),(719,654)
Align.0=L
CallOutMax.0=(233,14),(420,32)
LineData.0=(231,26),(215,26),(215,148)

[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y AXIS
Align.0=R
CallOutMax.0=(48,286),(214,307)
LineData.0=(214,299),(231,299),(259,271)

[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X AXIS
Align.0=R
CallOutMax.0=(29,262),(202,282)
LineData.0=(202,273),(218,273),(242,249)


[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 4
OverlayFileName.0=MSE_6.PNG
OverlayRect.0=(221,129),(733,641)
Align.0=L
CallOutMax.0=(250,38),(426,56)
LineData.0=(249,50),(228,50),(228,135)

[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 5
OverlayFileName.0=MSE_7.PNG
OverlayRect.0=(241,123),(753,635)
Align.0=L
CallOutMax.0=(262,63),(429,82)
LineData.0=(261,74),(249,74),(249,129)

[Button 6]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON 6
Align.0=BL
CallOutMax.0=(0,57),(153,78)
LineData.0=(24,77),(24,90),(128,90),(128,108)

[Button 7]
UsagePage=0x9
Usage=0x8
Type=0x704
Name=BUTTON 7
Align.0=L
CallOutMax.0=(276,95),(420,117)
LineData.0=(274,109),(262,109),(262,120)

[Button 8]
UsagePage=0x9
Usage=0x9
Type=0x804
Name=BUTTON 8
OverlayFileName.0=MSE_8.PNG
OverlayRect.0=(148,127),(660,639)
Align.0=BL
CallOutMax.0=(18,14),(205,34)
LineData.0=(54,32),(54,46),(158,46),(158,131)

[Button 9]
UsagePage=0x9
Usage=0xA
Type=0x904
Name=BUTTON 9
OverlayFileName.0=MSE_9.PNG
OverlayRect.0=(154,144),(666,656)
Align.0=TL
CallOutMax.0=(2,199),(167,221)
LineData.0=(35,197),(35,186),(161,186),(161,164)

[Slider]
UsagePage=0x1
Usage=0x36
OverlayFileName.0=MSE_10.PNG
OverlayRect.0=(178,175),(690,687)
Align.0=R
CallOutMax.0=(11,237),(176,258)
LineData.0=(167,248),(185,248),(185,191)
Type=0x202
Name=SLIDER

[MICROSOFT SIDEWINDER FREESTYLE PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO (USB).Genre.41]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 8=0xFD
BUTTON 6=0x7
HAT SWITCH=0x1
BUTTON 7=0x8
BUTTON 9=0xFC
[MICROSOFT SIDEWINDER FREESTYLE PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO (USB).Genre.5]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 3=0x1
BUTTON 5=0x2
BUTTON 4=0x3
BUTTON 8=0xFD
HAT SWITCH=0x1
BUTTON 6=0x4
BUTTON 1=0x5
SLIDER=0x6
BUTTON 7=0x9
BUTTON 0=0xA
BUTTON 9=0xFC
[MICROSOFT SIDEWINDER FREESTYLE PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO (USB).Genre.6]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 3=0x1
BUTTON 5=0x2
BUTTON 4=0x3
BUTTON 8=0xFD
HAT SWITCH=0x1
BUTTON 6=0x4
BUTTON 1=0x5
BUTTON 0=0x6
BUTTON 7=0x7
BUTTON 9=0xFC
[MICROSOFT SIDEWINDER FREESTYLE PRO (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO (USB).Genre.34]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 8=0xFD
HAT SWITCH=0x1
BUTTON 5=0x6
BUTTON 7=0xFE
BUTTON 9=0xFC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms8_g.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder Precision Pro
[Microsoft SideWinder Precision Pro]
VID=1118
PID=23
Name=Microsoft SideWinder Precision Pro
Controls=X,Y,THROTTLE,RUDDER,HAT SWITCH,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON A,BUTTON B,BUTTON C,BUTTON D,SHIFT
ImageFileName.0=MS8.PNG
[X]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X
Align.0=L
CallOutMax.0=(346,118),(430,154)
LineData.0=(361,134),(229,134)
[Y]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y
Align.0=L
CallOutMax.0=(346,197),(429,232)
LineData.0=(350,206),(221,206),(221,182)
[Throttle]
UsagePage=0x2
Usage=0xBB
Type=0x202
Name=THROTTLE
OverlayFileName.0=MS8_1.png
OverlayRect.0=(185,208),(697,720)
Align.0=L
CallOutMax.0=(345,271),(429,309)
LineData.0=(353,290),(201,290),(201,230)
[Rudder]
UsagePage=0x2
Usage=0xBA
Type=0x502
Name=RUDDER
Align.0=L
CallOutMax.0=(346,153),(430,198)
LineData.0=(356,173),(243,173),(234,168)
[Hat Switch]
UsagePage=0x1
Usage=0x39
Type=0x10
Name=HAT SWITCH
OverlayFileName.0=MS8_2.png
OverlayRect.0=(200,68),(712,580)
Align.0=L
CallOutMax.0=(348,5),(430,45)
LineData.0=(356,24),(207,24),(207,65)
[Button 1]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 1
Align.0=R
CallOutMax.0=(0,65),(85,109)
LineData.0=(69,86),(181,86)
[Button 2]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 2
OverlayFileName.0=MS8_3.png
OverlayRect.0=(193,76),(705,588)
Align.0=R
CallOutMax.0=(1,7),(85,47)
LineData.0=(72,24),(196,24),(196,73)
[Button 3]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 3
OverlayFileName.0=MS8_4.png
OverlayRect.0=(212,69),(724,581)
Align.0=L
CallOutMax.0=(348,44),(430,79)
LineData.0=(368,60),(214,60),(214,65)
[Button 4]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 4
OverlayFileName.0=MS8_5.png
OverlayRect.0=(214,79),(726,591)
Align.0=L
CallOutMax.0=(347,78),(430,119)
LineData.0=(358,96),(217,96),(217,90)
[Button A]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON A
OverlayFileName.0=MS8_6.png
OverlayRect.0=(149,193),(661,705)
Align.0=R
CallOutMax.0=(0,129),(85,178)
LineData.0=(68,152),(155,152),(155,190)
[Button B]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON B
OverlayFileName.0=MS8_7.png
OverlayRect.0=(129,194),(641,706)
Align.0=R
CallOutMax.0=(0,178),(85,219)
LineData.0=(76,196),(127,196)
[Button C]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON C
OverlayFileName.0=MS8_8.png
OverlayRect.0=(116,204),(628,716)
Align.0=R
CallOutMax.0=(0,237),(86,277)
LineData.0=(71,254),(121,254),(121,221)
[Button D]
UsagePage=0x9
Usage=0x8
Type=0x704
Name=BUTTON D
OverlayFileName.0=MS8_9.png
OverlayRect.0=(136,203),(648,715)
Align.0=R
CallOutMax.0=(0,277),(86,309)
LineData.0=(73,293),(144,293),(144,218)

[Shift]
UsagePage=0x9
Usage=0xA
Type=0x904
Name=SHIFT
OverlayFileName.0=MS8_10.png
OverlayRect.0=(221,226),(733,738)
Align.0=L
CallOutMax.0=(345,231),(427,262)
LineData.0=(359,244),(243,244)
[MICROSOFT SIDEWINDER PRECISION PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO.Genre.1]
MapExists=1
X=0x1
THROTTLE=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON D=0x3
Y=0x4
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON C=0x5
BUTTON B=0x7
BUTTON 4=0x8
[MICROSOFT SIDEWINDER PRECISION PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO.Genre.2]
MapExists=1
X=0x1
THROTTLE=0x2
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
Y=0x4
HAT SWITCH=0x1
BUTTON B=0x4
BUTTON D=0x5
BUTTON A=0x6
BUTTON C=0x8
BUTTON 2=0x9
[MICROSOFT SIDEWINDER PRECISION PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO.Genre.3]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
HAT SWITCH=0x1
BUTTON B=0x4
BUTTON D=0x5
BUTTON C=0x6
BUTTON 2=0x7
[MICROSOFT SIDEWINDER PRECISION PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO.Genre.41]
MapExists=1
X=0x1
Y=0x2
RUDDER=0x3
THROTTLE=0x4
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
BUTTON A=0x4
BUTTON C=0x6
BUTTON D=0x7
HAT SWITCH=0x1
BUTTON B=0x8
BUTTON 2=0x9
[MICROSOFT SIDEWINDER PRECISION PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO.Genre.4]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
HAT SWITCH=0x1
RUDDER=0x5
BUTTON C=0x4
BUTTON D=0x5
[MICROSOFT SIDEWINDER PRECISION PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO.Genre.5]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
HAT SWITCH=0x1
BUTTON C=0x4
RUDDER=0x4
BUTTON A=0x5
BUTTON D=0x6
BUTTON 2=0x9
BUTTON B=0xA

[MICROSOFT SIDEWINDER PRECISION PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO.Genre.6]
MapExists=1
X=0x1
Y=0x2
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
HAT SWITCH=0x1
RUDDER=0x4
THROTTLE=0x5
BUTTON C=0x4
BUTTON A=0x5
BUTTON B=0x6
BUTTON 2=0x7
[MICROSOFT SIDEWINDER PRECISION PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO.Genre.7]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
HAT SWITCH=0x1
RUDDER=0x5
BUTTON A=0x4
BUTTON C=0x6
BUTTON D=0x7
BUTTON B=0x8
BUTTON 2=0x9
[MICROSOFT SIDEWINDER PRECISION PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1
[MICROSOFT SIDEWINDER PRECISION PRO.Genre.34]
MapExists=1
X=0x1
Y=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON A=0x5
HAT SWITCH=0x1
BUTTON B=0x6
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\ms7.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=SideWinder Game Pad USB version 1.0
[SideWinder Game Pad USB version 1.0]
VID=1118
PID=7
Name=SideWinder Game Pad USB version 1.0
Controls=Y AXIS,X Axis,Button 0,Button 1,Button 2,Button 3,Button 4,Button 5,Button 6,Button 7,Button 8,Button 9
ImageFileName.0=MS7.png

[Y Axis]
Name=Y Axis
Type=0x102
UsagePage=0x1
Usage=0x31
OverlayFileName.0=MS7_1.PNG
OverlayRect.0=(119,110),(631,622)
Align.0=TR
CallOutMax.0=(0,177),(127,245)
LineData.0=(125,192),(139,192),(139,141)

[X Axis]
Name=X Axis
Type=0x2
UsagePage=0x1
Usage=0x30
OverlayFileName.0=MS7_1.PNG
OverlayRect.0=(119,110),(631,622)
Align.0=TR
CallOutMax.0=(1,66),(120,108)
LineData.0=(120,77),(129,77),(129,119)

[Button 0]
Name=BUTTON 0
Type=0x4
UsagePage=0x9
Usage=0x1
OverlayFileName.0=MS7_2.PNG
OverlayRect.0=(193,152),(705,664)
Align.0=L
CallOutMax.0=(275,240),(429,263)
LineData.0=(273,253),(200,253),(200,163)

[Button 1]
Name=BUTTON 1
Type=0x104
UsagePage=0x9
Usage=0x2
OverlayFileName.0=MS7_3.PNG
OverlayRect.0=(215,146),(727,658)
Align.0=L
CallOutMax.0=(284,206),(429,229)
LineData.0=(283,221),(224,221),(224,158)

[Button 2]
Name=BUTTON 2
Type=0x204
UsagePage=0x9
Usage=0x3
OverlayFileName.0=MS7_4.PNG
OverlayRect.0=(237,143),(749,655)
Align.0=TL
CallOutMax.0=(284,156),(429,201)
LineData.0=(283,167),(246,167),(246,153)

[Button 3]
Name=BUTTON 3
Type=0x304
UsagePage=0x9
Usage=0x4
OverlayFileName.0=MS7_5.PNG
OverlayRect.0=(197,132),(709,644)
Align.0=L
CallOutMax.0=(248,14),(428,38)
LineData.0=(247,26),(203,26),(203,137)

[Button 4]
Name=BUTTON 4
Type=0x404
UsagePage=0x9
Usage=0x5
OverlayFileName.0=MS7_6.PNG
OverlayRect.0=(215,127),(727,639)
Align.0=L
CallOutMax.0=(256,42),(429,68)
LineData.0=(254,56),(223,56),(223,132)

[Button 5]
Name=BUTTON 5
Type=0x504
UsagePage=0x9
Usage=0x6
OverlayFileName.0=MS7_7.PNG
OverlayRect.0=(234,125),(746,637)
Align.0=L
CallOutMax.0=(270,74),(426,96)
LineData.0=(269,84),(240,84),(240,131)

[Button 6]
Name=BUTTON 6
Type=0x604
UsagePage=0x9
Usage=0x7
Align.0=BR
CallOutMax.0=(0,14),(146,54)
LineData.0=(145,44),(165,44),(165,95)

[Button 7]
Name=BUTTON 7
Type=0x704
UsagePage=0x9
Usage=0x8
Align.0=TL
CallOutMax.0=(276,105),(429,143)
LineData.0=(276,114),(259,114),(259,125)

[Button 8]
Name=BUTTON 8
Type=0x804
UsagePage=0x9
Usage=0x9
OverlayFileName.0=MS7_8.PNG
OverlayRect.0=(171,147),(683,659)
Align.0=L
CallOutMax.0=(220,275),(419,299)
LineData.0=(217,289),(179,289),(179,155)

[Button 9]
Name=BUTTON 9
Type=0x904
UsagePage=0x9
Usage=0xA
OverlayFileName.0=MS7_9.PNG
OverlayRect.0=(158,160),(670,672)
Align.0=TR
CallOutMax.0=(6,258),(145,300)
LineData.0=(144,269),(168,269),(168,169)

[MICROSOFT SIDEWINDER GAME PAD.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[MICROSOFT SIDEWINDER GAME PAD.Genre.1]
MapExists=1
X AXIS=0x1
BUTTON 0=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 8=0xFD
Y AXIS=0x4
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6
BUTTON 6=0x7
BUTTON 7=0x8
BUTTON 9=0xFE
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\msf1f.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder 3D Pro
[Microsoft SideWinder 3D Pro]
VID=1118
PID=3871
Name=Microsoft SideWinder 3D Pro
Controls=X,Y,THROTTLE,RUDDER,HAT SWITCH,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7,BUTTON 8
ImageFileName.0=MSF1F.PNG
[X]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X
Align.0=L
CallOutMax.0=(333,95),(430,141)
LineData.0=(347,116),(208,116)

[Y]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y
Align.0=R
CallOutMax.0=(0,0),(80,38)
LineData.0=(64,17),(165,17),(165,55)

[Throttle]
UsagePage=0x2
Usage=0xBB
Type=0x202
Name=THROTTLE
OverlayFileName.0=MSF1F_6.PNG
OverlayRect.0=(138,177),(650,689)
Align.0=R
CallOutMax.0=(0,165),(79,205)
LineData.0=(60,183),(136,183)

[Rudder]
UsagePage=0x2
Usage=0xBA
Type=0x502
Name=RUDDER
Align.0=L
CallOutMax.0=(332,144),(429,193)
LineData.0=(344,165),(230,165)

[Hat Switch]
UsagePage=0x1
Usage=0x39
Type=0x10
Name=HAT SWITCH
OverlayFileName.0=MSF1F_2.PNG
OverlayRect.0=(172,62),(684,574)
Align.0=L
CallOutMax.0=(333,0),(430,46)
LineData.0=(343,22),(177,22),(177,61)

[Button 1]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 1
OverlayFileName.0=MSF1F_1.PNG
OverlayRect.0=(154,69),(666,581)
Align.0=R
CallOutMax.0=(0,39),(80,78)
LineData.0=(67,55),(143,55),(143,77),(153,77)

[Button 2]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 2
OverlayFileName.0=MSF1F_3.PNG
OverlayRect.0=(184,78),(696,590)
Align.0=L
CallOutMax.0=(333,51),(430,96)
LineData.0=(343,70),(195,70),(195,81)

[Button 3]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 3
OverlayFileName.0=MSF1F_4.PNG
OverlayRect.0=(167,82),(679,594)
Align.0=R
CallOutMax.0=(0,82),(80,120)
LineData.0=(64,96),(143,96),(143,87),(164,87)

[Button 4]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 4
OverlayFileName.0=MSF1F_5.PNG
OverlayRect.0=(171,101),(683,613)
Align.0=R
CallOutMax.0=(0,123),(79,164)
LineData.0=(66,140),(177,140),(177,116)

[Button 5]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 5
OverlayFileName.0=MSF1F_7.PNG
OverlayRect.0=(203,209),(715,721)
Align.0=T
CallOutMax.0=(2,268),(101,309)
LineData.0=(48,273),(48,218),(199,218)
[Button 6]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 6
OverlayFileName.0=MSF1F_9.PNG
OverlayRect.0=(224,194),(736,706)
Align.0=T
CallOutMax.0=(331,267),(429,309)
LineData.0=(375,272),(375,197),(239,197)
[Button 7]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON 7
OverlayFileName.0=MSF1F_9.PNG
OverlayRect.0=(233,203),(745,715)
Align.0=T
CallOutMax.0=(238,267),(333,309)
LineData.0=(286,273),(286,208),(249,208)
[Button 8]
UsagePage=0x9
Usage=0x8
Type=0x704
Name=BUTTON 8
OverlayFileName.0=MSF1F_8.PNG
OverlayRect.0=(210,220),(722,732)
Align.0=T
CallOutMax.0=(102,268),(194,309)
LineData.0=(142,275),(142,230),(207,230)
[MICROSOFT SIDEWINDER 3D PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[MICROSOFT SIDEWINDER 3D PRO.Genre.2]
MapExists=1
X=0x1
THROTTLE=0x2
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
Y=0x4
HAT SWITCH=0x1
BUTTON 5=0x4
BUTTON 8=0x5
BUTTON 6=0x8
BUTTON 2=0x9
BUTTON 7=0xFC
[MICROSOFT SIDEWINDER 3D PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1
[MICROSOFT SIDEWINDER 3D PRO.Genre.3]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
HAT SWITCH=0x1
BUTTON 5=0x4
BUTTON 6=0x6
BUTTON 2=0x7
[MICROSOFT SIDEWINDER 3D PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1
[MICROSOFT SIDEWINDER 3D PRO.Genre.41]
MapExists=1
X=0x1
Y=0x2
RUDDER=0x3
THROTTLE=0x4
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
BUTTON 6=0x4
BUTTON 7=0x5
BUTTON 5=0x6
BUTTON 8=0x7
HAT SWITCH=0x1
BUTTON 2=0x9
[MICROSOFT SIDEWINDER 3D PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[MICROSOFT SIDEWINDER 3D PRO.Genre.4]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 2=0x1
BUTTON 1=0x2
HAT SWITCH=0x1
RUDDER=0x5
BUTTON 5=0x4
BUTTON 8=0x5
[MICROSOFT SIDEWINDER 3D PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[MICROSOFT SIDEWINDER 3D PRO.Genre.5]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
HAT SWITCH=0x1
BUTTON 5=0x4
RUDDER=0x4
BUTTON 6=0x5
BUTTON 7=0x6
BUTTON 2=0x9
BUTTON 8=0xA
[MICROSOFT SIDEWINDER 3D PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[MICROSOFT SIDEWINDER 3D PRO.Genre.6]
MapExists=1
X=0x1
Y=0x2
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
HAT SWITCH=0x1
RUDDER=0x4
THROTTLE=0x5
BUTTON 5=0x4
BUTTON 6=0x5
BUTTON 8=0x6
BUTTON 2=0x7
BUTTON 7=0xFC
[MICROSOFT SIDEWINDER 3D PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[MICROSOFT SIDEWINDER 3D PRO.Genre.7]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 4=0x3
HAT SWITCH=0x1
RUDDER=0x5
BUTTON 5=0x4
BUTTON 6=0x6
BUTTON 7=0x7
BUTTON 8=0x8
BUTTON 2=0x9
[MICROSOFT SIDEWINDER 3D PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.33]
MapExists=1
[MICROSOFT SIDEWINDER 3D PRO.Genre.33]
MapExists=1
X=0x1
Y=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 7=0xFD
HAT SWITCH=0x1
BUTTON 6=0xFC
[MICROSOFT SIDEWINDER 3D PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1
[MICROSOFT SIDEWINDER 3D PRO.Genre.34]
MapExists=1
X=0x1
Y=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 7=0xFD
HAT SWITCH=0x1
BUTTON 6=0x6
BUTTON 8=0xFC
[MICROSOFT SIDEWINDER 3D PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[MICROSOFT SIDEWINDER 3D PRO.Genre.1]
MapExists=1
X=0x1
THROTTLE=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 6=0x3
Y=0x4
HAT SWITCH=0x1
BUTTON 3=0x4
BUTTON 5=0x6
BUTTON 8=0x7
BUTTON 4=0x8
BUTTON 7=0xFC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\msprw.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=SideWinder Precision Racing Wheel USB version 1.0

[SideWinder Precision Racing Wheel USB version 1.0]
VID=1118
PID=26
Name=SideWinder Precision Racing Wheel USB version 1.0
Controls=X AXIS,Z ROTATION,Y AXIS,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,BUTTON 6,BUTTON 7
ImageFileName.0=MSPRW.PNG

[X Axis]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X AXIS
Align.0=TR
CallOutMax.0=(1,183),(114,221)
LineData.0=(111,192),(128,192),(136,184)

[Z Rotation]
UsagePage=0x1
Usage=0x35
Type=0x502
Name=Z ROTATION
OverlayFileName.0=MSPRW_1.PNG
OverlayRect.0=(271,168),(783,680)
Align.0=R
CallOutMax.0=(24,231),(217,253)
LineData.0=(217,243),(237,243),(282,198)

[Y Axis]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y AXIS
OverlayFileName.0=MSPRW_2.PNG
OverlayRect.0=(300,185),(812,697)
Align.0=R
CallOutMax.0=(31,256),(234,278)
LineData.0=(234,269),(258,269),(308,219)

[Button 0]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON 0
Align.0=L
CallOutMax.0=(278,63),(429,82)
LineData.0=(279,73),(261,73),(261,93),(205,93)
OverlayFileName.0=MSPRW_3.PNG
OverlayRect.0=(195,83),(707,595)

[Button 1]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON 1
OverlayFileName.0=MSPRW_4.PNG
OverlayRect.0=(196,96),(708,608)
Align.0=L
CallOutMax.0=(279,95),(429,115)
LineData.0=(278,106),(207,106)

[Button 2]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON 2
OverlayFileName.0=MSPRW_5.PNG
OverlayRect.0=(196,108),(708,620)
Align.0=L
CallOutMax.0=(267,133),(429,155)
LineData.0=(266,145),(257,145),(257,118),(205,118)

[Button 3]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON 3
OverlayFileName.0=MSPRW_6.PNG
OverlayRect.0=(133,80),(645,592)
Align.0=TR
CallOutMax.0=(0,53),(113,91)
LineData.0=(112,63),(118,63),(141,86)

[Button 4]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON 4
OverlayFileName.0=MSPRW_7.PNG
OverlayRect.0=(128,90),(640,602)
Align.0=TR
CallOutMax.0=(1,93),(108,128)
LineData.0=(102,99),(135,99)

[Button 5]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON 5
OverlayFileName.0=MSPRW_8.PNG
OverlayRect.0=(127,102),(639,614)
Align.0=TL
CallOutMax.0=(25,148),(200,170)
LineData.0=(66,146),(66,138),(107,138),(134,111)

[Button 6]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON 6
Align.0=BL
CallOutMax.0=(3,10),(178,32)
LineData.0=(33,31),(33,42),(109,42),(144,77)

[Button 7]
UsagePage=0x9
Usage=0x8
Type=0x704
Name=BUTTON 7
Align.0=L
CallOutMax.0=(254,38),(423,56)
LineData.0=(252,49),(242,49),(212,79)

[SIDEWINDER PRECISION RACING WHEEL USB VERSION 1.0.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1

[SIDEWINDER PRECISION RACING WHEEL USB VERSION 1.0.Genre.41]
MapExists=1
X AXIS=0x1
Y AXIS=0x4
BUTTON 7=0x1
BUTTON 6=0x2
BUTTON 3=0x3
BUTTON 0=0x4
BUTTON 4=0x5
BUTTON 1=0x6
BUTTON 5=0x7
BUTTON 2=0x8

[SIDEWINDER PRECISION RACING WHEEL USB VERSION 1.0.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[SIDEWINDER PRECISION RACING WHEEL USB VERSION 1.0.Genre.1]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION=0x3
BUTTON 7=0x1
BUTTON 6=0x2
BUTTON 0=0x3
BUTTON 1=0xFD
BUTTON 2=0x5
BUTTON 3=0x6
BUTTON 4=0x7
BUTTON 5=0x8

[SIDEWINDER PRECISION RACING WHEEL USB VERSION 1.0.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[SIDEWINDER PRECISION RACING WHEEL USB VERSION 1.0.Genre.2]
MapExists=1
X AXIS=0x1
Y AXIS=0x2
Z ROTATION=0x3
BUTTON 0=0x1
BUTTON 3=0x2
BUTTON 4=0x3
BUTTON 1=0xFD
BUTTON 7=0x4
BUTTON 6=0x5
BUTTON 2=0x6
BUTTON 5=0x7

[SIDEWINDER PRECISION RACING WHEEL USB VERSION 1.0.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[SIDEWINDER PRECISION RACING WHEEL USB VERSION 1.0.Genre.3]
MapExists=1
X AXIS=0x1
Y AXIS=0x3
BUTTON 7=0x1
BUTTON 6=0x2
BUTTON 3=0x3
BUTTON 1=0xFD
Z ROTATION=0x4
BUTTON 0=0x4
BUTTON 2=0x5
BUTTON 4=0x6
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\msf1f_g.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder 3D Pro
[Microsoft SideWinder 3D Pro]
Name=Microsoft SideWinder 3D Pro
Controls=X,Y,Throttle,Rudder,Hat Switch,Button 1,Button 2,Button 3,Button 4,Button 5,Button 6,Button 7,Button 8,
ImageFileName.0=MSF1F.PNG
[X]
Name=X
Type=0x2
Linedata.0=(80,272),(182,170)
Align.0=C
CalloutMax.0=(1,256),(165,307)
[Y]
Name=Y
Type=0x102
Linedata.0=(211,159),(122,137)
Align.0=L
CalloutMax.0=(213,138),(429,184)
[Throttle]
Name=Slider
Type=0x202
Linedata.0=(49,199),(114,215)
Align.0=C
CalloutMax.0=(0,167),(105,236)
[Rudder]
Name=Rudder
Type=0x502
Linedata.0=(47,116),(139,177)
Align.0=C
CalloutMax.0=(1,79),(100,160)
[Hat Switch]
Name=Hat Switch
Type=0x10
Linedata.0=(165,11),(132,11)
Align.0=L
CalloutMax.0=(165,0),(429,31)
[Button 1]
Name=Button 1
Type=0x4
Linedata.0=(44,35),(88,35)
Align.0=C
CalloutMax.0=(1,0),(74,77)
[Button 2]
Name=Button 2
Type=0x104
Linedata.0=(164,48),(144,32)
Align.0=L
CalloutMax.0=(165,32),(429,63)
[Button 3]
Name=Button 3
Type=0x204
Linedata.0=(175,77),(151,77),(119,34)
Align.0=L
CalloutMax.0=(175,64),(429,95)
[Button 4]
Name=Button 4
Type=0x304
Linedata.0=(176,115),(158,115),(127,66)
Align.0=L
CalloutMax.0=(176,97),(429,135)
[Button 5]
Name=Button 5
Type=0x404
Linedata.0=(230,293),(192,293),(192,240)
Align.0=L
CalloutMax.0=(231,280),(429,308)
[Button 6]
Name=Button 6
Type=0x504
Linedata.0=(222,213),(216,221)
Align.0=BL
CalloutMax.0=(215,183),(429,215)
[Button 7]
Name=Button 7
Type=0x604
Linedata.0=(256,231),(234,231)
Align.0=L
CalloutMax.0=(255,215),(429,248)
[Button 8]
Name=Button 8
Type=0x704
Linedata.0=(212,247),(212,262),(259,262)
Align.0=L
CalloutMax.0=(256,246),(429,276)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\mse_g.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=Microsoft SideWinder Freestyle Pro
[Microsoft SideWinder Freestyle Pro]
VID=1118
PID=13
Name=Microsoft SideWinder Freestyle Pro
Controls=X,Y,THROTTLE,HAT SWITCH,BUTTON A,BUTTON B,BUTTON C,BUTTON X,BUTTON Y,BUTTON Z,BUTTON L,BUTTON R,START,SHIFT
ImageFileName.0=MSE.PNG

[X]
UsagePage=0x1
Usage=0x30
Type=0x2
Name=X
Align.0=R
CallOutMax.0=(29,262),(202,282)
LineData.0=(202,273),(218,273),(242,249)

[Y]
UsagePage=0x1
Usage=0x31
Type=0x102
Name=Y
Align.0=R
CallOutMax.0=(48,286),(214,307)
LineData.0=(214,299),(231,299),(259,271)

[Throttle]
UsagePage=0x2
Usage=0xBB
Type=0x202
Name=THROTTLE
OverlayFileName.0=MSE_10.PNG
OverlayRect.0=(178,175),(690,687)
Align.0=R
CallOutMax.0=(11,237),(176,258)
LineData.0=(167,248),(185,248),(185,191)

[Hat Switch]
UsagePage=0x1
Usage=0x39
Type=0x10
Name=HAT SWITCH
OverlayFileName.0=MSE_1.PNG
OverlayRect.0=(106,142),(618,654)
Align.0=BL
CallOutMax.0=(0,104),(120,140)
LineData.0=(27,138),(27,155),(112,155)

[Button A]
UsagePage=0x9
Usage=0x1
Type=0x4
Name=BUTTON A
OverlayFileName.0=MSE_2.PNG
OverlayRect.0=(218,162),(730,674)
Align.0=TL
CallOutMax.0=(301,206),(430,246)
LineData.0=(300,217),(227,217),(227,175)

[Button B]
UsagePage=0x9
Usage=0x2
Type=0x104
Name=BUTTON B
OverlayFileName.0=MSE_3.PNG
OverlayRect.0=(234,149),(746,661)
Align.0=L
CallOutMax.0=(294,183),(430,203)
LineData.0=(292,195),(246,195),(246,163)

[Button C]
UsagePage=0x9
Usage=0x3
Type=0x204
Name=BUTTON C
OverlayFileName.0=MSE_4.PNG
OverlayRect.0=(253,143),(765,655)
Align.0=L
CallOutMax.0=(292,157),(430,178)
LineData.0=(291,170),(261,170),(261,156)

[Button X]
UsagePage=0x9
Usage=0x4
Type=0x304
Name=BUTTON X
OverlayFileName.0=MSE_5.PNG
OverlayRect.0=(207,142),(719,654)
Align.0=L
CallOutMax.0=(233,14),(420,32)
LineData.0=(231,26),(215,26),(215,148)

[Button Y]
UsagePage=0x9
Usage=0x5
Type=0x404
Name=BUTTON Y
OverlayFileName.0=MSE_6.PNG
OverlayRect.0=(221,129),(733,641)
Align.0=L
CallOutMax.0=(250,38),(426,56)
LineData.0=(249,50),(228,50),(228,135)

[Button Z]
UsagePage=0x9
Usage=0x6
Type=0x504
Name=BUTTON Z
OverlayFileName.0=MSE_7.PNG
OverlayRect.0=(241,123),(753,635)
Align.0=L
CallOutMax.0=(262,63),(429,82)
LineData.0=(261,74),(249,74),(249,129)

[Button L]
UsagePage=0x9
Usage=0x7
Type=0x604
Name=BUTTON L
Align.0=BL
CallOutMax.0=(0,57),(153,78)
LineData.0=(24,77),(24,90),(128,90),(128,108)

[Button R]
UsagePage=0x9
Usage=0x8
Type=0x704
Name=BUTTON R
Align.0=L
CallOutMax.0=(276,95),(420,117)
LineData.0=(274,109),(262,109),(262,120)

[Start]
UsagePage=0x9
Usage=0x9
Type=0x804
Name=START
OverlayFileName.0=MSE_8.PNG
OverlayRect.0=(148,127),(660,639)
Align.0=BL
CallOutMax.0=(18,14),(205,34)
LineData.0=(54,32),(54,46),(158,46),(158,131)

[Shift]
UsagePage=0x9
Usage=0xA
Type=0x904
Name=SHIFT
OverlayFileName.0=MSE_9.PNG
OverlayRect.0=(154,144),(666,656)
Align.0=TL
CallOutMax.0=(2,199),(167,221)
LineData.0=(35,197),(35,186),(161,186),(161,164)

[MICROSOFT SIDEWINDER FREESTYLE PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO.Genre.1]
MapExists=1
X=0x1
THROTTLE=0x2
BUTTON A=0x1
BUTTON B=0x2
BUTTON C=0x3
START=0xFD
Y=0x4
HAT SWITCH=0x1
BUTTON X=0x4
BUTTON Y=0x5
BUTTON Z=0x6
BUTTON L=0x7
BUTTON R=0x8
SHIFT=0xFC
[MICROSOFT SIDEWINDER FREESTYLE PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO.Genre.2]
MapExists=1
X=0x1
THROTTLE=0x2
BUTTON A=0x1
BUTTON B=0x2
BUTTON C=0x3
START=0xFD
Y=0x4
HAT SWITCH=0x1
BUTTON X=0x4
BUTTON Y=0x5
BUTTON Z=0x6
BUTTON L=0x7
BUTTON R=0x8
SHIFT=0xFC
[MICROSOFT SIDEWINDER FREESTYLE PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO.Genre.3]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON A=0x1
BUTTON B=0x2
BUTTON C=0x3
START=0xFD
HAT SWITCH=0x1
BUTTON X=0x4
BUTTON Y=0x5
BUTTON Z=0x6
BUTTON L=0x7
SHIFT=0xFC
[MICROSOFT SIDEWINDER FREESTYLE PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO.Genre.4]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON A=0x1
BUTTON B=0x2
BUTTON C=0x3
START=0xFD
HAT SWITCH=0x1
BUTTON X=0x4
BUTTON Y=0x5
BUTTON Z=0xE0
SHIFT=0xFC
[MICROSOFT SIDEWINDER FREESTYLE PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO.Genre.5]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON Z=0x1
BUTTON Y=0x2
BUTTON X=0x3
START=0xFD
HAT SWITCH=0x1
BUTTON A=0x4
BUTTON C=0x5
BUTTON R=0x9
BUTTON B=0xA
SHIFT=0xFC
[MICROSOFT SIDEWINDER FREESTYLE PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO.Genre.6]
MapExists=1
X=0x1
Y=0x2
BUTTON Z=0x1
BUTTON Y=0x2
BUTTON X=0x3
START=0xFD
HAT SWITCH=0x1
THROTTLE=0x5
BUTTON L=0x4
BUTTON A=0x5
BUTTON B=0x6
BUTTON R=0x7
BUTTON C=0xFE
SHIFT=0xFC
[MICROSOFT SIDEWINDER FREESTYLE PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO.Genre.7]
MapExists=1
X=0x1
Y=0x2
THROTTLE=0x3
BUTTON X=0x1
BUTTON Z=0x2
BUTTON Y=0x3
START=0xFD
HAT SWITCH=0x1
BUTTON L=0x4
BUTTON A=0x6
BUTTON B=0x7
BUTTON C=0x8
BUTTON R=0x9
SHIFT=0xFC
[MICROSOFT SIDEWINDER FREESTYLE PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.33]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO.Genre.33]
MapExists=1
X=0x1
Y=0x2
BUTTON A=0x1
BUTTON B=0x2
BUTTON C=0x3
BUTTON X=0x4
BUTTON Y=0x5
START=0xFD
HAT SWITCH=0x1
SHIFT=0xFC
[MICROSOFT SIDEWINDER FREESTYLE PRO.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1
[MICROSOFT SIDEWINDER FREESTYLE PRO.Genre.34]
MapExists=1
X=0x1
Y=0x2
BUTTON A=0x1
BUTTON B=0x2
BUTTON C=0x3
BUTTON X=0x4
BUTTON Y=0x5
START=0xFD
HAT SWITCH=0x1
BUTTON Z=0x6
BUTTON R=0xFE
SHIFT=0xFC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\win9x\actc094.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=VID_061C&PID_C084,VID_061C&PID_C094

[VID_061C&PID_C084]
Name=VID_061C&PID_C084
VID=0x061C
PID=0xC084
ImageFileName.0=ACT_RS.PNG
Controls=CTRL16777218,CTRL16777730,CTRL16777474,CTRL33554436,CTRL33554692,CTRL33554948,CTRL33556996,CTRL16,CTRL33555204,CTRL33555460,CTRL33555716,CTRL33555972,CTRL33556228,CTRL33556484,CTRL33557252,CTRL33556740

[VID_061C&PID_C094]
Name=VID_061C&PID_C094
VID=0x061C
PID=0xC094
ImageFileName.0=ACT_RS.PNG
Controls=CTRL16777218,CTRL16777730,CTRL16777474,CTRL33554436,CTRL33554692,CTRL33554948,CTRL33556996,CTRL16,CTRL33555204,CTRL33555460,CTRL33555716,CTRL33555972,CTRL33556228,CTRL33556484,CTRL33557252,CTRL33556740

[CTRL16777218]
Type=0x1000002
UsagePage=0x1
Usage=0x30
Name=X AXIS
Linedata.0=(16,7),(150,7),(188,23)
Align.0=L
CalloutMax.0=(0,0),(111,20)

[CTRL16777730]
Type=0x1000202
UsagePage=0x1
Usage=0x32
Name=THROTTLE

[CTRL16777474]
Type=0x1000102
UsagePage=0x1
Usage=0x31
Name=Y AXIS
Linedata.0=(371,282),(296,282),(296,207)
Align.0=C
CalloutMax.0=(317,253),(429,309)

[CTRL33554436]
Type=0x2000004
UsagePage=0x9
Usage=0x1
Name=BUTTON 1
Linedata.0=(7,198),(120,198),(182,114)
Align.0=L
CalloutMax.0=(0,187),(111,210)

[CTRL33554692]
Type=0x2000104
UsagePage=0x9
Usage=0x2
Name=BUTTON 2
Linedata.0=(413,92),(305,92),(236,84)
Align.0=R
CalloutMax.0=(323,82),(430,105)

[CTRL33554948]
Type=0x2000204
UsagePage=0x9
Usage=0x3
Name=BUTTON 3
Linedata.0=(13,84),(121,84),(178,78)
Align.0=L
CalloutMax.0=(0,74),(109,96)

[CTRL33556996]
Type=0x2000A04
UsagePage=0x9
Usage=0xB
Name=BUTTON 11
Align.0=R
CallOutMax.0=(322,111),(429,139)
LineData.0=(420,124),(307,124),(242,95)

[CTRL16]
Type=0x10
UsagePage=0x1
Usage=0x39
Name=POINTOFVIEWHAT
Linedata.0=(414,182),(315,182),(221,104)
Align.0=R
CalloutMax.0=(323,171),(430,194)

[CTRL33555204]
Type=0x2000304
UsagePage=0x9
Usage=0x4
Name=BUTTON 4
Linedata.0=(420,39),(307,39),(238,59)
Align.0=R
CalloutMax.0=(319,30),(430,51)

[CTRL33555460]
Type=0x2000404
UsagePage=0x9
Usage=0x5
Name=BUTTON 5
Linedata.0=(13,54),(121,54),(174,68)
Align.0=L
CalloutMax.0=(0,43),(110,65)

[CTRL33555716]
Type=0x2000504
UsagePage=0x9
Usage=0x6
Name=BUTTON 6
Linedata.0=(9,156),(118,156),(182,91)
Align.0=L
CalloutMax.0=(0,145),(110,169)

[CTRL33555972]
Type=0x2000604
UsagePage=0x9
Usage=0x7
Name=BUTTON 7
Linedata.0=(419,69),(238,69)
Align.0=R
CalloutMax.0=(320,59),(430,82)

[CTRL33556228]
Type=0x2000704
UsagePage=0x9
Usage=0x8
Name=BUTTON 8
Linedata.0=(416,9),(305,9),(244,47)
Align.0=R
CalloutMax.0=(317,0),(430,22)

[CTRL33556484]
Type=0x2000804
UsagePage=0x9
Usage=0x9
Name=BUTTON 9
Linedata.0=(57,246),(148,246),(219,150)
Align.0=L
CalloutMax.0=(0,235),(111,258)

[CTRL33557252]
Type=0x2000B04
UsagePage=0x9
Usage=0xC
Name=BUTTON 12
Align.0=R
CallOutMax.0=(322,142),(429,168)
LineData.0=(417,156),(308,156),(243,106)

[CTRL33556740]
Type=0x2000904
UsagePage=0x9
Usage=0xA
Name=BUTTON 10
Align.0=L
CallOutMax.0=(0,108),(108,133)
LineData.0=(8,120),(120,120),(127,112)

[VID_061C&PID_C094.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[VID_061C&PID_C094.Genre.3]
MapExists=1
CTRL16777218=0x1
CTRL16777730=0x3
CTRL33554436=0x1
CTRL33554692=0x2
CTRL33554948=0x3
CTRL33556996=0xFD
CTRL16=0x1
CTRL16777474=0x5
CTRL33555204=0x4
CTRL33555460=0x5
CTRL33555716=0x6
CTRL33555972=0x7
CTRL33556228=0xE0
CTRL33556484=0xE8
CTRL33557252=0xFE
CTRL33556740=0xFC

[VID_061C&PID_C094.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[VID_061C&PID_C094.Genre.1]
MapExists=1
CTRL16777218=0x1
CTRL16777730=0x2
CTRL16777474=0x3
CTRL33554436=0x1
CTRL33554692=0x2
CTRL33554948=0x3
CTRL33556996=0xFD
CTRL16=0x1
CTRL33555204=0x4
CTRL33555460=0x5
CTRL33555716=0x6
CTRL33555972=0x7
CTRL33556228=0x8
CTRL33556484=0x9
CTRL33557252=0xFE
CTRL33556740=0xFC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\raiderpd.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=InterAct SV-251 Raider Digital (Gameport),InterAct SV-251 Raider Digital (USB)

[InterAct SV-251 Raider Digital (Gameport)]
Name=InterAct SV-251 Raider Digital
Controls=X-AXIS,Y-AXIS,Z-AXIS,BUTTON 0,BUTTON 1,BUTTON 2,BUTTON 3,BUTTON 4,BUTTON 5,POV 0
ImageFileName.0=SV2511.PNG
ImageFormat.0=BMP
ImageFileName.1=SV2512.PNG
ImageFormat.1=BMP

[InterAct SV-251 Raider Digital (USB)]
Name=InterAct SV-251 Raider Digital (USB)
ImageFileName.0=SV2511.PNG
ImageFormat.0=BMP
ImageFileName.1=SV2512.PNG
ImageFormat.1=BMP
VID=1533
PID=593
Controls=CTRL2,CTRL4,CTRL514,CTRL260,CTRL516,CTRL1028,CTRL16,CTRL258,CTRL772,CTRL1284

[X-axis]
Name=X-AXIS
Type=0x2
Align.1=L
CallOutMax.1=(281,141),(420,198)
LineData.1=(197,134),(249,134),(249,170),(272,170)

[Y-axis]
Name=Y-AXIS
Type=0x102
Align.1=T
CallOutMax.1=(3,165),(117,267)
LineData.1=(150,136),(55,136),(55,160)

[Z-axis]
Name=Z-AXIS
Type=0x202
Align.0=B
CallOutMax.0=(7,66),(94,153)
LineData.0=(126,220),(49,220),(49,160)

[Button 0]
Name=BUTTON 0
Type=0x4
Align.0=C
CallOutMax.0=(258,20),(376,54)
LineData.0=(285,186),(312,186),(312,57)

[Button 1]
Name=BUTTON 1
Type=0x104
Align.1=R
CallOutMax.1=(4,47),(89,127)
LineData.1=(100,69),(100,94),(93,94)

[Button 2]
Name=BUTTON 2
Type=0x204
Align.1=L
CallOutMax.1=(235,67),(394,121)
LineData.1=(152,26),(212,26),(212,94),(231,94)

[Button 3]
Name=BUTTON 3
Type=0x304
Align.0=R
CallOutMax.0=(6,229),(91,308)
LineData.0=(170,267),(94,267)

[Button 4]
Name=BUTTON 4
Type=0x404
Align.0=L
CallOutMax.0=(335,167),(419,299)
LineData.0=(231,263),(321,263),(321,244),(330,244)

[Button 5]
Name=BUTTON 5
Type=0x504
Align.0=L
CallOutMax.0=(340,66),(420,153)
LineData.0=(276,228),(325,228),(325,114),(335,114)

[POV 0]
Name=POV 0
Type=0x10
Align.1=T
CallOutMax.1=(234,16),(334,62)
LineData.1=(139,7),(282,7),(282,13)

[CTRL2]
Type=0x2
UsagePage=0x1
Usage=0x30
Name=X AXIS
Align.1=L
CallOutMax.1=(276,142),(415,199)
LineData.1=(274,170),(249,170),(249,134),(200,134)

[CTRL514]
Type=0x202
UsagePage=0x2
Usage=0xBB
Name=THROTTLE
Align.0=B
CallOutMax.0=(7,66),(94,153)
LineData.0=(46,153),(46,220),(121,220)

[CTRL4]
Type=0x4
UsagePage=0x9
Usage=0x1
Name=BUTTON 0
Align.1=R
CallOutMax.1=(4,54),(89,134)
LineData.1=(90,94),(100,94),(100,69)

[CTRL260]
Type=0x104
UsagePage=0x9
Usage=0x2
Name=BUTTON 1
Align.1=L
CallOutMax.1=(273,68),(415,114)
LineData.1=(271,90),(220,90),(220,28),(157,28)

[CTRL516]
Type=0x204
UsagePage=0x9
Usage=0x3
Name=BUTTON 2
Align.0=R
CallOutMax.0=(6,229),(91,308)
LineData.0=(92,263),(166,263)

[CTRL772]
Type=0x304
UsagePage=0x9
Usage=0x4
Name=BUTTON 3
Align.0=L
CallOutMax.0=(335,167),(419,299)
LineData.0=(332,244),(321,244),(321,263),(234,263)

[CTRL1028]
Type=0x404
UsagePage=0x9
Usage=0x5
Name=BUTTON 4
Align.0=L
CallOutMax.0=(340,66),(420,153)
LineData.0=(335,114),(325,114),(325,228),(279,228)

[CTRL258]
Type=0x102
UsagePage=0x1
Usage=0x31
Name=Y AXIS
Align.1=T
CallOutMax.1=(0,164),(114,266)
LineData.1=(55,160),(55,136),(147,136)

[CTRL16]
Type=0x10
UsagePage=0x1
Usage=0x39
Name=HAT SWITCH
Align.1=T
CallOutMax.1=(234,16),(334,62)
LineData.1=(282,13),(282,7),(141,7)

[CTRL1284]
Type=0x504
UsagePage=0x9
Usage=0x6
Name=BUTTON 5
Align.0=L
CallOutMax.0=(340,0),(422,62)
LineData.0=(336,30),(306,30),(306,186),(290,186)

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.1]
MapExists=1
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 0=0xFD
Z-AXIS=0x4
POV 0=0x1
BUTTON 4=0x5
BUTTON 5=0x8

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.2]
MapExists=1
X-AXIS=0x1
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 0=0x3
Z-AXIS=0x4
POV 0=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.5]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
Z-AXIS=0x3
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
POV 0=0x1
BUTTON 5=0x4
BUTTON 4=0x5
BUTTON 0=0x6

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.11]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 3=0x2
BUTTON 2=0x3
BUTTON 1=0x4
BUTTON 0=0x5
BUTTON 5=0x6
BUTTON 4=0x7
POV 0=0x1
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.12]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.33]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.33]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 3=0x1
BUTTON 4=0x2
BUTTON 1=0x3
BUTTON 2=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.28]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.28]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 2=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.9]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.9]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.10]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 3=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 4=0x4
BUTTON 5=0x5
POV 0=0x1
BUTTON 0=0x6
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.13]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.13]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.3]
MapExists=1
Y-AXIS=0x1
X-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0xFD
POV 0=0x1
Z-AXIS=0x5
BUTTON 5=0x4
BUTTON 0=0x5

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.41]
MapExists=1
Y-AXIS=0x1
X-AXIS=0x2
Z-AXIS=0x4
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (Gameport).Genre.4]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
Z-AXIS=0x3
BUTTON 4=0x1
BUTTON 3=0x2
BUTTON 5=0x3
POV 0=0x1
BUTTON 1=0x4
BUTTON 2=0x5
BUTTON 0=0xFC

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.6]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0xFD
POV 0=0x1
Z-AXIS=0x5
BUTTON 5=0x4
BUTTON 0=0x5

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.7]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
Z-AXIS=0x3
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0xFD
POV 0=0x1
BUTTON 5=0x4
BUTTON 0=0x5

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.8]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.14]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (Gameport).Genre.15]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.16]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.17]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 2=0x1
BUTTON 3=0x2
BUTTON 1=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.18]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.19]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.19]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.20]
MapExists=1
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 3=0x3
BUTTON 4=0xFD
BUTTON 5=0xFE
BUTTON 0=0xFC

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.22]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 3=0x1
BUTTON 4=0x2
BUTTON 5=0x3
BUTTON 1=0x4
BUTTON 2=0x5
BUTTON 0=0x8

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.23]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.24]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.24]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.26]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.26]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.27]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.27]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0xFD
POV 0=0x1
BUTTON 0=0x5

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.29]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.29]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.30]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.30]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
Z-AXIS=0x3
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.31]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.31]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.32]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.32]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1

[InterAct SV-251 Raider Digital (Gameport).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.40]
MapExists=1

[InterAct SV-251 Raider Digital (Gameport).Genre.40]
MapExists=1
X-AXIS=0x1
BUTTON 1=0x1
Y-AXIS=0x3
BUTTON 2=0x2
BUTTON 3=0xFD
Z-AXIS=0x4
BUTTON 4=0x3
BUTTON 5=0x4
BUTTON 0=0x5

[InterAct SV-251 Raider Digital (Gameport).Genre.34]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 3=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.1]
MapExists=1
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 0=0xFD
Z-AXIS=0x4
POV 0=0x1
BUTTON 4=0x5
BUTTON 5=0x8

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.2]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.2]
MapExists=1
X-AXIS=0x1
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 0=0x3
Z-AXIS=0x4
POV 0=0x1
BUTTON 3=0x4
BUTTON 4=0x5
BUTTON 5=0x6

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.4]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.5]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.5]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
Z-AXIS=0x3
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
POV 0=0x1
BUTTON 5=0x4
BUTTON 4=0x5
BUTTON 0=0x6

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.11]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.11]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 3=0x2
BUTTON 2=0x3
BUTTON 1=0x4
BUTTON 0=0x5
BUTTON 5=0x6
BUTTON 4=0x7
POV 0=0x1
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.12]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.12]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.33]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.33]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 3=0x1
BUTTON 4=0x2
BUTTON 1=0x3
BUTTON 2=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.34]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.28]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.28]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 3=0x2
BUTTON 2=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.9]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.9]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.10]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.10]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 3=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 4=0x4
BUTTON 5=0x5
POV 0=0x1
BUTTON 0=0x6
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.13]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.13]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.15]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.3]
MapExists=1
Y-AXIS=0x1
X-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0xFD
POV 0=0x1
Z-AXIS=0x5
BUTTON 5=0x4
BUTTON 0=0x5

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.41]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.41]
MapExists=1
Y-AXIS=0x1
X-AXIS=0x2
Z-AXIS=0x4
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Genre.4]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
Z-AXIS=0x3
BUTTON 4=0x1
BUTTON 3=0x2
BUTTON 5=0x3
POV 0=0x1
BUTTON 1=0x4
BUTTON 2=0x5
BUTTON 0=0xFC

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.6]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.6]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0xFD
POV 0=0x1
Z-AXIS=0x5
BUTTON 5=0x4
BUTTON 0=0x5

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.7]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.7]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
Z-AXIS=0x3
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0xFD
POV 0=0x1
BUTTON 5=0x4
BUTTON 0=0x5

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.8]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.8]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.14]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.14]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1
Z-AXIS=0x3

[InterAct SV-251 Raider Digital (USB).Genre.15]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.16]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.16]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.17]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.17]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 2=0x1
BUTTON 3=0x2
BUTTON 1=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.18]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.18]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.19]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.19]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.20]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.20]
MapExists=1
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 3=0x3
BUTTON 4=0xFD
BUTTON 5=0xFE
BUTTON 0=0xFC

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.22]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.22]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 3=0x1
BUTTON 4=0x2
BUTTON 5=0x3
BUTTON 1=0x4
BUTTON 2=0x5
BUTTON 0=0x8

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.23]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.23]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.24]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.24]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.26]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.26]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.27]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.27]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 2=0x1
BUTTON 1=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0xFD
POV 0=0x1
BUTTON 0=0x5

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.29]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.29]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.30]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.30]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
Z-AXIS=0x3
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.31]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.31]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0x6
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.32]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.32]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 1=0x1
BUTTON 2=0x2
BUTTON 3=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1

[InterAct SV-251 Raider Digital (USB).Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.40]
MapExists=1

[InterAct SV-251 Raider Digital (USB).Genre.40]
MapExists=1
X-AXIS=0x1
BUTTON 1=0x1
Y-AXIS=0x3
BUTTON 2=0x2
BUTTON 3=0xFD
Z-AXIS=0x4
BUTTON 4=0x3
BUTTON 5=0x4
BUTTON 0=0x5

[InterAct SV-251 Raider Digital (USB).Genre.34]
MapExists=1
X-AXIS=0x1
Y-AXIS=0x2
BUTTON 3=0x1
BUTTON 1=0x2
BUTTON 2=0x3
BUTTON 4=0x4
BUTTON 5=0x5
BUTTON 0=0xFD
POV 0=0x1
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dinput\ihvmap\daytona\actc094.ini ===
[DirectInput]
DirectXVersion=0x800
Devices=VID_061C&PID_C084,VID_061C&PID_C094

[VID_061C&PID_C084]
Name=VID_061C&PID_C084
VID=0x061C
PID=0xC084
ImageFileName.0=ACT_RS.PNG
Controls=CTRL16777218,CTRL16777730,CTRL16777474,CTRL33554436,CTRL33554692,CTRL33554948,CTRL33556996,CTRL16,CTRL33555204,CTRL33555460,CTRL33555716,CTRL33555972,CTRL33556228,CTRL33556484,CTRL33557252,CTRL33556740

[VID_061C&PID_C094]
Name=VID_061C&PID_C094
VID=0x061C
PID=0xC094
ImageFileName.0=ACT_RS.PNG
Controls=CTRL16777218,CTRL16777730,CTRL16777474,CTRL33554436,CTRL33554692,CTRL33554948,CTRL33556996,CTRL16,CTRL33555204,CTRL33555460,CTRL33555716,CTRL33555972,CTRL33556228,CTRL33556484,CTRL33557252,CTRL33556740

[CTRL16777218]
Type=0x1000002
UsagePage=0x1
Usage=0x30
Name=X AXIS
Linedata.0=(16,7),(150,7),(188,23)
Align.0=L
CalloutMax.0=(0,0),(111,20)

[CTRL16777730]
Type=0x1000202
UsagePage=0x1
Usage=0x32
Name=THROTTLE
Linedata.0=(376,262),(316,262),(306,191)
Align.0=R
CalloutMax.0=(337,233),(429,289)

[CTRL16777474]
Type=0x1000102
UsagePage=0x1
Usage=0x31
Name=Y AXIS
Linedata.0=(216,282),(262,282),(262,207)
Align.0=L
CalloutMax.0=(166,253),(311,309)

[CTRL33554436]
Type=0x2000004
UsagePage=0x9
Usage=0x1
Name=BUTTON 1
Linedata.0=(7,198),(120,198),(182,114)
Align.0=L
CalloutMax.0=(0,187),(111,210)

[CTRL33554692]
Type=0x2000104
UsagePage=0x9
Usage=0x2
Name=BUTTON 2
Linedata.0=(413,92),(305,92),(236,84)
Align.0=R
CalloutMax.0=(323,82),(430,105)

[CTRL33554948]
Type=0x2000204
UsagePage=0x9
Usage=0x3
Name=BUTTON 3
Linedata.0=(13,84),(121,84),(178,78)
Align.0=L
CalloutMax.0=(0,74),(109,96)

[CTRL33556996]
Type=0x2000A04
UsagePage=0x9
Usage=0xB
Name=BUTTON 11
Align.0=R
CallOutMax.0=(322,111),(429,139)
LineData.0=(420,124),(307,124),(242,95)

[CTRL16]
Type=0x10
UsagePage=0x1
Usage=0x39
Name=POINTOFVIEWHAT
Linedata.0=(414,182),(315,182),(221,104)
Align.0=R
CalloutMax.0=(323,171),(430,194)

[CTRL33555204]
Type=0x2000304
UsagePage=0x9
Usage=0x4
Name=BUTTON 4
Linedata.0=(420,39),(307,39),(238,59)
Align.0=R
CalloutMax.0=(319,30),(430,51)

[CTRL33555460]
Type=0x2000404
UsagePage=0x9
Usage=0x5
Name=BUTTON 5
Linedata.0=(13,54),(121,54),(174,68)
Align.0=L
CalloutMax.0=(0,43),(110,65)

[CTRL33555716]
Type=0x2000504
UsagePage=0x9
Usage=0x6
Name=BUTTON 6
Linedata.0=(9,156),(118,156),(182,91)
Align.0=L
CalloutMax.0=(0,145),(110,169)

[CTRL33555972]
Type=0x2000604
UsagePage=0x9
Usage=0x7
Name=BUTTON 7
Linedata.0=(419,69),(238,69)
Align.0=R
CalloutMax.0=(320,59),(430,82)

[CTRL33556228]
Type=0x2000704
UsagePage=0x9
Usage=0x8
Name=BUTTON 8
Linedata.0=(416,9),(305,9),(244,47)
Align.0=R
CalloutMax.0=(317,0),(430,22)

[CTRL33556484]
Type=0x2000804
UsagePage=0x9
Usage=0x9
Name=BUTTON 9
Linedata.0=(57,246),(148,246),(219,150)
Align.0=L
CalloutMax.0=(0,235),(111,258)

[CTRL33557252]
Type=0x2000B04
UsagePage=0x9
Usage=0xC
Name=BUTTON 12
Align.0=R
CallOutMax.0=(322,142),(429,168)
LineData.0=(417,156),(308,156),(243,106)

[CTRL33556740]
Type=0x2000904
UsagePage=0x9
Usage=0xA
Name=BUTTON 10
Align.0=L
CallOutMax.0=(0,108),(108,133)
LineData.0=(8,120),(120,120),(127,112)

[VID_061C&PID_C094.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.3]
MapExists=1

[VID_061C&PID_C094.Genre.3]
MapExists=1
CTRL16777218=0x1
CTRL16777730=0x3
CTRL33554436=0x1
CTRL33554692=0x2
CTRL33554948=0x3
CTRL33556996=0xFD
CTRL16=0x1
CTRL16777474=0x5
CTRL33555204=0x4
CTRL33555460=0x5
CTRL33555716=0x6
CTRL33555972=0x7
CTRL33556228=0xE0
CTRL33556484=0xE8
CTRL33557252=0xFE
CTRL33556740=0xFC

[VID_061C&PID_C094.Application.{FD4ACE13-7044-4204-8B15-095286B12EAD}.Genre.1]
MapExists=1

[VID_061C&PID_C094.Genre.1]
MapExists=1
CTRL16777218=0x1
CTRL16777730=0x2
CTRL16777474=0x3
CTRL33554436=0x1
CTRL33554692=0x2
CTRL33554948=0x3
CTRL33556996=0xFD
CTRL16=0x1
CTRL33555204=0x4
CTRL33555460=0x5
CTRL33555716=0x6
CTRL33555972=0x7
CTRL33556228=0x8
CTRL33556484=0x9
CTRL33557252=0xFE
CTRL33556740=0xFC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dmusic\dmscript\notes.txt ===
Consider
	Abandon using IActiveScriptParse in favor of IPersist* (doesn't appear to be an options for VBS).
	Do we really need protection from multithreaded access?  Am I doing it right?
	Am I defining/returning proper errors?  What about the facility of errors from WinError.h that I return?
	In IDirectMusicScript, etc. pass variants by ref (pointer) instead of value for efficiency?
	If a null performance or loader is passed to IDirectMusicScript::Init then just create and initialize one.
	Should scripts be able to do all the initialization things traditionally done to prepare for playing?
	How do we handle CloseDown?  Must be called by engine?
	Handle error hr's from calling DirectMusic objects better.  Objects set rich error info that we save in exception?
	Multiply times by somthing like 1000 due to lost capacity.  Similar to VB OM.
	Any way to turn off library functions such as Stop?
	Use properties.  "MasterVolume = 100" instead of "SetMasterVolume(100)".

Automation model
	We don't support type info.
	We don't support named parameters.
	We don't pass parameters by reference.

International
	We have no support for scripts with international character sets or locale-dependant programming languages.  In fact, we hard code English so that we assure consistent playback of scripts no matter whether they are running on English or on foreign-language OS's.
	The script source is read from disk with the ANSI code page.
	The script is interpreted/executed with respect to the US English locale.

Scripting Engines
	The scripting engine must support the IActiveScriptParse interface.
	The scripting engine must change to the Started state immediately -- it cannot return OLESCRIPT_S_PENDING from SetScriptState.

Restrictions for simplicity of script API / DirectMusicScript implementation
	Routines take no parameters and don't return values (use global variables instead)

VBS
	No constant for OLESCRIPT_S_PENDING.
	IActiveScript::Close docs inconsistent about return if already closed.

Script Event Track
	Mutes have no effect on whether script events fire.

Implementing new IDispatch object
	New aut*.h from autperformance.h
		Replace CAutDirectMusicPerformance with CAutDirectMusic*
		Replace BaseImpPerf with BaseImp*
		Replace IDirectMusicPerformance with IDirectMusic*
		Replace automation methods (Delete GetIDs/Invoke overrides, delete or replace helpers)
	New aut*.cpp from autperformance.cpp
		#include "autperformance.h" -> "aut*.h", remove unnecessary includes
		Replace BaseImpPerf with BaseImp*
		Replace CAutDirectMusicPerformance with CAutDirectMusic*
		Change ms_wszClassName to the name of your object instead of "Performance"
		Replace method info
		Replace P in DMPDISP_* IDs with your own letter or couple of letters (DMLDISP_* for loader)
		Delete from private functions section onward
		Implement automation methods
	COM hookup
		define new guid in dmscriptautguids.h
		dll.cpp: #include "aut*.h", define g_szDMScript*FriendlyName etc
		dll.cpp: DllGetClassObject, DLLUnregisterServer, DLLRegisterServer

Adding aggregated IDispatch to main objects
	place #include "dmscriptautguids.h" in initguid file and in object .cpp file
	Add IUnknown pointer for controlling unknown to object decl, init to NULL in constructor
	Add IID_IDispatch to query interface
		See an example such as performance.
		Be sure it returns NULL if it fails. (Change structure of if to clear *ppv at top and return E_NOTIMPL if still null instead of else.)
		Be sure to change performance type/GUID.
	Release on destruction, protect destruction with artificially increased ref count (read release and destruction code to make sure this works right with the object)
	Simple test
		Place breakpoint in a method and run into it
		Place breakpoint in real object's destructor and quit
		Step into release of Aut object to ensure it is destroyed as well

Making a new track
	Add new CLSID to dmusici.h
	Create header from track.h
		Replace CDirectMusicScriptTrack
		Change EventInfo to contain the appropriate stuff
	Create source from track.cpp
		Replace CDirectMusicScriptTrack
		Eliminate or modify begin a tool and posting back to self
			IDirectMusicTool interface
			DMUS_PMSG_ScriptTrack structure
		Load ...
			Make new error to replace DMUS_E_INVALID_SCRIPTTRACK.
		InitPlay ...
		EndPlay ...
		Clone
	COM goo (ugh!)
		Duplicate class factory in dmprfdll.cpp and dmprfdll.h.  Change new statement if necessary.
		#include track header in dmprfdll.cpp
		Add case to DllGetClassObject
		Add case to DllUnregisterServer and DllRegisterServer

Segment trigger track
	SetParam (such as GUID_Download) with index 0 won't work.  Only goes to band or trigger track
	but not both.  Must use DMUS_SEG_ALLTRACKS with trigger track.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dmusic\dmsynth\ddkreadme.txt ===
The ddksynth sample in the DDK is created from the live sources in dmsynth.
The sample is generated by removing text between the special BEGIN and END
@@DDKSPLIT tags (such as this paragraph).

This can get a bit cryptic when one line must be used in the real dmsynth code
and a different line must appear in the sample ddksynth code.  Example from umsynth.cpp:
    // @@BEGIN_DDKSPLIT -- This section will be removed in the DDK sample.
        pCaps->guidPort = CLSID_DirectMusicSynth;
    #if 0 // The following section will only take affect in the DDK sample.
    // @@END_DDKSPLIT
        pCaps->guidPort = CLSID_DDKSynth;
    // @@BEGIN_DDKSPLIT -- This section will be removed in the DDK sample.
    #endif
    // @@END_DDKSPLIT

In this example, just the line with CLSID_DDKSynth will appear in the ddksynth
sample.  In the real dmsynth code, CLSID_DDKSynth is surrounded by an #if 0 conditional so it
has no effect.  Thus only CLSID_DirectMusicSynth takes effect in the real code.

The point here is to ship real functioning code for a synthesizer in the DDK, but to replace
its name and CLSID and also to strip out any Microsoft proprietary or licensed technology.  For
example, we can't ship our reverb capability in the DDK since it is licensed from another company.

You can build the cab containing this sample by running "genddkcab dmusiccab.ini" from the
\nt\private\ddk\cabs directory.  See http://devkits/ddk for more information about the DDK.

There are two files that are used only for the DDK sample:
ddksynth.htm:  A descriptive overview that will appear in the DDK sample.
ddksources:    The sources file that will be used in the DDK sample.
               (It would have been too difficult to generate it from the dmsynth sources.inc file.
                Please keep these two files in sync.)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dmusic\dmusic32\i386\readme.txt ===
This file forces existence of the i386 directory
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dplay\dplay4\tools\dplog\readme.txt ===
When changing these files, you must also check the BINARY into the SDK at directx\redist\sdkmics\dplay\dplog.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dplay\dplay8\tools\dp8log\dp8log.txt ===
DIRECTPLAY 8 LOGGING UTILITY (DP8LOG.EXE)

Like many parts of DirectX, the debug version of DirectPlay 8 sends 
debugging messages meant to aid you in development to a debug program. 
DirectPlay is also able to send this debugging information to a region 
of shared memory. The purpose of the dp8log.exe utility is to read and 
display the contents of that region of memory. This allows you to obtain 
the debug information on machines that do not have a debugger and also 
gives you a convenient way to save the debugging information to a file 
by redirecting the output from dp8log.exe to a file.

To display the contents of shared memory simply run dp8log.exe from the 
command prompt. The contents of the shared memory will be output to the 
standard output device (the screen). If you want to save the debug 
output to a file, simply redirect standard output to a file. For example, 
the command:

dp8log > debug.txt

Will save the debug output in a file called debug.txt in the current 
directory.

Note that the shared memory region only exists while a DirectPlay 8 
application is running and has loaded one or more of the DirectPlay 8 
dlls. When all DirectPlay applications exit or unload the DirectPlay 8 
dlls, the shared memory region is deallocated. This means that you can 
only get output from dp8log.exe while one or more of the DirectPlay 8 
dlls are loaded (i.e. the application using DirectPlay 8 is running).

Also note that all DirectPlay 8 applications share the same area of
shared memory. This means that the debug output will contain output
from all processes using DirectPlay 8.

You can change the behavior of the DirectPlay 8 debug output by adding 
entries to win.ini in the windows directory.

DirectPlay 8 looks for the [DirectPlay8] section in win.ini, and it 
recognizes the following attributes:

debug=x
log=x
debug.<component>=x
log.<component>=x
verbose=x

These attributes are described below:

debug - determines how much information is sent to the debug log, 0 is 
the least amount (critical errors only), 9 is the most (practically 
everything that DirectPlay does). Note that setting "debug" to a high 
level takes a fair amount of CPU time and will lower the performance 
of your application.

DirectPlay is subdivided into a number of components. It is possible to 
control the debug level of individual components. The following 
compoenents are available:

core - session layer protocol (e.g. player and group management)
addr - DirectPlay addressing (i.e. IDirectPlay8Address)
lobby - lobby client and lobbied application
protocol - transport protocol (i.e. retries, acks, etc.)
voice - DirectPlay Voice
dpnsvr - the enumeration server/redirector (dpnsvr.exe)
wsock - winsock (IP/IPX) service provider
modem - serial and modem service provider
shared - shared untility functions in DirectPlay

The "debug" setting sets the default debug level. You can override this 
with specific component levels, e.g.

debug=1 ; sets the default level to 1
debug.voice=5 ; set voice related debug level to 5
debug.wsock=0 ; set the winsock service provider debug level to 0

The "log" attribute determines where the debug information is sent.
The following values are valid:

log=0 ; send no debug information
log=1 ; send debug info to debug console (i.e vc++ debug window)
log=2 ; send debug info to shared memory
log=3 ; send debug info to both console and shared memory

As with the "debug" attribute, you can specify components for the
log attribute. For example:

log=1 ; default to sending debug information to the debug console
log.voice=3 ; send voice debug information to console and memory
log.wsock=0 ; send winsock service provider debug information to nowhere

The "verbose" attribute determines how much information is contained
in each debug message. There are two verbosity levels, "0" and "1".
"0" is the default. Example:

verbose=1 ; sent the verbosity level to 1

Experiment with the different verbosity levels and decide which one
serves your purposes best.

Here is a complete example win.ini section:

[DirectPlay8]
debug=1      ; set the default debug level to 1
debug.core=5 ; set the core debug level to 5
log=1        ; default to sending debug output to console only
log.core=3   ; send the core debug output to both console and memory
verbose=1    ; use verbosity level 1

If no [DirectPlay8] section is found in win.ini, DirectPlay defaults
to the following settings:

[DirectPlay8]
log=1
debug=0

Therefore you will always see critical errors in the debug console.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dplay\dplay8\tools\parsers\internal\readme.txt ===
D P L A Y  v8    P A R S E R S    F O R    N E T W O R K    M O N I T O R

							J u l y   1 7 ,   2 0 0 0

                                  M I C R O S O F T    C O R P O R A T I O N    C O N F I D E N T I A L


This folder contains the 4 DPlay v8 Network Monitor parsers packaged in the dp8parse.dll. 

Parsers include:

Name             | Contact
================================
Transport        | Evan Schrier
Service Provider | John Kane
Session          | Mike Narayan 
Voice            | Rod Toll


1). First install NetMon (you can find it here: http://netlab/netmon.htm)

2). To install the parsers copy the DLL into \NETMON\PARSERS (by default \WINNT\SYSTEM32\NETMON\PARSERS)

3). While browsing the capture, filter by the required protocol (e.g. filter by DPLAYTRANSPORT to get only the transport level traffic). 

4). By default [2302,2400]U{6073} port/socket range is used to filter UDP/IPX packets for DPlay parsing.
    To have the parsers recognizing user-defined port/socket ranges, add DWORD values MinUserPort and
    MaxUserPort to \HKCU\Software\Microsoft\DirectX\DirectPlay\Parsers registry key. This will extend
    the parsed range to: [2303,2400]U{6073}U[MinUserPort,MaxUserPort].

The following is the graph protocol for DPlay v8:


|================|
|Session | Voice |
|================|
|   Transport    |
|================|
|Service Provider|
|================|


Note that whenever you filter by a lower-level protocol, you are automatically getting all the higher-protocol packets sitting on top of that protocol. Therefore filtering with DPLAYSP enabled will show all DPLAY* packets, even if you disable some of the other DPLAY* parsers. Therefore, useful filtering scenarios include filtering only session traffic (DPLAYSESSION), or only voice traffic (DPLAYVOICE). You could also filter out service provider traffic, which involve enumeration handshakings, by enabling DPLAYTRANSPORT and disabling DPLAYSP. Other than that, filtering is mostly useful for filtering out non-DPlay traffic.


Tip: You can apply a filter to the capturing process itself (as opposed to the capture view) to, say, capture only IP traffic.
Even better, you can filter out all non-IP traffic and IP traffic that doesn't match a certain pattern defined by you. That way
you can capture only IP packets with specific source and destination ports, thus isolating particular DPlay traffic. Note that
this also applies to IPX capturing.

Note that Transport layer splits long messages into fragments. This makes it impossible for the parser to parse any non-initial part of the fragmented message. The first fragment is not guaranteed to be fully parsed either, since a field can be only partially inside a fragment. Transport parser does notify the upper protocol parsers about this, and both Session and Voice parsers do recognize this case, and notify the user accordingly.

See the public version of this file for me details. 

I'm looking forward to hearing suggestions on how to make this debugging tool easier to use by the end-users.
Send any comments you have to t-micmil.

Michael Milirud

(Last updated 23/Aug/2000)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dplay\dplay8\tools\parsers\public\readme.txt ===
D P L A Y  v8    I P / I P X    P A R S E R S    F O R    N E T W O R K    M O N I T O R

                                    (C) 2000 Microsoft Corporation, All Rights Reserved

//////////////////
// INTRODUCTION //
//////////////////

This folder contains the 4 DPlay v8 Network Monitor parsers packaged in the dp8parse.dll.

These include: Service Provider, Transport, Session, and Voice layer parsers.


//////////////////
// INSTALLATION //
//////////////////

1. First you need to install NetMon (if you don't already have it). In case you have Windows 2000 Server, NetMon is already installed on your machine. For Windows Professional users, you will need to purchase Microsoft SMS (Systems Management Server) package. See NetMon's documentation for more details.

2. To install the parsers, copy DP8PARSER.DLL into \NetMon|Parsers or \NetMonFull\Parsers, depending on whether you have the light (Win2k Server) or the full (MS SMS) version. By default Netmon is installed under \WintNT\System32.

3. Start NetMon.

4. Set the adapter to capture from (Capture|Networks...|Local Computer). Be sure to choose the one with "Dial-up Connection" property as FALSE (that's your NIC card).

5. You are ready to start capturing! 

Note: if you want to be able to see the network traffic on the entire network segment (very useful for multiplayer games running on a single LAN), you must make sure to use a non-switched hub that broadcasts every packet it receives on the incoming ports to all of its outgoing ports. Otherwise, the machine you will be capturing on, will only see the packets it sends and receives.


///////////////
// CAPTURING //
///////////////

To start capturing, just hit the "Start Capture" (Play) button in the toolbar.

When you want to see what you've just captured, hit the "Stop and View Capture" (Stop with glasses) button and it will open the capture view. At that point you might see lots of traffic irrelevant to you (especially if there is a lot of broadcast going on, on your network segment). Hit the "Edit Display Filter" (Funnel) button, double click on "Protocol==Any", then click on "Disable All". Under "Disabled Protocols" double click on the DPLAYSESSION, DPLAYSP, DPLAYTRANSPORT, and DPLAYVOICE (they should now be the only ones listed under "Enabled Protocols". Hit OK, OK. 

Congratulations, you're looking at DPlay traffic you just captured! Easy, isn't it.

By default NetMon captures only 1 MB of the most recent traffic, so you'll want to increase the buffer size to at least 10-20MB. You can set the buffer size under "Capture|Buffer Settings...". NetMon doesn't know how to stream to a hard drive, so whatever buffer size you set is what you'll get out of the most recent traffic. In case you are interested in 24/7 stream-capturing capability, you can write your own capturer, by calling IDelaydC interface (see MSDN for more details) - NetMon uses this interface internally.


/////////////////
// MISCELLANEA //
/////////////////

The following is the graph protocol for DPlay v8:

|================|
|Session | Voice |
|================|
|   Transport    |
|================|
|Service Provider|
|================|

Note that whenever you filter by a lower-level protocol, you are automatically getting all the higher-level packets sitting on top of that protocol. Therefore filtering with DPLAYSP enabled will show all DPLAY* packets, even if you disable some of the other DPLAY* parsers. Therefore, useful filtering scenarios include filtering only session traffic (DPLAYSESSION), or only voice traffic (DPLAYVOICE). You could also filter out service provider traffic, which involve enumeration handhakings, by enabling DPLAYTRANSPORT and disabling DPLAYSP. Other than that, filtering is mostly useful for filtering out non-DPlay traffic.

Tip: By default [2302,2400]U{6073} port/socket range is used to filter IP/IPX packets for DPlay parsing. To have the parsers recognize user-defined port/socket ranges, add DWORD values MinUserPort and MaxUserPort to \HKCU\Software\Microsoft\DirectX\DirectPlay\Parsers registry key. This will extend the parsed range to: [2303,2400]U{6073}U[MinUserPort,MaxUserPort]. This is useful when your application is using non-standard port ranges.

Tip: You can apply a filter to the capturing process itself (as opposed to the capture view) to, say, capture only IP traffic. Even better, you can filter out all non-IP traffic and IP traffic that doesn't match a certain pattern defined by you. That way you can capture only IP packets with specific source and destination ports, thus isolating particular DPlay traffic. Note that this also applies to IPX capturing. See NetMon's documentation for more details on how to use this feature.

Note that Transport layer splits long messages into fragments. This makes it impossible for the parser to parse any non-initial part of the fragmented message. The first fragment is not guaranteed to be fully parsed either, since a field can be only partially inside a fragment. Transport parser does notify the upper protocol parsers about this, and both Session and Voice parsers do recognize this case, and notify the user accordingly.

Michael Milirud
Last updated: 23/Aug/2000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxdiag\notes.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft DxDiag Notes for PSS Title _PID_HLINKSDxDiag Notes for PSS Michael D. Anderson Normal.dot Michael D. Anderson Microsoft Word 9.0bjbjU DxDiag Notes for PSS By Mike Anderson July 21, 1998 Help Page Problems to look for: Weird, unofficial versions of OS may cause app problems Some apps may not work properly unless the language and regional setting are English Non-Intel processors may be the cause of app bugs or DirectX bugs If memory is less than 32MB, some games may have performance problems If page file has 0MB available, tell user to make room on HD or increase maximum page file size DirectX Files Page For a good DX6 install on Win98, Version should be 4.06.00.03xx (exact version not yet final) for everything, except: 4.86.00.03xx for ddrawex.dll and dxapi.sys, and 4.05.01.1998 for dsound and dinput files. Note that on NT, the version of DxDiag shipping with DX6 will report some files as missing.  This report is incorrect, so ignore its advice to reinstall DX. This page diagnoses the following problems: Missing files (solution: reinstall DX) Debug files (if user is not developing a DX product, reinstall DX and choose retail) Beta files (reinstall DX) Note: DxDiag used to warn about  obsolete  files (DX5-only files on a DX6 system).  This code was removed because of manbugs #16765. DirectX Drivers Page DxDiag searches \windows\system for a set of known driver files.  The list shown is not necessarily the complete list of all DX drivers installed on the system!  Drivers listed here are not necessarily in use, so problems reported may be harmless. This page diagnoses the following problems: Uncertified files: if the driver is in use and causing problems, get the latest driver from the manufacturer Debug files: ditto Beta files: ditto Display Page It is common for the  Chip type  and  DAC type  fields to be blank; this is not a problem. If the driver listed (under  Main Driver ) is uncertified, a message will appear in the  Notes  section.  The user should contact the display manufacturer for a new driver if he is experiencing problems with this device. Disabling DirectDraw and Direct3D acceleration may help work around driver problems.  Of course, the game s performance will suffer.  After disabling or enabling acceleration, you must close and reopen DxDiag for the change to take effect.  For example, if you disable 3d acceleration then immediately click  Test D3D , it will probably test hardware accelerated 3D as well as software 3D.  If you quit and restart DxDiag it should only test software. Testing DirectDraw runs the following steps: Find and load ddraw.dll Get a pointer to the DirectDrawCreate function in ddraw.dll Call DirectDrawCreate Call pdd->GetCaps Release the DirectDraw object If windowed tests are supported Call DirectDrawCreate (again) Run test #1: Set the cooperative level to normal Create a primary surface Get the primary surface description Do a sequence of colorfill blits to the primary surface Pause Clear the display Force a desktop repaint Release the DirectDraw object Ask user to verify appearance of rectangles Call DirectDrawCreate Run test #2: Set cooperative level to normal Create primary surface Get the primary surface description Create a 200x200 offscreen surface In a loop, colorfill the offscreen surface with black, then colorfill a small white square on the offscreen surface, then blit the offscreen surface to the primary surface Clear the primary surface Force a desktop repaint Release the DirectDraw object Ask user to verify appearance of bouncing box Call DirectDrawCreate Run test #3: Create a test window Set cooperative level to exclusive, fullscreen Set display mode to 640x480x16 Create primary surface with 1 attached back buffer Get the primary surface description Use GetAttachedSurface to get pointer to the back buffer In a loop, colorfill the offscreen surface with black, then colorfill a small white square on the offscreen surface, then flip the front/back buffers Clear the primary surface Set cooperative level back to normal Restore display mode Release the DirectDraw object Ask user to verify appearance of fullscreen bouncing box Free the DirectDraw DLL Testing D3D runs the following steps: Find and load ddraw.dll Get a pointer to the DirectDrawCreate function in ddraw.dll Call DirectDrawCreate Call pdd->GetCaps Release the DirectDraw object Call DirectDrawCreate Run the software D3D test: Create a test window Set cooperative level to exclusive, fullscreen Set the display mode to 640x480x16 Create primary surface with attached back buffer Get primary surface description Use GetAttachedSurface to get ptr to back buffer QueryInterface DD to get D3D interface Create the 3D device, passing the back buffer Create a viewport Add the viewport to the device Set the added viewport to be the current viewport Set the parameters for the viewport Create a light Set the parameters for the light Add the light to the viewport Set the world matrix to identity Set the view matrix to (0, 0, -5) Set up a reasonable projection matrix Create a black material Set the parameters for the black material Create a green material Set the parameters for the green material Create a red material Set the parameters for the red material Create a blue material Set the parameters for the blue material Get a handle to the black material Set the viewport s background material to be the black material handle Set the renderstate to enable dithering Set the ambient light state  Loop 200 times: Set the world matrix to a rotated transform Clear the viewport (target only, since there s no Z-buffer) Call BeginScene Get handle to green material Make it the current light state DrawIndexedPrimitive cube face 1 DrawIndexedPrimitive cube face 2 Get handle to red material Make it the current light state DrawIndexedPrimitive cube face 3 DrawIndexedPrimitive cube face 4 Get handle to blue material Make it the current light state DrawIndexedPrimitive cube face 5 DrawIndexedPrimitive cube face 6 Call EndScene Flip front/back buffers Release everything Set cooperative level back to normal Close the window Restore the display mode Release DirectDraw object Ask user to verify software rendering of cube If hardware is supported Call DirectDrawCreate Repeat above test using hardware device Release DirectDraw object Ask user to verify hardware rendering of cube Free the DirectDraw DLL Sound Page If the driver listed (under  Driver Name ) is uncertified, a message will appear in the  Notes  section.  The user should contact the display manufacturer for a new driver if he is experiencing problems with this device. The DirectSound Test runs the following steps: Find/Load dsound.dll Get a pointer to the DirectSoundCreate function in dsound.dll Call DirectSoundCreate Set the cooperative level to exclusive mode Call GetCaps Load wave resource from file Test DirectSound (2D, software): Create primary sound buffer Create secondary buffer If testing 3D, set buffer position to (-1, 1, 0) Play sound in several formats Release buffers Test DirectSound (3D, software) (same as above) Test DirectSound (2D, hardware) (same as above) Test DirectSound (3D, hardware) (same as above) Release DirectSound object Free dsound library Input Page If any driver is uncertified, beta, or debug, a comment appears in the Notes section.  Consider replacing such drivers if their devices are not working properly. Network Page The Network Test verifies that DirectPlay can successfully do the following: Initialize itself Enumerate available Service Providers (TCP/IP, etc) Create a session Enumerate sessions on a given machine or all machines on the network Join a session Send and receive messages in a session Still Stuck? Page Troubleshoot: This button attempts to run the Win98 Help DirectX Troubleshooter (\windows\help\mdirx.htm) MSInfo: This button attempts to run MSInfo, using the registry key at HKLM\Software\Microsoft\Shared Tools\MSInfo to find the path to it Override: This button sets the  ForceRefreshRage  value of the HKLM\Software\Microsoft\DirectDraw registry key. Report: This button lets you enter user and bug information, then submit your system info to   HYPERLINK mailto:dxfbugs@microsoft.com  dxfbugs@microsoft.com , just like DxBug did. Registry Checking Registry Checking is only performed when DX7 or later is installed In the tables below, a note of   means that the data may be a full path, and the leaf of the path must match the specified data. DDraw: Location Value Notes HKCR\DirectDraw DirectDraw Object HKCR\DirectDraw\CLSID {D7B70EE0-4340-11CF-B063-0020AFC2CD35} HKCR\CLSID\{D7B70EE0-4340-11CF-B063-0020AFC2CD35} DirectDraw Object HKCR\CLSID\{D7B70EE0-4340-11CF-B063-0020AFC2CD35}\InprocServer32 ddraw.dll HKCR\CLSID\{D7B70EE0-4340-11CF-B063-0020AFC2CD35}\InprocServer32 ThreadingModel HKCR\DirectDrawClipper DirectDraw Clipper Object HKCR\DirectDrawClipper\CLSID {593817A0-7DB3-11CF-A2DE-00AA00B93356} HKCR\CLSID\{593817A0-7DB3-11CF-A2DE-00AA00B93356} DirectDraw Clipper Object HKCR\CLSID\{593817A0-7DB3-11CF-A2DE-00AA00B93356}\InprocServer32 ddraw.dll HKCR\CLSID\{593817A0-7DB3-11CF-A2DE-00AA00B93356}\InprocServer32 ThreadingModel HKCR\CLSID\4FD2A832-86C8-11d0-8FCA-00C04FD9189D} DirectDrawEx Object Not checked on Win2000 HKCR\CLSID\4FD2A832-86C8-11d0-8FCA-00C04FD9189D}\InprocServer32 ddrawex.dll HKCR\CLSID\4FD2A832-86C8-11d0-8FCA-00C04FD9189D}\InprocServer32 ThreadingModel Location Value Notes HKLM\Software\Microsoft\Direct3D\Drivers\Direct3D HAL HKLM\Software\Microsoft\Direct3D\Drivers\Direct3D HAL Description HKLM\Software\Microsoft\Direct3D\Drivers\Direct3D HAL {0xe0, 0x3d, 0xe6, 0x84, 0xaa, 0x46, 0xcf, 0x11, 0x81, 0x6f, 0x00, 0x00, 0xc0, 0x20, 0x15, 0x6e} HKLM\Software\Microsoft\Direct3D\Drivers\Ramp Emulation HKLM\Software\Microsoft\Direct3D\Drivers\Ramp Emulation Description HKLM\Software\Microsoft\Direct3D\Drivers\Ramp Emulation {0x20, 0x6b, 0x08, 0xf2, 0x9f, 0x25, 0xcf, 0x11, 0xa3, 0x1a, 0x00, 0xaa, 0x00, 0xb9, 0x33, 0x56} HKLM\Software\Microsoft\Direct3D\Drivers\RGB Emulation HKLM\Software\Microsoft\Direct3D\Drivers\RGB Emulation Description HKLM\Software\Microsoft\Direct3D\Drivers\RGB Emulation {0x60, 0x5c, 0x66, 0xa4, 0x73, 0x26, 0xcf, 0x11, 0xa3, 0x1a, 0x00, 0xaa, 0x00, 0xb9, 0x33, 0x56} HKLM\ Software\Microsoft\Direct3D\DX6TextureEnumInclusionList\16 bit Bump DuDv 00080000 0 16 ff ff00 0 0 HKLM\Software\Microsoft\Direct3D\DX6TextureEnumInclusionList\16 bit BumpLum DuDv 000C0000 0 16 1f 3e0 fc00 0 HKLM\Software\Microsoft\Direct3D\DX6TextureEnumInclusionList\16 bit Luminance Alpha 00020001 0 16 ff 0 0 ff00 HKLM\Software\Microsoft\Direct3D\DX6TextureEnumInclusionList\24 bit BumpLum DuDv 000C0000 0 24 ff ff00 ff0000 0 HKLM\Software\Microsoft\Direct3D\DX6TextureEnumInclusionList\8 bit Luminance 00020000 0  8 ff 0 0 0 HKCR\Direct3DRM Direct3DRM Object HKCR\Direct3DRM\CLSID {4516EC41-8F20-11d0-9B6D-0000C0781BC3} HKCR\CLSID\{4516EC41-8F20-11d0-9B6D-0000C0781BC3} Direct3DRM Object HKCR\CLSID\{4516EC41-8F20-11d0-9B6D-0000C0781BC3}\InprocServer32 d3drm.dll HKCR\CLSID\{4516EC41-8F20-11d0-9B6D-0000C0781BC3}\InprocServer32 ThreadingModel HKCR\DirectXFile DirectXFileObject HKCR\DirectXFile\CLSID {4516EC43-8F20-11D0-9B6D-0000C0781BC3} HKCR\CLSID\{4516EC43-8F20-11D0-9B6D-0000C0781BC3} DirectXFile Object HKCR\CLSID\{4516EC43-8F20-11D0-9B6D-0000C0781BC3}\InprocServer32 d3dxof.dll HKCR\CLSID\{4516EC43-8F20-11D0-9B6D-0000C0781BC3}\InprocServer32 ThreadingModel DInput: Location Value Notes HKCR\CLSID\{25E609E0-B259-11CF-BFC7-444553540000} HKCR\ CLSID\{25E609E0-B259-11CF-BFC7-444553540000}\InProcServer32 dinput.dll HKCR\CLSID\{25E609E0-B259-11CF-BFC7-444553540000}\InProcServer32 ThreadingModel HKCR\CLSID\{25E609E1-B259-11CF-BFC7-444553540000} HKCR\CLSID\{25E609E1-B259-11CF-BFC7-444553540000}\InProcServer32 dinput.dll HKCR\CLSID\{25E609E1-B259-11CF-BFC7-444553540000}\InProcServer32 ThreadingModel HKCR\CLSID\{92187326-72B4-11d0-A1AC-0000F8026977} not on Win2k HKCR\CLSID\{92187326-72B4-11d0-A1AC-0000F8026977}\ProgID not on Win2k HKCR\CLSID\{92187326-72B4-11d0-A1AC-0000F8026977}\InProcHandler32 gchand.dll not on Win2k,Leaf HKCR\CLSID\{92187326-72B4-11d0-A1AC-0000F8026977}\InProcServer32 gcdef.dll not on Win2k, Leaf HKCR\CLSID\{92187326-72B4-11d0-A1AC-0000F8026977}\InprocServer32 ThreadingModel Apartment not on Win2k DMusic: There are a huge number of DMusic entries.  28 Classes are registered in the following format: Location Value Notes HKCR\Microsoft.<name> <name> HKCR\Microsoft.<name>\CLSID <guid> HKCR\Microsoft.<name>\CurVer Microsoft.<name>.1 HKCR\Microsoft.<name>.1 <name> HKCR\Microsoft.<name>.1\CLSID <guid> HKCR\CLSID\<guid> <name> HKCR\CLSID\<guid>\InprocServer32 <leaf> HKCR\CLSID\<guid>\InprocServer32 ThreadingModel Apartment HKCR\CLSID\<guid>\ProgID Microsoft.<name>.1 HKCR\CLSID\<guid>\VersionIndependentProgID Microsoft.<name> Here are the 28 classes: DirectMusicCollection {480FF4B0-28B2-11D1-BEF7-00C04FBF8FEF} dmusic.dll DirectMusic {636B9F10-0C7D-11D1-95B2-0020AFDC7421} dmusic.dll DirectMusicSection {3F037241-414E-11D1-A7CE-00A0C913F73C} dmstyle.dll DirectMusicSynth {58C2B4D0-46E7-11D1-89AC-00A0C9054129} dmsynth.dll DirectMusicBand {79BA9E00-B6EE-11D1-86BE-00C04FBF8FEF} dmband.dll DirectMusicSynthSink {AEC17CE3-A514-11D1-AFA6-00AA0024D8B6} dmsynth.dll DirectMusicPerformance {D2AC2881-B39B-11D1-8704-00600893B1BD} dmime.dll DirectMusicSegment {D2AC2882-B39B-11D1-8704-00600893B1BD} dmime.dll DirectMusicSegmentState {D2AC2883-B39B-11D1-8704-00600893B1BD} dmime.dll DirectMusicGraph {D2AC2884-B39B-11D1-8704-00600893B1BD} dmime.dll DirectMusicTempoTrack {D2AC2885-B39B-11D1-8704-00600893B1BD} dmime.dll DirectMusicSeqTrack {D2AC2886-B39B-11D1-8704-00600893B1BD} dmime.dll DirectMusicSysExTrack {D2AC2887-B39B-11D1-8704-00600893B1BD} dmime.dll DirectMusicTimeSigTrack {D2AC2888-B39B-11D1-8704-00600893B1BD} dmime.dll DirectMusicStyle {D2AC288a-B39B-11D1-8704-00600893B1BD} dmstyle.dll DirectMusicChordTrack {D2AC288b-B39B-11D1-8704-00600893B1BD} dmstyle.dll DirectMusicCommandTrack {D2AC288c-B39B-11D1-8704-00600893B1BD} dmstyle.dll DirectMusicStyleTrack {D2AC288d-B39B-11D1-8704-00600893B1BD} dmstyle.dll DirectMusicMotifTrack {D2AC288e-B39B-11D1-8704-00600893B1BD} dmstyle.dll DirectMusicChordMap {D2AC288f-B39B-11D1-8704-00600893B1BD} dmcompos.dll DirectMusicComposer {D2AC2890-B39B-11D1-8704-00600893B1BD} dmcompos.dll DirectMusicLoader {D2AC2892-B39B-11D1-8704-00600893B1BD} dmloader.dll DirectMusicBandTrack {D2AC2894-B39B-11D1-8704-00600893B1BD} dmband.dll DirectMusicChordMapTrack {D2AC2896-B39B-11D1-8704-00600893B1BD} dmcompos.dll DirectMusicAuditionTrack {D2AC2897-B39B-11D1-8704-00600893B1BD} dmstyle.dll DirectMusicMuteTrack {D2AC2898-B39B-11D1-8704-00600893B1BD} dmstyle.dll DirectMusicTemplate {D30BCC65-60E8-11D1-A7CE-00A0C913F73C} dmcompos.dll DirectMusicSignPostTrack {F17E8672-C3B4-11D1-870B-00600893B1BD} dmcompos.dll DSound: Location Value Notes HKCR\DirectSound DirectSound Object HKCR\DirectSound\CLSID {47D4D946-62E8-11cf-93BC-444553540000} HKCR\CLSID\{47D4D946-62E8-11cf-93BC-444553540000} DirectSound Object HKCR\CLSID\{47D4D946-62E8-11cf-93BC-444553540000}\InprocServer32 dsound.dll HKCR\CLSID\{47D4D946-62E8-11cf-93BC-444553540000}\InprocServer32 ThreadingModel HKCR\DirectSoundCapture DirectSoundCapture Object HKCR\ DirectSoundCapture Object\CLSID {B0210780-89CD-11d0-AF08-00A0C925CD16} HKCR\CLSID\{B0210780-89CD-11d0-AF08-00A0C925CD16} DirectSoundCapture Object HKCR\CLSID\{B0210780-89CD-11d0-AF08-00A0C925CD16}\InprocServer32 dsound.dll HKCR\CLSID\{B0210780-89CD-11d0-AF08-00A0C925CD16}\InprocServer32 ThreadingModel
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\readme.txt ===
DirectX Graphics Directory Structure
====================================

<root>
+---dxg
|   +---d3d              Legacy Direct3D DX6 and DX7 tree
|   |   +---dx6          Generates d3dim.dll (DX6)
|   |   +---dx7          Generates d3dim700.dll (DX7)
|   |   \---ref          Generates d3dref.dll (DX6/7)
|   +---d3d8             D3D8
|   |   +---fe           FrontEnd
|   |   +---fw           FrameWork
|   |   +---inc          D3D8 private headers
|   |   +---lib
|   |   +---link         Generates d3d800.dll
|   |   +---rast
|   |   +---shaders
|   |   +---tnl
|   |   \---util
|   +---d3dx             D3DX
|   +---dd               DDraw (DX1-7 support and win9x "kernel" for DX8+)
|   |   +---ddraw        DDraw DX1-7 and win9x kernel (daytona if necessary)
|   |   |   +---blitlib
|   |   |   +---ddhel
|   |   |   +---ddhelp   Generates ddhelp.exe (win9x only)
|   |   |   +---ddraw    Generates ddraw.dll (daytona if necessary)
|   |   |   +---ddraw16  Generates ddraw16.dll (win9x only)
|   |   |   +---dxapi    Generates dxapi.sys (win9x only)
|   |   |   \---main
|   |   \---ddrawex      Generates ddrawex.dll (if necessary)
|   +---docs             DXG docs
|   +---genx             Generates global DXG public (and private?) headers
|   |                    - Equivalent to nt\private\genx\windows\inc
|   |                    - No other directory should reference these files
|   |                    - Generates files in nt\private\inc, nt\public\sdk\inc
|   +---inc              Some generated global DXG headers
|   +---misc             Maybe move this to stool\dxg\dd eventually
|   +---tests            DXG tests
|   \---tools            DXG tools (vddraw for win9x, etc.)
+---inc                  Some other global headers (for version and win9x)
\---public               Tools not in NT tree for building win9x binaries
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\d3d\dx6\rast\readme.txt ===
**** directories *****

d3dif - D3D interface.  This contains the sources for the interface
between the D3D runtime and the rasterizers.

bin - Rasterizer-specific tools.  This holds the m4.exe needed to build
the numerous m4-ized C++ and asm source files.

inc - Rasterizer-private header files.

refrast - Reference rasterizer sources.  This is the core of the reference
rasterizer, holding all sources which are made public with the DDK.  The
reference rasterizer core is fully independent of any D3D or DDraw
internals, and is connected to the runtime via refif.cpp in the d3dif
directory.  The file inc\refrast.h is also part of the reference
rasterizer package.

setup - Primitive setup.  Contains C++ and x86 assembly for primitive
setup and edge walking.

spaninit - Span iterator management code.

cspan - C span iterators.  These are the span iterators used on non-MMX
(including alpha) machines.

cmmxspan, mmxemul - C span iterators which closely model the MMX versions
for development and debug purposes.  The mmxemul is a library which
emulates the MMX arithmetic functions.  This is a full set of span
iterators which exactly matches the set in mmxspan, and are used when the
???  device GUID is passed to device create.  These are for internal
debug/test only and are not used in the product (the associated GUID is
not in the public d3d.h).

mmxspan - MMX assembly span iterators.

mlspan - Monolithic span iterators.

rampmat - Ramp rasterizer material processing.  See rampmat/ramp.txt for
further explanation (the horror...).

rampspan - Ramp rasterizer span iterators.  C and x86 assembly.

d3drast - This directory is used only to build the d3drast.dll, which is a
library which contains only the rasterizers (accessed via the HAL provider
interface).  This is a test-only library and is not part of the product
build.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\d3d\dx6\rast\codeconv.txt ===
Project Coding Conventions

***** Declarations, Naming and Hungarian

The following Hungarian conventions are used in the tree, as a minimum.
Other conventions may be added to these, but should not change the meaning of
any of these conventions.  If a variable does not start with Hungarian,
it should begin with a capital letter (Foo) to so indicate.  Otherwise,
the first letter after the Hungarian should be capitalized (pfnFoo).
These prefixes are ordered in the order of their precedence (So m_ is
before p is before fn, so you write m_pfnFoo).


Prefix  Meaning                 Why
-------------------------------------------------------------------------------
g_      Global                  Prefix of global variables.
m_      Member of Class         All methods of class will have these variables
                                always in scope.  They need to be different to
                                protect the namespace in methods.
p       Pointer                 Always helpful to know if variable is
                                pointer or pointer pointer (pp)
h       Handle                  Denotes a reference to memory that cannot be
                                directly interpreted as a pointer
b       Bool                    To distinguish TRUE/FALSE containing variable
                                from other integers
c       Count (signed integer)  To indicate that this integer contains a count
                                of something. Is signed so (--count < 0) tests
                                can be used.
f       Floating point (single) To indicate native floating point type.
d       Floating point (double)
fn      Function                Usually with pfn to indicate a pointer to a
                                function.
i       Signed integer          i and u are used to distinguish signed
                                and unsigned integers
o       Offset                  Used to flag memory offsets.  Useful in memory
                                structures in DSP and Chip simulations.
s       String                  s and sz distinguish between non-zero
                                terminated and zero terminated strings.
sz      Zero Terminated String
u       Unsigned integer


'p' should be used in conjunction with a base type tag for pointers to
simple types, so a pointer to an unsigned integer is 'pu' rather than
just 'p'.  Complex types do not have tags so pointers to structures or
objects will only have a 'p' prefix.

***** Differences From Other Hungarian Styles

Many kinds of Hungarian are used around the company, ranging from very
strict to very relaxed.  The Hungarian described here is fairly relaxed and
the following Hungarian conventions are not used:

There is no distinction between far and near pointers.  Pointers are
always 'p'; there is no 'lp'.

Arrays are not distinguished with a special prefix.
	int iFoo[7] instead of int aiFoo[7] or int rgiFoo[7].

Functions are not tagged for return type.
	int Foo() instead of int iFoo().

Variables holding flags are not specially distinguished.
	UINT32 uFlags instead of UINT32 grfFlags or UINT32 fFlags.

Classes and structs do not have tags.
	FooClass *pFoo instead of FooClass *pfcFoo.

Examples:
TCHAR g_szDllName[80];
PHANDLE phFile;
PD3DVERTEX pVtx;

C++ const's follow the Hungarian of their type.  #define's are all cap's.
Classes are mixed case starting with a capital.  Structures are all cap's, with
"tagNAME" used to name the structure, and "NAME" used to name the typedef:

typedef struct tagCHUNKELEM
{
    struct tagCHUNKELEM *pNext;
    EscNodeBase *pNode;
    EscMatrix *pMatrix;
} CHUNKELEM, *PCHUNKELEM;

Structure types should always have a P<struct> typedef associated with
them and P<type> should be used in favor of <type> *.

***** Standard Types

A set of standard types of known size has been defined.  These types
should be used for any data element that must be a particular size.

	typedef signed char         INT8;
	typedef short int           INT16;
	typedef long int            INT32;
	typedef __int64             INT64;
	typedef unsigned char       UINT8;
	typedef unsigned short int  UINT16;
	typedef unsigned long int   UINT32;
	typedef unsigned __int64    UINT64;
	typedef float               FLOAT;
	typedef double              DOUBLE;

If a data element does not require a particular size then the standard
INT and UINT types can be used.  FLOAT and DOUBLE are IEEE standard formats
and take 32 and 64 bits, respectively.

The standard Win32 TCHAR should be used for strings where the character
set can be ANSI or Unicode.  __TEXT() can be used to declare TCHAR
strings and the CRT file tchar.h has many standard routines #defined for
Unicode and ANSI builds.

***** Comments for Files, Functions and Code

Comments should use // instead of /* */ unless an in-line comment is
absolutely necessary.

All files must have a descriptive header comment which gives information
on the contents of the file and any other file-specific information.

C/C++ style:

//-----------------------------------------------------------------------------
//
// This file contains code dealing with foo and also bar.
//
// Copyright (C) Microsoft Corporation, 1997.
//
//-----------------------------------------------------------------------------

Assembly style is the same except with ; instead of //.

;------------------------------------------------------------------------------
;
; This file has optimized routines for foo.
;
; Copyright (C) Microsoft Corporation, 1997.
;
;------------------------------------------------------------------------------

All functions and methods must have a header comment giving an overview
of what the function does, what its inputs are and what its outputs are.

C/C++ style:

//-----------------------------------------------------------------------------
//
// CreateFoo
//
// Takes a bar and a baz and creates a foo from them.  If the foo is
// successfully created it is returned and the baz is updated to
// reflect the new count of foos using it.
//
//-----------------------------------------------------------------------------

Assembly style has ; instead of // and more information about exactly
how the code is entered and left.  If the function is declared with
arguments then no explicit documentation is necessary in the header, but
if arguments are passed in registers then the header should indicate
this.  Return values are assumed to be in eax unless otherwise specified.

;------------------------------------------------------------------------------
;
; CreateFoo
;
; Takes a bar and a baz and creates a foo from them.  If the foo is
; successfully created it is returned and the baz is updated to
; reflect the new count of foos using it.
;
; Expects bar in eax and baz in ebx.
; Destroys ecx and edx.
; 
;------------------------------------------------------------------------------

All code should have at least a simple comment for each basic block and
more comments as necessary.  Assembly code should be heavily commented
with notes on register and FP stack usage, unusual tricks, instruction
pairing issues, etc.

Classes should generally have a function-like comment describing the
reason for their existence and an overview of their interface.  Trivial
classes do not need a comment.  Structs generally need only a mention of
their use, although if they have complicated features or methods they
may need a class-like header.

***** Microsoft Internal

Any code or comments which are for internal use only are bracketed as 
follows.  The brackets and text are stripped for the file versions which 
are made public.

//@@BEGIN_MSINTERNAL
    microsoft-only stuff here
//@@END_MSINTERNAL

***** File Naming

We'll be using a mix of C and C++ so we need to distinguish files
that are C-compatible from those that are not.

Use .c for plain C files.
Use .h for plain C headers or headers which can be included safely in
plain C files.  This includes headers which have C++ constructs
protected by ifdef __cplusplus.  .h files that may be included in C++
code should have internal extern "C" blocks.
Use .cpp for C++ files.
Use .hpp for C++-only headers.

***** General Code Style

Lines should not exceed eighty columns.  This is much more pleasant for
those of us that do not use large windows.

Functions should be fewer than one hundred lines long unless structure
or performance requires a longer function.  In general functions should
be even shorter, with sub-functions created as necessary.

Any commented-out code must have an explanatory comment with it
describing why it is commented out but not removed entirely.

Global variables should be avoided unless absolutely necessary.

Use uSize members of structs that may need to be resized later with
backwards compatibility.  When using uSize make sure to validate sizes
everywhere to force callers to use it properly.

Headers should be protected with #ifndef <file> #define <file> #endif
blocks for inclusion safety.

***** C++ Usage Guidelines

C++ has a lot of things in it which can make code more difficult to read
or slower.  The following is a list of suggestions on things to
avoid.  These rules can be broken if necessary.

Avoid overloading operators.
Avoid default parameters.
Avoid multiple inheritance.
Avoid exceptions.  This means that constructors cannot fail since they
can't return anything.  If an object requires initialization that can
fail the constructor should put the object in an invalid state and a
method called Initialize should be used to fully create the object.
Avoid public data members.  Use accessor methods instead.
Avoid placing method bodies inline in class declarations.  Bodies of
inline methods should follow the class declaration in the header file.
Avoid naming conflicts with functions so that :: is not needed.

***** C/C++ Code Style

Indentation and spacing should be done entirely with spaces; no tabs
should be used.  One indentation level is four spaces.

Braces should be on separate lines and aligned with each other.  All
statements must be bracketed even if they are only a single line.

Case statements should align with the brackets of the switch.  break
statements in case statements should be indented once from the case.

Functions should be declared so that their name begins on the first
character of a line.  Return types, calling conventions and other
decorations should be on a preceeding line.  Arguments can immediately
follow the name.

Functions should always declare a return type and use (void) if they
have no arguments.

Complete Example:

foo.hpp:
//-----------------------------------------------------------------------------
//
// This file contains the declaration of the Foo class.
//
// Copyright (C) Microsoft Corporation, 1997.
//
//-----------------------------------------------------------------------------

#ifndef _FOO_HPP_
#define _FOO_HPP_

// Flags for the Foo class.
#define FOO_INVALID	0x00000001
#define FOO_MATCH	0x00000002

// Special numbers for checking.
#define FOO_RETURN_NEGONE	0xfefefefe
#define FOO_DO_NOTHING		0xefefefef

//-----------------------------------------------------------------------------
//
// class Foo
//
// The Foo class is responsible for keeping a buffer of things to check.
//
//-----------------------------------------------------------------------------

class Foo
{
public:
    Foo(void);
    BOOL Initialize(int cElts);
    ~Foo(void);

    int Check(int iCheck);
    inline UINT32 GetFlags(void);

private:
    INT m_cElts;
    INT m_cUsed;
    PINT m_piBuffer;
    UINT32 m_uFlags;
};

//-----------------------------------------------------------------------------
//
// Foo::GetFlags
//
// Accessor method for a Foo's flags.
//
//-----------------------------------------------------------------------------

inline UINT32
GetFlags(void)
{
    return m_uFlags;
}

#endif // _FOO_HPP_

foo.cpp:
//-----------------------------------------------------------------------------
//
// This file contains the implementation of the Foo class.
//
// Copyright (C) Microsoft Corporation, 1997.
//
//-----------------------------------------------------------------------------

#include "foo.hpp"

//-----------------------------------------------------------------------------
//
// Foo::Foo
//
// Initializes a Foo to an invalid state.
//
//-----------------------------------------------------------------------------

Foo::Foo(void)
{
    m_piBuffer = NULL;
    m_uFlags = FOO_INVALID;
    m_cElts = 0;
    m_cUsed = 0;
}

//-----------------------------------------------------------------------------
//
// Foo::Initialize
//
// Constructs a Foo.
//
//-----------------------------------------------------------------------------

BOOL
Foo::Initialize(int cElts)
{
    // Allocate a buffer.
    m_piBuffer = new int[cElts];
    if (m_piBuffer == NULL)
    {
        return FALSE;
    }

    m_cElts = cElts;
    m_uFlags = 0;

    return TRUE;
}

//-----------------------------------------------------------------------------
//
// Foo::~Foo
//
// Cleans up a Foo.
//
//-----------------------------------------------------------------------------

Foo::~Foo(void)
{
    delete m_piBuffer;
}

//-----------------------------------------------------------------------------
//
// Foo::Check
//
// Checks for the given number in the buffer.  If a match is found,
// return the index of the match.  If no match is found, add the number
// to the buffer and return its index.  If the buffer overflows, -1 is
// returned.
//
// If the number is one of the special numbers, return its special code.
//
//-----------------------------------------------------------------------------

int
Foo::Check(int iCheck)
{
    int i;

    // Check for initialization.
    if (m_uFlags & FOO_INVALID)
    {
        return -1;
    }

    // Check for a special number.
    switch(iCheck)
    {
    case FOO_RETURN_NEGONE:
        return -1;
    case FOO_DO_NOTHING:
        break;
    default:
        break;
    }

    // Look for an existing match.
    for (i = 0; i < m_cUsed; i++)
    {
        if (m_piBuffer[i] == iCheck)
        {
            m_uFlags |= FOO_MATCH;
            return i;
        }
    }

    // No match was found, so add the new number if there's space.
    if (m_cUsed == m_cElts)
    {
        return -1;
    }

    m_piBuffer[m_cUsed] = iCheck;
    return m_cUsed++;
}

***** Assembly Style

All assembly ops and registers should be in lower case.  Each line is
indented eight spaces from the left margin.  Assembler directives and
macros are always in uppercase.

Complete Example:

;------------------------------------------------------------------------------
;
; This file has optimized routines for foo.
;
; Copyright (C) Microsoft Corporation, 1997.
;
;------------------------------------------------------------------------------

.386p
.MODEL FLAT

.CODE

;------------------------------------------------------------------------------
;
; Foo
;
; Takes a pointer to a bar and returns the total bit count for it and its
; successor.
;
;------------------------------------------------------------------------------

Foo PROC PUBLIC,
        pBar:PBAR

        LOCAL cBits:DWORD

        ; Get bit count for current bar.
        mov ecx, pBar
        mov eax, [ecx+BAR_cBits]
        mov cBits, eax

        ; Get successor bar in ecx.
        push ecx
        call UpdateBar
        mov ecx, eax

        ; Sum bit counts for return.
        mov eax, cBits
        add eax, [ecx+BAR_cBits]
        ret
Foo ENDP

END

***** Asserts, Debug Output and Other Debugging Aids

Assert checks should be placed where appropriate.  These should be used 
where unexpected but still possible bad things can happen.

Note that parameter validation will occur in the D3D runtime, so checking 
of state and items like vertex type is not necessary.
                                                     
We will use the new DX DPF support defined in newdpf.h.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\d3d\dx6\rast\mmxspan\monolith.txt ===
This is a brief description of what is in the ml*.mas MMX monolithic
routines.  All monolithics handle both Gouraud and Flat shading (although
Flat shading is no faster).

16 bit Z Buffer (Less Than or equal) 565 color output mode, 565 texture input
1. No Texture
2. Non Perspective Texturing Point
3. Perspective Texturing Point
4. Perspective Texturing Bilinear
5. Non Perspective Texturing Point Modulate
6. Perspective Texturing Point Modulate
7. Perspective Texturing Bilinear Modulate

No Z Buffer 565 color output mode, 565 texture input
8. No Texture
9. Non Perspective Texturing Point
10. Perspective Texturing Point
11. Perspective Texturing Bilinear
12. Non Perspective Texturing Point Modulate
13. Perspective Texturing Point Modulate
14. Perspective Texturing Bilinear Modulate

16 bit Z Buffer (Less Than or equal) 32 bit color output mode,  32 bit texture
input
15. No Texture
16. Non Perspective Texturing Point
17. Perspective Texturing Point
18. Perspective Texturing Bilinear
19. Non Perspective Texturing Point Modulate
20. Perspective Texturing Point Modulate
21. Perspective Texturing Bilinear Modulate

No Z Buffer 32 bit color mode,  32 bit texture input
22. No Texture
23. Non Perspective Texturing Point
24. Perspective Texturing Point
25. Perspective Texturing Bilinear
26. Non Perspective Texturing Point Modulate
27. Perspective Texturing Point Modulate
28. Perspective Texturing Bilinear Modulate
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\d3d\dx6\rast\mmxspan\readme.txt ===
Status of general MMX span routines.

09/08/97 Checked in MMX code.
  There is no way that the current code will compile and run.  I haven't
  even tried to compile it. This is primarily to have it backed up and
  to let anyone that is interested see what has been done.
  The orginal C (or MCP) code are comments of these ASM or MAS files.

  The ACP directory contains a program that generates the .INC file
  for offsets to all the data.  This program was used by Drew and
  seems to work better than H2INC.  We should probably only have one
  of these that would go in the inc directory, but it's not done that
  way now (Plus, my code doesn't generate it based on a makefile.

  Three regular registers have been set aside for use to access the data.
  Since these are passed to every routine, I don't have to pass anything
  on the stack as long as I don't modify them.  I have modified them a
  couple of times before I added this and they need to be changed to esi,
  edi, ebp or eax (eax is usually used for the next indirect jump).

  ebx is a pointer to the D3DI_SPANITER data (Also Accesses the SI stuff
    inside it).
  ecx is a pointer to the D3DI_RASTPRIM data.
  edx is a pointer to tge D3DI_RASTSPAN data.

  There are a few very useful m4 macros to acess this data in
  readable way (It also made converting C code easier):

define(`XpCtxSI',`[ebx+D3DI_SPANITER_$1]')dnl
define(`XpCtx',`[ebx+D3DI_RASTCTX_$1]')dnl
define(`XpP', `[ecx+D3DI_RASTPRIM_$1]')dnl
define(`XpS', `[edx+D3DI_RASTSPAN_$1]')dnl

  Things that need to be done.
    1) New Special W divide.   MMX newton's method code has already
        been written, but it was very specialized (I negated the
        OoW and OoWDX so that 2 - Oow*iW could be done with a pmadd
        and a few other things.)  Code shouldn't have to change much.

    2) Assembly equivalents to the ACMP, ZCMP macros.  A version of
        these has also been written, but most compares were done in
        a reverse order (to preserve registers).  The MMX Alpha and
        Z setup will most likely have to be different.  This means
        that the atest.asm has not been coded.  A test.mas file is
        written, and is missing ZCMP16 and ZCMP32.  The other 4
        specific code cases are done exactly like the C version
        except the iXorMask always seems to be inverted do to how
        the comparison is done.

    3) BufWrite is not implemented.  The code for doing this has
        been done in APP notes.  The 16 bit cases use a pmaddw
        to combine the colors more quickly than shifting.  There
        is also work beening done on a quick dithering routine.
        The MMX dithering routine will use a pcmpgtw to compare
        with the dither table and the do a psubssw since if the
        color value is to be incremented, then the mask will be
        all ones (= -1). Subtracting it will increment the color.
        The saturation is used to not increase too much.  The
        only problem to this is that the color is unsigned so
        it has to be shifted down by one to saturate to 7fff.

    4) BuffRead is not done.  It uses almost identical routines
        as those in texread.


    5) Lots of clean up and 64 bit constants that need to be in
        memory.  I have to figure out what registers get passed
        to routines that are called and what is passed back.
        In some cases, it may be possible to pass data from one
        bead to the next using registers.  This maybe difficult
        though.

    6) ColorBld conversion.  Mostly ROP stuff and calling of
        bldfuncs.asm.  ROP stuff should be pretty easy.

    7) Since function names are the same, if I made a header
        file declaring them extern "C" { },  the assembly code
        could concievably execute in place of the current c code.
        This is where the true bomb test is.

    8) There's probably more, but there is always more.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\d3d\dx6\rast\rampmat\ramp.txt ===
"Ramp is hell," says Gen. William Tecumseh Sherman, now 60, in an address to
a Columbus, Ohio, reunion of the G.A.R. (Grand Army of the Republic). "There is
many a boy here who looks on ramp as all speed, but, boys, it is all hell. You
can bear this warning voice to generations yet to come."
(Quote from 1880 in reference to the U.S. Civil Ramp)

Introduction
============

First, some philosophy and intent.  Ramp is provided in DX6 for compatibility
with DX5, and our implementation is intended to work as well but no better than
ramp did in DX5.  We make no attempt to clean up or generalize ramp, and we
hope to maintain the same quirks the original implementation had, largely
through the literal reuse of DX5 code, where possible.

That said, it is useful to know where the ramp files in DX6 came from in DX5 so
the code can be examined in its original context when questions arise.   The
diesel\direct3d\rast\rampmat (Ramp Material) directory handles creating
rampmap's and palettes from materials and textures.  The
diesel\direct3d\rast\rampspan directory has the span rasterizers for ramp.

DX6                             DX5
diesel\direct3d\rast\rampmat\   diesel\direct3d\drivers\
cmap.h  . . . . . . . . . . . . include\cmap.h
colall.h  . . . . . . . . . . . include\colall.h
indcmap.cpp . . . . . . . . . . gen\indcmap.c
indcmap.h . . . . . . . . . . . include\indcmap.h
palette.cpp . . . . . . . . . . gen\palette.c
palette.h . . . . . . . . . . . include\palette.h
pch.cpp . . . . . . . . . . . . new, for faster compiles
rampif.h  . . . . . . . . . . . new, interface to d3dif
rampmap.cpp . . . . . . . . . . gen\rampmap.c
rampmap.h . . . . . . . . . . . include\rampmap.h
rampmat.cpp . . . . . . . . . . ramp\ramplt.cpp
rampmat.hpp . . . . . . . . . . ramp\ramplti.h
rampmisc.h  . . . . . . . . . . new, odds and ends
rgbmap.cpp  . . . . . . . . . . gen\rgbmap.c
rgbmap.h  . . . . . . . . . . . include\rgbmap.h

diesel\direct3d\rast\rampspan\  diesel\direct3d\drivers\
rrampgen.cpp  . . . . . . . . . ramp\rampgen.c
Other files in rampspan directory based on general beaded span code.

Ramp rasterization is pretty straight forward.  We just do what the DX5 code
did, within the new span rasterization architecture.  Therefore, the rest of
this document will describe the ramp material code.

Exported API's to d3dif
=======================

These are all declared in rampif.h and implemented in rampmat.cpp.  For
convenience, the in file documentation is gathered together here.

//-----------------------------------------------------------------------------
//
// RLDDIRampCreate
//
// Creates the original RLDDIRampLightingDriver with associated lists.  The
// pointer returned is kept in pCtx->pRampDrv.
//
//-----------------------------------------------------------------------------
RLDDIRampLightingDriver* RLDDIRampCreate(PD3DI_RASTCTX pCtx);

//-----------------------------------------------------------------------------
//
// RLDDIRampDestroy
//
// Destroys a RLDDIRampLightingDriver with all associated objects and memory.
// The pCtx->pRampDrv pointer should be set to NULL after this occurs.
//
//-----------------------------------------------------------------------------
void RLDDIRampDestroy(RLDDIRampLightingDriver* drv);

//-----------------------------------------------------------------------------
//
// RLDDIRampBeginSceneHook
//
// Called at clear time to advance material ages and process deferred color
// setting.  Also deletes orphaned IntMaterials.
//
//-----------------------------------------------------------------------------
void RLDDIRampBeginSceneHook(RLDDIRampLightingDriver* driver);

//-----------------------------------------------------------------------------
//
// RLDDIRampEndSceneHook
//
// Called at update time to reclaim unused color resources and reclaim
// memory for old IntMaterials.
//
// The age1 list will contain materials which were active last frame
// and have not been used since the last Clear.
// We remove their colour resources.
//
// The agemax list will contain inactive materials which have not
// been used for AGE_MAX-1 frames.  These are obsolete and we reclaim
// their memory.
//
// NOT CALLING THIS CONSTITUTES A MEMORY LEAK.
//
//-----------------------------------------------------------------------------
void RLDDIRampEndSceneHook(RLDDIRampLightingDriver* driver);

//-----------------------------------------------------------------------------
//
// RLDDIRampMaterialChanged
//
// Called when the contents of D3DMATERIAL we have already made a ExtMaterial
// for changes.
//
//-----------------------------------------------------------------------------
long RLDDIRampMaterialChanged(RLDDIRampLightingDriver* driver, D3DMATERIALHANDLE hMat);

//-----------------------------------------------------------------------------
//
// RLDDIRampSetMaterial
//
// Called when a D3DLIGHTSTATE_MATERIAL changes, which sets the
// driver->current_material.
//
//-----------------------------------------------------------------------------
long RLDDIRampSetMaterial(RLDDIRampLightingDriver* driver, D3DMATERIALHANDLE hMat);

//-----------------------------------------------------------------------------
//
// RLDDIRampCreateMaterial
//
// Called to create a new ExtMaterial for a given D3DFE_MATERIAL.
//
//-----------------------------------------------------------------------------
long RLDDIRampCreateMaterial(RLDDIRampLightingDriver* driver, D3DMATERIALHANDLE hMat, PD3DI_RASTCTX pCtx);

//-----------------------------------------------------------------------------
//
// RLDDIRampDestroyMaterial
//
// Called to delete a ExtMaterial and all associated underlying memory and rampmap
// allocations for a given D3DFE_MATERIAL.
//
//-----------------------------------------------------------------------------
long RLDDIRampDestroyMaterial(RLDDIRampLightingDriver* driver, D3DMATERIALHANDLE hMat);

//-----------------------------------------------------------------------------
//
// RLDDIRampMaterialToPixel
//
// Call to convert a previously created material to a color for use in clearing
// the color buffer, for example.
//
//-----------------------------------------------------------------------------
unsigned long RLDDIRampMaterialToPixel(RLDDIRampLightingDriver* driver,
D3DMATERIALHANDLE hMat);

//-----------------------------------------------------------------------------
//
// RLDDIRampUpdateDDPalette
//
// Called before the destination DirectDraw surface is displayed, to set its palette.
//
//-----------------------------------------------------------------------------
long RLDDIRampUpdateDDPalette(PD3DI_RASTCTX pCtx)

/*
 * Find what range of values lighting should take.  The base is the
 * pixel value (in fixed point) of the dark end of the material.  The
 * shift value is user to convert a 0.16 fixed point shade into the
 * range needed for the material. e.g.
 *
 *      pixel = base + (VALTOFX8(shade) << shift);
 *
 */
HRESULT ExtMaterial::FindLightingRange(unsigned long* base,
                                       unsigned long* size,
                                       BOOL* specular,
                                       unsigned long** texture_colors);

//-----------------------------------------------------------------------------
//
// RLDDIRampMakePaletteRGB8
//
// Call to set up the RGB8 palette and rampmap.  This is a palette of 216 (== 6**3)
// entries of 6 gradations each for r, g, b.  Using this palette requires
// multiplies by 6.
//
//-----------------------------------------------------------------------------
long RLDDIRampMakePaletteRGB8(RLDDIRampLightingDriver* driver);

Classes
=======

There are 3 primary classes that handle ramp materials.  All the classes make
significant use of the diesel\direct3d\d3dim\inc\lists.hpp linked list handling
macros.  See lists.hpp (especially the example code at the end) for details.

ExtMaterial (rampmat.hpp).
/*
 * An ExtMaterial is the underlying driver object for an LPDIRECT3DMATERIAL.
 * When used, it creates IntMaterials which are distinguished by different
 * ambient light, fog, D3DMATERIAL value etc.
 *
 * The ExtMaterials are kept on a list in the driver and if not explicitly
 * freed, they are cleaned up when the driver is destroyed.
 *
 * The IntMaterials can outlive the ExtMaterial in the case that the
 * ExtMaterial is destroyed right after use.  We add these orphans to a list
 * which is emptied at Clear time since after Clear, no pixels are visible
 * which were rendered with the IntMaterial and it can be freed.
 */

IntMaterial (rampmat.hpp).
/*
 * The IntMaterial is derived from an ExtMaterial taking into account the
 * driver state when the ExtMaterial was used.  Normally IntMaterials are
 * on a list in their owning ExtMaterial.  If the external material is
 * destroyed, any active internal materials which it owned are
 * transferred to an orphans list in the driver.  This is cleared out
 * next time Clear is called.
 *
 * The internal material has a list of underlying RampMaterials.  For
 * a non-textured material, there is exactly one and for a textured
 * material, there is one per color in the texture's palette.  The
 * ramp materials track color sharing between internal materials and
 * handle the details of allocating color resources.
 *
 * Internal materials are also chained onto one of a number of lists
 * based on their age.  The age of a material is the number of frames
 * since it was last used to render something.  When a material is
 * aged, it is rejuvenated by moving it to the age=0 list.  Each
 * frame, the lists are rotated by one notch and materials on the
 * oldest list are reclaimed.
 *
 * A material is either active or inactive.  Active materials have
 * color resources and are either on the age=0 list (active this
 * frame) or the age=1 list (active last frame).  When an inactive
 * material is used, it allocates color resources by attempting to
 * activate the underlying ramp materials.
 *
 * At the end of the frame, on Update, any active materials on the
 * age=1 list must be materials which were active last frame but were
 * not used this frame.  We remove their color resources by
 * deactivating the underlying ramp materials.
 */

RampMaterial (rampmat.hpp).
/*
 * RampMaterials are used by internal materials to represent ranges of
 * colors.  They perform low level color allocation by allocating
 * color ranges (RLDDIRamps) from a rampmap.
 *
 * A textured internal material can use many ramp materials.
 * Several internal materials can use the same ramp material if the
 * colors match.  This can happen easily if many textures use the same
 * palette.  The ramp material maintains a usage of how many internal
 * materials are using it and is freed when the last one stops.
 *
 * Ramp materials, like internal materials are either active or
 * inactive.  Active materials have color resources and inactive
 * materials do not.  A ramp material is made active when any of its
 * internal material users are active and inactive when none of then
 * are active.  To track this a count of how many active users is
 * maintained.
 *
 * When a material is made active, it attempts to allocate a color
 * range to use.  If that is successful, it sets the colors in the
 * range to an appropriate ramp of colors.  If is no more space in the
 * colormap for a new range, it finds the closes active ramp material
 * and shares its ramp.
 *
 * To track active materials and sharing materials, the driver has a
 * list of active materials and each material has a list of sharers.
 * The sharers list is only valid for materials which are both active
 * and which own their ramp.
 */

RLDDIColormap (cmap.h).  Common name cmap.  Holds pointer to a
RLDDIColorAllocator, and cmap->priv->map is the master 32K pixelmap.

RLDDIRamp (rampmap.h).  Common name ramp.  Is an element of a RLDDIRampmap
circular queue, and consists of a base (int), size (int), and free (int, BOOL
in meaning) elements.  It is used to allocate space in the master pixelmap.

RLDDIRampmap (rampmap.h).  Common name rampmap.  Holds circular queues of
RLDDIRamp objects on free and allocated lists.  It also holds a pointer back to
the cmap object.

RLDDIPalette (palette.h).  Common name pal.  Holds palette entries, a list of
free palette entries, and methods to allocate, set, and free colors.

A Day in the Life of a Ramp
===========================

At the beginning of time, RLDDIRampCreate (rampmat.cpp) is called.  This
creates and initializes a RLDDIRampLightingDriver with its embedded
RLDDISoftLightingDriver.  The structure is zeroed, then the lists and hash
table is initialized.  Then InitRampmap is called.  If the output surface is
PALETTE4 or PALETTE8, RLDDICreatePalette (palette.cpp) is used to create a 16
or 256 palette in driver->palette.  Otherwise, RLDDICreateRGBMap (rgbmap.cpp)
is called to create driver->rgbmap.  An rgbmap is just the masks and shifts
necessary to turn an arbitrary 24 bit RGB color into its nearest equivalent in
the output surface format.  Thus, rgbmap->alloc.allocate_color doesn't actually
allocate anything, it just returns the nearest output color to the input 24 bit
RGB color.

Once an RLDDIColorAllocator (refered to by alloc) is obtained, a
RLDDICreateIndirectColormap of static size 32K (the max possible, since color
indices in DX5 and DX6 code are 1.15.16) is created.  A RLDDIColormap called
cmap is created, and alloc is used to fill the entire 32K entries with black.

Then, RLDDIIndirectColormapGetMap is used to access the actual color map we
malloc'ed and filled with black (cmap->priv->map), and a pointer to this master
32K array of DWORDS is pointed to by driver->pixelmap and pCtx->pRampMap.
Thus, pCtx->pRampMap is used to do the final color dereference in the ramp
rasterizers.

Then, RLDDICreateRampmap (rampmap.cpp) is use to create a RLDDIRampmap
(called rampmap) and its initial RLDDIRamp (called ramp).

Then, we are finally finished with RLDDIRampCreate.

Next, we would expect to see 1 or more RLDDIRampCreateMaterial's.  I take this
opportunity to fill driver->fog_enable, fog_color with the current renderstate
values.  D3DIF keeps these, along with driver->driver.ambient (represents
D3DLIGHTSTATE_AMBIENT) up to date.  Then, we create a new ExtMaterial (extmat),
and add this material to the drivers->materials list. This list is currently
used for cleanup and material handle lookup.  We intend to get rid of the
material handle lookup by forming an association in the runtime.  We end by
initializing the ExtMaterial's copy of the D3DMATERIAL for this material with
extmat->SetMaterial.

The next thing that should happen is RLDDIRampSetMaterial should be called.
This is not what happens when a material changes, for that,
RLDDIRampMaterialChanged is called.  RLDDIRampSetMaterial sets the
driver->current_material for later activation, and is called when the
D3DLIGHTSTATE_MATERIAL is set.

Note that nothing much has really happened yet.  Next, setup (the rampspan
rasterizer, right now) innocently calls a RAMP_SERVICE_FIND_LIGHTINGRANGE
service to find what its ramp base, size, and texture ramp are.  This calls
driver->current_material->FindLightingRange, and causes the ramp to actually be
created.  First, ExtMaterial::FindIntMaterial  is called to find the internal
material that matches the external material's current characteristics.  If
there is no matching IntMaterial (initially there are no internal materials),
one is created.  Next we create an array of RampMaterial's.

If we are texture mapping, we create 1 RampMaterial* for every color in the
texture palette.  We also create an array of longs called "colors" that is the
same size as the texture palette, and will end up being pointed to by
pTex->pRampmap where it will be used as the final dereference in the ramp
rasterizer texture read functions.  Then, for each color in the texture
palette, a temporary material is created in which the current material's
ambient and diffuse factors are modulated by the texture palette color.  Note
that this implies that the one and only supported texture function for ramp is
modulate, unless the user asks for D3DTBLEND_COPY (I assume we will support
this with another bead, at some point).  Then RampMaterial::Find is called to
find or create a matching RampMaterial*.  Here is where a hash comes in.
RampMaterial's are hashed based on material diffuse color for fast lookup.  If
a perfectly matching RampMaterial is found, it is used, otherwise, a new
RampMaterial with the given D3DMATERIAL is created.  At this point the array of
RampMaterial's is just acting like an array of D3DMATERIAL's with hash values.
Now we are done with the construction of IntMaterial, and IntMaterial has all
the RampMaterial's it needs to create all the pixelmaps, rampmaps, etc. we will
need to actually draw a picture.

The non-texture mapped case is the same as above, except only one RampMaterial
is created (for the current one and only D3DMATERIAL associated with this
RampMaterial).

Next, in ExtMaterial::FindLightingRange, after an IntMaterial has been found or
created, IntMaterial::FindLightingRange is called.  The first thing IntMaterial
does is see if it is active.  If it is, Active() need only update the age lists
so it stays active.  Otherwise, as will happen the first time through, we must
activate the material.

Now RampMaterial::Activate is called for each individual RampMaterial.  This
calls RampMaterial::AllocateColors.  This calls RLDDIRampmapAllocate with the
driver->rampmap to allocate some space in the global pixelmap with a new or
used (but free) RLDDIRamp.  Remember, RLDDIRamp's in RLDDIRampmap's are just
for bookkeeping, they don't really store anything.  Then we call
RampMaterial::SetColors which calls RampMaterial::SetColorsFog or
RampMaterial::SetColorsStd.  This finally calls cmap->set_color which sets the
appropriate entry in the global pixelmap (that we allocated with the
RLDDIRampmap) with the alloc function discussed above.  For non-palletized
output surfaces, this just makes an output color given 24 bits of r, g, and b
and the surface's color masks.  For palletized output surfaces, this calls
RLDDIPaletteAllocateColor in palette.c, which uses the following basic
algorithm.

If an exact match to the desired color already exists in the surfaces palette,
cool, return it.  Otherwise, if there are unused palette entries in the
surface, make one that matches perfectly.  Otherwise, find the closest matching
color in the palette (uses dr*dr + dg*dg + db*db where dr = r - palette->r as a
metric) and return that.

It is probably worth mentioning here that only a shadow copy of the surfaces
palette, driver->ddpalette is updated by the palette.cpp SetColor function.
The palette gets updated in the direct draw output surface by
RLDDIUpdateDDPalette.

To delete a material, RLDDIRampDestroyMaterial is called.  First, the
ExtMaterial destructor is called.  If an IntMaterial associated with the
ExtMaterial is still active, the IntMaterial is placed on the driver->orphans
list.  Orphans are cleaned up when RLDDIRampBeginSceneHook is called, or when
RLDDIRampDestroy is called to destroy the whole RLDDIRampLightingDriver.

Stuff We Do Different (from DX5)
================================

The initialization code in InitRampmap (rampmat.cpp) is all of private
interpretation, mostly from the DX5 source drivers\win32\ddraw.c.  This code
could not be literally stolen, since it brings in a whole bunch of undesirable
RLDDI stuff.

RLDDIUpdateDDPalette (palette.cpp) is likewise from DX5 source
drivers\win32\ddraw.c.  I'm not sure where this was ever called in DX5, but I
have put it sucessfully (so far) in rampif.cpp after all FindLightingRange's
(which is the only thing that can change the palette to change).

Issues
======

RLDDIRampEndSceneHook is not being called.  This constitutes a memory leak.

Need to move the association of the ExtMaterial's with hMat's to the runtime.

Hacked DrawPrim ramp lighting is not the same as RenderPrim (halexe.cpp).
Probably don't need to fix this if Iouri does lighting.

Apps that interpolate across vertices from different materials, like oct1 and
twist may not look exactly the same as they did on DX5, since the appearance
will depend on where the material got put in the global pixelmap.  This, in
turn, depends on the exact timing of the RLDDIRampBeginSceneHook,
RLDDIRampEndSceneHook calls, which we will not reasonably be able to reproduce.

Apps Compat
===========

NT below means NT 5.  98 means memphis.

Direct3D\TestApps\D3DIm
        flipcube.exe    O.K. on NT/98
        oct1.exe        O.K. on NT/98
        oct2.exe        O.K. on NT/98
        sphere.exe      O.K. on NT/98
        triangle.exe    O.K. on NT/98
        tunnel.exe      O.K. on NT/98 Hit F9 3 times to see glitchy problem
                        with grid texture.  Problem only exists in ramp.
        twist.exe       O.K. on NT/98

Direct3D\TestApps\D3DRm
        egg.exe         O.K. on NT/98
        faces.exe       O.K. on NT/98
        fly.exe         O.K. on NT/98
        globe.exe       O.K. on NT/98
        globe2.exe      O.K. on NT/98
        hier1.exe       O.K. on NT/98
        hier2.exe       O.K. on NT/98
        quat.exe        O.K. on NT/98
        shadow.exe      O.K. on NT/98
        tex1.exe        O.K. on NT/98
        tex3.exe        O.K. on NT/98
        tex4.exe        O.K. on NT/98
        tex5.exe        O.K. on NT/98
        trans.exe       O.K. on NT/98
        uvis.exe        O.K. on NT/98
        viewer.exe      O.K. on NT/98

Other
        wipeout2.exe    O.K. on NT/98
        hyperblade      (win95 only) always uses its own rendering or hardware
        wargods         (win95 only) always works, seems to not be using
                        rasterizers.
        agile warrior   (win95 only) O.K.
        terracide       (win95 only) Shows perspectivish problem that can get
                        quite pronounced at times.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\d3d\dx7\readme.txt ===
The following is the directory structure:

link [linking of the various d3dim700.dll libs takes place here]
   daytona
   win9x
fe [Front End, glue code]
   daytona
   win9x

inc [d3dim700.dll specific headers]

tnl [Optimized transform and lighting code]
   daytona
   i386
   win9x

rast [Rasterizer code]
   bin
      alpha
      x86
   cspan
      daytona
      win9x
   d3dif
      daytona
      win9x
   inc
   mlspan
      daytona
      win9x
   mmxemul
      daytona
      win9x
   mmxspan
      daytona
         alpha
         i386
      win9x
          i386
   setup
      daytona
         alpha
         i386
      win9x
          i386
   spaninit
       daytona
       win9x

lib [PSGP libs]
   daytona
      i386
   win9x
       i386

ref [d3dimref.dll Reference h/w emulation]
    link [Linking of the dll takes place here]
    tnl  [Transform and lighting code]
    rast [Rasterization code]
    inc  [common include files]
    drv  [Driver code]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\d3d\dx7\rast\readme.txt ===
**** directories *****

d3dif - D3D interface.  This contains the sources for the interface
between the D3D runtime and the rasterizers.

bin - Rasterizer-specific tools.  This holds the m4.exe needed to build
the numerous m4-ized C++ and asm source files.

inc - Rasterizer-private header files.

refrast - Reference rasterizer sources.  This is the core of the reference
rasterizer, holding all sources which are made public with the DDK.  The
reference rasterizer core is fully independent of any D3D or DDraw
internals, and is connected to the runtime via refif.cpp in the d3dif
directory.  The file inc\refrast.h is also part of the reference
rasterizer package.

setup - Primitive setup.  Contains C++ and x86 assembly for primitive
setup and edge walking.

spaninit - Span iterator management code.

cspan - C span iterators.  These are the span iterators used on non-MMX
(including alpha) machines.

cmmxspan, mmxemul - C span iterators which closely model the MMX versions
for development and debug purposes.  The mmxemul is a library which
emulates the MMX arithmetic functions.  This is a full set of span
iterators which exactly matches the set in mmxspan, and are used when the
???  device GUID is passed to device create.  These are for internal
debug/test only and are not used in the product (the associated GUID is
not in the public d3d.h).

mmxspan - MMX assembly span iterators.

mlspan - Monolithic span iterators.

rampmat - Ramp rasterizer material processing.  See rampmat/ramp.txt for
further explanation (the horror...).

rampspan - Ramp rasterizer span iterators.  C and x86 assembly.

d3drast - This directory is used only to build the d3drast.dll, which is a
library which contains only the rasterizers (accessed via the HAL provider
interface).  This is a test-only library and is not part of the product
build.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\d3d\dx7\rast\mmxspan\monolith.txt ===
This is a brief description of what is in the ml*.mas MMX monolithic
routines.  All monolithics handle both Gouraud and Flat shading (although
Flat shading is no faster).

16 bit Z Buffer (Less Than or equal) 565 color output mode, 565 texture input
1. No Texture
2. Non Perspective Texturing Point
3. Perspective Texturing Point
4. Perspective Texturing Bilinear
5. Non Perspective Texturing Point Modulate
6. Perspective Texturing Point Modulate
7. Perspective Texturing Bilinear Modulate

No Z Buffer 565 color output mode, 565 texture input
8. No Texture
9. Non Perspective Texturing Point
10. Perspective Texturing Point
11. Perspective Texturing Bilinear
12. Non Perspective Texturing Point Modulate
13. Perspective Texturing Point Modulate
14. Perspective Texturing Bilinear Modulate

16 bit Z Buffer (Less Than or equal) 32 bit color output mode,  32 bit texture
input
15. No Texture
16. Non Perspective Texturing Point
17. Perspective Texturing Point
18. Perspective Texturing Bilinear
19. Non Perspective Texturing Point Modulate
20. Perspective Texturing Point Modulate
21. Perspective Texturing Bilinear Modulate

No Z Buffer 32 bit color mode,  32 bit texture input
22. No Texture
23. Non Perspective Texturing Point
24. Perspective Texturing Point
25. Perspective Texturing Bilinear
26. Non Perspective Texturing Point Modulate
27. Perspective Texturing Point Modulate
28. Perspective Texturing Bilinear Modulate
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\d3d\dx7\rast\mmxspan\readme.txt ===
Status of general MMX span routines.

09/08/97 Checked in MMX code.
  There is no way that the current code will compile and run.  I haven't
  even tried to compile it. This is primarily to have it backed up and
  to let anyone that is interested see what has been done.
  The orginal C (or MCP) code are comments of these ASM or MAS files.

  The ACP directory contains a program that generates the .INC file
  for offsets to all the data.  This program was used by Drew and
  seems to work better than H2INC.  We should probably only have one
  of these that would go in the inc directory, but it's not done that
  way now (Plus, my code doesn't generate it based on a makefile.

  Three regular registers have been set aside for use to access the data.
  Since these are passed to every routine, I don't have to pass anything
  on the stack as long as I don't modify them.  I have modified them a
  couple of times before I added this and they need to be changed to esi,
  edi, ebp or eax (eax is usually used for the next indirect jump).

  ebx is a pointer to the D3DI_SPANITER data (Also Accesses the SI stuff
    inside it).
  ecx is a pointer to the D3DI_RASTPRIM data.
  edx is a pointer to tge D3DI_RASTSPAN data.

  There are a few very useful m4 macros to acess this data in
  readable way (It also made converting C code easier):

define(`XpCtxSI',`[ebx+D3DI_SPANITER_$1]')dnl
define(`XpCtx',`[ebx+D3DI_RASTCTX_$1]')dnl
define(`XpP', `[ecx+D3DI_RASTPRIM_$1]')dnl
define(`XpS', `[edx+D3DI_RASTSPAN_$1]')dnl

  Things that need to be done.
    1) New Special W divide.   MMX newton's method code has already
        been written, but it was very specialized (I negated the
        OoW and OoWDX so that 2 - Oow*iW could be done with a pmadd
        and a few other things.)  Code shouldn't have to change much.

    2) Assembly equivalents to the ACMP, ZCMP macros.  A version of
        these has also been written, but most compares were done in
        a reverse order (to preserve registers).  The MMX Alpha and
        Z setup will most likely have to be different.  This means
        that the atest.asm has not been coded.  A test.mas file is
        written, and is missing ZCMP16 and ZCMP32.  The other 4
        specific code cases are done exactly like the C version
        except the iXorMask always seems to be inverted do to how
        the comparison is done.

    3) BufWrite is not implemented.  The code for doing this has
        been done in APP notes.  The 16 bit cases use a pmaddw
        to combine the colors more quickly than shifting.  There
        is also work beening done on a quick dithering routine.
        The MMX dithering routine will use a pcmpgtw to compare
        with the dither table and the do a psubssw since if the
        color value is to be incremented, then the mask will be
        all ones (= -1). Subtracting it will increment the color.
        The saturation is used to not increase too much.  The
        only problem to this is that the color is unsigned so
        it has to be shifted down by one to saturate to 7fff.

    4) BuffRead is not done.  It uses almost identical routines
        as those in texread.


    5) Lots of clean up and 64 bit constants that need to be in
        memory.  I have to figure out what registers get passed
        to routines that are called and what is passed back.
        In some cases, it may be possible to pass data from one
        bead to the next using registers.  This maybe difficult
        though.

    6) ColorBld conversion.  Mostly ROP stuff and calling of
        bldfuncs.asm.  ROP stuff should be pretty easy.

    7) Since function names are the same, if I made a header
        file declaring them extern "C" { },  the assembly code
        could concievably execute in place of the current c code.
        This is where the true bomb test is.

    8) There's probably more, but there is always more.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\d3d\ref\rast\readme.txt ===
Direct3D Reference Rasterizer



**** NOTES ****

* texture compression is not implemented yet

* line rendering evaluation has potential small errors in the fixed point
line function evaluation - this should only show up in very very long
lines and is being replaced with a lossless fixed point iteration for the
next release

* allocation of texture controls (such as texture coordinate index
selection and filtering) to per-texture state or per-context (renderstate)
state is still under revision and may change

* 24 bit depth buffer and all stencil functionality is implemented but
completely untested

* texture stage blending has not been comprehensively tested yet

* texture state blending macro ops are not fully specified yet

* need to clearly identify REQUIREMENTS versus suggestions/demonstrations
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\dd\ddraw\ddhelp\readme.txt ===
This directory is not part of the Windows XP product.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\dd\ddraw\ddraw16\readme.txt ===
This directory is not part of the Windows XP product.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\swrast\inc\dx8sddifw readme.txt ===
Pluggable Software Rasterizer
(c) Microsoft 2000

  D3D8 now allows applications to register specific software rasterizers as
a software device, also known as pluggable software rasterizers. Only one
rasterizer can be registered with each Direct3D object, and then cannot be
unregisted.
  The rasterizer is registered with a call to
IDirect3D8::RegisterSoftwareDevice, and then devices are created with calls
to IDirect3D8::CreateDevice by passing in D3DDEVTYPE_SW. The void* parameter
to IDirect3D8::RegisterSoftwareDevice is a pointer to a function, typically
named D3D8GetSWInfo.

HRESULT APIENTRY D3D8GetSWInfo( D3DCAPS8* pCaps, PD3D8_SWCALLBACKS pCallbacks,
    DWORD* pNumTextures, DDSURFACEDESC** ppTexList);

  This primary entry point is used to retrieve the caps that the device
supports, the secondary entry points/ callbacks, and a list of supported render
surfaces/ textures. This function should be expected to be called multiple
times; but the returning parameters should never change. See the sample, D3D
headers, SDK & DDK documentation for descriptions of D3DCAPS8 and supported
surface lists. Many of the secondary entry points/ callbacks are unused due
to an aging API. The required list of entry points is as follows:

DWORD APIENTRY CreateSurface( LPDDHAL_CREATESURFACEDATA pData);
DWORD APIENTRY CreateSurfaceEx( LPDDHAL_CREATESURFACEEXDATA pData);
DWORD APIENTRY DestroySurface( LPDDHAL_DESTROYSURFACEDATA pData);
DWORD APIENTRY Lock( LPDDHAL_LOCKDATA pData);
DWORD APIENTRY Unlock( LPDDHAL_UNLOCKDATA pData);
DWORD APIENTRY ContextCreate( LPD3DHAL_CONTEXTCREATEDATA pData);
DWORD APIENTRY ContextDestroy( LPD3DHAL_CONTEXTDESTROYDATA pData);
DWORD APIENTRY DrawPrimitives2( LPD3DHAL_DRAWPRIMITIVES2DATA pData);

  Each of these callbacks has some documentation in the DDK help. But, in
essence, CreateSurface and DestroySurface must allocate and destroy 
"video memory" or "driver allocated" surfaces, textures, vertex buffers, etc.
CreateSurfaceEx is used to update the driver on the existence of system
memory surfaces and complex attachment arrangements. Lock and Unlock request
the driver to lock and unlock "video memory" or "driver allocated" surfaces.
ContextCreate and ContextDestroy must allocate and destroy device contexts.
DrawPrimitives2 is a complex callback which requires a context to parse a
command buffer to manipulate render states and rasterize primitives.

  The DX8SDDI framework provides templated classes, which provide a design mix
between STL and ATL. This provides a highly componentized and extendable
programming framework without much performance penalty, as long as the compiler
is able to efficiently compile STL objects or inline deeply. In the spirit of
generic programming, there are 5 major concepts that make up the driver
framework: Driver, PerDDrawData, SurfDBEntry, Surface, and Context. Typically,
as in ATL, to create one's own Driver concept class, a developer would inherit
from CSubDriver with the parent class a template parameter of the CSubDriver.
For ex:

class CMyDriver:
    public CSubDriver< CMyDriver, ... >
{
};

  This allows the CSubDriver to call supplied or overriden functions provided
by CMyDriver without the performance penalty of virtual functions. The naming
convention of the base implementation is always CSub*****, such as CSubDriver,
CSubPerDDrawData, and CSubContext. Sometimes, all the functions provided by
a CSub***** base class is all that is needed. Since a CSub***** base class
cannot be created without deriving from it, there is another naming convention
for the classes which have such a minimal implementation. They are named
CMinimal***** classes, such as CMinimalPerDDrawData. All these classes do is
derive from the CSub***** base class and publicize the constructor and
destructor. The CMinimalDriver is an exception to this rule, as it can't be
created directly either. A unique driver class must be created and inherit
even from CMinimalDriver< * >.
For ex:

template< class TD>
class CMinimalPerDDrawData:
    public CSubPerDDrawData< CMinimalPerDDrawData< TD>, TD>
{
public:
    CMinimalPerDDrawData( TD& Driver, DDRAWI_DIRECTDRAW_LCL& DDLcl)
        :CSubPerDDrawData< CMinimalPerDDrawData< TD>, TD>( Driver, DDLcl)
    { }
    ~CMinimalPerDDrawData()
    { }
};

  Note, CMinimalPerDDrawData still needs to know the concept class of the
Driver, so that it can store a local reference back to it. Therefore, it
still has a template parameter which requires the type of Driver, TD. This
could be CMinimalDriver, a class derived from CSubDriver, or a completely
custom class which still conforms to the concept of Driver. This way a
developer can replace each component of the entire driver as need be without
modifying the other components.

/------------------------------------------------------------------------------\
|
| Driver
|
\------------------------------------------------------------------------------/
  The first concept is the Driver class. This class handles direct interaction
of mapping the primary and secondary entry points from the SDDI to the
appropriate concept objects. It also enforces the restriction of only one
Driver class per process. The CSubDriver class provides a static pointer to
the one and only Driver in the process and provides a GetSWInfo function
which has to be called by a "bridge" function. The pointer to this bridge
function is what should be passed to IDirect3D8::RegisterSoftwareDevice. Also,
the static variable must be defined somewhere, or the compiler will error.
For ex, in the sample:

class CMyDriver:
    public CMinimalDriver< CMyDriver, CMyRasterizer>
{
  ...
};

// Define static variable and initialize to NULL.
CMyDriver* CMyDriver::sm_pGlobalDriver= NULL;

// Somewhere the class must be created. A global class is dangerous, because
// C++ doesn't guarentee creation order of global/ static data. There is some
// global data which might not be created before the driver does which should
// be. So, it is safer to create the class within main. Otherwise, a global
// class is possible if construction order doesn't matter:
//
// CMyDriver g_GlobalDriver;
// CMyDriver* CMyDriver::sm_pGlobalDriver= &g_GlobalDriver;
// 
BOOL WINAPI DllMain( HINSTANCE hInstance, DWORD dwReason, LPVOID lpvReserved)
{
    switch( dwReason)
    {
        case( DLL_PROCESS_ATTACH):
            try {
                CMyDriver::sm_pGlobalDriver= new CMyDriver;
            } catch( ... ) {
                // This can catch any constructor execeptions
                // as well as bad_alloc. 
            }
            if( NULL== CMyDriver::sm_pGlobalDriver)
                return FALSE;
            break;

        case( DLL_PROCESS_DETACH):
            if( NULL!= CMyDriver::sm_pGlobalDriver)
                delete CMyDriver::sm_pGlobalDriver;

            CMyDriver::sm_pGlobalDriver= NULL;
            break;
    }
    return TRUE;
}

// Bridge function which calls the Driver object's GetSWInfo. D3D8GetSWInfo
// should be passed into RegisterSoftwareDevice.
HRESULT APIENTRY
D3D8GetSWInfo( D3DCAPS8* pCaps, PD3D8_SWCALLBACKS pCallbacks,
    DWORD* pNumTextures, DDSURFACEDESC** ppTexList)
{
    return CMyDriver::sm_pGlobalDriver->GetSWInfo( *pCaps, *pCallbacks,
        *pNumTextures, *ppTexList );
}

  The Driver concept class exposes the following types: TDriver, TContext,
TPerDDrawData, TSurface, as well as a few others. The Driver contains a STL
vector of TContext*s, which tracks all instances of Contexts; and a STL vector
of TSurface*s, which tracks all instances of Surfaces or driver allocated
surfaces. The Driver also contains a STL map associating a
LPDDRAWI_DIRECTDRAW_LCL to a TPerDDrawData. The Driver also maps the secondary
entry points to their respective concept objects.

-CreateSurface
  This entry point is requesting the driver to allocate a "video memory" or
"driver allocated" surface. This is equivalent to new TSurface;. However, the
creation is actually done by a surface allocator object which can, naturally,
be replaced: TSurfAlloc.
 
-DestroySurface
  This entry point is requesting the driver to deallocate a "video memory" or
"driver allocated" surface. This is equivalent to delete TSurface;

-CreateSurfaceEx
  This entry point is notifing the driver of "system memory" surface and
"video memory" surface creation and destruction. This is the point where each
surface gets assigned a DWORD handle, except "video memory" surfaces already
know theirs from CreateSurface. The Driver passes this to
TPerDDrawData::SurfaceCreated and TPerDDrawData::SurfaceDestroyed which will
update the Surface Database with information about surfaces, their attachment
heirarchy, and their DWORD handle.

-Lock
  This entry point is requesting the driver to lock a "video memory" or
"driver allocated" surface. The Driver maps this to TSurface::Lock,
which returns the pointer to the surface bits.

-Unlock
  This entry point is requesting the driver to unlock a "video memory" or
"driver allocated" surface. The Driver maps this to TSurface::Unlock.

-ContextCreate
  This entry point is requesting the driver to allocate a device context.
This is equivalent to new TContext.

-ContextDestroy
  This entry point is requesting the driver to deallocate a device context.
This is equivalent to delete TContext;

-DrawPrimitives2
  This entry point contains all the instructions to change render states and
rasterize primitives. It is mapped directly to the corresponding
TContext::DrawPrimitves2.

-ValidateTextureStageState
  This entry point is slightly optional as it is directly called by an
application. Since the application knows whether it calls
IDirect3DDevice8::ValidateDevice, it can appropriately add code for
ValidateTextureStageState. For maximum compatability, it is suggested to
have this implemented. The Driver maps this call to the corresponding
TContext::ValidateTextureStageState.

-GetDriverState
  This entry point is slightly optional as it is directly called by an
application. Since the application knows whether it calls
IDirect3DDevice8::GetInfo, it can appropriately add code for GetDriverState.
For maximum compatability, it is suggested to have this implemented. The
Driver maps this call to the corresponding TContext::GetDriverState.

  If any other entry points or callbacks are called which do not have a default
implementation, an assert will fire in debug mode. Then, a developer can
override the insufficient entry point CSubDriver provides.

/------------------------------------------------------------------------------\
|
| PerDDrawData and SurfDBEntry
|
\------------------------------------------------------------------------------/
  The second concept is the PerDDrawData class. This appropriately named class
really just stores any information which should be associated with a SDDI
DDraw object (DDRAWI_DIRECTDRAW_LCL). Typically, it is considered invalid to
store pointers to DDRAWI***** objects; and even worse to read or write from this
pointer outside of the callback context which it was passed into. However, it
is allowable to store a pointer to DDRAWI_DIRECTDRAW_LCL to make the distinction
of "per DDraw" in the sense used here. There can be multiple DDraw objects
when multiple Direct3D8 objects are created. If the same driver is registered
with each Direct3D8 objects, then multiple DDraw objects will be exposed to
the driver. The PerDDrawData class needs to contain a database of DWORD
surface handles to information about the surface for the Context.
  For example, if the application specifies IDirect3DDevice8::SetTexture,
the SW device, known by us as a Context concept, needs to be able to at least
get the lpVidMem pointer to the surface bits from the DWORD passed into
SetTexture. The Context will also need to be able to extract other information
from the DWORD, like pixel format, width, height, etc., especially for "system
memory" surfaces. All this information is stored in the PerDDrawData surface
database. This must be, because the DWORD handles are unique per DDraw object.
So, the driver must be able to convert a LPDDRAWI_DIRECTDRAW_LCL and DWORD
surface handle to information about the surface for the Context.
  The PerDDrawData exposes the following types: TDriver and the third concept,
TSurfDBEntry. The PerDDrawData contains a surface database which is a STL map
which associates DWORD surface handles to TSurfDBEntry objects, which contain
information about the surface. The PerDDrawData must implement SurfaceCreated
and SurfaceDestroyed for the Driver to call. It must also implement GetDriver
and GetSurfDBEntry for the Context to use.
  Note that there should be at least as many TSurfDBEntry objects as there are
TSurface objects. This is because the SDDI will notify the driver of the
surface characteristics and attachment configuration of any "system memory"
surfaces and any "video memory" surface belonging to the driver. This is the
only way the driver can figure out the attachment configuration of "video
memory" surfaces.
  The Driver object knows how to navigate from a DDRAWI_DDRAWSURFACE_LCL object
and a SurfDBEntry object to a Surface object. Each Surface object also has a
DWORD surface handle field which allows one to find the associated SurfDBEntry
object by looking up the handle in the PerDDrawData.
  The typical SurfDBEntry contains accessor functions named similar to the
data stored in the DDRAWI_DDRAWSURFACE_LCL. For example, the CSurfDBEntry
exposes:
GetLCLdwFlags() == DDRAWI_DDRAWSURFACE_LCL::dwFlags
GetLCLddsCaps() == DDRAWI_DDRAWSURFACE_LCL::ddsCaps
GetMOREddsCapsEx() == DDRAWI_DDRAWSURFACE_MORE::ddsCapsEx
GetGBLfpVidMem() == DDRAWI_DDRAWSURFACE_GBL::fpVidMem
etc.

/------------------------------------------------------------------------------\
|
| Surface
|
\------------------------------------------------------------------------------/
  The fourth concept is the Surface class. This represents a "video memory" or
"driver allocated" surface, eventhough "video memory" doesn't accurately
represent the reality. Typically, the driver will want to create multiple
classes which implemented a common ISurface interface either based on pixel
format or surface role. This is because the Driver object needs to be able to
lock and unlock each surface. The default implementation of Surface is an
interface, IVidMemSurface. This means that when the Driver maps the Lock and
Unlock entry points to TSurface::Lock and TSurface::Unlock, the Driver is
actually calling a virtual function. Also, the Context concept class need to
be able to Clear all render targets. Therefore, the IVidMemSurface interface
includes a Clear function. Thus, the Context is also calling a virtual Clear
function to clear a surface. A developer adding "video memory" textures to the
framework can implement a trivial IVidMemSurface::Clear for these textures by
asserting false and returning failure. This is because non-render targets
should never be cleared.
  Nothing prevents the developer from removing the interface, and using a
purely generic surface class. But, it was expected that the more common
scenario would be to provide an interface here.
  As indicated before, the Surface class needs to implement Lock and Unlock
for the Driver and Context to call. The Context also needs to be able to call
Clear.

/------------------------------------------------------------------------------\
|
| Context
|
\------------------------------------------------------------------------------/
  The final, fifth main concept is the Context class. This represents the
object which implements the IDirect3DDevice8 interface to the application.
The primary functions which it needs to implement is DrawPrimitves2 and
optionally, ValidateTextureStageState. This is the most complex concept class
there is and the implementation was broken up into multiple classes, to again
provide a maxmimum amount of componentization and extendability.
  The entry point DrawPrimitives2 needs to parse a command buffer for
individual commands and execute them. Whatever parses the command buffer also
needs to be aware of state sets. See DDK documentation for a description.
The default implementation for DrawPrimitives2 is CStdDrawPrimitives2. It is
expected that the Context will inherit from CStdDrawPrimitives2 if its
implementation is wanted.
  CStdDrawPrimitives2::DrawPrimitives2 first wraps the
D3DHAL_DRAWPRIMITIVES2DATA class with a class that exposes the command
buffer as a STL container complete with iterators. It uses a Parser
function to call a member function corresponding to each D3DHAL_DP2COMMAND.
The naming convention for these Context member functions are DP2*****. The
CStdDrawPrimitives2 also takes care of state sets. In order to handle state
set recording and capturing, CStdDrawPrimitives2 uses another Parser to call
a recording member function corresponding to each D3DHAL_DP2COMMAND. The
naming convention for these Context member functions are RecDP2*****.
There are also classes which implement many of the required DP2***** and
RecDP2***** functions. So, inheriting from CStdDrawPrimitives2 should be seen
as providing the Context with an implementation for DrawPrimitives2, but also
as seen as needing implementations for many DP2 commands, implementations for
recording many DP2 commands, a collection of DP2Operations <=> member function
bindings, and a collection of DP2Operations <=> recording member function
bindings. For example, let's examine a new CMyContext:

class CMyContext:
    public CSubContext< CMyContext, ... >
{
};

  CMyContext still has no DrawPrimitives2 entry point. CSubContext exposes
the following types: TDriver, TSurface, TPerDDrawData, and TDP2Data.
CSubContext stores a reference to the corresponding PerDDrawData, and
the render target and zbuffer surface pointers. The render target and
zbuffer are TSurface*, not TSurfDBEntry*, as render targets must be
"driver allocated". CSubContext also provides a few functions, like
GetPerDDrawData, DP2SetRenderTarget, and DP2Clear. The last two functions
provide a default implementation to handle the DP2OP_SETRENDERTARGET and
DP2OP_CLEAR commands. However, nothing uses these functions yet.

// Forward declaration
class CMyContext;

// For minimal amount of typing/ retyping.
typedef CStdDrawPrimitves2< CMyContext> TStdDrawPrimitves2;

class CMyContext:
    public TStdDrawPrimitves2,
    public CSubContext< CMyContext, ... , TStdDrawPrimitves2::TDP2Data >
{
};

  Now, CMyContext has a DrawPrimitives2 entry point for the Driver to call,
which is provided by CStdDrawPrimitives2. CMyContext also has default support
for DP2OP_SETRENDERTARGET, DP2OP_CLEAR; but CStdDrawPrimitives2 doesn't have
information on which member function to call for each DP2 command. Note that
TDP2Data is used as a template parameter for CSubContext. This is because
the first paramter of the DP2***** member functions is templatized for
extendability reasons. For CSubContext's DP2SetRenderTarget and DP2Clear
to have the same parameter types as CStdDrawPrimitives2 can call, this is
needed.

// Forward declaration
class CMyContext;

// For minimal amount of typing/ retyping.
typedef CStdDrawPrimitves2< CMyContext> TStdDrawPrimitves2;

class CMyContext:
    public TStdDrawPrimitves2,
    public CSubContext< CMyContext, ... , TStdDrawPrimitves2::TDP2Data >
{
public:
    typedef block< TStdDrawPrimitives2::TDP2CmdBind, 2> TDP2Bindings;

protected:
    static const TDP2Bindings c_DP2Bindings;    

public:
    CMyContext( ... )
        :TStdDrawDrimitives2( c_DP2Bindings.begin(), c_DP2Bindings.end()),
        CSubContext< CMyContext>( ... )
    { }
};

const CMyContext::TDP2Bindings CMyContext::c_DP2Bindings=
{
    D3DDP2OP_SETRENDERTARGET, DP2SetRenderTarget,
    D3DDP2OP_CLEAR,           DP2Clear
};

  Now, CMyContext has provided CStdDrawPrimitives2 with a collection of
bindings. CStdDrawPrimitives2 will now call CMyContext::DP2SetRenderTarget,
which is really CSubContext< CMyContext, ... >::DP2SetRenderTarget when
a DP2 command with D3DDP2OP_SETRENDERTARGET is encountered. There are
other classes which can provide default implementations for each DP2
operation and have the naming convention CStdDP2*****, like
CStdDP2RenderStateStore, which provides DP2RenderState and RecDP2RenderState.
Also, any CStdDP2*****Store class really just stores the parameters of the
command for later reference. For example, CStdDP2WInfoStore just
stores the D3DHAL_DP2WINFO data and provides functions so that the Context,
itself, can be converted to D3DHAL_DP2WINFO or can be retrieved by calling
TContext::GetDP2WInfo.
  The fully functional CMyContext which exposes 1 stream, no TnL support, and
only legacy pixel shading would look something like:
  
// Forward declaration
class CMyContext;

// For minimal amount of typing/ retyping.
typedef CStdDrawPrimitves2< CMyContext> TStdDrawPrimitves2;

// Actually, TStdDrawPrimitives2::TDP2Data can be left out of the template
// parameters for each of the CStdDP2***** classes, as long as the default
// TDP2Data is used from CStdDrawPrimitives2. This is the same default that
// all the other classes have.
class CMyContext:
    public TStdDrawPrimitves2,
    public CSubContext< CMyContext, ... >,
    public CStdDP2ViewportInfoStore< CMyContext>,
    public CStdDP2WInfoStore< CMyContext>,
    public CStdDP2RenderStateStore< CMyContext>,
    public CStdDP2TextureStageStateStore< CMyContext>,
    public CStdDP2SetVertexShaderStore< CMyContext>,
    public CStdDP2VStreamManager< CMyContext, CVStream< ... > >,
    public CStdDP2IStreamManager< CMyContext, CIStream< ... > >
{
public:
    typedef block< TStdDrawPrimitives2::TDP2CmdBind, 15> TDP2Bindings;
    typedef block< TStdDrawPrimitives2::TRecDP2CmdBind, 7> TRecDP2Bindings;

protected:
    static const TDP2Bindings c_DP2Bindings;
    static const TRecDP2Bindings c_RecDP2Bindings;

public:
    CMyContext( ... )
        :TStdDrawDrimitives2( c_DP2Bindings.begin(), c_DP2Bindings.end(),
			c_RecDP2Bindings.begin(), c_RecDP2Bindings.end()),
        CSubContext< CMyContext>( ... )
    { }
};

const CMyContext::TDP2Bindings CMyContext::c_DP2Bindings=
{
    D3DDP2OP_VIEWPORTINFO,          DP2ViewportInfo,
    D3DDP2OP_WINFO,                 DP2WInfo,
    D3DDP2OP_RENDERSTATE,           DP2RenderState,
    D3DDP2OP_TEXTURESTAGESTATE,     DP2TextureStageState,
    D3DDP2OP_CLEAR,                 DP2Clear,
    D3DDP2OP_SETRENDERTARGET,       DP2SetRenderTarget,
    D3DDP2OP_SETVERTEXSHADER,       DP2SetVertexShader,
    D3DDP2OP_SETSTREAMSOURCE,       DP2SetStreamSource,
    D3DDP2OP_SETSTREAMSOURCEUM,     DP2SetStreamSourceUM,
    D3DDP2OP_SETINDICES,            DP2SetIndices,
    D3DDP2OP_DRAWPRIMITIVE,         DP2DrawPrimitive,
    D3DDP2OP_DRAWPRIMITIVE2,        DP2DrawPrimitive2,
    D3DDP2OP_DRAWINDEXEDPRIMITIVE,  DP2DrawIndexedPrimitive,
    D3DDP2OP_DRAWINDEXEDPRIMITIVE2, DP2DrawIndexedPrimitive2,
    D3DDP2OP_CLIPPEDTRIANGLEFAN,    DP2ClippedTriangleFan
};

const CMyContext::TRecDP2Bindings CMyContext::c_RecDP2Bindings=
{
    D3DDP2OP_VIEWPORTINFO,          RecDP2ViewportInfo,
    D3DDP2OP_WINFO,                 RecDP2WInfo,
    D3DDP2OP_RENDERSTATE,           RecDP2RenderState,
    D3DDP2OP_TEXTURESTAGESTATE,     RecDP2TextureStageState,
    D3DDP2OP_SETVERTEXSHADER,       RecDP2SetVertexShader,
    D3DDP2OP_SETSTREAMSOURCE,       RecDP2SetStreamSource,
    D3DDP2OP_SETINDICES,            RecDP2SetIndices
};

/------------------------------------------------------------------------------\
|
| Summary
|
\------------------------------------------------------------------------------/
  It is expected that a pluggable software rasterizer developer will first
start by defining a CMyRasterizer and a CMyDriver, which derives from
CMinimalDriver just like in the sample to get acquanted with the framework and
verify the plumbing.
  The expected next step is to define a CMyContext, which derives from
CSubContext, CStdDrawPrimitives2, & a bunch of CStdDP2*****, just like
CMinimalContext; and a CMyDriver which derives from CSubDriver. The CMyContext
should integrate the old CMyRasterizer functionality.
  The expected next step is then to replace CMinimalPerDDrawData with
CMyPerDDrawData, which derives from CSubPerDDrawData; and then start
replacing many of the other components with custom pieces (CSurface,
CStateSet, CSurfDBEntry, CVStream, CIStream, CPalDBEntry, etc).
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\swrast\rgb\readme.txt ===
**** directories *****

d3dif - D3D interface.  This contains the sources for the interface
between the D3D runtime and the rasterizers.

bin - Rasterizer-specific tools.  This holds the m4.exe needed to build
the numerous m4-ized C++ and asm source files.

inc - Rasterizer-private header files.

refrast - Reference rasterizer sources.  This is the core of the reference
rasterizer, holding all sources which are made public with the DDK.  The
reference rasterizer core is fully independent of any D3D or DDraw
internals, and is connected to the runtime via refif.cpp in the d3dif
directory.  The file inc\refrast.h is also part of the reference
rasterizer package.

setup - Primitive setup.  Contains C++ and x86 assembly for primitive
setup and edge walking.

spaninit - Span iterator management code.

cspan - C span iterators.  These are the span iterators used on non-MMX
(including alpha) machines.

cmmxspan, mmxemul - C span iterators which closely model the MMX versions
for development and debug purposes.  The mmxemul is a library which
emulates the MMX arithmetic functions.  This is a full set of span
iterators which exactly matches the set in mmxspan, and are used when the
???  device GUID is passed to device create.  These are for internal
debug/test only and are not used in the product (the associated GUID is
not in the public d3d.h).

mmxspan - MMX assembly span iterators.

mlspan - Monolithic span iterators.

rampmat - Ramp rasterizer material processing.  See rampmat/ramp.txt for
further explanation (the horror...).

rampspan - Ramp rasterizer span iterators.  C and x86 assembly.

d3drast - This directory is used only to build the d3drast.dll, which is a
library which contains only the rasterizers (accessed via the HAL provider
interface).  This is a test-only library and is not part of the product
build.

========================================================================
    CONSOLE APPLICATION : Rast Project Overview
========================================================================

AppWizard has created this Rast application for you.  
This file contains a summary of what you will find in each of the files that
make up your Rast application.
Rast.vcproj
    This is the main project file for VC++ projects generated using an Application Wizard. 
    It contains information about the version of Visual C++ that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

Rast.cpp
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named Rast.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Visual C++ reads and updates this file.
/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\swrast\rgb\mmxspan\monolith.txt ===
This is a brief description of what is in the ml*.mas MMX monolithic
routines.  All monolithics handle both Gouraud and Flat shading (although
Flat shading is no faster).

16 bit Z Buffer (Less Than or equal) 565 color output mode, 565 texture input
1. No Texture
2. Non Perspective Texturing Point
3. Perspective Texturing Point
4. Perspective Texturing Bilinear
5. Non Perspective Texturing Point Modulate
6. Perspective Texturing Point Modulate
7. Perspective Texturing Bilinear Modulate

No Z Buffer 565 color output mode, 565 texture input
8. No Texture
9. Non Perspective Texturing Point
10. Perspective Texturing Point
11. Perspective Texturing Bilinear
12. Non Perspective Texturing Point Modulate
13. Perspective Texturing Point Modulate
14. Perspective Texturing Bilinear Modulate

16 bit Z Buffer (Less Than or equal) 32 bit color output mode,  32 bit texture
input
15. No Texture
16. Non Perspective Texturing Point
17. Perspective Texturing Point
18. Perspective Texturing Bilinear
19. Non Perspective Texturing Point Modulate
20. Perspective Texturing Point Modulate
21. Perspective Texturing Bilinear Modulate

No Z Buffer 32 bit color mode,  32 bit texture input
22. No Texture
23. Non Perspective Texturing Point
24. Perspective Texturing Point
25. Perspective Texturing Bilinear
26. Non Perspective Texturing Point Modulate
27. Perspective Texturing Point Modulate
28. Perspective Texturing Bilinear Modulate
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxg\swrast\rgb\mmxspan\readme.txt ===
Status of general MMX span routines.

09/08/97 Checked in MMX code.
  There is no way that the current code will compile and run.  I haven't
  even tried to compile it. This is primarily to have it backed up and
  to let anyone that is interested see what has been done.
  The orginal C (or MCP) code are comments of these ASM or MAS files.

  The ACP directory contains a program that generates the .INC file
  for offsets to all the data.  This program was used by Drew and
  seems to work better than H2INC.  We should probably only have one
  of these that would go in the inc directory, but it's not done that
  way now (Plus, my code doesn't generate it based on a makefile.

  Three regular registers have been set aside for use to access the data.
  Since these are passed to every routine, I don't have to pass anything
  on the stack as long as I don't modify them.  I have modified them a
  couple of times before I added this and they need to be changed to esi,
  edi, ebp or eax (eax is usually used for the next indirect jump).

  ebx is a pointer to the D3DI_SPANITER data (Also Accesses the SI stuff
    inside it).
  ecx is a pointer to the D3DI_RASTPRIM data.
  edx is a pointer to tge D3DI_RASTSPAN data.

  There are a few very useful m4 macros to acess this data in
  readable way (It also made converting C code easier):

define(`XpCtxSI',`[ebx+D3DI_SPANITER_$1]')dnl
define(`XpCtx',`[ebx+D3DI_RASTCTX_$1]')dnl
define(`XpP', `[ecx+D3DI_RASTPRIM_$1]')dnl
define(`XpS', `[edx+D3DI_RASTSPAN_$1]')dnl

  Things that need to be done.
    1) New Special W divide.   MMX newton's method code has already
        been written, but it was very specialized (I negated the
        OoW and OoWDX so that 2 - Oow*iW could be done with a pmadd
        and a few other things.)  Code shouldn't have to change much.

    2) Assembly equivalents to the ACMP, ZCMP macros.  A version of
        these has also been written, but most compares were done in
        a reverse order (to preserve registers).  The MMX Alpha and
        Z setup will most likely have to be different.  This means
        that the atest.asm has not been coded.  A test.mas file is
        written, and is missing ZCMP16 and ZCMP32.  The other 4
        specific code cases are done exactly like the C version
        except the iXorMask always seems to be inverted do to how
        the comparison is done.

    3) BufWrite is not implemented.  The code for doing this has
        been done in APP notes.  The 16 bit cases use a pmaddw
        to combine the colors more quickly than shifting.  There
        is also work beening done on a quick dithering routine.
        The MMX dithering routine will use a pcmpgtw to compare
        with the dither table and the do a psubssw since if the
        color value is to be incremented, then the mask will be
        all ones (= -1). Subtracting it will increment the color.
        The saturation is used to not increase too much.  The
        only problem to this is that the color is unsigned so
        it has to be shifted down by one to saturate to 7fff.

    4) BuffRead is not done.  It uses almost identical routines
        as those in texread.


    5) Lots of clean up and 64 bit constants that need to be in
        memory.  I have to figure out what registers get passed
        to routines that are called and what is passed back.
        In some cases, it may be possible to pass data from one
        bead to the next using registers.  This maybe difficult
        though.

    6) ColorBld conversion.  Mostly ROP stuff and calling of
        bldfuncs.asm.  ROP stuff should be pretty easy.

    7) Since function names are the same, if I made a header
        file declaring them extern "C" { },  the assembly code
        could concievably execute in place of the current c code.
        This is where the true bomb test is.

    8) There's probably more, but there is always more.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\dxvb\dx7vb\inc\readme.txt ===
These are DX7 Dsound/DMusic headers needed to build the legacy Dx7vb dll
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\gamectrl\coffbase.txt ===
;  COFFBASE.TXT
;
;    This file defines the base addresses for the Gaming Controller CPL
;    components IN THE RETAIL BUILD as they aren't defined elsewhere.
;    Ideally, these should be drawn from some global coffbase.txt but
;    DirectX does not have one and besides the CPL parts only get loaded
;    in one process space so should not be in the shared space.
;
;    The linker uses this file to generate the base address with the
;    following syntax:
;
;    -base:@coffbase.txt,kernel32
;
;    which is the same as:
;
;    -base:0xbff70000
;
;    

joy              0x2bfd0000 0x00030000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\gamectrl\noplace.txt ===
;
;   This is a deliberately empty text file used to redirect binplace to dump 
;   for specific varients of a build
;
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\gamectrl\coffbasd.txt ===
;  COFFBASD.TXT
;
;    This file defines the base addresses for the Gaming Controller CPL
;    components IN DEBUG BUILDS as they aren't defined elsewhere.
;    Ideally, these should be drawn from some global coffbase.txt but
;    DirectX does not have one and besides the CPL parts only get loaded
;    in one process space so should not be in the shared space.
;
;    The linker uses this file to generate the base address with the
;    following syntax:
;
;    -base:@coffbase.txt,kernel32
;
;    which is the same as:
;
;    -base:0xbff70000
;
;    
joy              0x2bf30000 0x000d0000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\gamectrl\client\res\dijoy_cm.rtf ===
{\rtf1\ansi \deff7\deflang1033{\fonttbl{\f7\fswiss\fcharset0\fprq2 MS Sans Serif{\*\falt AvantGarde};}{\f8\froman\fcharset0\fprq2 Times{\*\falt Times New Roman};}{\f11\fmodern\fcharset0\fprq1 Courier New{\*\falt Courier};} {\f61\fmodern\fcharset0\fprq1 Monotype.com;}{\f62\fswiss\fcharset0\fprq2 Franklin Gothic Demi{\*\falt Times New Roman};}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255; \red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;} {\stylesheet{\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \snext0 Normal;}{\s1\li115\ri130\sb280\sa40\sl-240\slmult0\widctlpar \b\f7\fs16 \sbasedon0\snext0 heading 1;}{\s2\li115\ri130\sb120\sl-240\slmult0\widctlpar \b\f7\fs16 \snext0 heading 2;}{ \s3\li115\ri130\sb120\sa60\sl-240\slmult0\widctlpar \f7\fs16 \snext0 heading 3;}{\s4\fi-245\li360\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}{ \s15\fi-187\li274\ri130\sb80\sl-120\slmult0\widctlpar\brdrb\brdrs\brdrw15\brsp20 \tx302 \f7\fs16 \sbasedon0\snext0 a/k link;}{\*\cs16 \additive\cf6 \sbasedon10 annotation reference;}{\s17\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16  \sbasedon0\snext17 annotation text;}{\s18\li115\ri130\sb120\sa120\widctlpar \f7\fs16 \snext0 bitmap;}{\s19\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext0 Context;}{\*\cs20 \additive\up6 \sbasedon10 footnote reference;}{ \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext0 footnote text;}{\s22\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext22 Jl;}{\s23\fi-187\li302\ri130\sb80\sl-240\slmult0\widctlpar\tx302 \f7\fs16  \sbasedon0\snext24 Lb1;}{\s24\fi-187\li302\ri130\sb48\sl-240\slmult0\widctlpar\tx302 \f7\fs16 \sbasedon23\snext24 Lb2;}{\s25\fi-158\li461\ri130\sb48\sl-240\slmult0\widctlpar\tx461 \f7\fs16 \sbasedon24\snext25 Lb3;}{\s26\li302\ri130\sb60\sl-240\slmult0 \widctlpar\tx302 \f7\fs16 \sbasedon24\snext24 Lp1;}{\s27\li720\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext0 Normal Indent;}{\s28\fi-187\li274\ri130\sl-120\slmult0\widctlpar\tx302 \f7\fs16 \sbasedon15\snext28 oem a/k link;}{ \s29\fi-302\li418\ri86\sa120\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext29 oem button;}{\s30\fi-302\li418\ri86\sb160\sa120\sl-240\slmult0\widctlpar\tx720 \f7\fs16 \sbasedon29\snext30 oem button1;}{\s31\fi-187\li302\sb160\sl-240\slmult0 \widctlpar\tx302 \f7\fs16 \sbasedon0\snext31 oem Lb1;}{\s32\li115\ri130\sb160\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext32 oem normal;}{\s33\li115\ri2160\sb160\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext33 oem popup;}{\s34\ri2160\widctlpar  \f7\fs12 \sbasedon33\snext34 oem popup end;}{\s35\fi-187\li302\ri2160\sb160\sl-240\slmult0\widctlpar\tx302 \f7\fs16 \sbasedon31\snext35 oem popup Lb1;}{\s36\li115\sb240\sl-240\slmult0\widctlpar \b\f7\fs16 \sbasedon0\snext36 oem proc head;}{ \s37\li115\ri86\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext0 oem tb text;}{\s38\li58\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext38 oem tb text 2;}{\s39\fi-187\li245\sb80\sl-240\slmult0\widctlpar\tx245\tx302 \f7\fs16  \sbasedon23\snext39 oem tb text 2 Lb1;}{\s40\fi-187\li245\sb48\sl-240\slmult0\widctlpar\tx245\tx302 \f7\fs16 \sbasedon24\snext40 oem tb text 2 Lb2;}{\s41\fi-158\li403\sb48\sl-240\slmult0\widctlpar\tx403\tx461 \f7\fs16 \sbasedon25\snext41  oem tb text 2 Lb3;}{\s42\li115\ri130\sb80\widctlpar \f7\fs16 \sbasedon0\snext42 Pop-up;}{\s43\li115\ri130\sb120\sa40\sl-240\slmult0\widctlpar \b\f7\fs16 \snext23 proc head;}{\s44\li115\ri86\sb280\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon29\snext29  table top;}{\s45\li58\sb280\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon44\snext38 table top 2;}{\s46\fi-317\li432\ri130\sb120\sl-240\slmult0\widctlpar\tx432\tx576 \f7\fs16 \sbasedon24\snext46 Tbr1;}{\s47\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16  \sbasedon0\snext0 Tech Rev;}{\s48\li58\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon44\snext48 vertrule;}{\s49\fi-302\li388\ri130\sb80\sl-240\slmult0\widctlpar\tqr\tx274\tx389 \f7\fs16 \sbasedon23\snext49 Lb1a;}{ \s50\fi-302\li388\ri130\sb48\sl-240\slmult0\widctlpar\tqr\tx274\tx389 \f7\fs16 \sbasedon49\snext50 Lb2a;}{\s51\fi-547\li662\ri187\sb60\sa60\sl240\slmult0\nowidctlpar\tx660 \f7\fs16 \sbasedon0\snext51 Np;}{\s52\li115\ri130\sb80\sl-240\slmult0\widctlpar  \f11\fs16 \sbasedon0\snext0 Code;}{\*\cs53 \additive\b \sbasedon10 UI;}{\*\cs54 \additive\scaps\fs14 \sbasedon10 Smallcaps;}{\s55\nowidctlpar\tx480\tx960\tx1440\tx1920\tx2400\tx2880\tx3360\tx3840\tx4320 \f61\fs20\cf1 \snext55 macro;}{ \s56\li115\ri130\sb80\sa100\sl-240\slmult0\widctlpar\noline\hyphpar0 \f7\fs16\kerning20 \sbasedon0\snext0 Text After Ref Label,tarl;}{\s57\li115\ri130\sb140\sl-440\slmult0\nowidctlpar\noline\hyphpar0 \f62\fs32\kerning20 \sbasedon0\snext57 toc 1,toc1;}{ \s58\li780\ri2820\sb80\sl-14\slmult0\keepn\nowidctlpar \f8\fs16 \sbasedon0\snext0 Index;}{\*\cs59 \additive\cf12 \sbasedon10 HTML;}}{\info{\title Create Help files for Winhelp 4.0}{\author benmoe} {\doccomm Version of what7.dot specific for NT project\'0d\'0d\'0d\'0dModifications:\'0d\'0d6/11/96  Term and Def styles added\'0d\'0d5/14/96  Code and Np styles added}{\operator benmoe}{\creatim\yr1997\mo6\dy10\hr10\min25} {\revtim\yr2000\mo3\dy22\hr14\min26}{\printim\yr2000\mo3\dy3\hr14\min4}{\version2}{\edmins1}{\nofpages56}{\nofwords1175}{\nofchars6699}{\*\company Microsoft Corporation}{\vern57443}}\margl1440\margr1440  \widowctrl\ftnbj\aenddoc\linkstyles\hyphcaps0\formshade \fet0{\*\template \\\\taos\\vss\\Win98\\Template\\What7.dot}\sectd \linex0\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain  \li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_101_1058}}  Lists the installed game controllers and their status. If you want to test, configure, or recalibrate a controller, click its name in the list, and then click {\b Properties}. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_101_1010}{\*\bkmkend IDH_101_1010}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_101_1010}} Click this to add a new game controller. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_101_1022}} Updates the information that appears in the {\b Game Controllers} list. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_101_1028}{\*\bkmkend IDH_101_1028}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_101_1028}} Removes the selected game controller. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_101_1002}{\*\bkmkend IDH_101_1002}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_101_1002}}  Click this to test, configure, or calibrate this game controller.{\up6 {\*\bkmkstart IDH_117_8195}{\*\bkmkend IDH_117_8195} \par }\pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_8195}}  Lists the controller IDs for each game controller installed on this computer. You can change the ID that each game controller is assigned to. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_117_8196}{\*\bkmkend IDH_117_8196}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_8196}} Lists the game controllers installed on this computer. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_117_8197}{\*\bkmkend IDH_117_8197}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_8197}}  Lists the controller IDs and the game controllers currently assigned to each ID.  \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_117_8198}{\*\bkmkend IDH_117_8198}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_8198}} Click this to change the game controller assigned to the selected ID. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_117_1101}{\*\bkmkend IDH_117_1101}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_1101}}  Specifies the port used for your game controller port (if it requires one). \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_117_1100}{\*\bkmkend IDH_117_1100}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_1100}}  Allows other devices, such as your modem, to interrupt the operation of your game controller. However, selecting this check box can cause a delay in the response of your game controller. \par Clear this check box if your joystick isn't working properly in a game.  \par Select this check box if your modem does not work properly when you are playing games online or if you notice networking or other hardware problems when using your game controller.  \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_119_1059}{\*\bkmkend IDH_119_1059}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_119_1059}}  Lists game controllers both by type (for example, 2-button flight yoke) and by product name (for example, Microsoft SideWinder 3D Pro). If possible, choose the specific product name of your game controller. \par If your game controller product name or type is not listed, click {\b Add} {\b Other} to install drivers for it, or click {\b Custom }to specify the features of your controller. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_119_1039}{\*\bkmkend IDH_119_1039}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_119_1039}}  Click this if your game controller is not listed and you have an installation disk. On the next dialog box, click {\b Have Disk} and then follow the instructions on the screen. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_119_1049}}  Click this if your game controller is not listed and you do not have an installation disk. You can specify the characteristics of your controller. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1043}{\*\bkmkend IDH_4099_1043}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1043}} Specifies the number of axe s your game controller has. Although there are exceptions, two-axis game controllers typically provide up-and-down and side-to-side motion. Three-axis game controllers generally provide a throttle control. Four-axis game controllers usually provide a thro ttle and a rudder. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1045}} Specifies the number of buttons on your game controller.{\up6  {\*\bkmkstart IDH_4099_1048}{\*\bkmkend IDH_4099_1048} \par }\pard \li115\ri130\sb80\sl-240\slmult0\widctlpar \page {\cs20\up6 {\*\bkmkstart IDH_4099_1050}{\*\bkmkend IDH_4099_1050}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1050}}  Specifies the type of game controller you are setting up. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1051}{\*\bkmkend IDH_4099_1051}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1051}} Specifies that you have a game controller designed. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1052}{\*\bkmkend IDH_4099_1052}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1052}}  Specifies that you have a touch-directional game controller that moves in eight directions. This kind of game controller typically has two to four buttons. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1053}{\*\bkmkend IDH_4099_1053}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1053}}  Specifies that your game controller has a steering wheel and gas and brake pedals. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1054}{\*\bkmkend IDH_4099_1054}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1054}}  Specifies that your game controller has a point-of-view (POV) hat. A POV hat enables you to specify the position or direction from which to view an object on your screen. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1056}{\*\bkmkend IDH_4099_1056}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1056}}  Provides a space for you to type a name for this custom game controller. This name will appear in the list of available controllers installed on your computer. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1058}} Specifies that your controller is a joystick. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_8188_8189}{\*\bkmkend IDH_8188_8189}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_8188_8189}}  Displays the controller ID that you can assign to the selected game controller. Click the arrows to change the controller ID. \par Some games require the game controller to be assigned to the controller ID 1. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_8188_8191}} Displays the selected controller ID. To assign a game controller to this ID, click the controller name in the {\b  Game Controllers }list. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_8188_8194}{\*\bkmkend IDH_8188_8194}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_8188_8194}} Lists t he available game controllers.  \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4098_12293}{\*\bkmkstart IDH_4098_12308}{\*\bkmkend IDH_4098_12293}{\*\bkmkend IDH_4098_12308}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0 \widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12293}} Shows the range of motion for axes 1 and 2. To calibrate your game controller\rquote s range of motion for axes 1 and 2 (usually X and Y), follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4101_12308}{\*\bkmkend IDH_4101_12308}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12308}} Shows the range  of motion for axis 3. To calibrate your game controller\rquote s range of motion for axis 3, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4101_12334}{\*\bkmkend IDH_4101_12334}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12334}}  Shows the range of motion for axis 4. To calibrate your game controller\rquote s range of motion for axis 4, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4101_12347}{\*\bkmkend IDH_4101_12347}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12347}}  Shows the range of motion for axis 5. To calibrate your game controller\rquote s range of motion for axis 5, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4101_12349}{\*\bkmkend IDH_4101_12349}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12349}}  Shows the range of motion for axis 6. To calibrate your game controller\rquote s range of motion for axis 6, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4101_12309}{\*\bkmkend IDH_4101_12309}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12309}}  Shows the position of your point-of-view (POV) hat as you move it up, left, right, and down. To calibrate your game controller\rquote s POV hat, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4201_1019}{\*\bkmkend IDH_4201_1019}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4201_1019}} Specifies that your game controller has a rudd er or pedals, or that you have attached a separate rudder or pedals. Click this to ensure that the rudder or pedals will work in your games. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4201_12291}{\*\bkmkend IDH_4201_12291}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4201_12291}}  Click this to calibrate your game controller. Calibrating sets the range of motion for the axes of your game controller. If your game controller has a point-of-view (POV) hat, you can also calibrate that feature. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4202_12293}{\*\bkmkend IDH_4202_12293}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12293}}  Shows the range of motion for axes 1 and 2. To calibrate your game controller\rquote s range of motion for axes 1 and 2 (usually X and Y), follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4202_12308}{\*\bkmkend IDH_4202_12308}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12308}}  Shows the range of motion for axis 3. To calibrate your game controller\rquote s range of motion for axis 3, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4202_12334}{\*\bkmkend IDH_4202_12334}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12334}}  Shows the range of motion for axis 4. To calibrate your game controller\rquote s range of motion for axis 4, follow the instructions in the Calibration Information area. \par \pard \fi-605\li720\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4202_8199}{\*\bkmkend IDH_4202_8199}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_8199}}  Describes each step of the calibration process. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12293}{\*\bkmkend IDH_4203_12293}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12293}}  Tests the range of motion for axes 1 and 2. Try to reach all four corners of the test box. If axes 1 and 2 do not respond correctly, try recalibrating the game controller. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12308}{\*\bkmkend IDH_4203_12308}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12308}}  Tests the range of motion for axis 3. Try to reach the top and bottom of the test box using the axis controller on the game controller. If axis 3 does not respond correctly, try recalibrating the game controller. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12334}{\*\bkmkend IDH_4203_12334}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12334}}  Tests the range of motion for axis 4. Try to reach the top and bottom of the test box. If axis 4 does not respond correctly, try recalibrating the game controller. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12347}{\*\bkmkend IDH_4203_12347}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12347}}  Use to test the range of motion for axis 5. Try to reach the top and bottom of the test box. If axis 5 does not respond correctly, try recalibrating the game controller. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12349}{\*\bkmkend IDH_4203_12349}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12349}}  Tests the range of motion for axis 6. Try to reach the top and bottom of the test box. If axis 6 does not respond correctly, try recalibrating the game controller. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12309}{\*\bkmkend IDH_4203_12309}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12309}}  Tests your game controller's point-of-view (POV) hat, if it has one. To test the POV hat, move it up, left, right, and down. If it does not respond correctly, try recalibrating your game controller. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_1023}{\*\bkmkend IDH_4203_1023}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_1023}}  Tests your game controller's buttons. Press each button on your game controller one at a time. Button number assignments are determined by your game controller's manufacturer. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12328}} Click this, or press ENTER, after each step of calibrating the POV hat. \par {\up6 \page }{\cs20\b\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12329}}  Returns to the previous step in the calibration process. The current axis remains either uncalibrated or returns to its previous calibration values. \par {\up6 \page }{\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12330}} Moves to the next control to calibrate, skipping the curren t calibration step. The current axis remains either uncalibrated or returns to its previous calibration values. \par \page {\up6  }{\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12328}}Click this, or press ENTER, after each step of calibrating the POV hat. \par {\up6 \page }{\cs20\b\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12329}} Returns to the previous step in the calibration process. The current axis remains either uncalibrated or returns to its previous calibration values. \par {\up6 \page } {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12330}}Moves to the next control to calibrate, skipping the current calibration step. {\*\bkmkstart IDH_4202_12328} {\*\bkmkend IDH_4202_12328}The current axis remains either uncalibrated or returns to its previous calibration values. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_APPMAN_EXCLUDEDRIVE_INSTRUCTIONS}}  Displays the drives on which new games can be installed and displays the amount of disk space that can be used by games. The percentage of disk space used by games cannot be changed on excluded drives. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_APPMAN_RESTOREDEFAULTS_INSTRUCTIONS}} Restores the default percentages of disk space that can be used by games on all drives. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_APPMAN_DISKUSAGE_SETTING_INSTRUCTIONS}} Adjusts the amount of disk space that  can be used by games. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_VOICE_DETAILS}} Displays additional information about how to turn on and use Voice chat. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_VOICE_LIST_GAMES}} Lists the games that you can play while simultaneously talking with online friends. \par }
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\directx\gamectrl\clientnt\res\dijoy_cm.rtf ===
{\rtf1\ansi \deff7\deflang1033{\fonttbl{\f7\fswiss\fcharset0\fprq2 MS Sans Serif{\*\falt AvantGarde};}{\f8\froman\fcharset0\fprq2 Times{\*\falt Times New Roman};}{\f11\fmodern\fcharset0\fprq1 Courier New{\*\falt Courier};} {\f61\fmodern\fcharset0\fprq1 Monotype.com;}{\f62\fswiss\fcharset0\fprq2 Franklin Gothic Demi{\*\falt Times New Roman};}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255; \red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;} {\stylesheet{\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \snext0 Normal;}{\s1\li115\ri130\sb280\sa40\sl-240\slmult0\widctlpar \b\f7\fs16 \sbasedon0\snext0 heading 1;}{\s2\li115\ri130\sb120\sl-240\slmult0\widctlpar \b\f7\fs16 \snext0 heading 2;}{ \s3\li115\ri130\sb120\sa60\sl-240\slmult0\widctlpar \f7\fs16 \snext0 heading 3;}{\s4\fi-245\li360\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}{ \s15\fi-187\li274\ri130\sb80\sl-120\slmult0\widctlpar\brdrb\brdrs\brdrw15\brsp20 \tx302 \f7\fs16 \sbasedon0\snext0 a/k link;}{\*\cs16 \additive\cf6 \sbasedon10 annotation reference;}{\s17\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16  \sbasedon0\snext17 annotation text;}{\s18\li115\ri130\sb120\sa120\widctlpar \f7\fs16 \snext0 bitmap;}{\s19\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext0 Context;}{\*\cs20 \additive\up6 \sbasedon10 footnote reference;}{ \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext0 footnote text;}{\s22\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext22 Jl;}{\s23\fi-187\li302\ri130\sb80\sl-240\slmult0\widctlpar\tx302 \f7\fs16  \sbasedon0\snext24 Lb1;}{\s24\fi-187\li302\ri130\sb48\sl-240\slmult0\widctlpar\tx302 \f7\fs16 \sbasedon23\snext24 Lb2;}{\s25\fi-158\li461\ri130\sb48\sl-240\slmult0\widctlpar\tx461 \f7\fs16 \sbasedon24\snext25 Lb3;}{\s26\li302\ri130\sb60\sl-240\slmult0 \widctlpar\tx302 \f7\fs16 \sbasedon24\snext24 Lp1;}{\s27\li720\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext0 Normal Indent;}{\s28\fi-187\li274\ri130\sl-120\slmult0\widctlpar\tx302 \f7\fs16 \sbasedon15\snext28 oem a/k link;}{ \s29\fi-302\li418\ri86\sa120\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext29 oem button;}{\s30\fi-302\li418\ri86\sb160\sa120\sl-240\slmult0\widctlpar\tx720 \f7\fs16 \sbasedon29\snext30 oem button1;}{\s31\fi-187\li302\sb160\sl-240\slmult0 \widctlpar\tx302 \f7\fs16 \sbasedon0\snext31 oem Lb1;}{\s32\li115\ri130\sb160\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext32 oem normal;}{\s33\li115\ri2160\sb160\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext33 oem popup;}{\s34\ri2160\widctlpar  \f7\fs12 \sbasedon33\snext34 oem popup end;}{\s35\fi-187\li302\ri2160\sb160\sl-240\slmult0\widctlpar\tx302 \f7\fs16 \sbasedon31\snext35 oem popup Lb1;}{\s36\li115\sb240\sl-240\slmult0\widctlpar \b\f7\fs16 \sbasedon0\snext36 oem proc head;}{ \s37\li115\ri86\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext0 oem tb text;}{\s38\li58\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon0\snext38 oem tb text 2;}{\s39\fi-187\li245\sb80\sl-240\slmult0\widctlpar\tx245\tx302 \f7\fs16  \sbasedon23\snext39 oem tb text 2 Lb1;}{\s40\fi-187\li245\sb48\sl-240\slmult0\widctlpar\tx245\tx302 \f7\fs16 \sbasedon24\snext40 oem tb text 2 Lb2;}{\s41\fi-158\li403\sb48\sl-240\slmult0\widctlpar\tx403\tx461 \f7\fs16 \sbasedon25\snext41  oem tb text 2 Lb3;}{\s42\li115\ri130\sb80\widctlpar \f7\fs16 \sbasedon0\snext42 Pop-up;}{\s43\li115\ri130\sb120\sa40\sl-240\slmult0\widctlpar \b\f7\fs16 \snext23 proc head;}{\s44\li115\ri86\sb280\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon29\snext29  table top;}{\s45\li58\sb280\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon44\snext38 table top 2;}{\s46\fi-317\li432\ri130\sb120\sl-240\slmult0\widctlpar\tx432\tx576 \f7\fs16 \sbasedon24\snext46 Tbr1;}{\s47\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16  \sbasedon0\snext0 Tech Rev;}{\s48\li58\sb80\sl-240\slmult0\widctlpar \f7\fs16 \sbasedon44\snext48 vertrule;}{\s49\fi-302\li388\ri130\sb80\sl-240\slmult0\widctlpar\tqr\tx274\tx389 \f7\fs16 \sbasedon23\snext49 Lb1a;}{ \s50\fi-302\li388\ri130\sb48\sl-240\slmult0\widctlpar\tqr\tx274\tx389 \f7\fs16 \sbasedon49\snext50 Lb2a;}{\s51\fi-547\li662\ri187\sb60\sa60\sl240\slmult0\nowidctlpar\tx660 \f7\fs16 \sbasedon0\snext51 Np;}{\s52\li115\ri130\sb80\sl-240\slmult0\widctlpar  \f11\fs16 \sbasedon0\snext0 Code;}{\*\cs53 \additive\b \sbasedon10 UI;}{\*\cs54 \additive\scaps\fs14 \sbasedon10 Smallcaps;}{\s55\nowidctlpar\tx480\tx960\tx1440\tx1920\tx2400\tx2880\tx3360\tx3840\tx4320 \f61\fs20\cf1 \snext55 macro;}{ \s56\li115\ri130\sb80\sa100\sl-240\slmult0\widctlpar\noline\hyphpar0 \f7\fs16\kerning20 \sbasedon0\snext0 Text After Ref Label,tarl;}{\s57\li115\ri130\sb140\sl-440\slmult0\nowidctlpar\noline\hyphpar0 \f62\fs32\kerning20 \sbasedon0\snext57 toc 1,toc1;}{ \s58\li780\ri2820\sb80\sl-14\slmult0\keepn\nowidctlpar \f8\fs16 \sbasedon0\snext0 Index;}{\*\cs59 \additive\cf12 \sbasedon10 HTML;}}{\info{\title Create Help files for Winhelp 4.0}{\author benmoe} {\doccomm Version of what7.dot specific for NT project\'0d\'0d\'0d\'0dModifications:\'0d\'0d6/11/96  Term and Def styles added\'0d\'0d5/14/96  Code and Np styles added}{\operator benmoe}{\creatim\yr1997\mo6\dy10\hr10\min25} {\revtim\yr2000\mo3\dy22\hr14\min26}{\printim\yr2000\mo3\dy3\hr14\min4}{\version2}{\edmins1}{\nofpages56}{\nofwords1175}{\nofchars6699}{\*\company Microsoft Corporation}{\vern57443}}\margl1440\margr1440  \widowctrl\ftnbj\aenddoc\linkstyles\hyphcaps0\formshade \fet0{\*\template \\\\taos\\vss\\Win98\\Template\\What7.dot}\sectd \linex0\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain  \li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_101_1058}}  Lists the installed game controllers and their status. If you want to test, configure, or recalibrate a controller, click its name in the list, and then click {\b Properties}. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_101_1010}{\*\bkmkend IDH_101_1010}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_101_1010}} Click this to add a new game controller. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_101_1022}} Updates the information that appears in the {\b Game Controllers} list. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_101_1028}{\*\bkmkend IDH_101_1028}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_101_1028}} Removes the selected game controller. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_101_1002}{\*\bkmkend IDH_101_1002}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_101_1002}}  Click this to test, configure, or calibrate this game controller.{\up6 {\*\bkmkstart IDH_117_8195}{\*\bkmkend IDH_117_8195} \par }\pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_8195}}  Lists the controller IDs for each game controller installed on this computer. You can change the ID that each game controller is assigned to. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_117_8196}{\*\bkmkend IDH_117_8196}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_8196}} Lists the game controllers installed on this computer. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_117_8197}{\*\bkmkend IDH_117_8197}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_8197}}  Lists the controller IDs and the game controllers currently assigned to each ID.  \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_117_8198}{\*\bkmkend IDH_117_8198}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_8198}} Click this to change the game controller assigned to the selected ID. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_117_1101}{\*\bkmkend IDH_117_1101}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_1101}}  Specifies the port used for your game controller port (if it requires one). \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_117_1100}{\*\bkmkend IDH_117_1100}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_117_1100}}  Allows other devices, such as your modem, to interrupt the operation of your game controller. However, selecting this check box can cause a delay in the response of your game controller. \par Clear this check box if your joystick isn't working properly in a game.  \par Select this check box if your modem does not work properly when you are playing games online or if you notice networking or other hardware problems when using your game controller.  \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_119_1059}{\*\bkmkend IDH_119_1059}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_119_1059}}  Lists game controllers both by type (for example, 2-button flight yoke) and by product name (for example, Microsoft SideWinder 3D Pro). If possible, choose the specific product name of your game controller. \par If your game controller product name or type is not listed, click {\b Add} {\b Other} to install drivers for it, or click {\b Custom }to specify the features of your controller. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_119_1039}{\*\bkmkend IDH_119_1039}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_119_1039}}  Click this if your game controller is not listed and you have an installation disk. On the next dialog box, click {\b Have Disk} and then follow the instructions on the screen. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_119_1049}}  Click this if your game controller is not listed and you do not have an installation disk. You can specify the characteristics of your controller. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1043}{\*\bkmkend IDH_4099_1043}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1043}} Specifies the number of axe s your game controller has. Although there are exceptions, two-axis game controllers typically provide up-and-down and side-to-side motion. Three-axis game controllers generally provide a throttle control. Four-axis game controllers usually provide a thro ttle and a rudder. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1045}} Specifies the number of buttons on your game controller.{\up6  {\*\bkmkstart IDH_4099_1048}{\*\bkmkend IDH_4099_1048} \par }\pard \li115\ri130\sb80\sl-240\slmult0\widctlpar \page {\cs20\up6 {\*\bkmkstart IDH_4099_1050}{\*\bkmkend IDH_4099_1050}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1050}}  Specifies the type of game controller you are setting up. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1051}{\*\bkmkend IDH_4099_1051}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1051}} Specifies that you have a game controller designed. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1052}{\*\bkmkend IDH_4099_1052}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1052}}  Specifies that you have a touch-directional game controller that moves in eight directions. This kind of game controller typically has two to four buttons. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1053}{\*\bkmkend IDH_4099_1053}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1053}}  Specifies that your game controller has a steering wheel and gas and brake pedals. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1054}{\*\bkmkend IDH_4099_1054}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1054}}  Specifies that your game controller has a point-of-view (POV) hat. A POV hat enables you to specify the position or direction from which to view an object on your screen. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4099_1056}{\*\bkmkend IDH_4099_1056}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1056}}  Provides a space for you to type a name for this custom game controller. This name will appear in the list of available controllers installed on your computer. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4099_1058}} Specifies that your controller is a joystick. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_8188_8189}{\*\bkmkend IDH_8188_8189}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_8188_8189}}  Displays the controller ID that you can assign to the selected game controller. Click the arrows to change the controller ID. \par Some games require the game controller to be assigned to the controller ID 1. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_8188_8191}} Displays the selected controller ID. To assign a game controller to this ID, click the controller name in the {\b  Game Controllers }list. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_8188_8194}{\*\bkmkend IDH_8188_8194}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_8188_8194}} Lists t he available game controllers.  \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4098_12293}{\*\bkmkstart IDH_4098_12308}{\*\bkmkend IDH_4098_12293}{\*\bkmkend IDH_4098_12308}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0 \widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12293}} Shows the range of motion for axes 1 and 2. To calibrate your game controller\rquote s range of motion for axes 1 and 2 (usually X and Y), follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4101_12308}{\*\bkmkend IDH_4101_12308}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12308}} Shows the range  of motion for axis 3. To calibrate your game controller\rquote s range of motion for axis 3, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4101_12334}{\*\bkmkend IDH_4101_12334}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12334}}  Shows the range of motion for axis 4. To calibrate your game controller\rquote s range of motion for axis 4, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4101_12347}{\*\bkmkend IDH_4101_12347}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12347}}  Shows the range of motion for axis 5. To calibrate your game controller\rquote s range of motion for axis 5, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4101_12349}{\*\bkmkend IDH_4101_12349}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12349}}  Shows the range of motion for axis 6. To calibrate your game controller\rquote s range of motion for axis 6, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4101_12309}{\*\bkmkend IDH_4101_12309}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12309}}  Shows the position of your point-of-view (POV) hat as you move it up, left, right, and down. To calibrate your game controller\rquote s POV hat, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4201_1019}{\*\bkmkend IDH_4201_1019}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4201_1019}} Specifies that your game controller has a rudd er or pedals, or that you have attached a separate rudder or pedals. Click this to ensure that the rudder or pedals will work in your games. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4201_12291}{\*\bkmkend IDH_4201_12291}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4201_12291}}  Click this to calibrate your game controller. Calibrating sets the range of motion for the axes of your game controller. If your game controller has a point-of-view (POV) hat, you can also calibrate that feature. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4202_12293}{\*\bkmkend IDH_4202_12293}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12293}}  Shows the range of motion for axes 1 and 2. To calibrate your game controller\rquote s range of motion for axes 1 and 2 (usually X and Y), follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4202_12308}{\*\bkmkend IDH_4202_12308}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12308}}  Shows the range of motion for axis 3. To calibrate your game controller\rquote s range of motion for axis 3, follow the instructions in the Calibration Information area. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4202_12334}{\*\bkmkend IDH_4202_12334}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12334}}  Shows the range of motion for axis 4. To calibrate your game controller\rquote s range of motion for axis 4, follow the instructions in the Calibration Information area. \par \pard \fi-605\li720\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4202_8199}{\*\bkmkend IDH_4202_8199}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_8199}}  Describes each step of the calibration process. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12293}{\*\bkmkend IDH_4203_12293}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12293}}  Tests the range of motion for axes 1 and 2. Try to reach all four corners of the test box. If axes 1 and 2 do not respond correctly, try recalibrating the game controller. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12308}{\*\bkmkend IDH_4203_12308}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12308}}  Tests the range of motion for axis 3. Try to reach the top and bottom of the test box using the axis controller on the game controller. If axis 3 does not respond correctly, try recalibrating the game controller. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12334}{\*\bkmkend IDH_4203_12334}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12334}}  Tests the range of motion for axis 4. Try to reach the top and bottom of the test box. If axis 4 does not respond correctly, try recalibrating the game controller. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12347}{\*\bkmkend IDH_4203_12347}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12347}}  Use to test the range of motion for axis 5. Try to reach the top and bottom of the test box. If axis 5 does not respond correctly, try recalibrating the game controller. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12349}{\*\bkmkend IDH_4203_12349}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12349}}  Tests the range of motion for axis 6. Try to reach the top and bottom of the test box. If axis 6 does not respond correctly, try recalibrating the game controller. \par {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_12309}{\*\bkmkend IDH_4203_12309}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_12309}}  Tests your game controller's point-of-view (POV) hat, if it has one. To test the POV hat, move it up, left, right, and down. If it does not respond correctly, try recalibrating your game controller. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 {\*\bkmkstart IDH_4203_1023}{\*\bkmkend IDH_4203_1023}#{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4203_1023}}  Tests your game controller's buttons. Press each button on your game controller one at a time. Button number assignments are determined by your game controller's manufacturer. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar {\up6 \page }{\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12328}} Click this, or press ENTER, after each step of calibrating the POV hat. \par {\up6 \page }{\cs20\b\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12329}}  Returns to the previous step in the calibration process. The current axis remains either uncalibrated or returns to its previous calibration values. \par {\up6 \page }{\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4202_12330}} Moves to the next control to calibrate, skipping the curren t calibration step. The current axis remains either uncalibrated or returns to its previous calibration values. \par \page {\up6  }{\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12328}}Click this, or press ENTER, after each step of calibrating the POV hat. \par {\up6 \page }{\cs20\b\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12329}} Returns to the previous step in the calibration process. The current axis remains either uncalibrated or returns to its previous calibration values. \par {\up6 \page } {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_4101_12330}}Moves to the next control to calibrate, skipping the current calibration step. {\*\bkmkstart IDH_4202_12328} {\*\bkmkend IDH_4202_12328}The current axis remains either uncalibrated or returns to its previous calibration values. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_APPMAN_EXCLUDEDRIVE_INSTRUCTIONS}}  Displays the drives on which new games can be installed and displays the amount of disk space that can be used by games. The percentage of disk space used by games cannot be changed on excluded drives. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_APPMAN_RESTOREDEFAULTS_INSTRUCTIONS}} Restores the default percentages of disk space that can be used by games on all drives. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_APPMAN_DISKUSAGE_SETTING_INSTRUCTIONS}} Adjusts the amount of disk space that  can be used by games. \par \pard \li115\ri130\sb80\sl-240\slmult0\widctlpar \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_VOICE_DETAILS}} Displays additional information about how to turn on and use Voice chat. \par \page {\cs20\up6 #{\footnote \pard\plain \s21\li115\ri130\sb80\sl-240\slmult0\widctlpar \f7\fs16 {\cs20\up6 #} IDH_VOICE_LIST_GAMES}} Lists the games that you can play while simultaneously talking with online friends. \par }
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\dshow\filters\avi\capture\todo.txt ===
Work items for Vfw capture driver wrapper


1) Support IOverlay
  No work has been done yet to support overlays.
  the thunks should already exist. refer to
  motown\avicap.32\*.c to see how avicap manages overlays
  the thunks from avicap.32 are already in place in this
  filter

2) Support IReferenceClock slaved to the VSYNC clock.
  the _vsyncmem structure in vidx.h is the structure
  that will be shared with the driver.  the driver will
  update this struture with a QPC value and with a VSYNC
  count on each vsync.  we will expose a clock that
  periodically checks this memory and keeps it's own clock
  (based on QPC from drifting relative to this memory)
  the thunks for this have been written but not tested.
  (see vidxSetupVsyncMem)

3) Complete work to support IPropertyPage. the thunking
  for videoDialog is complete.  No new thunks should
  be necessary here, just expose editing of _vfwcaptureoptions.
  A new thunk to enum video capture drivers may make life easier.
  one caveat here:  VfwCapDriverDialog currently works only
  when the filters is Paused (because only then does it have
  the driver open).

4) Expose Line21 (closed caption) and SMPTE timecode streams.
  Thunks for these are complete (these streams are returned
  as extra fields in the VIDEOHDREX for each frame captured).

5) Support variable frame rate capture (for video conferencing).
  preferably some form of frame-on-demand rather than doing
  this by munging frame rates on the fly.

6) Port to NT.  all of the vidxZZZ functions are part of the
  thunking layer.  equivalents will have to be written for NT.
  (some of this work has aleady been done in the NT version
  of avicap32.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\dshow\filters\core\comlite\readme.txt ===
THIS DIRECTORY IS NOW OBSOLETE

GO TO filters\core\decibels
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\dshow\filters\encdec\issues.txt ===
Notes
    05/02   - added EncDec\encdec.inc to control build issues such as turning of DRM - see it
    03/28   - code timebombed since full DRM not in. Need to remove in final shippng stuff..
    03/28   - DRM use turned off (pain to debug with it in) - see flag in encdec.inc
              default to using DogFood XOR encryption
    03/28   - Fast DRM encryption requires a new DrmClien.dll, so turned off by default
              See flag in encdec.inc to turn it on.

Problems
    04/17   - Get Luke to add authentication code into VidControl.
    04/17   - Remove self-authentication code
    04/17   - Need to use Matthij's SBE versions of media subtype/format rather than mine (2 copies of same GUID)
    04/17   - Need to get new DRM licenses for shipping
    04/17   - Need to remove timebomb when everything works
    04/17   - 4 DropQueue threads in VidControl are sort of annoying - any way to have fewer?
    04/13   - support Max ratings for non-freestyle apps (persist most recent max rating?)
    04/15   - methods to override XDSToRat and RatEval CLSID for CoCreate in XDSCodec and Decrypter filters.
    04/10   - methods to extend ratings information over a media sample.
	03/28   - Need private DRMClien.dll to run fast encrypter.  Only one I have is noInt3, so won't publish
    03/28   - no license backup and restore support

    03/28   - consider pulling MSRatings code from the source tree

	03/11	- SYNCRONIZE_BLOCK/DRAIN required in ETFilter/DLL sources files, annoying

To Test/Verify
    04/09   - Rate segment code untested.
    04/08   - Delayed Block-Unrated event untested
    03/27   - need to push methods though the vid control.

Fixed
    04/17   - 04/16   - Possible race condition in the HookupGraphEventService methods
    04/09   - 03/28   - need to put .idl files in correct publish location
    04/05   - 03/27   - no Null renderer-like sample dropping support
    04/05   - 03/28   - no Rate Segment Support - can do trick play with DVR with it (still untested)
    03/27   - need to put in freestyle (XPSP1_Freestyle) branch
    03/27   - no KsProperty support in decrypter filter
    03/25   - no DRM integration
    03/25   - need to finalize the MSRatings format

	03/13	- no XDSCodec filter
	03/13	- do we need to allocate encrypted samples?  (read only media samples?)

	03/12	03/07 - no decoder filter
	03/12	03/07 - no prop pages
	03/11	03/11 - doesn't connect
	03/11	03/11 - multi-process build fails 
	03/11	03/11 - build environment doesn't work
	03/11	03/11 - check into lab01_ private branch

	03/07	- no passing of minor type through format block
	03/07	- no guts - doesn't do anything yet
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\dshow\filters\encdec\dll\scpconfig_encdec_nobbt.ini ===
;-----------------------------------------------------------------
;[Options]
; This section specifies VSP.EXE program options just like command
; line switches. Options that accept paths will have environment
; variables expanded. Options that function as a toggle may specified using
; any of the following terms: true, false, yes, no, on, off, 0 or 1.
;-----------------------------------------------------------------
[Options]
;InFile=obj\i386\EncDec.DLL          ; Input file (may be BBTized if PreBBT specified)

;OutFile=EncDec.dll				; /O Final output file

;PreBBT=%BBTDIR%\dll.dll		; /P Pre-BBT file if process Pre/Post BBT pairs

;AutoMac=1,2				    ; /A Controls AutoMAC generation using ratio
AutoMac=1,5				        ; /A Controls AutoMAC generation using ratio

;AutoMac=100				        ; /A Controls max number of AutoMAC generated
AutoMac=50			        ; /A Controls max number of AutoMAC generated

CallPlacementLabels=false		; Controls verify call insertion at labels

DebugLevel=4			        ; /D Debug level controls output to logfile (0-4)

;Instrument=commandline		    ; /I Passes command line to office instrumentation

NoPopups=true			        ;  Exit on GP-Fault 
;NoPopups=false			        ;  Exit on GP-Fault 

NoRedundantSegments=false		; /R Controls generation of redundant sections

;SourceFileList=%SRC%\files	    ; /S Additional list of source files for injection of verify calls

UseForcedInjection=false		; /U Use forced support code injection.

NoCallInsertion=false			; /X Disable verify call injection

;CallOnce=true			        ; Disable verify calls after first execution (default)
CallOnce=false  		        ; Disable verify calls after first execution (default)

ProfileLog=Profile.log		    ; Name of final binary profile log.

RandomSeed=1000			        ; Seed for random number generator.

;DllMainCleanup=false         	; Over-ride DllMain for critical section cleanup
DllMainCleanup=true         	; Over-ride DllMain for critical section cleanup

;UseDadWatson=false			    ; Inject DadWatson stack signatures
UseDadWatson=true			    ; Inject DadWatson stack signatures

TargetDbgFlags= 0x0000020f	    ; Inject new debug flags into msoutdll.dll


;--------------------------------------------------------------------------
; [SourceFileNames]
; This section contains a list of source file that can have verify calls
; injected into the code. Expansion of environment variables is supported
;--------------------------------------------------------------------------
[SourceFileNames]

EtFilter.cpp
DtFilter.cpp
RegKey.cpp
XDSCodec.cpp

;--------------------------------------------------------------------------
;[CallPlacementProcs]
; This section contains a list of functions that can have verify
; calls placed in them. Vulcan friendly names are supported.
; This section supplements the functions located in the source
; files specified in the [SourceFileNames] section.
;;--------------------------------------------------------------------------
 [CallPlacementProcs]
;;MyWindow::OnIdleHander
;;printf

;--------------------------------------------------------------------------
;[DontTouch]
; This section contains the names of functions that cannot have 
; verify calls inserted into them. Vulcan friendly names may
; be used.
;--------------------------------------------------------------------------
[DontTouch]

CDTFilterInput::Receive
CETFilterInput::Receive
CXDSCodecInput::Receive

CDTFilter::Process
CETFilter::Process
CXDSCodec::Process

CDTFilter::Fire
CETFilter::Fire
CXDSCodec::Fire

CDTFilter::FireBroadcastEvent
CETFilter::FireBroadcastEvent
CXDSCodec::FireBroadcastEvent

CDTFilter::~CDTFilter
CETFilter::~CETFilter
CXDSCodec::~CXDSCodec

CDTFilter::AddSampleToDropQueue
CDTFilter::AddMaxSampleToDropQueue
CDTFilter::DropMinSampleFromDropQueue
CDTFilter::DropQueueThreadBody              ; actually a good place for lots of tests..
CDTFilter::GetCurrRating
CDTFilter::SetCurrRating

CDTFilter::PossiblyUpdateBroadcastEvent

CETFilter::GetRating
CETFilter::SetRating

CXDSCodec::GetXDSPacket
CXDSCodec::ParseXDSBytePair
CXDSCodec::GoDuplicateXDSRatings
CXDSCodec::GoNewXDSRatings
;--------------------------------------------------------------------------
;[CallPlacementLabelProcs]
; This section contains a list of functions that can have verify
; calls placed in them when the /C switch is used or if
; CallPlacement=TRUE in the configuration file. Vulcan friendly
; names are supported.
;;--------------------------------------------------------------------------
 [CallPlacementLabelProcs]
;;MyWindow::OnIdleHander

;--------------------------------------------------------------------------
;[VerifiedParams]
; This section contains over-ride values for segments which
; have been pre-defined in the source files.
; FORMAT:
;  ID1,ID2 = CryptMethod,Significance,Proximity,Redundance
;--------------------------------------------------------------------------
[VerifiedParams]
; 0,1 = 2,10,1,1
; 0,4 = 2,4,1,2

;--------------------------------------------------------------------------
;[VerifyProcs]
; This section contains the names of functions that should be fully
; protected within a verified segment.
; FORMAT:
; Proc = CryptMethod,Significance,Proximity,Redundance
; Proc = ID1, ID2
;--------------------------------------------------------------------------
[VerifyProcs]

CDTFilter::Process                      = 112,1
CETFilter::Process                      = 112,2

CDTFilter::SetCurrRating                = 112,10
CETFilter::GetCurrRating                = 112,11
CETFilter::SetRating                    = 112,12
CDTFilter::GetCurrRating                = 112,13
CDTFilter::get_BlockUnRated             = 112,14

;OpenRegKey                              = 112,15

CDTFilter::HookupGraphEventService      = 113,1
CETFilter::HookupGraphEventService      = 113,2
CDTFilter::PossiblyUpdateRatingsEvent   = 113,3

CDTFilter::CreateInstance               = 113,4
CETFilter::CreateInstance               = 113,5


CDTFilter::put_BlockedRatingAttributes  = 113,6


CETFilter::NonDelegatingQueryInterface  = 113,7
CDTFilter::NonDelegatingQueryInterface  = 113,8

CETFilter::LocateXDSCodec               = 113,9

CDTFilter::Stop                         = 113,10
CDTFilter::Pause                        = 113,11
CDTFilter::Run                          = 113,12

CETFilter::Stop                         = 113,13
CETFilter::Pause                        = 113,14
CETFilter::Run                          = 113,15

CDTFilter::AddMaxSampleToDropQueue      = 113,20
CDTFilter::DropMinSampleFromDropQueue   = 113,21
CDTFilter::FlushDropQueue               = 113,22

;--------------------------------------------------------------------------
;[VSCPProcs]
; This section contains the names of functions that should be encrypted.
;--------------------------------------------------------------------------
[VSCPProcs]

; Tier 1 - needs to be well protected, dealing with licensing and keys

CETFilter::DecodeHashStruct
CETFilter::CreateHashStruct
CETFilter::ReleaseLicenses

CDTFilter::JoinFilterGraph
CETFilter::JoinFilterGraph
CDTFilter::CheckIfSecureServer
CETFilter::CheckIfSecureServer
CDTFilter::InitializeAsSecureClient
CETFilter::InitializeAsSecureClient
 
CDTFilter::UnBindDRMLicenses
CDTFilter::BindDRMLicense
CDTFilter::GetSecureChannelObject
CETFilter::GetSecureChannelObject

CETFilter::ReleaseLicenses
CETFilter::InitLicense
;CETFilter::CheckLicense

Get_EncDec_RegEntries
Set_EncDec_RegEntries
Remove_EncDec_RegEntries
GetRegValue
SetRegValue

--------------------------------------------------------------------------
;[VerifyFiles]
; This section contains the names of source files containing functions
; that should be fully protected within one or more verified segments.
; FORMAT:
; Filename=ID1,ID2
;--------------------------------------------------------------------------
[VerifyFiles]
;;verified1.cpp=0,1
;;checks.cpp=0,1
;;morechecks.cpp=0,5

;DTFilter.cpp    =0,1
;ETFilter.cpp    =0,2
;--------------------------------------------------------------------------
; [EncryptedProcs]
; This section allows specifying functions that will be encrypted
; during VSP.EXE processing. The DECRYPT_DATA() must be inserted
; into the code path before these functions are called and the
; macro ENCRYPT_DATA() may be inserted after the calls to re-encrypt
; the functions.
;--------------------------------------------------------------------------
[EncryptedProcs]


; Tier 3 - don't really need to protect, do so to be annoying..
;CDTFilter::FireBroadcastEvent           = 110,4
;CETFilter::FireBroadcastEvent           = 110,5

;CDTFilter::Fire                         = 110,6
;CETFilter::Fire                         = 110,7

;--------------------------------------------------------------------------
; [EncryptedData]
; This section allows specifying arrays that will be encrypted
; during VSP.EXE processing. The DECRYPT_DATA() must be inserted
; into the code path before these arrays are accessed and the
; macro ENCRYPT_DATA() may be inserted afterwards to re-encrypt
; the data.
;--------------------------------------------------------------------------
[EncryptedData]
;;ConstString000=151,0
;;ConstString001=151,1

;--------------------------------------------------------------------------
; [VerifyData]
; This section allows specifying arrays that will be protected
; inside a protected segment.
;--------------------------------------------------------------------------
[VerifyData]
abCert7003         =0,10
abPVK7003          =0,10
abEncDecCertRoot    =0,12
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\multimedia\dshow\filters\encdec\drminc\newmethods.txt ===
==================================================
==================================================
==
==  Proposed new APIs
==
==================================================
==================================================

//
// GenerateNewLicenseEx
//
// Description:
// Creates a license and stores it in the local license store.
// 
// Parameters:
// dwFlags      - One of the GNL_EX_MODE_* flags - those flags cannot be combined.
// pbAppSec     - App Security level.  Len = APPSEC_LEN.
// pbRights      Rights for this license.  Len = RIGHTS_LEN.
// pbExpiryDate  Expiration data.  Len = DATE_LEN.
// ppsz64KeyID  - Base64-encoded KeyID to use for the license.  Must be NULL for PDRM
//                and RANDOM modes.  If using RANDOM mode, a random KeyID will be generated
//                and a pointer to that buffer will be returned.
// ppsz64EncryptKey   Base64-encoded Content Key. 