mmary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCompletedException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, and the inner exception information passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCompletedException.#ctor(System.Xml.Linq.XName,System.Guid,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCompletedException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, error message that explains the reason for the exception, and the exception that caused the current exception.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceHandle">
      <summary>Represents a handle to <see cref="T:System.Runtime.Persistence.InstanceView" /> object.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceHandle.Free">
      <summary>Frees the instance handle.</summary>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceHandle.IsValid">
      <summary>Returns a value that indicates whether an instance handle is valid.</summary>
      <returns>true if the handle is valid; false if the handle is not valid.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceHandleConflictException">
      <summary>A persistence provider throws this exception when it tries to acquire an instance handle with write access to an instance for which a handle with write access already exists. </summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceHandleConflictException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceHandleConflictException" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceHandleConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceHandleConflictException" /> class with serialized data.</summary>
      <param name="info">The information about the current exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceHandleConflictException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceHandleConflictException" /> class using the error message.</summary>
      <param name="message">The reason for the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceHandleConflictException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceHandleConflictException" /> class using the error message and the inner exception information.</summary>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceHandleConflictException.#ctor(System.Xml.Linq.XName,System.Guid)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceHandleConflictException" /> class using the XName (the combination of namespace and name) of the command and the ID of the target instance against which the command was executed.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceHandleConflictException.#ctor(System.Xml.Linq.XName,System.Guid,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceHandleConflictException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, and the inner exception information passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceHandleConflictException.#ctor(System.Xml.Linq.XName,System.Guid,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceHandleConflictException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, the error message that explains the reason for the current exception, and the inner exception information </summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceKey">
      <summary>Represents an instance key and contains an identifier and metadata associated with the instance key. An instance key acts as a non-unique alias for an instance. </summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKey.#ctor(System.Guid)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKey" /> class using the GUID associated with the instance key passed.</summary>
      <param name="value">The GUID associated with the instance key.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKey.#ctor(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue})">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKey" /> class using the GUID and metadata associated with the instance key.</summary>
      <param name="value">The GUID associated with the instance key.</param>
      <param name="metadata">The dictionary that contains metadata associated with the instance key.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKey.Equals(System.Object)">
      <summary>Compares the GUID associated with the current object (stored in the <see cref="P:System.Runtime.Persistence.InstanceKey.Value" /> property) with the GUID associated with the <see cref="T:System.Runtime.Persistence.InstanceKey" /> object. </summary>
      <returns>true if the GUIDs are same; otherwise returns false.</returns>
      <param name="obj">The GUID to be compared with the current object.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKey.GetHashCode">
      <summary>Returns a unique hash code for the current <see cref="T:System.Runtime.Persistence.InstanceKey" /> object.</summary>
      <returns>The unique hash code.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKey.InvalidKey">
      <summary>Returns an invalid <see cref="T:System.Runtime.Persistence.InstanceKey" /> object. An invalid <see cref="T:System.Runtime.Persistence.InstanceKey" /> object has Guid.Empty value for the <see cref="P:System.Runtime.Persistence.InstanceKey.Value" /> property and a false value for the <see cref="P:System.Runtime.Persistence.InstanceKey.IsValid" /> property.</summary>
      <returns>An invalid instance key.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKey.IsValid">
      <summary>Gets a value that indicates whether the instance key is valid.</summary>
      <returns>true if the instance key is valid; otherwise false.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKey.Metadata">
      <summary>Gets the dictionary that contains metadata associated with the instance key.</summary>
      <returns>The dictionary that contains metadata associated with the instance key.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKey.Value">
      <summary>Gets the GUID value associated with the current instance key.</summary>
      <returns>The GUID value associated with the current instance key.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceKeyCollisionException">
      <summary>A persistence provider throws this exception when it expects to find an instance key in the unassociated state, but finds the key in a different state.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCollisionException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCollisionException" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCollisionException" /> class with serialized data.</summary>
      <param name="info">The information about the current exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCollisionException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCollisionException" /> class with the error message passed as a parameter.</summary>
      <param name="message">The reason for the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCollisionException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCollisionException" /> class with the error message and the inner exception information passed as parameters.</summary>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCollisionException.#ctor(System.Xml.Linq.XName,System.Guid,System.Runtime.Persistence.InstanceKey,System.Guid)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCollisionException" /> class with the name of the command, ID of the instance against which the command was executed, instance key information, and the instance ID that is currently associated with the instance key passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the instance against which the command was executed. The command failed because the instance key is already associated with another instance whose ID is represented by the <paramref name="conflictingInstanceId" /> parameter.</param>
      <param name="instanceKey">The instance key information. </param>
      <param name="conflictingInstanceId">The ID of the instance that is currently associated with the instance key. </param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCollisionException.#ctor(System.Xml.Linq.XName,System.Guid,System.Runtime.Persistence.InstanceKey,System.Guid,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCollisionException" /> class with the name of the command, ID of the instance against which the command was executed, instance key information, the instance ID that is currently associated with the instance key, and inner exception information passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the instance against which the command was executed. The command failed because the instance key is already associated with another instance whose ID is represented by the <paramref name="conflictingInstanceId" /> parameter.</param>
      <param name="instanceKey">The instance key information. </param>
      <param name="conflictingInstanceId">The ID of the instance that is currently associated with the instance key. </param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCollisionException.#ctor(System.Xml.Linq.XName,System.Guid,System.Runtime.Persistence.InstanceKey,System.Guid,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCollisionException" /> class with the name of the command, ID of the instance against which the command was executed, instance key information, the instance ID that is currently associated with the instance key, the error message that describes the exception, and inner exception information passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the instance against which the command was executed. The command failed because the instance key is already associated with another instance whose ID is represented by the conflictingInstanceId parameter.</param>
      <param name="instanceKey">The instance key information. </param>
      <param name="conflictingInstanceId">The ID of the instance that is currently associated with the instance key. </param>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKeyCollisionException.ConflictingInstanceId">
      <summary>Gets the instance ID currently associated with the instance key. The persistence provider expects to find the instance key in an unassociated state, but the key is associated with this instance ID.</summary>
      <returns>The instance ID.</returns>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception. </summary>
      <param name="info">The serialized object data about the exception being thrown.</param>
      <param name="context">The contextual information about the source or the destination.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKeyCollisionException.InstanceKey">
      <summary>Contains information about the instance key.</summary>
      <returns>The instance key information.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceKeyCompletedException">
      <summary>A persistence provider throws this exception when it expects to find an instance key in the associated state but finds the key in the completed state.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCompletedException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCompletedException" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCompletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCompletedException" /> class with the serialized data.</summary>
      <param name="info">The information about the current exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCompletedException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCompletedException" /> class using the error message.</summary>
      <param name="message">The reason for the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCompletedException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCompletedException" /> class using the error message and the inner exception information.</summary>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCompletedException.#ctor(System.Xml.Linq.XName,System.Guid,System.Runtime.Persistence.InstanceKey,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCompletedException" /> class using the name of the command, ID of the instance against which the command was executed, instance key information, the error message that explains the reason for the exception, and the inner exception (the exception that caused the current exception) passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the instance against which the command was executed.</param>
      <param name="instanceKey">The information about the instance key. </param>
      <param name="message">Error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCompletedException.#ctor(System.Xml.Linq.XName,System.Runtime.Persistence.InstanceKey)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCompletedException" /> class using the name of the command, and the instance key information.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceKey">The information about the instance key. </param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCompletedException.#ctor(System.Xml.Linq.XName,System.Runtime.Persistence.InstanceKey,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyCompletedException" /> class using the name of the command, the instance key information, and the inner exception (the exception that caused the current exception).</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceKey">The information about the instance key. </param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyCompletedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception. </summary>
      <param name="info">The serialized object data about the exception being thrown.</param>
      <param name="context">The contextual information about the source or the destination.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKeyCompletedException.InstanceKey">
      <summary>Contains information about the instance key.</summary>
      <returns>The information about the instance key.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceKeyNotReadyException">
      <summary>A persistence provider throws this exception when it expects to find an instance key in the associated state, but finds the key in the unassociated state.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyNotReadyException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyNotReadyException" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyNotReadyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyNotReadyException" /> class with the serialized data.</summary>
      <param name="info">The information about the current exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyNotReadyException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyNotReadyException" /> class by using the error message.</summary>
      <param name="message">The reason for the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyNotReadyException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyNotReadyException" /> class by using the error message and the inner exception information.</summary>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyNotReadyException.#ctor(System.Xml.Linq.XName,System.Guid,System.Runtime.Persistence.InstanceKey,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyNotReadyException" /> class by using the name of the command, ID of the instance against which the command was executed, instance key information, the error message that explains the reason for the exception, and the inner exception (the exception that caused the current exception).</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the instance against which the command was executed.</param>
      <param name="instanceKey">The information about the instance key. </param>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyNotReadyException.#ctor(System.Xml.Linq.XName,System.Runtime.Persistence.InstanceKey)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyNotReadyException" /> class using the name of the command and the instance key information.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceKey">The information about the instance key. </param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyNotReadyException.#ctor(System.Xml.Linq.XName,System.Runtime.Persistence.InstanceKey,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceKeyNotReadyException" /> class using the name of the command, the instance key information, and the inner exception (the exception that caused the current exception) passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceKey">The information about the instance key. </param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceKeyNotReadyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception. </summary>
      <param name="info">The serialized object data about the exception being thrown.</param>
      <param name="context">The contextual information about the source or the destination.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKeyNotReadyException.InstanceKey">
      <summary>Contains information about the instance key.</summary>
      <returns>The instance key.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceKeyState">
      <summary>Contains a list of valid states for instance keys.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceKeyState.Unknown">
      <summary>The instance key is not associated with any instance.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceKeyState.Associated">
      <summary>The instance key is associated with a non-completed instance.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceKeyState.Completed">
      <summary>The instance key was associated with an instance, which is no longer active.</summary>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceKeyView">
      <summary>Provides a view into instance key information.</summary>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKeyView.InstanceKey">
      <summary>Gets the value of the instance key (GUID).</summary>
      <returns>The value of the instance key.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKeyView.InstanceKeyMetadata">
      <summary>Gets the metadata for the instance key as a dictionary of XNames and corresponding InstanceValue objects. </summary>
      <returns>The metadata for the instance key.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKeyView.InstanceKeyMetadataConsistency">
      <summary>Gets consistency of the metadata (None, In Doubt, or Partial) of the instance key.</summary>
      <returns>The consistency of the metadata.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceKeyView.InstanceKeyState">
      <summary>Gets the state of the instance key (Unassociated, Associated, or Completed).</summary>
      <returns>The state of the instance key.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceLockedException">
      <summary>A persistence provider throws this exception when it is unable to acquire a lock on an instance because the instance is already locked by another owner. </summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockedException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockedException" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockedException" /> class with serialized data.</summary>
      <param name="info">The information about the current exception.</param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockedException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockedException" /> class by using the error message passed as a parameter.</summary>
      <param name="message">The reason for the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockedException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockedException" /> class by using the error message and the inner exception information passed as parameters.</summary>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockedException.#ctor(System.Xml.Linq.XName,System.Guid)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockedException" /> class using the XName (the combination of namespace and name) of the command and the ID of the target instance against which the command was executed passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockedException.#ctor(System.Xml.Linq.XName,System.Guid,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockedException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, and the inner exception information passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockedException.#ctor(System.Xml.Linq.XName,System.Guid,System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockedException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, the ID of the owner that currently has a lock on the instance, and serializable metadata information of the owner passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="instanceOwnerId">The ID of the owner that currently has a lock on the instance.</param>
      <param name="serializableInstanceOwnerMetadata">Serializable metadata information about the instance owner (who has a lock on the instance).</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockedException.#ctor(System.Xml.Linq.XName,System.Guid,System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockedException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, the ID of the owner that currently has a lock on the instance, serializable metadata information about the owner, and the exception that caused the current exception passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="instanceOwnerId">The ID of the owner that currently has a lock on the instance.</param>
      <param name="serializableInstanceOwnerMetadata">Serializable metadata information about the instance owner (who has a lock on the instance).</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockedException.#ctor(System.Xml.Linq.XName,System.Guid,System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockedException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, the ID of the owner that currently has a lock on the instance, serializable metadata information about the owner, the error message that explains the reason for the exception, and the exception that caused the current exception passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="instanceOwnerId">The ID of the owner that currently has lock on the instance.</param>
      <param name="serializableInstanceOwnerMetadata">The serializable metadata information about the instance owner (who has a lock on the instance).</param>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockedException.#ctor(System.Xml.Linq.XName,System.Guid,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockedException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, the error message that explains the reason for the exception, and the exception that caused the current exception passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The serialized object data about the exception being thrown.</param>
      <param name="context">The exception that caused the current exception.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceLockedException.InstanceOwnerId">
      <summary>Gets the GUID associated with the current instance owner (who currently has a lock on the instance).</summary>
      <returns>The GUID associated with the current instance owner (who currently has a lock on the instance).</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceLockedException.SerializableInstanceOwnerMetadata">
      <summary>Gets serializable metadata information about the current instance owner (who currently has a lock on the instance).</summary>
      <returns>The serializable metadata information about the current instance owner (who currently has a lock on the instance).</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceLockLostException">
      <summary>A persistence provider throws this exception when it cannot perform the command because the lock on the instance does not match the lock associated with the instance handle against which the command was executed. Either the owner or the version does not match.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockLostException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockLostException" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockLostException" /> class with serialized data.</summary>
      <param name="info">The information about the current exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockLostException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockLostException" /> class using the error message.</summary>
      <param name="message">The reason for the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockLostException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockLostException" /> class using the error message and the inner exception information.</summary>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockLostException.#ctor(System.Xml.Linq.XName,System.Guid)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockLostException" /> class using the XName (the combination of namespace and name) of the command and the ID of the target instance against which the command was executed.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockLostException.#ctor(System.Xml.Linq.XName,System.Guid,System.Exception)">
      <summary>Initializes an instance of <see cref="T:System.Runtime.Persistence.InstanceLockLostException" /> the class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, and the inner exception information.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockLostException.#ctor(System.Xml.Linq.XName,System.Guid,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockLostException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, error message that explains the reason for the exception, and the exception that caused the current exception.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceLockQueryResult">
      <summary>Contains a dictionary of IDs of instances and their owners, who have locks on the instances.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockQueryResult.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockQueryResult" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockQueryResult.#ctor(System.Collections.Generic.IDictionary{System.Guid,System.Guid})">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockQueryResult" /> class and sets the <see cref="P:System.Runtime.Persistence.InstanceLockQueryResult.InstanceOwnerIds" /> property using the dictionary of instance IDs and instance owner IDs.</summary>
      <param name="instanceOwnerIds">A dictionary with instance ID as the key and ID of the instance owner who owns the lock on the instance as the value.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceLockQueryResult.#ctor(System.Guid,System.Guid)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceLockQueryResult" /> class and sets the <see cref="P:System.Runtime.Persistence.InstanceLockQueryResult.InstanceOwnerIds" /> property using the dictionary that contains an instance ID and an instance owner ID.</summary>
      <param name="instanceId">The ID of the instance.</param>
      <param name="instanceOwnerId">The ID of the instance owner who owns locks on the instance represented by the <paramref name="instanceId" /> parameter.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceLockQueryResult.InstanceOwnerIds">
      <summary>Gets a dictionary that contains instance IDs and instance owner IDs. The dictionary has instance ID as a key and ID of the instance owner who owns the lock on the instance as the value. </summary>
      <returns>The dictionary that contains instance IDs and instance owner IDs.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceNotReadyException">
      <summary>A persistence provider throws this exception when it expects to find an instance in an initialized state, but finds the instance in an uninitialized state.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceNotReadyException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceNotReadyException" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceNotReadyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceNotReadyException" /> class with serialized data.</summary>
      <param name="info">The information about the current exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceNotReadyException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceNotReadyException" /> class using the error message.</summary>
      <param name="message">The reason for the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceNotReadyException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceNotReadyException" /> class using the error message and the inner exception information.</summary>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceNotReadyException.#ctor(System.Xml.Linq.XName,System.Guid)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceNotReadyException" /> class using the XName (the combination of namespace and name) of the command and the ID of the target instance against which the command was executed.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceNotReadyException.#ctor(System.Xml.Linq.XName,System.Guid,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceNotReadyException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, and the inner exception information.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceNotReadyException.#ctor(System.Xml.Linq.XName,System.Guid,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceNotReadyException" /> class using the XName (the combination of namespace and name) of the command and the ID of the target instance against which the command was executed, error message that explains the reason for the exception, and the exception that caused the current exception.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceOwner">
      <summary>Represents the owner of an instance in the instance store. An instance owner is an interaction participant with an instance in the instance store.</summary>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceOwner.InstanceOwnerId">
      <summary>Gets ID of the instance owner as a GUID.</summary>
      <returns>The ID of the instance owner.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceOwnerException">
      <summary>A persistence provider throws this exception when it fails to acquire a lock on an instance because instance owner bound to the instance handle is invalid.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceOwnerException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceOwnerException" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceOwnerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceOwnerException" /> class with the serialized data.</summary>
      <param name="info">The information about the current exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceOwnerException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceOwnerException" /> class using the error message.</summary>
      <param name="message">The reason for the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceOwnerException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceOwnerException" /> class using the error message and the inner exception information.</summary>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceOwnerException.#ctor(System.Xml.Linq.XName,System.Guid)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceOwnerException" /> class using the XName (the combination of namespace and name) of the command and the ID of the instance owner.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceOwnerId">The ID of the instance owner.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceOwnerException.#ctor(System.Xml.Linq.XName,System.Guid,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceOwnerException" /> class using the XName (the combination of namespace and name) of the command, the ID of the instance owner, and the inner exception information.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceOwnerId">The ID of the instance owner.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceOwnerException.#ctor(System.Xml.Linq.XName,System.Guid,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceOwnerException" /> class using the XName (the combination of namespace and name) of the command, the ID of the instance owner, error message that describes the exception, and the inner exception information.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceOwnerId">The ID of the instance owner.</param>
      <param name="message">Error message that describes the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceOwnerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The serialized object data about the exception being thrown.</param>
      <param name="context">The contextual information about the source or the destination.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceOwnerException.InstanceOwnerId">
      <summary>Gets the ID of the instance owner.</summary>
      <returns>The ID of the instance owner.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceOwnerQueryResult">
      <summary>Contains metadata associated with an instance owner or instance owners that are retrieved from a persistence store. </summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceOwnerQueryResult.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceOwnerQueryResult" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceOwnerQueryResult.#ctor(System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue}})">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceOwnerQueryResult" /> class using the dictionary passed as a parameter that contains GUIDs associated with instance owners and dictionaries that contain metadata associated with these instance owners. </summary>
      <param name="instanceOwners">A dictionary that contains GUIDs and metadata of instance owners. Metadata itself is contained in another dictionary that contains names and values of metadata properties.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceOwnerQueryResult.#ctor(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue})">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceOwnerQueryResult" /> class using the GUID of the instance owner and metadata associated with that instance owner in the instance store. </summary>
      <param name="instanceOwnerId">GUID associated with the instance owner.</param>
      <param name="metadata">Metadata associated with the instance owner in a dictionary, (which contains the names of properties and their values).</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceOwnerQueryResult.InstanceOwners">
      <summary>Gets the metadata associated with an instance owner or instance owners stored in a dictionary that contains the GUID of the instance owner as a key and the metadata stored in another dictionary of names and values of properties as the value.</summary>
      <returns>The metadata associated with instance owners.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstancePersistenceCommand">
      <summary>Base class for all persistence related command classes.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommand.#ctor(System.Xml.Linq.XName)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceCommand" /> class.</summary>
      <param name="name">The XName (the combination of namespace and name) of the command.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstancePersistenceCommand.AutomaticallyAcquiringLock">
      <summary>Indicates whether the command acquires a lock on the instance. </summary>
      <returns>true if the command acquires a lock on the instance;, otherwise false. The default is false.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstancePersistenceCommand.IsTransactionEnlistmentOptional">
      <summary>Returns a value that indicates whether the transaction enlistment is optional.</summary>
      <returns>true if the transaction enlistment is optional, otherwise false.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstancePersistenceCommand.Name">
      <summary>Gets the name of the persistence command.</summary>
      <returns>An XName (the combination of namespace and name).</returns>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommand.Validate(System.Runtime.Persistence.InstanceView)">
      <summary>Validates an instance view.</summary>
      <param name="view">An instance view object.</param>
    </member>
    <member name="T:System.Runtime.Persistence.InstancePersistenceCommandException">
      <summary>A persistence provider throws this exception when an error occurs while processing a persistence command.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommandException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceCommand" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommandException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceCommand" /> class using the serialized data.</summary>
      <param name="info">The information about the current exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommandException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceCommand" /> class using the error message.</summary>
      <param name="message">The reason for the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommandException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceCommand" /> class using the error message and the inner exception information.</summary>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The inner exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommandException.#ctor(System.Xml.Linq.XName)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceCommand" /> class using the XName (the combination of namespace and name) of the command.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommandException.#ctor(System.Xml.Linq.XName,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceCommand" /> class using the XName (the combination of namespace and name) of the command and the inner exception information.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommandException.#ctor(System.Xml.Linq.XName,System.Guid)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceCommand" /> class using the XName (the combination of namespace and name) of the command and the ID of the target instance against which the command was executed.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommandException.#ctor(System.Xml.Linq.XName,System.Guid,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceCommand" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, and the inner exception information.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommandException.#ctor(System.Xml.Linq.XName,System.Guid,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCompletedException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, error message that explains the reason for the exception, and the exception that caused the current exception.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommandException.#ctor(System.Xml.Linq.XName,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCompletedException" /> class using the XName (the combination of namespace and name) of the command, error message that explains the reason for the exception, and the exception that caused the current exception.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceCommandException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the specified <see cref="T:System.Runtime.Serialization.SerizationInfo" /> object with information about the <see cref="T:System.Runtime.Persistence.InstancePersistenceCommandException" />.</summary>
      <param name="info">The serialized object data about the exception being thrown.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstancePersistenceCommandException.InstanceId">
      <summary>Gets the ID of the instance against which the command was executed.</summary>
      <returns>The ID of the instance.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstancePersistenceContext">
      <summary>Represents execution state information while a persistence command is being executed.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)">
      <summary>Sets the instance key state of the key view to Associated.</summary>
      <param name="key">The instance key identifier.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begin an asynchronous operation to bind a reclaimed lock to the instance view.</summary>
      <returns>The status of an asynchronous operation.</returns>
      <param name="instanceVersion">The version of the instance.</param>
      <param name="timeout">The time period after which the asynchronous operation is aborted.</param>
      <param name="callback">The method to be called when the operation is completed.</param>
      <param name="state">The state information associated with the asynchronous operation.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.BeginExecute(System.Runtime.Persistence.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins executing a persistence command asynchronously.</summary>
      <returns>The status of an asynchronous operation.</returns>
      <param name="command">The persistence command to be executed.</param>
      <param name="timeout">The time-out value for the operation.</param>
      <param name="callback">The delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
      <param name="state">The state information.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.BindAcquiredLock(System.Int64)">
      <summary>Binds a newly acquired lock on an instance with the instance view.</summary>
      <param name="instanceVersion">The version of the instance.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.BindInstance(System.Guid)">
      <summary>Binds an instance whose identifier is specified as a parameter with the instance view.</summary>
      <param name="instanceId">An instance identifier.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)">
      <summary>Creates an <see cref="T:System.Runtime.Persistence.InstanceOwner" /> object based on the owner identifier and lock token parameters only if an <see cref="T:System.Runtime.Persistence.InstanceOwner" /> object does not exist for the owner and binds the instance owner to the instance view.</summary>
      <param name="instanceOwnerId">The identifier for the instance owner.</param>
      <param name="lockToken">A lock token used to correlate with an existing lock owner. If lock tokens do not match, an <see cref="T:System.InvalidOperationException" /> is thrown.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)">
      <summary>Binds an existing lock on an instance using a different version with the instance view. </summary>
      <param name="instanceVersion">The version of the instance.</param>
      <param name="timeout">The time-out value for the operation.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.CompletedInstance">
      <summary>Sets the instance state of the instance view to Completed. </summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.CompletedInstanceKey(System.Guid)">
      <summary>Sets the state of the instance key to Completed.</summary>
      <param name="key">The GUID associated with the instance key.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)">
      <summary>Creates an instance of the <see cref="M:System.Runtime.Persistence.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)" />.</summary>
      <returns>An exception.</returns>
      <param name="instanceVersion">The version of the instance.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)">
      <summary>Ends the asynchronous operation started by the <see cref="M:System.Runtime.Persistence.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</summary>
      <param name="result">The result of the asynchronous operation.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.EndExecute(System.IAsyncResult)">
      <summary>Ends the asynchronous operation.</summary>
      <param name="result">The status of an asynchronous operation.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.Execute(System.Runtime.Persistence.InstancePersistenceCommand,System.TimeSpan)">
      <summary>Executes a persistence command.</summary>
      <param name="command">The persistence command to be executed.</param>
      <param name="timeout">The time-out value for the operation.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstancePersistenceContext.InstanceHandle">
      <summary>Gets the handle to an instance.</summary>
      <returns>The handle to an instance.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstancePersistenceContext.InstanceVersion">
      <summary>Gets the version of an instance.</summary>
      <returns>The version of the instance.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstancePersistenceContext.InstanceView">
      <summary>Gets the instance view object.</summary>
      <returns>The instance view object.</returns>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.LoadedInstance(System.Runtime.Persistence.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue}})">
      <summary>Reads the instance data and all associated instance keys.</summary>
      <param name="state">The instance state information.</param>
      <param name="instanceData">The instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.Persistence.InstanceValue" /> objects.</param>
      <param name="instanceMetadata">Instance metadata as a collection of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.Persistence.InstanceValue" /> objects.</param>
      <param name="associatedInstanceKeyMetadata">Associated instance key metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.Persistence.InstanceValue" /> objects.</param>
      <param name="completedInstanceKeyMetadata">Completed instance metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.Persistence.InstanceValue" /> objects.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstancePersistenceContext.LockToken">
      <summary>Gets the lock token object.</summary>
      <returns>The lock token object.</returns>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue})">
      <summary>Sets the instance data of the instance view using the information passed in the parameter. In addition, sets the instance status to Initialized.</summary>
      <param name="data">Instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.Persistence.InstanceValue" /> objects.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.Persistence.InstanceStoreQueryResult)">
      <summary>Adds the <see cref="T:System.Runtime.Persistence.InstanceStoreQueryResult" /> passed as a parameter to a list of <see cref="T:System.Runtime.Persistence.InstanceStoreQueryResult" /> objects in an <see cref="T:System.Runtime.Persistence.InstanceView" />.</summary>
      <param name="queryResult">The results of a query against an instance store.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue},System.Boolean)">
      <summary>Sets the instance key metadata by using the information passed as a parameter.</summary>
      <param name="key">The instance key identifier.</param>
      <param name="metadata">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.Persistence.InstanceValue" /> objects.</param>
      <param name="complete">The value used to update the <see cref="P:System.Runtime.Persistence.InstanceView.InstanceMetadataConsistency" /> of the instance view.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue},System.Boolean)">
      <summary>Sets the instance metadata by using the information passed in the parameter.</summary>
      <param name="metadata">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.Persistence.InstanceValue" /> objects.</param>
      <param name="complete">The value used to update the <see cref="P:System.Runtime.Persistence.InstanceView.InstanceMetadataConsistency" /> of the instance view.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue},System.Boolean)">
      <summary>Sets the instance owner metadata using the data passed in the parameter.</summary>
      <param name="metadata">The dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.Persistence.InstanceValue" /> objects.</param>
      <param name="complete">The value to specify whether the consistency to be set to <see cref="F:System.Runtime.Persistence.InstanceValueConsistency.InDoubt" /> or <see cref="F:System.Runtime.Persistence.InstanceValueConsistency.Partial" />.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.Persistence.InstancePersistenceContext})">
      <summary>Sets the cancellation handler to be called when the cancel of an operation is requested.</summary>
      <param name="cancellationHandler">The reference to a function to be called.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)">
      <summary>Un-associates an instance key with the instance view.</summary>
      <param name="key">The instance key identifier.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstancePersistenceContext.UserContext">
      <summary>Gets the user context information.</summary>
      <returns>The user context information.</returns>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue)">
      <summary>Updates the metadata of an instance key by using the key and value information in the parameters.</summary>
      <param name="key">The instance key identifier.</param>
      <param name="name">The name of the metadata property.</param>
      <param name="value">The value of the metadata property.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue)">
      <summary>Updates the metadata of an instance by using the information passed as parameters.</summary>
      <param name="name">The name of the metadata property.</param>
      <param name="value">The value of the metadata property.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.Persistence.InstanceValue)">
      <summary>Updates the metadata for an instance by using the information passed using parameters. </summary>
      <param name="name">The name of the metadata property.</param>
      <param name="value">The value of the metadata property.</param>
    </member>
    <member name="T:System.Runtime.Persistence.InstancePersistenceException">
      <summary>Base class for all the persistence related exception classes. The <see cref="T:System.Runtime.Persistence.InstanceOwnerException" /> and the <see cref="T:System.Runtime.Persistence.InstancePersistenceCommandException" /> are derived classes of this class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceException" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceException" /> class using the serialized information and the context information. </summary>
      <param name="info">The  information about the current exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceException" /> class using the error message. </summary>
      <param name="message">Error message that describes the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceException" /> class using the error message and inner exception information.</summary>
      <param name="message">The reason for the current exception.</param>
      <param name="innerException">The exception that causes the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceException.#ctor(System.Xml.Linq.XName)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceException" /> class using the name of the command.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceException.#ctor(System.Xml.Linq.XName,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceException" /> class by using the name of the command and the inner exception information.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceException.#ctor(System.Xml.Linq.XName,System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceException" /> class using the name of the command and the error message.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="message">The error message that describes the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceException.#ctor(System.Xml.Linq.XName,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstancePersistenceException" /> class using the name of the command, error message, and inner exception information.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="message">The error message that describes the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstancePersistenceException.CommandName">
      <summary>Gets the name of the command.</summary>
      <returns>The name of the command.</returns>
    </member>
    <member name="M:System.Runtime.Persistence.InstancePersistenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The serialized object data about the exception being thrown.</param>
      <param name="context">The contextual information about the source or destination</param>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceState">
      <summary>This enumeration contains a list of states of an instance.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceState.Unknown">
      <summary>Indicates that the instance is in Unknown state.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceState.Uninitialized">
      <summary>Indicates that the instance is uninitialized. An uninitialized instance is an instance that has never been persisted.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceState.Initialized">
      <summary>Indicates that the instance is initialized. An initialized instance is an instance that has been persisted at least once and can be persisted again in the future.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceState.Completed">
      <summary>Indicates that the instance is in completed state. A completed instance cannot be persisted again in the future.</summary>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceStore">
      <summary>Represents an instance store. </summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceStore" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.BeginExecute(System.Runtime.Persistence.InstanceHandle,System.Runtime.Persistence.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Asynchronously executes persistence commands such as <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</summary>
      <returns>The state of the asynchronous operation.</returns>
      <param name="handle">An instance handle.</param>
      <param name="command">The command to be executed.</param>
      <param name="timeout">The timeout value for the command execution.</param>
      <param name="callback">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</param>
      <param name="state">The state information.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.BeginTryCommand(System.Runtime.Persistence.InstancePersistenceContext,System.Runtime.Persistence.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>A persistence provider implements this method, which determines whether a particular persistence command can be executed.</summary>
      <returns>The state of the asynchronous operation.</returns>
      <param name="context">The instance context.</param>
      <param name="command">The persistence command to be executed.</param>
      <param name="timeout">The timeout value for the command execution.</param>
      <param name="callback">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</param>
      <param name="state">The state information.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.CreateInstanceHandle">
      <summary>Creates an instance handle. </summary>
      <returns>The instance handle.</returns>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.CreateInstanceHandle(System.Guid)">
      <summary>Creates an instance handle based on the instance identifier passed as a parameter.</summary>
      <returns>The instance handle.</returns>
      <param name="instanceId">An instance identifier.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.CreateInstanceHandle(System.Runtime.Persistence.InstanceOwner)">
      <summary>Creates an instance handle based on the instance owner information passed as a parameter.</summary>
      <returns>The instance handle.</returns>
      <param name="owner">The owner of an instance.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.CreateInstanceHandle(System.Runtime.Persistence.InstanceOwner,System.Guid)">
      <summary>Creates an instance handle based the instance owner and instance identifier information passed as parameters.</summary>
      <returns>The instance handle.</returns>
      <param name="owner">The owner of an instance.</param>
      <param name="instanceId">An instance identifier.</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceStore.DefaultInstanceOwner">
      <summary>Gets or sets the default instance owner.</summary>
      <returns>The default instance owner.</returns>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.EndExecute(System.IAsyncResult)">
      <summary>Ends the asynchronous operation.</summary>
      <returns>The view of the instance.</returns>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.EndTryCommand(System.IAsyncResult)">
      <summary>Ends an asynchronous operation.</summary>
      <returns>true if the asynchronous operation ended; otherwise false.</returns>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.Execute(System.Runtime.Persistence.InstanceHandle,System.Runtime.Persistence.InstancePersistenceCommand,System.TimeSpan)">
      <summary>Executes a persistence command. Examples of persistence commands are: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />. </summary>
      <returns>The view of an instance.</returns>
      <param name="handle">An instance handle.</param>
      <param name="command">The command to be executed.</param>
      <param name="timeout">The timeout value for the operation.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.GetInstanceOwners">
      <summary>Gets the <see cref="T:System.Runtime.Persistence.InstanceOwner" /> objects that represent instance owners (hosts) with instance handles to instances. </summary>
      <returns>The owner of the instance.</returns>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.OnFreeInstanceHandle(System.Runtime.Persistence.InstanceHandle,System.Object)">
      <summary>Invoked when the instance handle is freed.</summary>
      <param name="instanceHandle">An instance handle.</param>
      <param name="userContext">The user context information.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.OnNewInstanceHandle(System.Runtime.Persistence.InstanceHandle)">
      <summary>Invoked when a new instance handle is created.</summary>
      <returns>An object.</returns>
      <param name="instanceHandle">An instance handle.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStore.TryCommand(System.Runtime.Persistence.InstancePersistenceContext,System.Runtime.Persistence.InstancePersistenceCommand,System.TimeSpan)">
      <summary>A persistence provider implements this method, which determines whether a particular persistence command can be executed.</summary>
      <returns>true if the command executes successfully; otherwise, false.</returns>
      <param name="context">The instance context.</param>
      <param name="command">The command to be executed.</param>
      <param name="timeout">Timeout value for the operation.</param>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceStoreQueryResult">
      <summary>Provides extensible mechanism for retrieving data from an instance store without requiring an instance handle from the caller. For example, a caller may want to retrieve owner metadata for all the instance owners in the store.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceStoreQueryResult.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceStoreQueryResult" /> class.</summary>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceValue">
      <summary>Stores the information about instance data and metadata.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceValue.#ctor(System.Object)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceValue" /> class by using value object passed as a parameter.</summary>
      <param name="value">The value object.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceValue.#ctor(System.Object,System.Runtime.Persistence.InstanceValueOptions)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceValue" /> class by using the value Object and the options for those values passed as parameters.</summary>
      <param name="value">The value object.</param>
      <param name="options">The options for the value object <see cref="T:System.Runtime.Persistence.InstanceValueOptions" />)</param>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceValue.DeletedValue">
      <summary>Gets the previously deleted value.</summary>
      <returns>An <see cref="T:System.Runtime.Persistence.InstanceValue" />.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceValue.IsDeletedValue">
      <summary>Returns a value that indicates whether the object represents a deleted value.</summary>
      <returns>true if the object represents a deleted value, otherwise false.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceValue.Options">
      <summary>Specifies the options for an instance value. The options are: None, Optional, WriteOnly.</summary>
      <returns>
        <see cref="T:System.Runtime.Persistence.InstanceValueOptions" />.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceValue.Value">
      <summary>Gets the value as an object.</summary>
      <returns>
        <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceValueConsistency">
      <summary>Describes the consistency guarantee of the instance values contained in a specified dictionary.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceValueConsistency.None">
      <summary>Indicates that there is no consistency guarantee.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceValueConsistency.InDoubt">
      <summary>Indicates that the consistency of the instance value is in doubt.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceValueConsistency.Partial">
      <summary>Indicates that the consistency of the instance value is partial.</summary>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceValueOptions">
      <summary>Contains options for instance values to indicate whether the instance values are write-only, optional, there are no instance values.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceValueOptions.None">
      <summary>Indicates that there are no instance values.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceValueOptions.Optional">
      <summary>Indicates that a host can function without knowing the value of this instance value.</summary>
    </member>
    <member name="F:System.Runtime.Persistence.InstanceValueOptions.WriteOnly">
      <summary>Indicates that the instance value is write-only. The instance value can be used for administration purposes.</summary>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceView">
      <summary>Represents view of an instance. For example, the <see cref="M:System.Runtime.Persistence.InstanceStore.Execute(System.Runtime.Persistence.InstanceHandle,System.Runtime.Persistence.InstancePersistenceCommand,System.TimeSpan)" /> method implementations return an <see cref="T:System.Runtime.Persistence.InstanceView" /> object that provides a view into the instance data in the persistence store.</summary>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceData">
      <summary>Gets instance data as a dictionary of names and values.</summary>
      <returns>The instance data.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceDataConsistency">
      <summary>Gets the consistency (None, In Doubt, and Partial) of the instance data.</summary>
      <returns>The consistency (None, In Doubt, and Partial) of the instance data.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceId">
      <summary>Gets the identifier (ID) of the instance as a GUID.</summary>
      <returns>The ID of the instance.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceKeys">
      <summary>Gets the instance keys as a dictionary of instance key identifiers and associated <see cref="T:System.Runtime.Persistence.InstanceKeyView" /> objects.</summary>
      <returns>A dictionary of instance key identifiers and their associated with instance key view objects.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceKeysConsistency">
      <summary>Gets the consistency value of instance keys.</summary>
      <returns>The consistency value of instance keys.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceMetadata">
      <summary>Gets the metadata of an instance as a dictionary of names and <see cref="T:System.Runtime.Persistence.InstanceValue" /> objects.</summary>
      <returns>The metadata of the instance.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceMetadataConsistency">
      <summary>Gets the consistency of the instance metadata.</summary>
      <returns>The consistency of the instance metadata.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceOwner">
      <summary>Gets the owner of the instance.</summary>
      <returns>The owner of the instance.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceOwnerMetadata">
      <summary>Gets the metadata for an instance owner as a dictionary of names and values.</summary>
      <returns>The metadata.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceOwnerMetadataConsistency">
      <summary>Gets the consistency of the instance owner metadata.</summary>
      <returns>The consistency of the instance owner metadata.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceState">
      <summary>Gets the state of an instance (Unknown, Uninitialized, Initialized, and Completed).</summary>
      <returns>The state of the instance.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.InstanceStoreQueryResults">
      <summary>Gets a collection of <see cref="T:System.Runtime.Persistence.InstanceStoreQueryResult" /> objects.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.IsBoundToInstance">
      <summary>Returns a value that indicates whether the instance view is bound to an instance.</summary>
      <returns>true if the instance view is bound to an instance; otherwise false.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.IsBoundToInstanceOwner">
      <summary>Returns a value that indicates whether the instance view is bound to an instance owner.</summary>
      <returns>true if the instance view is bound to an instance owner; otherwise false.</returns>
    </member>
    <member name="P:System.Runtime.Persistence.InstanceView.IsBoundToLock">
      <summary>Returns a value that indicates whether the instance view is bound to an instance lock.</summary>
      <returns>true if the instance view is bound to an instance lock; otherwise false.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Runtime.Serialization.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.CollectionDataContractAttribute">
      <summary>When applied to a collection type, enables custom specification of the collection item elements. This attribute can be applied only to types that are recognized by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> as valid, serializable collections.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.CollectionDataContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.CollectionDataContractAttribute" /> class. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReference">
      <summary>Gets or sets a value that indicates whether to preserve object reference data.</summary>
      <returns>true to keep object reference data; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName">
      <summary>Gets or sets a custom name for a collection element.</summary>
      <returns>The name to apply to collection elements.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.KeyName">
      <summary>Gets or sets the custom name for a dictionary key name.</summary>
      <returns>The name to use instead of the default dictionary key name.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.Name">
      <summary>Gets or sets the data contract name for the collection type.</summary>
      <returns>The data contract name for the collection type.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.Namespace">
      <summary>Gets or sets the namespace for the data contract.</summary>
      <returns>The namespace of the data contract.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.ValueName">
      <summary>Gets or sets the custom name for a dictionary value name.</summary>
      <returns>The name to use instead of the default dictionary value name.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ContractNamespaceAttribute">
      <summary>Specifies the CLR namespace and XML namespace of the data contract. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ContractNamespaceAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ContractNamespaceAttribute" /> class using the supplied namespace. </summary>
      <param name="contractNamespace">The namespace of the contract.</param>
    </member>
    <member name="P:System.Runtime.Serialization.ContractNamespaceAttribute.ClrNamespace">
      <summary>Gets or sets the CLR namespace of the data contract type. </summary>
      <returns>The CLR-legal namespace of a type. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.ContractNamespaceAttribute.ContractNamespace">
      <summary>Gets the namespace of the data contract members.</summary>
      <returns>The namespace of the data contract members.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractAttribute">
      <summary>Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. To make their type serializable, type authors must define a data contract for their type.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> class. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
      <summary>Gets or sets a value that indicates whether to preserve object reference data.</summary>
      <returns>true to keep object reference data using standard XML; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.Name">
      <summary>Gets or sets the name of the data contract for the type.</summary>
      <returns>The local name of a data contract. The default is the name of the class that the attribute is applied to. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
      <summary>Gets or sets the namespace for the data contract for the type.</summary>
      <returns>The namespace of the contract. </returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary>Provides a mechanism for dynamically mapping types to and from xsi:type representations during serialization and deserialization.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary>Override this method to map the specified xsi:type name and namespace to a data contract type during deserialization.</summary>
      <returns>The type the xsi:type name and namespace is mapped to. </returns>
      <param name="typeName">The xsi:type name to map.</param>
      <param name="typeNamespace">The xsi:type namespace to map.</param>
      <param name="declaredType">The type declared in the data contract.</param>
      <param name="knownTypeResolver">The known type resolver.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary>Override this method to map a data contract type to an xsi:type name and namespace during serialization.</summary>
      <returns>true if mapping succeeded; otherwise, false.</returns>
      <param name="type">The type to map.</param>
      <param name="declaredType">The type declared in the data contract.</param>
      <param name="knownTypeResolver">The known type resolver.</param>
      <param name="typeName">The xsi:type name.</param>
      <param name="typeNamespace">The xsi:type namespace.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary>Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" />  of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, and a surrogate for custom serialization.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</param>
      <param name="maxItemsInObjectGraph">The maximum number of items in the graph to serialize or deserialize. The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</param>
      <param name="ignoreExtensionDataObject">true to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, false.</param>
      <param name="preserveObjectReferences">true to use non-standard XML constructs to preserve object reference data; otherwise, false.</param>
      <param name="dataContractSurrogate">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The number of items exceeds the maximum value.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and an alternative for mapping xsi:type declarations at run time.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</param>
      <param name="maxItemsInObjectGraph">The maximum number of items in the graph to serialize or deserialize. The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</param>
      <param name="ignoreExtensionDataObject">true to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, false.</param>
      <param name="preserveObjectReferences">true to use non-standard XML constructs to preserve object reference data; otherwise, false.</param>
      <param name="dataContractSurrogate">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</param>
      <param name="dataContractResolver">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map xsi:type declarations to data contract types.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">The name of the XML element that encloses the content to serialize or deserialize.</param>
      <param name="rootNamespace">The namespace of the XML element that encloses the content to serialize or deserialize.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">The root element name of the content.</param>
      <param name="rootNamespace">The namespace of the root element.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" />  of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and the XML element and namespace that contain the content.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">The XML element that encloses the content to serialize or deserialize.</param>
      <param name="rootNamespace">The namespace of the XML element that encloses the content to serialize or deserialize.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</param>
      <param name="maxItemsInObjectGraph">The maximum number of items in the graph to serialize or deserialize.</param>
      <param name="ignoreExtensionDataObject">true to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, false.</param>
      <param name="preserveObjectReferences">true to use non-standard XML constructs to preserve object reference data; otherwise, false.</param>
      <param name="dataContractSurrogate">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The number of items exceeds the maximum value.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, the XML element and namespace that contains the content, and an alternative for mapping xsi:type declarations at run time.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">The XML element that encloses the content to serialize or deserialize.</param>
      <param name="rootNamespace">The namespace of the XML element that encloses the content to serialize or deserialize.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</param>
      <param name="maxItemsInObjectGraph">The maximum number of items in the graph to serialize or deserialize.</param>
      <param name="ignoreExtensionDataObject">true to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, false.</param>
      <param name="preserveObjectReferences">true to use non-standard XML constructs to preserve object reference data; otherwise, false.</param>
      <param name="dataContractSurrogate">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</param>
      <param name="dataContractResolver">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map xsi:type declarations to data contract types.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</param>
      <param name="rootNamespace">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two <see cref="T:System.Xml.XmlDictionaryString" /> parameters as well as a list of known types that may be present in the object graph.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</param>
      <param name="rootNamespace">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</param>
      <param name="knownTypes">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and parameters of <see cref="T:System.Xml.XmlDictionaryString" /> that specify the XML element and namespace that contain the content.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">The <see cref="T:System.Xml.XmlDictionaryString" /> that specifies the XML element that encloses the content to serialize or deserialize.</param>
      <param name="rootNamespace">The <see cref="T:System.Xml.XmlDictionaryString" /> that specifies the XML namespace of the root.</param>
      <param name="knownTypes">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</param>
      <param name="maxItemsInObjectGraph">The maximum number of items in the graph to serialize or deserialize.</param>
      <param name="ignoreExtensionDataObject">true to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, false.</param>
      <param name="preserveObjectReferences">true to use non-standard XML constructs to preserve object reference data; otherwise, false.</param>
      <param name="dataContractSurrogate">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The number of items exceeds the maximum value.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, parameters of <see cref="T:System.Xml.XmlDictionaryString" /> that specify the XML element and namespace that contains the content, and an alternative for mapping xsi:type declarations at run time.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">The XML element that encloses the content to serialize or deserialize.</param>
      <param name="rootNamespace">The namespace of the XML element that encloses the content to serialize or deserialize.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</param>
      <param name="maxItemsInObjectGraph">The maximum number of items in the graph to serialize or deserialize.</param>
      <param name="ignoreExtensionDataObject">true to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, false.</param>
      <param name="preserveObjectReferences">true to use non-standard XML constructs to preserve object reference data; otherwise, false.</param>
      <param name="dataContractSurrogate">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</param>
      <param name="dataContractResolver">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map xsi:type declarations to data contract types.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary>Gets the component used to dynamically map xsi:type declarations to known contract types.</summary>
      <returns>Returns an implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> class.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractSurrogate">
      <summary>Gets a surrogate type that can extend the serialization or deserialization process.</summary>
      <returns>An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> class.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary>Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.</summary>
      <returns>true to omit the extension data; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Determines whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned on an object that can be deserialized.</summary>
      <returns>true if the reader is at the start element of the stream to read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Determines whether the <see cref="T:System.Xml.XmlReader" /> is positioned on an object that can be deserialized.</summary>
      <returns>true if the reader is at the start element of the stream to read; otherwise, false.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary>Gets a collection of types that may be present in the object graph serialized using this instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the expected types passed in as known types to the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> constructor.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary>Gets the maximum number of items in an object graph to serialize or deserialize.</summary>
      <returns>The maximum number of items to serialize or deserialize. The default is <see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The number of items exceeds the maximum value.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary>Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.</summary>
      <returns>true to keep the references; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Reads the XML stream with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value. </summary>
      <returns>The deserialized object.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</param>
      <param name="verifyObjectName">true to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, false. </param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <paramref name="verifyObjectName" /> parameter is set to true, and the element name and namespace do not correspond to the values set in the constructor. </exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary>Reads an XML document or document stream and returns the deserialized object.  The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping xsi:type declarations at runtime.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="reader">The XML reader used to read the content.</param>
      <param name="verifyObjectName">true  to verify the object name; otherwise, false.</param>
      <param name="dataContractResolver">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map xsi:type declarations to data contract types.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</param>
      <param name="verifyObjectName">true to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, false.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <paramref name="verifyObjectName" /> parameter is set to true, and the element name and namespace do not correspond to the values set in the constructor. </exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the closing XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Writes the closing XML element using an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary>Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter. The method includes a resolver for mapping xsi:type declarations at runtime.</summary>
      <param name="writer">An XmlDictionaryWriter used to write the content to the XML document or stream.</param>
      <param name="graph">The object that contains the content to write.</param>
      <param name="dataContractResolver">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> used to map xsi:type declarations to known data contracts.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</param>
      <param name="graph">The object that contains the data to write to the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the XML content using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</param>
      <param name="graph">The object to write to the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the XML content using an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</param>
      <param name="graph">The object to write to the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the opening XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML start element.</param>
      <param name="graph">The object to write.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the opening XML element using an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML start element.</param>
      <param name="graph">The object to write.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Runtime.Serialization.DataMemberAttribute">
      <summary>When applied to the member of a type, specifies that the member is part of a data contract and is serializable by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataMemberAttribute" /> class. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.EmitDefaultValue">
      <summary>Gets or sets a value that specifies whether to serialize the default value for a field or property being serialized. </summary>
      <returns>true if the default value for a member should be generated in the serialization stream; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.IsRequired">
      <summary>Gets or sets a value that instructs the serialization engine that the member must be present when reading or deserializing.</summary>
      <returns>true, if the member is required; otherwise, false.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">the member is not present.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.Name">
      <summary>Gets or sets a data member name. </summary>
      <returns>The name of the data member. The default is the name of the target that the attribute is applied to. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.Order">
      <summary>Gets or sets the order of serialization and deserialization of a member.</summary>
      <returns>The numeric order of serialization or deserialization.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EnumMemberAttribute">
      <summary>Specifies that the field is an enumeration member and should be serialized.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.EnumMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.EnumMemberAttribute" /> class. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.EnumMemberAttribute.Value">
      <summary>Gets or sets the value associated with the enumeration member the attribute is applied to.</summary>
      <returns>The value associated with the enumeration member.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary>Represents the options that can be set for an <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ExportOptions" /> class.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.DataContractSurrogate">
      <summary>Gets or sets a serialization surrogate. </summary>
      <returns>An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> interface that can be used to customize how an XML schema representation is exported for a specific type. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary>Gets the collection of types that may be encountered during serialization or deserialization. </summary>
      <returns>A KnownTypes collection that contains types that may be encountered during serialization or deserialization. XML schema representations are exported for all the types specified in this collection by the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary>Stores data from a versioned data contract that has been extended by adding new members. </summary>
    </member>
    <member name="T:System.Runtime.Serialization.IDataContractSurrogate">
      <summary>Provides the methods needed to substitute one type for another by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> during serialization, deserialization, and export and import of XML schema documents (XSD). </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
      <summary>During schema export operations, inserts annotations into the schema for non-null return values. </summary>
      <returns>An object that represents the annotation to be inserted into the XML schema definition. </returns>
      <param name="memberInfo">A <see cref="T:System.Reflection.MemberInfo" /> that describes the member. </param>
      <param name="dataContractType">A <see cref="T:System.Type" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)">
      <summary>During schema export operations, inserts annotations into the schema for non-null return values. </summary>
      <returns>An object that represents the annotation to be inserted into the XML schema definition. </returns>
      <param name="clrType">The CLR type to be replaced. </param>
      <param name="dataContractType">The data contract type to be annotated. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
      <summary>During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type. </summary>
      <returns>The <see cref="T:System.Type" /> to substitute for the <paramref name="type" /> value. This type must be serializable by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. For example, it must be marked with the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute or other mechanisms that the serializer recognizes.</returns>
      <param name="type">The CLR type <see cref="T:System.Type" /> to substitute. </param>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
      <summary>During deserialization, returns an object that is a substitute for the specified object.</summary>
      <returns>The substituted deserialized object. This object must be of a type that is serializable by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. For example, it must be marked with the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute or other mechanisms that the serializer recognizes.</returns>
      <param name="obj">The deserialized object to be substituted.</param>
      <param name="targetType">The <see cref="T:System.Type" /> that the substituted object should be assigned to. </param>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})">
      <summary>Sets the collection of known types to use for serialization and deserialization of the custom data objects. </summary>
      <param name="customDataTypes">A <see cref="T:System.Collections.ObjectModel.Collection`1" />  of <see cref="T:System.Type" /> to add known types to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
      <summary>During serialization, returns an object that substitutes the specified object. </summary>
      <returns>The substituted object that will be serialized. The object must be serializable by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. For example, it must be marked with the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute or other mechanisms that the serializer recognizes.</returns>
      <param name="obj">The object to substitute. </param>
      <param name="targetType">The <see cref="T:System.Type" /> that the substituted object should be assigned to.</param>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
      <summary>During schema import, returns the type referenced by the schema.</summary>
      <returns>The <see cref="T:System.Type" /> to use for the referenced type.</returns>
      <param name="typeName">The name of the type in schema.</param>
      <param name="typeNamespace">The namespace of the type in schema.</param>
      <param name="customData">The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
      <summary>Processes the type that has been generated from the imported schema.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that contains the processed type.</returns>
      <param name="typeDeclaration">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> to process that represents the type declaration generated during schema import.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains the other code generated during schema import.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary>Provides a data structure to store extra data encountered by the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> during deserialization of a type marked with the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary>Gets or sets the structure that contains extra data.</summary>
      <returns>An <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> that contains data that is not recognized as belonging to the data contract.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.IgnoreDataMemberAttribute">
      <summary>When applied to the member of a type, specifies that the member is not part of a data contract and is not serialized.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" /> class. </summary>
    </member>
    <member name="T:System.Runtime.Serialization.ImportOptions">
      <summary>Represents the options that can be set on an <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ImportOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ImportOptions" /> class.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.CodeProvider">
      <summary>Gets or sets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance that provides the means to check whether particular options for a target language are supported.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that provides the means to check whether particular options for a target language are supported.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.DataContractSurrogate">
      <summary>Gets or sets a data contract surrogate that can be used to modify the code generated during an import operation. </summary>
      <returns>An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> interface that handles schema import. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.EnableDataBinding">
      <summary>Gets or sets a value that specifies whether types in generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface.</summary>
      <returns>true if the generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.GenerateInternal">
      <summary>Gets or sets a value that specifies whether generated code will be marked internal or public.</summary>
      <returns>true if the code will be marked internal; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.GenerateSerializable">
      <summary>Gets or sets a value that specifies whether generated data contract classes will be marked with the <see cref="T:System.SerializableAttribute" /> attribute in addition to the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute.</summary>
      <returns>true to generate classes with the <see cref="T:System.SerializableAttribute" /> applied; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.ImportXmlType">
      <summary>Gets or sets a value that determines whether all XML schema types, even those that do not conform to a data contract schema, will be imported.</summary>
      <returns>true to import all schema types; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.Namespaces">
      <summary>Gets a dictionary that contains the mapping of data contract namespaces to the CLR namespaces that must be used to generate code during an import operation.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the namespace mappings. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes">
      <summary>Gets a collection of types that represents data contract collections that should be referenced when generating code for collections, such as lists or dictionaries of items.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the referenced collection types.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.ReferencedTypes">
      <summary>Gets a <see cref="T:System.Collections.Generic.IList`1" /> containing types referenced in generated code. </summary>
      <returns>A <see cref="T:System.Collections.Generic.IList`1" /> that contains the referenced types. </returns>
    </member>
    <member name="T:System.Runtime.Serialization.InvalidDataContractException">
      <summary>The exception that is thrown when the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> or <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> encounters an invalid data contract during serialization and deserialization. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> class with the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains data needed to serialize and deserialize an object. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies user context during serialization and deserialization.</param>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> class with the specified error message. </summary>
      <param name="message">A description of the error. </param>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> class with the specified error message and inner exception. </summary>
      <param name="message">A description of the error. </param>
      <param name="innerException">The original <see cref="T:System.Exception" />. </param>
    </member>
    <member name="T:System.Runtime.Serialization.KnownTypeAttribute">
      <summary>Specifies types that should be recognized by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> when serializing or deserializing a given type. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the name of a method that returns an <see cref="T:System.Collections.IEnumerable" /> of known types.</summary>
      <param name="methodName">The name of the method that returns an <see cref="T:System.Collections.IEnumerable" /> of types used when serializing or deserializing data.</param>
    </member>
    <member name="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the specified type. </summary>
      <param name="type">The <see cref="T:System.Type" /> that is included as a known type when serializing or deserializing data.</param>
    </member>
    <member name="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
      <summary>Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization. </summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the method on the type defined by the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.KnownTypeAttribute.Type">
      <summary>Gets the type that should be recognized during serialization or deserialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. </summary>
      <returns>The <see cref="T:System.Type" /> that is used during serialization or deserialization. </returns>
    </member>
    <member name="T:System.Runtime.Serialization.NetDataContractSerializer">
      <summary>Serializes and deserializes an instance of a type into XML stream or document using the supplied .NET Framework types. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied streaming context data. </summary>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</param>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</summary>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</param>
      <param name="maxItemsInObjectGraph">The maximum number of items in the graph to serialize or deserialize. </param>
      <param name="ignoreExtensionDataObject">true to ignore the data supplied by an extension of the type; otherwise, false.</param>
      <param name="assemblyFormat">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</param>
      <param name="surrogateSelector">An implementation of the <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxItemsInObjectGraph" /> value is less than 0.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied XML root element and namespace.</summary>
      <param name="rootName">The name of the XML element that encloses the content to serialize or deserialize.</param>
      <param name="rootNamespace">The namespace of the XML element that encloses the content to serialize or deserialize.</param>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data and root name and namespace; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</summary>
      <param name="rootName">The name of the XML element that encloses the content to serialize or deserialize.</param>
      <param name="rootNamespace">The namespace of the XML element that encloses the content to serialize or deserialize.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</param>
      <param name="maxItemsInObjectGraph">The maximum number of items in the graph to serialize or deserialize. </param>
      <param name="ignoreExtensionDataObject">true to ignore the data supplied by an extension of the type; otherwise, false.</param>
      <param name="assemblyFormat">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</param>
      <param name="surrogateSelector">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to handle the legacy type.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxItemsInObjectGraph" /> value is less than 0.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with two parameters of type <see cref="T:System.Xml.XmlDictionaryString" /> that contain the root element and namespace used to specify the content.</summary>
      <param name="rootName">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the name of the XML element that encloses the content to serialize or deserialize.</param>
      <param name="rootNamespace">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the XML element that encloses the content to serialize or deserialize.</param>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data, and root name and namespace (as <see cref="T:System.Xml.XmlDictionaryString" />  parameters); in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data found is ignored, assembly loading method, and a surrogate selector.</summary>
      <param name="rootName">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element of the content.</param>
      <param name="rootNamespace">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</param>
      <param name="maxItemsInObjectGraph">The maximum number of items in the graph to serialize or deserialize. </param>
      <param name="ignoreExtensionDataObject">true to ignore the data supplied by an extension of the type; otherwise, false.</param>
      <param name="assemblyFormat">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</param>
      <param name="surrogateSelector">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to handle the legacy type.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxItemsInObjectGraph" /> value is less than 0.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat">
      <summary>Gets a value that specifies a method for locating and loading assemblies.</summary>
      <returns>A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</returns>
      <exception cref="T:System.ArgumentException">The value being set does not correspond to any of the <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> values. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.Binder">
      <summary>Gets or sets an object that controls class loading.</summary>
      <returns>The <see cref="T:System.Runtime.Serialization.SerializationBinder" /> used with the current formatter.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.Context">
      <summary>Gets or sets the object that enables the passing of context data that is useful while serializing or deserializing.</summary>
      <returns>A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the context data.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)">
      <summary>Deserializes an XML document or stream into an object.</summary>
      <returns>The deserialized object.</returns>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the XML to deserialize.</param>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject">
      <summary>Gets a value that specifies whether data supplied by an extension of the object is ignored.</summary>
      <returns>true to ignore the data supplied by an extension of the type; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Determines whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned on an object that can be deserialized using the specified reader.</summary>
      <returns>true, if the reader is at the start element of the stream to read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> that contains the XML to read.</param>
      <exception cref="T:System.ArgumentNullException">the <paramref name="reader" /> is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Determines whether the <see cref="T:System.Xml.XmlReader" /> is positioned on an object that can be deserialized using the specified reader.</summary>
      <returns>true if the reader is at the start element of the stream to read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> that contains the XML to read.</param>
      <exception cref="T:System.ArgumentNullException">the <paramref name="reader" /> is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph">
      <summary>Gets the maximum number of items allowed in the object to be serialized.</summary>
      <returns>The maximum number of items allowed in the object. The default is <see cref="F:System.Int32.MaxValue" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; also checks whether the object data conforms to the name and namespace used to create the serializer.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream or document.</param>
      <param name="verifyObjectName">true to check whether the enclosing XML element name and namespace correspond to the root name and root namespace used to construct the serializer; false to skip the verification.</param>
      <exception cref="T:System.ArgumentNullException">the <paramref name="reader" /> is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</param>
      <exception cref="T:System.ArgumentNullException">the <paramref name="reader" /> is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; also checks whether the object data conforms to the name and namespace used to create the serializer.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</param>
      <param name="verifyObjectName">true to check whether the enclosing XML element name and namespace correspond to the root name and root namespace used to construct the serializer; false to skip the verification.</param>
      <exception cref="T:System.ArgumentNullException">the <paramref name="reader" /> is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializes the specified object graph using the specified writer.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to serialize with.</param>
      <param name="graph">The object to serialize. All child objects of this root object are automatically serialized.</param>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector">
      <summary>Gets or sets an object that assists the formatter when selecting a surrogate for serialization.</summary>
      <returns>An <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> for selecting a surrogate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the closing XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</param>
      <exception cref="T:System.ArgumentNullException">the <paramref name="writer" /> is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Writes the closing XML element using an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</param>
      <exception cref="T:System.ArgumentNullException">the <paramref name="writer" /> is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</param>
      <param name="graph">The object containing the content to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of object to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the XML content using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML content.</param>
      <param name="graph">The object to serialize. All child objects of this root object are automatically serialized.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of object to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the XML content using an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML content.</param>
      <param name="graph">The object to serialize. All child objects of this root object are automatically serialized.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of object to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the opening XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML element.</param>
      <param name="graph">The object to serialize. All child objects of this root object are automatically serialized.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of object to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the opening XML element using an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML element.</param>
      <param name="graph">The object to serialize. All child objects of this root object are automatically serialized.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of object to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary>Provides the base class used to serialize objects as XML streams or documents. This class is abstract.</summary>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Gets a value that specifies whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned over an XML element that can be read.</summary>
      <returns>true if the reader can read the data; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream or document.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Gets a value that specifies whether the <see cref="T:System.Xml.XmlReader" /> is positioned over an XML element that can be read.</summary>
      <returns>true if the reader is positioned over the starting element; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary>Reads the XML stream or document with a <see cref="T:System.IO.Stream" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="stream">A <see cref="T:System.IO.Stream" /> used to read the XML stream or document.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Reads the XML document or stream with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML document.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML document.</param>
      <param name="verifyObjectName">true to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, false to skip the verification.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Reads the XML document or stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Reads the XML document or stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> used to read the XML document or stream.</param>
      <param name="verifyObjectName">true to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; false to skip the verification.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the end of the object data as a closing XML element to the XML document or stream with an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Writes the end of the object data as a closing XML element to the XML document or stream with an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> used to write the XML document or stream.</param>
      <param name="graph">The object that contains the data to write to the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the content to the XML document or stream.</param>
      <param name="graph">The object that contains the content to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</param>
      <param name="graph">The object that contains the content to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes only the content of the object to the XML document or stream using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</param>
      <param name="graph">The object that contains the content to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Writes only the content of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</param>
      <param name="graph">The object that contains the content to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the start of the object's data as an opening XML element using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document.</param>
      <param name="graph">The object to serialize.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the start of the object's data as an opening XML element using the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</param>
      <param name="graph">The object to serialize.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">the type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">there is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">the maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary>Contains methods for reading and writing XML. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary>Generates a default schema type given the specified type name and adds it to the specified schema set.</summary>
      <param name="schemas">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to add the generated schema type to.</param>
      <param name="typeQName">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the type name to assign the schema to. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemas" /> or <paramref name="typeQName" /> argument is null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary>Reads a set of XML nodes from the specified reader and returns the result.</summary>
      <returns>An array of type <see cref="T:System.Xml.XmlNode" />. </returns>
      <param name="xmlReader">An <see cref="T:System.Xml.XmlReader" /> used for reading.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="xmlReader" /> argument is null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">While reading, a null node was encountered.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary>Writes the supplied nodes using the specified writer.</summary>
      <param name="xmlWriter">An <see cref="T:System.Xml.XmlWriter" /> used for writing.</param>
      <param name="nodes">An array of type <see cref="T:System.Xml.XmlNode" /> to write.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="xmlWriter" /> argument is null.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary>When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary>Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.</summary>
      <returns>
        <see cref="T:System.String" />The XPath generated from the type and member data.</returns>
      <param name="type">The type that represents a data contract.</param>
      <param name="pathToMember">The metadata, generated using the <see cref="M:System.Type.GetMember" /> method of the <see cref="T:System.Type" /> class, that points to the specific data member used to generate the query.</param>
      <param name="rootElementXpath">The top level element in the xpath.</param>
      <param name="namespaces">The XML namespaces and their prefixes found in the data contract.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary>Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces..</summary>
      <returns>
        <see cref="T:System.String" />The XPath generated from the type and member data.</returns>
      <param name="type">The type that represents a data contract.</param>
      <param name="pathToMember">The metadata, generated using the <see cref="M:System.Type.GetMember" /> method of the <see cref="T:System.Type" /> class, that points to the specific data member used to generate the query.</param>
      <param name="namespaces">The XML namespaces and their prefixes found in the data contract.</param>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary>Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd). </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class with the specified set of schemas. </summary>
      <param name="schemas">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to be exported. </param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary>Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported. </summary>
      <returns>true if the types can be exported; otherwise, false.</returns>
      <param name="assemblies">A <see cref="T:System.Collections.Generic.ICollection`1" />   of <see cref="T:System.Reflection.Assembly" /> that contains the assemblies with the types to export.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary>Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <see cref="T:System.Collections.Generic.ICollection`1" /> can be exported. </summary>
      <returns>true if the types can be exported; otherwise, false.</returns>
      <param name="types">A <see cref="T:System.Collections.Generic.ICollection`1" />   that contains the specified types to export.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary>Gets a value that indicates whether the specified common language runtime (CLR) type can be exported. </summary>
      <returns>true if the type can be exported; otherwise, false. </returns>
      <param name="type">The <see cref="T:System.Type" /> to export. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary>Transforms the types contained in the specified collection of assemblies. </summary>
      <param name="assemblies">A <see cref="T:System.Collections.Generic.ICollection`1" />   (of <see cref="T:System.Reflection.Assembly" />) that contains the types to export.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="assemblies" /> argument is null.</exception>
      <exception cref="T:System.ArgumentException">An <see cref="T:System.Reflection.Assembly" /> in the collection is null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary>Transforms the types contained in the <see cref="T:System.Collections.Generic.ICollection`1" /> passed to this method.</summary>
      <param name="types">A  <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Type" />) that contains the types to export.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="types" /> argument is null.</exception>
      <exception cref="T:System.ArgumentException">A type in the collection is null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary>Transforms the specified .NET Framework type into an XML schema definition language (XSD) schema. </summary>
      <param name="type">The <see cref="T:System.Type" /> to transform into an XML schema. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="type" /> argument is null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary>Returns the top-level name and namespace for the <see cref="T:System.Type" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> that represents the top-level name and namespace for this <see cref="T:System.Type" />, which is written to the stream when writing this object. </returns>
      <param name="type">The <see cref="T:System.Type" /> to query.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="type" /> argument is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary>Returns the XML schema type for the specified type.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlSchemaType" /> that contains the XML schema. </returns>
      <param name="type">The type to return a schema for.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="type" /> argument is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary>Returns the contract name and contract namespace for the <see cref="T:System.Type" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the contract name of the type and its namespace.</returns>
      <param name="type">The <see cref="T:System.Type" /> that was exported. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="type" /> argument is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary>Gets or sets an <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options that can be set for the export operation. </summary>
      <returns>An <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options used to customize how types are exported to schemas.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary>Gets the collection of exported XML schemas. </summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> method.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractImporter">
      <summary>Allows the transformation of a set of XML schema files (.xsd) into common language runtime (CLR) types. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> class with the <see cref="T:System.CodeDom.CodeCompileUnit" /> that will be used to generate CLR code.</summary>
      <param name="codeCompileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> that will be used to store the code. </param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets a value that indicates whether the schemas contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be transformed into a <see cref="T:System.CodeDom.CodeCompileUnit" />. </summary>
      <returns>true if the schemas can be transformed to data contract types; otherwise, false. </returns>
      <param name="schemas">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to transform. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemas" /> parameter is null.</exception>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">A data contract involved in the import is invalid.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
      <summary>Gets a value that indicates whether the specified set of types contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be transformed into CLR types generated into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns>true if the schemas can be transformed; otherwise, false. </returns>
      <param name="schemas">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to transform.</param>
      <param name="typeNames">An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Xml.XmlQualifiedName" /> that represents the set of schema types to import.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemas" /> or <paramref name="typeNames" /> parameter is null.</exception>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">A data contract involved in the import is invalid.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
      <summary>Gets a value that indicates whether a specific schema element contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be imported.</summary>
      <returns>true if the element can be imported; otherwise, false.</returns>
      <param name="schemas">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to import.</param>
      <param name="element">A specific <see cref="T:System.Xml.Schema.XmlSchemaElement" /> to check in the set of schemas.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemas" /> or <paramref name="element" /> parameter is null.</exception>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">A data contract involved in the import is invalid.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary>Gets a value that indicates whether the schemas contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be transformed into a <see cref="T:System.CodeDom.CodeCompileUnit" />. </summary>
      <returns>true if the schemas can be transformed to data contract types; otherwise, false.</returns>
      <param name="schemas">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations. </param>
      <param name="typeName">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the names of the schema types that need to be imported from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemas" /> or <paramref name="typeName" /> parameter is null.</exception>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">A data contract involved in the import is invalid.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
      <summary>Gets a <see cref="T:System.CodeDom.CodeCompileUnit" /> used for storing the CLR types generated.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> used to store the CLR types generated.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
      <summary>Returns a <see cref="T:System.CodeDom.CodeTypeReference" /> to the CLR type generated for the schema type with the specified <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> reference to the CLR type generated for the schema type with the <paramref name="typeName" /> specified.</returns>
      <param name="typeName">The <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the schema type to look up.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
      <summary>Returns a <see cref="T:System.CodeDom.CodeTypeReference" /> for the specified XML qualified element and schema element.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that represents the type that was generated for the specified schema type.</returns>
      <param name="typeName">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the XML qualified name of the schema type to look up.</param>
      <param name="element">An <see cref="T:System.Xml.Schema.XmlSchemaElement" /> that specifies an element in an XML schema.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
      <summary>Returns a list of <see cref="T:System.CodeDom.CodeTypeReference" /> objects that represents the known types generated when generating code for the specified schema type.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.CodeDom.CodeTypeReference" />.</returns>
      <param name="typeName">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the schema type to look up known types for.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
      <summary>Transforms the specified set of XML schemas contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into a <see cref="T:System.CodeDom.CodeCompileUnit" />. </summary>
      <param name="schemas">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations to generate CLR types for.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemas" /> parameter is null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
      <summary>Transforms the specified set of schema types contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into CLR types generated into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <param name="schemas">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations.</param>
      <param name="typeNames">A <see cref="T:System.Collections.Generic.ICollection`1" />  (of <see cref="T:System.Xml.XmlQualifiedName" />) that represents the set of schema types to import.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
      <summary>Transforms the specified schema element in the set of specified XML schemas into a <see cref="T:System.CodeDom.CodeCompileUnit" /> and returns an <see cref="T:System.Xml.XmlQualifiedName" /> that represents the data contract name for the specified element.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the specified element.</returns>
      <param name="schemas">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to transform.</param>
      <param name="element">An <see cref="T:System.Xml.Schema.XmlSchemaElement" /> that represents the specific schema element to transform. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemas" /> or <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary>Transforms the specified XML schema type contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <param name="schemas">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations. </param>
      <param name="typeName">A <see cref="T:System.Xml.XmlQualifiedName" /> that represents a specific schema type to import.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemas" /> or <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractImporter.Options">
      <summary>Gets or sets an <see cref="T:System.Runtime.Serialization.ImportOptions" /> that contains settable options for the import operation. </summary>
      <returns>A <see cref="T:System.Runtime.Serialization.ImportOptions" /> that contains settable options. </returns>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.DataContractSerializerSection">
      <summary>Handles the XML elements used to configure serialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DataContractSerializerSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.DataContractSerializerSection" /> class. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.DataContractSerializerSection.DeclaredTypes">
      <summary>Gets a collection of types added to the <see cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" /> property.</summary>
      <returns>A <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection" /> that contains the known types.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement">
      <summary>Handles the XML elements used to add known types that are used for serialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" /> class with the specified type name.</summary>
      <param name="typeName">The name of the type that requires a collection of known types.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.DeclaredTypeElement.KnownTypes">
      <summary>Gets the collection of known types.</summary>
      <returns>A <see cref="T:System.Runtime.Serialization.Configuration.TypeElementCollection" /> that contains the known types.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.DeclaredTypeElement.Type">
      <summary>Gets or sets the name of the declared type that requires a collection of known types.</summary>
      <returns>The name of the declared type.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection">
      <summary>Handles the XML elements used to configure XML serialization using the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Add(System.Runtime.Serialization.Configuration.DeclaredTypeElement)">
      <summary>Adds the specified configuration element.</summary>
      <param name="element">The <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" /> to add.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Clear">
      <summary>Clears the collection of all items.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Contains(System.String)">
      <summary>Returns a value if the collection contains the item specified by its type name.</summary>
      <returns>true if the collection contains the specified item; otherwise, false.</returns>
      <param name="typeName">The name of the configuration element to search for.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.IndexOf(System.Runtime.Serialization.Configuration.DeclaredTypeElement)">
      <summary>Returns the index of the specified configuration element.</summary>
      <returns>The index of the specified configuration element; otherwise, -1.</returns>
      <param name="element">The <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" /> to find.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Item(System.Int32)">
      <summary>Returns the configuration element specified by its index.</summary>
      <returns>The <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" /> specified by its index.</returns>
      <param name="index">The index of the element to access.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Item(System.String)">
      <summary>Returns the item specified by its key.</summary>
      <returns>The configuration element specified by its key.</returns>
      <param name="typeName">The name of the type (that functions as a key) to return.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Remove(System.Runtime.Serialization.Configuration.DeclaredTypeElement)">
      <summary>Removes the specified configuration element from the collection.</summary>
      <param name="element">The <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" /> to remove.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Remove(System.String)">
      <summary>Removes the configuration element specified by its key.</summary>
      <param name="typeName">The type name (that functions as a key) of the configuration element to remove.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the configuration element at the specified index.</summary>
      <param name="index">The index of the configuration element to remove.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.ParameterElement">
      <summary>Handles the XML elements used to configure XML serialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElement.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" /> class with the specified index.</summary>
      <param name="index">Specifies a position in the collection of parameters.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" /> class with the specified type name.</summary>
      <param name="typeName">The name of the parameter's type.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.ParameterElement.Index">
      <summary>Gets or sets the position of the generic known type.</summary>
      <returns>The position of the parameter in the containing generic declared type.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.ParameterElement.Parameters">
      <summary>Gets the collection of parameters.</summary>
      <returns>A <see cref="T:System.Runtime.Serialization.Configuration.ParameterElementCollection" /> that contains all parameters.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.ParameterElement.Type">
      <summary>Gets or sets the type name of the parameter of the generic known type.</summary>
      <returns>The type name of the parameter.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.ParameterElementCollection">
      <summary>Handles the XML elements used to configure serialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.ParameterElementCollection" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.Add(System.Runtime.Serialization.Configuration.ParameterElement)">
      <summary>Adds an element to the collection of parameter elements.</summary>
      <param name="element">The <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" /> element to add to the collection.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.Clear">
      <summary>Removes all members of the collection.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.ParameterElementCollection.CollectionType">
      <summary>Gets the type of the parameters collection in configuration.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> that contains the type of the parameters collection in configuration.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.Contains(System.String)">
      <summary>Gets or sets a value specifying whether the named type is found in the collection.</summary>
      <returns>true if the element is present; otherwise, false.</returns>
      <param name="typeName">The name of the type to find.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.IndexOf(System.Runtime.Serialization.Configuration.ParameterElement)">
      <summary>Gets the position of the specified element in the collection.</summary>
      <returns>The position of the specified element.</returns>
      <param name="element">The <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" /> element to find.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.ParameterElementCollection.Item(System.Int32)">
      <summary>Gets or sets the element in the collection at the specified position.</summary>
      <returns>A <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" /> from the collection.</returns>
      <param name="index">The position of the element in the collection to get or set.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.Remove(System.Runtime.Serialization.Configuration.ParameterElement)">
      <summary>Removes the specified element from the collection.</summary>
      <param name="element">The <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" /> to remove.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified position.</summary>
      <param name="index">The position of the element to remove.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.SerializationSectionGroup">
      <summary>Handles the XML elements used to configure serialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.SerializationSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.SerializationSectionGroup" /> class. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.SerializationSectionGroup.DataContractSerializer">
      <summary>Gets the <see cref="T:System.Runtime.Serialization.Configuration.DataContractSerializerSection" /> used to set up the known types collection.</summary>
      <returns>The <see cref="T:System.Runtime.Serialization.Configuration.DataContractSerializerSection" /> used for the serialization configuration section.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.SerializationSectionGroup.GetSectionGroup(System.Configuration.Configuration)">
      <summary>Gets the serialization configuration section for the specified configuration.</summary>
      <returns>A <see cref="T:System.Runtime.Serialization.Configuration.SerializationSectionGroup" /> that represents the configuration section.</returns>
      <param name="config">A <see cref="T:System.Configuration.Configuration" /> that represents the configuration to retrieve.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.TypeElement">
      <summary>Handles the XML elements used to configure serialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.TypeElement" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.TypeElement" /> class with the specified type name. </summary>
      <param name="typeName">The name of the type that uses known types.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.TypeElement.Index">
      <summary>Gets or sets the position of the element.</summary>
      <returns>The position of the element.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.TypeElement.Parameters">
      <summary>Gets a collection of parameters.</summary>
      <returns>A <see cref="T:System.Runtime.Serialization.Configuration.ParameterElementCollection" /> that contains the parameters for the type.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.TypeElement.Type">
      <summary>Gets or sets the name of the type.</summary>
      <returns>The name of the type.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.TypeElementCollection">
      <summary>Handles the XML elements used to configure the known types used for serialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Configuration.TypeElementCollection" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.Add(System.Runtime.Serialization.Configuration.TypeElement)">
      <summary>Adds the specified element to the collection.</summary>
      <param name="element">A <see cref="T:System.Runtime.Serialization.Configuration.TypeElement" /> that represents the known type to add.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.Clear">
      <summary>Removes all members of the collection.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.TypeElementCollection.CollectionType">
      <summary>Gets the collection of elements that represents the types using known types.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> that contains the element objects.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.IndexOf(System.Runtime.Serialization.Configuration.TypeElement)">
      <summary>Returns the position of the specified element.</summary>
      <returns>The position of the specified element.</returns>
      <param name="element">The <see cref="T:System.Runtime.Serialization.Configuration.TypeElement" /> to find in the collection.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.TypeElementCollection.Item(System.Int32)">
      <summary>Returns a specific member of the collection by its position.</summary>
      <returns>The element at the specified position.</returns>
      <param name="index">The position of the item to return.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.Remove(System.Runtime.Serialization.Configuration.TypeElement)">
      <summary>Removes the specified element from the collection.</summary>
      <param name="element">The <see cref="T:System.Runtime.Serialization.Configuration.TypeElement" /> to remove.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified position.</summary>
      <param name="index">The position in the collection from which to remove the element.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary>Serializes objects to the JavaScript Object Notation (JSON) and deserializes JSON data to objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> class to serialize or deserialize an object of the specified type.</summary>
      <param name="type">The type of the instances that is serialized or deserialized.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> class to serialize or deserialize an object of the specified type, with a collection of known types that may be present in the object graph.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" />  of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize or deserialize, whether to ignore unexpected data or emit type information, and a surrogate for custom serialization.</summary>
      <param name="type">The type of the instances that is serialized or deserialized.</param>
      <param name="knownTypes">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content. </param>
      <param name="maxItemsInObjectGraph">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</param>
      <param name="ignoreExtensionDataObject">true to ignore the <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> interface upon serialization and ignore unexpected data upon deserialization; otherwise, false. The default is false.</param>
      <param name="dataContractSurrogate">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</param>
      <param name="alwaysEmitTypeInformation">true to emit type information; otherwise, false. The default is false.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter.</summary>
      <param name="type">The type of the instances that is serialized or deserialized.</param>
      <param name="rootName">The name of the XML element that encloses the content to serialize or deserialize.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter, with a collection of known types that may be present in the object graph.</summary>
      <param name="type">The type of the instances that is serialized or deserialized.</param>
      <param name="rootName">The name of the XML element that encloses the content to serialize or deserialize. The default is "root".</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" />  of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies the root name of the XML element, a list of known types that may be present in the object graph, the maximum number of graph items to serialize or deserialize, whether to ignore unexpected data or emit type information, and a surrogate for custom serialization.</summary>
      <param name="type">The type of the instances that is serialized or deserialized.</param>
      <param name="rootName">The name of the XML element that encloses the content to serialize or deserialize. The default is "root".</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</param>
      <param name="maxItemsInObjectGraph">The maximum number of items in the graph to serialize or deserialize. The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</param>
      <param name="ignoreExtensionDataObject">true to ignore the <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> interface upon serialization and ignore unexpected data upon deserialization; otherwise, false. The default is false.</param>
      <param name="dataContractSurrogate">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</param>
      <param name="alwaysEmitTypeInformation">true to emit type information; otherwise, false. The default is false.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type">The type of the instances that is serialized or deserialized.</param>
      <param name="rootName">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type <see cref="T:System.Xml.XmlDictionaryString" />, with a collection of known types that may be present in the object graph.</summary>
      <param name="type">The type of the instances that is serialized or deserialized.</param>
      <param name="rootName">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content. </param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies the root name of the XML element, a list of known types that may be present in the object graph, the maximum number of graph items to serialize or deserialize, whether to ignore unexpected data or emit type information, and a surrogate for custom serialization.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</param>
      <param name="maxItemsInObjectGraph">The maximum number of items in the graph to serialize or deserialize. The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</param>
      <param name="ignoreExtensionDataObject">true to ignore the <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> interface upon serialization and ignore unexpected data upon deserialization; otherwise, false. The default is false.</param>
      <param name="dataContractSurrogate">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</param>
      <param name="alwaysEmitTypeInformation">true to emit type information; otherwise, false. The default is false.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
      <summary>Gets a surrogate type that is currently active for a given <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> instance. Surrogates can extend the serialization or deserialization process.</summary>
      <returns>An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> class.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary>Gets a value that specifies whether unknown data is ignored on deserialization and whether the <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> interface is ignored on serialization.</summary>
      <returns>true to ignore unknown data and <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Gets a value that specifies whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned over an XML element that represents an object the serializer can deserialize from.</summary>
      <returns>true if the reader is positioned correctly; otherwise, false.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream mapped from JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Determines whether the <see cref="T:System.Xml.XmlReader" /> is positioned on an object that can be deserialized.</summary>
      <returns>true if the reader is positioned correctly; otherwise, false.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary>Gets a collection of types that may be present in the object graph serialized using this instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the expected types passed in as known types to the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> constructor.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary>Gets the maximum number of items in an object graph that the serializer serializes or deserializes in one read or write call.</summary>
      <returns>The maximum number of items to serialize or deserialize. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The number of items exceeds the maximum value.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary>Reads a document stream in the JSON (JavaScript Object Notation) format and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to be read.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Reads the XML document mapped from JSON (JavaScript Object Notation) with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML document mapped from JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Reads the XML document mapped from JSON with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML document mapped from JSON.</param>
      <param name="verifyObjectName">true to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, false to skip the verification. The default is true.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Reads the XML document mapped from JSON (JavaScript Object Notation) with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> used to read the XML document mapped from JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Reads an XML document mapped from JSON with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> used to read the XML document mapped from JSON.</param>
      <param name="verifyObjectName">true to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, false, which skips the verification. The default is true.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the closing XML element to an XML document, using an <see cref="T:System.Xml.XmlDictionaryWriter" />, which can be mapped to JavaScript Object Notation (JSON).</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document to map to JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Writes the closing XML element to an XML document, using an <see cref="T:System.Xml.XmlWriter" />, which can be mapped to JavaScript Object Notation (JSON).</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document mapped to JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Serializes a specified object to JavaScript Object Notation (JSON) data and writes the resulting JSON to a stream.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> that is written to.</param>
      <param name="graph">The object that contains the data to write to the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream to map to JSON.</param>
      <param name="graph">The object that contains the data to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document to map to JSON.</param>
      <param name="graph">The object that contains the data to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to write to.</param>
      <param name="graph">The object to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write to.</param>
      <param name="graph">The object to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML start element.</param>
      <param name="graph">The object to write.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML start element.</param>
      <param name="graph">The object to write.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary>Specifies the interface for initializing a JavaScript Object Notation (JSON) reader when reusing them to read from a particular stream or buffer.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified buffer that contains JSON-encoded data.</summary>
      <param name="buffer">The input <see cref="T:System.Byte" /> buffer array from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> used by the reader.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
      <param name="onClose">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream that contains JSON-encoded data.</summary>
      <param name="stream">The input <see cref="T:System.IO.Stream" /> from which to read.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> used by the reader.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
      <param name="onClose">Delegate to call when the reader is closed.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary>Specifies the interface for initializing a JavaScript Object Notation (JSON) writer when reusing them to write to a particular output stream.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Initializes (or reinitializes) a JavaScript Object Notation (JSON) writer to a specified output stream with specified character encoding.</summary>
      <param name="stream">The output <see cref="T:System.IO.Stream" /> to which the writer writes.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding of the output stream.</param>
      <param name="ownsStream">If true, the output stream is closed by the writer when done; otherwise false.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary>Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</returns>
      <param name="buffer">The input <see cref="T:System.Byte" /> buffer array from which to read.</param>
      <param name="offset">Starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">Number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader. If null is specified as the value, the reader attempts to auto-detect the encoding.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data. </param>
      <param name="onClose">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed. The default value is null.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</returns>
      <param name="buffer">The input <see cref="T:System.Byte" /> buffer array from which to read.</param>
      <param name="offset">Starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">Number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data. </param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</returns>
      <param name="buffer">The input <see cref="T:System.Byte" /> buffer array from which to read.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data. </param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</returns>
      <param name="stream">The input <see cref="T:System.IO.Stream" /> from which to read.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader. If null is specified as the value, the reader attempts to auto-detect the encoding.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data. </param>
      <param name="onClose">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</returns>
      <param name="stream">The input <see cref="T:System.IO.Stream" /> from which to read.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data. </param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</returns>
      <param name="stream">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</returns>
      <param name="stream">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer. The default encoding is UTF-8.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</returns>
      <param name="stream">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer. The default encoding is UTF-8.</param>
      <param name="ownsStream">If true, the output stream is closed by the writer when done; otherwise false. The default value is true.</param>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary>Contains properties and methods that when implemented by a <see cref="T:System.Xml.XmlDictionaryWriter" />, allows processing of XML fragments.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary>Gets a value that indicates whether this <see cref="T:System.Xml.XmlDictionaryWriter" /> can process XML fragments. </summary>
      <returns>true if this <see cref="T:System.Xml.XmlDictionaryWriter" /> can process XML fragments; otherwise, false.</returns>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary>Ends the processing of an XML fragment.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary>Starts the processing of an XML fragment.</summary>
      <param name="stream">The stream to write to.</param>
      <param name="generateSelfContainedTextFragment">If true, any namespaces declared outside the fragment is declared again if used inside of it; if false the namespaces are not declared again.</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary>Writes an XML fragment to the underlying stream of the writer.</summary>
      <param name="buffer">The buffer to write to.</param>
      <param name="offset">The starting position from which to write in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes to be written to the <paramref name="buffer" />.</param>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary>An interface that can be implemented by classes providing streams.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary>Gets a stream.</summary>
      <returns>A <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary>Releases a stream to output.</summary>
      <param name="stream">The stream being released.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary>Provides methods for reinitializing a binary reader to read a new document.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinitializes the binary reader using the given input buffer.</summary>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">Starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">Number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> to use.</param>
      <param name="onClose">Delegate to call when the reader is closed.</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinitializes the binary reader using the given input stream.</summary>
      <param name="stream">The stream from which to read.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> to use.</param>
      <param name="onClose">Delegate to call when the reader is closed.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary>Specifies implementation requirements for XML binary writers that derive from this interface.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>Specifies initialization requirements for XML binary writers that implement this method.</summary>
      <param name="stream">The stream to write to.</param>
      <param name="dictionary">The <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="session">The <see cref="T:System.Xml.XmlBinaryWriterSession" /> to use.</param>
      <param name="ownsStream">If true, stream is closed by the writer when done; otherwise false.</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary>An interface that defines the contract that an Xml dictionary must implement to be used by <see cref="T:System.Xml.XmlDictionaryReader" /> and <see cref="T:System.Xml.XmlDictionaryWriter" /> implementations.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Attempts to look up an entry in the dictionary.</summary>
      <returns>true if key is in the dictionary, otherwise false.</returns>
      <param name="key">Key to look up.</param>
      <param name="result">If <paramref name="key" /> is defined, the <see cref="T:System.Xml.XmlDictionaryString" /> that is mapped to the key; otherwise null.</param>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Checks the dictionary for a specified string value.</summary>
      <returns>true if value is in the dictionary, otherwise false.</returns>
      <param name="value">String value being checked for.</param>
      <param name="result">The corresponding <see cref="T:System.Xml.XmlDictionaryString" />, if found; otherwise null.</param>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Checks the dictionary for a specified <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>true if <see cref="T:System.Xml.XmlDictionaryString" /> is in the dictionary, otherwise false.</returns>
      <param name="value">The <see cref="T:System.Xml.XmlDictionaryString" /> being checked for.</param>
      <param name="result">The matching <see cref="T:System.Xml.XmlDictionaryString" />, if found; otherwise null.</param>
    </member>
    <member name="T:System.Xml.IXmlMtomReaderInitializer">
      <summary>Specifies implementation requirements for XML MTOM readers that derive from this interface.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlMtomReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Specifies initialization requirements for XML MTOM readers that read a buffer.</summary>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="encodings">The possible character encodings of the input.</param>
      <param name="contentType">The Content-Type of the message. Can be null if the MIME type is present in the document being read.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply to the reader.</param>
      <param name="maxBufferSize">The maximum allowed size of the buffer.</param>
      <param name="onClose">The delegate to use when an onClose event happens.</param>
    </member>
    <member name="M:System.Xml.IXmlMtomReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Specifies initialization requirements for XML MTOM readers that read a stream.</summary>
      <param name="stream">The stream from which to read.</param>
      <param name="encodings">The possible character encodings of the stream.</param>
      <param name="contentType">The Content-Type of the message. Can be null if the MIME type is present in the document being read.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply to the reader.</param>
      <param name="maxBufferSize">The maximum allowed size of the buffer.</param>
      <param name="onClose">The delegate to use when an onClose event happens.</param>
    </member>
    <member name="T:System.Xml.IXmlMtomWriterInitializer">
      <summary>When implemented by an MTOM writer, this interface ensures initialization for an MTOM writer.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlMtomWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>When implemented by an MTOM writer, initializes an MTOM writer.</summary>
      <param name="stream">The stream to write to.</param>
      <param name="encoding">The character encoding of the stream.</param>
      <param name="maxSizeInBytes">The maximum number of bytes that are buffered in the writer.</param>
      <param name="startInfo">An attribute in the ContentType SOAP header, set to "Application/soap+xml".</param>
      <param name="boundary">The MIME boundary string.</param>
      <param name="startUri">The URI for MIME section.</param>
      <param name="writeMessageHeaders">If true, write message headers.</param>
      <param name="ownsStream">If true, the stream is closed by the writer when done; otherwise false.</param>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary>Specifies implementation requirements for XML text readers that derive from this interface.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Specifies initialization requirements for XML text readers that read a buffer.</summary>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="encoding">The character encoding of the stream.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
      <param name="onClose">The delegate to be called when the reader is closed.</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Specifies initialization requirements for XML text readers that read a stream.</summary>
      <param name="stream">The stream from which to read.</param>
      <param name="encoding">The character encoding of the stream.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
      <param name="onClose">The delegate to be called when the reader is closed.</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary>Specifies implementation requirements for XML text writers that derive from this interface.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Specifies initialization requirements for XML text writers that implement this method.</summary>
      <param name="stream">The stream to write to.</param>
      <param name="encoding">The character encoding of the stream.</param>
      <param name="ownsStream">If true, stream is closed by the writer when done; otherwise false.</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary>delegate for a callback method when closing the reader.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> that fires the OnClose event.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary>A unique identifier optimized for Guids.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary>Creates a new instance of this class with a new, unique Guid.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary>Creates a new instance of this class using a byte array that represents a <see cref="T:System.Guid" />.</summary>
      <param name="guid">A byte array that represents a <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> provides less than 16 valid bytes.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary>Creates a new instance of this class starting from an offset within a byte array that represents a <see cref="T:System.Guid" />.</summary>
      <param name="guid">A byte array that represents a <see cref="T:System.Guid" />.</param>
      <param name="offset">Offset position within the byte array that represents a <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> less than zero or greater than the length of the array.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid " />and<paramref name=" offset" /> provide less than 16 valid bytes.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>Creates a new instance of this class starting from an offset within a char using a specified number of entries.</summary>
      <param name="chars">A char array that represents a <see cref="T:System.Guid" />.</param>
      <param name="offset">Offset position within the char array that represents a <see cref="T:System.Guid" />.</param>
      <param name="count">Number of array entries to use, starting from <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> less than zero or greater than the length of the array.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> less than zero or greater than the length of the array minus <paramref name="offset" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="count" /> equals zero.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary>Creates a new instance of this class using a <see cref="T:System.Guid" />.</summary>
      <param name="guid">A <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> is null.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary>Creates a new instance of this class using a string.</summary>
      <param name="value">A string used to generate the <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.FormatException">Length of<paramref name=" value" /> is zero.</exception>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary>Gets the length of the string representation of the <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>The length of the string representation of the <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary>Tests whether an object equals this <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>true if the object equals this <see cref="T:System.Xml.UniqueId" />; otherwise false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary>Creates a hash-code representation of this <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>An integer hash-code representation of this <see cref="T:System.Xml.UniqueId" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary>Indicates whether the <see cref="T:System.Xml.UniqueId" /> is a <see cref="T:System.Guid" />.</summary>
      <returns>true if the <see cref="T:System.Xml.UniqueId" /> is a <see cref="T:System.Guid" />; otherwise false.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Overrides the equality operator to test for equality of two <see cref="T:System.Xml.UniqueId" />s.</summary>
      <returns>true if the two <see cref="T:System.Xml.UniqueId" />s are equal, or are both null; false if they are not equal, or if only one of them is null.</returns>
      <param name="id1">The first <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2">The second <see cref="T:System.Xml.UniqueId" />.</param>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Overrides the equality operator to test for inequality of two <see cref="T:System.Xml.UniqueId" />s.</summary>
      <returns>true if the overridden equality operator returns false; otherwise false.</returns>
      <param name="id1">The first <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2">The second <see cref="T:System.Xml.UniqueId" />.</param>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary>Puts the <see cref="T:System.Xml.UniqueId" /> value into a char array.</summary>
      <returns>Number of entries in the char array filled by the <see cref="T:System.Xml.UniqueId" /> value.</returns>
      <param name="chars">The char array.</param>
      <param name="offset">Position in the char array to start inserting the <see cref="T:System.Xml.UniqueId" /> value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> less than zero or greater than the length of the array.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid " />and<paramref name=" offset" /> provide less than 16 valid bytes.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary>Displays the <see cref="T:System.Xml.UniqueId" /> value in string format.</summary>
      <returns>A string representation of the <see cref="T:System.Xml.UniqueId" /> value.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary>Tries to get the value of the <see cref="T:System.Xml.UniqueId" /> as a <see cref="T:System.Guid" /> and store it in the given byte array at the specified offest.</summary>
      <returns>true if the value stored in this instance of <see cref="T:System.Xml.UniqueId" /> is a <see cref="T:System.Guid" />; otherwise false.</returns>
      <param name="buffer">byte array that will contain the <see cref="T:System.Guid" />.</param>
      <param name="offset">Position in the byte array to start inserting the <see cref="T:System.Guid" /> value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> less than zero or greater than the length of the array.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer " />and<paramref name=" offset" /> provide less than 16 valid bytes.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary>Tries to get the value of the <see cref="T:System.Xml.UniqueId" /> as a <see cref="T:System.Guid" />.</summary>
      <returns>true if the UniqueId represents a <see cref="T:System.Guid" />; otherwise false.</returns>
      <param name="guid">The <see cref="T:System.Guid" /> if successful; otherwise <see cref="F:System.Guid.Empty" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer " />and<paramref name=" offset" /> provide less than 16 valid bytes.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary>Enables optimized strings to be managed in a dynamic way.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary>Creates an instance of this class.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryString" /> from the input parameters and adds it to an internal collection</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
      <param name="id">The key value.</param>
      <param name="value">The value.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="id" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">An entry with key = <paramref name="id" /> already exists.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary>Clears the internal collection of all contents.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Checks whether the internal collection contains an entry matching a key.</summary>
      <returns>true if an entry matching the <paramref name="key" /> was found; otherwise false.</returns>
      <param name="key">The key to search on.</param>
      <param name="result">The <see cref="T:System.Xml.XmlDictionaryString" />, if found; otherwise null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Checks whether the internal collection contains an entry matching a value.</summary>
      <returns>true if an entry matching the <paramref name="value" /> was found; otherwise false.</returns>
      <param name="value">The value to search for.</param>
      <param name="result">The <see cref="T:System.Xml.XmlDictionaryString" />, if found; otherwise null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Checks whether the internal collection contains an entry matching a value.</summary>
      <returns>true if an entry matching the <paramref name="value" /> was found; otherwise false.</returns>
      <param name="value">The value to search for.</param>
      <param name="result">The <see cref="T:System.Xml.XmlDictionaryString" />, if found; otherwise null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary>Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary>Creates an instance of this class.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary>Clears out the internal collections.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary>Tries to add an <see cref="T:System.Xml.XmlDictionaryString" /> to the internal collection.</summary>
      <returns>true, unless an exception was thrown.</returns>
      <param name="value">The <see cref="T:System.Xml.XmlDictionaryString" /> to add.</param>
      <param name="key">The key of the <see cref="T:System.Xml.XmlDictionaryString" /> that was successfully added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">An entry with key = <paramref name="key" /> already exists.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary>Implements a dictionary used to optimize 's XML reader/writer implementations.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary>Creates an empty <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary>Creates a <see cref="T:System.Xml.XmlDictionary" /> with an initial capacity.</summary>
      <param name="capacity">The initial size of the dictionary.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary>Adds a string to the <see cref="T:System.Xml.XmlDictionary" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryString" /> that was added.</returns>
      <param name="value">String to add to the dictionary.</param>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary>Gets a static empty <see cref="T:System.Xml.IXmlDictionary" />.</summary>
      <returns>A static empty <see cref="T:System.Xml.IXmlDictionary" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Attempts to look up an entry in the dictionary.</summary>
      <returns>true if key is in the dictionary, otherwise false.</returns>
      <param name="key">Key to look up.</param>
      <param name="result">If <paramref name="key" /> is defined, the <see cref="T:System.Xml.XmlDictionaryString" /> that is mapped to the key; otherwise null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Checks the dictionary for a specified string value.</summary>
      <returns>true if value is in the dictionary, otherwise false.</returns>
      <param name="value">String value being checked for.</param>
      <param name="result">The corresponding <see cref="T:System.Xml.XmlDictionaryString" />, if found; otherwise null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Checks the dictionary for a specified <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>true if <see cref="T:System.Xml.XmlDictionaryString" /> is in the dictionary, otherwise false.</returns>
      <param name="value">The <see cref="T:System.Xml.XmlDictionaryString" /> being checked for.</param>
      <param name="result">The matching <see cref="T:System.Xml.XmlDictionaryString" />, if found; otherwise null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary>An abstract class that the  derives from to do serialization and deserialization.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary>Creates an instance of this class. Invoked only by its derived classes.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary>This property always returns false. Its derived classes can override to return true if they support canonicalization.</summary>
      <returns>Returns false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero or greater than the buffer length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero or greater than the buffer length minus the offset.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="dictionary">The <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
      <param name="session">The <see cref="T:System.Xml.XmlBinaryReaderSession" /> to use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero or greater than the buffer length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero or greater than the buffer length minus the offset.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="dictionary">The <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
      <param name="session">The <see cref="T:System.Xml.XmlBinaryReaderSession" /> to use.</param>
      <param name="onClose">Delegate to be called when the reader is closed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero or greater than the buffer length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero or greater than the buffer length minus the offset.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero or greater than the buffer length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero or greater than the buffer length minus the offset.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="quotas" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> to use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> to use.</param>
      <param name="onClose">Delegate to be called when the reader is closed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> from an existing <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="reader">An instance of <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="encoding">The possible character encoding of the input.</param>
      <param name="quotas">The quotas to apply to this reader.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="encodings">The possible character encodings of the input.</param>
      <param name="contentType">The Content-Type MIME type of the message.</param>
      <param name="quotas">The quotas to apply to this reader.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="encodings">The possible character encodings of the input.</param>
      <param name="contentType">The Content-Type MIME type of the message.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply to the reader.</param>
      <param name="maxBufferSize">The maximum allowed size of the buffer.</param>
      <param name="onClose">The delegate to be called when the reader is closed.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="encodings">The possible character encodings of the input.</param>
      <param name="quotas">The quotas to apply to this reader.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="encoding">The possible character encoding of the stream.</param>
      <param name="quotas">The quotas to apply to this reader.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="encodings">The possible character encodings of the stream.</param>
      <param name="contentType">The Content-Type MIME type of the message.</param>
      <param name="quotas">The quotas to apply to this reader.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="encodings">The possible character encodings of the stream.</param>
      <param name="contentType">The Content-Type MIME type of the message.</param>
      <param name="quotas">The MIME type of the message.</param>
      <param name="maxBufferSize">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply to the reader.</param>
      <param name="onClose">The delegate to be called when the reader is closed.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="encodings">The possible character encodings of the stream.</param>
      <param name="quotas">The quotas to apply to this reader.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> object that specifies the encoding properties to apply.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
      <param name="onClose">The delegate to be called when the reader is closed.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="quotas">The quotas applied to the reader.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="quotas">The quotas applied to the reader.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> object that specifies the encoding properties to apply.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
      <param name="onClose">The delegate to be called when the reader is closed.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="quotas">The quotas applied to the reader.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary>This method is not yet implemented.</summary>
      <exception cref="T:System.NotSupportedException">Always.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>When overridden in a derived class, gets the value of an attribute.</summary>
      <returns>The value of the attribute.</returns>
      <param name="localName">An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the local name of the attribute.</param>
      <param name="namespaceUri">An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the namespace of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary>Gets non-atomized names.</summary>
      <param name="localName">The local name.</param>
      <param name="namespaceUri">The namespace for the local <paramref name="localName" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary>Gets the index of the local name of the current node within an array of names.</summary>
      <returns>The index of the local name of the current node within an array of names.</returns>
      <param name="localNames">The string array of local names to be searched.</param>
      <param name="namespaceUri">The namespace of current node.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> or any of the names in the array is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary>Gets the index of the local name of the current node within an array of names.</summary>
      <returns>The index of the local name of the current node within an array of names.</returns>
      <param name="localNames">The <see cref="T:System.Xml.XmlDictionaryString" /> array of local names to be searched.</param>
      <param name="namespaceUri">The namespace of current node.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> or any of the names in the array is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary>Checks whether the parameter, <paramref name="localName" />, is the local name of the current node.</summary>
      <returns>true if <paramref name="localName" /> matches local name of the current node; otherwise false.</returns>
      <param name="localName">The local name of the current node.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary>Checks whether the parameter, <paramref name="localName" />, is the local name of the current node.</summary>
      <returns>true if <paramref name="localName" /> matches local name of the current node; otherwise false.</returns>
      <param name="localName">An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the local name of the current node.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary>Checks whether the parameter, <paramref name="namespaceUri" />, is the namespace of the current node.</summary>
      <returns>true if <paramref name="namespaceUri" /> matches namespace of the current node; otherwise false.</returns>
      <param name="namespaceUri">The namespace of current node.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary>Checks whether the parameter, <paramref name="namespaceUri" />, is the namespace of the current node.</summary>
      <returns>true if <paramref name="namespaceUri" /> matches namespace of the current node; otherwise false.</returns>
      <param name="namespaceUri">Namespace of current node.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary>Checks whether the reader is positioned at the start of an array. This class returns false, but derived classes that have the concept of arrays might return true.</summary>
      <returns>true if the reader is positioned at the start of an array node; otherwise false.</returns>
      <param name="type">Type of the node, if a valid node; otherwise null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Tests whether the first tag is a start tag or empty element tag and if the local name and namespace URI match those of the current node.</summary>
      <returns>true if the first tag in the array is a start tag or empty element tag and matches <paramref name="localName" /> and <paramref name="namespaceUri" />; otherwise false.</returns>
      <param name="localName">An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the local name of the attribute.</param>
      <param name="namespaceUri">An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the namespace of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary>Tests whether the current node is a text node.</summary>
      <returns>true if the node type is <see cref="F:System.Xml.XmlNodetype.Text" />, <see cref="F:System.Xml.XmlNodetype.Whitespace" />, <see cref="F:System.Xml.XmlNodetype.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodetype.CDATA" />, or <see cref="F:System.Xml.XmlNodetype.Attribute" />; otherwise false.</returns>
      <param name="nodeType">Type of the node being tested.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary>Tests whether the current content node is a start element or an empty element.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary>Tests whether the current content node is a start element or an empty element and if the <see cref="P:System.Xml.XmlReader.Name" /> property of the element matches the given argument.</summary>
      <param name="name">The <see cref="P:System.Xml.XmlReader.Name" /> property of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary>Tests whether the current content node is a start element or an empty element and if the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element matches the given arguments.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Tests whether the current content node is a start element or an empty element and if the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element matches the given argument.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary>Gets the quota values that apply to the current instance of this class.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that applies to the current instance of this class.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The local name of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.DateTime" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Decimal" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Double" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Guid" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of short integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of long integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of float numbers into a typed array.</summary>
      <returns>The umber of float numbers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the float numbers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of float numbers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.TimeSpan" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.DateTime" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Decimal" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Double" /> nodes type into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Guid" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of short integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of long integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of float numbers into a typed array.</summary>
      <returns>The number of float numbers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the float numbers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of float numbers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.TimeSpan" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</summary>
      <returns>A <see cref="T:System.Boolean" /> array of the <see cref="T:System.Boolean" /> nodes.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</summary>
      <returns>A <see cref="T:System.Boolean" /> array of the <see cref="T:System.Boolean" /> nodes.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Converts a node's content to a specified type.</summary>
      <returns>The concatenated text content or attribute value converted to the requested type.</returns>
      <param name="type">The <see cref="T:System.Type" /> of the value to be returned.</param>
      <param name="namespaceResolver">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an <see cref="T:System.Xml.XmlQualifiedName" /> object to an xs:string. This value can be a null reference.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary>Reads the content and returns the Base64 decoded binary bytes.</summary>
      <returns>A byte array that contains the Base64 decoded binary bytes.</returns>
      <exception cref="T:System.Xml.XmlException">The array size is greater than the MaxArrayLength quota for this reader.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary>Reads the content and returns the BinHex decoded binary bytes.</summary>
      <returns>A byte array that contains the BinHex decoded binary bytes.</returns>
      <exception cref="T:System.Xml.XmlException">The array size is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary>Reads the content and returns the BinHex decoded binary bytes.</summary>
      <returns>A byte array that contains the BinHex decoded binary bytes.</returns>
      <param name="maxByteArrayContentLength">The maximum array length.</param>
      <exception cref="T:System.Xml.XmlException">The array size is greater than <paramref name="maxByteArrayContentLength" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary>Reads the content into a char array.</summary>
      <returns>Number of characters read.</returns>
      <param name="chars">The array into which the characters are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of characters to put in the array.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary>Converts a node's content to decimal.</summary>
      <returns>The decimal representation of node's content.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary>Converts a node's content to float.</summary>
      <returns>The float representation of node's content.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary>Converts a node's content to guid.</summary>
      <returns>The guid representation of node's content.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary>Converts a node's content to a qualified name representation.</summary>
      <param name="localName">The <see cref="P:System.Xml.XmlReader.LocalName" /> part of the qualified name (out parameter).</param>
      <param name="namespaceUri">The <see cref="P:System.Xml.XmlReader.NamespaceURI" /> part of the qualified name (out parameter).</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary>Converts a node's content to a string.</summary>
      <returns>The node content in a string representation.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary>Converts a node's content to a string.</summary>
      <returns>Node content in string representation.</returns>
      <param name="maxStringContentLength">The maximum string length.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary>Converts a node's content to a string.</summary>
      <returns>The node content in a string representation.</returns>
      <param name="strings">The array of strings to match content against.</param>
      <param name="index">The index of the entry in <paramref name="strings" /> that matches the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">An entry in<paramref name=" strings" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary>Converts a node's content to a string.</summary>
      <returns>The node content in a string representation.</returns>
      <param name="strings">The array of <see cref="T:System.Xml.XmlDictionaryString" /> objects to match content against.</param>
      <param name="index">The index of the entry in <paramref name="strings" /> that matches the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">An entry in<paramref name=" strings" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary>Converts a node's content to <see cref="T:System.TimeSpan" />.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> representation of node's content.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary>Converts a node's content to a unique identifier.</summary>
      <returns>The node's content represented as a unique identifier.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.DateTime" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.DateTime" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.Decimal" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.Decimal" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.Double" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.Double" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary>Converts a node's content to a array of Base64 bytes.</summary>
      <returns>The node's content represented as an array of Base64 bytes.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary>Converts a node's content to an array of BinHex bytes.</summary>
      <returns>The node's content represented as an array of BinHex bytes.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary>Converts an element's content to a <see cref="T:System.Boolean" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary>Converts an element's content to a <see cref="T:System.DateTime" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException">The element is not in valid format.</exception>
      <exception cref="T:System.FormatException">The element is not in valid format.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary>Converts an element's content to a <see cref="T:System.Decimal" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary>Converts an element's content to a <see cref="T:System.Double" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary>Converts an element's content to a floating point number (<see cref="T:System.Single" />).</summary>
      <returns>The node's content represented as a floating point number (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary>Converts an element's content to a <see cref="T:System.Guid" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.Guid" />.</returns>
      <exception cref="T:System.ArgumentException">The element is not in valid format.</exception>
      <exception cref="T:System.FormatException">The element is not in valid format.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary>Converts an element's content to an integer (<see cref="T:System.Int32" />).</summary>
      <returns>The node's content represented as an integer (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary>Converts an element's content to a long integer (<see cref="T:System.Int64" />).</summary>
      <returns>The node's content represented as a long integer (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary>Converts an element's content to a <see cref="T:System.String" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary>Converts an element's content to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary>Converts an element's content to a unique identifier.</summary>
      <returns>The node's content represented as a unique identifier.</returns>
      <exception cref="T:System.ArgumentException">The element is not in valid format.</exception>
      <exception cref="T:System.FormatException">The element is not in valid format.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary>Checks whether the current node is an element and advances the reader to the next node.</summary>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> returns false.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary>Checks whether the current node is an element with the given <paramref name="name" /> and advances the reader to the next node.</summary>
      <param name="name">The qualified name of the element.</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> returns false.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary>Checks whether the current node is an element with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> and advances the reader to the next node.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> returns false.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Checks whether the current node is an element with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> and advances the reader to the next node.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> returns false.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of <see cref="T:System.Guid" />.</summary>
      <returns>An array of <see cref="T:System.Guid" />.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of <see cref="T:System.Guid" />.</summary>
      <returns>An array of <see cref="T:System.Guid" />.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of short integers (<see cref="T:System.Int16" />).</summary>
      <returns>An array of short integers (<see cref="T:System.Int16" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of short integers (<see cref="T:System.Int16" />).</summary>
      <returns>An array of short integers (<see cref="T:System.Int16" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of integers (<see cref="T:System.Int32" />).</summary>
      <returns>An array of integers (<see cref="T:System.Int32" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of integers (<see cref="T:System.Int32" />).</summary>
      <returns>An array of integers (<see cref="T:System.Int32" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of long integers (<see cref="T:System.Int64" />).</summary>
      <returns>An array of long integers (<see cref="T:System.Int64" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of long integers (<see cref="T:System.Int64" />).</summary>
      <returns>An array of long integers (<see cref="T:System.Int64" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of float numbers (<see cref="T:System.Single" />).</summary>
      <returns>An array of float numbers (<see cref="T:System.Single" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of float numbers (<see cref="T:System.Single" />).</summary>
      <returns>An array of float numbers (<see cref="T:System.Single" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Checks whether the current node is an element with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> and advances the reader to the next node.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary>Reads the contents of the current node into a string.</summary>
      <returns>A string that contains the contents of the current node.</returns>
      <exception cref="T:System.InvalidOperationException">Unable to read the contents of the current node.</exception>
      <exception cref="T:System.Xml.XmlException">Maximum allowed string length exceeded.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary>Reads the contents of the current node into a string with a given maximum length.</summary>
      <returns>A string that contains the contents of the current node.</returns>
      <param name="maxStringContentLength">Maximum allowed string length.</param>
      <exception cref="T:System.InvalidOperationException">Unable to read the contents of the current node.</exception>
      <exception cref="T:System.Xml.XmlException">Maximum allowed string length exceeded.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into a <see cref="T:System.TimeSpan" /> array.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into a <see cref="T:System.TimeSpan" /> array.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Not implemented.</summary>
      <returns>Not implemented.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <exception cref="T:System.NotSupportedException">Always.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>This method is not yet implemented.</summary>
      <param name="stream">The stream to read from.</param>
      <param name="includeComments">Determines whether comments are included.</param>
      <param name="inclusivePrefixes">The prefixes to be included.</param>
      <exception cref="T:System.NotSupportedException">Always.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary>Not implemented in this class (it always returns false). May be overridden in derived classes.</summary>
      <returns>false, unless overridden in a derived class.</returns>
      <param name="count">Returns 0, unless overridden in a derived class.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary>Not implemented in this class (it always returns false). May be overridden in derived classes.</summary>
      <returns>false, unless overridden in a derived class.</returns>
      <param name="length">Returns 0, unless overridden in a derived class.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Not implemented in this class (it always returns false). May be overridden in derived classes.</summary>
      <returns>false, unless overridden in a derived class.</returns>
      <param name="localName">Returns null, unless overridden in a derived class..</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Not implemented in this class (it always returns false). May be overridden in derived classes.</summary>
      <returns>false, unless overridden in a derived class.</returns>
      <param name="namespaceUri">Returns null, unless overridden in a derived class.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Not implemented in this class (it always returns false). May be overridden in derived classes.</summary>
      <returns>false, unless overridden in a derived class.</returns>
      <param name="value">Returns null, unless overridden in a derived class.</param>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary>Contains configurable quota values for XmlDictionaryReaders.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary>Creates a new instance of this class.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Sets the properties on a passed-in quotas instance, based on the values in this instance.</summary>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> instance to which to copy values.</param>
      <exception cref="T:System.InvalidOperationException">Trying to set the value, but quota values are read-only for the passed in instance.</exception>
      <exception cref="T:System.ArgumentNullException">Passed in target<paramref name=" quotas" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary>Gets an instance of this class with all properties set to maximum values.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> with properties set to <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary>Gets and sets the maximum allowed array length.</summary>
      <returns>The maximum allowed array length. The default is 16384.</returns>
      <exception cref="T:System.InvalidOperationException">Trying to set the value, but quota values are read-only for this instance.</exception>
      <exception cref="T:System.ArgumentException">Trying to set the value to less than zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary>Gets and sets the maximum allowed bytes returned for each read.</summary>
      <returns>The maximum allowed bytes returned for each read. The default is 4096.</returns>
      <exception cref="T:System.InvalidOperationException">Trying to set the value, but quota values are read-only for this instance.</exception>
      <exception cref="T:System.ArgumentException">Trying to set the value to less than zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary>Gets and sets the maximum nested node depth.</summary>
      <returns>The maximum nested node depth. The default is 32;</returns>
      <exception cref="T:System.InvalidOperationException">Trying to set the value and quota values are read-only for this instance.</exception>
      <exception cref="T:System.ArgumentException">Trying to set the value is less than zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary>Gets and sets the maximum characters allowed in a table name.</summary>
      <returns>The maximum characters allowed in a table name. The default is 16384.</returns>
      <exception cref="T:System.InvalidOperationException">Trying to set the value, but quota values are read-only for this instance.</exception>
      <exception cref="T:System.ArgumentException">Trying to set the value to less than zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary>Gets and sets the maximum string length returned by the reader.</summary>
      <returns>The maximum string length returned by the reader. The default is 8192.</returns>
      <exception cref="T:System.InvalidOperationException">Trying to set the value, but quota values are read-only for this instance.</exception>
      <exception cref="T:System.ArgumentException">Trying to set the value to less than zero.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary>Represents an entry stored in a <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary>Creates an instance of this class.</summary>
      <param name="dictionary">The <see cref="T:System.Xml.IXmlDictionary" /> containing this instance.</param>
      <param name="value">The string that is the value of the dictionary entry.</param>
      <param name="key">The integer that is the key of the dictionary entry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="key" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" /> / 4.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary>Represents the <see cref="T:System.Xml.IXmlDictionary" /> passed to the constructor of this instance of <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>The <see cref="T:System.Xml.IXmlDictionary" /> for this dictionary entry.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary>Gets an <see cref="T:System.Xml.XmlDictionaryString" /> representing the empty string.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryString" /> representing the empty string.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary>Gets the integer key for this instance of the class. </summary>
      <returns>The integer key for this instance of the class.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary>Displays a text representation of this object.</summary>
      <returns>The string value for this instance of the class.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary>Gets the string value for this instance of the class. </summary>
      <returns>The string value for this instance of the class.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary>An abstract class that the  derives from to do serialization and deserialization.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary>Creates an instance of this class. Invoked only by its derived classes because this class is abstract.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary>This property always returns false. Its derived classes can override to return true if they support canonicalization.</summary>
      <returns>false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes  binary XML format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes  binary XML format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
      <param name="dictionary">The <see cref="T:System.Xml.XmlDictionary" /> to use as the shared dictionary.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes  binary XML format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
      <param name="dictionary">The <see cref="T:System.Xml.XmlDictionary" /> to use as the shared dictionary.</param>
      <param name="session">The <see cref="T:System.Xml.XmlBinaryWriterSession" /> to use.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes  binary XML format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="dictionary">The <see cref="T:System.Xml.XmlDictionary" /> to use as the shared dictionary.</param>
      <param name="session">The <see cref="T:System.Xml.XmlBinaryWriterSession" /> to use.</param>
      <param name="ownsStream">If true, stream is closed by the writer when done; otherwise false.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> from an existing <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="writer">An instance of <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes XML in the MTOM format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
      <param name="encoding">The character encoding of the stream.</param>
      <param name="maxSizeInBytes">The maximum number of bytes that are buffered in the writer.</param>
      <param name="startInfo">An attribute in the ContentType SOAP header.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes XML in the MTOM format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
      <param name="encoding">The character encoding of the stream.</param>
      <param name="maxSizeInBytes">The maximum number of bytes that are buffered in the writer.</param>
      <param name="startInfo">The content-type of the MIME part that contains the Infoset.</param>
      <param name="boundary">The MIME boundary in the message.</param>
      <param name="startUri">The content-id URI of the MIME part that contains the Infoset.</param>
      <param name="writeMessageHeaders">If true, write message headers.</param>
      <param name="ownsStream">If true, the stream is closed by the writer when done; otherwise false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes text XML. </summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes text XML.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
      <param name="encoding">The character encoding of the output.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes text XML.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
      <param name="encoding">The character encoding of the stream.</param>
      <param name="ownsStream">If true, stream is closed by the writer when done; otherwise false.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary>This method is not yet implemented. </summary>
      <exception cref="T:System.NotSupportedException">Method is not implemented yet.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>This method is not yet implemented. </summary>
      <param name="stream">The stream to write to.</param>
      <param name="includeComments">Determines whether comments are included.</param>
      <param name="inclusivePrefixes">The prefixes to be included.</param>
      <exception cref="T:System.NotSupportedException">Method is not implemented yet.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>Writes values from a <see cref="T:System.Boolean" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the data.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of values to write from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.DateTime" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Decimal" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Double" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Guid" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int16" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int32" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int64" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Single" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.TimeSpan" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Boolean" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.DateTime" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Decimal" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Double" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Guid" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int16" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int32" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int64" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Single" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.TimeSpan" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Writes an attribute qualified name and value.</summary>
      <param name="prefix">The prefix of the attribute.</param>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceUri">The namespace URI of the attribute.</param>
      <param name="value">The attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Writes an attribute qualified name and value.</summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceUri">The namespace URI of the attribute.</param>
      <param name="value">The attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Writes an element with a text content.</summary>
      <param name="prefix">The prefix of the element.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="value">The element content.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Writes an element with a text content.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="value">The element content.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Writes the current XML node from an <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <param name="defattr">If true, copy the default attributes from the XmlReader; otherwise if true, use default attributes; otherwise false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>Writes the current XML node from an <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="defattr">If true, copy the default attributes from the <see cref="T:System.Xml.XmlReader" />; otherwise false.If true, use default attributes; otherwise false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.</summary>
      <param name="localName">The local name of the qualified name.</param>
      <param name="namespaceUri">The namespace URI of the qualified name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> is null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes the start of an attribute with the specified prefix, local name, and namespace URI.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceUri">The namespace URI of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes the start of an attribute with the specified local name, and namespace URI.</summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceUri">The namespace URI of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes the specified start tag and associates it with the given namespace and prefix.</summary>
      <param name="prefix">The prefix of the element.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <exception cref="T:System.InvalidOperationException">The writer is closed. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes the specified start tag and associates it with the given namespace.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <exception cref="T:System.InvalidOperationException">The writer is closed. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary>Writes the given text content.</summary>
      <param name="value">The text to write.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Writes the text node that an <see cref="T:System.Xml.XmlDictionaryReader" /> is currently positioned on.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> to get the text value from.</param>
      <param name="isAttribute">Specifies whether the reader is positioned on an attribute value or element content.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary>Writes a <see cref="T:System.Guid" /> value.</summary>
      <param name="value">The <see cref="T:System.Guid" /> value to write.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary>Writes a <see cref="T:System.TimeSpan" /> value.</summary>
      <param name="value">The <see cref="T:System.TimeSpan" /> value to write.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary>Writes a value from an <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value">The <see cref="T:System.Xml.IStreamProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="value" /> returns a null stream object.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary>Writes a Unique Id value.</summary>
      <param name="value">The Unique Id value to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary>Writes a <see cref="T:System.Xml.XmlDictionaryString" /> value.</summary>
      <param name="value">The <see cref="T:System.Xml.XmlDictionaryString" /> value.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary>Writes a standard XML attribute in the current node.</summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="value">The value of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes an XML attribute in the current node.</summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="value">The value of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary>Writes a namespace declaration attribute.</summary>
      <param name="prefix">The prefix that is bound to the given namespace.</param>
      <param name="namespaceUri">The namespace to which the prefix is bound.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary>Writes a namespace declaration attribute.</summary>
      <param name="prefix">The prefix that is bound to the given namespace.</param>
      <param name="namespaceUri">The namespace to which the prefix is bound.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.ServiceModel.Core.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Core</name>
  </assembly>
  <members>
    <member name="T:System.WorkflowModel.ExtensionCollection"></member>
    <member name="M:System.WorkflowModel.ExtensionCollection.#ctor"></member>
    <member name="M:System.WorkflowModel.ExtensionCollection.#ctor(System.WorkflowModel.IExtensibleObject)"></member>
    <member name="M:System.WorkflowModel.ExtensionCollection.ClearItems"></member>
    <member name="M:System.WorkflowModel.ExtensionCollection.Find``1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.WorkflowModel.ExtensionCollection.FindAll``1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.WorkflowModel.ExtensionCollection.InsertItem(System.Int32,System.Object)"></member>
    <member name="M:System.WorkflowModel.ExtensionCollection.RemoveItem(System.Int32)"></member>
    <member name="M:System.WorkflowModel.ExtensionCollection.SetItem(System.Int32,System.Object)"></member>
    <member name="T:System.WorkflowModel.IExtensibleObject"></member>
    <member name="P:System.WorkflowModel.IExtensibleObject.Extensions"></member>
    <member name="T:System.WorkflowModel.IExtension"></member>
    <member name="M:System.WorkflowModel.IExtension.Attach(System.WorkflowModel.IExtensibleObject)"></member>
    <member name="M:System.WorkflowModel.IExtension.Detach(System.WorkflowModel.IExtensibleObject)"></member>
    <member name="T:System.WorkflowModel.IExtensionCollection"></member>
    <member name="M:System.WorkflowModel.IExtensionCollection.Find``1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.WorkflowModel.IExtensionCollection.FindAll``1">
      <typeparam name="T"></typeparam>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.ServiceModel.Channels.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Channels</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement">
      <summary>The binding element that specifies the message encoding as a stream of bytes and has the option to specify the character encoding.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.#ctor(System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement" /> class with the specified quota.</summary>
      <param name="quota">The constraints on the complexity of XML messages that can be processed by endpoints configured with this binding element.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</summary>
      <returns>A channel factory of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The binding context for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel for a specified context.</summary>
      <returns>A channel listener of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The binding context for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the current binding can build a factory for a specified type of channel and context.</summary>
      <returns>true if the specified channel factory stack can be built on the service; otherwise, false.</returns>
      <param name="context">The binding context for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.</summary>
      <returns>true if the specified channel listener stack can be built on the service; otherwise, false.</returns>
      <param name="context">The binding context for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.Clone">
      <summary>Creates a new <see cref="T:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement" /> object initialized from the current one.</summary>
      <returns>A binding element with property values equal to those of the current element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Creates a factory for byte stream message encoders that employ the SOAP and WS-Addressing versions and the character encoding specified by the current encoding binding element.</summary>
      <returns>The message encoder factory that this binding element creates.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.MessageVersion">
      <summary>Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</summary>
      <returns>The message version that is used or expected.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of XML messages that can be processed by endpoints configured with this binding element.</summary>
      <returns>The complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following remarks section.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.ShouldSerializeMessageVersion">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.MessageVersion" /> property has changed from its default value and should be serialized.</summary>
      <returns>false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.ShouldSerializeReaderQuotas">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.ReaderQuotas" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.ReaderQuotas" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement">
      <summary>Enables construction of a configuration element that defines the settings for a byte stream message encoding element.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to the current <see cref="T:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement" /> object.</summary>
      <param name="bindingElement">The binding element whose settings are to be applied to this configuration element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement.BindingElementType">
      <summary>Gets the type of the <see cref="T:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement" />.</summary>
      <returns>A configuration element type.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content from the specified configuration section to the current <see cref="T:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement" /> object.</summary>
      <param name="from">The content being copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement.ReaderQuotas">
      <summary>Gets a <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" /> configuration element that defines the constraints on the complexity of SOAP messages, which can be processed by endpoints configured with this encoding.</summary>
      <returns>A configuration element.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Security.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObject">
      <summary>Contains a type and a collection of values associated with that type.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> class using an attribute represented by the specified <see cref="T:System.Security.Cryptography.Oid" /> object.</summary>
      <param name="oid">The attribute to store in this <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> class using an attribute represented by the specified <see cref="T:System.Security.Cryptography.Oid" /> object and the set of values associated with that attribute represented by the specified <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> collection.</summary>
      <param name="oid">The attribute to store in this <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object.</param>
      <param name="values">The set of values associated with the attribute represented by the <paramref name="oid" /> parameter.</param>
      <exception cref="T:System.InvalidOperationException">The collection contains duplicate items. </exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Oid">
      <summary>Gets the <see cref="T:System.Security.Cryptography.Oid" /> object that specifies the object identifier for the attribute.</summary>
      <returns>The object identifier for the attribute.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Values">
      <summary>Gets the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> collection that contains the set of values that are associated with the attribute.</summary>
      <returns>The set of values that is associated with the attribute.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectCollection">
      <summary>Contains a set of <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> objects.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> class, adding a specified <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> to the collection.</summary>
      <param name="attribute">A <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object that is added to the collection.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary>Adds the specified <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to the collection.</summary>
      <returns>true if the method returns the zero-based index of the added item; otherwise, false.</returns>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>Adds the specified <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object to the collection.</summary>
      <returns>true if the method returns the zero-based index of the added item; otherwise, false.</returns>
      <param name="attribute">The <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <exception cref="T:System.InvalidOperationException">The specified item already exists in the collection.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.CopyTo(System.Security.Cryptography.CryptographicAttributeObject[],System.Int32)">
      <summary>Copies the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection to an array of <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> objects.</summary>
      <param name="array">An array of <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> objects that the collection is copied to.</param>
      <param name="index">The zero-based index in <paramref name="array" /> to which the collection is to be copied.</param>
      <exception cref="T:System.ArgumentException">One of the arguments provided to a method was not valid.</exception>
      <exception cref="T:System.ArgumentNullException">null was passed to a method that does not accept it as a valid argument.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of an argument was outside the allowable range of values as defined by the called method.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Count">
      <summary>Gets the number of items in the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.GetEnumerator">
      <summary>Gets a <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> object for the collection.</summary>
      <returns>true if the method returns a <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> object that can be used to enumerate the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized, or thread safe.</summary>
      <returns>true if access to the collection is thread safe; otherwise false.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object at the specified index.</returns>
      <param name="index">An <see cref="T:System.Int32" /> value that represents the zero-based index of the <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object to retrieve.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Remove(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>Removes the specified <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object from the collection.</summary>
      <param name="attribute">The <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object to remove from the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attribute" /> is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.SyncRoot">
      <summary>Gets an <see cref="T:System.Object" /> object used to synchronize access to the collection.</summary>
      <returns>An <see cref="T:System.Object" /> object used to synchronize access to the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of this <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection to an <see cref="T:System.Array" /> array, starting at a particular index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> array that is the destination of the elements copied from this <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />. The <see cref="T:System.Array" /> array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator">
      <summary>Provides enumeration functionality for the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object from the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object that represents the current cryptographic attribute in the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext">
      <summary>Advances the enumeration to the next <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object in the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection.</summary>
      <returns>true if the enumeration successfully moved to the next <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object; false if the enumerator is at the end of the enumeration.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset">
      <summary>Resets the enumeration to the first <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object in the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection.</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object from the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> object that represents the current cryptographic attribute in the <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.DataProtectionScope">
      <summary>Specifies the scope of the data protection to be applied by the <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> method.</summary>
    </member>
    <member name="F:System.Security.Cryptography.DataProtectionScope.CurrentUser">
      <summary>The protected data is associated with the current user. Only threads running under the current user context can unprotect the data.</summary>
    </member>
    <member name="F:System.Security.Cryptography.DataProtectionScope.LocalMachine">
      <summary>The protected data is associated with the machine context. Any process running on the computer can unprotect data. This enumeration value is usually used in server-specific applications that run on a server where untrusted users are not allowed access.</summary>
    </member>
    <member name="T:System.Security.Cryptography.MemoryProtectionScope">
      <summary>Specifies the scope of memory protection to be applied by the <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> method.</summary>
    </member>
    <member name="F:System.Security.Cryptography.MemoryProtectionScope.SameProcess">
      <summary>Only code running in the same process as the code that called the <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> method can unprotect memory.</summary>
    </member>
    <member name="F:System.Security.Cryptography.MemoryProtectionScope.CrossProcess">
      <summary>All code in any process can unprotect memory that was protected using the <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> method.</summary>
    </member>
    <member name="F:System.Security.Cryptography.MemoryProtectionScope.SameLogon">
      <summary>Only code running in the same user context as the code that called the <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> method can unprotect memory.</summary>
    </member>
    <member name="T:System.Security.Cryptography.ProtectedData">
      <summary>Provides methods for protecting and unprotecting data. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)">
      <summary>Protects the <paramref name="userData" /> parameter and returns a byte array.</summary>
      <returns>A byte array representing the encrypted data.</returns>
      <param name="userData">A byte array containing data to protect. </param>
      <param name="optionalEntropy">An additional byte array used to encrypt the data. </param>
      <param name="scope">One of the <see cref="T:System.Security.Cryptography.DataProtectionScope" /> values. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="userData" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic protection failed.</exception>
      <exception cref="T:System.NotSupportedException">The operating system does not support this method. </exception>
      <exception cref="T:System.OutOfMemoryException">The system ran out of memory while encrypting the data.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.DataProtectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ProtectData" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)">
      <summary>Unprotects the <paramref name="encryptedData" /> parameter and returns a byte array.</summary>
      <returns>A byte array representing the unprotected data.</returns>
      <param name="encryptedData">A byte array containing data encrypted using the <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> method. </param>
      <param name="optionalEntropy">An additional byte array used to encrypt the data. </param>
      <param name="scope">One of the <see cref="T:System.Security.Cryptography.DataProtectionScope" /> values. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="encryptedData" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic protection failed.</exception>
      <exception cref="T:System.NotSupportedException">The operating system does not support this method. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.DataProtectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnprotectData" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.Cryptography.ProtectedMemory">
      <summary>Provides methods for protecting and unprotecting memory. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)">
      <summary>Protects the specified data and returns a byte array.</summary>
      <param name="userData">The byte array containing data in memory to protect. The array must be a multiple of 16 bytes. </param>
      <param name="scope">One of the enumeration values that specifies the scope of memory protection. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="userData" /> must be 16 bytes in length or in multiples of 16 bytes. </exception>
      <exception cref="T:System.NotSupportedException">The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userData " />is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.DataProtectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ProtectMemory" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)">
      <summary>Unprotects data in memory that was protected using the <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> method.</summary>
      <param name="encryptedData">The byte array in memory to unencrypt. </param>
      <param name="scope">One of the enumeration values that specifies the scope of memory protection. </param>
      <exception cref="T:System.NotSupportedException">The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptedData " />is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encryptedData " />is empty.-or-This call was not implemented.-or-NTSTATUS contains an error.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.DataProtectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnprotectMemory" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> class defines the algorithm used for a cryptographic operation.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> class by using a set of default parameters. </summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> class with the specified algorithm identifier.</summary>
      <param name="oid">An object identifier for the algorithm.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> class with the specified algorithm identifier and key length.</summary>
      <param name="oid">An object identifier for the algorithm.</param>
      <param name="keyLength">The length, in bits, of the key.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength" /> property sets or retrieves the key length, in bits. This property is not used for algorithms that use a fixed key length.</summary>
      <returns>An int value that represents the key length, in bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid" /> property sets or retrieves the <see cref="T:System.Security.Cryptography.Oid" />  object that specifies the object identifier for the algorithm.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Oid" /> object that represents the algorithm.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters" /> property sets or retrieves any parameters required by the algorithm.</summary>
      <returns>An array of byte values that specifies any parameters required by the algorithm.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipient">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> class defines the recipient of a CMS/PKCS #7 message.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)" /> constructor constructs an instance of the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> class by using the specified recipient identifier type and recipient certificate.</summary>
      <param name="recipientIdentifierType">A member of the <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> enumeration that specifies the type of the identifier of the recipient.</param>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object that represents the recipient certificate.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" /> constructor constructs an instance of the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> class by using the specified recipient certificate.</summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object that represents the recipient certificate.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate" /> property retrieves the certificate associated with the recipient.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object that holds the certificate associated with the recipient.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType" /> property retrieves the type of the identifier of the recipient.</summary>
      <returns>A member of the <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> enumeration that specifies the type of the identifier of the recipient.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> class represents a set of <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> objects. <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> implements the <see cref="T:System.Collections.ICollection" /> interface. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> class and adds the specified recipient.</summary>
      <param name="recipient">An instance of the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> class that represents the specified CMS/PKCS #7 recipient.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> class and adds recipients based on the specified subject identifier and set of certificates that identify the recipients.</summary>
      <param name="recipientIdentifierType">A member of the <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> enumeration that specifies the type of subject identifier.</param>
      <param name="certificates">An <see cref="T:System.Security.Cryptography.X509certificates.X509Certificate2Collection" /> collection that contains the certificates that identify the recipients.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)" /> method adds a recipient to the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</summary>
      <returns>If the method succeeds, the method returns an <see cref="T:System.Int32" /> value that represents the zero-based position where the recipient is to be inserted.If the method fails, it throws an exception.</returns>
      <param name="recipient">A <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object that represents the recipient to add to the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)" /> method copies the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection to an array.</summary>
      <param name="array">An <see cref="T:System.Array" /> object to which the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection is to be copied.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection is copied.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is not large enough to hold the specified elements.-or-<paramref name="array" /> does not contain the proper number of dimensions.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the range of elements in <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)" /> method copies the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection to a <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> array.</summary>
      <param name="array">An array of <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> objects where the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection is to be copied.</param>
      <param name="index">The zero-based index for the array of <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> objects in <paramref name="array" /> to which the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection is copied.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is not large enough to hold the specified elements.-or-<paramref name="array" /> does not contain the proper number of dimensions.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the range of elements in <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count" /> property retrieves the number of items in the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the number of items in the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator" /> method returns a <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> object for the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> object that can be used to enumerate the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized" /> property retrieves whether access to the collection is synchronized, or thread safe. This property always returns false, which means that the collection is not thread safe.</summary>
      <returns>A <see cref="T:System.Boolean" /> value of false, which means that the collection is not thread safe.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)" /> property retrieves the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object at the specified index.</returns>
      <param name="index">An <see cref="T:System.Int32" /> value that represents the index in the collection. The index is zero based.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of an argument was outside the allowable range of values as defined by the called method.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)" /> method removes a recipient from the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</summary>
      <param name="recipient">A <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object that represents the recipient to remove from the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot" /> property retrieves an <see cref="T:System.Object" /> object used to synchronize access to the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Object" /> object that is used to synchronize access to the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System.Collections.IEnumerable.GetEnumerator" /> method returns a <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> object for the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> object that can be used to enumerate the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> class provides enumeration functionality for the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection. <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> implements the <see cref="T:System.Collections.IEnumerator" /> interface. </summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current" /> property retrieves the current <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object from the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object that represents the current recipient in the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext" /> method advances the enumeration to the next <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object in the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</summary>
      <returns>true if the enumeration successfully moved to the next <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object; false if the enumeration moved past the last item in the enumeration.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset" /> method resets the enumeration to the first <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object in the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System.Collections.IEnumerator.Current" /> property retrieves the current <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object from the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object that represents the current recipient in the <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsSigner">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> class provides signing functionality.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> class by using a default subject identifier type.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> class with the specified cryptographic service provider (CSP) parameters. <see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)" /> is useful when you know the specific CSP and private key to use for signing.</summary>
      <param name="parameters">A <see cref="T:System.Security.Cryptography.CspParameters" />  object that represents the set of CSP parameters to use.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> class with the specified subject identifier type.</summary>
      <param name="signerIdentifierType">A member of the <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> enumeration that specifies the signer identifier type.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> class with the specified signer identifier type and signing certificate.</summary>
      <param name="signerIdentifierType">A member of the <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> enumeration that specifies the signer identifier type.</param>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object that represents the signing certificate.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> class with the specified signing certificate.</summary>
      <param name="certificate">An    <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object that represents the signing certificate.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> property sets or retrieves the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object that represents the signing certificate.</summary>
      <returns>An  <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object that represents the signing certificate.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates" /> property retrieves the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> collection that contains certificates associated with the message to be signed.  </summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> collection that represents the collection of  certificates associated with the message to be signed.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm" /> property sets or retrieves the <see cref="T:System.Security.Cryptography.Oid" /> that represents the hash algorithm used with the signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Oid" /> object that represents the hash algorithm used with the signature.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption" /> property sets or retrieves the option that controls whether the root and entire chain associated with the signing certificate are included with the created CMS/PKCS #7 message.</summary>
      <returns>A member of the <see cref="T:System.Security.Cryptography.X509Certificates.X509IncludeOption" /> enumeration that specifies how much of the X509 certificate chain should be included in the <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> object. The <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption" /> property can be one of the following <see cref="T:System.Security.Cryptography.X509Certificates.X509IncludeOption" /> members.NameValueMeaning<see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.None" />0The certificate chain is not included.<see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" />1The certificate chain, except for the root certificate, is included.<see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.EndCertOnly" />2Only the end certificate is included.<see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" />3The certificate chain, including the root certificate, is included.</returns>
      <exception cref="T:System.ArgumentException">One of the arguments provided to a method was not valid.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes" /> property retrieves the <see cref="T:System.Security.Cryptography.CryptographicAttributeCollection" /> collection of signed attributes to be associated with the resulting <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> content. Signed attributes are signed along with the specified content.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.CryptographicAttributeCollection" /> collection that represents the signed attributes. If there are no signed attributes, the property is an empty collection.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType" /> property sets or retrieves the type of the identifier of the signer.</summary>
      <returns>A member of the <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> enumeration that specifies the type of the identifier of the signer.</returns>
      <exception cref="T:System.ArgumentException">One of the arguments provided to a method was not valid.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes" /> property retrieves the <see cref="T:System.Security.Cryptography.CryptographicAttributeCollection" /> collection of unsigned PKCS #9 attributes to be associated with the resulting <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> content. Unsigned attributes can be modified without invalidating the signature.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.CryptographicAttributeCollection" /> collection that represents the unsigned attributes. If there are no unsigned attributes, the property is an empty collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.ContentInfo">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> class represents the CMS/PKCS #7 ContentInfo data structure as defined in the CMS/PKCS #7 standards document. This data structure is the basis for all CMS/PKCS #7 messages.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])" /> constructor  creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> class by using an array of byte values as the data and a default <paramref name="object identifier" /> (OID) that represents the content type.</summary>
      <param name="content">An array of byte values that represents the data from which to create the <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> object.</param>
      <exception cref="T:System.ArgumentNullException">A null reference  was passed to a method that does not accept it as a valid argument. </exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])" />  constructor  creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> class by using the specified content type and an array of byte values as the data.</summary>
      <param name="contentType">An <see cref="T:System.Security.Cryptography.Oid" /> object that contains an <paramref name="object identifier" /> (OID) that specifies the content type of the content. This can be data, digestedData, encryptedData, envelopedData, hashedData, signedAndEnvelopedData, or signedData.  For more information, see  Remarks.</param>
      <param name="content">An array of byte values that represents the data from which to create the <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> object.</param>
      <exception cref="T:System.ArgumentNullException">A null reference  was passed to a method that does not accept it as a valid argument. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.Content">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.Content" /> property  retrieves the content of the CMS/PKCS #7 message.</summary>
      <returns>An array of byte values that represents the content data.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType" /> property  retrieves the <see cref="T:System.Security.Cryptography.Oid" />   object that contains the <paramref name="object identifier" /> (OID)  of the content type of the inner content of the CMS/PKCS #7 message.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Oid" />  object that contains the OID value that represents the content type.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])" /> static method  retrieves the outer content type of the encoded <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> message represented by an array of byte values.</summary>
      <returns>If the method succeeds, the method returns an <see cref="T:System.Security.Cryptography.Oid" /> object that contains the outer content type of the specified encoded <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> message.If the method fails, it throws an exception.</returns>
      <param name="encodedMessage">An array of byte values that represents the encoded <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> message from which to retrieve the outer content type.</param>
      <exception cref="T:System.ArgumentNullException">A null reference  was passed to a method that does not accept it as a valid argument.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error occurred during a cryptographic operation.</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.EnvelopedCms">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> class represents a CMS/PKCS #7 structure for enveloped data.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> class.</summary>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> class by using the specified content information as the inner content type.</summary>
      <param name="contentInfo">An instance of the <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo" /> class that represents the content and its type.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> class by using the specified content information and encryption algorithm. The specified content information is to be used as the inner content type.</summary>
      <param name="contentInfo">A  <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> object that represents the content and its type.</param>
      <param name="encryptionAlgorithm">An <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> object that specifies the encryption algorithm.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> class by using the specified subject identifier type and content information. The specified content information is to be used as the inner content type.</summary>
      <param name="recipientIdentifierType">A member of the <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> enumeration that specifies the means of identifying the recipient.</param>
      <param name="contentInfo">A <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> object that represents the content and its type.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> class by using the specified subject identifier type, content information, and encryption algorithm. The specified content information is to be used as the inner content type.</summary>
      <param name="recipientIdentifierType">A member of the <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> enumeration that specifies the means of identifying the recipient.</param>
      <param name="contentInfo">A <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> object that represents the content and its type.</param>
      <param name="encryptionAlgorithm">An <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> object that specifies the encryption algorithm.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates" /> property retrieves the set of certificates associated with the enveloped CMS/PKCS #7 message.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> collection that represents the X.509 certificates used with the enveloped CMS/PKCS #7 message. If no certificates exist, the property value is an empty collection.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm" /> property retrieves the identifier of the algorithm used to encrypt the content.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> object that represents the algorithm identifier.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo" /> property retrieves the inner content information for the enveloped CMS/PKCS #7 message.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> object that represents the inner content information from the enveloped CMS/PKCS #7 message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])" /> method decodes the specified enveloped CMS/PKCS #7 message and resets all member variables in the <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> object.</summary>
      <param name="encodedMessage">An array of byte values that represent the information to be decoded.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt" /> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message. The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt" /> method searches the current user and computer My stores for the appropriate certificate and private key.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <exception cref="T:System.InvalidOperationException">A method call was invalid for the object's current state.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.StorePermission, System.Security, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Flags="CreateStore, DeleteStore, OpenStore, EnumerateCertificates" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)" /> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message by using the private key associated with the certificate identified by the specified recipient information.</summary>
      <param name="recipientInfo">A <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object that represents the recipient information that identifies the certificate associated with the private key to use for the decryption.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <exception cref="T:System.InvalidOperationException">A method call was invalid for the object's current state.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message by using the private key associated with the certificate identified by the specified recipient information and by using the specified certificate collection.  The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> method searches the specified certificate collection and the My certificate store for the proper certificate to use for the decryption.</summary>
      <param name="recipientInfo">A <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object that represents the recipient information to use for the decryption.</param>
      <param name="extraStore">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> collection that represents additional certificates to use for the decryption. The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> method searches this certificate collection and the My certificate store for the proper certificate to use for the decryption.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <exception cref="T:System.InvalidOperationException">A method call was invalid for the object's current state.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message by using the specified certificate collection. The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> method searches the specified certificate collection and the My certificate store for the proper certificate to use for the decryption.</summary>
      <param name="extraStore">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> collection that represents additional certificates to use for the decryption. The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> method searches this certificate collection and the My certificate store for the proper certificate to use for the decryption.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <exception cref="T:System.InvalidOperationException">A method call was invalid for the object's current state.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode" /> method encodes the contents of the enveloped CMS/PKCS #7 message and returns it as an array of byte values. Encryption must be done before encoding.</summary>
      <returns>If the method succeeds, the method returns an array of byte values that represent the encoded information.If the method fails, it throws an exception.</returns>
      <exception cref="T:System.InvalidOperationException">A method call was invalid for the object's current state.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt" /> method encrypts the contents of the CMS/PKCS #7 message.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
        <IPermission class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.StorePermission, System.Security, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Flags="CreateStore, DeleteStore, OpenStore, EnumerateCertificates" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)" /> method encrypts the contents of the CMS/PKCS #7 message by using the specified recipient information.</summary>
      <param name="recipient">A <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> object that represents the recipient information.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)" /> method encrypts the contents of the CMS/PKCS #7 message by using the information for the specified list of recipients. The message is encrypted by using a message encryption key with a symmetric encryption algorithm such as triple DES. The message encryption key is then encrypted with the public key of each recipient.</summary>
      <param name="recipients">A <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> collection that represents the information for the list of recipients.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos" /> property retrieves the recipient information associated with the enveloped CMS/PKCS #7 message.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection that represents the recipient information. If no recipients exist, the property value is an empty collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes" /> property retrieves the unprotected (unencrypted) attributes associated with the enveloped CMS/PKCS #7 message. Unprotected attributes are not encrypted, and so do not have data confidentiality within an <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> object.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.CryptographicAttributeCollection" /> collection that represents the unprotected attributes. If no unprotected attributes exist, the property value is an empty collection.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version" /> property retrieves the version of the enveloped CMS/PKCS #7 message.  </summary>
      <returns>An int value that represents the version of the enveloped CMS/PKCS #7 message.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyAgreeKeyChoice">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeKeyChoice" /> enumeration defines the type of key used in a key agreement protocol.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.KeyAgreeKeyChoice.Unknown">
      <summary>The key agreement key type is unknown.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.KeyAgreeKeyChoice.EphemeralKey">
      <summary>The key agreement key is ephemeral, existing only for the duration of the key agreement protocol.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.KeyAgreeKeyChoice.StaticKey">
      <summary>The key agreement key is static, existing for an extended period of time.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> class defines key agreement recipient information.        Key agreement algorithms typically use the Diffie-Hellman key agreement algorithm, in which the two parties that establish a shared cryptographic key both take part in its generation and, by definition, agree on that key. This is in contrast to key transport algorithms, in which one party generates the key unilaterally and sends, or transports it, to the other party.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date" /> property retrieves the date and time of the start of the key agreement protocol by the originator.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that contains the value of the date and time of the start of the key agreement protocol by the originator.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey" /> property retrieves the encrypted recipient keying material.</summary>
      <returns>An array of byte values that contain the encrypted recipient keying material.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm" /> property retrieves the algorithm used to perform the key agreement.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> object that contains the value of the algorithm used to perform the key agreement.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey" /> property retrieves information about the originator of the key agreement for key agreement algorithms that warrant it.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey" /> object that contains information about the originator of the key agreement.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute" /> property retrieves attributes of the keying material.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.CryptographicAttribute" /> object that contains attributes of the keying material.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier" /> property retrieves the identifier of the recipient.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> object that contains the identifier of the recipient.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version" /> property retrieves the version of the key agreement recipient. This is automatically set for  objects in this class, and the value  implies that the recipient is taking part in a key agreement algorithm.</summary>
      <returns>An int  that represents the version of the  <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" />  object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> class defines key transport recipient information.        Key transport algorithms typically use the RSA algorithm, in which  an originator establishes a shared cryptographic key with a recipient by generating that key and  then transporting it to the recipient. This is in contrast to key agreement algorithms, in which the two parties that will be using a cryptographic key both take part in its generation, thereby mutually agreeing to that key.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey" /> property retrieves the encrypted key for this key transport recipient.</summary>
      <returns>An array of byte values that represents the encrypted key.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm" /> property retrieves the key encryption algorithm used to encrypt the content encryption key.</summary>
      <returns> An  <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" />  object that stores the key encryption algorithm identifier.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier" /> property retrieves the subject identifier associated with the encrypted content.</summary>
      <returns>A   <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" />  object that  stores the identifier of the recipient taking part in the key transport.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version" /> property retrieves the version of the key transport recipient. The version of the key transport recipient is automatically set for  objects in this class, and the value  implies that the recipient is taking part in a key transport algorithm.</summary>
      <returns>An int value that represents the version of the key transport <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject">
      <summary>Represents an attribute used for CMS/PKCS #7 and PKCS #9 operations.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> class using a specified <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object as its attribute type and value.</summary>
      <param name="asnEncodedData">An <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object that contains the PKCS #9 attribute type and value to use.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> class using a specified <see cref="T:System.Security.Cryptography.Oid" /> object as the attribute type and a specified ASN.1 encoded data as the attribute value.</summary>
      <param name="oid">An <see cref="T:System.Security.Cryptography.Oid" /> object that represents the PKCS #9 attribute type.</param>
      <param name="encodedData">An array of byte values that represents the PKCS #9 attribute value.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.String,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> class using a specified string representation of an object identifier (OID) as the attribute type and a specified ASN.1 encoded data as the attribute value.</summary>
      <param name="oid">A <see cref="T:System.String" /> object that contains the string representation of an OID that represents the PKCS #9 attribute type.</param>
      <param name="encodedData">An array of byte values that contains the PKCS #9 attribute value.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copies a PKCS #9 attribute type and value for this <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> from the specified <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">An <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object that contains the PKCS #9 attribute type and value to use.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.Oid">
      <summary>Gets an <see cref="T:System.Security.Cryptography.Oid" /> object that represents the type of attribute associated with this <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Oid" /> object that represents the type of attribute associated with this <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> class defines the type of the content of a CMS/PKCS #7 message.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> class.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType" /> property gets an <see cref="T:System.Security.Cryptography.Oid" /> object that contains the content type.</summary>
      <returns>An  <see cref="T:System.Security.Cryptography.Oid" /> object that contains the content type.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copies information from an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object from which to copy information.</param>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> class defines the description of the content of a CMS/PKCS #7 message.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> class by using the specified array of byte values as the encoded description of the content of a CMS/PKCS #7 message.</summary>
      <param name="encodedDocumentDescription">An array of byte values that specifies the encoded description of the CMS/PKCS #7 message.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> class by using the specified description of the content of a CMS/PKCS #7 message.</summary>
      <param name="documentDescription">An instance of the <see cref="T:System.String" />  class that specifies the description for the CMS/PKCS #7 message.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copies information from an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object from which to copy information.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription" /> property retrieves the document description.</summary>
      <returns>A <see cref="T:System.String" /> object that contains the document description.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> class defines the name of a CMS/PKCS #7 message.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> class by using the specified array of byte values as the encoded name of the content of a CMS/PKCS #7 message.</summary>
      <param name="encodedDocumentName">An array of byte values that specifies the encoded name of the CMS/PKCS #7 message.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)" /> constructor creates an instance of the  <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> class by using the specified name for the CMS/PKCS #7 message.</summary>
      <param name="documentName">A  <see cref="T:System.String" />   object that specifies the name for the CMS/PKCS #7 message.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copies information from an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object from which to copy information.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName" /> property retrieves the document name.</summary>
      <returns>A <see cref="T:System.String" /> object that contains the document name.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> class defines the message digest of a CMS/PKCS #7 message.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copies information from an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object from which to copy information.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest" /> property retrieves the message digest.</summary>
      <returns>An array of byte values that contains the message digest.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> class defines the signing date and time of a signature. A <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> object can  be used as an authenticated attribute of a <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />  object when an authenticated date and time are to accompany a digital signature.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> class by using the specified array of byte values as the encoded signing date and time of the content of a CMS/PKCS #7 message.</summary>
      <param name="encodedSigningTime">An array of byte values that specifies the encoded signing date and time of the CMS/PKCS #7 message.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> class by using the specified signing date and time.</summary>
      <param name="signingTime">A <see cref="T:System.DateTime" />  structure that represents the signing date and time of the signature.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copies information from a <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object from which to copy information.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime" /> property retrieves a <see cref="T:System.DateTime" /> structure that represents the date and time that the message was signed.</summary>
      <returns>A <see cref="T:System.DateTime" /> structure that contains the date and time the document was signed.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.PublicKeyInfo">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /> class represents information associated with a public key.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm" /> property retrieves the algorithm identifier associated with the public key.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" />  object that represents the algorithm.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue" /> property retrieves the value of the encoded public component of the public key pair.</summary>
      <returns>An array of byte values  that represents the encoded public component of the public key pair.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfo">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> class represents information about a CMS/PKCS #7 message recipient. The <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> class is an abstract class inherited by the <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> and <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> classes.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey" /> abstract property retrieves the encrypted recipient keying material.</summary>
      <returns>An array of byte values that contain the encrypted recipient keying material.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm" /> abstract property retrieves the algorithm used to perform the key establishment.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> object that contains the value of the algorithm used to establish the key between the originator and recipient of the CMS/PKCS #7 message.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier" /> abstract property retrieves the identifier of the recipient.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> object that contains the identifier of the recipient.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type" /> property retrieves the type of the recipient. The type of the recipient determines which of two major protocols is used to establish a key between the originator and the recipient of a CMS/PKCS #7 message.</summary>
      <returns>A value of the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> enumeration that defines the type of the recipient.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version" /> abstract property retrieves the version of the recipient information. Derived classes automatically set this property for their objects, and the value indicates whether it is using PKCS #7 or Cryptographic Message Syntax (CMS) to protect messages. The version also implies whether the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object establishes a cryptographic key by a key agreement algorithm or a key transport algorithm.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the version of the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> class represents a collection of <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> objects. <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> implements the <see cref="T:System.Collections.ICollection" /> interface. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)" /> method copies the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection to an array.</summary>
      <param name="array">An <see cref="T:System.Array" /> object to which  the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection is to be copied.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection is copied.</param>
      <exception cref="T:System.ArgumentException">One of the arguments provided to a method was not valid.</exception>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of an argument was outside the allowable range of values as defined by the called method.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)" /> method copies the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection to a <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> array.</summary>
      <param name="array">An array of <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> objects where the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection is to be copied.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection is copied.</param>
      <exception cref="T:System.ArgumentException">One of the arguments provided to a method was not valid.</exception>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of an argument was outside the allowable range of values as defined by the called method.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count" /> property retrieves the number of items in the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</summary>
      <returns>An int value that represents the number of items in the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator" /> method returns a <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> object for the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> object that can be used to enumerate the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized" /> property retrieves whether access to the collection is synchronized, or thread safe. This property always returns false, which means the collection is not thread safe.</summary>
      <returns>A <see cref="T:System.Boolean" /> value of false, which means the collection is not thread safe.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)" /> property retrieves the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object at the specified index.</returns>
      <param name="index">An int value that represents the index in the collection. The index is zero based.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of an argument was outside the allowable range of values as defined by the called method.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot" /> property retrieves an <see cref="T:System.Object" /> object used to synchronize access to the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Object" />  object used to synchronize access to the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System.Collections.IEnumerable.GetEnumerator" /> method returns a <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> object for the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> object that can be used to enumerate the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> class provides enumeration functionality for the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection. <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> implements the <see cref="T:System.Collections.IEnumerator" /> interface. </summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current" /> property retrieves the current <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object from the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object that represents the current recipient information structure in the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext" /> method advances the enumeration to the next <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object in the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</summary>
      <returns>This method returns a bool that specifies whether the enumeration successfully advanced. If the enumeration successfully moved to the next <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object, the method returns true. If the enumeration moved past the last item in the enumeration, it returns false.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset" /> method resets the enumeration to the first <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object in the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System.Collections.IEnumerator.Current" /> property retrieves the current <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object from the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> object that represents the current recipient information structure in the <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoType">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> enumeration defines the types of recipient information.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.Unknown">
      <summary>The recipient information type is unknown.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyTransport">
      <summary>Key transport recipient information.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyAgreement">
      <summary>Key agreement recipient information.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignedCms">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> class enables signing and verifying of CMS/PKCS #7 messages. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> class.</summary>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> class by using the specified content information as the inner content.</summary>
      <param name="contentInfo">A <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> object that specifies the content information as the inner content of the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> message.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> class by using the specified content information as the inner content and by using the detached state.</summary>
      <param name="contentInfo">A <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> object that specifies the content information as the inner content of the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> message.</param>
      <param name="detached">A <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> object is for a detached signature. If <paramref name="detached" /> is true, the signature is detached. If <paramref name="detached" /> is false, the signature is not detached.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> class by using the specified subject identifier type as the default subject identifier type for signers.</summary>
      <param name="signerIdentifierType">A <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> member that specifies the default subject identifier type for signers.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> class by using the specified subject identifier type as the default subject identifier type for signers and content information as the inner content.</summary>
      <param name="signerIdentifierType">A <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> member that specifies the default subject identifier type for signers.</param>
      <param name="contentInfo">A <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> object that specifies the content information as the inner content of the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> message.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> constructor creates an instance of the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> class by using the specified subject identifier type as the default subject identifier type for signers, the content information as the inner content, and by using the detached state.</summary>
      <param name="signerIdentifierType">A <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> member that specifies the default subject identifier type for signers.</param>
      <param name="contentInfo">A <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> object that specifies the content information as the inner content of the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> message.</param>
      <param name="detached">A <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> object is for a detached signature. If <paramref name="detached" /> is true, the signature is detached. If detached is false, the signature is not detached.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" /> property retrieves the certificates associated with the encoded CMS/PKCS #7 message.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> collection that represents the set of certificates for the encoded CMS/PKCS #7 message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> method verifies the data integrity of the CMS/PKCS #7 message. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> is a specialized method used in specific security infrastructure applications in which the subject uses the <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.HashOnly" /> enumeration member when setting up a <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> object. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> does not authenticate the author nor sender of the message because this method does not involve verifying a digital signature. For general-purpose checking of the integrity and authenticity of a CMS/PKCS #7 message, use the <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> or <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> methods.</summary>
      <exception cref="T:System.InvalidOperationException">A method call was invalid for the object's current state.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> method verifies the digital signatures on the signed CMS/PKCS #7 message and, optionally, validates the signers' certificates.</summary>
      <param name="verifySignatureOnly">A <see cref="T:System.Boolean" /> value that specifies whether only the digital signatures are verified without the signers' certificates being validated. If <paramref name="verifySignatureOnly" /> is true, only the digital signatures are verified. If it is false, the digital signatures are verified, the signers' certificates are validated, and the purposes of the certificates are validated. The purposes of a certificate are considered valid if the certificate has no key usage or if the key usage supports digital signatures or nonrepudiation.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <exception cref="T:System.InvalidOperationException"> A method call was invalid for the object's current state.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> method verifies the digital signatures on the signed CMS/PKCS #7 message by using the specified collection of certificates and, optionally, validates the signers' certificates.</summary>
      <param name="extraStore">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object that can be used to validate the certificate chain. If no additional certificates are to be used to validate the certificate chain, use <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> instead of <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />.</param>
      <param name="verifySignatureOnly">A <see cref="T:System.Boolean" /> value that specifies whether only the digital signatures are verified without the signers' certificates being validated. If <paramref name="verifySignatureOnly" /> is true, only the digital signatures are verified. If it is false, the digital signatures are verified, the signers' certificates are validated, and the purposes of the certificates are validated. The purposes of a certificate are considered valid if the certificate has no key usage or if the key usage supports digital signatures or nonrepudiation.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <exception cref="T:System.InvalidOperationException">A method call was invalid for the object's current state.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature" /> method prompts the user to select a signing certificate, creates a signature, and adds the signature to the CMS/PKCS #7 message.</summary>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
        <IPermission class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.StorePermission, System.Security, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Flags="CreateStore, DeleteStore, OpenStore, EnumerateCertificates" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> method creates a signature using the specified signer and adds the signature to the CMS/PKCS #7 message.</summary>
      <param name="signer">A <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> object that represents the signer.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)">
      <summary>Creates a signature using the specified signer and adds the signature to the CMS/PKCS #7 message. If the value of the silent parameter is false and the <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> property of the <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> object specified by the signer parameter is not set to a valid certificate, this method prompts the user to select a signing certificate.</summary>
      <param name="signer">A <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> object that represents the signer.</param>
      <param name="silent">false to prompt the user to select a signing certificate.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <exception cref="T:System.InvalidOperationException">The value of the <paramref name="silent" /> parameter is true and a signing certificate is not specified.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" /> property retrieves the inner contents of the encoded CMS/PKCS #7 message.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> object that represents the contents of the encoded CMS/PKCS #7 message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> method decodes an encoded <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> message. Upon successful decoding, the decoded information can be retrieved from the properties of the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> object.</summary>
      <param name="encodedMessage">Array of byte values that represents the encoded CMS/PKCS #7 message to be decoded.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Detached">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" /> property retrieves whether the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> object is for a detached signature.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> object is for a detached signature. If this property is true, the signature is detached. If this property is false, the signature is not detached.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Encode">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" /> method encodes the information in the object into a CMS/PKCS #7 message.</summary>
      <returns>An array of byte values that represents the encoded message. The encoded message can be decoded by the <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> method.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <exception cref="T:System.InvalidOperationException">A method call was invalid for the object's current state.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)">
      <summary>Removes the signature at the specified index of the <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> collection. </summary>
      <param name="index">The zero-based index of the signature to remove.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> method removes the signature for the specified <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object.</summary>
      <param name="signerInfo">A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object that represents the countersignature being removed.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of an argument was outside the allowable range of values as defined by the called method.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> property retrieves the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection associated with the CMS/PKCS #7 message.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> object that represents the signer information for the CMS/PKCS #7 message.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Version">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" /> property retrieves the version of the CMS/PKCS #7 message.</summary>
      <returns>An int value that represents the CMS/PKCS #7 message version.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfo">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> class represents a signer associated with a <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> object that represents a CMS/PKCS #7 message.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" /> property retrieves the signing certificate associated with the signer information.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object that represents the signing certificate.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> method verifies the data integrity of the CMS/PKCS #7 message signer information. <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> is a specialized method used in specific security infrastructure applications in which the subject uses the HashOnly member of the <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> enumeration when setting up a <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> object. <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> does not authenticate the signer information because this method does not involve verifying a digital signature. For general-purpose checking of the integrity and authenticity of CMS/PKCS #7 message signer information and countersignatures, use the <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> or <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> methods.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> method verifies the digital signature of the message and, optionally, validates the certificate.</summary>
      <param name="verifySignatureOnly">A bool value that specifies whether only the digital signature is verified. If <paramref name="verifySignatureOnly" /> is true, only the signature is verified. If <paramref name="verifySignatureOnly" /> is false, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <exception cref="T:System.InvalidOperationException">A method call was invalid for the object's current state.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> method verifies the digital signature of the message by using the specified collection of certificates and, optionally, validates the certificate.</summary>
      <param name="extraStore">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object that can be used to validate the chain. If no additional certificates are to be used to validate the chain, use <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> instead of <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />.</param>
      <param name="verifySignatureOnly">A bool value that specifies whether only the digital signature is verified. If <paramref name="verifySignatureOnly" /> is true, only the signature is verified. If <paramref name="verifySignatureOnly" /> is false, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <exception cref="T:System.InvalidOperationException">A method call was invalid for the object's current state.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" /> method prompts the user to select a signing certificate, creates a countersignature, and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.</summary>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
        <IPermission class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.StorePermission, System.Security, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Flags="CreateStore, DeleteStore, OpenStore, EnumerateCertificates" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> method creates a countersignature by using the specified signer and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.</summary>
      <param name="signer">A <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> object that represents the counter signer.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> property retrieves the set of counter signers associated with the signer information. </summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection that represents the counter signers for the signer information. If there are no counter signers, the property is an empty collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" /> property retrieves the <see cref="T:System.Security.Cryptography.Oid" /> object that represents the hash algorithm used in the computation of the signatures.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Oid" /> object that represents the hash algorithm used with the signature.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" /> method removes the countersignature at the specified index of the <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> collection.</summary>
      <param name="index">The zero-based index of the countersignature to remove.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> method removes the countersignature for the specified <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object.</summary>
      <param name="counterSignerInfo">A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object that represents the countersignature being removed.</param>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of an argument was outside the allowable range of values as defined by the called method.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A cryptographic operation could not be completed.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" /> property retrieves the <see cref="T:System.Security.Cryptography.CryptographicAttributeCollection" /> collection of signed attributes that is associated with the signer information. Signed attributes are signed along with the rest of the message content.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.CryptographicAttributeCollection" /> collection that represents the signed attributes. If there are no signed attributes, the property is an empty collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" /> property retrieves the certificate identifier of the signer associated with the signer information.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> object that uniquely identifies the certificate associated with the signer information.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" /> property retrieves the <see cref="T:System.Security.Cryptography.CryptographicAttributeCollection" /> collection of unsigned attributes that is associated with the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> content. Unsigned attributes can be modified without invalidating the signature.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.CryptographicAttributeCollection" /> collection that represents the unsigned attributes. If there are no unsigned attributes, the property is an empty collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Version">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" /> property retrieves the signer information version.</summary>
      <returns>An int value that specifies the signer information version.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoCollection">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> class represents a collection of <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> objects. <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> implements the <see cref="T:System.Collections.ICollection" /> interface. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)" /> method copies the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection to an array.</summary>
      <param name="array">An <see cref="T:System.Array" /> object to which the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection is to be copied.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection is copied.</param>
      <exception cref="T:System.ArgumentException">One of the arguments provided to a method was not valid.</exception>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of an argument was outside the allowable range of values as defined by the called method.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)" /> method copies the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection to a <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> array.</summary>
      <param name="array">An array of <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> objects where the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection is to be copied.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection is copied.</param>
      <exception cref="T:System.ArgumentException">One of the arguments provided to a method was not valid.</exception>
      <exception cref="T:System.ArgumentNullException">A null reference was passed to a method that does not accept it as a valid argument. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of an argument was outside the allowable range of values as defined by the called method.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count" /> property retrieves the number of items in the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</summary>
      <returns>An int value that represents the number of items in the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator" /> method returns a <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> object for the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> object that can be used to enumerate the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized" /> property retrieves whether access to the collection is synchronized, or thread safe. This property always returns false, which means the collection is not thread safe.</summary>
      <returns>A <see cref="T:System.Boolean" /> value of false, which means the collection is not thread safe.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)" /> property retrieves the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object  at the specified index.</returns>
      <param name="index">An int value that represents the index in the collection. The index is zero based.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of an argument was outside the allowable range of values as defined by the called method.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot" /> property retrieves an <see cref="T:System.Object" /> object is used to synchronize access to the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Object" /> object is used to synchronize access to the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System.Collections.IEnumerable.GetEnumerator" /> method returns a <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> object for the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> object that can be used to enumerate the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> class provides enumeration functionality for the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection. <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> implements the <see cref="T:System.Collections.IEnumerator" /> interface. </summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current" /> property retrieves the current <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object from the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object that represents the current signer information structure in the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext" /> method advances the enumeration to the next   <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object in the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</summary>
      <returns>This method returns a bool value that specifies whether the enumeration successfully advanced. If the enumeration successfully moved to the next <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object, the method returns true. If the enumeration moved past the last item in the enumeration, it returns false.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset">
      <summary>The <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset" /> method resets the enumeration to the first <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object in the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System.Collections.IEnumerator.Current" /> property retrieves the current <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object from the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> object that represents the current signer information structure in the <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifier">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> class defines the type of the identifier of a subject, such as a <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> or a <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />.  The subject can be identified by the certificate issuer and serial number or the subject key.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> property retrieves the type of subject identifier. The subject can be identified by the certificate issuer and serial number or the subject key.</summary>
      <returns>A member of the <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />  enumeration that identifies the type of subject.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> property retrieves the value of the subject identifier. Use the <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> property to determine the type of subject identifier, and use the <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> property to retrieve the corresponding value.</summary>
      <returns>An <see cref="T:System.Object" /> object that represents the value of the subject identifier. This <see cref="T:System.Object" /> can be one of the following objects as determined by the <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> property.<see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> propertyObjectIssuerAndSerialNumber<see cref="T:System.Security.Cryptographyxml.X509IssuerSerial" />SubjectKeyIdentifier<see cref="T:System.String" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey" /> class defines the type of the identifier of a subject, such as a <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> or a <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />.  The subject can be identified by the certificate issuer and serial number, the hash of the subject key, or the subject key. </summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> property retrieves the type of subject identifier or key. The subject can be identified by the certificate issuer and serial number, the hash of the subject key, or the subject key.</summary>
      <returns>A member of the <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" />  enumeration that specifies the type of subject identifier.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value">
      <summary>The <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> property retrieves the value of the subject identifier or  key. Use the <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> property to determine the type of subject identifier or key, and use the <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> property to retrieve the corresponding value.</summary>
      <returns>An <see cref="T:System.Object" /> object that represents the value of the subject identifier or key. This <see cref="T:System.Object" /> can be one of the following objects as determined by the <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> property.<see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> propertyObjectIssuerAndSerialNumber<see cref="T:System.Security.Cryptographyxml.X509IssuerSerial" />SubjectKeyIdentifier<see cref="T:System.String" />PublicKeyInfo<see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> enumeration defines how a subject is identified.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.Unknown">
      <summary>The type is unknown.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.IssuerAndSerialNumber">
      <summary>The subject is identified by the certificate issuer and serial number.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.SubjectKeyIdentifier">
      <summary>The subject is identified by the hash of the subject key.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.PublicKeyInfo">
      <summary>The subject is identified by the public key.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType">
      <summary>The <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> enumeration defines the type of subject identifier.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.Unknown">
      <summary>The type of subject identifier is unknown.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber">
      <summary>The subject is identified by the certificate issuer and serial number.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.SubjectKeyIdentifier">
      <summary>The subject is identified by the hash of the subject's public key. The hash algorithm used is determined by the signature algorithm suite in the subject's certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.NoSignature">
      <summary>The subject is identified as taking part in an integrity check operation that uses only a hashing algorithm.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI">
      <summary>Displays user interface dialogs that allow you to select and view X.509 certificates. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Displays a dialog box that contains the properties of an X.509 certificate and its associated certificate chain.</summary>
      <param name="certificate">The X.509 certificate to display.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="certificate" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="certificate" /> parameter is invalid. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IntPtr)">
      <summary>Displays a dialog box that contains the properties of an X.509 certificate and its associated certificate chain using a handle to a parent window.</summary>
      <param name="certificate">The X.509 certificate to display.</param>
      <param name="hwndParent">A handle to the parent window to use for the display dialog.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="certificate" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="certificate" /> parameter is invalid. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag)">
      <summary>Displays a dialog box for selecting an X.509 certificate from a certificate collection.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object that contains the selected certificate or certificates.</returns>
      <param name="certificates">A collection of X.509 certificates to select from.</param>
      <param name="title">The title of the dialog box.</param>
      <param name="message">A descriptive message to guide the user.  The message is displayed in the dialog box.</param>
      <param name="selectionFlag">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> values that specifies whether single or multiple selections are allowed. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="selectionFlag" /> parameter is not a valid flag. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="certificates" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="certificates" /> parameter is invalid. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag,System.IntPtr)">
      <summary>Displays a dialog box for selecting an X.509 certificate from a certificate collection using a handle to a parent window.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object that contains the selected certificate or certificates.</returns>
      <param name="certificates">A collection of X.509 certificates to select from.</param>
      <param name="title">The title of the dialog box.</param>
      <param name="message">A descriptive message to guide the user.  The message is displayed in the dialog box.</param>
      <param name="selectionFlag">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> values that specifies whether single or multiple selections are allowed. </param>
      <param name="hwndParent">A handle to the parent window to use for the display dialog box.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="selectionFlag" /> parameter is not a valid flag. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="certificates" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="certificates" /> parameter is invalid. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag">
      <summary>Specifies the type of selection requested using the <see cref="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection" /> method.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.SingleSelection">
      <summary>A single selection. The UI allows the user to select one X.509 certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.MultiSelection">
      <summary>A multiple selection. The user can use the SHIFT or CRTL keys to select more than one X.509 certificate.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.CipherData">
      <summary>Represents the &lt;CipherData&gt; element in XML encryption. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.CipherData" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.CipherData" /> class using a byte array as the <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> value.</summary>
      <param name="cipherValue">The encrypted data to use for the &lt;CipherValue&gt; element.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cipherValue" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> property has already been set.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.CipherData" /> class using a <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> object.</summary>
      <param name="cipherReference">The <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> object to use.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cipherValue" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> property has already been set.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.CipherData.CipherReference">
      <summary>Gets or sets the &lt;CipherReference&gt; element.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> object.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" />  property was set to null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" />  property was set more than once.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.CipherData.CipherValue">
      <summary>Gets or sets the &lt;CipherValue&gt; element.</summary>
      <returns>A byte array that represents the &lt;CipherValue&gt; element.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" />  property was set to null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" />  property was set more than once.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherData.GetXml">
      <summary>Gets the XML values for the <see cref="T:System.Security.Cryptography.Xml.CipherData" /> object.</summary>
      <returns>A <see cref="T:System.Xml.XmlElement" /> object that represents the XML information for the <see cref="T:System.Security.Cryptography.Xml.CipherData" /> object.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> property and the <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> property are null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)">
      <summary>Loads XML data from an <see cref="T:System.Xml.XmlElement" /> into a <see cref="T:System.Security.Cryptography.Xml.CipherData" /> object.</summary>
      <param name="value">An <see cref="T:System.Xml.XmlElement" /> that represents the XML data to load.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> property and the <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> property are null.</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.CipherReference">
      <summary>Represents the &lt;CipherReference&gt; element in XML encryption. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> class using the specified Uniform Resource Identifier (URI).</summary>
      <param name="uri">A Uniform Resource Identifier (URI) pointing to the encrypted data.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> class using the specified Uniform Resource Identifier (URI) and transform chain information.</summary>
      <param name="uri">A Uniform Resource Identifier (URI) pointing to the encrypted data.</param>
      <param name="transformChain">A <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object that describes transforms to do on the encrypted data.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherReference.GetXml">
      <summary>Returns the XML representation of a <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> object.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the &lt;CipherReference&gt; element in XML encryption.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> value is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)">
      <summary>Loads XML information into the &lt;CipherReference&gt; element in XML encryption.</summary>
      <param name="value">An <see cref="T:System.Xml.XmlElement" /> object that represents an XML element to use as the reference.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> provided is null.</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.DataObject">
      <summary>Represents the object element of an XML signature that holds data to be signed.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.DataObject" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.DataObject" /> class with the specified identification, MIME type, encoding, and data.</summary>
      <param name="id">The identification to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.DataObject" /> with. </param>
      <param name="mimeType">The MIME type of the data used to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.DataObject" />. </param>
      <param name="encoding">The encoding of the data used to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.DataObject" />. </param>
      <param name="data">The data to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.DataObject" /> with. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="data" /> parameter is null. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.Data">
      <summary>Gets or sets the data value of the current <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object.</summary>
      <returns>The data of the current <see cref="T:System.Security.Cryptography.Xml.DataObject" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value used to set the property is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.Encoding">
      <summary>Gets or sets the encoding of the current <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object.</summary>
      <returns>The type of encoding of the current <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.GetXml">
      <summary>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object.</summary>
      <returns>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.Id">
      <summary>Gets or sets the identification of the current <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object.</summary>
      <returns>The name of the element that contains data to be used. </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)">
      <summary>Loads a <see cref="T:System.Security.Cryptography.Xml.DataObject" /> state from an XML element.</summary>
      <param name="value">The XML element to load the <see cref="T:System.Security.Cryptography.Xml.DataObject" /> state from. </param>
      <exception cref="T:System.ArgumentNullException">The value from the XML element is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.MimeType">
      <summary>Gets or sets the MIME type of the current <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object. </summary>
      <returns>The MIME type of the current <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object. The default is null.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.DataReference">
      <summary>Represents the &lt;DataReference&gt; element used in XML encryption. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.DataReference" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.DataReference" /> class using the specified Uniform Resource Identifier (URI).</summary>
      <param name="uri">A Uniform Resource Identifier (URI) that points to the encrypted data.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.DataReference" /> class using the specified Uniform Resource Identifier (URI) and a <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object.</summary>
      <param name="uri">A Uniform Resource Identifier (URI) that points to the encrypted data.</param>
      <param name="transformChain">A <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object that describes transforms to do on the encrypted data.</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.DSAKeyValue">
      <summary>Represents the <see cref="T:System.Security.Cryptography.DSA" /> private key of the &lt;KeyInfo&gt; element.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> class with a new, randomly-generated <see cref="T:System.Security.Cryptography.DSA" /> public key.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.#ctor(System.Security.Cryptography.DSA)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> class with the specified <see cref="T:System.Security.Cryptography.DSA" /> public key.</summary>
      <param name="key">The instance of an implementation of the <see cref="T:System.Security.Cryptography.DSA" /> class that holds the public key. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.GetXml">
      <summary>Returns the XML representation of a <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> element.</summary>
      <returns>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> element.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DSAKeyValue.Key">
      <summary>Gets or sets the key value represented by a <see cref="T:System.Security.Cryptography.DSA" /> object.</summary>
      <returns>The public key represented by a <see cref="T:System.Security.Cryptography.DSA" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.LoadXml(System.Xml.XmlElement)">
      <summary>Loads a <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> state from an XML element.</summary>
      <param name="value">The XML element to load the <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> state from. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="value" /> parameter is not a valid <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> XML element. </exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptedData">
      <summary>Represents the &lt;EncryptedData&gt; element in XML encryption. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedData.GetXml">
      <summary>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the &lt;EncryptedData&gt; element in XML encryption.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> value is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedData.LoadXml(System.Xml.XmlElement)">
      <summary>Loads XML information into the &lt;EncryptedData&gt; element in XML encryption.</summary>
      <param name="value">An <see cref="T:System.Xml.XmlElement" /> object representing an XML element to use for the &lt;EncryptedData&gt; element.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> provided is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="value" /> parameter does not contain a &lt;CypherData&gt; node.</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptedKey">
      <summary>Represents the &lt;EncryptedKey&gt; element in XML encryption. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)">
      <summary>Adds a &lt;DataReference&gt; element to the &lt;ReferenceList&gt; element.</summary>
      <param name="dataReference">A <see cref="T:System.Security.Cryptography.Xml.DataReference" /> object to add to the <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> property.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)">
      <summary>Adds a &lt;KeyReference&gt; element to the &lt;ReferenceList&gt; element.</summary>
      <param name="keyReference">A <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object to add to the <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> property.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName">
      <summary>Gets or sets the optional &lt;CarriedKeyName&gt; element in XML encryption.</summary>
      <returns>A string that represents a name for the key value.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedKey.GetXml">
      <summary>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the &lt;EncryptedKey&gt; element in XML encryption.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> value is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)">
      <summary>Loads the specified XML information into the &lt;EncryptedKey&gt; element in XML encryption.</summary>
      <param name="value">An <see cref="T:System.Xml.XmlElement" /> representing an XML element to use for the &lt;EncryptedKey&gt; element.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="value" /> parameter does not contain a <see cref="T:System.Security.Cryptography.Xml.CipherData" />  element.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedKey.Recipient">
      <summary>Gets or sets the optional Recipient attribute in XML encryption.</summary>
      <returns>A string representing the value of the Recipient attribute.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList">
      <summary>Gets or sets the &lt;ReferenceList&gt; element in XML encryption.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptedReference">
      <summary>Represents the abstract base class used in XML encryption from which the <see cref="T:System.Security.Cryptography.Xml.CipherReference" />, <see cref="T:System.Security.Cryptography.Xml.KeyReference" />, and <see cref="T:System.Security.Cryptography.Xml.DataReference" /> classes derive.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> class using the specified Uniform Resource Identifier (URI).</summary>
      <param name="uri">The Uniform Resource Identifier (URI) that points to the data to encrypt.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="uri" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> class using the specified Uniform Resource Identifier (URI) and transform chain.</summary>
      <param name="uri">The Uniform Resource Identifier (URI) that points to the data to encrypt.</param>
      <param name="transformChain">A <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object that describes transforms to be done on the data to encrypt.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="uri" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.AddTransform(System.Security.Cryptography.Xml.Transform)">
      <summary>Adds a <see cref="T:System.Security.Cryptography.Xml.Transform" /> object to the current transform chain of an <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> object.</summary>
      <param name="transform">A <see cref="T:System.Security.Cryptography.Xml.Transform" /> object to add to the transform chain.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedReference.CacheValid">
      <summary>Gets a value that indicates whether the cache is valid.</summary>
      <returns>true if the cache is valid; otherwise, false.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.GetXml">
      <summary>Returns the XML representation of an <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> object.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> object that represents the values of the &lt;EncryptedReference&gt; element in XML encryption.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.EncryptedReference.ReferenceType" /> property is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.LoadXml(System.Xml.XmlElement)">
      <summary>Loads an XML element into an <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> object.</summary>
      <param name="value">An <see cref="T:System.Xml.XmlElement" /> object that represents an XML element.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedReference.ReferenceType">
      <summary>Gets or sets a reference type.</summary>
      <returns>The reference type of the encrypted data.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedReference.TransformChain">
      <summary>Gets or sets the transform chain of an <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> object.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object that describes transforms used on the encrypted data.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedReference.Uri">
      <summary>Gets or sets the Uniform Resource Identifier (URI) of an <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> object.</summary>
      <returns>The Uniform Resource Identifier (URI) of the <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> object.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Cryptography.Xml.EncryptedReference.Uri" /> property was set to null.</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptedType">
      <summary>Represents the abstract base class from which the classes <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> and <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> derive.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>Adds an &lt;EncryptionProperty&gt; child element to the &lt;EncryptedProperties&gt; element in the current <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> object in XML encryption.</summary>
      <param name="ep">An <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.CipherData">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.Xml.CipherData" /> value for an instance of an <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> class.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Xml.CipherData" /> object.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" /> property was set to null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.Encoding">
      <summary>Gets or sets the Encoding attribute of an <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> instance in XML encryption.</summary>
      <returns>A string that describes the encoding of the encrypted data.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod">
      <summary>Gets or sets the &lt;EncryptionMethod&gt; element for XML encryption.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> object that represents the &lt;EncryptionMethod&gt; element.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties">
      <summary>Gets or sets the &lt;EncryptionProperties&gt; element in XML encryption.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedType.GetXml">
      <summary>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> object.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> object that represents the &lt;EncryptedType&gt; element in XML encryption.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.Id">
      <summary>Gets or sets the Id attribute of an <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> instance in XML encryption.</summary>
      <returns>A string of the Id attribute of the &lt;EncryptedType&gt; element.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.KeyInfo">
      <summary>Gets of sets the &lt;KeyInfo&gt; element in XML encryption.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)">
      <summary>Loads XML information into the &lt;EncryptedType&gt; element in XML encryption.</summary>
      <param name="value">An <see cref="T:System.Xml.XmlElement" /> object representing an XML element to use in the &lt;EncryptedType&gt; element.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> provided is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.MimeType">
      <summary>Gets or sets the MimeType attribute of an <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> instance in XML encryption.</summary>
      <returns>A string that describes the media type of the encrypted data.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.Type">
      <summary>Gets or sets the Type attribute of an <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> instance in XML encryption.</summary>
      <returns>A string that describes the text form of the encrypted data.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptedXml">
      <summary>Represents the process model for implementing XML encryption.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document.</summary>
      <param name="document">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document and evidence.</summary>
      <param name="document">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</param>
      <param name="evidence">An <see cref="T:System.Security.Policy.Evidence" /> object associated with the <see cref="T:System.Xml.XmlDocument" /> object.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)">
      <summary>Defines a mapping between a key name and a symmetric key or an asymmetric key.</summary>
      <param name="keyName">The name to map to <paramref name="keyObject" />.</param>
      <param name="keyObject">The symmetric key to map to <paramref name="keyName" />.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="keyName" /> parameter is null.-or-The value of the <paramref name="keyObject" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The value of the <paramref name="keyObject" /> parameter is not an RSA algorithm or a symmetric key. </exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings">
      <summary>Resets all key name mapping.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)">
      <summary>Decrypts an &lt;EncryptedData&gt; element using the specified symmetric algorithm.</summary>
      <returns>A byte array that contains the raw decrypted plain text.</returns>
      <param name="encryptedData">The data to decrypt.</param>
      <param name="symmetricAlgorithm">The symmetric key used to decrypt <paramref name="encryptedData" />.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="encryptedData" /> parameter is null.-or-The value of the <paramref name="symmetricAlgorithm" /> parameter is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument">
      <summary>Decrypts all &lt;EncryptedData&gt; elements of the XML document that were specified during initialization of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic key used to decrypt the document was not found. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)">
      <summary>Determines the key represented by the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> element.</summary>
      <returns>A byte array that contains the key.</returns>
      <param name="encryptedKey">The <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object that contains the key to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="encryptedKey" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The value of the <paramref name="encryptedKey" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael). </exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)">
      <summary>Decrypts an &lt;EncryptedKey&gt; element using an asymmetric algorithm.</summary>
      <returns>A byte array that contains the plain text key.</returns>
      <param name="keyData">An array of bytes that represents an encrypted &lt;EncryptedKey&gt; element.</param>
      <param name="rsa">The asymmetric key used to decrypt <paramref name="keyData" />.</param>
      <param name="useOAEP">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="keyData" /> parameter is null.-or-The value of the <paramref name="rsa" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)">
      <summary>Decrypts an &lt;EncryptedKey&gt; element using a symmetric algorithm.</summary>
      <returns>A byte array that contains the plain text key.</returns>
      <param name="keyData">An array of bytes that represents an encrypted &lt;EncryptedKey&gt; element.</param>
      <param name="symmetricAlgorithm">The symmetric key used to decrypt <paramref name="keyData" />.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="keyData" /> parameter is null.-or-The value of the <paramref name="symmetricAlgorithm" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The value of the <paramref name="symmetricAlgorithm" /> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael). </exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence">
      <summary>Gets or sets the evidence of the <see cref="T:System.Xml.XmlDocument" /> object from which the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object is constructed.</summary>
      <returns>An <see cref="T:System.Security.Policy.Evidence" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.Encoding">
      <summary>Gets or sets the encoding used for XML encryption.</summary>
      <returns>An <see cref="T:System.Text.Encoding" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Encrypts the outer XML of an element using the specified X.509 certificate.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> element that represents the encrypted XML data.</returns>
      <param name="inputElement">The XML element to encrypt.</param>
      <param name="certificate">The X.509 certificate to use for encryption.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="inputElement" /> parameter is null.-or-The value of the <paramref name="certificate" /> parameter is null.</exception>
      <exception cref="T:System.NotSupportedException">The value of the <paramref name="certificate" /> parameter does not represent an RSA key algorithm.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)">
      <summary>Encrypts the outer XML of an element using the specified key in the key mapping table.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that represents the encrypted XML data.</returns>
      <param name="inputElement">The XML element to encrypt.</param>
      <param name="keyName">A key name that can be found in the key mapping table.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="inputElement" /> parameter is null.-or-The value of the <paramref name="keyName" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The value of the <paramref name="keyName" /> parameter does not match a registered key name pair.-or-The cryptographic key described by the <paramref name="keyName" /> parameter is not supported. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)">
      <summary>Encrypts data in the specified byte array using the specified symmetric algorithm.</summary>
      <returns>A byte array of encrypted data.</returns>
      <param name="plaintext">The data to encrypt.</param>
      <param name="symmetricAlgorithm">The symmetric algorithm to use for encryption.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="plaintext" /> parameter is null.-or-The value of the <paramref name="symmetricAlgorithm" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The data could not be encrypted using the specified parameters.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)">
      <summary>Encrypts the specified element or its contents using the specified symmetric algorithm.</summary>
      <returns>A byte array that contains the encrypted data.</returns>
      <param name="inputElement">The element or its contents to encrypt.</param>
      <param name="symmetricAlgorithm">The symmetric algorithm to use for encryption.</param>
      <param name="content">true to encrypt only the contents of the element; false to encrypt the entire element.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="inputElement" /> parameter is null.-or-The value of the <paramref name="symmetricAlgorithm" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)">
      <summary>Encrypts the key that a recipient uses to decrypt an &lt;EncryptedData&gt; element.</summary>
      <returns>A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</returns>
      <param name="keyData">The key to encrypt.</param>
      <param name="rsa">The asymmetric key used to encrypt <paramref name="keyData" />.</param>
      <param name="useOAEP">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="keyData" /> parameter is null.-or-The value of the <paramref name="rsa" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)">
      <summary>Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an &lt;EncryptedData&gt; element.</summary>
      <returns>A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</returns>
      <param name="keyData">The key to encrypt.</param>
      <param name="symmetricAlgorithm">The symmetric key used to encrypt <paramref name="keyData" />.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="keyData" /> parameter is null.-or-The value of the <paramref name="symmetricAlgorithm" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The value of the <paramref name="symmetricAlgorithm" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael). </exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)">
      <summary>Retrieves the decryption initialization vector (IV) from an <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</summary>
      <returns>A byte array that contains the decryption initialization vector (IV).</returns>
      <param name="encryptedData">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the initialization vector (IV) to retrieve.</param>
      <param name="symmetricAlgorithmUri">The Uniform Resource Identifier (URI) that describes the cryptographic algorithm associated with the <paramref name="encryptedData" /> value.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="encryptedData" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The value of the <paramref name="encryptedData" /> parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />  property that is null.-or-The value of the <paramref name="symmetricAlgorithmUrisymAlgUri" /> parameter is not a supported algorithm.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)">
      <summary>Retrieves the decryption key from the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> object associated with the decryption key.</returns>
      <param name="encryptedData">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the decryption key to retrieve.</param>
      <param name="symmetricAlgorithmUri">The size of the decryption key to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="encryptedData" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The encryptedData parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.-or-The encrypted key cannot be retrieved using the specified parameters.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)">
      <summary>Determines how to resolve internal Uniform Resource Identifier (URI) references.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved.</returns>
      <param name="document">An <see cref="T:System.Xml.XmlDocument" /> object that contains an element with an ID value.</param>
      <param name="idValue">A string that represents the ID value.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.Mode">
      <summary>Gets or sets the cipher mode used for XML encryption.</summary>
      <returns>One of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.Padding">
      <summary>Gets or sets the padding mode used for XML encryption.</summary>
      <returns>One of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values that specifies the type of padding used for encryption.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.Recipient">
      <summary>Gets or sets the recipient of the encrypted key information.</summary>
      <returns>The recipient of the encrypted key information.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])">
      <summary>Replaces an &lt;EncryptedData&gt; element with a specified decrypted sequence of bytes.</summary>
      <param name="inputElement">The &lt;EncryptedData&gt; element to replace.</param>
      <param name="decryptedData">The decrypted data to replace <paramref name="inputElement" /> with.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="inputElement" /> parameter is null.-or-The value of the <paramref name="decryptedData" /> parameter is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)">
      <summary>Replaces the specified element with the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</summary>
      <param name="inputElement">The element to replace with an &lt;EncryptedData&gt; element.</param>
      <param name="encryptedData">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object to replace the <paramref name="inputElement" /> parameter with.</param>
      <param name="content">true to replace only the contents of the element; false to replace the entire element.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="inputElement" /> parameter is null.-or-The value of the <paramref name="encryptedData" /> parameter is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.Resolver">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlResolver" /> object used by the Document Object Model (DOM) to resolve external XML references.</summary>
      <returns>An <see cref="T:System.Xml.XmlResolver" /> object.</returns>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant. </summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the XML encryption &lt;EncryptedKey&gt; element. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl">
      <summary>Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm. This field is constant.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptionMethod">
      <summary>Encapsulates the encryption algorithm used for XML encryption. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionMethod.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> class. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionMethod.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> class specifying an algorithm Uniform Resource Identifier (URI). </summary>
      <param name="algorithm">The Uniform Resource Identifier (URI) that describes the algorithm represented by an instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> class. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionMethod.GetXml">
      <summary>Returns an <see cref="T:System.Xml.XmlElement" /> object that encapsulates an instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> class.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> object that encapsulates an instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm">
      <summary>Gets or sets a Uniform Resource Identifier (URI) that describes the algorithm to use for XML encryption. </summary>
      <returns>A Uniform Resource Identifier (URI) that describes the algorithm to use for XML encryption.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionMethod.KeySize">
      <summary>Gets or sets the algorithm key size used for XML encryption. </summary>
      <returns>The algorithm key size, in bits, used for XML encryption.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Security.Cryptography.Xml.EncryptionMethod.KeySize" /> property was set to a value that was less than 0.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(System.Xml.XmlElement)">
      <summary>Parses the specified <see cref="T:System.Xml.XmlElement" /> object and configures the internal state of the <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> object to match.</summary>
      <param name="value">An <see cref="T:System.Xml.XmlElement" /> object to parse.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The key size expressed in the <paramref name="value" /> parameter was less than 0. </exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptionProperty">
      <summary>Represents the &lt;EncryptionProperty&gt; element used in XML encryption. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> class. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionProperty.#ctor(System.Xml.XmlElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> class using an <see cref="T:System.Xml.XmlElement" /> object. </summary>
      <param name="elementProperty">An <see cref="T:System.Xml.XmlElement" /> object to use for initialization.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="elementProperty" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Xml.XmlElement.LocalName" /> property of the <paramref name="elementProperty" /> parameter is not "EncryptionProperty". -or-The <see cref="P:System.Xml.XmlElement.NamespaceURI" /> property of the <paramref name="elementProperty" /> parameter is not "http://www.w3.org/2001/04/xmlenc#".</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionProperty.GetXml">
      <summary>Returns an <see cref="T:System.Xml.XmlElement" /> object that encapsulates an instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> class.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> object that encapsulates an instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionProperty.Id">
      <summary>Gets the ID of the current <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object.</summary>
      <returns>The ID of the current <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionProperty.LoadXml(System.Xml.XmlElement)">
      <summary>Parses the input <see cref="T:System.Xml.XmlElement" /> and configures the internal state of the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object to match.</summary>
      <param name="value">An <see cref="T:System.Xml.XmlElement" /> object to parse.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Xml.XmlElement.LocalName" /> property of the <paramref name="value" /> parameter is not "EncryptionProperty". -or-The <see cref="P:System.Xml.XmlElement.NamespaceURI" /> property of the <paramref name="value" /> parameter is not "http://www.w3.org/2001/04/xmlenc#".</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionProperty.PropertyElement">
      <summary>Gets or sets an <see cref="T:System.Xml.XmlElement" /> object that represents an <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object. </summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> object that represents an <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Cryptography.Xml.EncryptionProperty.PropertyElement" /> property was set to null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Xml.XmlElement.LocalName" /> property of the value set to the <see cref="P:System.Security.Cryptography.Xml.EncryptionProperty.PropertyElement" /> property is not "EncryptionProperty". -or-The <see cref="P:System.Xml.XmlElement.NamespaceURI" /> property of the value set to the <see cref="P:System.Security.Cryptography.Xml.EncryptionProperty.PropertyElement" /> property is not "http://www.w3.org/2001/04/xmlenc#".</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionProperty.Target">
      <summary>Gets the target of the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object.</summary>
      <returns>The target of the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection">
      <summary>Represents a collection of <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> classes used in XML encryption. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add(System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>Adds an <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object to the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</summary>
      <returns>The position at which the new element is inserted.</returns>
      <param name="value">An <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object to add to the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains(System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>Determines whether the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object contains a specific <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object.</summary>
      <returns>true if the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object is found in the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object; otherwise, false. </returns>
      <param name="value">The <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object to locate in the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object to an array, starting at a particular array index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> object that is the destination of the elements copied from the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(System.Security.Cryptography.Xml.EncryptionProperty[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object to an array of <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> objects, starting at a particular array index.</summary>
      <param name="array">The one-dimensional array of <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> objects that is the destination of the elements copied from the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through an <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through an <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf(System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</summary>
      <returns>The index of <paramref name="value" /> if found in the collection; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object to locate in the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert(System.Int32,System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>Inserts an <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object into the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object at the specified position.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">An <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object to insert into the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize">
      <summary>Gets a value that indicates whether the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object has a fixed size.</summary>
      <returns>true if the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object is read-only.</summary>
      <returns>true if the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object is read-only; otherwise, false. </returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item(System.Int32)">
      <summary>Returns the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object to return.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object to return.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove(System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>Removes the first occurrence of a specific <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object from the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</summary>
      <param name="value">The <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object to remove from the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object at the specified index.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object to remove.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the <see cref="T:System.Collections.IList" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> uses an incorrect object type.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> uses an incorrect object type.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> uses an incorrect object type.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted. </param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> uses an incorrect object type.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> uses an incorrect object type.</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.IRelDecryptor">
      <summary>Defines methods that decrypt an XrML &lt;encryptedGrant&gt; element.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.IRelDecryptor.Decrypt(System.Security.Cryptography.Xml.EncryptionMethod,System.Security.Cryptography.Xml.KeyInfo,System.IO.Stream)">
      <summary>Decrypts an XrML &lt;encryptedGrant&gt; element that is contained within a <see cref="T:System.IO.Stream" /> object.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object that contains a decrypted &lt;encryptedGrant&gt; element.</returns>
      <param name="encryptionMethod">An <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> object that encapsulates the algorithm used for XML encryption.</param>
      <param name="keyInfo">A <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object that contains an asymmetric key to use for decryption.</param>
      <param name="toDecrypt">A stream object that contains an &lt;encryptedGrant&gt; element to decrypt.</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfo">
      <summary>Represents an XML digital signature or XML encryption &lt;KeyInfo&gt; element.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.AddClause(System.Security.Cryptography.Xml.KeyInfoClause)">
      <summary>Adds a <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> that represents a particular type of <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> information to the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object.</summary>
      <param name="clause">The <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object. </param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfo.Count">
      <summary>Gets the number of <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> objects contained within the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object.</summary>
      <returns>The number of <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> objects contained within the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.GetEnumerator">
      <summary>Returns an enumerator of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> objects in the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object.</summary>
      <returns>An enumerator of the subelements of <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.GetEnumerator(System.Type)">
      <summary>Returns an enumerator of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> objects of the specified type in the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object.</summary>
      <returns>An enumerator of the subelements of <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> that can be used to iterate through the collection.</returns>
      <param name="requestedObjectType">The type of object to enumerate. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.GetXml">
      <summary>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object.</summary>
      <returns>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfo.Id">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> ID.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> ID.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.LoadXml(System.Xml.XmlElement)">
      <summary>Loads a <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> state from an XML element.</summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> state. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoClause">
      <summary>Represents the abstract base class from which all implementations of <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> subelements inherit.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoClause.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoClause.GetXml">
      <summary>When overridden in a derived class, returns an XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" />.</summary>
      <returns>An XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoClause.LoadXml(System.Xml.XmlElement)">
      <summary>When overridden in a derived class, parses the input <see cref="T:System.Xml.XmlElement" /> and configures the internal state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> to match.</summary>
      <param name="element">The <see cref="T:System.Xml.XmlElement" /> that specifies the state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" />. </param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey">
      <summary>Wraps the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> class, it to be placed as a subelement of the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> class. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.#ctor(System.Security.Cryptography.Xml.EncryptedKey)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> class using an <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object.</summary>
      <param name="encryptedKey">An <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" />  object that encapsulates an encrypted key.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey">
      <summary>Gets or sets an <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object that encapsulates an encrypted key.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object that encapsulates an encrypted key.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey" /> property is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.GetXml">
      <summary>Returns an XML representation of a <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> object.</summary>
      <returns>An XML representation of a <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> object. </returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The encrypted key is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.LoadXml(System.Xml.XmlElement)">
      <summary>Parses the input <see cref="T:System.Xml.XmlElement" /> object and configures the internal state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> object to match.</summary>
      <param name="value">The <see cref="T:System.Xml.XmlElement" /> object that specifies the state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> object.</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoName">
      <summary>Represents a &lt;KeyName&gt; subelement of an XMLDSIG or XML Encryption &lt;KeyInfo&gt; element.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> class by specifying the string identifier that is the value of the &lt;KeyName&gt; element.</summary>
      <param name="keyName">The string identifier that is the value of the &lt;KeyName&gt; element.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoName.GetXml">
      <summary>Returns an XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> object.</summary>
      <returns>An XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)">
      <summary>Parses the input <see cref="T:System.Xml.XmlElement" /> object and configures the internal state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> object to match.</summary>
      <param name="value">The <see cref="T:System.Xml.XmlElement" /> object that specifies the state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoName.Value">
      <summary>Gets or sets the string identifier contained within a &lt;KeyName&gt; element.</summary>
      <returns>The string identifier that is the value of the &lt;KeyName&gt; element.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoNode">
      <summary>Handles <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> subelements that do not have specific implementations or handlers registered on the machine.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.#ctor(System.Xml.XmlElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> class with content taken from the specified <see cref="T:System.Xml.XmlElement" />.</summary>
      <param name="node">An XML element from which to take the content used to create the new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" />. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.GetXml">
      <summary>Returns an XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" />.</summary>
      <returns>An XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.LoadXml(System.Xml.XmlElement)">
      <summary>Parses the input <see cref="T:System.Xml.XmlElement" /> and configures the internal state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> to match.</summary>
      <param name="value">The <see cref="T:System.Xml.XmlElement" /> that specifies the state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" />. </param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoNode.Value">
      <summary>Gets or sets the XML content of the current <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" />.</summary>
      <returns>The XML content of the current <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod">
      <summary>References <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> objects stored at a different location when using XMLDSIG or XML encryption.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> class with the specified Uniform Resource Identifier (URI) pointing to the referenced <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object.</summary>
      <param name="strUri">The Uniform Resource Identifier (URI) of the information to be referenced by the new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" />. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> class with the specified Uniform Resource Identifier (URI) pointing to the referenced <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object and the URI that describes the type of data to retrieve.  </summary>
      <param name="strUri">The Uniform Resource Identifier (URI) of the information to be referenced by the new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" />.</param>
      <param name="typeName">The URI that describes the type of data to retrieve.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.GetXml">
      <summary>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> object.</summary>
      <returns>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.LoadXml(System.Xml.XmlElement)">
      <summary>Parses the input <see cref="T:System.Xml.XmlElement" /> object and configures the internal state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> object to match.</summary>
      <param name="value">The XML element that specifies the state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.Type">
      <summary>Gets or sets a Uniform Resource Identifier (URI) that describes the type of data to be retrieved.</summary>
      <returns>A Uniform Resource Identifier (URI) that describes the type of data to be retrieved.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.Uri">
      <summary>Gets or sets the Uniform Resource Identifier (URI) of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> object.</summary>
      <returns>The Uniform Resource Identifier (URI) of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoX509Data">
      <summary>Represents an &lt;X509Data&gt; subelement of an XMLDSIG or XML Encryption &lt;KeyInfo&gt; element.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> class from the specified ASN.1 DER encoding of an X.509v3 certificate.</summary>
      <param name="rgbCert">The ASN.1 DER encoding of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> from.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> class from the specified X.509v3 certificate.</summary>
      <param name="cert">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> from.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cert" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509IncludeOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> class from the specified X.509v3 certificate.</summary>
      <param name="cert">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> from.</param>
      <param name="includeOption">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509IncludeOption" /> values that specifies how much of the certificate chain to include.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cert" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate has only a partial certificate chain.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Adds the specified X.509v3 certificate to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="certificate" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddIssuerSerial(System.String,System.String)">
      <summary>Adds the specified issuer name and serial number pair to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</summary>
      <param name="issuerName">The issuer name portion of the pair to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object. </param>
      <param name="serialNumber">The serial number portion of the pair to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectKeyId(System.Byte[])">
      <summary>Adds the specified subject key identifier (SKI) byte array to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</summary>
      <param name="subjectKeyId">A byte array that represents the subject key identifier (SKI) to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectKeyId(System.String)">
      <summary>Adds the specified subject key identifier (SKI) string to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</summary>
      <param name="subjectKeyId">A string that represents the subject key identifier (SKI) to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectName(System.String)">
      <summary>Adds the subject name of the entity that was issued an X.509v3 certificate to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</summary>
      <param name="subjectName">The name of the entity that was issued an X.509 certificate to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object. </param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.Certificates">
      <summary>Gets a list of the X.509v3 certificates contained in the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</summary>
      <returns>A list of the X.509 certificates contained in the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.CRL">
      <summary>Gets or sets the Certificate Revocation List (CRL) contained within the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</summary>
      <returns>The Certificate Revocation List (CRL) contained within the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.GetXml">
      <summary>Returns an XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</summary>
      <returns>An XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.IssuerSerials">
      <summary>Gets a list of <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> structures that represent an issuer name and serial number pair.</summary>
      <returns>A list of <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> structures that represent an issuer name and serial number pair.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.LoadXml(System.Xml.XmlElement)">
      <summary>Parses the input <see cref="T:System.Xml.XmlElement" /> object and configures the internal state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object to match.</summary>
      <param name="element">The <see cref="T:System.Xml.XmlElement" /> object that specifies the state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="element" /> parameter does not contain an &lt;X509IssuerName&gt; node.-or-The <paramref name="element" /> parameter does not contain an &lt;X509SerialNumber&gt; node.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Create" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectKeyIds">
      <summary>Gets a list of the subject key identifiers (SKIs) contained in the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</summary>
      <returns>A list of the subject key identifiers (SKIs) contained in the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectNames">
      <summary>Gets a list of the subject names of the entities contained in the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</summary>
      <returns>A list of the subject names of the entities contained in the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyReference">
      <summary>Represents the &lt;KeyReference&gt; element used in XML encryption. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> class for XML encryption.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> class for XML encryption using the supplied Uniform Resource Identifier (URI).</summary>
      <param name="uri">A Uniform Resource Identifier (URI) that points to the encrypted key.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> class for XML encryption using the specified Uniform Resource Identifier (URI) and a <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object.</summary>
      <param name="uri">A Uniform Resource Identifier (URI) that points to the encrypted key.</param>
      <param name="transformChain">A <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object that describes transforms to do on the encrypted key.</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.Reference">
      <summary>Represents the &lt;reference&gt; element of an XML signature.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with default properties.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with a hash value of the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.Reference" />. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with the specified <see cref="T:System.Uri" />.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.Reference" />. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)">
      <summary>Adds a <see cref="T:System.Security.Cryptography.Xml.Transform" /> object to the list of transforms to be performed on the data before passing it to the digest algorithm.</summary>
      <param name="transform">The transform to be added to the list of transforms. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="transform" /> parameter is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.DigestMethod">
      <summary>Gets or sets the digest method Uniform Resource Identifier (URI) of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
      <returns>The digest method URI of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />. The default value is "http://www.w3.org/2000/09/xmldsig#sha1".</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.DigestValue">
      <summary>Gets or sets the digest value of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
      <returns>The digest value of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.GetXml">
      <summary>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
      <returns>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.Reference" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.Reference.DigestMethod" /> property is null.-or- The <see cref="P:System.Security.Cryptography.Xml.Reference.DigestValue" /> property is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.Id">
      <summary>Gets or sets the ID of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
      <returns>The ID of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />. The default is null.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)">
      <summary>Loads a <see cref="T:System.Security.Cryptography.Xml.Reference" /> state from an XML element.</summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.Reference" /> state. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="value" /> parameter does not contain any transforms.-or- The <paramref name="value" /> parameter contains an unknown transform. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.TransformChain">
      <summary>Gets the transform chain of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
      <returns>The transform chain of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.Type">
      <summary>Gets or sets the type of the object being signed.</summary>
      <returns>The type of the object being signed.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.Uri">
      <summary>Gets or sets the <see cref="T:System.Uri" /> of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
      <returns>The <see cref="T:System.Uri" /> of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.ReferenceList">
      <summary>Represents the &lt;ReferenceList&gt; element used in XML encryption. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> class. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Add(System.Object)">
      <summary>Adds a <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object to the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection.</summary>
      <returns>The position at which the new element was inserted.</returns>
      <param name="value">A <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object to add to the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> parameter is not a <see cref="T:System.Security.Cryptography.Xml.DataReference" />  object.-or-The <paramref name="value" /> parameter is not a <see cref="T:System.Security.Cryptography.Xml.KeyReference" />  object.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Clear">
      <summary>Removes all items from the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection contains a specific <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object.</summary>
      <returns>true if the <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object is found in the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection; otherwise, false. </returns>
      <param name="value">The <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object to locate in the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> object to an array, starting at a specified array index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> object that is the destination of the elements copied from the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> object. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> object.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.GetEnumerator">
      <summary>Returns an enumerator that iterates through a <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through a <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection.</summary>
      <returns>The index of <paramref name="value" /> if found in the collection; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object to locate in the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Insert(System.Int32,System.Object)">
      <summary>Inserts a <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object into the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection at the specified position.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">A <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object to insert into the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> parameter is not a <see cref="T:System.Security.Cryptography.Xml.DataReference" />  object.-or-The <paramref name="value" /> parameter is not a <see cref="T:System.Security.Cryptography.Xml.KeyReference" />  object.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> object is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> object is synchronized (thread safe); otherwise, false. </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Item(System.Int32)">
      <summary>Returns the <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object to return.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.ItemOf(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> object at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object to return.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Remove(System.Object)">
      <summary>Removes the first occurrence of a specific <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object from the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection.</summary>
      <param name="value">The <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object to remove from the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> collection.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object at the specified index.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Security.Cryptography.Xml.DataReference" /> or <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object to remove.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> object.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.RSAKeyValue">
      <summary>Represents the &lt;RSAKeyValue&gt; element of an XML signature.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.RSAKeyValue" /> class with a new randomly generated <see cref="T:System.Security.Cryptography.RSA" /> public key.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.#ctor(System.Security.Cryptography.RSA)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.RSAKeyValue" /> class with the specified <see cref="T:System.Security.Cryptography.RSA" /> public key.</summary>
      <param name="key">The instance of an implementation of <see cref="T:System.Security.Cryptography.RSA" /> that holds the public key. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.GetXml">
      <summary>Returns the XML representation of the <see cref="T:System.Security.Cryptography.RSA" /> key clause.</summary>
      <returns>The XML representation of the <see cref="T:System.Security.Cryptography.RSA" /> key clause.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.RSAKeyValue.Key">
      <summary>Gets or sets the instance of <see cref="T:System.Security.Cryptography.RSA" /> that holds the public key.</summary>
      <returns>The instance of <see cref="T:System.Security.Cryptography.RSA" /> that holds the public key.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.LoadXml(System.Xml.XmlElement)">
      <summary>Loads an <see cref="T:System.Security.Cryptography.RSA" /> key clause from an XML element.</summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.RSA" /> key clause. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="value" /> parameter is not a valid <see cref="T:System.Security.Cryptography.RSA" /> key clause XML element. </exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.Signature">
      <summary>Represents the &lt;Signature&gt; element of an XML signature.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Signature" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.AddObject(System.Security.Cryptography.Xml.DataObject)">
      <summary>Adds a <see cref="T:System.Security.Cryptography.Xml.DataObject" /> to the list of objects to be signed.</summary>
      <param name="dataObject">The <see cref="T:System.Security.Cryptography.Xml.DataObject" /> to be added to the list of objects to be signed. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.GetXml">
      <summary>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.Signature" />.</summary>
      <returns>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.Signature" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.Signature.SignedInfo" /> property is null.-or- The <see cref="P:System.Security.Cryptography.Xml.Signature.SignatureValue" /> property is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.Id">
      <summary>Gets or sets the ID of the current <see cref="T:System.Security.Cryptography.Xml.Signature" />.</summary>
      <returns>The ID of the current <see cref="T:System.Security.Cryptography.Xml.Signature" />. The default is null.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.KeyInfo">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the current <see cref="T:System.Security.Cryptography.Xml.Signature" />.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the current <see cref="T:System.Security.Cryptography.Xml.Signature" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.LoadXml(System.Xml.XmlElement)">
      <summary>Loads a <see cref="T:System.Security.Cryptography.Xml.Signature" /> state from an XML element.</summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.Signature" /> state. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="value" /> parameter does not contain a valid <see cref="P:System.Security.Cryptography.Xml.Signature.SignatureValue" />.-or- The <paramref name="value" /> parameter does not contain a valid <see cref="P:System.Security.Cryptography.Xml.Signature.SignedInfo" />. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.ObjectList">
      <summary>Gets or sets a list of objects to be signed.</summary>
      <returns>A list of objects to be signed.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.SignatureValue">
      <summary>Gets or sets the value of the digital signature.</summary>
      <returns>A byte array that contains the value of the digital signature.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.SignedInfo">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> of the current <see cref="T:System.Security.Cryptography.Xml.Signature" />.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> of the current <see cref="T:System.Security.Cryptography.Xml.Signature" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.SignedInfo">
      <summary>Contains information about the canonicalization algorithm and signature algorithm used for the XML signature.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.AddReference(System.Security.Cryptography.Xml.Reference)">
      <summary>Adds a <see cref="T:System.Security.Cryptography.Xml.Reference" /> object to the list of references to digest and sign.</summary>
      <param name="reference">The reference to add to the list of references. </param>
      <exception cref="T:System.ArgumentNullException">The reference parameter is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod">
      <summary>Gets or sets the canonicalization algorithm that is used before signing for the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</summary>
      <returns>The canonicalization algorithm used before signing for the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject">
      <summary>Gets a <see cref="T:System.Security.Cryptography.Xml.Transform" /> object used for canonicalization.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.Xml.Transform" /> object used for canonicalization.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="T:System.Security.Cryptography.Xml.Transform" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of this instance into an <see cref="T:System.Array" /> object, starting at a specified index in the array.</summary>
      <param name="array">An <see cref="T:System.Array" /> object that holds the collection's elements. </param>
      <param name="index">The beginning index in the array where the elements are copied. </param>
      <exception cref="T:System.NotSupportedException">This method is not supported. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.Count">
      <summary>Gets the number of references in the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</summary>
      <returns>The number of references in the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</returns>
      <exception cref="T:System.NotSupportedException">This property is not supported. </exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection of references.</summary>
      <returns>An enumerator that iterates through the collection of references.</returns>
      <exception cref="T:System.NotSupportedException">This method is not supported. </exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.GetXml">
      <summary>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</summary>
      <returns>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> instance.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod" /> property is null.-or- The <see cref="P:System.Security.Cryptography.Xml.SignedInfo.References" /> property is empty. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.Id">
      <summary>Gets or sets the ID of the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</summary>
      <returns>The ID of the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
      <exception cref="T:System.NotSupportedException">This property is not supported. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.IsSynchronized">
      <summary>Gets a value that indicates whether the collection is synchronized.</summary>
      <returns>true if the collection is synchronized; otherwise, false.</returns>
      <exception cref="T:System.NotSupportedException">This property is not supported. </exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.LoadXml(System.Xml.XmlElement)">
      <summary>Loads a <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> state from an XML element.</summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> state. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="value" /> parameter is not a valid <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> element.-or- The <paramref name="value" /> parameter does not contain a valid <see cref="P:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod" /> property.-or- The <paramref name="value" /> parameter does not contain a valid <see cref="P:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod" /> property.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.References">
      <summary>Gets a list of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> objects of the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</summary>
      <returns>A list of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> elements of the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.SignatureLength">
      <summary>Gets or sets the length of the signature for the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</summary>
      <returns>The length of the signature for the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod">
      <summary>Gets or sets the name of the algorithm used for signature generation and validation for the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</summary>
      <returns>The name of the algorithm used for signature generation and validation for the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.SyncRoot">
      <summary>Gets an object to use for synchronization.</summary>
      <returns>An object to use for synchronization.</returns>
      <exception cref="T:System.NotSupportedException">This property is not supported. </exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.SignedXml">
      <summary>Provides a wrapper on a core XML signature object to facilitate creating XML signatures.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class from the specified XML document.</summary>
      <param name="document">The <see cref="T:System.Xml.XmlDocument" /> object to use to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.SignedXml" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="document" /> parameter is null.-or-The <paramref name="document" /> parameter contains a null <see cref="P:System.Xml.XmlDocument.DocumentElement" /> property.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class from the specified <see cref="T:System.Xml.XmlElement" /> object.</summary>
      <param name="elem">The <see cref="T:System.Xml.XmlElement" /> object to use to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.SignedXml" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="elem" /> parameter is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)">
      <summary>Adds a <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object to the list of objects to be signed.</summary>
      <param name="dataObject">The <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object to add to the list of objects to be signed. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)">
      <summary>Adds a <see cref="T:System.Security.Cryptography.Xml.Reference" /> object to the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.</summary>
      <param name="reference">The  <see cref="T:System.Security.Cryptography.Xml.Reference" /> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature">
      <summary>Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies using the public key in the signature.</summary>
      <returns>true if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies; otherwise, false.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> property of the public key in the signature does not match the <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> property.-or- The signature description could not be created.-or The hash algorithm could not be created. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified key.</summary>
      <returns>true if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified key; otherwise, false.</returns>
      <param name="key">The implementation of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> property that holds the key to be used to verify the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="key" /> parameter is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> property of the <paramref name="key" /> parameter does not match the <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> property.-or- The signature description could not be created.-or The hash algorithm could not be created. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)">
      <summary>Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified message authentication code (MAC) algorithm.</summary>
      <returns>true if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified MAC; otherwise, false.</returns>
      <param name="macAlg">The implementation of <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that holds the MAC to be used to verify the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="macAlg" /> parameter is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> property of the specified <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object is not valid.-or- The <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property is null.-or- The cryptographic transform used to check the signature could not be created. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)">
      <summary>Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object and, optionally, whether the certificate is valid.</summary>
      <returns>true if the signature is valid; otherwise, false. -or-true if the signature and certificate are valid; otherwise, false. </returns>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object to use to verify the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property.</param>
      <param name="verifySignatureOnly">true to verify the signature only; false to verify both the signature and certificate.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="certificate" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A signature description could not be created for the <paramref name="certificate" /> parameter.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)">
      <summary>Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies using the public key in the signature.</summary>
      <returns>true if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies using the public key in the signature; otherwise, false.</returns>
      <param name="signingKey">When this method returns, contains the implementation of <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that holds the public key in the signature. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="signingKey" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> property of the public key in the signature does not match the <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> property.-or- The signature description could not be created.-or The hash algorithm could not be created. </exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature">
      <summary>Computes an XML digital signature.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> property is null.-or- The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> property is not a <see cref="T:System.Security.Cryptography.DSA" /> object or <see cref="T:System.Security.Cryptography.RSA" /> object.-or- The key could not be loaded. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)">
      <summary>Computes an XML digital signature using the specified message authentication code (MAC) algorithm.</summary>
      <param name="macAlg">A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object that holds the MAC to be used to compute the value of the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="macAlg" /> parameter is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object specified by the <paramref name="macAlg" /> parameter is not an instance of <see cref="T:System.Security.Cryptography.HMACSHA1" />.-or- The <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> property of the specified <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object is not valid.-or- The cryptographic transform used to check the signature could not be created. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.EncryptedXml">
      <summary>Gets or sets an <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object that defines the XML encryption processing rules.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object that defines the XML encryption processing rules.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)">
      <summary>Returns the <see cref="T:System.Xml.XmlElement" /> object with the specified ID from the specified <see cref="T:System.Xml.XmlDocument" /> object.</summary>
      <returns>The <see cref="T:System.Xml.XmlElement" /> object with the specified ID from the specified <see cref="T:System.Xml.XmlDocument" /> object, or null if it could not be found.</returns>
      <param name="document">The <see cref="T:System.Xml.XmlDocument" /> object to retrieve the <see cref="T:System.Xml.XmlElement" /> object from.</param>
      <param name="idValue">The ID of the <see cref="T:System.Xml.XmlElement" /> object to retrieve from the <see cref="T:System.Xml.XmlDocument" /> object.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.GetPublicKey">
      <summary>Returns the public key of a signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that contains the public key of the signature, or null if the key cannot be found.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" /> property is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.GetXml">
      <summary>Returns the XML representation of a <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</summary>
      <returns>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.Signature" /> object.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> property is null.-or- The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> property is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)">
      <summary>Loads a <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> state from an XML element.</summary>
      <param name="value">The XML element to load the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> state from. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="value" /> parameter does not contain a valid <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> property.-or- The <paramref name="value" /> parameter does not contain a valid <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> property.</exception>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.m_signature">
      <summary>Represents the <see cref="T:System.Security.Cryptography.Xml.Signature" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object. </summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName">
      <summary>Represents the name of the installed key to be used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object. </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.Resolver">
      <summary>Sets the current <see cref="T:System.Xml.XmlResolver" /> object.</summary>
      <returns>The current <see cref="T:System.Xml.XmlResolver" /> object. The defaults is a <see cref="T:System.Xml.XmlSecureResolver" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.Signature">
      <summary>Gets the <see cref="T:System.Security.Cryptography.Xml.Signature" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.Xml.Signature" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator">
      <summary>Gets a delegate that will be called to validate the format (not the cryptographic security) of an XML signature.</summary>
      <returns>true if the format is acceptable; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignatureLength">
      <summary>Gets the length of the signature for the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</summary>
      <returns>The length of the signature for the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod">
      <summary>Gets the signature method of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</summary>
      <returns>The signature method of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue">
      <summary>Gets the signature value of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</summary>
      <returns>A byte array that contains the signature value of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo">
      <summary>Gets the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SigningKey">
      <summary>Gets or sets the asymmetric algorithm key used for signing a <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</summary>
      <returns>The asymmetric algorithm key used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SigningKeyName">
      <summary>Gets or sets the name of the installed key to be used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</summary>
      <returns>The name of the installed key to be used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</returns>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for the XML mode decryption transformation. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for the base 64 transformation. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation, with comments. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures and includes comments. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.DSA" /> algorithm for XML digital signatures. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for enveloped signature transformation. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization, with comments. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url">
      <summary>Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.HMACSHA1" /> algorithm for XML digital signatures. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for the standard minimal canonicalization algorithm for XML digital signatures. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for the standard namespace for XML digital signatures. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url">
      <summary>Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.RSA" /> signature method for XML digital signatures. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url">
      <summary>Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.SHA1" /> digest method for XML digital signatures. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for the XML Path Language (XPath). This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for XSLT transformations. This field is constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl">
      <summary>Represents the Uniform Resource Identifier (URI) for the license transform algorithm used to normalize XrML licenses for signatures.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.Transform">
      <summary>Represents the abstract base class from which all &lt;Transform&gt; elements that can be used in an XML digital signature derive.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Transform" /> class.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.Algorithm">
      <summary>Gets or sets the Uniform Resource Identifier (URI) that identifies the algorithm performed by the current transform.</summary>
      <returns>The URI that identifies the algorithm performed by the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.Context">
      <summary>Gets or sets an <see cref="T:System.Xml.XmlElement" /> object that represents the document context under which the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object is running. </summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> object that represents the document context under which the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object is running.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)">
      <summary>When overridden in a derived class, returns the digest associated with a <see cref="T:System.Security.Cryptography.Xml.Transform" /> object. </summary>
      <returns>The digest associated with a <see cref="T:System.Security.Cryptography.Xml.Transform" /> object.</returns>
      <param name="hash">The <see cref="T:System.Security.Cryptography.HashAlgorithm" /> object used to create a digest.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetInnerXml">
      <summary>When overridden in a derived class, returns an XML representation of the parameters of the <see cref="T:System.Security.Cryptography.Xml.Transform" /> object that are suitable to be included as subelements of an XMLDSIG &lt;Transform&gt; element.</summary>
      <returns>A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object in an XMLDSIG &lt;Transform&gt; element.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetOutput">
      <summary>When overridden in a derived class, returns the output of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)">
      <summary>When overridden in a derived class, returns the output of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object of the specified type.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object as an object of the specified type.</returns>
      <param name="type">The type of the output to return. This must be one of the types in the <see cref="P:System.Security.Cryptography.Xml.Transform.OutputTypes" /> property. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetXml">
      <summary>Returns the XML representation of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object.</summary>
      <returns>The XML representation of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.InputTypes">
      <summary>When overridden in a derived class, gets an array of types that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object.</summary>
      <returns>An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object; you can pass only objects of one of these types to the <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>When overridden in a derived class, parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a &lt;Transform&gt; element and configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object to match the &lt;Transform&gt; element.</summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> object that specifies transform-specific content for the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)">
      <summary>When overridden in a derived class, loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object.</summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object. </param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.OutputTypes">
      <summary>When overridden in a derived class, gets an array of types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object.</summary>
      <returns>An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object; only objects of one of these types are returned from the <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces">
      <summary>Gets or sets a <see cref="T:System.Collections.Hashtable" /> object that contains the namespaces that are propagated into the signature. </summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> object that contains the namespaces that are propagated into the signature.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces" /> property was set to null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.Resolver">
      <summary>Sets the current <see cref="T:System.Xml.XmlResolver" /> object.</summary>
      <returns>The current <see cref="T:System.Xml.XmlResolver" /> object. This property defaults to an <see cref="T:System.Xml.XmlSecureResolver" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.TransformChain">
      <summary>Defines an ordered list of <see cref="T:System.Security.Cryptography.Xml.Transform" /> objects that is applied to unsigned content prior to digest calculation.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.TransformChain.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.TransformChain.Add(System.Security.Cryptography.Xml.Transform)">
      <summary>Adds a transform to the list of transforms to be applied to the unsigned content prior to digest calculation.</summary>
      <param name="transform">The transform to add to the list of transforms. </param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.TransformChain.Count">
      <summary>Gets the number of transforms in the <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object.</summary>
      <returns>The number of transforms in the <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.TransformChain.GetEnumerator">
      <summary>Returns an enumerator of the transforms in the <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object.</summary>
      <returns>An enumerator of the transforms in the <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.TransformChain.Item(System.Int32)">
      <summary>Gets the transform at the specified index in the <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object.</summary>
      <returns>The transform at the specified index in the <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object.</returns>
      <param name="index">The index into the <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> object that specifies which transform to return. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="index" /> parameter is greater than the number of transforms.</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.X509IssuerSerial">
      <summary>Represents the &lt;X509IssuerSerial&gt; element of an XML digital signature.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName">
      <summary>Gets or sets an X.509 certificate issuer's distinguished name.</summary>
      <returns>An X.509 certificate issuer's distinguished name.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber">
      <summary>Gets or sets an X.509 certificate issuer's serial number.</summary>
      <returns>An X.509 certificate issuer's serial number.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDecryptionTransform">
      <summary>Specifies the order of XML Digital Signature and XML Encryption operations when both are performed on the same document.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> class. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(System.String)">
      <summary>Adds a Uniform Resource Identifier (URI) to exclude from processing.</summary>
      <param name="uri">A Uniform Resource Identifier (URI) to exclude from processing</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="uri" /> parameter is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml">
      <summary>Gets or sets an <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object that contains information about the keys necessary to decrypt an XML document.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object that contains information about the keys necessary to decrypt an XML document.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml">
      <summary>Returns an XML representation of the parameters of an <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object that are suitable to be included as subelements of an XMLDSIG &lt;Transform&gt; element.</summary>
      <returns>A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object in an XMLDSIG &lt;Transform&gt; element.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A decryption key could not be found.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(System.Type)">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object.</returns>
      <param name="type">The type of the output to return. <see cref="T:System.Xml.XmlNodeList" /> is the only valid type for this parameter.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="type" /> parameter is not an <see cref="T:System.Xml.XmlNodeList" /> object.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes">
      <summary>Gets an array of types that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object.</summary>
      <returns>An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object; you can pass only objects of one of these types to the <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(System.Xml.XmlElement,System.String)">
      <summary>Determines whether the ID attribute of an <see cref="T:System.Xml.XmlElement" /> object matches a specified value.</summary>
      <returns>true if the ID attribute of the <paramref name="inputElement" /> parameter matches the <paramref name="idValue" /> parameter; otherwise, false. </returns>
      <param name="inputElement">An <see cref="T:System.Xml.XmlElement" /> object with an ID attribute to compare with <paramref name="idValue" />.</param>
      <param name="idValue">The value to compare with the ID attribute of <paramref name="inputElement" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a &lt;Transform&gt; element and configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object to match the &lt;Transform&gt; element.</summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> object that specifies transform-specific content for the current <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="nodeList" /> parameter is null.-or-The Uniform Resource Identifier (URI) value of an <see cref="T:System.Xml.XmlNode" /> object in <paramref name="nodeList" /> was not found.-or-The length of the URI value of an <see cref="T:System.Xml.XmlNode" /> object in <paramref name="nodeList" /> is 0. -or-The first character of the URI value of an <see cref="T:System.Xml.XmlNode" /> object in <paramref name="nodeList" /> is not '#'.  </exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)">
      <summary>When overridden in a derived class, loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object.</summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="obj" /> parameter is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes">
      <summary>Gets an array of types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object.</summary>
      <returns>An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object; only objects of one of these types are returned from the <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform">
      <summary>Represents the Base64 decoding transform as defined in Section 6.6.2 of the XMLDSIG specification.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetInnerXml">
      <summary>Returns an XML representation of the parameters of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object that are suitable to be included as subelements of an XMLDSIG &lt;Transform&gt; element.</summary>
      <returns>A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object in an XMLDSIG &lt;Transform&gt; element.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput(System.Type)">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object of type <see cref="T:System.IO.Stream" />.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object of type <see cref="T:System.IO.Stream" />.</returns>
      <param name="type">The type of the output to return. <see cref="T:System.IO.Stream" /> is the only valid type for this parameter. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="type" /> parameter is not a <see cref="T:System.IO.Stream" /> object. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigBase64Transform.InputTypes">
      <summary>Gets an array of types that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</summary>
      <returns>An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object; you can pass only objects of one of these types to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a &lt;Transform&gt; element; this method is not supported because the <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object has no inner XML elements.</summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> object to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput(System.Object)">
      <summary>Loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="obj" /> parameter is a <see cref="T:System.IO.Stream" /> and it is null. </exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigBase64Transform.OutputTypes">
      <summary>Gets an array of types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</summary>
      <returns>An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object; only objects of one of these types are returned from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform">
      <summary>Represents the C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), without comments.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> class with comments, if specified.</summary>
      <param name="includeComments">true to include comments; otherwise, false. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)">
      <summary>Returns the digest associated with an <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object. </summary>
      <returns>The digest associated with an <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</returns>
      <param name="hash">The <see cref="T:System.Security.Cryptography.HashAlgorithm" /> object used to create a digest.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetInnerXml">
      <summary>Returns an XML representation of the parameters of an <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object that are suitable to be included as subelements of an XMLDSIG &lt;Transform&gt; element.</summary>
      <returns>A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object in an XMLDSIG &lt;Transform&gt; element.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput(System.Type)">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object of type <see cref="T:System.IO.Stream" />.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object of type <see cref="T:System.IO.Stream" />.</returns>
      <param name="type">The type of the output to return. <see cref="T:System.IO.Stream" /> is the only valid type for this parameter. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="type" /> parameter is not a <see cref="T:System.IO.Stream" /> object.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigC14NTransform.InputTypes">
      <summary>Gets an array of types that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</summary>
      <returns>An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object; you can pass only objects of one of these types to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a &lt;Transform&gt; element; this method is not supported because this element has no inner XML elements.</summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> object to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput(System.Object)">
      <summary>Loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="obj" /> parameter is a <see cref="T:System.IO.Stream" /> object and it is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigC14NTransform.OutputTypes">
      <summary>Gets an array of types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</summary>
      <returns>An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object; the <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object return only objects of one of these types.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform">
      <summary>Represents the C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), with comments.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform" /> class.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform">
      <summary>Represents the enveloped signature transform for an XML digital signature as defined by the W3C.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> class with comments, if specified.</summary>
      <param name="includeComments">true to include comments; otherwise, false. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml">
      <summary>Returns an XML representation of the parameters of an <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object that are suitable to be included as subelements of an XMLDSIG &lt;Transform&gt; element.</summary>
      <returns>A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object in an XMLDSIG &lt;Transform&gt; element.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The containing XML document is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput(System.Type)">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object of type <see cref="T:System.Xml.XmlNodeList" />.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object of type <see cref="T:System.Xml.XmlNodeList" />.</returns>
      <param name="type">The type of the output to return. <see cref="T:System.Xml.XmlNodeList" /> is the only valid type for this parameter. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="type" /> parameter is not an <see cref="T:System.Xml.XmlNodeList" /> object.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes">
      <summary>Gets an array of types that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object.</summary>
      <returns>An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object; you can pass only objects of one of these types to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>Parses the specified <see cref="T:System.Xml.XmlNodeList" /> as transform-specific content of a &lt;Transform&gt; element and configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object to match the &lt;Transform&gt; element.</summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)">
      <summary>Loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object.</summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="obj" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The containing XML document is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes">
      <summary>Gets an array of types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object.</summary>
      <returns>An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object; only objects of one of these types are returned from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
      <summary>Represents the exclusive C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), without comments.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class specifying a value that determines whether to include comments. </summary>
      <param name="includeComments">true to include comments; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class specifying whether to include comments, and specifying a list of namespace prefixes. </summary>
      <param name="includeComments">true to include comments; otherwise, false.</param>
      <param name="inclusiveNamespacesPrefixList">The namespace prefixes to canonicalize using the standard canonicalization algorithm.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class specifying a list of namespace prefixes to canonicalize using the standard canonicalization algorithm. </summary>
      <param name="inclusiveNamespacesPrefixList">The namespace prefixes to canonicalize using the standard canonicalization algorithm.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)">
      <summary>Returns the digest associated with a <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</summary>
      <returns>The digest associated with a <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</returns>
      <param name="hash">The <see cref="T:System.Security.Cryptography.HashAlgorithm" /> object used to create a digest.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml">
      <summary>Returns an XML representation of the parameters of a <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object that are suitable to be included as subelements of an XMLDSIG &lt;Transform&gt; element.</summary>
      <returns>A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object in an XMLDSIG &lt;Transform&gt; element.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object as an object of the specified type.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object as an object of the specified type.</returns>
      <param name="type">The type of the output to return. This must be one of the types in the <see cref="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" /> property.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="type" /> parameter is not a <see cref="T:System.IO.Stream" /> object.-or-The <paramref name="type" /> parameter does not derive from a <see cref="T:System.IO.Stream" /> object.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList">
      <summary>Gets or sets a string that contains namespace prefixes to canonicalize using the standard canonicalization algorithm. </summary>
      <returns>A string that contains namespace prefixes to canonicalize using the standard canonicalization algorithm.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes">
      <summary>Gets an array of types that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</summary>
      <returns>An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object; you can pass only objects of one of these types to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a &lt;Transform&gt; element and configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object to match the &lt;Transform&gt; element.</summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> object that specifies transform-specific content for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)">
      <summary>When overridden in a derived class, loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="obj" /> parameter is not a <see cref="T:System.IO.Stream" /> object.-or-The <paramref name="obj" /> parameter is not an <see cref="T:System.Xml.XmlDocument" /> object.-or-The <paramref name="obj" /> parameter is not an <see cref="T:System.Xml.XmlNodeList" /> object.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes">
      <summary>Gets an array of types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</summary>
      <returns>An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object; the <see cref="Overload:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object return only objects of one of these types.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
      <summary>Represents the exclusive C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), with comments.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /> class. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /> class specifying a list of namespace prefixes to canonicalize using the standard canonicalization algorithm.</summary>
      <param name="inclusiveNamespacesPrefixList">The namespace prefixes to canonicalize using the standard canonicalization algorithm.</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform">
      <summary>Represents the XPath transform for a digital signature as defined by the W3C.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetInnerXml">
      <summary>Returns an XML representation of the parameters of a <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object that are suitable to be included as subelements of an XMLDSIG &lt;Transform&gt; element.</summary>
      <returns>A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object in an XMLDSIG &lt;Transform&gt; element.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput(System.Type)">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object of type <see cref="T:System.Xml.XmlNodeList" />.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object of type <see cref="T:System.Xml.XmlNodeList" />.</returns>
      <param name="type">The type of the output to return. <see cref="T:System.Xml.XmlNodeList" /> is the only valid type for this parameter. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="type" /> parameter is not an <see cref="T:System.Xml.XmlNodeList" /> object.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXPathTransform.InputTypes">
      <summary>Gets an array of types that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object.</summary>
      <returns>An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object; you can pass only objects of one of these types to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a &lt;Transform&gt; element and configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object to match the &lt;Transform&gt; element.</summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> object to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="nodeList" /> parameter is null.-or- The <paramref name="nodeList" /> parameter does not contain an <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> element. </exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)">
      <summary>Loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object.</summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXPathTransform.OutputTypes">
      <summary>Gets an array of types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object.</summary>
      <returns>An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object; the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> object return only objects of one of these types.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
      <summary>Represents the XSLT transform for a digital signature as defined by the W3C.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> class with comments, if specified.</summary>
      <param name="includeComments">true to include comments; otherwise, false. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetInnerXml">
      <summary>Returns an XML representation of the parameters of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object that are suitable to be included as subelements of an XMLDSIG &lt;Transform&gt; element.</summary>
      <returns>A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object in an XMLDSIG &lt;Transform&gt; element.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)">
      <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object of type <see cref="T:System.IO.Stream" />.</summary>
      <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object of type <see cref="T:System.IO.Stream" />.</returns>
      <param name="type">The type of the output to return. <see cref="T:System.IO.Stream" /> is the only valid type for this parameter. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="type" /> parameter is not a <see cref="T:System.IO.Stream" /> object.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes">
      <summary>Gets an array of types that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object.</summary>
      <returns>An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object; you can pass only objects of one of these types to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a &lt;Transform&gt; element and configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object to match the &lt;Transform&gt; element.</summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> object that encapsulates an XSLT style sheet to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object. This style sheet is applied to the document loaded by the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> method. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="nodeList" /> parameter is null.-or- The <paramref name="nodeList" /> parameter does not contain an <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object. </exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)">
      <summary>Loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object.</summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes">
      <summary>Gets an array of types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object.</summary>
      <returns>An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object; only objects of one of these types are returned from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
      <summary>Represents the license transform algorithm used to normalize XrML licenses for signatures.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> class. </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
      <summary>Gets or sets the decryptor of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</summary>
      <returns>The decryptor of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml">
      <summary>Returns an XML representation of the parameters of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object that are suitable to be included as subelements of an XMLDSIG &lt;Transform&gt; element.</summary>
      <returns>A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object in an XMLDSIG &lt;Transform&gt; element.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput">
      <summary>Returns the output of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</summary>
      <returns>The output of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
      <summary>Returns the output of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</summary>
      <returns>The output of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</returns>
      <param name="type">The type of the output to return. <see cref="T:System.Xml.XmlDocument" /> is the only valid type for this parameter.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="type" /> parameter is not an <see cref="T:System.Xml.XmlDocument" /> object.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes">
      <summary>Gets an array of types that are valid inputs to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</summary>
      <returns>An array of types that are valid inputs to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object; you can pass only objects of one of these types to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a &lt;Transform&gt; element; this method is not supported because the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object has no inner XML elements.</summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> object that encapsulates the transform to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
      <summary>Loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object. The type of the input object must be <see cref="T:System.Xml.XmlDocument" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The context was not set before this transform was invoked.-or-The &lt;issuer&gt; element was not set before this transform was invoked.-or-The &lt;license&gt; element was not set before this transform was invoked.-or-The <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /> property was not set before this transform was invoked.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes">
      <summary>Gets an array of types that are valid outputs from the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</summary>
      <returns>An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object; only objects of one of these types are returned from the <see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermission">
      <summary>Controls the ability to access encrypted data and memory. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.DataProtectionPermission" /> class with the specified permission flags. </summary>
      <param name="flag">A bitwise combination of the <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> is not a valid combination of the <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> values. </exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.DataProtectionPermission" /> class with the specified permission state. </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> is not a valid <see cref="T:System.Security.Permissions.PermissionState" /> value. </exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Copy">
      <summary>Creates and returns an identical copy of the current permission.</summary>
      <returns>A copy of the current permission.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermission.Flags">
      <summary>Gets or sets the data and memory protection flags.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> values.</returns>
      <exception cref="T:System.ArgumentException">The specified value is not a valid combination of the <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> values. </exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a permission with a specific state from an XML encoding.</summary>
      <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding used to reconstruct the permission.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> is not a valid permission element.-or- The version number of <paramref name="securityElement" /> is not supported. </exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
      <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is null if the intersection is empty.</returns>
      <param name="target">A permission to intersect with the current permission. It must be the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not null and does not specify a permission of the same type as the current permission. </exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determines whether the current permission is a subset of the specified permission.</summary>
      <returns>true if the current permission is a subset of the specified permission; otherwise, false.</returns>
      <param name="target">A permission to test for the subset relationship. This permission must be the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not null and does not specify a permission of the same type as the current permission. </exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsUnrestricted">
      <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
      <returns>true if the current permission is unrestricted; otherwise, false.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.ToXml">
      <summary>Creates an XML encoding of the permission and its current state.</summary>
      <returns>An XML encoding of the permission, including state information.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)">
      <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
      <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not null and does not specify a permission of the same type as the current permission. </exception>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionAttribute">
      <summary>Allows security actions for <see cref="T:System.Security.Permissions.DataProtectionPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.DataProtectionPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission">
      <summary>Creates and returns a new <see cref="T:System.Security.Permissions.DataProtectionPermission" />.</summary>
      <returns>A <see cref="T:System.Security.Permissions.DataProtectionPermission" /> that corresponds to the attribute.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags">
      <summary>Gets or sets the data protection permissions.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> values. The default is <see cref="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData">
      <summary>Gets or sets a value indicating whether data can be encrypted using the <see cref="T:System.Security.Cryptography.ProtectedData" /> class.</summary>
      <returns>true if data can be encrypted; otherwise, false.  </returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory">
      <summary>Gets or sets a value indicating whether memory can be encrypted using the <see cref="T:System.Security.Cryptography.ProtectedMemory" /> class.</summary>
      <returns>true if memory can be encrypted; otherwise, false.  </returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData">
      <summary>Gets or sets a value indicating whether data can be unencrypted using the <see cref="T:System.Security.Cryptography.ProtectedData" /> class.</summary>
      <returns>true if data can be unencrypted; otherwise, false.  </returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory">
      <summary>Gets or sets a value indicating whether memory can be unencrypted using the <see cref="T:System.Security.Cryptography.ProtectedMemory" /> class.</summary>
      <returns>true if memory can be unencrypted; otherwise, false.  </returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionFlags">
      <summary>Specifies the access permissions for encrypting data and memory.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags">
      <summary>No protection abilities.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectData">
      <summary>The ability to encrypt data.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectData">
      <summary>The ability to unencrypt data.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectMemory">
      <summary>The ability to encrypt memory.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectMemory">
      <summary>The ability to unencrypt memory.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.AllFlags">
      <summary>The ability to encrypt data, encrypt memory, unencrypt data, and unencrypt memory.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.ServiceModel.Routing.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Routing</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter">
      <summary>Represents a query that tests whether a message was received on an endpoint with a name that matches the specified name.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" /> class with a specified name against which to test a message.</summary>
      <param name="endpointName">The endpointName against which messages are tested</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Tests whether a message satisfies the specified endpoint name.</summary>
      <returns>true if the Message object satisfies the endpoint name specified in the filter; otherwise, false.</returns>
      <param name="message">The message object to check.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Tests whether a buffered message satisfies the specified endpoint name.</summary>
      <returns>true if the Message object satisfies the endpoint name specified in the filter; otherwise, false.</returns>
      <param name="buffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to check.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter">
      <summary>Represents a query that tests whether a message satisfies both specified <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.#ctor(System.ServiceModel.Dispatcher.MessageFilter,System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /> class sing the specified <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects.</summary>
      <param name="filter1">A <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> object.</param>
      <param name="filter2">A <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> object.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.CreateFilterTable``1">
      <summary>Creates a new <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />.</returns>
      <typeparam name="TFilterData">The type of data associated with the filter.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Tests whether a message matches both of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects specified in this filter.</summary>
      <returns>true if the message matches both message filters; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Tests whether a buffered message matches both of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects specified in this filter.</summary>
      <returns>true if the message contained in the buffer matches both message filters; otherwise, false.</returns>
      <param name="buffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.IDuplexSessionRouter">
      <summary>Defines the interface required to process messages from duplex session channels.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Initiates the asynchronous processing of the message.</summary>
      <returns>An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking <see cref="M:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)" />.</returns>
      <param name="message">The message to be processed.</param>
      <param name="callback">An asynchronous callback delegate that is invoked when the message processing has completed.</param>
      <param name="state">A user-defined state object that is passed to the callback procedure.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)">
      <summary>Finishes asynchronous execution of message processing.</summary>
      <param name="result">The asynchronous result returned by the call to <see cref="M:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.IRequestReplyRouter">
      <summary>Defines the interface required to process messages from request-reply channels.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Initiates the asynchronous processing of the message.</summary>
      <returns>An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking <see cref="M:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)" />.</returns>
      <param name="message">The message to be processed.</param>
      <param name="callback">An asynchronous callback delegate that is invoked when the message processing has completed.</param>
      <param name="state">A user-defined state object that is passed to the callback procedure.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)">
      <summary>Finishes asynchronous execution of message processing.</summary>
      <returns>The reply.</returns>
      <param name="result">The asynchronous result returned by the call to <see cref="M:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.ISimplexDatagramRouter">
      <summary>Defines the interface required for processing messages from simplex datagram.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Initiates the asynchronous processing of the message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)" />.</returns>
      <param name="message">The message to be processed.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the message processing has completed.</param>
      <param name="state">A user-defined state object that is passed to the callback procedure.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)">
      <summary>Finishes asynchronous execution of message processing.</summary>
      <param name="result">The asynchronous result returned by the call to <see cref="M:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.ISimplexSessionRouter">
      <summary>Defines the interface required to process messages from simplex session channels.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Initiates the asynchronous processing of the message.</summary>
      <returns>An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking <see cref="M:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)" />.</returns>
      <param name="message">The message to be processed.</param>
      <param name="callback">An asynchronous callback delegate that is invoked when the message processing has completed.</param>
      <param name="state">A user-defined state object that is passed to the callback procedure.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)">
      <summary>Finishes asynchronous execution of message processing.</summary>
      <param name="result">The asynchronous result returned by the call to <see cref="M:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.RoutingBehavior">
      <summary>Defines the routing behavior, which is used to configure the destination endpoints, filters and filtering options to be used during routing.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingBehavior.#ctor(System.ServiceModel.Routing.RoutingConfiguration)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Routing.RoutingBehavior" /> class.</summary>
      <param name="routingConfiguration">The routing configuration.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingBehavior.GetContractForDescription(System.ServiceModel.Description.ContractDescription)">
      <summary>Gets the contract type for the specified <see cref="T:System.ServiceModel.Description.ContractDescription" />.</summary>
      <returns>The type of the specified <see cref="T:System.ServiceModel.Description.ContractDescription" />.</returns>
      <param name="description">The contract description to get the type of.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> method to support the behavior.</summary>
      <param name="serviceDescription">The service description of the service.</param>
      <param name="serviceHostBase">The host of the service.</param>
      <param name="endpoints">The service endpoints.</param>
      <param name="bindingParameters">Custom objects to which binding elements have access.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method to support the behavior.</summary>
      <param name="serviceDescription">The service description of the service.</param>
      <param name="serviceHostBase">The host of the service.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method to support the behavior.</summary>
      <param name="serviceDescription">The service description of the service.</param>
      <param name="serviceHostBase">The host of the service.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.RoutingConfiguration">
      <summary>Defines the configuration information used by <see cref="T:System.ServiceModel.Routing.RoutingExtension" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" /> class using the specified <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> and routeOnHeadersOnly parameter.</summary>
      <param name="filterTable">The message filter table to use for this configuration.</param>
      <param name="routeOnHeadersOnly">true if the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> can only examine message headers; otherwise, false. The default is true.</param>
    </member>
    <member name="P:System.ServiceModel.Routing.RoutingConfiguration.FilterTable">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> used by this configuration.</summary>
      <returns>The message filter table.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly">
      <summary>Gets or sets a value that indicates whether the filter can examine the message body.</summary>
      <returns>true if the filter can only examine message headers; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled">
      <summary>Gets or sets a value that indicates whether messages should be processed between SOAP <see cref="T:System.ServiceModel.Channels.MessageVersion" />s. </summary>
      <returns>true if messages should be processed; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.Routing.RoutingExtension">
      <summary>Provides run-time access to the routing service to allow dynamic modification of the routing configuration.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingExtension.ApplyConfiguration(System.ServiceModel.Routing.RoutingConfiguration)">
      <summary>Applies a new <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" /> to a running instance of the routing service.</summary>
      <param name="routingConfiguration">The routing configuration to be applied.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingExtension.System#ServiceModel#IExtension{T}#Attach(System.ServiceModel.ServiceHostBase)">
      <summary>Called when the runtime attaches the extension to an instance of the <see cref="T:System.ServiceModel.ServiceHostBase" /> class. For internal use only.</summary>
      <param name="owner">The service host base.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingExtension.System#ServiceModel#IExtension{T}#Detach(System.ServiceModel.ServiceHostBase)">
      <summary>Called when the runtime detaches the extension from an instance of the <see cref="T:System.ServiceModel.ServiceHostBase" /> class. For internal use only.</summary>
      <param name="owner">The service host base.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.RoutingService">
      <summary>Defines the routing service, which is responsible for routing messages between endpoints based on filter criteria.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose"></member>
    <member name="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Initiates the asynchronous processing of the message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to be processed.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the message processing has completed.</param>
      <param name="state">A user-defined state object that is passed to the callback procedure.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)">
      <summary>Finishes asynchronous execution of message processing.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /></param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Initiates the asynchronous processing of the message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)" />.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to be processed.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the message processing has completed.</param>
      <param name="state">A user-defined state object that is passed to the callback procedure.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)">
      <summary>Finishes asynchronous execution of message processing.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> that contains the reply.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /></param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Initiates the asynchronous processing of the message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)" />.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to be processed.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the message processing has completed.</param>
      <param name="state">A user-defined state object that is passed to the callback procedure.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)">
      <summary>Finishes asynchronous execution of message processing.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Initiates the asynchronous processing of the message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to be processed.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the message processing has completed.</param>
      <param name="state">A user-defined state object that is passed to the callback procedure.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)">
      <summary>Finishes asynchronous execution of message processing.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.SoapProcessingBehavior">
      <summary>Defines the client endpoint behavior used to marshal messages between different binding types and message versions.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.SoapProcessingBehavior.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Routing.SoapProcessingBehavior" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds new binding elements to an endpoint.</summary>
      <param name="endpoint">The service endpoint to apply the binding elements to.</param>
      <param name="bindingParameters">The binding parameter collection to apply to the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Applies the specified endpoint behavior to the client.</summary>
      <param name="endpoint">The service endpoint to apply to the client.</param>
      <param name="clientRuntime">The runtime on the client.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Applies the specified endpoint behavior to the endpoint dispatcher.</summary>
      <param name="endpoint">The service endpoint to apply to the client.</param>
      <param name="endpointDispatcher">The endpoint dispatcher.</param>
    </member>
    <member name="P:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages">
      <summary>Gets or sets a value that indicates whether messages should be processed.</summary>
      <returns>true if messages should be marshaled; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.ServiceModel.Routing.SoapProcessingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Validates the service endpoint.</summary>
      <param name="endpoint">The service endpoint to validate.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection">
      <summary>Represents a configuration element that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)">
      <summary>Adds a new <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" /> to the collection.</summary>
      <param name="element">The backup endpoint element to be added.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement">
      <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>A new configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Gets the element key for the specified configuration element.</summary>
      <returns>The key for the specified configuration element.</returns>
      <param name="element">The configuration element to return the key for.</param>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name">
      <summary>Gets or sets the name used to identify this collection of elements in the configuration file.</summary>
      <returns>The name of the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)">
      <summary>Removes the first occurrence of <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" /> from the collection.</summary>
      <param name="element">The backup element to remove from the collection.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement">
      <summary>Represents a configuration element that defines a backup endpoint element.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.BackupEndpointElement.EndpointName">
      <summary>Gets or sets the name used to identify this endpoint in the configuration file.</summary>
      <returns>The name.</returns>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.BackupListCollection">
      <summary>Represents the configuration element that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.BackupListCollection" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)">
      <summary>Adds a new <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" /> to the collection.</summary>
      <param name="element">The backup endpoint to be added.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement">
      <summary>Creates a new <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />.</summary>
      <returns>A new configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupListCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Gets the element key for the specified configuration element.</summary>
      <returns>The key for the specified configuration element.</returns>
      <param name="element">The configuration element to return the key for.</param>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.BackupListCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" /> with the specified index.</summary>
      <returns>A backup endpoint that matches the specified key.</returns>
      <param name="name">The key of the element to be accessed.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" /> from the collection.</summary>
      <param name="element">The backup endpoint from the collection.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.FilterElement">
      <summary>Represents a configuration element that defines a filter element. This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType">
      <summary>Gets or sets the fully-qualified type name of the custom type to be used as a filter.</summary>
      <returns>The fully-qualified type.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1">
      <summary>Gets or sets the filter1 data of this configuration element. This value is only used when <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> is set to And.</summary>
      <returns>The filter1 value of this element.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2">
      <summary>Gets or sets the filter2 data of this configuration element. This value is only used when <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> is set to AND.</summary>
      <returns>The filter2 value of this element.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData">
      <summary>Gets or sets the filter data of this configuration element.</summary>
      <returns>The filter data of this element.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Routing.Configuration.FilterType" /> of this configuration element.</summary>
      <returns>The filter type of this element.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterElement.Name">
      <summary>Gets or sets the name of this configuration element.</summary>
      <returns>The unique name of this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.FilterElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(System.ServiceModel.Routing.Configuration.FilterElement)">
      <summary>Adds a new <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" /> to the collection.</summary>
      <param name="element">The filter element to add.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement">
      <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>A new configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Returns the key of the specified <see cref="T:System.Configuration.ConfigurationElement" /> element within the collection.</summary>
      <returns>The key for the specified configuration element.</returns>
      <param name="element">The configuration element to return the key for.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <summary>Gets a value that indicates whether the element can be removed.</summary>
      <returns>true if the element can be removed; otherwise, false.</returns>
      <param name="element">The configuration element to check for removability.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the element is read-only.</summary>
      <returns>true if the element is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)">
      <summary>Gets an element from the collection with a specified index.</summary>
      <returns>The element in the collection that has the specified index.</returns>
      <param name="index">The index of the element to be retrieved from the collection.</param>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)">
      <summary>Gets an element from the collection with a specified key.</summary>
      <returns>The element in the collection that matches the specified key.</returns>
      <param name="name">The key of the element to be retrieved from the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(System.ServiceModel.Routing.Configuration.FilterElement)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" /> from the collection.</summary>
      <param name="element">The element to be removed from the collection.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.FilterTableCollection">
      <summary>Represents the configuration element that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)">
      <summary>Adds a new <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" /> to the collection.</summary>
      <param name="element">The filter table entry to be added.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement">
      <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>A new configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Gets the element key for the specified configuration element.</summary>
      <returns>The key for the specified configuration element.</returns>
      <param name="element">The configuration element to return the key for.</param>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" /> with the specified index.</summary>
      <returns>A filter table entry that matches the specified key.</returns>
      <param name="name">The key of the element to be accessed.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" /> from the collection.</summary>
      <param name="element">The filter table entry to remove from the collection.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection">
      <summary>Represents the configuration element that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)">
      <summary>Adds a new <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" /> to the collection.</summary>
      <param name="element">The filter table entry to be added.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement">
      <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>A new configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Gets the element key for the specified configuration element.</summary>
      <returns>The key for the specified configuration element.</returns>
      <param name="element">The configuration element to return the key for.</param>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Name">
      <summary>Gets or sets the name of this configuration element.</summary>
      <returns>The unique name of this configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" /> from the collection.</summary>
      <param name="element">The filter table entry to remove from the collection.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement">
      <summary>Represents a configuration element that defines a filter table entry element. This element contains the association between filters, endpoints and backup endpoints and is used to determine which filter is used to route the message.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.BackupList">
      <summary>Gets or sets a value that specifies a reference to a backup endpoints element.</summary>
      <returns>A reference to a backup endpoints element.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName">
      <summary>Gets or sets a value that specifies a reference to a client endpoint that sends messages if the associated message filter matches the message.</summary>
      <returns>A key to a client endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.FilterName">
      <summary>Gets or sets a value that specifies a reference to the filter element.</summary>
      <returns>A key to the filter element.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.Priority">
      <summary>Gets or sets a value that specifies the priority of this entry.</summary>
      <returns>The priority of this entry. The default value is 0.</returns>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.FilterType">
      <summary>Specifies the type of filter to use when routing messages.</summary>
    </member>
    <member name="F:System.ServiceModel.Routing.Configuration.FilterType.Action">
      <summary>Use <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> to filter on an action.</summary>
    </member>
    <member name="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress">
      <summary>Use <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> with <see cref="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" /> set to false to filter on the address.</summary>
    </member>
    <member name="F:System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress">
      <summary>Use <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> with <see cref="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" /> set to false to filter on the address using longest prefix matching.</summary>
    </member>
    <member name="F:System.ServiceModel.Routing.Configuration.FilterType.And">
      <summary>Use <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /> to filter on two message filters, ANDed together.</summary>
    </member>
    <member name="F:System.ServiceModel.Routing.Configuration.FilterType.Custom">
      <summary>Use a user-defined filter.</summary>
    </member>
    <member name="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointName">
      <summary>Use the <see cref="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" /> to filter on the name of the service endpoint.</summary>
    </member>
    <member name="F:System.ServiceModel.Routing.Configuration.FilterType.MatchAll">
      <summary>Use the <see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" /> to match all messages.</summary>
    </member>
    <member name="F:System.ServiceModel.Routing.Configuration.FilterType.XPath">
      <summary>Use the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> to filter on an XPath expression.</summary>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.NamespaceElement">
      <summary>Represents a configuration element that defines the namespace element. This contains namespaces to namespace prefix mappings that can then be used in XPath filters.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Namespace">
      <summary>Gets or sets the namespace for this configuration element.</summary>
      <returns>The namespace of this element.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Prefix">
      <summary>Gets or sets the namespace prefix for this configuration element.</summary>
      <returns>The namespace prefix of this element.</returns>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Routing.Configuration.NamespaceElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Add(System.ServiceModel.Routing.Configuration.NamespaceElement)">
      <summary>Adds a new <see cref="T:System.ServiceModel.Routing.Configuration.NamespaceElement" /> to the collection.</summary>
      <param name="element">The namespace element to add.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement">
      <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>A new configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Returns the key of the specified namespace element.</summary>
      <returns>The key for the specified configuration element.</returns>
      <param name="element">The configuration element to return the key for.</param>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.Int32)">
      <summary>Gets an element from the collection with a specified index.</summary>
      <returns>The namespace element in the collection that has the specified index.</returns>
      <param name="index">The index of the element to be retrieved from the collection.</param>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.String)">
      <summary>Gets an element from the collection with a specified key.</summary>
      <returns>The namespace element in the collection that matches the specified key.</returns>
      <param name="name">The key of the element to be retrieved from the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Remove(System.ServiceModel.Routing.Configuration.NamespaceElement)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.ServiceModel.Routing.Configuration.NamespaceElement" /> from the collection.</summary>
      <param name="element">The namespace element to be removed.</param>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement">
      <summary>Represents a configuration element that contains sub-elements that specify the routing behavior.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType">
      <summary>Gets the type of behavior.</summary>
      <returns>The behavior type.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName">
      <summary>Gets or sets the name of the filter table used by this routing service for routing messages.</summary>
      <returns>The name of the filter table.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly">
      <summary>Gets or sets a value that indicates whether the filter is allowed to access only the message headers or the message headers and message body.</summary>
      <returns>true if the filter can only access header values; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled">
      <summary>Gets or sets a value that indicates whether SOAP processing should occur.</summary>
      <returns>true if messages should be marshaled; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.RoutingSection">
      <summary>Represents a collection of elements that are used to configure routing.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.RoutingSection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.RoutingSection.BackupLists">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" /> objects.</summary>
      <returns>A collection that defines the configuration section that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" /> objects.</returns>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.RoutingSection.CreateFilterTable(System.String)">
      <summary>Creates a filter table using the specified name.</summary>
      <returns>A filter table with the specified name.</returns>
      <param name="name">The name of the filter table to create.</param>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.RoutingSection.Filters">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" /> objects.</summary>
      <returns>A collection that defines the configuration section that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.RoutingSection.FilterTables">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" /> objects.</summary>
      <returns>A collection that defines the configuration section that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.RoutingSection.NamespaceTable">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.NamespaceElement" /> objects.</summary>
      <returns>A collection that defines the configuration section that contains a collection of <see cref="T:System.ServiceModel.Routing.Configuration.NamespaceElement" /> objects.</returns>
    </member>
    <member name="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement">
      <summary>Represents a configuration element that defines the SOAP processing endpoint behavior.</summary>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.BehaviorType">
      <summary>Gets the type of the behavior.</summary>
      <returns>The type of the behavior.</returns>
    </member>
    <member name="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.CreateBehavior">
      <summary>Creates a new SOAP processing behavior element based on the current configuration settings.</summary>
      <returns>The behavior.</returns>
    </member>
    <member name="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.ProcessMessages">
      <summary>Gets or sets a value that indicates whether messages should be marshaled between SOAP message versions.</summary>
      <returns>true if messages should be marshaled; otherwise, false. The default is true.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.ServiceModel.Discovery.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Discovery</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.Discovery.AnnouncementClient">
      <summary>Used by services to send discovery announcement messages. Clients can use the discovery mechanism, specifically the corresponding <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> class to listen and act on the announcement messages. An announcement message contains information about the service such as its fully-qualified contract name, any scopes that the service is operating in as well as any custom metadata the service wants to send. </summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementClient" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor(System.ServiceModel.Discovery.AnnouncementEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementClient" /> class with the specified <see cref="T:System.ServiceModel.Discovery.AnnouncementEndpoint" />.</summary>
      <param name="announcementEndpoint">The announcement endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementClient" /> class with the specified endpoint configuration.</summary>
      <param name="endpointConfigurationName">The name of the endpoint configuration to use.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOffline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <summary>Causes an offline announcement message (Bye) to be sent with the specified endpoint discovery metadata.</summary>
      <param name="discoveryMetadata">The endpoint discovery metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <summary>Causes an offline announcement message (Bye) to be sent asynchronously with the specified endpoint discovery metadata.</summary>
      <param name="discoveryMetadata">The endpoint discovery metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.Object)">
      <summary>Causes an offline announcement message (Bye) to be sent asynchronously with the specified endpoint discovery metadata and user-defined state.</summary>
      <param name="discoveryMetadata">The endpoint discovery metadata.</param>
      <param name="userState">The user-defined state data.</param>
    </member>
    <member name="E:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineCompleted">
      <summary>Occurs when an asynchronous offline announcement (Bye) completes.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <summary>Causes an online announcement message (Hello) to be sent asynchronously.</summary>
      <param name="discoveryMetadata">The endpoint discovery metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <summary>Causes an online announcement (Hello) message to be sent asynchronously with the specified endpoint discovery metadata.</summary>
      <param name="discoveryMetadata">The endpoint discovery metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.Object)">
      <summary>Causes an online announcement (Hello) message to be sent asynchronously with the specified endpoint discovery metadata and user-defined state.</summary>
      <param name="discoveryMetadata">The endpoint discovery metadata.</param>
      <param name="userState">The user-defined state data.</param>
    </member>
    <member name="E:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineCompleted">
      <summary>Occurs when an asynchronous online announcement (Hello) completes.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.BeginAnnounceOffline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <summary>Causes an offline announcement (Bye) message to be sent asynchronously with the specified endpoint discovery metadata and user-defined state. The specified <see cref="T:System.AsyncCallback" /> is called when the operation completes.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> instance.</returns>
      <param name="discoveryMetadata">The endpoint discovery metadata.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.BeginAnnounceOnline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <summary>Causes an online announcement (Hello) message to be sent asynchronously with the specified endpoint discovery metadata and user-defined state. The specified <see cref="T:System.AsyncCallback" /> is called when the operation completes.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> instance.</returns>
      <param name="discoveryMetadata">The endpoint discovery metadata.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.AnnouncementClient.ChannelFactory">
      <summary>Gets the channel factory associated with the <see cref="T:System.ServiceModel.Discovery.AnnouncementClient" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.ChannelFactory" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.AnnouncementClient.ClientCredentials">
      <summary>Gets the client credentials associated with the <see cref="T:System.ServiceModel.Discovery.AnnouncementClient" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.Close">
      <summary>Closes the <see cref="T:System.ServiceModel.Discovery.AnnouncementClient" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.EndAnnounceOffline(System.IAsyncResult)">
      <summary>Waits for a pending asynchronous offline announcement to complete.</summary>
      <param name="result">A reference to the pending asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.EndAnnounceOnline(System.IAsyncResult)">
      <summary>Waits for a pending asynchronous online announcement to complete.</summary>
      <param name="result">A reference to the pending asynchronous operation.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.AnnouncementClient.Endpoint">
      <summary>Gets the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> associated with the <see cref="T:System.ServiceModel.Discovery.AnnouncementClient" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.AnnouncementClient.InnerChannel">
      <summary>Gets the inner channel associated with the <see cref="T:System.ServiceModel.Discovery.AnnouncementClient" />.</summary>
      <returns>An <see cref="T:System.ServiceModel.IClientChannel" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.AnnouncementClient.MessageSequenceGenerator">
      <summary>Gets or sets the message sequence generator associated with the <see cref="T:System.ServiceModel.Discovery.AnnouncementClient" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.Open">
      <summary>Opens the <see cref="T:System.ServiceModel.Discovery.AnnouncementClient" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#IDisposable#Dispose"></member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Abort"></member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close"></member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)"></member>
    <member name="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Closed"></member>
    <member name="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Closing"></member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)"></member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)"></member>
    <member name="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Faulted"></member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open"></member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)"></member>
    <member name="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Opened"></member>
    <member name="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Opening"></member>
    <member name="P:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#State"></member>
    <member name="T:System.ServiceModel.Discovery.AnnouncementEndpoint">
      <summary>A standard endpoint that is used by services to send announcement messages. </summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementEndpoint" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementEndpoint" /> class with the specified binding and address.</summary>
      <param name="binding">The binding.</param>
      <param name="address">The address.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementEndpoint" /> class that supports the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" />.</summary>
      <param name="discoveryVersion">The discovery version to use.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementEndpoint" /> class that supports the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> with the specified binding and address.</summary>
      <param name="discoveryVersion">The discovery version to use.</param>
      <param name="binding">The binding to use.</param>
      <param name="address">The address of the endpoint.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.AnnouncementEndpoint.DiscoveryVersion">
      <summary>Gets the discovery version this announcement endpoint supports.</summary>
      <returns>A  <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.AnnouncementEndpoint.MaxAnnouncementDelay">
      <summary>Gets or sets the maximum announcement delay.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> instance that contains the maximum announcement delay.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.AnnouncementEventArgs">
      <summary>Used to pass announcement event arguments.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.AnnouncementEventArgs.EndpointDiscoveryMetadata">
      <summary>Gets the service metadata sent by the service as part of its announcement message from this <see cref="T:System.ServiceModel.Discovery.AnnouncementEventArgs" /> instance.</summary>
      <returns>The discoverable service metadata.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.AnnouncementEventArgs.MessageSequence">
      <summary>Gets the discovery message sequence from this <see cref="T:System.ServiceModel.Discovery.AnnouncementEventArgs" /> instance.</summary>
      <returns>The discovery message sequence.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.AnnouncementService">
      <summary>A self-hosted implementation of the announcement service. </summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementService.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> class with the specified length of the duplicate message history.</summary>
      <param name="duplicateMessageHistoryLength">The maximum number of message hashes used by the transport for identifying duplicate messages. The default value is 0.</param>
    </member>
    <member name="E:System.ServiceModel.Discovery.AnnouncementService.OfflineAnnouncementReceived">
      <summary>Occurs when an offline announcement (Bye) message is received,</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOfflineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <summary>Starts the processing of incoming offline announcement (Bye) messages.</summary>
      <returns>The status of the pending asynchronous request.</returns>
      <param name="messageSequence">The position of this message in the sequence for the current notification.</param>
      <param name="endpointDiscoveryMetadata">An object that provides endpoint metadata, for example scopes, listen URI, contract names, and endpoint address.</param>
      <param name="callback">The method to call when the asynchronous operation is complete.</param>
      <param name="state">Infrastructure-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <summary>Starts the processing of incoming online announcement (Hello) messages.</summary>
      <returns>The status of the pending asynchronous request.</returns>
      <param name="messageSequence">The position of this message in the sequence for the current notification.</param>
      <param name="endpointDiscoveryMetadata">An object that provides endpoint metadata, for example scopes, listen URI, contract names, and endpoint address.</param>
      <param name="callback">The method to call when the asynchronous operation is complete.</param>
      <param name="state">Infrastructure-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementService.OnEndOfflineAnnouncement(System.IAsyncResult)">
      <summary>Users that inherit from <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> to implement a custom announcement listener service must override this method and begin to process incoming offline announcement (Bye) messages here.</summary>
      <param name="result">An asynchronous result returned by the corresponding <see cref="M:System.ServiceModel.Discovery.DiscoveryProxyBase.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.AnnouncementMessage,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.AnnouncementService.OnEndOnlineAnnouncement(System.IAsyncResult)">
      <summary>Users that inherit from <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> to implement a custom announcement listener service must override this method and begin to process incoming offline announcement (Bye) messages here.</summary>
      <param name="result">An asynchronous result returned by the corresponding <see cref="M:System.ServiceModel.Discovery.DiscoveryProxyBase.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.AnnouncementMessage,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="E:System.ServiceModel.Discovery.AnnouncementService.OnlineAnnouncementReceived">
      <summary>Occurs when an online announcement (Hello) is received.</summary>
    </member>
    <member name="T:System.ServiceModel.Discovery.DiscoveryClient">
      <summary>Allows you to discover available services. </summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryClient" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.ServiceModel.Discovery.DiscoveryEndpoint)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryClient" /> class.</summary>
      <param name="discoveryEndpoint">The discovery endpoint to use when sending discovery messages.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryClient" /> class with the specified endpoint configuration.</summary>
      <param name="endpointConfigurationName">The endpoint configuration name to use.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.CancelAsync(System.Object)">
      <summary>Cancels a pending asynchronous operation.</summary>
      <param name="userState">A user specified state object that is passed to the <see cref="M:System.ServiceModel.Discovery.DiscoveryClient.FindAsync" /> method or one of the <see cref="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync" /> methods. It identifies the pending asynchronous operation to cancel.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryClient.ChannelFactory">
      <summary>Gets the channel factory for the <see cref="T:System.ServiceModel.Discovery.DiscoveryClient" />.</summary>
      <returns>A channel factory.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryClient.ClientCredentials">
      <summary>Gets the client credentials for the <see cref="T:System.ServiceModel.Discovery.DiscoveryClient" />.</summary>
      <returns>The client credentials for the <see cref="T:System.ServiceModel.Discovery.DiscoveryClient" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.Close">
      <summary>Closes the discovery client.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryClient.Endpoint">
      <summary>Gets the endpoint used to send discovery messages.</summary>
      <returns>The endpoint used to send discovery messages.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.Find(System.ServiceModel.Discovery.FindCriteria)">
      <summary>Sends a request to find services that match the specified criteria.</summary>
      <returns>The discoverable metadata of the matching service endpoints.</returns>
      <param name="criteria">The criteria for finding services.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria)">
      <summary>Begins an asynchronous find operation with the specified criteria.</summary>
      <param name="criteria">The criteria for finding services.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria,System.Object)">
      <summary>Begins an asynchronous find operation with the specified criteria and user defined state object.</summary>
      <param name="criteria">The criteria for finding services.</param>
      <param name="userState">A user specified object to identify the asynchronous find operation.</param>
    </member>
    <member name="E:System.ServiceModel.Discovery.DiscoveryClient.FindCompleted">
      <summary>Occurs when the entire find operation completes.</summary>
    </member>
    <member name="E:System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged">
      <summary>Occurs every time the client receives a response from a particular service. </summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryClient.InnerChannel">
      <summary>The channel used to send discovery messages.</summary>
      <returns>The channel used to send discovery messages. </returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.Open">
      <summary>Opens the <see cref="T:System.ServiceModel.Discovery.DiscoveryClient" />.</summary>
    </member>
    <member name="E:System.ServiceModel.Discovery.DiscoveryClient.ProxyAvailable">
      <summary>Occurs when a multicast suppression message is received from a discovery proxy in response to the find or resolve operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.Resolve(System.ServiceModel.Discovery.ResolveCriteria)">
      <summary>Begins an asynchronous resolve operation with the specified criteria.</summary>
      <returns>The discoverable metadata of the service endpoint at the specified address, or null if no service endpoint is found at the specified address.</returns>
      <param name="criteria">The criteria for matching a service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria)">
      <summary>Begins an asynchronous resolve operation with the specified criteria.</summary>
      <param name="criteria">The criteria for matching a service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Object)">
      <summary>Begins an asynchronous resolve operation with the specified criteria and user-defined state object.</summary>
      <param name="criteria">The criteria for matching a service endpoint.</param>
      <param name="userState">A user specified object to identify the asynchronous resolve operation.</param>
    </member>
    <member name="E:System.ServiceModel.Discovery.DiscoveryClient.ResolveCompleted">
      <summary>Occurs when an asynchronous resolve operation is completed.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#IDisposable#Dispose">
      <summary>An implementation of the <see cref="M:System.IDisposible.Dispose" /> method.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Abort"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)"></member>
    <member name="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Closed"></member>
    <member name="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Closing"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)"></member>
    <member name="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Faulted"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)"></member>
    <member name="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Opened"></member>
    <member name="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Opening"></member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#State"></member>
    <member name="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement">
      <summary>A binding element that can be added to a  client application to take advantage of the Discovery client channel. The Discovery client channel allows a  client application to access a discoverable service without knowing the endpoint address in advance. </summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" /> class with default values.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor(System.ServiceModel.Discovery.DiscoveryEndpointProvider,System.ServiceModel.Discovery.FindCriteria)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" /> class with the specified endpoint provider and service finding criteria.</summary>
      <param name="discoveryEndpointProvider">An object that gets a discovery endpoint.</param>
      <param name="findCriteria">An object that contains the information required to search for a service provider.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initializes a channel factory for producing channels of a specific type from the binding context.</summary>
      <returns>The channel factory of the specified type initialized from the binding context.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="TChannel">The type of channel factory to create.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Building a channel listener is not supported by the Discovery client channel. This method can be overridden to initialize a channel listener to accept channels of a specified type from the binding context.</summary>
      <returns>The channel listener of the specified type initialized from the context.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="TChannel">The type of channel listener to create.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the current binding can build a channel factory stack on the client.</summary>
      <returns>true if the specified channel factory stack can be built on the client; otherwise false.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="TChannel">The type of channel for which the factory is being tested.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Because building a channel listener is not supported by the Discovery client channel, this method always returns false. It may be extended to return a value that indicates whether the binding element can build a listener for a specific type of channel.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of the specified type can be built by the binding element, otherwise false.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="TChannel">The type of channel the listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.Clone">
      <summary>Creates a copy of the binding element.</summary>
      <returns>A copy of the binding element.</returns>
    </member>
    <member name="F:System.ServiceModel.Discovery.DiscoveryClientBindingElement.DiscoveryEndpointAddress">
      <summary>A static temporary address that acts as a placeholder until the actual service address is resolved. </summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryClientBindingElement.DiscoveryEndpointProvider">
      <summary>Gets the discovery endpoint provider.</summary>
      <returns>The endpoint provider.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryClientBindingElement.FindCriteria">
      <summary>Gets or sets the find criteria.</summary>
      <returns>The find criteria.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns an object of the requested type, if present in the binding stack.</summary>
      <returns>An object of the specified type if present, otherwise null.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="T">The type of object to retrieve.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Discovery.DiscoveryEndpoint">
      <summary>A standard discovery endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryEndpoint" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryEndpoint" /> class with the specified binding and endpoint address.</summary>
      <param name="binding">The binding.</param>
      <param name="endpointAddress">The endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Discovery.ServiceDiscoveryMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryEndpoint" /> class with the specified discovery version and mode.</summary>
      <param name="discoveryVersion">An enumerated value representing one of the versions of the WS-Discovery protocols.</param>
      <param name="discoveryMode">An enumerated value representing one of the modes used to send discovery messages.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Discovery.ServiceDiscoveryMode,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryEndpoint" /> class with the specified discovery version, mode, binding, and endpoint address.</summary>
      <param name="discoveryVersion">An enumerated value representing one of the versions of the WS-Discovery protocols.</param>
      <param name="discoveryMode">An enumerated value representing one of the modes used to send discovery messages.</param>
      <param name="binding">The binding elements that specify the protocols, transports, and message encoders used for communication between clients and services.</param>
      <param name="endpointAddress">The unique address of the discovery endpoint.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryMode">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.DiscoveryMode" /> for the endpoint.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Discovery.DiscoveryMode" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryVersion">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> for the endpoint.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryEndpoint.MaxResponseDelay">
      <summary>Gets or sets the maximum <see cref="T:System.Timespan" /> within which all of the ProbeMatches for a service that respond to a probe operation are sent.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> instance that contains the maximum time span within which all of the ProbeMatches for a service that respond to a probe operation are sent. </returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.DiscoveryEndpointProvider">
      <summary>Provides a discovery endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryEndpointProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryEndpointProvider" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryEndpointProvider.GetDiscoveryEndpoint">
      <summary>Gets the discovery endpoint.</summary>
      <returns>The discovery endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.DiscoveryMessageSequence">
      <summary>Represents the AppSequence header defined in the WS-Discovery protocol. </summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.CanCompareTo(System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance is comparable to the current <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</summary>
      <returns>true if the two discovery message sequences are comparable; otherwise false.</returns>
      <param name="other">The discovery message sequence to compare.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.CompareTo(System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <summary>Compares the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance with the current <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</summary>
      <returns>0 if the two discovery message sequences are equal, a negative number if the message number of <paramref name="other" /> is greater than the message number of the current discovery sequence.</returns>
      <param name="other">The discovery message sequence to compare.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals(System.Object)">
      <summary>Determines if the specified object is equal to the current <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</summary>
      <returns>true if the specified object is equal to the current discovery message sequence.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals(System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <summary>Determines if the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance is comparable to the current <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</summary>
      <returns>true if the two discovery message sequences are comparable; otherwise, false.</returns>
      <param name="other">The discovery message sequence to compare.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.GetHashCode">
      <summary>Gets a hash code for the current <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</summary>
      <returns>A hash code value.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.InstanceId">
      <summary>Gets the instance ID.</summary>
      <returns>The instance ID.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.MessageNumber">
      <summary>Gets the message number.</summary>
      <returns>The message number.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.op_Equality(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <summary>Determines if two specified instances of <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> are equal.</summary>
      <returns>true if the two discovery message sequence instances are equal; otherwise false.</returns>
      <param name="messageSequence1">A discovery message sequence.</param>
      <param name="messageSequence2">A discovery message sequence.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.op_Inequality(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <summary>Determines if two specified instances of <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> are not equal.</summary>
      <returns>true if the two discovery message sequence instances are not equal; otherwise false.</returns>
      <param name="messageSequence1">A discovery message sequence.</param>
      <param name="messageSequence2">A discovery message sequence.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.SequenceId">
      <summary>Gets the sequence ID.</summary>
      <returns>The sequence ID.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.ToString">
      <summary>Creates a string representation of the <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</summary>
      <returns>The discovery message sequence.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator">
      <summary>A helper class that creates <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor(System.Int64,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" /> class with the specified instance ID and sequence ID.</summary>
      <param name="instanceId">The instance ID.</param>
      <param name="sequenceId">The sequence ID.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.Next">
      <summary>Creates the next <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> object.</summary>
      <returns>The next <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension">
      <summary>An operation context extension used to make various configuration items available to the discovery runtime.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryMode">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" />.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryVersion">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" />.</summary>
      <returns>The discovery version.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.MaxResponseDelay">
      <summary>Gets a <see cref="T:System.TimeSpan" /> that specifies the maximum response delay.</summary>
      <returns>The maximum response delay.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.System#ServiceModel#IExtension{T}#Attach(System.ServiceModel.OperationContext)"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.System#ServiceModel#IExtension{T}#Detach(System.ServiceModel.OperationContext)"></member>
    <member name="T:System.ServiceModel.Discovery.DiscoveryProxy">
      <summary>An abstract base class used to implement a discovery proxy.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryProxy" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryProxy" /> class with the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" />.</summary>
      <param name="messageSequenceGenerator">The message sequence generator.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryProxy" /> class with the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" /> and duplicate message history length.</summary>
      <param name="messageSequenceGenerator">The message sequence generator.</param>
      <param name="duplicateMessageHistoryLength">The maximum number of message hashes used by the transport for identifying duplicate messages. The default value is 0.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.BeginShouldRedirectFind(System.ServiceModel.Discovery.FindCriteria,System.AsyncCallback,System.Object)">
      <summary>Override this method to allow the discovery proxy to send out multicast suppression messages when it receives a multicast find request.</summary>
      <returns>A reference to the pending asynchronous operation.</returns>
      <param name="resolveCriteria">The resolve criteria that describes the service to find.</param>
      <param name="callback">The callback delegate to call when the operation has completed.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.BeginShouldRedirectResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)">
      <summary>Override this method to allow the discovery proxy to send out multicast suppression messages when it receives a multicast resolve request.</summary>
      <returns>A reference to the pending asynchronous operation.</returns>
      <param name="findCriteria">The find criteria that describes the service to find.</param>
      <param name="callback">The callback delegate to call when the operation is completed.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.EndShouldRedirectFind(System.IAsyncResult,System.Collections.ObjectModel.Collection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}@)">
      <summary>Override this method to handle the completion of sending the multicast suppression message for find requests.</summary>
      <returns>true if the find operation should be redirected, otherwise false.</returns>
      <param name="result">A reference to the completed asynchronous operation.</param>
      <param name="redirectionEndpoints">A collection of endpoint discovery metadata that describes the redirection endpoints.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.EndShouldRedirectResolve(System.IAsyncResult,System.Collections.ObjectModel.Collection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}@)">
      <summary>Override this method to handle the completion of sending the multicast suppression message for resolve requests.</summary>
      <returns>true if the resolve operation should be redirected, otherwise false.</returns>
      <param name="result">A reference to the completed asynchronous operation.</param>
      <param name="redirectionEndpoints">A collection of endpoint discovery metadata that describes the redirection endpoints.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginFind(System.ServiceModel.Discovery.FindRequestContext,System.AsyncCallback,System.Object)">
      <summary>Override this method to handle a find operation.</summary>
      <returns>A reference to the pending asynchronous operation.</returns>
      <param name="findRequestContext">The find request context that describes the service to discover.</param>
      <param name="callback">The callback delegate to call when the operation is completed.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginOfflineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <summary>Override this method to handle an offline announcement message.</summary>
      <returns>A reference to the pending asynchronous operation.</returns>
      <param name="messageSequence">The discovery message sequence.</param>
      <param name="endpointDiscoveryMetadata">The endpoint discovery metadata.</param>
      <param name="callback">The callback delegate to call when the operation is completed.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <summary>Override this method to handle an online announcement message.</summary>
      <returns>A reference to the pending asynchronous operation.</returns>
      <param name="messageSequence">The discovery message sequence.</param>
      <param name="endpointDiscoveryMetadata">The endpoint discovery metadata.</param>
      <param name="callback">The callback delegate to call when the operation is completed.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)">
      <summary>Override this method to handle a resolve operation.</summary>
      <returns>A reference to the pending asynchronous operation.</returns>
      <param name="resolveCriteria">The resolve criteria that describes the service to discover.</param>
      <param name="callback">The callback delegate to call when the operation is completed.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndFind(System.IAsyncResult)">
      <summary>Override this method to handle the completion of a find operation.</summary>
      <param name="result">A reference to the completed asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndOfflineAnnouncement(System.IAsyncResult)">
      <summary>Override this method to handle the completion of an offline announcement message.</summary>
      <param name="result">A reference to the completed asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndOnlineAnnouncement(System.IAsyncResult)">
      <summary>Override this method to handle the completion of an online announcement message.</summary>
      <param name="result">A reference to the completed asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndResolve(System.IAsyncResult)">
      <summary>Override this method to handle the completion of a resolve operation.</summary>
      <returns>Endpoint discovery metadata for the resolved service.</returns>
      <param name="result">A reference to the completed asynchronous operation.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.DiscoveryService">
      <summary>An abstract base class used to implement a discovery service.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryService" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryService.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryService" /> class with the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" />.</summary>
      <param name="discoveryMessageSequenceGenerator">The discovery message sequence generator.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryService.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryService" /> class with the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" /> and duplicate message history length.</summary>
      <param name="discoveryMessageSequenceGenerator">The discovery message sequence generator.</param>
      <param name="duplicateMessageHistoryLength">The maximum number of message hashes used by the transport for identifying duplicate messages. The default value is 0.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryService.OnBeginFind(System.ServiceModel.Discovery.FindRequestContext,System.AsyncCallback,System.Object)">
      <summary>Override this method to handle a find operation.</summary>
      <returns>A reference to the pending asynchronous operation.</returns>
      <param name="findRequestContext">The find request context that describes the service to discover.</param>
      <param name="callback">The callback delegate to call when the operation is completed.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryService.OnBeginResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)">
      <summary>Override this method to handle a resolve operation.</summary>
      <returns>A reference to the pending asynchronous operation.</returns>
      <param name="resolveCriteria">The find request context that describes the service to discover.</param>
      <param name="callback">The callback delegate to call when the operation is completed.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryService.OnEndFind(System.IAsyncResult)">
      <summary>Override this method to handle the completion of a find operation.</summary>
      <param name="result">A reference to the completed asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryService.OnEndResolve(System.IAsyncResult)">
      <summary>Override this method to handle the completion of a resolve operation.</summary>
      <returns>The endpoint discovery metadata that describes the resolved service.</returns>
      <param name="result">A reference to the completed asynchronous operation.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.DiscoveryServiceExtension">
      <summary>An abstract WCF extension class for specifying a custom discovery service or for getting the published endpoints.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService">
      <summary>Override this method to return your custom <see cref="T:System.ServiceModel.Discovery.DiscoveryService" /> implementation.</summary>
      <returns>A custom discovery service implementation.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints">
      <summary>Gets a read-only collection of published endpoints.</summary>
      <returns>A read-only collection of published endpoints.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{T}#Attach(System.ServiceModel.ServiceHostBase)"></member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{T}#Detach(System.ServiceModel.ServiceHostBase)"></member>
    <member name="T:System.ServiceModel.Discovery.DiscoveryVersion">
      <summary>Specifies the version of the WS-Discovery protocol to use.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryVersion.AdhocAddress">
      <summary>Gets the address to which ad hoc discovery messages are sent.</summary>
      <returns>The discovery address.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryVersion.FromName(System.String)">
      <summary>Gets the specified discovery version.</summary>
      <returns>The discovery version.</returns>
      <param name="name">The name of the discovery version requested.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryVersion.MessageVersion">
      <summary>Gets the message version.</summary>
      <returns>The message version.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryVersion.Name">
      <summary>Gets the name of the discovery version.</summary>
      <returns>The discovery version name.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryVersion.Namespace">
      <summary>Gets the discovery version namespace.</summary>
      <returns>The discovery version namespace.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.DiscoveryVersion.ToString">
      <summary>Creates a string representation of the WS-Discovery protocol version.</summary>
      <returns>The WS-Discovery protocol version.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscovery11">
      <summary>Gets the 1.1 version of the WS-Discovery protocol. </summary>
      <returns>The 1.1 version of the WS-Discovery protocol.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscoveryApril2005">
      <summary>Gets the April 2005 version of the WS-Discovery protocol.</summary>
      <returns>The April 2005 version of the WS-Discovery protocol.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscoveryCD1">
      <summary>Gets the Committee Draft 1 version of the WS-Discovery protocol.</summary>
      <returns>The Committee Draft 1 version of the WS-Discovery protocol.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.DynamicEndpoint">
      <summary>An endpoint that uses WS-Discovery to find the endpoint address dynamically at runtime.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.DynamicEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DynamicEndpoint" /> class with the specified <see cref="T:System.ServiceModel.Description.ContractDescription" /> and <see cref="T:System.ServiceModel.Channels.Binding" />.</summary>
      <param name="contract">The contract.</param>
      <param name="binding">The binding.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.DynamicEndpoint.DiscoveryEndpointProvider">
      <summary>Gets or sets an object that provides a discovery endpoint.</summary>
      <returns>A discovery endpoint provider.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.DynamicEndpoint.FindCriteria">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Discovery.FindCriteria" /> used to search for a service.</summary>
      <returns>The find criteria.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior">
      <summary>Controls the content of the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> returned by a discovery endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.ContractTypeNames">
      <summary>Gets the contract type names associated with the endpoint.</summary>
      <returns>The contract type names associated with the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Enabled">
      <summary>Gets or sets a value that controls the discoverability of the associated endpoint.</summary>
      <returns>true if the endpoint is enabled, otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Extensions">
      <summary>Gets the extensions associated with the endpoint.</summary>
      <returns>A collection of extensions associated with the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Scopes">
      <summary>Gets the scopes associated with the endpoint.</summary>
      <returns>A collection of scopes. </returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Not implemented.</summary>
      <param name="endpoint">Not implemented.</param>
      <param name="bindingParameters">Not implemented.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Not implemented.</summary>
      <param name="endpoint">Not implemented.</param>
      <param name="clientRuntime">Not implemented.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Not implemented.</summary>
      <param name="endpoint">Not implemented.</param>
      <param name="endpointDispatcher">Not implemented.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Not implemented.</summary>
      <param name="endpoint">Not implemented.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata">
      <summary>Contains the metadata for a discoverable service.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Address">
      <summary>Gets or sets the endpoint address for the endpoint the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance describes.</summary>
      <returns>The endpoint address for the service endpoint the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance describes.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.ContractTypeNames">
      <summary>Gets a collection of contract type names implemented by the service described by the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" />.</summary>
      <returns>A collection of contract type names.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Extensions">
      <summary>Gets the extensions associated with this <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance.</summary>
      <returns>A collection of extensions.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> from a <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance.</returns>
      <param name="endpoint">A service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> class using the specified service endpoint and endpoint dispatcher.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance.</returns>
      <param name="endpoint">The endpoint.</param>
      <param name="endpointDispatcher">The endpoint dispatcher.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.ListenUris">
      <summary>Gets the listen URIs for the service described by this <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance.</summary>
      <returns>A collection of listen URIs.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Scopes">
      <summary>Gets the scopes associated with this <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance.</summary>
      <returns>A collection of absolute URIs.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Version">
      <summary>Gets or sets the version of the published <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" />.</summary>
      <returns>The version of the published <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.FindCompletedEventArgs">
      <summary>Arguments for the <see cref="E:System.ServiceModel.Discovery.DiscoveryClient.FindCompleted" /> event.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.FindCompletedEventArgs.Result">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.FindResponse" /> returned by the find operation.</summary>
      <returns>The results of the find operation.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.FindCriteria">
      <summary>Represents the criteria to use when searching for services.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.FindCriteria.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.FindCriteria" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.FindCriteria" /> class with the specified name of a contract type.</summary>
      <param name="contractType">The name of the contract type to search for. </param>
    </member>
    <member name="P:System.ServiceModel.Discovery.FindCriteria.ContractTypeNames">
      <summary>Gets the collection of contract type names to search for.</summary>
      <returns>The contract type names to search for.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria">
      <summary>Creates metadata exchange endpoint criteria to use when searching for services.</summary>
      <returns>The endpoint criteria to use to find services.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})">
      <summary>Creates an object that contains metadata exchange endpoint criteria derived from the specified collection of XML qualified names.</summary>
      <returns>The endpoint criteria to use to find services.</returns>
      <param name="contractTypeNames">A collection of enumerations that represent contract type names.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)">
      <summary>Creates an object that contains metadata exchange endpoint criteria derived from the specified contract type.</summary>
      <returns>The endpoint criteria to use to find services.</returns>
      <param name="contractType">A type of service contract.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.FindCriteria.Duration">
      <summary>Gets or sets a <see cref="T:System.Timespan" /> that specifies the find operation time-out period.</summary>
      <returns>The time-out period of the find operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.FindCriteria.Extensions">
      <summary>Gets a collection of extensions in the <see cref="T:System.ServiceModel.Discovery.FindCriteria" /> instance.</summary>
      <returns>The XML extensions.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <summary>Determines whether a set of criteria matches the service described by the specified <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance.</summary>
      <returns>true if the service matches the criteria, otherwise false.</returns>
      <param name="endpointDiscoveryMetadata">The endpoint discovery metadata that describes the service in question.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.FindCriteria.MaxResults">
      <summary>Gets or sets the maximum number of responses required from the find operation.</summary>
      <returns>The maximum number of response required from the find operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy">
      <summary>Gets or sets a URI that specifies how scopes are matched.</summary>
      <returns>The URI that specifies how scopes are matched.</returns>
    </member>
    <member name="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact">
      <summary>Specifies that scopes are matched by using a case-sensitive comparison (http://schemas.xmlsoap.org/ws/2004/10/discovery/strcmp0) as defined by the WS-Discovery Specification.</summary>
    </member>
    <member name="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap">
      <summary>Specifies that scopes are matched by using the LDAP method (http://schemas.xmlsoap.org/ws/2004/10/discovery/ldap) as defined by the WS-Discovery Specification.</summary>
    </member>
    <member name="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone">
      <summary>Specifies that scopes are ignored as defined by the WS-Discovery Specification.</summary>
    </member>
    <member name="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix">
      <summary>Specifies that scopes are matched using the prefix method (http://schemas.xmlsoap.org/ws/2004/10/discovery/rfc2396) as defined by the WS-Discovery Specification.</summary>
    </member>
    <member name="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid">
      <summary>Specifies that scopes are matched by using the UUID method (http://schemas.xmlsoap.org/ws/2004/10/discovery/uuid) as defined by the WS-Discovery Specification.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.FindCriteria.Scopes">
      <summary>Gets a collection of absolute URIs that represents scopes used to search for a service.</summary>
      <returns>A collection of absolute URIs used to search for a service.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs">
      <summary>Arguments for the <see cref="E:System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged" /> event. </summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.FindProgressChangedEventArgs.EndpointDiscoveryMetadata">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance associated with the current ongoing find operation.</summary>
      <returns>The endpoint discovery metadata.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.FindProgressChangedEventArgs.MessageSequence">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance associated with the current ongoing find operation.</summary>
      <returns>The discovery message sequence. </returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.FindRequestContext">
      <summary>Represents a find request sent by a client.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.FindRequestContext.#ctor(System.ServiceModel.Discovery.FindCriteria)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.FindRequestContext" /> class using the specified <see cref="T:System.ServiceModel.Discovery.FindCriteria" />.</summary>
      <param name="criteria">The find criteria.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.FindRequestContext.AddMatchingEndpoint(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <summary>Enables the discovery service to send results back to the client as they are received.</summary>
      <param name="matchingEndpoint">The endpoint discovery metadata to send back to the client.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.FindRequestContext.Criteria">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.FindCriteria" /> associated with the <see cref="T:System.ServiceModel.Discovery.FindRequestContext" /> sent by the client. </summary>
      <returns>The find criteria sent by the client.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.FindRequestContext.OnAddMatchingEndpoint(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <summary>Called after the user adds an endpoint to the <see cref="T:System.ServiceModel.Discovery.FindRequestContext" /> by calling <see cref="M:System.ServiceModel.Discovery.FindRequestContext.AddMatchingEndpoint(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />.</summary>
      <param name="matchingEndpoint">The endpoint discovery metadata to send back to the client.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.FindResponse">
      <summary>Represents the response from a find request.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.FindResponse.Endpoints">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> for the discoverable services that matched the find request.</summary>
      <returns>A collection of endpoint discovery metadata.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.FindResponse.GetMessageSequence(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> associated with the specified <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" />.</summary>
      <returns>The discovery message sequence.</returns>
      <param name="endpointDiscoveryMetadata">The endpoint discovery metadata</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.ResolveCompletedEventArgs">
      <summary>Arguments for the <see cref="E:System.ServiceModel.Discovery.DiscoveryClient.ResolveCompleted" /> event.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.ResolveCompletedEventArgs.Result">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.ResolveResponse" /> returned by the resolve operation.</summary>
      <returns>The results of the resolve operation.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.ResolveCriteria">
      <summary>Represents the criteria to use when resolving a service.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.ResolveCriteria.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.ResolveCriteria" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.ResolveCriteria.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.ResolveCriteria" /> class with the specified <see cref="T:System.ServiceModel.EndpointAddress" />.</summary>
      <param name="address">The endpoint address.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.ResolveCriteria.Address">
      <summary>The endpoint address of the service to resolve.</summary>
      <returns>The endpoint address.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.ResolveCriteria.Duration">
      <summary>Gets or sets a <see cref="T:System.Timespan" /> that specifies a time span within which the resolve operation must complete before timing out.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.ResolveCriteria.Extensions">
      <summary>Gets a collection of extensions in the <see cref="T:System.ServiceModel.Discovery.ResolveCriteria" /> instance.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> instance that contains the XML extensions.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.ResolveResponse">
      <summary>Represents the response from a resolve request.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.ResolveResponse.EndpointDiscoveryMetadata">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> that matched the resolve request.</summary>
      <returns>The endpoint discovery metadata.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.ResolveResponse.MessageSequence">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> associated with the <see cref="T:System.ServiceModel.Discovery.ResolveResponse" />.</summary>
      <returns>The discovery message sequence.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior">
      <summary>This class controls the discoverability of service endpoints.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.AnnouncementEndpoints">
      <summary>Gets a collection of announcement endpoints. Use this collection to specify the endpoints to use for sending announcement messages.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> instance that contains a collection of announcement endpoints.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters((System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The host for the service.</param>
      <param name="endpoints">The endpoints exposed by the service.</param>
      <param name="bindingParameters">The binding parameters to be configured to support the service behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior((System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The host for the service.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The host for the service.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.ServiceDiscoveryMode">
      <summary>Specifies the discovery mode to use.</summary>
    </member>
    <member name="F:System.ServiceModel.Discovery.ServiceDiscoveryMode.Adhoc">
      <summary>The ad hoc discovery mode.</summary>
    </member>
    <member name="F:System.ServiceModel.Discovery.ServiceDiscoveryMode.Managed">
      <summary>The managed discovery mode.</summary>
    </member>
    <member name="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint">
      <summary>A standard endpoint that is used by services to send announcement messages over a UDP binding. This endpoint inherits from <see cref="T:System.ServiceModel.Discovery.AnnouncementEndpoint" /> and similarly has a fixed contract and supports two discovery versions. In addition it has a fixed UDP binding and a default address value as specified in the WS-Discovery specifications (WS-Discovery April 2005 or WS-Discovery version 1.1). Therefore, in the simplest case you do not have to specify any of these values when you create an <see cref="T:System.ServiceModel.Discovery.AnnouncementEndpoint" /> and add it to a service.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" /> class that is configured to use the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" />.</summary>
      <param name="discoveryVersion">The version of the WS-Discovery protocol to use.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" /> that is configured to use the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> and multicast address.</summary>
      <param name="discoveryVersion">The version of the WS-Discovery protocol to use.</param>
      <param name="multicastAddress">The multicast address to use.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.Uri)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" /> that is configured to use the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> and multicast address.</summary>
      <param name="discoveryVersion">The version of the WS-Discovery protocol to use.</param>
      <param name="multicastAddress">The multicast address to use.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" /> class with the specified multicast address.</summary>
      <param name="multicastAddress">The multicast address.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.Uri)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" /> class with the specified multicast address.</summary>
      <param name="multicastAddress">The multicast address.</param>
    </member>
    <member name="F:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.DefaultIPv4MulticastAddress">
      <summary>The default UDP multicast address for IPv4.</summary>
    </member>
    <member name="F:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.DefaultIPv6MulticastAddress">
      <summary>The default UDP multicast address for IPv6.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.MulticastAddress">
      <summary>Gets or sets the endpoint’s multicast address.</summary>
      <returns>A <see cref="T:System.Uri" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.TransportSettings">
      <summary>Gets the UDP transport settings associated with the <see cref="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" /> instance.</summary>
      <returns>The UDP transport settings.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint">
      <summary>A standard endpoint that is pre-configured for discovery operations over a UDP multicast binding. This endpoint inherits from <see cref="T:System.ServiceModel.Discovery.DiscoveryEndpoint" /> and similarly has a fixed contract and supports two WS-Discovery protocol versions. In addition, it has a fixed UDP binding and a default address as specified in the WS-Discovery specifications (WS-Discovery April 2005 or WS-Discovery V1.1).</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" /> class with the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" />.</summary>
      <param name="discoveryVersion">The <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> to use.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" /> class with the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> and multicast address.</summary>
      <param name="discoveryVersion">The <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> to use.</param>
      <param name="multicastAddress">The multicast address for the UDP discovery endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.Uri)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" /> class with the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> and multicast address.</summary>
      <param name="discoveryVersion">The <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> to use.</param>
      <param name="multicastAddress">A <see cref="T:System.Uri" /> with the multicast address. </param>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" /> class with the specified multicast address.</summary>
      <param name="multicastAddress">The multicast address.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.Uri)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" /> class with the specified multicast address.</summary>
      <param name="multicastAddress">The multicast address.</param>
    </member>
    <member name="F:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.DefaultIPv4MulticastAddress">
      <summary>The default UDP multicast address for IPv4.</summary>
    </member>
    <member name="F:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.DefaultIPv6MulticastAddress">
      <summary>The default UDP multicast address for IPv6.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.MulticastAddress">
      <summary>Gets or sets the multicast address.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the multicast address.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.TransportSettings">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.UdpTransportSettings" /> instance associated with the <see cref="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" />.</summary>
      <returns>The UDP transport settings for the endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.UdpTransportSettings">
      <summary>Enables you to set UDP transport settings.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpTransportSettings.DuplicateMessageHistoryLength">
      <summary>Gets or sets a value that specifies the maximum number of message hashes used by the transport for identifying duplicate messages.</summary>
      <returns>The maximum number of message hashes to use.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size of any buffer pools used by the transport.</summary>
      <returns>The maximum buffer pool size.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxMulticastRetransmitCount">
      <summary>Gets or sets a value that specifies the maximum number of times a multicast message should be retransmitted (In addition to the first send).</summary>
      <returns>The maximum number of times a multicast message is retransmitted.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxPendingMessageCount">
      <summary>Gets or sets a value that specifies the maximum number of messages that have been received but not yet removed from the input queue for an individual channel instance.</summary>
      <returns>The number of messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size of a message that can be processed by the binding.</summary>
      <returns>The maximum size of a message.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxUnicastRetransmitCount">
      <summary>Gets or sets a value that specifies the maximum number of times a unicast message should be retransmitted (in addition to the first send).</summary>
      <returns>The maximum number of times a unicast message is retransmitted.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpTransportSettings.MulticastInterfaceId">
      <summary>Gets or sets a value that uniquely identifies the network adapter that is used when sending and receiving multicast messages.</summary>
      <returns>The network adapter identifier. </returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpTransportSettings.SocketReceiveBufferSize">
      <summary>Gets or sets the receive buffer size on the underlying WinSock socket.</summary>
      <returns>The receive buffer size. </returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.UdpTransportSettings.TimeToLive">
      <summary>Gets or sets a value that specifies the number of network segment hops that a multicast packet can traverse.</summary>
      <returns>The number of network segment hops. </returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection">
      <summary>Represents a container for <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" /> configuration elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.#ctor">
      <summary>Creates a new instance of <see cref="T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement">
      <summary>Represents a container for <see cref="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" /> configuration elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement.#ctor">
      <summary>Creates a new instance of <see cref="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement">
      <summary>Defines a configuration element for an announcement endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <summary>When called or overridden by a derived class, creates and initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementEndpoint" /> class that uses the contract description of the current Discovery protocol version.</summary>
      <returns>An announcement endpoint. </returns>
      <param name="contractDescription">Not used. </param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.DiscoveryVersion">
      <summary>Gets or sets the version of the WS-Discovery specification that the announcement endpoint supports.</summary>
      <returns>The WS-Discovery version.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.EndpointType">
      <summary>Gets the type of the announcement endpoint.</summary>
      <returns>The type of the announcement endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> into an <see cref="T:System.ServiceModel.Discovery.AnnouncementEndpoint" />.</summary>
      <param name="endpoint">The service endpoint object to convert.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.MaxAnnouncementDelay">
      <summary>Gets or sets the maximum delay a service is required to wait before sending announcement messages. </summary>
      <returns>The maximum delay.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>When called or overridden by a derived class, converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to an announcement endpoint.</summary>
      <param name="endpoint">The service endpoint to which announcement configuration settings are applied.</param>
      <param name="serviceEndpointElement">Not used.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>When called or overridden by a derived class, converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to an announcement endpoint.</summary>
      <param name="endpoint">The service endpoint to which announcement configuration settings are applied.</param>
      <param name="serviceEndpointElement">Not used.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>When called or overridden by a derived class, initializes and validates the specified instance of a <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" />.</summary>
      <param name="channelEndpointElement">The channel endpoint element to initialize and validate. </param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>When called or overridden by a derived class, initializes and validates the specified instance of a <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" />.</summary>
      <param name="serviceEndpointElement">The service endpoint element to initialize and validate. </param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.Properties">
      <summary>When called or overridden in a derived class, gets a collection of the configuration settings contained in the <see cref="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" /> instance. </summary>
      <returns>A collection of configuration settings. </returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement">
      <summary>Represents a workflow element that identifies by name the workflow service contract being searched for.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor(System.String,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" /> class using the specified contract type name and namespace name.</summary>
      <param name="name">The type name of a workflow service contract.</param>
      <param name="ns">The namespace name of the workflow service contract.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.Name">
      <summary>Gets or sets the name of the contract type.</summary>
      <returns>An alphanumeric name.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.Namespace">
      <summary>Gets or sets the namespace of the contract type.</summary>
      <returns>An alphanumeric name.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement">
      <summary>Represents a configuration element that enables a client application to automatically search for a discoverable workflow service and find its address at runtime.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Adds the criteria from the specified binding element to the current <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" />.</summary>
      <param name="bindingElement">An element that builds the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.BindingElementType">
      <summary>Gets the type of the <see cref="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" />.</summary>
      <returns>A type object.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to the current configuration element.</summary>
      <param name="from">The <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.DiscoveryEndpoint">
      <summary>Gets a <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" /> that enables a client application to automatically search for a discoverable workflow service and find its address at runtime.</summary>
      <returns>A channel endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.FindCriteria">
      <summary>Gets a <see cref="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" /> that supplies a set of criteria used by a client application to search for a discovery workflow service.</summary>
      <returns>A find criteria element.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement">
      <summary>Provides the configuration element whose settings enable a client application to automatically search for a discoverable workflow service and find its address at runtime.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.DiscoveryEndpoint">
      <summary>Gets a <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" /> that enables a client application to automatically search for a discoverable workflow service and find its address at runtime.</summary>
      <returns>A channel endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.FindCriteria">
      <summary>Gets a <see cref="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" /> that supplies a set of criteria used by a client application to search for a discovery workflow service.</summary>
      <returns>A find criteria element.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement">
      <summary>Represents a container for <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" /> configuration elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement">
      <summary>Defines a configuration element for a discovery endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <summary>When called or overridden by a derived class, creates and initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryEndpoint" /> class that uses the default Discovery protocol version and mode.</summary>
      <returns>A discovery endpoint. </returns>
      <param name="contractDescription">Not implemented.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.DiscoveryMode">
      <summary>Gets or sets the discovery mode that the discovery endpoint uses. </summary>
      <returns>The discovery mode.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.DiscoveryVersion">
      <summary>Gets or sets the version of the WS-Discovery specification that the discovery should use.</summary>
      <returns>The WS-Discovery version.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.EndpointType">
      <summary>When called or overridden by a derived class, gets the type of the discovery endpoint.</summary>
      <returns>The type of the endpoint. </returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a <see cref="T:System.ServiceModel.Discovery.DiscoveryEndpoint" /> from a given endpoint.</summary>
      <param name="endpoint">The service endpoint object to convert.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.MaxResponseDelay">
      <summary>Gets or sets the maximum amount of delay that the service can introduce between ProbeMatches while sending response to the client. </summary>
      <returns>The maximum response delay.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>When called or overridden by a derived class, applies the ConfigurationProperties on the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryEndpoint" />.</summary>
      <param name="endpoint">A service endpoint to which the discovery configuration settings are applied.</param>
      <param name="serviceEndpointElement">Not implemented. </param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>When called or overridden by a derived class, applies the ConfigurationProperties on the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryEndpoint" />.</summary>
      <param name="endpoint">A service endpoint to which the discovery configuration settings are applied.</param>
      <param name="serviceEndpointElement">Not Implemented. </param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>When called or overridden by a derived class, initializes and validates a specified instance of <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" />. </summary>
      <param name="channelEndpointElement">The channel endpoint element to initialize and validate. </param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>When called or overridden by a derived class, initializes and validates the specified instance of <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" />. </summary>
      <param name="serviceEndpointElement">The service endpoint element to initialize and validate. </param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.Properties">
      <summary>When called or overridden by a derived class, gets a collection of the configuration settings contained in the <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" /> instance. </summary>
      <returns>A collection of configuration settings. </returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter">
      <summary>Provides functionality to change a WS-Discovery protocol version to another type.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether it is possible to change the given <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to the type of this converter and using the specified context and culture information.</summary>
      <returns>true if it is possible to change the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to the type of this converter; otherwise, false.</returns>
      <param name="context">Type descriptor format information that assists in the conversion of a <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to another type.</param>
      <param name="sourceType">The <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object that is changed to the type of this converter.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether it is possible to change the given <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> to the specified type and using the specified context and culture information.</summary>
      <returns>true if it is possible to change the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to the specified type; otherwise, false.</returns>
      <param name="context">Type descriptor format information that assists in the conversion of a <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to another type.</param>
      <param name="destinationType">The type to which the <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object is changed.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to the type of this converter, using the specified context and culture information.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> that has been changed to the type of this converter.</returns>
      <param name="context">Type descriptor format information that assists in the conversion of a <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to another type.</param>
      <param name="culture">The culture information to use in the type conversion.</param>
      <param name="value">The <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to change.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> to the specified type, using the specified context and culture information.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> that has been changed to the specified type.</returns>
      <param name="context">Type descriptor format information that assists in the conversion of a <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to another type.</param>
      <param name="culture">The culture information to use in the type conversion.</param>
      <param name="value">The <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> to change.</param>
      <param name="destinationType">The type to which the <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object is being changed.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement">
      <summary>Represents a workflow configuration element that provides a collection of endpoints that each contain information to enable an application to function as a client program that can search for, find, and use a workflow service during runtime.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement">
      <summary>Represents a configuration element that provides information to enable an application to function as a client program that can search for, find, and use a workflow service during runtime.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.DiscoveryClientSettings">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" /> that contains the settings needed by an application to participate in the service discovery process as a client.</summary>
      <returns>An element that contains discovery settings required by a client application.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement">
      <summary>A configuration element that controls the discovery functionality of an endpoint. </summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.BehaviorType">
      <summary>Gets the behavior type associated with the <see cref="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" />.</summary>
      <returns>The behavior type. </returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.ContractTypeNames">
      <summary>Gets the contract type names associated with the endpoint.</summary>
      <returns>The contract type names associated with the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Enabled">
      <summary>Gets or sets a value that indicates the discoverability of this endpoint.</summary>
      <returns>true if the discoverability of this endpoint is enabled, otherwise false. </returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Extensions">
      <summary>Gets the extensions associated with the <see cref="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" />.</summary>
      <returns>The extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Scopes">
      <summary>Gets a collection of scopes for this endpoint.</summary>
      <returns>A collection of scopes associated with this endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement">
      <summary>Manages a configuration element that contains a set of criteria used by a client application to search for workflow services over a network or the Internet.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.ContractTypeNames">
      <summary>Gets a collection of configuration elements that contain the names of workflow service contract types.</summary>
      <returns>A collection of elements.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Duration">
      <summary>Gets or sets the maximum time to wait for replies from services on a network or the Internet.</summary>
      <returns>A timespan object the defines the waiting period.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Extensions">
      <summary>Gets the <see cref="T:System.ServiceModel.Configuration.XmlElementElementCollection" /> object that provide extensions for a <see cref="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" />.</summary>
      <returns>A collection of elements.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.MaxResults">
      <summary>Gets or sets the maximum number of replies to wait for, from services on a network or the Internet. </summary>
      <returns>A maximum number.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.ScopeMatchBy">
      <summary>Gets or sets a URI that designates the name and location of a service that is being searched for and against which members of the <see cref="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Scopes" /> collection are matched.</summary>
      <returns>The URI of a service application.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Scopes">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" /> objects that contain absolute URIs that are used during a find operation to locate a specific service or services.</summary>
      <returns>A collection of elements that contain URIs.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.ScopeElement">
      <summary>Represents a scope URI for an endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.ScopeElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.ScopeElement.Scope">
      <summary>Gets or sets the scope URI.</summary>
      <returns>The scope URI.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection">
      <summary>A configuration element that contains a collection of scope elements. </summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor">
      <summary>Creates a new instance of the <see cref="M:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement">
      <summary>Represents a configuration element that controls the discoverability of a service.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.AnnouncementEndpoints">
      <summary>Gets a collection of announcement endpoints.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElementCollection" /> that contains announcement endpoints.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.BehaviorType">
      <summary>Gets the type of behavior.</summary>
      <returns>The type of the behavior.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement">
      <summary>Represents a container for <see cref="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" /> configuration elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement.#ctor">
      <summary>Creates a new instance of <see cref="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement">
      <summary>Defines a configuration element for a UDP announcement endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.#ctor">
      <summary>Creates a new instance of <see cref="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <summary>When called or overridden by a derived class, creates and initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" /> class that uses the contract description of the current Discovery protocol version and mode.</summary>
      <returns>A UDP announcement endpoint.</returns>
      <param name="contractDescription">Not implemented.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.EndpointType">
      <summary>When called or overridden by a derived class, gets the type of the UDP announcement endpoint.</summary>
      <returns>The type of the UDP announcement endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> into a <see cref="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" />.</summary>
      <param name="endpoint">The service endpoint object to convert.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.MaxAnnouncementDelay">
      <summary>Gets or sets the maximum delay a service is required to wait before sending announcement messages.</summary>
      <returns>The maximum delay.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.MulticastAddress">
      <summary>Gets or sets the <see cref="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.MulticastAddress" /> property of a UDP announcement endpoint element.</summary>
      <returns>A URI address.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>When called or overridden by a derived class, converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to a UDP announcement endpoint.</summary>
      <param name="endpoint">The service endpoint to which UDP announcement configuration settings are applied.</param>
      <param name="serviceEndpointElement">Not implemented.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>When called or overridden by a derived class, converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to a UDP announcement endpoint.</summary>
      <param name="endpoint">The service endpoint to which UDP announcement configuration settings are applied.</param>
      <param name="serviceEndpointElement">Not implemented.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>When called or overridden by a derived class, initializes and validates the specified instance of a <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" />.</summary>
      <param name="channelEndpointElement">The channel endpoint element to initialize and validate.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>When called or overridden by a derived class, initializes and validates the specified instance of a <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" />.</summary>
      <param name="serviceEndpointElement">The service endpoint element to initialize and validate.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.Properties">
      <summary>When called or overridden by a derived class, gets a collection of the configuration settings contained in a <see cref="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" /> instance.</summary>
      <returns>A collection of configuration settings.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.TransportSettings">
      <summary>Gets the binding settings of a UDP transport configuration element.</summary>
      <returns>A UDP configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement">
      <summary>Represents a container for <see cref="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" /> configuration elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement">
      <summary>Defines a configuration element for a UDP discovery endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <summary>When called or overridden by a derived class, creates and initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" /> class that uses the contract description of the current Discovery protocol version and mode.</summary>
      <returns>A UDP discovery endpoint.</returns>
      <param name="contractDescription">Not implemented.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.DiscoveryMode">
      <summary>Gets or sets the discovery mode that is used by the discovery endpoint.</summary>
      <returns>The discovery mode.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.EndpointType">
      <summary>When called or overridden by a derived class, gets the type of the UDP discovery endpoint.</summary>
      <returns>The type of the discovery endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> into a <see cref="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" />.</summary>
      <param name="endpoint">The service endpoint object to convert.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.MaxResponseDelay">
      <summary>Gets or sets the maximum <see cref="T:System.Timespan" /> within which all of the ProbeMatches for a service that respond to a probe operation are sent..</summary>
      <returns>The maximum delay.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.MulticastAddress">
      <summary>Gets or sets the <see cref="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.MulticastAddress" /> property of a UDP discovery endpoint element.</summary>
      <returns>An IP address.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>When called or overridden by a derived class, converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to a UDP discovery endpoint.</summary>
      <param name="endpoint">The service endpoint to which the configuration settings are applied.</param>
      <param name="serviceEndpointElement">Not implemented.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>When called or overridden by a derived class, converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to a UDP discovery endpoint.</summary>
      <param name="endpoint">The service endpoint to which the configuration settings are applied.</param>
      <param name="serviceEndpointElement">Not implemented.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>When called or overridden by a derived class, initializes and validates the specified instance of a <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" />.</summary>
      <param name="channelEndpointElement">The channel endpoint element to initialize and validate.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>When called or overridden by a derived class, initializes and validates the specified instance of a <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" />.</summary>
      <param name="serviceEndpointElement">The service endpoint element to initialize and validate.</param>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.Properties">
      <summary>When called or overridden by a derived class, gets a collection of the configuration settings contained in the <see cref="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" /> instance.</summary>
      <returns>A collection of configuration settings.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.TransportSettings">
      <summary>Gets the binding settings of a UDP transport configuration element.</summary>
      <returns>A UDP configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement">
      <summary>Allows you to set the settings of a UDP transport. </summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.DuplicateMessageHistoryLength">
      <summary>Gets or sets the value of the <see cref="P:System.ServiceModel.Discovery.UdpTransportSettings.DuplicateMessageHistoryLength" /> property in a UDP transport configuration element.</summary>
      <returns>The maximum number of message hashes used by the transport to identify duplicate messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxBufferPoolSize">
      <summary>Gets or sets a maximum allotment of memory for the process of reading and writing pages of data into memory from the disk.</summary>
      <returns>A number that indicates the size of a buffer pool.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxMulticastRetransmitCount">
      <summary>Gets or sets the value of the <see cref="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxMulticastRetransmitCount" /> property in a UDP transport configuration element.</summary>
      <returns>The maximum number of times a multicast message can be retransmitted.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxPendingMessageCount">
      <summary>Gets or sets the value of the <see cref="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxPendingMessageCount" /> property in a UDP transport configuration element.</summary>
      <returns>The maximum number of messages that are received but not yet removed from the input queue for an individual channel instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxReceivedMessageSize">
      <summary>Gets or sets the value of the <see cref="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxReceivedMessageSize" /> property in a UDP transport configuration element.</summary>
      <returns>The maximum size for a message that can be processed by the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxUnicastRetransmitCount">
      <summary>Gets or sets the value of the <see cref="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxUnicastRetransmitCount" /> property in a UDP transport configuration element.</summary>
      <returns>The maximum number of times a unicast message can be retransmitted.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MulticastInterfaceId">
      <summary>Gets or sets the value of the <see cref="P:System.ServiceModel.Discovery.UdpTransportSettings.MulticastInterfaceId" /> property in a UDP transport configuration element.</summary>
      <returns>The network adapter that is used when sending and receiving multicast traffic on multi-honed machines.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.SocketReceiveBufferSize">
      <summary>Gets or sets the value of the <see cref="P:System.ServiceModel.Discovery.UdpTransportSettings.SocketReceiveBufferSize" /> property in a UDP transport configuration element.</summary>
      <returns>The receive buffer size on the underlying WinSock socket.</returns>
    </member>
    <member name="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.TimeToLive">
      <summary>Gets or sets the value of the <see cref="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.TimeToLive" /> property in a UDP transport configuration element.</summary>
      <returns>The number of network segment hops that a multicast packet can traverse. </returns>
    </member>
    <member name="T:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11">
      <summary>Represents the AppSequence header defined in version 1.1 of the WS-Discovery Protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11.FromDiscoveryMessageSequence(System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11" /> class from the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11" /> instance.</returns>
      <param name="discoveryMessageSequence">The discovery message sequence.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11.GetSchema">
      <summary>Gets the schema for the AppSequence header as defined in version 1.1 of the WS-Discovery protocol.</summary>
      <returns>The schema for the AppSequence header.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the schema for the AppSequence header as defined in version 1.1 of the WS-Discovery protocol and adds it to the specified schema set if the schema set does not already contain the schema.</summary>
      <returns>The XML-qualified name of the schema.</returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11.ReadXml(System.Xml.XmlReader)">
      <summary>Reads a discovery message sequence from XML.</summary>
      <param name="reader">The XML reader to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11.ToDiscoveryMessageSequence">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> class from the current <see cref="T:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11" /> instance to XML.</summary>
      <param name="writer">The XML writer to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11">
      <summary>Contains the metadata for a discoverable service based on version 1.1 of the WS-Discovery protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11.FromEndpointDiscoveryMetadata(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11" /> class with the specified <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11" /> instance.</returns>
      <param name="endpointDiscoveryMetadata">The endpoint discovery metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11.GetSchema">
      <summary>Gets the schema for endpoint discovery metadata for version 1.1 of the WS-Discovery protocol.</summary>
      <returns>The XML qualified name of the schema.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the schema for endpoint discovery metadata for version 1.1 of the WS-Discovery protocol and adds it to the specified schema set if it is not already present.</summary>
      <returns>The XML qualified name of the schema.</returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11.ReadXml(System.Xml.XmlReader)">
      <summary>Reads an <see cref="T:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11" /> instance from XML.</summary>
      <param name="reader">The XML reader to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11.ToEndpointDiscoveryMetadata">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> associated with this <see cref="T:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes a <see cref="T:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11" /> instance to XML.</summary>
      <param name="writer">The XML writer to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.Version11.FindCriteria11">
      <summary>Represents the criteria to use when searching for services using version 1.1 of the WS-Discovery protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.FindCriteria11.FromFindCriteria(System.ServiceModel.Discovery.FindCriteria)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.Version11.FindCriteria11" /> using the specified <see cref="T:System.ServiceModel.Discovery.FindCriteria" /> instance.</summary>
      <returns>A new<see cref="T:System.ServiceModel.Discovery.Version11.FindCriteria11" /> instance.</returns>
      <param name="findCriteria">The find criteria.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.FindCriteria11.GetSchema">
      <summary>Gets the find criteria schema.</summary>
      <returns>The find criteria schema.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.FindCriteria11.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the find criteria schema from the specified <see cref="T:System.Xml.Schema.XmlSchemaSet" />. </summary>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> of the schema.</returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.FindCriteria11.ReadXml(System.Xml.XmlReader)">
      <summary>Reads a <see cref="T:System.ServiceModel.Discovery.Version11.FindCriteria11" /> instance from XML.</summary>
      <param name="reader">The XML reader to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.FindCriteria11.ToFindCriteria">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.FindCriteria" /> associated with this <see cref="T:System.ServiceModel.Discovery.Version11.FindCriteria11" /> instance.</summary>
      <returns>The find criteria.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.FindCriteria11.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Discovery.Version11.FindCriteria11" /> to XML.</summary>
      <param name="writer">The XML writer to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.Version11.ResolveCriteria11">
      <summary>Represents the criteria to use when resolving a service using version 1.1 of the WS-Discovery protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.ResolveCriteria11.FromResolveCriteria(System.ServiceModel.Discovery.ResolveCriteria)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.Version11.ResolveCriteria11" /> using the specified <see cref="T:System.ServiceModel.Discovery.ResolveCriteria" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.Version11.ResolveCriteria11" /> instance.</returns>
      <param name="resolveCriteria">The resolve criteria.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.ResolveCriteria11.GetSchema">
      <summary>Gets the resolve criteria schema.</summary>
      <returns>The resolve criteria schema.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.ResolveCriteria11.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the find criteria schema from the specified <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> of the schema.</returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.ResolveCriteria11.ReadXml(System.Xml.XmlReader)">
      <summary>Reads a <see cref="T:System.ServiceModel.Discovery.Version11.ResolveCriteria11" /> instance from XML.</summary>
      <param name="reader">The XML reader to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.ResolveCriteria11.ToResolveCriteria">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.ResolveCriteria" /> associated with this <see cref="T:System.ServiceModel.Discovery.Version11.ResolveCriteria11" /> instance.</summary>
      <returns>The resolve criteria.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.Version11.ResolveCriteria11.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes a <see cref="T:System.ServiceModel.Discovery.Version11.ResolveCriteria11" /> instance to XML.</summary>
      <param name="writer">The XML writer to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005">
      <summary>Represents the AppSequence header defined in the April 2005 version of the WS-Discovery Protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005.FromDiscoveryMessageSequence(System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005" /> class from the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005" /> instance.</returns>
      <param name="discoveryMessageSequence">The discovery message sequence.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005.GetSchema">
      <summary>Gets the schema for the AppSequence header for the April 2005 version of the WS-Discovery protocol.</summary>
      <returns>The schema for the AppSequence header.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the schema for the AppSequence header for the April 2005 version of the WS-Discovery protocol and adds it to the specified schema set if the schema set does not already contain the schema.</summary>
      <returns>The XML qualified name of the schema.</returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005.ReadXml(System.Xml.XmlReader)">
      <summary>Reads a discovery message sequence from XML.</summary>
      <param name="reader">The XML reader to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005.ToDiscoveryMessageSequence">
      <summary>Initializes a new instance of the  <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> class from the <see cref="T:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005" /> to XML.</summary>
      <param name="writer">The XML writer to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005">
      <summary>Contains the metadata for a discoverable service based on the April 2005 version of the WS-Discovery protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005.FromEndpointDiscoveryMetadata(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005" /> with the specified <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005" /> instance.</returns>
      <param name="endpointDiscoveryMetadata">The endpoint discovery metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005.GetSchema">
      <summary>Gets the schema for endpoint discovery metadata for the April 2005 version of the WS-Discovery protocol.</summary>
      <returns>A <see cref="T:System.Xml.Schema.XmlSchema" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the schema for endpoint discovery metadata for the April 2005 version of the WS-Discovery protocol and adds it to the specified schema set if it is not already present.</summary>
      <returns>The XML qualified name of the schema.</returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005.ReadXml(System.Xml.XmlReader)">
      <summary>Reads a <see cref="T:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005" /> instance from XML.</summary>
      <param name="reader">The XML reader to read.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005.ToEndpointDiscoveryMetadata">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> associated with this <see cref="T:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes the current <see cref="T:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005" /> instance to XML.</summary>
      <param name="writer">The XML writer.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005">
      <summary>Represents the criteria to use when searching for services using the April 2005 version of the WS-Discovery protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005.FromFindCriteria(System.ServiceModel.Discovery.FindCriteria)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005" /> class with the specified <see cref="T:System.ServiceModel.Discovery.FindCriteria" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005" /> instance.</returns>
      <param name="findCriteria">The find criteria.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005.GetSchema">
      <summary>Gets the schema of find criteria for the April 2005 version of the WS-Discovery protocol.</summary>
      <returns>The schema.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the schema of find criteria for the April 2005 version of the WS-Discovery protocol and adds it to the specified schema set if it is not already present.</summary>
      <returns>The XML qualified name of the schema.</returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005.ReadXml(System.Xml.XmlReader)">
      <summary>Reads an instance of <see cref="T:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005" /> from the specified XML reader.</summary>
      <param name="reader">The XML reader.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005.ToFindCriteria">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.FindCriteria" /> associated with this <see cref="T:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005" /> instance.</summary>
      <returns>The find criteria.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes the current <see cref="T:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005" /> instance to XML.</summary>
      <param name="writer">The XML writer.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005">
      <summary>Represents the criteria to use when resolving a service using the April 2005 version of the WS-Discovery protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005.FromResolveCriteria(System.ServiceModel.Discovery.ResolveCriteria)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005" /> class with the specified <see cref="T:System.ServiceModel.Discovery.ResolveCriteria" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005" /> instance.</returns>
      <param name="resolveCriteria">The resolve criteria.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005.GetSchema">
      <summary>Gets the XML schema for resolve criteria defined in the April 2005 version of the WS-Discovery protocol.</summary>
      <returns>The XML schema of resolve criteria.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the XML schema for resolve criteria defined in the April 2005 version of the WS-Discovery protocol and adds it to the specified <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</summary>
      <returns>The XML qualified name of the schema. </returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005.ReadXml(System.Xml.XmlReader)">
      <summary>Reads a <see cref="T:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005" /> instance from XML.</summary>
      <param name="reader">The XML reader.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005.ToResolveCriteria">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.ResolveCriteria" /> instance associated with the current <see cref="T:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005" /> instance.</summary>
      <returns>The resolve criteria.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes the current <see cref="T:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005" /> instance to XML.</summary>
      <param name="writer">The XML writer.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1">
      <summary>Represents the AppSequence header defined in the Committee Draft 1 version of the WS-Discovery Protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1.FromDiscoveryMessageSequence(System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1" /> class from the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1" /> instance.</returns>
      <param name="discoveryMessageSequence">The discovery message sequence.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1.GetSchema">
      <summary>Gets the schema for the AppSequence header as defined in the Committee Draft 1 version of the WS-Discovery protocol.</summary>
      <returns>The schema for the AppSequence header.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the schema for the AppSequence header as defined in the Committee Draft 1 version of the WS-Discovery protocol and adds it to the specified schema set if the schema set does not already contain the schema.</summary>
      <returns>The XML-qualified name of the schema.</returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1.ReadXml(System.Xml.XmlReader)">
      <summary>Reads a discovery message sequence from XML.</summary>
      <param name="reader">The XML reader to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1.ToDiscoveryMessageSequence">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> class from the current <see cref="T:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1" /> instance to XML.</summary>
      <param name="writer">The XML writer to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1">
      <summary>Contains the metadata for a discoverable service based on the Committee Draft 1 version of the WS-Discovery protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1.FromEndpointDiscoveryMetadata(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1" /> class with the specified <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1" /> instance.</returns>
      <param name="endpointDiscoveryMetadata">The endpoint discovery metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1.GetSchema">
      <summary>Gets the schema for endpoint discovery metadata for the Committee Draft 1 version of the WS-Discovery protocol.</summary>
      <returns>The XML qualified name of the schema.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the schema for endpoint discovery metadata for the Committee Draft 1 version of the WS-Discovery protocol and adds it to the specified schema set if it is not already present.</summary>
      <returns>The XML qualified name of the schema.</returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1.ReadXml(System.Xml.XmlReader)">
      <summary>Reads an <see cref="T:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1" /> instance from XML.</summary>
      <param name="reader">The XML reader to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1.ToEndpointDiscoveryMetadata">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" /> associated with this <see cref="T:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes a <see cref="T:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1" /> instance to XML.</summary>
      <param name="writer">The XML writer to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1">
      <summary>Represents the criteria to use when searching for services using the Committee Draft 1 version of the WS-Discovery protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1.FromFindCriteria(System.ServiceModel.Discovery.FindCriteria)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1" /> using the specified <see cref="T:System.ServiceModel.Discovery.FindCriteria" /> instance.</summary>
      <returns>A new<see cref="T:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1" /> instance.</returns>
      <param name="findCriteria">The find criteria.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1.GetSchema">
      <summary>Gets the find criteria schema.</summary>
      <returns>The find criteria schema.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the find criteria schema from the specified <see cref="T:System.Xml.Schema.XmlSchemaSet" />. </summary>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> of the schema.</returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1.ReadXml(System.Xml.XmlReader)">
      <summary>Reads a <see cref="T:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1" /> instance from XML.</summary>
      <param name="reader">The XML reader to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1.ToFindCriteria">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.FindCriteria" /> associated with this <see cref="T:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1" /> instance.</summary>
      <returns>The find criteria.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1" /> to XML.</summary>
      <param name="writer">The XML writer to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1">
      <summary>Represents the criteria to use when resolving a service using the Committee Draft 1 version of the WS-Discovery protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1.FromResolveCriteria(System.ServiceModel.Discovery.ResolveCriteria)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1" /> using the specified <see cref="T:System.ServiceModel.Discovery.ResolveCriteria" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1" /> instance.</returns>
      <param name="resolveCriteria">The resolve criteria.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1.GetSchema">
      <summary>Gets the resolve criteria schema.</summary>
      <returns>The resolve criteria schema.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the find criteria schema from the specified <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> of the schema.</returns>
      <param name="schemaSet">The schema set.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1.ReadXml(System.Xml.XmlReader)">
      <summary>Reads a <see cref="T:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1" /> instance from XML.</summary>
      <param name="reader">The XML reader to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1.ToResolveCriteria">
      <summary>Gets the <see cref="T:System.ServiceModel.Discovery.ResolveCriteria" /> associated with this <see cref="T:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1" /> instance.</summary>
      <returns>The resolve criteria.</returns>
    </member>
    <member name="M:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes a <see cref="T:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1" /> instance to XML.</summary>
      <param name="writer">The XML writer to write to.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Web.DynamicData.Design.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.DynamicData.Design</name>
  </assembly>
  <members>
    <member name="T:System.Web.DynamicData.Design.DataControlReferenceCollectionEditor">
      <summary>Provides a component editor for the data controls collection of the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control.</summary>
    </member>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.Design.DataControlReferenceCollectionEditor" /> class by using the specified collection type. </summary>
      <param name="type">The type of the collection to edit. </param>
    </member>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceCollectionEditor.CreateCollectionItemType">
      <summary>Gets the type of the collection to edit.</summary>
      <returns>The type of the collection to edit.</returns>
    </member>
    <member name="T:System.Web.DynamicData.Design.DataControlReferenceIDConverter">
      <summary>Creates a user-selectable collection of data controls.</summary>
    </member>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.Design.DataControlReferenceIDConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a collection of available control values.</summary>
      <returns>A collection that contains the names of the available controls.</returns>
      <param name="context">An object that provides context information for this type converter.</param>
    </member>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a value that indicates whether the returned control names are an exclusive list of all possible values.</summary>
      <returns>Always false.</returns>
      <param name="context">An object that provides context information to this type converter.</param>
    </member>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a value that indicates whether this converter supports a standard set of control names that can be selected from the collection.</summary>
      <returns>Always true.</returns>
      <param name="context">An object that provides context information to this type converter.</param>
    </member>
    <member name="T:System.Web.DynamicData.Design.DynamicDataManagerDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control.</summary>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicDataManagerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.Design.DynamicDataManagerDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.DynamicData.Design.DynamicDataManagerDesigner.ActionLists">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicDataManagerDesigner.GetDesignTimeHtml">
      <summary>Generates the HTML markup that is used to render the associated <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control at design time.</summary>
      <returns>The HTML markup that is used to render the associated <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control at design time.</returns>
    </member>
    <member name="T:System.Web.DynamicData.Design.DynamicFieldDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</summary>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.Design.DynamicFieldDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.CreateField">
      <summary>Creates an empty <see cref="T:System.Web.DynamicData.DynamicField" /> object.</summary>
      <returns>An empty field object.</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.CreateField(System.Web.UI.Design.IDataSourceFieldSchema)">
      <summary>Creates a new <see cref="T:System.Web.DynamicData.DynamicField" /> object by using the specified data field information.</summary>
      <returns>A new field object.</returns>
      <param name="fieldSchema">Schema information that contains the structure of the data field.</param>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.CreateTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>Creates a <see cref="T:System.Web.UI.WebControls.TemplateField" /> field for the specified data field.</summary>
      <returns>The new template field.</returns>
      <param name="dataControlField">The data field object.</param>
      <param name="dataBoundControl">The data-bound control that contains the data field object.</param>
    </member>
    <member name="P:System.Web.DynamicData.Design.DynamicFieldDesigner.DefaultNodeText">
      <summary>Gets the default text that is displayed for the data field in the fields editor.</summary>
      <returns>The default text that is displayed for the data field in the fields editor.</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.GetNodeText(System.Web.UI.WebControls.DataControlField)">
      <summary>Gets the name that is displayed for the data field in the fields editor.</summary>
      <returns>The name that is displayed for the data field in the fields editor.</returns>
      <param name="dataControlField">The data field object.</param>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.GetTemplateContent(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Gets the content of the template field.</summary>
      <returns>The content of the template field.</returns>
      <param name="dataControlField">The data field object.</param>
      <param name="mode">The display mode for the specified data field.</param>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.IsEnabled(System.Web.UI.WebControls.DataBoundControl)">
      <summary>Gets a value that indicates whether the data field is enabled in the fields editor.</summary>
      <returns>true if the data field is enabled in the fields editor; false if the data field will not be displayed in the fields editor.</returns>
      <param name="parent">The data-bound control whose data control fields are being edited.</param>
    </member>
    <member name="P:System.Web.DynamicData.Design.DynamicFieldDesigner.UsesSchema">
      <summary>Gets a value that indicates whether schema information is used to load the data fields.</summary>
      <returns>true in all cases.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Speech.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Speech</name>
  </assembly>
  <members>
    <member name="T:System.Speech.AudioFormat.AudioBitsPerSample">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.AudioFormat.AudioBitsPerSample.Eight">
      <summary />
    </member>
    <member name="F:System.Speech.AudioFormat.AudioBitsPerSample.Sixteen">
      <summary />
    </member>
    <member name="T:System.Speech.AudioFormat.AudioChannel">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.AudioFormat.AudioChannel.Mono">
      <summary />
    </member>
    <member name="F:System.Speech.AudioFormat.AudioChannel.Stereo">
      <summary />
    </member>
    <member name="T:System.Speech.AudioFormat.EncodingFormat">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.AudioFormat.EncodingFormat.Pcm">
      <summary />
    </member>
    <member name="F:System.Speech.AudioFormat.EncodingFormat.ALaw">
      <summary />
    </member>
    <member name="F:System.Speech.AudioFormat.EncodingFormat.ULaw">
      <summary />
    </member>
    <member name="T:System.Speech.AudioFormat.SpeechAudioFormatInfo"></member>
    <member name="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)"></member>
    <member name="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])">
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond">
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample">
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign">
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount"></member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat"></member>
    <member name="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)"></member>
    <member name="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond"></member>
    <member name="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs"></member>
    <member name="P:System.Speech.Recognition.AudioLevelUpdatedEventArgs.AudioLevel"></member>
    <member name="T:System.Speech.Recognition.AudioSignalProblem">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.None">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.TooNoisy">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.NoSignal">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.TooLoud">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.TooSoft">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.TooFast">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.TooSlow">
      <summary />
    </member>
    <member name="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioLevel"></member>
    <member name="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioPosition"></member>
    <member name="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioSignalProblem"></member>
    <member name="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.RecognizerAudioPosition"></member>
    <member name="T:System.Speech.Recognition.AudioState"></member>
    <member name="F:System.Speech.Recognition.AudioState.Stopped">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.AudioState.Silence">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.AudioState.Speech">
      <summary />
    </member>
    <member name="T:System.Speech.Recognition.AudioStateChangedEventArgs"></member>
    <member name="P:System.Speech.Recognition.AudioStateChangedEventArgs.AudioState"></member>
    <member name="T:System.Speech.Recognition.Choices"></member>
    <member name="M:System.Speech.Recognition.Choices.#ctor"></member>
    <member name="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])"></member>
    <member name="M:System.Speech.Recognition.Choices.#ctor(System.String[])"></member>
    <member name="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])"></member>
    <member name="M:System.Speech.Recognition.Choices.Add(System.String[])"></member>
    <member name="M:System.Speech.Recognition.Choices.ToGrammarBuilder"></member>
    <member name="T:System.Speech.Recognition.DictationGrammar"></member>
    <member name="M:System.Speech.Recognition.DictationGrammar.#ctor"></member>
    <member name="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)"></member>
    <member name="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)"></member>
    <member name="T:System.Speech.Recognition.DisplayAttributes">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Recognition.DisplayAttributes.None">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.DisplayAttributes.OneTrailingSpace">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces">
      <summary />
    </member>
    <member name="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs"></member>
    <member name="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result"></member>
    <member name="T:System.Speech.Recognition.Grammar"></member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor"></member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)"></member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)"></member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])"></member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)">
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])">
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)"></member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)"></member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)"></member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])"></member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)">
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])">
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.String)"></member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)"></member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])"></member>
    <member name="P:System.Speech.Recognition.Grammar.Enabled"></member>
    <member name="P:System.Speech.Recognition.Grammar.IsStg"></member>
    <member name="P:System.Speech.Recognition.Grammar.Loaded"></member>
    <member name="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.Grammar.Name"></member>
    <member name="P:System.Speech.Recognition.Grammar.Priority"></member>
    <member name="P:System.Speech.Recognition.Grammar.ResourceName"></member>
    <member name="P:System.Speech.Recognition.Grammar.RuleName"></member>
    <member name="E:System.Speech.Recognition.Grammar.SpeechRecognized"></member>
    <member name="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])"></member>
    <member name="P:System.Speech.Recognition.Grammar.Weight"></member>
    <member name="T:System.Speech.Recognition.GrammarBuilder"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.AppendDictation"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)"></member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard"></member>
    <member name="P:System.Speech.Recognition.GrammarBuilder.Culture"></member>
    <member name="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases">
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs"></member>
    <member name="P:System.Speech.Recognition.LoadGrammarCompletedEventArgs.Grammar"></member>
    <member name="T:System.Speech.Recognition.RecognitionEventArgs"></member>
    <member name="P:System.Speech.Recognition.RecognitionEventArgs.Result"></member>
    <member name="T:System.Speech.Recognition.RecognitionResult"></member>
    <member name="P:System.Speech.Recognition.RecognitionResult.Alternates"></member>
    <member name="P:System.Speech.Recognition.RecognitionResult.Audio"></member>
    <member name="M:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)"></member>
    <member name="M:System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="T:System.Speech.Recognition.RecognizeCompletedEventArgs"></member>
    <member name="P:System.Speech.Recognition.RecognizeCompletedEventArgs.AudioPosition"></member>
    <member name="P:System.Speech.Recognition.RecognizeCompletedEventArgs.BabbleTimeout"></member>
    <member name="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InitialSilenceTimeout"></member>
    <member name="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InputStreamEnded"></member>
    <member name="P:System.Speech.Recognition.RecognizeCompletedEventArgs.Result"></member>
    <member name="T:System.Speech.Recognition.RecognizedAudio">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedAudio.AudioPosition"></member>
    <member name="P:System.Speech.Recognition.RecognizedAudio.Duration"></member>
    <member name="P:System.Speech.Recognition.RecognizedAudio.Format"></member>
    <member name="M:System.Speech.Recognition.RecognizedAudio.GetRange(System.TimeSpan,System.TimeSpan)"></member>
    <member name="P:System.Speech.Recognition.RecognizedAudio.StartTime"></member>
    <member name="M:System.Speech.Recognition.RecognizedAudio.WriteToAudioStream(System.IO.Stream)"></member>
    <member name="M:System.Speech.Recognition.RecognizedAudio.WriteToWaveStream(System.IO.Stream)"></member>
    <member name="T:System.Speech.Recognition.RecognizedPhrase"></member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Confidence"></member>
    <member name="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics"></member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Grammar"></member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId"></member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Homophones"></member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits"></member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Semantics"></member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Text"></member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Words"></member>
    <member name="T:System.Speech.Recognition.RecognizedWordUnit"></member>
    <member name="M:System.Speech.Recognition.RecognizedWordUnit.#ctor(System.String,System.Single,System.String,System.String,System.Speech.Recognition.DisplayAttributes,System.TimeSpan,System.TimeSpan)"></member>
    <member name="P:System.Speech.Recognition.RecognizedWordUnit.Confidence"></member>
    <member name="P:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes"></member>
    <member name="P:System.Speech.Recognition.RecognizedWordUnit.LexicalForm"></member>
    <member name="P:System.Speech.Recognition.RecognizedWordUnit.Pronunciation"></member>
    <member name="P:System.Speech.Recognition.RecognizedWordUnit.Text"></member>
    <member name="T:System.Speech.Recognition.RecognizeMode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Recognition.RecognizeMode.Single">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.RecognizeMode.Multiple">
      <summary />
    </member>
    <member name="T:System.Speech.Recognition.RecognizerInfo">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.AdditionalInfo"></member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.Culture"></member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.Description"></member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.Id"></member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.Name"></member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats"></member>
    <member name="T:System.Speech.Recognition.RecognizerState"></member>
    <member name="F:System.Speech.Recognition.RecognizerState.Stopped">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.RecognizerState.Listening">
      <summary />
    </member>
    <member name="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.AudioPosition"></member>
    <member name="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.UserToken"></member>
    <member name="T:System.Speech.Recognition.ReplacementText">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.ReplacementText.CountOfWords"></member>
    <member name="P:System.Speech.Recognition.ReplacementText.DisplayAttributes"></member>
    <member name="P:System.Speech.Recognition.ReplacementText.FirstWordIndex"></member>
    <member name="P:System.Speech.Recognition.ReplacementText.Text"></member>
    <member name="T:System.Speech.Recognition.SemanticResultKey"></member>
    <member name="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])"></member>
    <member name="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])"></member>
    <member name="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder"></member>
    <member name="T:System.Speech.Recognition.SemanticResultValue"></member>
    <member name="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)"></member>
    <member name="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)"></member>
    <member name="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)"></member>
    <member name="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder"></member>
    <member name="T:System.Speech.Recognition.SemanticValue"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.#ctor(System.Object)"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)"></member>
    <member name="P:System.Speech.Recognition.SemanticValue.Confidence"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.ContainsKey(System.String)"></member>
    <member name="P:System.Speech.Recognition.SemanticValue.Count"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.Equals(System.Object)"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SemanticValue.Item(System.String)"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{T}#Clear"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)"></member>
    <member name="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{T}#IsReadOnly"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{TKey@TValue}#Add(System.String,System.Speech.Recognition.SemanticValue)"></member>
    <member name="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{TKey@TValue}#Keys"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{TKey@TValue}#Remove(System.String)"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{TKey@TValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)"></member>
    <member name="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{TKey@TValue}#Values"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{T}#GetEnumerator"></member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="P:System.Speech.Recognition.SemanticValue.Value"></member>
    <member name="T:System.Speech.Recognition.SpeechDetectedEventArgs"></member>
    <member name="P:System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition"></member>
    <member name="T:System.Speech.Recognition.SpeechHypothesizedEventArgs"></member>
    <member name="T:System.Speech.Recognition.SpeechRecognitionEngine"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Globalization.CultureInfo)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Speech.Recognition.RecognizerInfo)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.String)"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioFormat"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevel">
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevelUpdated">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioPosition">
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioSignalProblemOccurred">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioState"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioStateChanged"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.BabbleTimeout">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose(System.Boolean)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String,System.Globalization.CompareOptions)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeout">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeoutAmbiguous">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.Grammars"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.InitialSilenceTimeout">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammar(System.Speech.Recognition.Grammar)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarAsync(System.Speech.Recognition.Grammar)"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarCompleted"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.MaxAlternates"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.QueryRecognizerSetting(System.String)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize(System.TimeSpan)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync(System.Speech.Recognition.RecognizeMode)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncCancel"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncStop"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerAudioPosition"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerUpdateReached">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object,System.TimeSpan)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToDefaultAudioDevice"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveFile(System.String)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveStream(System.IO.Stream)"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadAllGrammars"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadGrammar(System.Speech.Recognition.Grammar)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.Int32)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.String)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs"></member>
    <member name="T:System.Speech.Recognition.SpeechRecognizedEventArgs"></member>
    <member name="T:System.Speech.Recognition.SpeechRecognizer"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.#ctor"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.AudioFormat">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.AudioLevel">
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.AudioLevelUpdated">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.AudioPosition">
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.AudioSignalProblemOccurred">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.AudioState"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.AudioStateChanged"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.Dispose"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.Dispose(System.Boolean)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String,System.Globalization.CompareOptions)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.Enabled"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.Grammars"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammar(System.Speech.Recognition.Grammar)"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammarAsync(System.Speech.Recognition.Grammar)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.LoadGrammarCompleted"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.MaxAlternates"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.PauseRecognizerOnRecognition">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.RecognizerAudioPosition">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.RecognizerUpdateReached">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object,System.TimeSpan)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.SpeechDetected"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized"></member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.State"></member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.StateChanged"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.UnloadAllGrammars"></member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.UnloadGrammar(System.Speech.Recognition.Grammar)"></member>
    <member name="T:System.Speech.Recognition.SpeechUI"></member>
    <member name="M:System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)"></member>
    <member name="T:System.Speech.Recognition.StateChangedEventArgs"></member>
    <member name="P:System.Speech.Recognition.StateChangedEventArgs.RecognizerState"></member>
    <member name="T:System.Speech.Recognition.SubsetMatchingMode"></member>
    <member name="F:System.Speech.Recognition.SubsetMatchingMode.Subsequence">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubset">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.SubsetMatchingMode.SubsequenceContentRequired">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubsetContentRequired">
      <summary />
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.GrammarBuilder)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.String)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Xml.XmlReader)"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(System.Xml.XmlWriter)"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsElement"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsElement.#ctor"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.IO.Stream)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.String,System.IO.Stream)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Xml.XmlReader,System.IO.Stream)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.String[],System.String)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.String[],System.String,System.String[],System.String)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Xml.XmlReader,System.String,System.String[],System.String)"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode"></member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode.Voice">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode.Dtmf">
      <summary />
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsItem"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32,System.Speech.Recognition.SrgsGrammar.SrgsElement[])"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32,System.String)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsElement[])"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.String)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.Elements"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.MaxRepeat"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.MinRepeat"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.RepeatProbability"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32,System.Int32)"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.Weight"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.Object)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.String,System.Object)"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsItem[])"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.String[])"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add(System.Speech.Recognition.SrgsGrammar.SrgsItem)"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet"></member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Sapi">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Ipa">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Ups">
      <summary />
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsRule"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Script"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String,System.String)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String,System.String)"></member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation"></member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage"></member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling"></member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri"></member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.#ctor"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add(System.Speech.Recognition.SrgsGrammar.SrgsRule[])"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope"></member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Public">
      <summary />
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Private">
      <summary />
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor(System.String)"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor(System.String)"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.MatchingMode"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.Text"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsText"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor(System.String)"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsText.Text"></member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsToken"></member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation"></member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text"></member>
    <member name="T:System.Speech.Synthesis.BookmarkReachedEventArgs">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.BookmarkReachedEventArgs.AudioPosition"></member>
    <member name="P:System.Speech.Synthesis.BookmarkReachedEventArgs.Bookmark"></member>
    <member name="T:System.Speech.Synthesis.FilePrompt">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.FilePrompt.#ctor(System.String,System.Speech.Synthesis.SynthesisMediaType)"></member>
    <member name="M:System.Speech.Synthesis.FilePrompt.#ctor(System.Uri,System.Speech.Synthesis.SynthesisMediaType)"></member>
    <member name="T:System.Speech.Synthesis.InstalledVoice"></member>
    <member name="P:System.Speech.Synthesis.InstalledVoice.Enabled"></member>
    <member name="M:System.Speech.Synthesis.InstalledVoice.Equals(System.Object)"></member>
    <member name="M:System.Speech.Synthesis.InstalledVoice.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.InstalledVoice.VoiceInfo"></member>
    <member name="T:System.Speech.Synthesis.PhonemeReachedEventArgs">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.PhonemeReachedEventArgs.AudioPosition"></member>
    <member name="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Duration"></member>
    <member name="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Emphasis"></member>
    <member name="P:System.Speech.Synthesis.PhonemeReachedEventArgs.NextPhoneme"></member>
    <member name="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Phoneme"></member>
    <member name="T:System.Speech.Synthesis.Prompt"></member>
    <member name="M:System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)"></member>
    <member name="M:System.Speech.Synthesis.Prompt.#ctor(System.String)"></member>
    <member name="M:System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)"></member>
    <member name="P:System.Speech.Synthesis.Prompt.IsCompleted"></member>
    <member name="T:System.Speech.Synthesis.PromptBreak">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.None">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.ExtraSmall">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.Small">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.Medium">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.Large">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.ExtraLarge">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.PromptBuilder"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.#ctor"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendBreak"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)">
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.ClearContent"></member>
    <member name="P:System.Speech.Synthesis.PromptBuilder.Culture"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.EndParagraph"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.EndSentence"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.EndStyle"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.EndVoice"></member>
    <member name="P:System.Speech.Synthesis.PromptBuilder.IsEmpty"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartParagraph"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartSentence"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)"></member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.ToXml"></member>
    <member name="T:System.Speech.Synthesis.PromptEmphasis">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.PromptEmphasis.NotSet">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptEmphasis.Strong">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptEmphasis.Moderate">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptEmphasis.None">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptEmphasis.Reduced">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.PromptEventArgs">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.PromptEventArgs.Prompt"></member>
    <member name="T:System.Speech.Synthesis.PromptRate">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.NotSet">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.ExtraFast">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.Fast">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.Medium">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.Slow">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.ExtraSlow">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.PromptStyle">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.PromptStyle.#ctor"></member>
    <member name="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptEmphasis)"></member>
    <member name="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptRate)"></member>
    <member name="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptVolume)"></member>
    <member name="P:System.Speech.Synthesis.PromptStyle.Emphasis"></member>
    <member name="P:System.Speech.Synthesis.PromptStyle.Rate"></member>
    <member name="P:System.Speech.Synthesis.PromptStyle.Volume"></member>
    <member name="T:System.Speech.Synthesis.PromptVolume">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.NotSet">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.Silent">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.ExtraSoft">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.Soft">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.Medium">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.Loud">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.ExtraLoud">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.Default">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.SayAs">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.SpellOut">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.NumberOrdinal">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.NumberCardinal">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Date">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.DayMonthYear">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.MonthDayYear">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.YearMonthDay">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.YearMonth">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.MonthYear">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.MonthDay">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.DayMonth">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Year">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Month">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Day">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Time">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Time24">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Time12">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Telephone">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Text">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.SpeakCompletedEventArgs"></member>
    <member name="T:System.Speech.Synthesis.SpeakProgressEventArgs"></member>
    <member name="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition"></member>
    <member name="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount"></member>
    <member name="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition"></member>
    <member name="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text"></member>
    <member name="T:System.Speech.Synthesis.SpeakStartedEventArgs"></member>
    <member name="T:System.Speech.Synthesis.SpeechSynthesizer"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Pause"></member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.SpeechSynthesizer.Rate">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Resume"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll"></member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted"></member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)"></member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)"></member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted"></member>
    <member name="P:System.Speech.Synthesis.SpeechSynthesizer.State"></member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged"></member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.SpeechSynthesizer.Voice"></member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange"></member>
    <member name="P:System.Speech.Synthesis.SpeechSynthesizer.Volume">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Speech.Synthesis.StateChangedEventArgs"></member>
    <member name="P:System.Speech.Synthesis.StateChangedEventArgs.PreviousState"></member>
    <member name="P:System.Speech.Synthesis.StateChangedEventArgs.State"></member>
    <member name="T:System.Speech.Synthesis.SynthesisMediaType">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesisMediaType.Text">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SynthesisMediaType.Ssml">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SynthesisMediaType.WaveAudio">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.SynthesisTextFormat">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesisTextFormat.Text">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SynthesisTextFormat.Ssml">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.SynthesizerEmphasis">
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesizerEmphasis.Stressed">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SynthesizerEmphasis.Emphasized">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.SynthesizerState"></member>
    <member name="F:System.Speech.Synthesis.SynthesizerState.Ready">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SynthesizerState.Speaking">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.SynthesizerState.Paused">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.VisemeReachedEventArgs">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.VisemeReachedEventArgs.AudioPosition"></member>
    <member name="P:System.Speech.Synthesis.VisemeReachedEventArgs.Duration"></member>
    <member name="P:System.Speech.Synthesis.VisemeReachedEventArgs.Emphasis"></member>
    <member name="P:System.Speech.Synthesis.VisemeReachedEventArgs.NextViseme"></member>
    <member name="P:System.Speech.Synthesis.VisemeReachedEventArgs.Viseme"></member>
    <member name="T:System.Speech.Synthesis.VoiceAge"></member>
    <member name="F:System.Speech.Synthesis.VoiceAge.NotSet">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.VoiceAge.Child">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.VoiceAge.Teen">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.VoiceAge.Adult">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.VoiceAge.Senior">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.VoiceChangeEventArgs">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.VoiceChangeEventArgs.Voice"></member>
    <member name="T:System.Speech.Synthesis.VoiceGender"></member>
    <member name="F:System.Speech.Synthesis.VoiceGender.NotSet">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.VoiceGender.Male">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.VoiceGender.Female">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.VoiceGender.Neutral">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.VoiceInfo"></member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.AdditionalInfo">
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Age"></member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Culture"></member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Description"></member>
    <member name="M:System.Speech.Synthesis.VoiceInfo.Equals(System.Object)"></member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Gender"></member>
    <member name="M:System.Speech.Synthesis.VoiceInfo.GetHashCode"></member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Id"></member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Name"></member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.SupportedAudioFormats">
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ContourPoint"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.#ctor(System.Single,System.Single,System.Speech.Synthesis.TtsEngine.ContourPointChangeType)"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Change"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ContourPoint.ChangeType"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Object)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Speech.Synthesis.TtsEngine.ContourPoint)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Equality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Inequality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Start"></member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ContourPointChangeType"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ContourPointChangeType.Hz">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ContourPointChangeType.Percentage">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.None">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.ExtraWeak">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Weak">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Medium">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Strong">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.ExtraStrong">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Default">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.EmphasisWord"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Default">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Strong">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Moderate">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.None">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Reduced">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.EventParameterType"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Token">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Object">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EventParameterType.String">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.FragmentState"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.Action"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.Duration"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.LangId"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs"></member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Actions"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents(System.Speech.Synthesis.TtsEngine.SpeechEventInfo[],System.Int32)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.CompleteSkip(System.Int32)"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.GetSkipInfo"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.LoadResource(System.Uri,System.String)"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Rate"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Volume"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Write(System.IntPtr,System.Int32)"></member>
    <member name="T:System.Speech.Synthesis.TtsEngine.Prosody"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.Prosody.#ctor"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.Prosody.Duration"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.Prosody.GetContourPoints"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.Prosody.Pitch"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.Prosody.Range"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.Prosody.Rate"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.Prosody.SetContourPoints(System.Speech.Synthesis.TtsEngine.ContourPoint[])"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.Prosody.Volume"></member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor(System.Int32)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor(System.Single)"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyNumber.AbsoluteNumber"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Object)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Speech.Synthesis.TtsEngine.ProsodyNumber)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.IsNumberPercent"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Number"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.op_Equality(System.Speech.Synthesis.TtsEngine.ProsodyNumber,System.Speech.Synthesis.TtsEngine.ProsodyNumber)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.op_Inequality(System.Speech.Synthesis.TtsEngine.ProsodyNumber,System.Speech.Synthesis.TtsEngine.ProsodyNumber)"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.SsmlAttributeId"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Unit"></member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Default">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.ExtraLow">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Low">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Medium">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.High">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.ExtraHigh">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyRange"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Default">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.ExtraLow">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Low">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Medium">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.High">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.ExtraHigh">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyRate"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Default">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.ExtraSlow">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Slow">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Medium">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Fast">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.ExtraFast">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyUnit"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Default">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Hz">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Semitone">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Default">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Silent">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.ExtraSoft">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Soft">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Medium">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Loud">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.ExtraLoud">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.SayAs"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SayAs.#ctor"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SayAs.Format"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs"></member>
    <member name="T:System.Speech.Synthesis.TtsEngine.SkipInfo"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SkipInfo.#ctor"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SkipInfo.Count"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SkipInfo.Type"></member>
    <member name="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat.WaveFormat">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat.Text">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType"></member>
    <member name="T:System.Speech.Synthesis.TtsEngine.TextFragment"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TextFragment.#ctor"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.TextFragment.State"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset"></member>
    <member name="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak"></member>
    <member name="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Pronounce">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Bookmark">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.SpellOut">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartSentence">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartParagraph">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.ParseUnknownTag">
      <summary />
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)"></member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)"></member>
    <member name="T:System.Speech.Synthesis.TtsEngine.TtsEventId"></member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.StartInputStream">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.EndInputStream">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.VoiceChange">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Bookmark">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Phoneme">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.SentenceBoundary">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Viseme">
      <summary />
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.AudioLevel">
      <summary />
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.ServiceProcess.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceProcess</name>
  </assembly>
  <members>
    <member name="T:System.ServiceProcess.PowerBroadcastStatus">
      <summary>Indicates the system's power status.</summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.BatteryLow">
      <summary>Battery power is low.</summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.OemEvent">
      <summary>An Advanced Power Management (APM) BIOS signaled an APM OEM event.</summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.PowerStatusChange">
      <summary>A change in the power status of the computer is detected, such as a switch from battery power to A/C. The system also broadcasts this event when remaining battery power slips below the threshold specified by the user or if the battery power changes by a specified percentage.</summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.QuerySuspend">
      <summary>The system has requested permission to suspend the computer. An application that grants permission should carry out preparations for the suspension before returning.</summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.QuerySuspendFailed">
      <summary>The system was denied permission to suspend the computer. This status is broadcast if any application or driver denied a previous QuerySuspend status.</summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.ResumeAutomatic">
      <summary>The computer has woken up automatically to handle an event.</summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.ResumeCritical">
      <summary>The system has resumed operation after a critical suspension caused by a failing battery.</summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.ResumeSuspend">
      <summary>The system has resumed operation after being suspended.</summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.Suspend">
      <summary>The computer is about to enter a suspended state. This event is typically broadcast when all applications and installable drivers have returned true to a previous QuerySuspend state.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceAccount">
      <summary>Specifies a service's security context, which defines its logon type.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceAccount.LocalService">
      <summary>An account that acts as a non-privileged user on the local computer, and presents anonymous credentials to any remote server.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceAccount.NetworkService">
      <summary>An account that provides extensive local privileges, and presents the computer's credentials to any remote server.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceAccount.LocalSystem">
      <summary>An account, used by the service control manager, that has extensive privileges on the local computer and acts as the computer on the network.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceAccount.User">
      <summary>An account defined by a specific user on the network. Specifying User for the <see cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" /> member causes the system to prompt for a valid user name and password when the service is installed, unless you set values for both the <see cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" /> and <see cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" /> properties of your <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> instance.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceBase">
      <summary>Provides a base class for a service that will exist as part of a service application. <see cref="T:System.ServiceProcess.ServiceBase" /> must be derived from when creating a new service class.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceBase" /> class.</summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.AutoLog">
      <summary>Indicates whether to report Start, Stop, Pause, and Continue commands in the event log.</summary>
      <returns>true to report information in the event log; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
      <summary>Gets or sets a value indicating whether the service can handle notifications of computer power status changes.</summary>
      <returns>true if the service handles the computer power status changes indicated in the <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> class, otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">This property is modified after the service was started. </exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent">
      <summary>Gets or sets a value that indicates whether the service can handle session change events received from a Terminal Server session.</summary>
      <returns>true if the service can handle Terminal Server session change events; otherwise, false. </returns>
      <exception cref="T:System.InvalidOperationException">This property is modified after the service was started.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
      <summary>Gets or sets a value indicating whether the service can be paused and resumed.</summary>
      <returns>true if the service can be paused; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The service has already been started. The <see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /> property cannot be changed once the service has started. </exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.CanShutdown">
      <summary>Gets or sets a value indicating whether the service should be notified when the system is shutting down.</summary>
      <returns>true if the service should be notified when the system is shutting down; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The service has already been started. The <see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /> property cannot be changed once the service has started. </exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.CanStop">
      <summary>Gets or sets a value indicating whether the service can be stopped once it has started.</summary>
      <returns>true if the service can be stopped and the <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> method called; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The service has already been started. The <see cref="P:System.ServiceProcess.ServiceBase.CanStop" /> property cannot be changed once the service has started. </exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
      <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.ServiceProcess.ServiceBase" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.EventLog">
      <summary>Gets an event log you can use to write notification of service command calls, such as Start and Stop, to the Application event log.</summary>
      <returns>An <see cref="T:System.Diagnostics.EventLog" /> instance whose source is registered to the Application log.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.ExitCode">
      <summary>Gets or sets the exit code for the service.</summary>
      <returns>The exit code for the service.</returns>
    </member>
    <member name="F:System.ServiceProcess.ServiceBase.MaxNameLength">
      <summary>Indicates the maximum size for a service name.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnContinue">
      <summary>When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /> runs when a Continue command is sent to the service by the Service Control Manager (SCM). Specifies actions to take when a service resumes normal functioning after being paused.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
      <summary>When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /> executes when the Service Control Manager (SCM) passes a custom command to the service. Specifies actions to take when a command with the specified parameter value occurs.</summary>
      <param name="command">The command message sent to the service. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnPause">
      <summary>When implemented in a derived class, executes when a Pause command is sent to the service by the Service Control Manager (SCM). Specifies actions to take when a service pauses.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
      <summary>When implemented in a derived class, executes when the computer's power status has changed. This applies to laptop computers when they go into suspended mode, which is not the same as a system shutdown.</summary>
      <returns>When implemented in a derived class, the needs of your application determine what value to return. For example, if a QuerySuspend broadcast status is passed, you could cause your application to reject the query by returning false.</returns>
      <param name="powerStatus">A <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> that indicates a notification from the system about its power status. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)">
      <summary>Executes when a change event is received from a Terminal Server session. </summary>
      <param name="changeDescription">A <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structure that identifies the change type.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnShutdown">
      <summary>When implemented in a derived class, executes when the system is shutting down. Specifies what should occur immediately prior to the system shutting down.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
      <summary>When implemented in a derived class, executes when a Start command is sent to the service by the Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically). Specifies actions to take when the service starts.</summary>
      <param name="args">Data passed by the start command. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnStop">
      <summary>When implemented in a derived class, executes when a Stop command is sent to the service by the Service Control Manager (SCM). Specifies actions to take when a service stops running.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
      <summary>Requests additional time for a pending operation.</summary>
      <param name="milliseconds">The requested time in milliseconds.</param>
      <exception cref="T:System.InvalidOperationException">The service is not in a pending state.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
      <summary>Registers the executable for a service with the Service Control Manager (SCM).</summary>
      <param name="service">A <see cref="T:System.ServiceProcess.ServiceBase" /> which indicates a service to start. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> is null.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">You tried to start the service from the command line. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlAppDomain" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
      <summary>Registers the executable for multiple services with the Service Control Manager (SCM).</summary>
      <param name="services">An array of ServiceBase instances, which indicate services to start. </param>
      <exception cref="T:System.ArgumentException">You did not supply a service to start. The array might be null or empty. </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">You tried to start the service from the command line. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlAppDomain" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.ServiceHandle">
      <summary>Gets the service control handle for the service.</summary>
      <returns>An <see cref="T:System.IntPtr" /> structure that contains the service control handle for the service.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)">
      <summary>Registers the command handler and starts the service.</summary>
      <param name="argCount">The number of arguments in the argument array. </param>
      <param name="argPointer">An <see cref="T:System.IntPtr" /> structure that points to an array of arguments.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.ServiceName">
      <summary>Gets or sets the short name used to identify the service to the system.</summary>
      <returns>The name of the service. </returns>
      <exception cref="T:System.InvalidOperationException">The service has already been started. The <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> property cannot be changed once the service has started. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> property is invalid. </exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.Stop">
      <summary>Stops the executing service.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceController">
      <summary>Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is not associated with a specific service.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is associated with an existing service on the local computer.</summary>
      <param name="name">The short name that identifies the service to the system. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is null or has length zero (0). </exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is associated with an existing service on the specified computer.</summary>
      <param name="name">The short name that identifies the service to the system. </param>
      <param name="machineName">The computer on which the service resides. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is null or has length zero (0).-or- The <paramref name="machineName" /> parameter syntax is invalid. </exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
      <summary>Gets a value indicating whether the service can be paused and resumed.</summary>
      <returns>true if the service can be paused; otherwise, false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanShutdown">
      <summary>Gets a value indicating whether the service should be notified when the system is shutting down.</summary>
      <returns>true if the service should be notified when the system is shutting down; otherwise, false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanStop">
      <summary>Gets a value indicating whether the service can be stopped after it has started.</summary>
      <returns>true if the service can be stopped and the <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> method called; otherwise, false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Close">
      <summary>Disconnects this <see cref="T:System.ServiceProcess.ServiceController" /> instance from the service and frees all the resources that the instance allocated.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Continue">
      <summary>Continues a service after it has been paused.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.DependentServices">
      <summary>Gets the set of services that depends on the service associated with this <see cref="T:System.ServiceProcess.ServiceController" /> instance.</summary>
      <returns>An array of <see cref="T:System.ServiceProcess.ServiceController" /> instances, each of which is associated with a service that depends on this service.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.DisplayName">
      <summary>Gets or sets a friendly name for the service.</summary>
      <returns>The friendly name of the service, which can be used to identify the service.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.ServiceProcess.ServiceController.DisplayName" /> is null. </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ServiceProcess.ServiceController" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
      <summary>Executes a custom command on the service.</summary>
      <param name="command">An application-defined command flag that indicates which custom command to execute. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetDevices">
      <summary>Retrieves the device driver services on the local computer.</summary>
      <returns>An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a device driver service on the local computer.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
      <summary>Retrieves the device driver services on the specified computer.</summary>
      <returns>An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a device driver service on the specified computer.</returns>
      <param name="machineName">The computer from which to retrieve the device driver services. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter has invalid syntax. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetServices">
      <summary>Retrieves all the services on the local computer, except for the device driver services.</summary>
      <returns>An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a service on the local computer.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
      <summary>Retrieves all the services on the specified computer, except for the device driver services.</summary>
      <returns>An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a service on the specified computer.</returns>
      <param name="machineName">The computer from which to retrieve the services. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter has invalid syntax. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.MachineName">
      <summary>Gets or sets the name of the computer on which this service resides.</summary>
      <returns>The name of the computer that is running the service associated with this <see cref="T:System.ServiceProcess.ServiceController" /> instance. The default is the local computer (".").</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.ServiceProcess.ServiceController.MachineName" /> syntax is invalid. </exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Pause">
      <summary>Suspends a service's operation.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Refresh">
      <summary>Refreshes property values by resetting the properties to their current values.</summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceHandle">
      <summary>Gets the handle for the service.</summary>
      <returns>A <see cref="T:System.Runtime.InteropServices.SafeHandle" /> that contains the handle for the service. </returns>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceName">
      <summary>Gets or sets the name that identifies the service that this instance references.</summary>
      <returns>The name that identifies the service that this <see cref="T:System.ServiceProcess.ServiceController" /> instance references. The default is an empty string ("").</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The syntax of the <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> property is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
      <summary>The set of services that this service depends on.</summary>
      <returns>An array of <see cref="T:System.ServiceProcess.ServiceController" /> instances, each of which is associated with a service that must be running for this service to run.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceType">
      <summary>Gets the type of service that this object references.</summary>
      <returns>One of the <see cref="T:System.ServiceProcess.ServiceType" /> values, used to indicate the network service type.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Start">
      <summary>Starts the service, passing no arguments.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Start(System.String[])">
      <summary>Starts a service, passing the specified arguments.</summary>
      <param name="args">An array of arguments to pass to the service when it starts. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service cannot be started. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> is null.-or-A member of the array is null.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.Status">
      <summary>Gets the status of the service that is referenced by this instance.</summary>
      <returns>One of the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> values that indicates whether the service is running, stopped, or paused, or whether a start, stop, pause, or continue command is pending.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Stop">
      <summary>Stops this service and any services that are dependent on this service.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
      <summary>Infinitely waits for the service to reach the specified status.</summary>
      <param name="desiredStatus">The status to wait for. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
      <summary>Waits for the service to reach the specified status or for the specified time-out to expire.</summary>
      <param name="desiredStatus">The status to wait for. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> object specifying the amount of time to wait for the service to reach the specified status. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration. </exception>
      <exception cref="T:System.ServiceProcess.TimeoutException">The value specified for the <paramref name="timeout" /> parameter expires. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermission">
      <summary>Allows control of code access security permissions for service controllers.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> class.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> class with the specified access to resources.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />. </exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> class with the specified permission access levels, the name of the computer on which the service resides, and the short name that identifies the service to the system.</summary>
      <param name="permissionAccess">One of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> values. </param>
      <param name="machineName">The name of the computer on which the service resides. </param>
      <param name="serviceName">The short name that identifies the service to the system. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> class with the specified permission entries.</summary>
      <param name="permissionAccessEntries">An array of <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> objects. The <see cref="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" /> property is set to this value. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries " />is null.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries">
      <summary>Gets the collection of permission entries for this permissions request.</summary>
      <returns>A <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" /> that contains the permission entries for this permissions request.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAccess">
      <summary>Defines access levels used by <see cref="T:System.ServiceProcess.ServiceController" /> permission classes.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.None">
      <summary>The <see cref="T:System.ServiceProcess.ServiceController" /> has no permissions.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse">
      <summary>The <see cref="T:System.ServiceProcess.ServiceController" /> can connect to, but not control, existing services.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control">
      <summary>The <see cref="T:System.ServiceProcess.ServiceController" /> can connect to and control existing services.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <summary>Allows declarative service controller permission checks.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAttribute" /> class.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission">
      <summary>Creates the permission based on the requested access levels that are set through the <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" /> property on the attribute.</summary>
      <returns>An <see cref="T:System.Security.IPermission" /> that represents the created permission.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName">
      <summary>Gets or sets the name of the computer on which the service resides.</summary>
      <returns>The name of the computer that is running the service associated with the <see cref="T:System.ServiceProcess.ServiceController" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" /> syntax is invalid. </exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess">
      <summary>Gets or sets the access levels used in the permissions request.</summary>
      <returns>A bitwise combination of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> values.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName">
      <summary>Gets or sets the short name that identifies the service to the system.</summary>
      <returns>The name of the service.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The syntax of the <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> property is invalid. </exception>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <summary>Defines the smallest unit of a code access security permission that is set for a <see cref="T:System.ServiceProcess.ServiceController" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> class.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> class with the specified permission access levels, the name of the computer, and a short name that identifies the service.</summary>
      <param name="permissionAccess">One of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> values. </param>
      <param name="machineName">The name of the computer on which the service resides. </param>
      <param name="serviceName">The short name that identifies the service to the system. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName " />is not valid.-or-<paramref name="serviceName " />is not valid.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName">
      <summary>Gets the name of the computer on which the service resides.</summary>
      <returns>The name of the computer that is running the service associated with the <see cref="T:System.ServiceProcess.ServiceController" />.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess">
      <summary>Gets the access levels used in the permissions request.</summary>
      <returns>A bitwise combination of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> values.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName">
      <summary>Gets the short name that identifies the service to the system.</summary>
      <returns>The name of the service.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <summary>Contains a strongly-typed collection of <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> objects.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Adds a specified <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> to this collection.</summary>
      <returns>The zero-based index of the added <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object.</returns>
      <param name="value">The <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object to add. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>Appends a set of specified permission entries to this collection.</summary>
      <param name="value">An array of type <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> objects that contains the permission entries to add. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)">
      <summary>Appends a set of specified permission entries to this collection.</summary>
      <param name="value">A <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" /> that contains the permission entries to add. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Determines whether this collection contains a specified <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object.</summary>
      <returns>true if the specified <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object belongs to this collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object to find. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)">
      <summary>Copies the permission entries from this collection to an array, starting at a particular index of the array.</summary>
      <param name="array">An array of type <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> that receives the copied permission entries. </param>
      <param name="index">The zero-based index at which to begin copying the permission entries. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Determines the index of a specified permission entry in this collection.</summary>
      <returns>The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.</returns>
      <param name="value">The permission entry to search for. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Inserts a permission entry into this collection at a specified index.</summary>
      <param name="index">The zero-based index of the collection at which to insert the permission entry. </param>
      <param name="value">The permission entry to insert into this collection. </param>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)">
      <summary>Gets or sets the object at a specified index.</summary>
      <returns>The <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index into the collection. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnClear">
      <summary>Performs additional custom processes after clearing the contents of the collection.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before a new permission entry is inserted into the collection.</summary>
      <param name="index">The zero-based index at which to insert <paramref name="value" />. </param>
      <param name="value">The new value of the permission entry at <paramref name="index" />. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing a new permission entry from the collection.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> can be found. </param>
      <param name="value">The permission entry to remove from <paramref name="index" />. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Performs additional custom processes before setting a value in the collection.</summary>
      <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found. </param>
      <param name="oldValue">The value to replace with <paramref name="newValue" />. </param>
      <param name="newValue">The new value of the permission entry at <paramref name="index" />. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Removes a specified permission entry from this collection.</summary>
      <param name="value">The permission entry to remove. </param>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerStatus">
      <summary>Indicates the current state of the service.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.ContinuePending">
      <summary>The service continue is pending. This corresponds to the Win32 SERVICE_CONTINUE_PENDING constant, which is defined as 0x00000005.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Paused">
      <summary>The service is paused. This corresponds to the Win32 SERVICE_PAUSED constant, which is defined as 0x00000007.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.PausePending">
      <summary>The service pause is pending. This corresponds to the Win32 SERVICE_PAUSE_PENDING constant, which is defined as 0x00000006.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Running">
      <summary>The service is running. This corresponds to the Win32 SERVICE_RUNNING constant, which is defined as 0x00000004.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.StartPending">
      <summary>The service is starting. This corresponds to the Win32 SERVICE_START_PENDING constant, which is defined as 0x00000002.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Stopped">
      <summary>The service is not running. This corresponds to the Win32 SERVICE_STOPPED constant, which is defined as 0x00000001.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.StopPending">
      <summary>The service is stopping. This corresponds to the Win32 SERVICE_STOP_PENDING constant, which is defined as 0x00000003.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceInstaller">
      <summary>Installs a class that extends <see cref="T:System.ServiceProcess.ServiceBase" /> to implement a service. This class is called by the install utility when installing a service application.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceInstaller" /> class.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>Copies properties from an instance of <see cref="T:System.ServiceProcess.ServiceBase" /> to this installer.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> from which to copy. </param>
      <exception cref="T:System.ArgumentException">The component you are associating with this installer does not inherit from <see cref="T:System.ServiceProcess.ServiceBase" />. </exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart">
      <summary>Gets or sets a value that indicates whether the service should be delayed from starting until other automatically started services are running.</summary>
      <returns>true to delay automatic start of the service; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceInstaller.Description">
      <summary>Gets or sets the description for the service.</summary>
      <returns>The description of the service. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceInstaller.DisplayName">
      <summary>Indicates the friendly name that identifies the service to the user.</summary>
      <returns>The name associated with the service, used frequently for interactive tools.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
      <summary>Installs the service by writing service application information to the registry. This method is meant to be used by installation tools, which process the appropriate methods automatically.</summary>
      <param name="stateSaver">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation. </param>
      <exception cref="T:System.InvalidOperationException">The installation does not contain a <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> for the executable.-or- The file name for the assembly is null or an empty string.-or- The service name is invalid.-or- The Service Control Manager could not be opened. </exception>
      <exception cref="T:System.ArgumentException">The display name for the service is more than 255 characters in length.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">The system could not generate a handle to the service. -or-A service with that name is already installed.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <summary>Indicates whether two installers would install the same service.</summary>
      <returns>true if calling <see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /> on both of these installers would result in installing the same service; otherwise, false.</returns>
      <param name="otherInstaller">A <see cref="T:System.Configuration.Install.ComponentInstaller" /> to which you are comparing the current installer. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
      <summary>Rolls back service application information written to the registry by the installation procedure. This method is meant to be used by installation tools, which process the appropriate methods automatically.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceInstaller.ServiceName">
      <summary>Indicates the name used by the system to identify this service. This property must be identical to the <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> of the service you want to install.</summary>
      <returns>The name of the service to be installed. This value must be set before the install utility attempts to install the service.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" /> property is invalid. </exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
      <summary>Indicates the services that must be running for this service to run.</summary>
      <returns>An array of services that must be running before the service associated with this installer can run.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceInstaller.StartType">
      <summary>Indicates how and when this service is started.</summary>
      <returns>A <see cref="T:System.ServiceProcess.ServiceStartMode" /> that represents the way the service is started. The default is Manual, which specifies that the service will not automatically start after reboot.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.ServiceProcess.ServiceInstaller.StartType" /> cannot be set because a value has not been defined for <see cref="T:System.ServiceProcess.ServiceStartMode" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>Uninstalls the service by removing information about it from the registry.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">The Service Control Manager could not be opened.-or- The system could not get a handle to the service. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.ServiceProcess.ServiceProcessDescriptionAttribute">
      <summary>Specifies a description for a property or event.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceProcessDescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" /> class, using the specified description.</summary>
      <param name="description">The application-defined description text. </param>
    </member>
    <member name="P:System.ServiceProcess.ServiceProcessDescriptionAttribute.Description">
      <summary>Gets description text associated with the service process.</summary>
      <returns>An application-defined description.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceProcessInstaller">
      <summary>Installs an executable containing classes that extend <see cref="T:System.ServiceProcess.ServiceBase" />. This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceProcessInstaller.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class. </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceProcessInstaller.Account">
      <summary>Gets or sets the type of account under which to run this service application.</summary>
      <returns>A <see cref="T:System.ServiceProcess.ServiceAccount" /> that defines the type of account under which the system runs this service. The default is User.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>Implements the base class <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> method with no <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class-specific behavior.</summary>
      <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> that represents the service process. </param>
    </member>
    <member name="P:System.ServiceProcess.ServiceProcessInstaller.HelpText">
      <summary>Gets help text displayed for service installation options.</summary>
      <returns>Help text that provides a description of the steps for setting the user name and password in order to run the service under a particular account.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
      <summary>Writes service application information to the registry. This method is meant to be used by installation tools, which call the appropriate methods automatically.</summary>
      <param name="stateSaver">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="stateSaver" /> is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceProcessInstaller.Password">
      <summary>Gets or sets the password associated with the user account under which the service application runs.</summary>
      <returns>The password associated with the account under which the service should run. The default is an empty string (""). The property is not public, and is never serialized.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
      <summary>Rolls back service application information written to the registry by the installation procedure. This method is meant to be used by installation tools, which process the appropriate methods automatically.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="savedState" /> is null.-or- The <paramref name="savedState" /> is corrupted or non-existent. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceProcessInstaller.Username">
      <summary>Gets or sets the user account under which the service application will run.</summary>
      <returns>The account under which the service should run. The default is an empty string ("").</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.ServiceProcess.ServiceStartMode">
      <summary>Indicates the start mode of the service.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Manual">
      <summary>Indicates that the service is started only manually, by a user (using the Service Control Manager) or by an application.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Automatic">
      <summary>Indicates that the service is to be started (or was started) by the operating system, at system start-up. If an automatically started service depends on a manually started service, the manually started service is also started automatically at system startup.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Disabled">
      <summary>Indicates that the service is disabled, so that it cannot be started by a user or application.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceType">
      <summary>Represents the type of the service.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Adapter">
      <summary>A service for a hardware device that requires its own driver.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.FileSystemDriver">
      <summary>A file system driver, which is also a Kernel device driver.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.InteractiveProcess">
      <summary>A service that can communicate with the desktop.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.KernelDriver">
      <summary>A Kernel device driver such as a hard disk or other low-level hardware device driver.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.RecognizerDriver">
      <summary>A file system driver used during startup to determine the file systems present on the system.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Win32OwnProcess">
      <summary>A Win32 program that can be started by the Service Controller and that obeys the service control protocol. This type of Win32 service runs in a process by itself.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Win32ShareProcess">
      <summary>A Win32 service that can share a process with other Win32 services.</summary>
    </member>
    <member name="T:System.ServiceProcess.SessionChangeDescription">
      <summary>Identifies the reason for a Terminal Services session change.</summary>
    </member>
    <member name="M:System.ServiceProcess.SessionChangeDescription.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current session change description.</summary>
      <returns>true if <paramref name="obj" /> is equal to the current <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structure; otherwise, false.</returns>
      <param name="obj">The object to compare to the current <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structure.</param>
    </member>
    <member name="M:System.ServiceProcess.SessionChangeDescription.Equals(System.ServiceProcess.SessionChangeDescription)">
      <summary>Determines whether the specified session change description is equal to the current session change description.</summary>
      <returns>true if <paramref name="changeDescription" /> is equal to the current <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structure; otherwise, false.</returns>
      <param name="changeDescription">The <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structure to compare to the current <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structure.</param>
    </member>
    <member name="M:System.ServiceProcess.SessionChangeDescription.GetHashCode">
      <summary>Gets a hash code for the current session change description.</summary>
      <returns>A hash code for the current session change description.</returns>
    </member>
    <member name="M:System.ServiceProcess.SessionChangeDescription.op_Equality(System.ServiceProcess.SessionChangeDescription,System.ServiceProcess.SessionChangeDescription)">
      <summary>Returns a value indicating whether two <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structures are equal.</summary>
      <returns>true if <paramref name="a" /> and <paramref name="b" /> are equal; otherwise, false. </returns>
      <param name="a">A <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structure.</param>
      <param name="b">A <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structure.</param>
    </member>
    <member name="M:System.ServiceProcess.SessionChangeDescription.op_Inequality(System.ServiceProcess.SessionChangeDescription,System.ServiceProcess.SessionChangeDescription)">
      <summary>Returns a value indicating whether two <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structures are not equal.</summary>
      <returns>true if <paramref name="a" /> and <paramref name="b" /> are not equal; otherwise, false.</returns>
      <param name="a">A <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structure.</param>
      <param name="b">A <see cref="T:System.ServiceProcess.SessionChangeDescription" /> structure.</param>
    </member>
    <member name="P:System.ServiceProcess.SessionChangeDescription.Reason">
      <summary>Gets the reason for the session change.</summary>
      <returns>One of the <see cref="T:System.ServiceProcess.SessionChangeReason" /> values. </returns>
    </member>
    <member name="P:System.ServiceProcess.SessionChangeDescription.SessionId">
      <summary>Gets the session ID for the associated session.</summary>
      <returns>The session ID for the associated session.</returns>
    </member>
    <member name="T:System.ServiceProcess.SessionChangeReason">
      <summary>Specifies the reason for a Terminal Services session change notice.</summary>
    </member>
    <member name="F:System.ServiceProcess.SessionChangeReason.ConsoleConnect">
      <summary>A console session has connected.</summary>
    </member>
    <member name="F:System.ServiceProcess.SessionChangeReason.ConsoleDisconnect">
      <summary>A console session has disconnected.</summary>
    </member>
    <member name="F:System.ServiceProcess.SessionChangeReason.RemoteConnect">
      <summary>A remote session has connected.</summary>
    </member>
    <member name="F:System.ServiceProcess.SessionChangeReason.RemoteDisconnect">
      <summary>A remote session has disconnected.</summary>
    </member>
    <member name="F:System.ServiceProcess.SessionChangeReason.SessionLogon">
      <summary>A user has logged on to a session.</summary>
    </member>
    <member name="F:System.ServiceProcess.SessionChangeReason.SessionLogoff">
      <summary>A user has logged off from a session.</summary>
    </member>
    <member name="F:System.ServiceProcess.SessionChangeReason.SessionLock">
      <summary>A session has been locked.</summary>
    </member>
    <member name="F:System.ServiceProcess.SessionChangeReason.SessionUnlock">
      <summary>A session has been unlocked.</summary>
    </member>
    <member name="F:System.ServiceProcess.SessionChangeReason.SessionRemoteControl">
      <summary>The remote control status of a session has changed.</summary>
    </member>
    <member name="T:System.ServiceProcess.TimeoutException">
      <summary>The exception that is thrown when a specified timeout has expired.</summary>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.TimeoutException" /> class with no message text.</summary>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instace of the <see cref="T:System.ServiceProcess.TimeoutException" /> class with the specified serialization information and context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.TimeoutException" /> class with the specified message text.</summary>
      <param name="message">Text that describes the type or source of the exception.</param>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.TimeoutException" /> class with the specified message text and inner exception.</summary>
      <param name="message">Text that describes the type or source of the exception.</param>
      <param name="innerException">The exception that caused the current exception. </param>
    </member>
    <member name="T:System.ServiceProcess.Design.ServiceInstallerDialog">
      <summary>Provides a dialog box, which prompts for account information of a Windows Service application.</summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceInstallerDialog.#ctor">
      <summary>Initializes a new instance of the service account form.</summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceInstallerDialog.Main">
      <summary>Begins running a standard application message loop and displays the service account form.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.Design.ServiceInstallerDialog.Password">
      <summary>Gets or sets the password for the service account form.</summary>
      <returns>A string representing the password in the service account form. The default is an empty string ("").</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.Design.ServiceInstallerDialog.Result">
      <summary>Gets the dialog result for the service account form.</summary>
      <returns>A <see cref="T:System.ServiceProcess.Design.ServiceInstallerDialogResult" /> indicating the user response to the dialog box. The default is OK.</returns>
    </member>
    <member name="P:System.ServiceProcess.Design.ServiceInstallerDialog.Username">
      <summary>Gets or sets the user name for the service account form.</summary>
      <returns>A string representing the user name in the service account form. The default is an empty string ("").</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.ServiceProcess.Design.ServiceInstallerDialogResult">
      <summary>Specifies the return value of a <see cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" /> form.</summary>
    </member>
    <member name="F:System.ServiceProcess.Design.ServiceInstallerDialogResult.OK">
      <summary>The dialog return value is OK. This value typically indicates that the user confirmed the account properties and pressed the OK button to close the dialog.</summary>
    </member>
    <member name="F:System.ServiceProcess.Design.ServiceInstallerDialogResult.UseSystem">
      <summary>Install the service with a system account rather than a user account. This value typically indicates that the dialog was not displayed to the user. For example, the <see cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" /> property is set to something other than User.</summary>
    </member>
    <member name="F:System.ServiceProcess.Design.ServiceInstallerDialogResult.Canceled">
      <summary>The dialog return value is Canceled. This value typically indicates that the user canceled out of the dialog without setting the account fields.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.ServiceModel.Web.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Web</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.WebHttpBinding">
      <summary>A binding used to configure endpoints for  Web services that are exposed through HTTP requests instead of SOAP messages.</summary>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WebHttpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WebHttpBinding" /> class with the type of security used by the binding explicitly specified.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.WebHttpSecurityMode" /> that specifies the type of security that is used to configure a service endpoint to receive HTTP requests.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="securityMode" /> specified is not a valid <see cref="T:System.ServiceModel.WebHttpSecurityMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WebHttpBinding" /> class with a binding specified by its configuration name.</summary>
      <param name="configurationName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element with the name <paramref name="configurationName" /> was not found.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if cookies are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>true to bypass the proxy server for local addresses; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.ContentTypeMapper">
      <summary>Gets or sets the content type mapper.</summary>
      <returns>The content type mapper.</returns>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the <see cref="T:System.ServiceModel.Channels.BindingElement" /> objects for the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled">
      <summary>Gets or sets a value that determines if cross domain script access is enabled.</summary>
      <returns>true if cross domain scripting is enabled; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.EnvelopeVersion">
      <summary>Gets the envelope version that is used by endpoints that are configured by this binding to receive HTTP requests.</summary>
      <returns>The <see cref="T:System.ServiceModel.EnvelopeVersion" /> with the <see cref="P:System.ServiceModel.EnvelopeVersion.None" /> property that is used with endpoints configured with this binding to receive HTTP requests. </returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value set is not a valid <see cref="T:System.ServiceModel.HostnameComparisonMode" />      value.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory allocated for the buffer manager that manages the buffers required by endpoints that use this binding.</summary>
      <returns>The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.MaxBufferSize">
      <summary>Gets or sets the maximum amount of memory that is allocated for use by the manager of the message buffers that receive messages from the channel.</summary>
      <returns>The maximum amount of memory, in bytes, available for use by the message buffer manager. The default value is 524,288 (0x80000) bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be processed by the binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">A message exceeded the maximum size allocated.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The quota values of <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> are read only.</exception>
      <exception cref="T:System.ArgumentException">The quotas set must be positive.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>"https" if the <see cref="P:System.ServiceModel.WebHttpBinding.Security" /> is set to <see cref="F:System.ServiceModel.WebHttpSecurityMode.Transport" />; "http" if it is set to <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.Security">
      <summary>Gets the security settings used with this binding.  </summary>
      <returns>The <see cref="T:System.ServiceModel.WebHttpSecurity" /> that is used with this binding. The default value is <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />. </returns>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas">
      <summary>Determines if reader quotas should be serialized.</summary>
      <returns>true if reader quotas should be serialized; otherwise false.</returns>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity">
      <summary>Determines if security settings should be serialized.</summary>
      <returns>true if security settings should be serialized; otherwise false.</returns>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding">
      <summary>Determines if the encoding used for serialization should be serialized.</summary>
      <returns>true if the encoding should be serialized; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>true if incoming requests are handled synchronously; false if incoming requests are handled asynchronously. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.TransferMode">
      <summary>Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. The default value is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value set is not a valid <see cref="T:System.ServiceModel.TransferMode" /> value.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false. The default value is true.  </returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.WriteEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="T:System.ServiceModel.WebHttpSecurity">
      <summary>Specifies the types of security available to a service endpoint configured to receive HTTP requests.</summary>
    </member>
    <member name="M:System.ServiceModel.WebHttpSecurity.#ctor"></member>
    <member name="P:System.ServiceModel.WebHttpSecurity.Mode">
      <summary>Gets or sets the mode of security that is used by an endpoint configured to receive HTTP requests with a <see cref="T:System.ServiceModel.WebHttpBinding" />.</summary>
      <returns>A value of the <see cref="T:System.ServiceModel.WebHttpSecurityMode" /> that indicates whether transport-level security or no security is used by an endpoint. The default value is <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.ServiceModel.WebHttpSecurityMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.WebHttpSecurity.ShouldSerializeMode"></member>
    <member name="M:System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport"></member>
    <member name="P:System.ServiceModel.WebHttpSecurity.Transport">
      <summary>Gets an object that contains the transport-level security settings for this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.HttpTransportSecurity" /> for this binding. The default values set are a <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" /> of <see cref="F:System.ServiceModel.HttpClientCredentialType.None" />, a <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" /> of <see cref="F:System.ServiceModel.HttpProxyCredentialType.None" />, and <see cref="P:System.ServiceModel.HttpTransportSecurity.Realm" /> = "".</returns>
    </member>
    <member name="T:System.ServiceModel.WebHttpSecurityMode">
      <summary>Defines the modes of security that can be used to configure a service endpoint to receive HTTP requests.</summary>
    </member>
    <member name="F:System.ServiceModel.WebHttpSecurityMode.None">
      <summary>Indicates no security is used with HTTP requests.</summary>
    </member>
    <member name="F:System.ServiceModel.WebHttpSecurityMode.Transport">
      <summary>Indicates that transport-level security is used with HTTP requests.</summary>
    </member>
    <member name="F:System.ServiceModel.WebHttpSecurityMode.TransportCredentialOnly">
      <summary>Indicates that only HTTP-based client authentication is provided.</summary>
    </member>
    <member name="T:System.ServiceModel.Activation.WebScriptServiceHostFactory">
      <summary>Automatically adds an ASP.NET AJAX endpoint to a service, without requiring configuration, in a managed hosting environment that dynamically activates host instances for the service in response to incoming messages. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <summary>Creates a derived class of <see cref="T:System.ServiceModel.ServiceHost" /> for a specified type of service with a specific base address that can be used to automatically enable ASP.NET AJAX endpoints in certain scenarios.</summary>
      <returns>A <see cref="T:System.ServiceModel.ServiceHost" /> for the type of service specified with the specified base address.</returns>
      <param name="serviceType">The type of service to host. </param>
      <param name="baseAddresses">The <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the service hosted.</param>
      <exception cref="T:System.InvalidOperationException">Another service uses the same base address, or another endpoint is using the same address as the ASP.NET AJAX endpoint that this factory is trying to create.</exception>
    </member>
    <member name="T:System.ServiceModel.Activation.WebServiceHostFactory">
      <summary>A factory that provides instances of <see cref="T:System.ServiceModel.Web.WebServiceHost" /> in managed hosting environments where the host instance is created dynamically in response to incoming messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.WebServiceHostFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.WebServiceHostFactory" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <summary>Creates an instance of the specified <see cref="T:System.ServiceModel.Web.WebServiceHost" /> derived class with the specified base addresses.</summary>
      <returns>An instance of a <see cref="T:System.ServiceModel.ServiceHost" /> derived class.</returns>
      <param name="serviceType">The type of service host to create.</param>
      <param name="baseAddresses">An array of base addresses for the service.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty">
      <summary>Enables the use of a JavaScript callback in a service operation response using JSON Padding (JSONP).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty.CallbackFunctionName">
      <summary>Gets or sets the name of the callback function used with JSONP.</summary>
      <returns>The name of the callback function.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty.Name">
      <summary>Gets the message property name used to add a JavaScript callback message property to a service operation response using JSONP.</summary>
      <returns>The message property name.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty.StatusCode">
      <summary>Gets or sets the HTTP status code.</summary>
      <returns>The HTTP status code.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamBodyWriter">
      <summary>An abstract base class used to create custom <see cref="T:System.ServiceModel.Channels.BodyWriter" /> classes that can be used to a message body as a stream.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamBodyWriter.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamBodyWriter" /> class.</summary>
      <param name="isBuffered">true if the stream is buffered; otherwise false.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamBodyWriter.OnCreateBufferedCopy(System.Int32)">
      <summary>Override this method to create a buffered copy of the stream.</summary>
      <returns>A body writer.</returns>
      <param name="maxBufferSize">The maximum buffer size.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamBodyWriter.OnWriteBodyContents(System.IO.Stream)">
      <summary>Override this method to handle writing the message body contents.</summary>
      <param name="stream">The stream to write to.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamBodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Override this method to handle writing the message body contents.</summary>
      <param name="writer">The writer to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty">
      <summary>Stores and retrieves the message encoding format of incoming and outgoing messages for the composite Web message encoder.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebBodyFormatMessageProperty.#ctor(System.ServiceModel.Channels.WebContentFormat)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty" /> class with a specified format.</summary>
      <param name="format">The <see cref="T:System.ServiceModel.Channels.WebContentFormat" /> of the message body.</param>
      <exception cref="T:System.ArgumentException">The format cannot be set to the <see cref="F:System.ServiceModel.Channels.WebContentFormat.Default" /> value in the constructor.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebBodyFormatMessageProperty.CreateCopy">
      <summary>Returns the current instance of the current property.</summary>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> interface that is a copy of the current <see cref="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebBodyFormatMessageProperty.Format">
      <summary>Gets the format used for the message body.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.WebContentFormat" /> that specifies the format used for the message body.</returns>
    </member>
    <member name="F:System.ServiceModel.Channels.WebBodyFormatMessageProperty.Name">
      <summary>Returns the name of the property.</summary>
      <returns>Returns: "WebBodyFormatMessageProperty".</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WebBodyFormatMessageProperty.ToString">
      <summary>Returns the name of the property and the encoding format used when constructed.</summary>
      <returns>Returns "WebBodyFormatMessageProperty: EncodingFormat={0}", where {0} is WebContentFormat.ToString(), which specifies the encoding format used.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.WebContentFormat">
      <summary>Specifies the message formats to which content types of incoming messages can be mapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Default">
      <summary>The format to map to cannot be determined.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Xml">
      <summary>Map to the XML format.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Json">
      <summary>Map to the JSON format.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Raw">
      <summary>Map to the "Raw" binary format.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.WebContentTypeMapper">
      <summary>Specifies the format to which the content type of an incoming message is mapped.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebContentTypeMapper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType(System.String)">
      <summary>When overridden in a derived class, returns the message format used for a specified content type.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.WebContentFormat" /> that specifies the format to which the message content type is mapped. </returns>
      <param name="contentType">The content type that indicates the MIME type of data to be interpreted.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement">
      <summary>Enables plain-text XML, JavaScript Object Notation (JSON) message encodings and "raw" binary content to be read and written when used in a  binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.#ctor(System.Text.Encoding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement" /> class with a specified write character encoding. </summary>
      <param name="writeEncoding">The <see cref="T:System.Text.Encoding" /> to be used to write characters in a message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writeEncoding" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> is not a supported message text encoding.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel listener stack on the client that accepts a specified type of channel for a specified context.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.</summary>
      <returns>true if the specified channel listener stack can be built on the service; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.Clone">
      <summary>Creates a new <see cref="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement" /> object initialized from the current one.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement" /> object with property values equal to those of the current element.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.ContentTypeMapper">
      <summary>Gets or sets how the content type of an incoming message is mapped to a format.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" /> that indicates the format for the content type of the incoming message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Creates a message encoder factory that produces message encoders that can write either JavaScript Object Notation (JSON) or XML messages.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> that encodes JSON, XML or "raw" binary messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.CrossDomainScriptAccessEnabled"></member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns the object of the type requested, if present, from the appropriate layer in the channel stack, or null if it is not present.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the current binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> set is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.MaxReadPoolSize">
      <summary>Gets or sets a value that specifies the maximum number of readers that is allocated to a pool and that is available to process incoming messages without allocating new readers.</summary>
      <returns>The maximum number of readers available to process incoming messages. The default value is 64 readers of each type.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.MaxWritePoolSize">
      <summary>Gets or sets a value that specifies the maximum number of writers that is allocated to a pool and that is available to process outgoing messages without allocating new writers.</summary>
      <returns>The maximum number of writers available to process outgoing messages. The default is 16 writers of each type.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.MessageVersion">
      <summary>Gets or sets the message version that indicates that the binding element does not use SOAP or WS-Addressing.</summary>
      <returns>
        <see cref="P:System.ServiceModel.Channels.MessageVersion.None" />
      </returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
      <exception cref="T:System.ArgumentException">The value set is neither null nor <see cref="P:System.ServiceModel.Channels.MessageVersion.None" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.ReaderQuotas">
      <summary>Gets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages that are exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)"></member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)"></member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.WriteEncoding">
      <summary>Gets or sets the character encoding that is used to write the message text.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used to write the message text. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpBindingCollectionElement">
      <summary>Represents a configuration element that contains sub-elements that specify settings for using the <see cref="T:System.ServiceModel.WebHttpBinding" /> binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WebHttpBindingCollectionElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingCollectionElement.GetDefault">
      <summary>Gets the default binding used.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Binding" /> object that represents the default binding.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpBindingElement">
      <summary>A binding element used to configure endpoints for  Web services that respond to HTTP requests instead of SOAP messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" /> class and specifies the name of the element. </summary>
      <param name="name">The name that is used for this binding configuration element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if cookies are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.BindingElementType">
      <summary>Gets the <see cref="T:System.Type" /> of binding that this configuration element represents.</summary>
      <returns>The binding type.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>true to bypass the proxy server for local addresses; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.ContentTypeMapper">
      <summary>Gets or sets how the content type of an incoming message is mapped to a format.</summary>
      <returns>A string that points to the mapper which indicates the format for the content type of the incoming message.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.CrossDomainScriptAccessEnabled">
      <summary>Gets or sets a value that indicates whether cross domain scripting is permitted. </summary>
      <returns>true if cross domain scripting is permitted; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value set is not a valid <see cref="T:System.ServiceModel.HostnameComparisonMode" />      value.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes the contents of this binding configuration element from the property values of a specified binding.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to initialize this configuration element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory allocated for the buffer manager that manages the buffers required by endpoints that use this binding.</summary>
      <returns>The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum amount of memory that is allocated for use by the manager of the message buffers that receive messages from the channel.</summary>
      <returns>The maximum amount of memory, in bytes, available for use by the message buffer manager. The default value is 524,288 (0x80000) bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be processed by the binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">A message exceeded the maximum size allocated.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Initializes the property values of a specified binding from the contents of this binding configuration element.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> that is initialized from the contents of this binding configuration element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The type of this binding element is different from the type specified by <paramref name="binding" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.ReaderQuotas">
      <summary>Gets or sets the configuration element that contains the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" /> that specifies the complexity constraints.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The quota values of <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> are read only.</exception>
      <exception cref="T:System.ArgumentException">The quotas set must be positive.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.Security">
      <summary>Gets the configuration element that contains the security settings used with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Configuration.WebHttpSecurityElement" /> that is used with this binding. The default value is <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.TransferMode">
      <summary>Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. The default value is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value set is not a valid <see cref="T:System.ServiceModel.TransferMode" /> value.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false. The default value is true.  </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.WriteEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpElement">
      <summary>Enables the <see cref="T:System.ServiceModel.Description.WebHttpBehavior" /> for an endpoint through configuration.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WebHttpElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.AutomaticFormatSelectionEnabled">
      <summary>Gets or sets a value that indicates whether the message format can be automatically selected.</summary>
      <returns>true if the message format can be automatically selected; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.BehaviorType">
      <summary>Gets the type of the behavior enabled by this configuration element.</summary>
      <returns>The <see cref="T:System.Type" /> for the behavior enabled with the configuration element: <see cref="T:System.ServiceModel.Description.WebHttpBehavior" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.DefaultBodyStyle">
      <summary>Gets and sets the default message body style.</summary>
      <returns>One of the values defined in the <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> enumeration.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.DefaultOutgoingResponseFormat">
      <summary>Gets and sets the default outgoing response format.</summary>
      <returns>One of the values defined in the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.FaultExceptionEnabled">
      <summary>Gets or sets the flag that specifies whether a FaultException is generated when an internal server error (HTTP status code: 500) occurs.</summary>
      <returns>Returns true if the flag is enabled; otherwise returns false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.HelpEnabled">
      <summary>Gets or sets a value that indicates whether help is enabled.</summary>
      <returns>true if help is enabled; otherwise, false. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpEndpointCollectionElement">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointCollectionElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Configuration.WebHttpEndpointCollectionElement" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpEndpointElement">
      <summary>Represents a WCF configuration element for a web service application.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Configuration.WebHttpEndpointElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.AutomaticFormatSelectionEnabled">
      <summary>Gets or sets whether automatic formatting selection is turned on.</summary>
      <returns>true if automatic formatting is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.ContentTypeMapper">
      <summary>Gets or sets the type of MIME content of the data sent by a web service operations.</summary>
      <returns>A string that contains the name of a MIME content.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <summary>Creates a new endpoint of type <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" /> with the specified contract description.</summary>
      <returns>A service endpoint.</returns>
      <param name="contractDescription">An object of type <see cref="T:System.ServiceModel.Description.ContractDescription" /> that specifies what an endpoint communicates to the outside world, including the signature of the operations in terms of messages exchanged, the data types of these messages, the location of the operations, and the specific protocols and serialization formats that are used to support successful communication with the service.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.CrossDomainScriptAccessEnabled">
      <summary>Gets or sets whether a condition is enabled that allows code injection into web pages viewed by other users.</summary>
      <returns>true if access is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.DefaultOutgoingResponseFormat">
      <summary>Gets or sets the default format for responses sent out from a web service operations.</summary>
      <returns>A format object.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.EndpointType">
      <summary>Gets the type of the <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" />.</summary>
      <returns>A type object.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.FaultExceptionEnabled">
      <summary>Gets or sets the flag that specifies whether a FaultException is generated when an internal server error (HTTP status code: 500) occurs.</summary>
      <returns>Returns true if the flag is enabled; otherwise returns false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.HelpEnabled">
      <summary>Gets or sets whether help is enabled.</summary>
      <returns>true if help is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.HostNameComparisonMode">
      <summary>Gets or sets the web service host name and URI matching rule that is configured in the binding element and used by transports such as HTTP, TCP, and named pipes when dispatching incoming messages.</summary>
      <returns>An enumerated comparison mode.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory allocated for the buffer manager that manages the buffers required by endpoints using this binding.</summary>
      <returns>A 64-bit representation of a number.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.MaxBufferSize">
      <summary>Gets or sets the maximum buffer size to use.</summary>
      <returns>A number representing buffer size.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum number of messages that can be received by the web service.</summary>
      <returns>A 64-bit number representing a maximum quantity.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to a <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" />.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to which web HTTP configuration settings are applied.</param>
      <param name="serviceEndpointElement">Not implemented.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to a <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" />.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to which web HTTP configuration settings are applied.</param>
      <param name="serviceEndpointElement">Not implemented.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Initializes and verifies the format of a specified channel endpoint element and configures it to include web HTTP content.</summary>
      <param name="channelEndpointElement">The channel endpoint element to initialize and validate. </param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Initializes and verifies the format of a specified service endpoint element and configures it to include web HTTP content.</summary>
      <param name="serviceEndpointElement">The service endpoint element to initialize and validate.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.Properties">
      <summary>Gets the collection of <see cref="T:System.ConfigurationProperty" /> objects associated with the current <see cref="T:System.ServiceModel.Configuration.WebHttpEndpointElement" />.</summary>
      <returns>A collection of configuration properties.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.ReaderQuotas">
      <summary>Gets the <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" /> object that contains contraints on length and complexity of XML strings that are read by the XML dictionary reader.</summary>
      <returns>An object that contains XML dictionary reader quotas.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.Security">
      <summary>Gets an element that configures the security for a web service with endpoints that receive HTTP requests.</summary>
      <returns>A web service security element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.TransferMode">
      <summary>Gets or sets the WCF method of transporting data across a network between endpoints.</summary>
      <returns>An enumeration of transfer modes.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.WriteEncoding">
      <summary>Gets or sets the string to be encoded.</summary>
      <returns>Encoded text.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpSecurityElement">
      <summary>An XML element that configures the security for a service with endpoints that receive HTTP requests. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WebHttpSecurityElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpSecurityElement.Mode">
      <summary>Gets an XML element that specifies the security mode for a basic HTTP service.</summary>
      <returns>A value of <see cref="T:System.ServiceModel.WebHttpSecurityMode" /> that indicates whether transport-level security or no security is used by an endpoint. The default value is <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.ServiceModel.WebHttpSecurityMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpSecurityElement.Transport">
      <summary>Gets an XML element that indicates the transport-level security settings for a service endpoint configured to receive HTTP requests.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.WebHttpSecurityElement" /> that specifies the transport-level security settings. The default values set are a <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" /> of <see cref="F:System.ServiceModel.HttpClientCredentialType.None" />, a <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" /> of <see cref="F:System.ServiceModel.HttpProxyCredentialType.None" />, and <see cref="P:System.ServiceModel.HttpTransportSecurity.Realm" /> = "".</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebMessageEncodingElement">
      <summary>Represents the configuration element that specifies the character encoding used for non-SOAP messages. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebMessageEncodingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WebMessageEncodingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this binding configuration section.</summary>
      <param name="bindingElement">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be applied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.BindingElementType">
      <summary>Gets the type of the binding element enabled by this configuration element.</summary>
      <returns>The type of binding element enabled by this configuration element: <see cref="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebMessageEncodingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration section to this element.</summary>
      <param name="from">The <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.MaxReadPoolSize">
      <summary>Gets or sets a value that specifies the maximum number of messages that can be read simultaneously without allocating new readers.</summary>
      <returns>The maximum number of messages that can be read simultaneously without allocating new readers. The default is 64.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.MaxWritePoolSize">
      <summary>Gets or sets a value that specifies the maximum number of messages that can be sent simultaneously without allocating new writers.</summary>
      <returns>The maximum number of messages that can be sent simultaneously without allocating new writers. The default is 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" /> that specifies the complexity constraints. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.WebContentTypeMapperType">
      <summary>Gets or sets the type name of a <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" /> that specifies the format to which the content type of an incoming message is mapped.</summary>
      <returns>The type name of a <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.WriteEncoding">
      <summary>Gets or sets the character set encoding to be used for emitting messages on the binding.</summary>
      <returns>A valid <see cref="T:System.Text.Encoding" /> value that specifies the character set encoding to be used for emitting messages on the binding. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebScriptEnablingElement">
      <summary>Enables the <see cref="T:System.ServiceModel.Description.WebScriptEnablingBehavior" /> for an endpoint through configuration.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEnablingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WebScriptEnablingElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEnablingElement.BehaviorType">
      <summary>Gets the type of the behavior enabled by this configuration element.</summary>
      <returns>The <see cref="T:System.Type" /> for the behavior enabled with the configuration element: <see cref="T:System.ServiceModel.Description.WebScriptEnablingBehavior" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebScriptEndpointCollectionElement">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointCollectionElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Configuration.WebScriptEndpointCollectionElement" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebScriptEndpointElement">
      <summary>Represents a custom configuration element that defines a <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" /> in a configuration file.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.#ctor">
      <summary>Initiates a new instance of the <see cref="T:System.ServiceModel.Configuration.WebScriptEndpointElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.ContentTypeMapper">
      <summary>Gets or sets the name of the group of behaviors and metadata that produce the web document configured by the current <see cref="T:System.ServiceModel.Configuration.WebScriptEndpointElement" />.</summary>
      <returns>The name of a content type.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <summary>Initiates a new <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" /> with the specified <see cref="T:System.ServiceModel.Description.ContractDescription" />.</summary>
      <returns>A web script endpoint.</returns>
      <param name="contractDescription">An object whose properties define an endpoint’s characteristics, includingthe signature of the operations in terms of messages exchangedthe data types of these messages, the location of the operationsthe specific protocols and serialization formats that are used to support successful communication with the service</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.CrossDomainScriptAccessEnabled">
      <summary>Gets or sets whether different host computers can access each others’ scripts.</summary>
      <returns>true if cross domain script access is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.EndpointType">
      <summary>Gets the type of the <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
      <returns>An web script endpoint object.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.HostNameComparisonMode">
      <summary>Specifies how the host name should be used in URI comparisons when dispatching an incoming message to a <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
      <returns>An enumerated description of a comparison mode.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size of any buffer pools used by the message transport.</summary>
      <returns>The maximum buffer pool size.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer used to receive messages.</summary>
      <returns>The maximum buffer size.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum byte size of messages received by a <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />. </summary>
      <returns>The maximum byte size.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to a <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to convert.</param>
      <param name="serviceEndpointElement">Not used.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to a <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to convert.</param>
      <param name="serviceEndpointElement">Not used.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Initializes and verifies the format of the specified <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" /> and configures it to include web HTTP binding content.</summary>
      <param name="channelEndpointElement">The <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" /> to be initialized.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Initializes and verifies the format of the specified <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" /> and configures it to include web HTTP binding content.</summary>
      <param name="serviceEndpointElement">The <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" /> to be initialized.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.Properties">
      <summary>Gets all the properties attached to the current <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
      <returns>A collection of endpoint element properties.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.ReaderQuotas">
      <summary>Gets a configuration element that defines the constraints on the complexity of messages that can be processed by <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" /> objects.</summary>
      <returns>A configuration element that defines Xml dictionary reader quotas. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.Security">
      <summary>Gets an HTTP web security binding element.</summary>
      <returns>A web script endpoint configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.TransferMode">
      <summary>Gets or sets the manner in which WCF messages are transported.</summary>
      <returns>An object that contains a string that designates a WCF message transfer mode.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.WriteEncoding">
      <summary>Gets or sets the encoding that is used to format the characters in a text message.</summary>
      <returns>The character encoding.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.JsonFaultDetail">
      <summary>Represents a SOAP fault that is specified in the service contract for use with JSON.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.JsonFaultDetail.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.JsonFaultDetail" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.JsonFaultDetail.ExceptionDetail">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.ExceptionDetail" /> object that represents a SOAP fault that is specified in the service contract.</summary>
      <returns>The SOAP fault that is specified in the service contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.JsonFaultDetail.ExceptionType">
      <summary>Gets or sets the type of the exception.</summary>
      <returns>The type of the exception.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.JsonFaultDetail.Message">
      <summary>Gets or sets the exception message.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.JsonFaultDetail.StackTrace">
      <summary>Gets or sets the stack trace information for this exception.</summary>
      <returns>The stack trace information for this exception.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WebHttpBehavior">
      <summary>Enables the Web programming model for a  service.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WebHttpBehavior" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method to pass data at runtime to bindings to support custom behavior.</summary>
      <param name="endpoint">The endpoint.</param>
      <param name="bindingParameters">The binding parameters that support modifying the bindings.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.AddClientErrorInspector(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Adds a client error inspector to the specified service endpoint.</summary>
      <param name="endpoint">The service endpoint.</param>
      <param name="clientRuntime">The client runtime.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.AddServerErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Override this method to change the way errors that occur on the service are handled.</summary>
      <param name="endpoint">The service endpoint.</param>
      <param name="endpointDispatcher">The endpoint dispatcher.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> method to support modification or extension of the client across an endpoint.</summary>
      <param name="endpoint">The endpoint that exposes the contract.</param>
      <param name="clientRuntime">The client to which the custom behavior is applied.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> method to support modification or extension of the client across an endpoint.</summary>
      <param name="endpoint">The endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to which the behavior is applied.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.AutomaticFormatSelectionEnabled">
      <summary>Gets or sets a value that determines if automatic format selection is enabled.</summary>
      <returns>true if automatic format selection is enabled; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultBodyStyle">
      <summary>Gets and sets the default message body style.</summary>
      <returns>One of the values defined in the <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> enumeration.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingRequestFormat">
      <summary>Gets and sets the default outgoing request format.</summary>
      <returns>One of the values defined in the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingResponseFormat">
      <summary>Gets and sets the default outgoing response format.</summary>
      <returns>One of the values defined in the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.FaultExceptionEnabled">
      <summary>Gets or sets the flag that specifies whether a FaultException is generated when an internal server error (HTTP status code: 500) occurs.</summary>
      <returns>Returns true if the flag is enabled; otherwise returns false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetOperationSelector(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" /> object.</summary>
      <returns>An instance of <see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" /> that contains the operation selector for the specified endpoint.</returns>
      <param name="endpoint">The endpoint that exposes the contract.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetQueryStringConverter(System.ServiceModel.Description.OperationDescription)">
      <summary>Gets the query string converter.</summary>
      <returns>A <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> instance.</returns>
      <param name="operationDescription">The service operation.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Gets the reply formatter on the client for the specified endpoint and service operation.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> reference to the reply formatter on the client for the specified operation and endpoint.</returns>
      <param name="operationDescription">The service operation.</param>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Gets the reply formatter on the service for the specified endpoint and service operation.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" /> reference to the reply formatter on the service for the specified operation and endpoint.</returns>
      <param name="operationDescription">The service operation.</param>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Gets the request formatter on the client for the specified service operation and endpoint.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> reference to the request formatter on the client for the specified operation and endpoint.</returns>
      <param name="operationDescription">The service operation.</param>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Gets the request formatter on the service for the given service operation and service endpoint.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" /> reference to the request formatter on the service for the specified operation and endpoint.</returns>
      <param name="operationDescription">The service operation.</param>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.HelpEnabled">
      <summary>Gets or sets a value that determines if the  Help page is enabled.</summary>
      <returns>true if the Help page is enabled; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.JavascriptCallbackParameterName">
      <summary>Gets or sets the JavaScript callback parameter name.</summary>
      <returns>The JavaScript callback parameter name.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Confirms that the endpoint meets the requirements for the Web programming model.</summary>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ValidateBinding(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Ensures the binding is valid for use with the WCF Web Programming Model.</summary>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="T:System.ServiceModel.Description.WebHttpEndpoint">
      <summary>A standard endpoint with a fixed <see cref="T:System.ServiceModel.WebHttpBinding" /> binding that automatically adds the <see cref="T:System.ServiceModel.Description.WebHttpBehavior" /> behavior.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" /> class with the specified <see cref="T:System.ServiceModel.Description.ContractDescription" />.</summary>
      <param name="contract">The contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" /> class with the specified <see cref="T:System.ServiceModel.Description.ContractDescription" /> and <see cref="T:System.ServiceModel.EndpointAddress" />.</summary>
      <param name="contract">The contract description.</param>
      <param name="address">The endpoint address.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpEndpoint.AutomaticFormatSelectionEnabled">
      <summary>Gets or sets a value that indicates whether automatic format selection is enabled.</summary>
      <returns>true if automatic format selection is enabled, otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpEndpoint.DefaultOutgoingResponseFormat">
      <summary>Gets or sets the default outgoing response format.</summary>
      <returns>The default response format for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpEndpoint.FaultExceptionEnabled">
      <summary>Gets or sets the flag that specifies whether a FaultException is generated when an internal server error (HTTP status code: 500) occurs.</summary>
      <returns>Returns true if the flag is enabled; otherwise returns false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpEndpoint.HelpEnabled">
      <summary>Gets or sets a value that indicates whether the HTTP help page is enabled for the endpoint.</summary>
      <returns>true if the HTTP help page is enabled; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpEndpoint.WebEndpointType">
      <summary>Gets the <see cref="T:System.Type" /> of the endpoint.</summary>
      <returns>The type of the endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WebScriptEnablingBehavior">
      <summary>Provides support for the behavior that enables  endpoints to receive HTTP requests from a browser-based ASP.NET AJAX client. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEnablingBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WebScriptEnablingBehavior" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEnablingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Applies the behavior to the client across an endpoint.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> that exposes the contract.</param>
      <param name="clientRuntime">The <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> to which the custom behavior is applied.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEnablingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Applies the behavior to the service endpoint.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> that exposes the contract.</param>
      <param name="endpointDispatcher">The <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> to which the custom behavior is applied.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.AutomaticFormatSelectionEnabled">
      <summary>Gets or sets a value that determines if automatic format selection is enabled.</summary>
      <returns>true if automatic format selection is enabled; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultBodyStyle">
      <summary>Gets or sets the default message body style.</summary>
      <returns>The <see cref="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest" /> value. This default value is the only valid value.</returns>
      <exception cref="T:System.NotSupportedException">The body style set is not supported.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingRequestFormat">
      <summary>Gets or sets the default outgoing request message format.</summary>
      <returns>The <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> used by outgoing request messages. The default value is <see cref="F:System.ServiceModel.Web.WebMessageFormat.Json" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The message format set is not a valid value of <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingResponseFormat">
      <summary>Gets and sets the default outgoing response message format.</summary>
      <returns>The <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> used by outgoing response messages. The default value is <see cref="F:System.ServiceModel.Web.WebMessageFormat.Json" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The message format set is not a valid value of <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.FaultExceptionEnabled">
      <summary>Gets or sets the flag that specifies whether a FaultException is generated when an internal server error (HTTP status code: 500) occurs.</summary>
      <returns>Returns true if the flag is enabled; otherwise returns false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.HelpEnabled">
      <summary>Gets or sets a value that determines if the  REST Help page is enabled.</summary>
      <returns>true if the  REST Help page is enabled; otherwise false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEnablingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Confirms that the endpoint meets the requirements that allow it to function as an ASP.NET AJAX endpoint.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> that exposes the contract.</param>
      <exception cref="T:System.InvalidOperationException">The endpoint does not meet one of the requirements for being an ASP.NET AJAX endpoint.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.WebScriptEndpoint">
      <summary>A standard endpoint with a fixed <see cref="T:System.ServiceModel.WebHttpBinding" /> binding that automatically adds the <see cref="T:System.ServiceModel.Description.WebScriptEnablingBehavior" /> behavior. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" /> class with the specified <see cref="T:System.ServiceModel.Description.ContractDescription" />.</summary>
      <param name="contract">The contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" /> class with the specified <see cref="T:System.ServiceModel.Description.ContractDescription" /> and <see cref="T:System.ServiceModel.EndpointAddress" />.</summary>
      <param name="contract">The contract description.</param>
      <param name="address">The endpoint address.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEndpoint.WebEndpointType">
      <summary>Gets the <see cref="T:System.Type" /> of the endpoint.</summary>
      <returns>The type of the endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WebServiceEndpoint">
      <summary>A standard endpoint with a fixed <see cref="T:System.ServiceModel.WebHttpBinding" /> binding.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.ContentTypeMapper">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" /> associated with the <see cref="T:System.ServiceModel.Description.WebServiceEndpoint" />.</summary>
      <returns>The Web content type mapper.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.CrossDomainScriptAccessEnabled">
      <summary>Gets or sets a value that indicates whether cross domain script access is enabled for the <see cref="T:System.ServiceModel.Description.WebServiceEndpoint" />.</summary>
      <returns>true if cross domain script access is enabled, otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value set is not a valid <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory allocated for the buffer manager that manages the buffers required by endpoints that use this binding.</summary>
      <returns>The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.MaxBufferSize">
      <summary>Gets or sets the maximum amount of memory that is allocated for use by the manager of the message buffers that receive messages from the channel.</summary>
      <returns>The maximum amount of memory, in bytes, available for use by the message buffer manager. The default value is 524,288 (0x80000) bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be processed by the binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">A message exceeded the maximum size allocated.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The complexity constraints.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The quota values of <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> are read only.</exception>
      <exception cref="T:System.ArgumentException">The quotas set must be positive.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.Security">
      <summary>Gets the security settings used with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.WebHttpSecurity" /> that is used with this binding. The default value is <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.TransferMode">
      <summary>Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. The default value is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value set is not a valid <see cref="T:System.ServiceModel.TransferMode" /> value.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.WebEndpointType">
      <summary>Gets the of the Web service endpoint.</summary>
      <returns>The type of Web service endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.WriteEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The character encoding that is used. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
      <summary>This class converts a parameter value to and from a JavaScript Object Notation (JSON). </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
      <summary>Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.</summary>
      <returns>true if the type can be serialized; otherwise false.</returns>
      <param name="type">The <see cref="T:System.Type" /> to verify.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
      <summary>Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.</summary>
      <returns>An instance of the CLR type to which the parameter value was converted.</returns>
      <param name="parameter">The JSON form of the parameter value.</param>
      <param name="parameterType">The <see cref="T:System.Type" /> to deserialize the parameter to.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
      <summary>Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.</summary>
      <returns>The JSON query string parameter serialization of the CLR type. null is returned if the parameter is null.</returns>
      <param name="parameter">The parameter value to convert.</param>
      <param name="parameterType">The <see cref="T:System.Type" /> of the parameter to serialize.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.QueryStringConverter">
      <summary>This class converts a parameter in a query string to an object of the appropriate type. It can also convert a parameter from an object to its query string representation. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)">
      <summary>Determines whether the specified type can be converted to and from a string representation.</summary>
      <returns>A value that specifies whether the type can be converted.</returns>
      <param name="type">The <see cref="T:System.Type" /> to convert.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)">
      <summary>Converts a query string parameter to the specified type.</summary>
      <returns>The converted parameter.</returns>
      <param name="parameter">The string form of the parameter and value.</param>
      <param name="parameterType">The <see cref="T:System.Type" /> to convert the parameter to.</param>
      <exception cref="T:System.FormatException">The provided string does not have the correct format.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)">
      <summary>Converts a parameter to a query string representation.</summary>
      <returns>The parameter name and value.</returns>
      <param name="parameter">The parameter to convert.</param>
      <param name="parameterType">The <see cref="T:System.Type" /> of the parameter to convert.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector">
      <summary>The operation selector that supports the Web programming model.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" /> with the specified endpoint.</summary>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.GetUriTemplate(System.String)">
      <summary>Gets the <see cref="T:System.UriTemplate" /> associated with the specified operation name.</summary>
      <returns>The <see cref="T:System.UriTemplate" /> for the specified operation.</returns>
      <param name="operationName">The operation.</param>
    </member>
    <member name="F:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.HttpOperationNamePropertyName">
      <summary>The name of the message property on the request message that provides the name of the selected operation for the request.</summary>
    </member>
    <member name="F:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.HttpOperationSelectorUriMatchedPropertyName">
      <summary>A string used as a key for storing the value that indicates whether a call to a service operation was matched by the URI but not by the HTTP method.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)">
      <summary>Selects the service operation to call.</summary>
      <returns>The name of the service operation to call.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> object sent to invoke a service operation.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@,System.Boolean@)">
      <summary>Selects the service operation to call.</summary>
      <returns>The name of the service operation to call.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> object sent to invoke a service operation.</param>
      <param name="uriMatched">A value that specifies whether the URI matched a specific service operation.</param>
    </member>
    <member name="T:System.ServiceModel.Web.AspNetCacheProfileAttribute">
      <summary>When applied to a service operation, indicates the ASP.NET output cache profile in the configuration file that should be used by  to cache responses from the operation in the ASP .NET Output Cache. 
    For more information about 
   the kinds of setting you can make with the Output Cache Profile, see ASP.NET Cache Settings.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.AspNetCacheProfileAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.AspNetCacheProfileAttribute" /> class with the specified cache profile name.</summary>
      <param name="cacheProfileName">The cache profile name.</param>
    </member>
    <member name="M:System.ServiceModel.Web.AspNetCacheProfileAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary> An implementation of the IOperationBehavior.AddBindingParmeters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection).Used by the  infrastructure and is not intended to be used by developers.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="bindingParameters">The binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Web.AspNetCacheProfileAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" /> method. Used by the  infrastructure and is not intended to be used by developers.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="clientOperation">The client operation..</param>
    </member>
    <member name="M:System.ServiceModel.Web.AspNetCacheProfileAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" /> method. Used by the  infrastructure and is not intended to be used by developers. </summary>
      <param name="operationDescription">The operation being examined.</param>
      <param name="dispatchOperation">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</param>
    </member>
    <member name="P:System.ServiceModel.Web.AspNetCacheProfileAttribute.CacheProfileName">
      <summary>Gets the name of the cache profile.</summary>
      <returns>The name of the cache profile.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.AspNetCacheProfileAttribute.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" /> method. Used by the  infrastructure and is not intended to be used by developers.</summary>
      <param name="operationDescription">Not implemented.</param>
    </member>
    <member name="T:System.ServiceModel.Web.IncomingWebRequestContext">
      <summary>Provides programmatic access to the context of the incoming Web request.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.Accept">
      <summary>Gets the Accept header value from the incoming Web request.</summary>
      <returns>The Accept header from the incoming Web request.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.DateTime)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Guid)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int32)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int64)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.String)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Guid)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int32)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int64)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.String)"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.ContentLength">
      <summary>Gets the ContentLength header value of the incoming Web request.</summary>
      <returns>The  ContentLength header of the incoming Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.ContentType">
      <summary>Gets the ContentType header value from the incoming Web request.</summary>
      <returns>The ContentType header from the incoming Web request.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.GetAcceptHeaderElements"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.Headers">
      <summary>Gets the headers for the incoming Web request.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> instance that contains the headers of the incoming Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.IfMatch"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.IfModifiedSince"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.IfNoneMatch"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.IfUnmodifiedSince"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.Method">
      <summary>Gets the HTTP method of the incoming Web request.</summary>
      <returns>The HTTP method of the incoming Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.UriTemplateMatch">
      <summary>Gets and sets the <see cref="T:System.UriTemplateMatch" /> instance created during the dispatch of the incoming Web request.</summary>
      <returns>A <see cref="T:System.UriTemplateMatch" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.UserAgent">
      <summary>Gets the UserAgent header value from the incoming Web request.</summary>
      <returns>The UserAgent header from the incoming Web request.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.IncomingWebResponseContext">
      <summary>Provides programmatic access to the context of the incoming Web response.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.ContentLength">
      <summary>Gets the content length header from the incoming Web response.</summary>
      <returns>The content length of the incoming Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.ContentType">
      <summary>Gets the content type header from the incoming Web response.</summary>
      <returns>The content type header of the incoming Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.ETag">
      <summary>Gets the etag header from the incoming Web response.</summary>
      <returns>The etag header of the incoming Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.Headers">
      <summary>Gets the headers from the incoming Web response.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> instance that contains the headers from the incoming Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.Location">
      <summary>Gets the location header from the incoming Web response.</summary>
      <returns>The location header from the incoming Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.StatusCode">
      <summary>Gets the status code of the incoming Web response.</summary>
      <returns>A <see cref="T:System.Net.HttpStatusCode" /> instance that contains the status code of the incoming Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.StatusDescription">
      <summary>Gets the status description of the incoming Web response.</summary>
      <returns>The status description of the incoming Web response.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute">
      <summary>A contract behavior that allows you to set the URL query string parameter name to something other than the default “callback”.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="contractDescription">The contract description.</param>
      <param name="endpoint">The service endpoint.</param>
      <param name="bindingParameters">The binding parameters required to implement the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> method.</summary>
      <param name="contractDescription">The contract description.</param>
      <param name="endpoint">The service endpoint.</param>
      <param name="clientRuntime">The client runtime.</param>
    </member>
    <member name="M:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" /> method.</summary>
      <param name="contractDescription">The contract description.</param>
      <param name="endpoint">The service endpoint.</param>
      <param name="dispatchRuntime">The dispatch runtime.</param>
    </member>
    <member name="P:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.UrlParameterName">
      <summary>Gets or sets the URL query string parameter name to use for cross-domain script access.</summary>
      <returns>The URL query string parameter name.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" /> method.</summary>
      <param name="contractDescription">The contract description.</param>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="T:System.ServiceModel.Web.OutgoingWebRequestContext">
      <summary>Provides programmatic access to the context of the outgoing Web request.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Accept">
      <summary>Gets and sets the Accept header value from the outgoing Web request.</summary>
      <returns>The Accept header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.ContentLength">
      <summary>Gets and sets the content length header value of the outgoing Web request.</summary>
      <returns>The content length header of the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.ContentType">
      <summary>Gets and sets the content type header value from the outgoing Web request.</summary>
      <returns>The content type header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Headers">
      <summary>Gets the headers for the outgoing Web request.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> instance that contains the headers of the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfMatch">
      <summary>Gets and sets the IfMatch header value from the outgoing Web request.</summary>
      <returns>The IfMatch header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfModifiedSince">
      <summary>Gets and sets the IfModifiedSince header value from the outgoing Web request.</summary>
      <returns>The IfModifiedSince header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfNoneMatch">
      <summary>Gets and sets the IfNoneMatch header value from the outgoing Web request.</summary>
      <returns>The IfNoneMatch header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfUnmodifiedSince">
      <summary>Gets and sets the IfUnmodifiedSince header value from the outgoing Web request.</summary>
      <returns>The IfUnmodifiedSince header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Method">
      <summary>Gets the HTTP method of the outgoing Web request.</summary>
      <returns>The HTTP method of the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.SuppressEntityBody">
      <summary>Gets a value that indicates whether  omits data that is normally written to the entity body of the response and forces an empty response to be returned.</summary>
      <returns>If true,  omits any data that is normally written to the entity body of the response and forces an empty response to be returned.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.UserAgent">
      <summary>Gets the user agent header value from the outgoing Web request.</summary>
      <returns>The user agent header from the outgoing Web request.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.OutgoingWebResponseContext">
      <summary>Provides programmatic access to the context of the outgoing Web response.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.BindingWriteEncoding">
      <summary>Gets the encoding set on the binding.</summary>
      <returns>The encoding.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.ContentLength">
      <summary>Gets and sets the content length header from the outgoing Web response.</summary>
      <returns>The content length header of the outgoing Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.ContentType">
      <summary>Gets and sets the content type header from the outgoing Web response.</summary>
      <returns>The content type header of the outgoing Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.ETag">
      <summary>Gets and sets the etag header from the outgoing Web response.</summary>
      <returns>The etag header of the outgoing Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.Format">
      <summary>Gets or sets the web message format</summary>
      <returns>The web message format.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.Headers">
      <summary>Gets the headers from the outgoing Web response.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> instance that contains the headers from the outgoing Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.LastModified">
      <summary>Gets and sets the last modified header of the outgoing Web response.</summary>
      <returns>A <see cref="T:System.DateTime" /> instance that contains the time the requested resource was last modified.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.Location">
      <summary>Gets and sets the location header from the outgoing Web response.</summary>
      <returns>The location header from the outgoing Web response.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetETag(System.Guid)">
      <summary>Sets the specified ETag.</summary>
      <param name="entityTag">The ETag to set.</param>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetETag(System.Int32)">
      <summary>Sets the specified ETag.</summary>
      <param name="entityTag">The ETag to set.</param>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetETag(System.Int64)">
      <summary>Sets the specified ETag.</summary>
      <param name="entityTag">The ETag to set.</param>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetETag(System.String)">
      <summary>Sets the specified ETag.</summary>
      <param name="entityTag">The ETag to set.</param>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetStatusAsCreated(System.Uri)">
      <summary>Sets the HTTP status code of the outgoing Web response to <see cref="F:System.Net.HttpStatusCode.Created" /> and sets the Location header to the provided URI.</summary>
      <param name="locationUri">The <see cref="T:System.Uri" /> instance to the requested resource.</param>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetStatusAsNotFound">
      <summary>Sets the HTTP status code of the outgoing Web response to <see cref="F:System.Net.HttpStatusCode.NotFound" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetStatusAsNotFound(System.String)">
      <summary>Sets the HTTP status code of the outgoing Web response to <see cref="F:System.Net.HttpStatusCode.NotFound" /> with the specified description.</summary>
      <param name="description">The description of status.</param>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.StatusCode">
      <summary>Gets and sets the status code of the outgoing Web response.</summary>
      <returns>An <see cref="T:System.Net.HttpStatusCode" /> instance that contains the status code of the outgoing Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.StatusDescription">
      <summary>Gets and sets the status description of the outgoing Web response.</summary>
      <returns>The status description of the outgoing Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.SuppressEntityBody">
      <summary>Gets and sets a value that indicates whether  omits data that is normally written to the entity body of the response and forces an empty response to be returned.</summary>
      <returns>If true,  omits any data that is normally written to the entity body of the response and forces an empty response to be returned. The default value is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebChannelFactory`1">
      <summary>A class for accessing  Web services on a client.</summary>
      <typeparam name="TChannel">The type of channel to create.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> class.</summary>
      <param name="binding">The binding to use when creating the channel.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> class with the specified binding and <see cref="T:System.Uri" />.</summary>
      <param name="binding">The binding to use.</param>
      <param name="remoteAddress">The URI of the Web service that is called.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> class.</summary>
      <param name="endpoint">The endpoint to use when creating the channel.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> class.</summary>
      <param name="endpointConfigurationName">The name within the application configuration file where the channel is configured.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> class with the specified endpoint configuration and <see cref="T:System.Uri" />.</summary>
      <param name="endpointConfigurationName">The name within the application configuration file where the channel is configured.</param>
      <param name="remoteAddress">The URI of the Web service that is called.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> class.</summary>
      <param name="channelType">The channel type to use.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> class with the specified <see cref="T:System.Uri" />.</summary>
      <param name="remoteAddress">The URI of the Web service that is called.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.OnOpening">
      <summary>This method is called when the <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> is opened.</summary>
    </member>
    <member name="T:System.ServiceModel.Web.WebFaultException">
      <summary>Represents a fault that can have an associated HTTP status code. </summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException.#ctor(System.Net.HttpStatusCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebFaultException" /> class with the specified <see cref="T:System.Net.HttpStatusCode" />.</summary>
      <param name="statusCode">The HTTP status code to return to the caller.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="M:System.ServiceModel.Web.WebFaultException" /> class with the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>An implementation of the <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method that is called when an object is serialized to a stream. </summary>
      <param name="info">The serialization information to which the object data is added when serialized.</param>
      <param name="context">The destination for the serialized object.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebFaultException.StatusCode">
      <summary>Gets the <see cref="T:System.Net.HttpStatusCode" /> associated with the fault.</summary>
      <returns>The HTTP status code associated with the fault.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebFaultException`1">
      <summary>Represents a fault that can have an associated HTTP status code.</summary>
      <typeparam name="T">The serializable error detail type.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebFaultException`1" /> class with the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /></summary>
      <param name="info">The serialization info.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException`1.#ctor(`0,System.Net.HttpStatusCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebFaultException`1" /> class with the specified exception detail and the <see cref="M:System.ServiceModel.Web.WebFaultException.#ctor(System.Net.HttpStatusCode)" /> to return to the caller.</summary>
      <param name="detail">The fault.</param>
      <param name="statusCode">The HTTP status code to set on the response message.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException`1.#ctor(`0,System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebFaultException`1" /> class with the specified exception detail and the <see cref="P:System.ServiceModel.Web.WebFaultException`1.StatusCode" /> to return to the caller.</summary>
      <param name="detail">The fault.</param>
      <param name="statusCode">The HTTP status code to set on the response message.</param>
      <param name="knownTypes">The set of known types that are used for serialization and deserialization.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>An implementation of the <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method that is called when an object is serialized to a stream.</summary>
      <param name="info">The serialization information to which the object data is added when serialized.</param>
      <param name="context">The destination for the serialized object.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebFaultException`1.StatusCode">
      <summary>Gets the <see cref="T:System.Net.HttpStatusCode" /> associated with the fault.</summary>
      <returns>The HTTP status code associated with the fault.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebGetAttribute">
      <summary>Indicates that a service operation is logically a retrieval operation and that it can be called by the  REST programming model.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebGetAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle">
      <summary>Gets and sets the body style of the messages that are sent to and from the service operation.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsBodyStyleSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsBodyStyleSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle" /> property is set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsRequestFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsRequestFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsResponseFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsResponseFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="bindingParameters">A collection of binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="clientOperation">The client operation.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="dispatchOperation">The operation to dispatch to.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.UriTemplate">
      <summary>Gets and sets the Uniform Resource Identifier (URI) template for the service operation.</summary>
      <returns>The URI template for the service operation.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebInvokeAttribute">
      <summary>Indicates a service operation is logically an invoke operation and that it can be called by the  REST programming model.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebGetAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.BodyStyle">
      <summary>Gets and sets the body style of the messages that are sent to and from the service operation.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsBodyStyleSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsBodyStyleSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle" /> property was set explicitly.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsRequestFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsRequestFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsResponseFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsResponseFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.Method">
      <summary>Gets and sets the protocol (for example HTTP) method the service operation responds to.</summary>
      <returns>The protocol method associated with the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.RequestFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.RequestFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.ResponseFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.ResponseFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="bindingParameters">A collection of binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="clientOperation">The client operation.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="dispatchOperation">The operation to dispatch to.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.UriTemplate">
      <summary>The Uniform Resource Identifier (URI) template for the service operation.</summary>
      <returns>The URI template for the service operation.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebMessageBodyStyle">
      <summary>An enumeration that specifies whether to wrap parameter and return values.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.Bare">
      <summary>Both requests and responses are not wrapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.Wrapped">
      <summary>Both requests and responses are wrapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest">
      <summary>Requests are wrapped, responses are not wrapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedResponse">
      <summary>Responses are wrapped, requests are not wrapped.</summary>
    </member>
    <member name="T:System.ServiceModel.Web.WebMessageFormat">
      <summary>An enumeration that specifies the format of Web messages.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageFormat.Xml">
      <summary>The XML format.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageFormat.Json">
      <summary>The JavaScript Object Notation (JSON) format.</summary>
    </member>
    <member name="T:System.ServiceModel.Web.WebOperationContext">
      <summary>A helper class that provides easy access to contextual properties of Web requests and responses.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.#ctor(System.ServiceModel.OperationContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebOperationContext" /> class with the specified <see cref="T:System.ServiceModel.OperationContext" /> instance.</summary>
      <param name="operationContext">The operation context.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.Attach(System.ServiceModel.OperationContext)">
      <summary>Attaches the current <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance to the specified <see cref="T:System.ServiceModel.OperationContext" /> instance.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.OperationContext" /> to attach to.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateAtom10Response(System.ServiceModel.Syndication.ServiceDocument)">
      <summary>Creates a message formatted according to the Atom 1.0 specification with the specified content.</summary>
      <returns>A message in Atom 1.0 format.</returns>
      <param name="document">The content to write to the message.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateAtom10Response(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a message formatted according to the Atom 1.0 specification with the specified content.</summary>
      <returns>A message in Atom 1.0 format.</returns>
      <param name="feed">The content to write to the message.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateAtom10Response(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a message formatted according to the Atom 1.0 specification with the specified content.</summary>
      <returns>A message in Atom 1.0 format.</returns>
      <param name="item">The content to write to the message.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateJsonResponse``1(``0)">
      <summary>Creates a JSON formatted message.</summary>
      <returns>A JSON formatted message.</returns>
      <param name="instance">The object to write to the message.</param>
      <typeparam name="T">The type of object to write to the message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateJsonResponse``1(``0,System.Runtime.Serialization.Json.DataContractJsonSerializer)">
      <summary>Creates a JSON formatted message.</summary>
      <returns>A JSON formatted message.</returns>
      <param name="instance">The object to write to the message.</param>
      <param name="serializer">The serializer to use.</param>
      <typeparam name="T">The type of object to write to the message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateStreamResponse(System.Action{System.IO.Stream},System.String)">
      <summary>Creates a stream formatted message.</summary>
      <returns>A stream formatted message.</returns>
      <param name="streamWriter">The stream writer containg the data to write to the stream.</param>
      <param name="contentType">The content type for the message.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateStreamResponse(System.IO.Stream,System.String)">
      <summary>Creates a stream formatted message.</summary>
      <returns>A stream formatted message.</returns>
      <param name="stream">The stream containing the data to write to the stream.</param>
      <param name="contentType">The content type of the message.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateStreamResponse(System.ServiceModel.Channels.StreamBodyWriter,System.String)">
      <summary>Creates a stream formatted message.</summary>
      <returns>A stream formatted message.</returns>
      <param name="bodyWriter">The stream body writer containing the data to write to the message..</param>
      <param name="contentType">The content type of the message</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateTextResponse(System.Action{System.IO.TextWriter},System.String)">
      <summary>Creates a text formatted message</summary>
      <returns>A text formatted message.</returns>
      <param name="textWriter">A delegate that writes the text data.</param>
      <param name="contentType">The content type for the message.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateTextResponse(System.Action{System.IO.TextWriter},System.String,System.Text.Encoding)">
      <summary>Creates a text formatted message</summary>
      <returns>A text formatted message.</returns>
      <param name="textWriter">A delegate that writes the text data.</param>
      <param name="contentType">The content type of the message.</param>
      <param name="encoding">The encoding to use.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateTextResponse(System.String)">
      <summary>Creates a text formatted response message.</summary>
      <returns>A text formatted message.</returns>
      <param name="text">The text to write to the message.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateTextResponse(System.String,System.String)">
      <summary>Creates a text formatted message.</summary>
      <returns>A text formatted message.</returns>
      <param name="text">The text to write to the message.</param>
      <param name="contentType">The content type of the message.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateTextResponse(System.String,System.String,System.Text.Encoding)">
      <summary>Creates a text formatted message.</summary>
      <returns>A text formatted message.</returns>
      <param name="text">The text to write to the message.</param>
      <param name="contentType">The content type of the message.</param>
      <param name="encoding">The encoding to use.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateXmlResponse(System.Xml.Linq.XDocument)">
      <summary>Creates an XML formatted message.</summary>
      <returns>An XML formatted message.</returns>
      <param name="document">The data to write to the message.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateXmlResponse(System.Xml.Linq.XElement)">
      <summary>Creates an XML formatted message.</summary>
      <returns>An XML formatted message.</returns>
      <param name="element">The data to write to the message.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateXmlResponse``1(``0)">
      <summary>Creates an XML formatted message.</summary>
      <returns>An XML formatted message.</returns>
      <param name="instance">The object to write to write to the message.</param>
      <typeparam name="T">The type of object to write to the message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateXmlResponse``1(``0,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates an XML formatted message.</summary>
      <returns>An XML formatted message.</returns>
      <param name="instance">The object to write to the message.</param>
      <param name="serializer">The serializer to use.</param>
      <typeparam name="T">The type of object to write to the message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateXmlResponse``1(``0,System.Xml.Serialization.XmlSerializer)">
      <summary>Creates an XML formatted message.</summary>
      <returns>An XML formatted message.</returns>
      <param name="instance">The object to write to the message.</param>
      <param name="serializer">The serializer to use.</param>
      <typeparam name="T">The type of object to write to the message.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.Current">
      <summary>Gets the current Web operation context.</summary>
      <returns>A <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.Detach(System.ServiceModel.OperationContext)">
      <summary>Detaches the current <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance from the specified <see cref="T:System.ServiceModel.OperationContext" /> instance.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.OperationContext" /> to detach from.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.GetUriTemplate(System.String)">
      <summary>Gets the URI template associated with the specified operation.</summary>
      <returns>A URI template.</returns>
      <param name="operationName">The operation.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.IncomingRequest">
      <summary>Gets the Web request context for the request being received.</summary>
      <returns>An <see cref="T:System.ServiceModel.Web.IncomingWebRequestContext" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.IncomingResponse">
      <summary>Gets the Web response context for the request being received.</summary>
      <returns>An <see cref="T:System.ServiceModel.Web.IncomingWebResponseContext" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.OutgoingRequest">
      <summary>Gets the Web request context for the request being sent.</summary>
      <returns>An <see cref="T:System.ServiceModel.Web.OutgoingWebRequestContext" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.OutgoingResponse">
      <summary>Gets the Web response context for the response being sent.</summary>
      <returns>An <see cref="T:System.ServiceModel.Web.OutgoingWebResponseContext" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebServiceHost">
      <summary>A <see cref="T:System.ServiceModel.ServiceHost" /> derived class that compliments the  REST programming model.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebServiceHost.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified singleton server instance and base address.</summary>
      <param name="singletonInstance">A service instance to be used as the singleton instance.</param>
      <param name="baseAddresses">The base address of the service.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified service type and base address.</summary>
      <param name="serviceType">The service type.</param>
      <param name="baseAddresses">The base address of the service.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
      <summary>Called when the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> instance opens.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Transactions.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Transactions</name>
  </assembly>
  <members>
    <member name="T:System.Transactions.CommittableTransaction">
      <summary>Describes a committable transaction.</summary>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class. </summary>
      <exception cref="T:System.PlatformNotSupportedException">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified <paramref name="timeout" /> value.</summary>
      <param name="timeout">The maximum amount of time the transaction can exist, before it is aborted.</param>
      <exception cref="T:System.PlatformNotSupportedException">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified transaction options.</summary>
      <param name="options">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use for the new transaction.</param>
      <exception cref="T:System.PlatformNotSupportedException">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is invalid.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)">
      <summary>Begins an attempt to commit the transaction asynchronously.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that can be used by the caller to check the status of the asynchronous operation, or to wait for the operation to complete.</returns>
      <param name="asyncCallback">The <see cref="T:System.AsyncCallback" /> delegate that is invoked when the transaction completes. This parameter can be null, in which case the application is not notified of the transaction's completion. Instead, the application must use the <see cref="T:System.IAsyncResult" /> interface to check for completion and wait accordingly, or call <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> to wait for completion.</param>
      <param name="asyncState">An object, which might contain arbitrary state information, associated with the asynchronous commitment. This object is passed to the callback, and is not interpreted by <see cref="N:System.Transactions" />. A null reference is permitted.</param>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.Commit">
      <summary>Attempts to commit the transaction.</summary>
      <exception cref="T:System.Transactions.TransactionInDoubtException">
        <see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called on a transaction and the transaction becomes <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</exception>
      <exception cref="T:System.Transactions.TransactionAbortedException">
        <see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called and the transaction rolls back for the first time.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)">
      <summary>Ends an attempt to commit the transaction asynchronously.</summary>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> object associated with the asynchronous commitment.</param>
      <exception cref="T:System.Transactions.TransactionAbortedException">
        <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> is called and the transaction rolls back for the first time.</exception>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState">
      <summary>Gets the object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</summary>
      <returns>The object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle">
      <summary>Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</summary>
      <returns>A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously">
      <summary>Gets an indication of whether the asynchronous commit operation completed synchronously. </summary>
      <returns>true if the asynchronous commit operation completed synchronously; otherwise, false. This property always returns false even if the operation completed synchronously.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted">
      <summary>Gets an indication whether the asynchronous commit operation has completed.</summary>
      <returns>true if the operation is complete; otherwise, false. </returns>
    </member>
    <member name="T:System.Transactions.DependentCloneOption">
      <summary>Controls what kind of dependent transaction to create.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.BlockCommitUntilComplete">
      <summary>The dependent transaction blocks the commit process of the transaction until the parent transaction times out, or <see cref="M:System.Transactions.DependentTransaction.Complete" /> is called. In this case, additional work can be done on the transaction and new enlistments can be created.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.RollbackIfNotComplete">
      <summary>The dependent transaction automatically aborts the transaction if Commit is called on the parent transaction before <see cref="M:System.Transactions.DependentTransaction.Complete" /> is called.</summary>
    </member>
    <member name="T:System.Transactions.DependentTransaction">
      <summary>Describes a clone of a transaction providing guarantee that the transaction cannot be committed until the application comes to rest regarding work on the transaction. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Transactions.DependentTransaction.Complete">
      <summary>Attempts to complete the dependent transaction.</summary>
      <exception cref="T:System.Transactions.TransactionException">Any attempt for additional work on the transaction after this method is called. These include invoking methods such as <see cref="M:System.Transactions.Transaction.EnlistVolatile" />, <see cref="M:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> , or any serialization operations on the transaction. </exception>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermission">
      <summary>The permission that is demanded by <see cref="N:System.Transactions" /> when management of a transaction is escalated to MSDTC. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.DistributedTransactionPermission" /> class. </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Copy">
      <summary>Creates and returns an identical copy of the current permission.</summary>
      <returns>A copy of the current permission.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
      <param name="securityElement">The XML encoding used to reconstruct the permission.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
      <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is null if the intersection is empty.</returns>
      <param name="target">A permission to intersect with the current permission. It must be the same type as the current permission.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Returns a value that indicates whether the current permission is a subset of the specified permission.</summary>
      <returns>true if the current <see cref="T:System.Security.IPermission" /> is a subset of the specified <see cref="T:System.Security.IPermission" />; otherwise, false.</returns>
      <param name="target">A permission to test for the subset relationship. This permission must be the same type as the current permission.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsUnrestricted">
      <summary>Returns a value that indicates whether unrestricted access to the resource that is protected by the current permission is allowed.</summary>
      <returns>true if unrestricted use of the resource protected by the permission is allowed; otherwise, false.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.ToXml">
      <summary>Creates an XML encoding of the security object and its current state.</summary>
      <returns>A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding of the security object, including any state information.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)">
      <summary>Creates a permission that is the union of the current permission and the specified permission. </summary>
      <returns>An <see cref="T:System.Security.IPermission" /> that represents the union of the current permission and the specified permission.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermissionAttribute">
      <summary>Allows security actions for <see cref="T:System.Transactions.DistributedTransactionPermission" /> to be applied to code using declarative security. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.DistributedTransactionPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.CreatePermission">
      <summary>Creates a permission object that can then be serialized into binary form and persistently stored along with the <see cref="T:System.Security.Permissions.SecurityAction" /> in an assembly's metadata.</summary>
      <returns>A serializable permission object.</returns>
    </member>
    <member name="P:System.Transactions.DistributedTransactionPermissionAttribute.Unrestricted">
      <summary>Gets or sets a value indicating whether full (unrestricted) permission to the resource protected by the attribute is declared.</summary>
      <returns>true if full permission to the protected resource is declared; otherwise, false.</returns>
    </member>
    <member name="T:System.Transactions.Enlistment">
      <summary>Facilitates communication between an enlisted transaction participant and the transaction manager during the final phase of the transaction.</summary>
    </member>
    <member name="M:System.Transactions.Enlistment.Done">
      <summary>Indicates that the transaction participant has completed its work.</summary>
    </member>
    <member name="T:System.Transactions.EnlistmentOptions">
      <summary>Determines whether the object should be enlisted during the prepare phase.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.None">
      <summary>The object does not require enlistment during the initial phase of the commitment process.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired">
      <summary>The object must enlist during the initial phase of the commitment process.</summary>
    </member>
    <member name="T:System.Transactions.EnterpriseServicesInteropOption">
      <summary>Specifies how distributed transactions interact with COM+ transactions.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.None">
      <summary>There is no synchronization between <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> and <see cref="P:System.Transactions.Transaction.Current" />.  </summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Automatic">
      <summary>Search for an existing COM+ context and synchronize with it if one exists.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Full">
      <summary>The <see cref="N:System.EnterpriseServices" /> context (which can be retrieved by calling the static method <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> of the <see cref="T:System.EnterpriseServices.ContextUtil" /> class) and the <see cref="N:System.Transactions" /> ambient transaction (which can be retrieved by calling the static method <see cref="P:System.Transactions.Transaction.Current" /> of the <see cref="T:System.Transactions.Transaction" /> class) are always synchronized. This introduces a performance penalty because new <see cref="N:System.EnterpriseServices" /> contexts may need to be created.</summary>
    </member>
    <member name="T:System.Transactions.HostCurrentTransactionCallback">
      <summary>Provides a mechanism for the hosting environment to supply its own default notion of <see cref="P:System.Transactions.Transaction.Current" />.</summary>
      <returns>A <see cref="T:System.Transactions.Transaction" /> object.</returns>
    </member>
    <member name="T:System.Transactions.IDtcTransaction">
      <summary>Describes a DTC transaction.</summary>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)">
      <summary>Aborts a transaction.</summary>
      <param name="reason">An optional <see cref="T:System.EnterpriseServices.BOID" /> that indicates why the transaction is being aborted. This parameter can be null, indicating that no reason for the abort is provided.</param>
      <param name="retaining">This value must be false.</param>
      <param name="async">When <paramref name="async" /> is true, an asynchronous abort is performed and the caller must use ITransactionOutcomeEvents to learn about the outcome of the transaction. </param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)">
      <summary>Commits a transaction.</summary>
      <param name="retaining">This value must be false.</param>
      <param name="commitType">A value taken from the OLE DB enumeration XACTTC.</param>
      <param name="reserved">This value must be zero.</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)">
      <summary>Retrieves information about a transaction.</summary>
      <param name="transactionInformation">Pointer to the caller-allocated <see cref="T:System.EnterpriseServices.XACTTRANSINFO" /> structure that will receive information about the transaction. This value must not be null. </param>
    </member>
    <member name="T:System.Transactions.IEnlistmentNotification">
      <summary>Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</summary>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
      <summary>Notifies an enlisted object that a transaction is being committed.</summary>
      <param name="enlistment">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
      <summary>Notifies an enlisted object that the status of a transaction is in doubt.</summary>
      <param name="enlistment">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
      <summary>Notifies an enlisted object that a transaction is being prepared for commitment.</summary>
      <param name="preparingEnlistment">A <see cref="T:System.Transactions.PreparingEnlistment" /> object used to send a response to the transaction manager.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
      <summary>Notifies an enlisted object that a transaction is being rolled back (aborted).</summary>
      <param name="enlistment">A <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</param>
    </member>
    <member name="T:System.Transactions.IPromotableSinglePhaseNotification">
      <summary>Describes an object that acts as a commit delegate for a non-distributed transaction internal to a resource manager.</summary>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize">
      <summary>Notifies a transaction participant that enlistment has completed successfully.</summary>
      <exception cref="T:System.Transactions.TransactionException">An attempt to enlist or serialize a transaction.</exception>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)">
      <summary>Notifies an enlisted object that the transaction is being rolled back.</summary>
      <param name="singlePhaseEnlistment">A <see cref="T:System.Transactions.SinglePhaseEnlistment" /> object used to send a response to the transaction manager.</param>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary>Notifies an enlisted object that the transaction is being committed.</summary>
      <param name="singlePhaseEnlistment">A <see cref="T:System.Transactions.SinglePhaseEnlistment" /> interface used to send a response to the transaction manager.</param>
    </member>
    <member name="T:System.Transactions.ISimpleTransactionSuperior">
      <summary>Represents a transaction that is not a root transaction, but can be escalated to be managed by the MSDTC.</summary>
    </member>
    <member name="M:System.Transactions.ISimpleTransactionSuperior.Rollback">
      <summary>Notifies an enlisted object that the transaction is being rolled back.</summary>
    </member>
    <member name="T:System.Transactions.ISinglePhaseNotification">
      <summary>Describes a resource object that supports single phase commit optimization to participate in a transaction.</summary>
    </member>
    <member name="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary>Represents the resource manager's implementation of the callback for the single phase commit optimization.  </summary>
      <param name="singlePhaseEnlistment">A <see cref="T:System.Transactions.SinglePhaseEnlistment" />  used to send a response to the transaction manager.</param>
    </member>
    <member name="T:System.Transactions.IsolationLevel">
      <summary>Specifies the isolation level of a transaction.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Serializable">
      <summary>Volatile data can be read but not modified, and no new data can be added during the transaction.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.RepeatableRead">
      <summary>Volatile data can be read but not modified during the transaction. New data can be added during the transaction.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadCommitted">
      <summary>Volatile data cannot be read during the transaction, but can be modified.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadUncommitted">
      <summary>Volatile data can be read and modified during the transaction.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Snapshot">
      <summary>Volatile data can be read. Before a transaction modifies data, it verifies if another transaction has changed the data after it was initially read. If the data has been updated, an error is raised. This allows a transaction to get to the previously committed value of the data.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Chaos">
      <summary>The pending changes from more highly isolated transactions cannot be overwritten.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Unspecified">
      <summary>A different isolation level than the one specified is being used, but the level cannot be determined. An exception is thrown if this value is set.</summary>
    </member>
    <member name="T:System.Transactions.ITransactionPromoter">
      <summary>Describes a delegated transaction for an existing transaction that can be escalated to be managed by the MSDTC when needed.</summary>
    </member>
    <member name="M:System.Transactions.ITransactionPromoter.Promote">
      <summary>Notifies an enlisted object that an escalation of the delegated transaction has been requested.</summary>
      <returns>A transmitter/receiver propagation token that marshals a distributed transaction. For more information, see <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />.</returns>
    </member>
    <member name="T:System.Transactions.PreparingEnlistment">
      <summary>Facilitates communication between an enlisted transaction participant and the transaction manager during the Prepare phase of the transaction.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback">
      <summary>Indicates that the transaction should be rolled back.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback(System.Exception)">
      <summary>Indicates that the transaction should be rolled back.</summary>
      <param name="e">An explanation of why a rollback is triggered.</param>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.Prepared">
      <summary>Indicates that the transaction can be committed.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.RecoveryInformation">
      <summary>Gets the recovery information of an enlistment.</summary>
      <returns>The recovery information of an enlistment.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt to get recovery information inside a volatile enlistment, which does not generate any recovery information.</exception>
    </member>
    <member name="T:System.Transactions.SinglePhaseEnlistment">
      <summary>Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the <see cref="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" /> notification is received.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted">
      <summary>Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)">
      <summary>Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back, and provides an explanation.</summary>
      <param name="e">An explanation of why a rollback is initiated.</param>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Committed">
      <summary>Represents a callback that is used to indicate to the transaction manager that the SinglePhaseCommit was successful.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt">
      <summary>Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)">
      <summary>Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt, and provides an explanation.</summary>
      <param name="e">An explanation of why the transaction is in doubt.</param>
    </member>
    <member name="T:System.Transactions.SubordinateTransaction">
      <summary>Represents a non-rooted transaction that can be delegated. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.SubordinateTransaction" /> class. </summary>
      <param name="isoLevel">The isolation level of the transaction</param>
      <param name="superior">A <see cref="T:System.Transactions.ISimpleTransactionSuperior" /></param>
    </member>
    <member name="T:System.Transactions.Transaction">
      <summary>Represents a transaction.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.Clone">
      <summary>Creates a clone of the transaction.</summary>
      <returns>A <see cref="T:System.Transactions.Transaction" /> that is a copy of the current transaction object.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.Current">
      <summary>Gets or sets the ambient transaction.</summary>
      <returns>A <see cref="T:System.Transactions.Transaction" /> that describes the current transaction.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
      <summary>Creates a dependent clone of the transaction.</summary>
      <returns>A <see cref="T:System.Transactions.DependentTransaction" /> that represents the dependent clone.</returns>
      <param name="cloneOption">A <see cref="T:System.Transactions.DependentCloneOption" /> that controls what kind of dependent transaction to create.</param>
    </member>
    <member name="M:System.Transactions.Transaction.Dispose">
      <summary>Releases the resources that are held by the object.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary>Enlists a durable resource manager that supports two phase commit to participate in a transaction.</summary>
      <returns>An <see cref="T:System.Transactions.Enlistment" /> object that describes the enlistment.</returns>
      <param name="resourceManagerIdentifier">A unique identifier for a resource manager, which should persist across resource manager failure or reboot.</param>
      <param name="enlistmentNotification">An object that implements the <see cref="T:System.Transactions.IEnlistmentNotification" /> interface to receive two phase commit notifications. </param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> if the resource manager wants to perform additional work during the prepare phase.</param>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary>Enlists a durable resource manager that supports single phase commit optimization to participate in a transaction.</summary>
      <returns>An <see cref="T:System.Transactions.Enlistment" /> object that describes the enlistment.</returns>
      <param name="resourceManagerIdentifier">A unique identifier for a resource manager, which should persist across resource manager failure or reboot.</param>
      <param name="singlePhaseNotification">An object that implements the <see cref="T:System.Transactions.ISinglePhaseNotification" /> interface that must be able to receive single phase commit and two phase commit notifications.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> if the resource manager wants to perform additional work during the prepare phase.</param>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
      <summary>Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE). </summary>
      <returns>A <see cref="T:System.Transactions.SinglePhaseEnlistment" /> interface implementation that describes the enlistment.</returns>
      <param name="promotableSinglePhaseNotification">A <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> interface implemented by the participant.</param>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary>Enlists a volatile resource manager that supports two phase commit to participate in a transaction.</summary>
      <returns>An <see cref="T:System.Transactions.Enlistment" /> object that describes the enlistment.</returns>
      <param name="enlistmentNotification">An object that implements the <see cref="T:System.Transactions.IEnlistmentNotification" /> interface to receive two phase commit notifications. </param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> if the resource manager wants to perform additional work during the prepare phase.</param>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary>Enlists a volatile resource manager that supports single phase commit optimization to participate in a transaction.</summary>
      <returns>An <see cref="T:System.Transactions.Enlistment" /> object that describes the enlistment.</returns>
      <param name="singlePhaseNotification">An object that implements the <see cref="T:System.Transactions.ISinglePhaseNotification" /> interface that must be able to receive single phase commit and two phase commit notifications.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> if the resource manager wants to perform additional work during the prepare phase.</param>
    </member>
    <member name="M:System.Transactions.Transaction.Equals(System.Object)">
      <summary>Determines whether this transaction and the specified object are equal.</summary>
      <returns>true if <paramref name="obj" /> and this transaction are identical; otherwise, false.</returns>
      <param name="obj">The object to compare with this instance.</param>
    </member>
    <member name="M:System.Transactions.Transaction.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.IsolationLevel">
      <summary>Gets the isolation level of the transaction.</summary>
      <returns>One of the <see cref="T:System.Transactions.IsolationLevel" /> values that indicates the isolation level of the transaction.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary>Tests whether two specified <see cref="T:System.Transactions.Transaction" /> instances are equivalent.</summary>
      <returns>true if <paramref name="x" /> and <paramref name="y" /> are equal; otherwise, false.</returns>
      <param name="x">The <see cref="T:System.Transactions.Transaction" /> instance that is to the left of the equality operator.</param>
      <param name="y">The <see cref="T:System.Transactions.Transaction" /> instance that is to the right of the equality operator.</param>
    </member>
    <member name="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary>Returns a value that indicates whether two <see cref="T:System.Transactions.Transaction" /> instances are not equal.</summary>
      <returns>true if <paramref name="x" /> and <paramref name="y" /> are not equal; otherwise, false.</returns>
      <param name="x">The <see cref="T:System.Transactions.Transaction" /> instance that is to the left of the inequality operator.</param>
      <param name="y">The <see cref="T:System.Transactions.Transaction" /> instance that is to the right of the inequality operator.</param>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback">
      <summary>Rolls back (aborts) the transaction.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback(System.Exception)">
      <summary>Rolls back (aborts) the transaction.</summary>
      <param name="e">An explanation of why a rollback occurred.</param>
    </member>
    <member name="M:System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize this transaction. </summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization. </param>
    </member>
    <member name="E:System.Transactions.Transaction.TransactionCompleted">
      <summary>Indicates that the transaction is completed.</summary>
      <exception cref="T:System.ObjectDisposedException">An attempt to subscribe this event on a transaction that has been disposed. </exception>
    </member>
    <member name="P:System.Transactions.Transaction.TransactionInformation">
      <summary>Retrieves additional information about a transaction.</summary>
      <returns>A <see cref="T:System.Transactions.TransactionInformation" /> that contains additional information about the transaction.</returns>
    </member>
    <member name="T:System.Transactions.TransactionAbortedException">
      <summary>The exception that is thrown when an operation is attempted on a transaction that has already been rolled back, or an attempt is made to commit the transaction and the transaction aborts. </summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionAbortedException" /> class.</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionAbortedException" /> class with the specified serialization and streaming context information.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that describes a failed serialization.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that describes a failed serialization context.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionAbortedException" /> class with the specified message.</summary>
      <param name="message">A <see cref="T:System.String" /> that contains a message that explains why the exception occurred.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionAbortedException" /> class with the specified message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that contains a message that explains why the exception occurred.</param>
      <param name="innerException">Gets the exception instance that causes the current exception. For more information, see the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="T:System.Transactions.TransactionCompletedEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Transactions.Transaction.TransactionCompleted" /> event of a <see cref="T:System.Transactions.Transaction" /> class.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The <see cref="T:System.Transactions.TransactionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Transactions.TransactionEventArgs">
      <summary>Provides data for the following transaction events: <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" />, <see cref="E:System.Transactions.Transaction.TransactionCompleted" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionEventArgs" /> class. </summary>
    </member>
    <member name="P:System.Transactions.TransactionEventArgs.Transaction">
      <summary>Gets the transaction for which event status is provided.</summary>
      <returns>A <see cref="T:System.Transactions.Transaction" /> for which event status is provided.</returns>
    </member>
    <member name="T:System.Transactions.TransactionException">
      <summary>The exception that is thrown when you attempt to do work on a transaction that cannot accept new work.  </summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionException" /> class.</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionException" /> class with the specified serialization and streaming context information.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that describes a failed serialization.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that describes a failed serialization context.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionException" /> class with the specified message.</summary>
      <param name="message">A <see cref="T:System.String" /> that contains a message that explains why the exception occurred.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionException" /> class with the specified message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that contains a message that explains why the exception occurred.</param>
      <param name="innerException">Gets the exception instance that causes the current exception. For more information, see the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="T:System.Transactions.TransactionInDoubtException">
      <summary>The exception that is thrown when an operation is attempted on a transaction that is in doubt, or an attempt is made to commit the transaction and the transaction becomes InDoubt. </summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionInDoubtException" /> class.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionInDoubtException" /> class with the specified serialization and streaming context information.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that describes a failed serialization.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that describes a failed serialization context.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionInDoubtException" /> class with the specified message.</summary>
      <param name="message">A <see cref="T:System.String" /> that contains a message that explains why the exception occurred.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionInDoubtException" /> class with the specified message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that contains a message that explains why the exception occurred.</param>
      <param name="innerException">Gets the exception instance that causes the current exception. For more information, see the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="T:System.Transactions.TransactionInformation">
      <summary>Provides additional information regarding a transaction.</summary>
    </member>
    <member name="P:System.Transactions.TransactionInformation.CreationTime">
      <summary>Gets the creation time of the transaction.</summary>
      <returns>A <see cref="T:System.DateTime" /> that contains the creation time of the transaction.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.DistributedIdentifier">
      <summary>Gets a unique identifier of the escalated transaction.</summary>
      <returns>A <see cref="T:System.Guid" /> that contains the unique identifier of the escalated transaction.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.LocalIdentifier">
      <summary>Gets a unique identifier of the transaction.</summary>
      <returns>A unique identifier of the transaction.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.Status">
      <summary>Gets the status of the transaction.</summary>
      <returns>A <see cref="T:System.Transactions.TransactionStatus" /> that contains the status of the transaction.</returns>
    </member>
    <member name="T:System.Transactions.TransactionInterop">
      <summary>Facilitates interaction between <see cref="N:System.Transactions" /> and components that were previously written to interact with MSDTC, COM+, or <see cref="N:System.EnterpriseServices" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
      <summary>Gets an <see cref="T:System.Transactions.IDtcTransaction" /> instance that represents a <see cref="T:System.Transactions.Transaction" />.  </summary>
      <returns>An <see cref="T:System.Transactions.IDtcTransaction" /> instance that represents a <see cref="T:System.Transactions.Transaction" />.  The <see cref="T:System.Transactions.IDtcTransaction" /> instance is compatible with the unmanaged form of ITransaction used by MSDTC and with the Managed form of <see cref="T:System.EnterpriseServices.ITransaction" /> used by <see cref="N:System.EnterpriseServices" />.</returns>
      <param name="transaction">A <see cref="T:System.Transactions.Transaction" /> instance to be marshaled.</param>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
      <summary>Transforms a transaction object into an export transaction cookie.</summary>
      <returns>An export transaction cookie representing the specified <see cref="T:System.Transactions.Transaction" /> object.</returns>
      <param name="transaction">The <see cref="T:System.Transactions.Transaction" /> object to be marshaled.</param>
      <param name="whereabouts">An address that describes the location of the destination transaction manager. This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.</param>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
      <summary>Generates a <see cref="T:System.Transactions.Transaction" /> from a specified <see cref="T:System.Transactions.IDtcTransaction" />.</summary>
      <returns>A <see cref="T:System.Transactions.Transaction" /> instance that represents the given <see cref="T:System.Transactions.IDtcTransaction" />.</returns>
      <param name="transactionNative">The <see cref="T:System.Transactions.IDtcTransaction" /> object to be marshaled.</param>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
      <summary>Generates a <see cref="T:System.Transactions.Transaction" /> from the specified an export cookie.  </summary>
      <returns>A <see cref="T:System.Transactions.Transaction" /> from the specified export cookie.</returns>
      <param name="cookie">A marshaled form of the transaction object.</param>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
      <summary>Generates a <see cref="T:System.Transactions.Transaction" /> instance from the specified transmitter propagation token. </summary>
      <returns>A <see cref="T:System.Transactions.Transaction" /> from the specified transmitter propagation token.</returns>
      <param name="propagationToken">A propagation token representing a transaction.</param>
      <exception cref="T:System.Transactions.TransactionManagerCommunicationException">The deserialization of a transaction fails because the transaction manager cannot be contacted. This may be caused by network firewall or security settings.</exception>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
      <summary>Generates a propagation token for the specified <see cref="T:System.Transactions.Transaction" />.</summary>
      <returns>This method, together with the <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /> method, provide functionality for Transmitter/Receiver propagation, in which the transaction is "pulled" from the remote machine when the latter is called to unmarshal the transaction. For more information on different propagation models, see the Remarks section of the <see cref="T:System.Transactions.TransactionInterop" /> class.</returns>
      <param name="transaction">A transaction to be marshaled into a propagation token.</param>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetWhereabouts">
      <summary>Gets the Whereabouts of the distributed transaction manager that <see cref="N:System.Transactions" /> uses.  </summary>
      <returns>The Whereabouts of the distributed transaction manager that <see cref="N:System.Transactions" /> uses.  </returns>
    </member>
    <member name="T:System.Transactions.TransactionManager">
      <summary>Contains methods used for transaction management. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Transactions.TransactionManager.DefaultTimeout">
      <summary>Gets the default timeout interval for new transactions.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that specifies the timeout interval for new transactions.</returns>
    </member>
    <member name="E:System.Transactions.TransactionManager.DistributedTransactionStarted">
      <summary>Indicates that a distributed transaction has started.</summary>
    </member>
    <member name="P:System.Transactions.TransactionManager.HostCurrentCallback">
      <summary>Gets or sets a custom transaction factory.</summary>
      <returns>A <see cref="T:System.Transactions.HostCurrentTransactionCallback" /> that contains a custom transaction factory.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.MaximumTimeout">
      <summary>Gets the default maximum timeout interval for new transactions.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that specifies the maximum timeout interval that is allowed when creating new transactions.</returns>
    </member>
    <member name="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)">
      <summary>Notifies the transaction manager that a resource manager recovering from failure has finished reenlisting in all unresolved transactions.</summary>
      <param name="resourceManagerIdentifier">A <see cref="T:System.Guid" /> that uniquely identifies the resource to be recovered from.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="resourceManagerIdentifier" /> parameter is null.</exception>
    </member>
    <member name="M:System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)">
      <summary>Reenlists a durable participant in a transaction.</summary>
      <returns>An <see cref="T:System.Transactions.Enlistment" /> that describes the enlistment.</returns>
      <param name="resourceManagerIdentifier">A <see cref="T:System.Guid" /> that uniquely identifies the resource manager.</param>
      <param name="recoveryInformation">Contains additional information of recovery information.</param>
      <param name="enlistmentNotification">A resource object that implements <see cref="T:System.Transactions.IEnlistmentNotification" /> to receive notifications.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="recoveryInformation" /> is invalid.-or-Transaction Manager information in <paramref name="recoveryInformation" /> does not match the configured transaction manager.-or-<paramref name="RecoveryInformation" /> is not recognized by <see cref="N:System.Transactions" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)" /> has already been called for the specified <paramref name="resourceManagerIdentifier" />. The reenlistment is rejected.</exception>
      <exception cref="T:System.Transactions.TransactionException">The <paramref name="resourceManagerIdentifier" /> does not match the content of the specified recovery information in <paramref name="recoveryInformation" />. </exception>
    </member>
    <member name="T:System.Transactions.TransactionManagerCommunicationException">
      <summary>The exception that is thrown when a resource manager cannot communicate with the transaction manager.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> class.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> class with the specified serialization and streaming context information.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that describes a failed serialization.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that describes a failed serialization context.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> class with the specified message.</summary>
      <param name="message">A <see cref="T:System.String" /> that contains a message that explains why the exception occurred.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> class with the specified message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that contains a message that explains why the exception occurred.</param>
      <param name="innerException">Gets the exception instance that causes the current exception. For more information, see the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="T:System.Transactions.TransactionOptions">
      <summary>Contains additional information that specifies transaction behaviors.</summary>
    </member>
    <member name="M:System.Transactions.TransactionOptions.Equals(System.Object)">
      <summary>Determines whether this <see cref="T:System.Transactions.TransactionOptions" /> instance and the specified object are equal.</summary>
      <returns>true if <paramref name="obj" /> and this <see cref="T:System.Transactions.TransactionOptions" /> instance are identical; otherwise, false.</returns>
      <param name="obj">The object to compare with this instance.</param>
    </member>
    <member name="M:System.Transactions.TransactionOptions.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.IsolationLevel">
      <summary>Gets or sets the isolation level of the transaction.</summary>
      <returns>A <see cref="T:System.Transactions.IsolationLevel" /> enumeration that specifies the isolation level of the transaction.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Equality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary>Tests whether two specified <see cref="T:System.Transactions.TransactionOptions" /> instances are equivalent.</summary>
      <returns>true if <paramref name="x" /> and <paramref name="y" /> are equal; otherwise, false.</returns>
      <param name="x">The <see cref="T:System.Transactions.TransactionOptions" /> instance that is to the left of the equality operator.</param>
      <param name="y">The <see cref="T:System.Transactions.TransactionOptions" /> instance that is to the right of the equality operator.</param>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Inequality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary>Returns a value that indicates whether two <see cref="T:System.Transactions.TransactionOptions" /> instances are not equal.</summary>
      <returns>true if <paramref name="x" /> and <paramref name="y" /> are not equal; otherwise, false.</returns>
      <param name="x">The <see cref="T:System.Transactions.TransactionOptions" /> instance that is to the left of the equality operator.</param>
      <param name="y">The <see cref="T:System.Transactions.TransactionOptions" /> instance that is to the right of the equality operator.</param>
    </member>
    <member name="P:System.Transactions.TransactionOptions.Timeout">
      <summary>Gets or sets the timeout period for the transaction.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that specifies the timeout period for the transaction.</returns>
    </member>
    <member name="T:System.Transactions.TransactionPromotionException">
      <summary>The exception that is thrown when a promotion fails.</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionPromotionException" /> class. </summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionPromotionException" /> class with the specified serialization and streaming context information.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that describes a failed serialization.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that describes a failed serialization context.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionPromotionException" /> class with the specified message.</summary>
      <param name="message">A <see cref="T:System.String" /> that contains a message that explains why the exception occurred.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionPromotionException" /> class with the specified message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that contains a message that explains why the exception occurred.</param>
      <param name="innerException">Gets the exception instance that causes the current exception. For more information, see the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="T:System.Transactions.TransactionScope">
      <summary>Makes a code block transactional. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class. </summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction. </summary>
      <param name="transactionToUse">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction. </summary>
      <param name="transactionToUse">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</param>
      <param name="scopeTimeout">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified timeout value and COM+ interoperability requirements, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction. </summary>
      <param name="transactionToUse">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</param>
      <param name="scopeTimeout">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</param>
      <param name="interopOption">An instance of the <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> enumeration that describes how the associated transaction interacts with COM+ transactions.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements.</summary>
      <param name="scopeOption">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified timeout value and requirements.</summary>
      <param name="scopeOption">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</param>
      <param name="scopeTimeout">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements.</summary>
      <param name="scopeOption">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</param>
      <param name="transactionOptions">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified scope and COM+ interoperability requirements, and transaction options.</summary>
      <param name="scopeOption">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</param>
      <param name="transactionOptions">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.</param>
      <param name="interopOption">An instance of the <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> enumeration that describes how the associated transaction interacts with COM+ transactions.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.Complete">
      <summary>Indicates that all operations within the scope are completed successfully.</summary>
      <exception cref="T:System.InvalidOperationException">This method has already been called once.</exception>
    </member>
    <member name="M:System.Transactions.TransactionScope.Dispose">
      <summary>Ends the transaction scope.</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeOption">
      <summary>Provides additional options for creating a transaction scope.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Required">
      <summary>A transaction is required by the scope. It uses an ambient transaction if one already exists. Otherwise, it creates a new transaction before entering the scope. This is the default value.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.RequiresNew">
      <summary>A new transaction is always created for the scope.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Suppress">
      <summary>The ambient transaction context is suppressed when creating the scope. All operations within the scope are done without an ambient transaction context.</summary>
    </member>
    <member name="T:System.Transactions.TransactionStartedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" /> event of a <see cref="T:System.Transactions.TransactionManager" /> class.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The <see cref="T:System.Transactions.TransactionEventArgs" /> that contains the transaction from which transaction information can be retrieved.</param>
    </member>
    <member name="T:System.Transactions.TransactionStatus">
      <summary>Describes the current status of a distributed transaction.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Active">
      <summary>The status of the transaction is unknown, because some participants must still be polled.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Committed">
      <summary>The transaction has been committed.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Aborted">
      <summary>The transaction has been rolled back.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.InDoubt">
      <summary>The status of the transaction is unknown.</summary>
    </member>
    <member name="T:System.Transactions.Configuration.DefaultSettingsSection">
      <summary>Represents an XML section in a configuration file that contains default values of a transaction. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Transactions.Configuration.DefaultSettingsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.Configuration.DefaultSettingsSection" /> class. </summary>
    </member>
    <member name="P:System.Transactions.Configuration.DefaultSettingsSection.DistributedTransactionManagerName">
      <summary>Gets the name of the transaction manager.</summary>
      <returns>The name of the transaction manager. The default value is an empty string.</returns>
      <exception cref="T:System.NotSupportedException">An attempt to set this property to fully qualified domain names or IP addresses.</exception>
      <exception cref="T:System.Transactions.TransactionAbortedException">An attempt to set this property to localhost.</exception>
    </member>
    <member name="P:System.Transactions.Configuration.DefaultSettingsSection.Timeout">
      <summary>Gets or sets a default time after which a transaction times out.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object. The default property is 00:01:00. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">An attempt to set this property to negative values.</exception>
    </member>
    <member name="T:System.Transactions.Configuration.MachineSettingsSection">
      <summary>Represents an XML section in a configuration file encapsulating all settings that can be modified only at the machine level. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Transactions.Configuration.MachineSettingsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.Configuration.MachineSettingsSection" /> class. </summary>
    </member>
    <member name="P:System.Transactions.Configuration.MachineSettingsSection.MaxTimeout">
      <summary>Gets a maximum amount of time allowed before a transaction times out.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that contains the maximum allowable time. The default value is 00:10:00.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">An attempt to set this property to negative values.</exception>
    </member>
    <member name="T:System.Transactions.Configuration.TransactionsSectionGroup">
      <summary>Represents a configuration section that encapsulates and allows traversal of all the transaction configuration XML elements and attributes that are within this configuration section. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Transactions.Configuration.TransactionsSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Transactions.Configuration.TransactionsSectionGroup" /> class. </summary>
    </member>
    <member name="P:System.Transactions.Configuration.TransactionsSectionGroup.DefaultSettings">
      <summary>Gets the default settings used to initialize the elements and attributes in a transactions section.</summary>
      <returns>A <see cref="T:System.Transactions.Configuration.DefaultSettingsSection" /> that represents the default settings. The default is a <see cref="T:System.Transactions.Configuration.DefaultSettingsSection" /> that is populated with default values.</returns>
    </member>
    <member name="M:System.Transactions.Configuration.TransactionsSectionGroup.GetSectionGroup(System.Configuration.Configuration)">
      <summary>Provides static access to a <see cref="T:System.Transactions.Configuration.TransactionsSectionGroup" />.</summary>
      <returns>A <see cref="T:System.Transactions.Configuration.TransactionsSectionGroup" /> object.</returns>
      <param name="config">A <see cref="T:System.Configuration.Configuration" /> representing the configuration settings that apply to a particular computer, application, or resource.</param>
    </member>
    <member name="P:System.Transactions.Configuration.TransactionsSectionGroup.MachineSettings">
      <summary>Gets the configuration settings set at the machine level.</summary>
      <returns>A <see cref="T:System.Transactions.Configuration.MachineSettingsSection" /> that represents the configuration settings at the machine level. The default is a <see cref="T:System.Transactions.Configuration.MachineSettingsSection" /> that is populated with default values.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Web.Entity.Design.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Entity.Design</name>
  </assembly>
  <members>
    <member name="T:System.Web.UI.Design.WebControls.EntityDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.EntityDataSourceDesigner" />.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.CanConfigure">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.Configure" /> method can be called by the design host. </summary>
      <returns>true if the <see cref="M:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.Configure" /> method can be called; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called by the design host.</summary>
      <returns>true if the <see cref="M:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.CommandText">
      <summary>Gets or sets the <see cref="P:System.Web.UI.WebControls.EntityDataSource.CommandText" /> property of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.WebControls.EntityDataSource.CommandText" /> property.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.Configure">
      <summary>Launches the data source configuration utility in the design host.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.ConnectionString">
      <summary>Gets or sets the <see cref="P:System.Web.UI.WebControls.EntityDataSource.ConnectionString" /> property of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.WebControls.EntityDataSource.ConnectionString" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.DefaultContainerName">
      <summary>Gets or sets the <see cref="P:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName" /> property of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.EntitySetName">
      <summary>Gets or sets the <see cref="P:System.Web.UI.WebControls.EntityDataSource.EntitySetName" /> property of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.WebControls.EntityDataSource.EntitySetName" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.EntityTypeFilter">
      <summary>Gets or sets the <see cref="P:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter" /> property of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter" /> property.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.GetView(System.String)">
      <summary>Returns a data source view that has the specified name.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Design.EntityDesignerDataSourceView" /> object with the name specified by <paramref name="viewName" />.</returns>
      <param name="viewName">The name of the view to return.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.GetViewNames">
      <summary>Gets a list of available views.</summary>
      <returns>A collection with one element that contains the name "DefaultView".</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the control designer and loads the specified component.</summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> object to initialize.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.OrderBy">
      <summary>Gets or sets the <see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderBy" /> property of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderBy" /> property.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to add properties or remove properties in the properties grid, or to shadow properties of the associated control.</summary>
      <param name="properties">The properties to be filtered.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema from the underlying data source.</summary>
      <param name="preferSilent">true to suppress all data source events until the schema is refreshed.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.Select">
      <summary>Gets or sets the <see cref="P:System.Web.UI.WebControls.EntityDataSource.Select" /> property of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.WebControls.EntityDataSource.Select" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDataSourceDesigner.Where">
      <summary>Gets or sets the <see cref="P:System.Web.UI.WebControls.EntityDataSource.Where" /> property of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.WebControls.EntityDataSource.Where" /> property.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.EntityDesignerDataSourceView">
      <summary>Provides a design-time view of data for the <see cref="T:System.Web.UI.Design.WebControls.EntityDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EntityDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.EntityDataSourceDesigner)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.WebControls.Design.EntityDesignerDataSourceView" /> with the provided data source designer.</summary>
      <param name="owner">The parent <see cref="T:System.Web.UI.Design.WebControls.EntityDataSourceDesigner" /> object.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDesignerDataSourceView.CanDelete">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control supports deletes.</summary>
      <returns>true if deletes are supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDesignerDataSourceView.CanInsert">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control supports inserts.</summary>
      <returns>true if inserts are supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDesignerDataSourceView.CanPage">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control supports paging through data returned by a query.</summary>
      <returns>true if paging is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDesignerDataSourceView.CanSort">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control supports a sorted view of the underlying data source.</summary>
      <returns>true if sorting is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDesignerDataSourceView.CanUpdate">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control supports updates.</summary>
      <returns>true if updates are supported; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EntityDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Gets the design-time data that matches the schema of the associated data source control by using the specified number of rows. </summary>
      <returns>The data to display at design time.</returns>
      <param name="minimumRows">The minimum number of rows to return.</param>
      <param name="isSampleData">true to indicate that the returned data is sample data; false to indicate that the returned data is live data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.EntityDesignerDataSourceView.Schema">
      <summary>Gets the schema that describes the data source view that is represented by the current view object.</summary>
      <returns>An object that represents the schema.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Web.DynamicData.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.DynamicData</name>
  </assembly>
  <members>
    <member name="T:System.Web.DynamicData.ContainerType">
      <summary>Specifies the data-control container type. </summary>
    </member>
    <member name="F:System.Web.DynamicData.ContainerType.List">
      <summary>Indicates a list container that implements the <see cref="T:System.Web.UI.WebControls.IDataBoundListControl" /> interface, such as a <see cref="T:System.Web.UI.WebControls.ListView" /> control, a <see cref="T:System.Web.UI.WebControls.GridView" /> control, or a <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
    </member>
    <member name="F:System.Web.DynamicData.ContainerType.Item">
      <summary>Indicates an item container that implements the <see cref="T:System.Web.UI.WebControls.IDataBoundItemControl" /> interface, such as a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control or a <see cref="T:System.Web.UI.WebControls.FormView" /> control.</summary>
    </member>
    <member name="T:System.Web.DynamicData.ContextConfiguration">
      <summary>Provides information for a data-context instance in order to allow customization.</summary>
    </member>
    <member name="M:System.Web.DynamicData.ContextConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.ContextConfiguration.MetadataProviderFactory">
      <summary>Gets or sets the metadata provider. </summary>
      <returns>The type of the metadata provider. </returns>
    </member>
    <member name="P:System.Web.DynamicData.ContextConfiguration.ScaffoldAllTables">
      <summary>Gets or sets a value that indicates whether scaffolding is enabled.</summary>
      <returns>true if scaffolding is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.DynamicData.ControlFilterExpression">
      <summary>Modifies a database query by using the data key of the item that is selected in a data-bound control. </summary>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.ControlFilterExpression.Column">
      <summary>Gets or sets the name of the column that the query is based on.</summary>
      <returns>The name of the column that the query is based on.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ControlFilterExpression.ControlID">
      <summary>Gets or sets the ID of the source data-bound control. </summary>
      <returns>The ID of the source data-bound control. </returns>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Gets the data source query to modify. </summary>
      <returns>The object that represents the data source query that is modified by this <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> instance.</returns>
      <param name="source">The data source query to modify.</param>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)">
      <summary>Restores the previously saved view state. </summary>
      <param name="savedState">The state to restore.</param>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.SaveViewState">
      <summary>Saves the changes to view state since the time the page was posted to the server.</summary>
      <returns>The object that contains the changes to view state. If there is no view state associated with the object, this method returns null.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>Initializes the filter expression with data source information.</summary>
      <param name="owner">The control in which the <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> instance is contained, such as the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control.</param>
      <param name="context">The application's current <see cref="T:System.Web.HttpContext" /> object. </param>
      <param name="dataSource">The target data source for the <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> instance. If the <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> instance is contained in the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control, this parameter is the data source that the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control refers to </param>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.TrackViewState">
      <summary>Causes the <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> object to track changes to its view state so they can be stored in the control's view state object and to be persisted across requests for the same page.</summary>
    </member>
    <member name="T:System.Web.DynamicData.DataControlReference">
      <summary>Enables the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> to declaratively define data controls that it manages.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DataControlReference" /> class. </summary>
    </member>
    <member name="P:System.Web.DynamicData.DataControlReference.ControlID">
      <summary>Gets the ID of the data-bound control that is managed by the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control.</summary>
      <returns>The ID of the data-bound control that is managed by the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DataControlReference.Owner">
      <summary>Gets the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control that contains the data control.</summary>
      <returns>The <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control that contains the data control.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReference.ToString">
      <summary>Gets the literal string DataControl:  that has the value of the <see cref="P:System.Web.DynamicData.DataControlReference.ControlID" /> control appended to it.</summary>
      <returns>The literal string DataControl:  that has the value of the <see cref="P:System.Web.DynamicData.DataControlReference.ControlID" /> property appended to it.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DataControlReferenceCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> objects.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.#ctor(System.Web.DynamicData.DynamicDataManager)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DataControlReferenceCollection" /> class.</summary>
      <param name="owner">The container object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="owner" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.InsertItem(System.Int32,System.Web.DynamicData.DataControlReference)">
      <summary>Inserts a data-control reference into the data-control reference collection.</summary>
      <param name="index">The index that indicates where to insert the data control.</param>
      <param name="item">The data control to insert.</param>
    </member>
    <member name="P:System.Web.DynamicData.DataControlReferenceCollection.Owner">
      <summary>Gets the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control that contains the data control. </summary>
      <returns>The <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control that contains the data control. </returns>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.RemoveItem(System.Int32)">
      <summary>Removes a data-control reference from the collection.</summary>
      <param name="index">The index of the data-control reference to remove.</param>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.SetItem(System.Int32,System.Web.DynamicData.DataControlReference)">
      <summary>Sets the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control that contains the data-control reference.</summary>
      <param name="index">The index of the data-control reference to set.</param>
      <param name="item">The data control.</param>
    </member>
    <member name="T:System.Web.DynamicData.DefaultAutoFieldGenerator">
      <summary>Generates dynamic data fields (columns) for data-bound controls automatically. </summary>
    </member>
    <member name="M:System.Web.DynamicData.DefaultAutoFieldGenerator.#ctor(System.Web.DynamicData.MetaTable)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DefaultAutoFieldGenerator" /> class.</summary>
      <param name="table">The metadata for the table to generate dynamic fields for.</param>
      <exception cref="T:System.ArgumentNullException">The table is null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DefaultAutoFieldGenerator.CreateField(System.Web.DynamicData.MetaColumn,System.Web.DynamicData.ContainerType,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Generates a dynamic data field. </summary>
      <returns>The dynamic field to create.</returns>
      <param name="column">The metadata for the column to create the dynamic field for.</param>
      <param name="containerType">The data-bound control that contains the dynamic field.</param>
      <param name="mode">The access mode for the dynamic field.</param>
    </member>
    <member name="M:System.Web.DynamicData.DefaultAutoFieldGenerator.GenerateFields(System.Web.UI.Control)">
      <summary>Generates <see cref="T:System.Web.DynamicData.DynamicField" /> objects based on metadata information for the table.</summary>
      <returns>A collection of <see cref="T:System.Web.DynamicData.DynamicField" /> objects.</returns>
      <param name="control">The data-bound control that contains the dynamic data field.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicControl">
      <summary>Displays the content that is defined for the field in templated data-bound controls, using ASP.NET Dynamic Data features.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicControl" /> class. </summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicControl" /> class with the specified mode. </summary>
      <param name="mode">One of the enumeration values that specifies the mode of the control.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode">
      <summary>Gets or sets a value that indicates whether the formatting string specified by the <see cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" /> property is applied to field values when the field is in edit mode.</summary>
      <returns>true if the formatting string is applied; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.Column">
      <summary>Gets or sets the column object that is associated with the control.</summary>
      <returns>The column object that is associated with the control.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull">
      <summary>Gets or sets a value that indicates whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</summary>
      <returns>true if empty string values are automatically converted to null values; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.CssClass">
      <summary>Gets or sets the Cascading Style Sheet (CSS) class that specifies the display styles for the <see cref="T:System.Web.DynamicData.DynamicControl" /> control content.</summary>
      <returns>The name of the CSS class.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.DataField">
      <summary>Gets or sets the name of the data field that the <see cref="T:System.Web.DynamicData.DynamicControl" /> control is bound to.</summary>
      <returns>The name of the data field to bind the <see cref="T:System.Web.DynamicData.DynamicControl" /> control to. The default is an empty string (""), which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.DataFormatString">
      <summary>Gets or sets a string that specifies the display format for the value of the field.</summary>
      <returns>A formatting string that specifies the display format for the value of the field. The default is an empty string (""), which indicates that no special formatting is applied to the field value.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.FieldTemplate">
      <summary>Gets the field template that is created for the <see cref="T:System.Web.DynamicData.DynamicControl" /> control. </summary>
      <returns>The field template that is created for the <see cref="T:System.Web.DynamicData.DynamicControl" /> control.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.GetAttribute(System.String)">
      <summary>Retrieves the attribute value by using the specified key.</summary>
      <returns>The value of the attribute.</returns>
      <param name="key">The name of the attribute.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.HtmlEncode">
      <summary>Gets or sets a value that indicates whether the data for the control is HTML-encoded before rendering.</summary>
      <returns>true if the data for the control is HTML-encoded before rendering; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.Mode">
      <summary>Gets or sets the rendering mode.</summary>
      <returns>One of the enumeration values that specifies the rendering mode for the control. The default is <see cref="F:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly" />.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.NullDisplayText">
      <summary>Gets or sets the caption that is displayed for a data field when the field value is null.</summary>
      <returns>The caption that is displayed for a data field when the field value is null. The default is an empty string (""), which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.DynamicData.DynamicControl.DataField" /> property is not set.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.DynamicData.DynamicControl" /> control content to the client's browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The object that is used to render the <see cref="T:System.Web.DynamicData.DynamicControl" /> control content on the client's browser.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)">
      <summary>Sets the specified attribute to the specified value. </summary>
      <param name="key">The name of the attribute to set.</param>
      <param name="value">The value to assign to the attribute.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions">
      <summary>For a description of this member, see <see cref="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />.</summary>
      <returns>The formatting options to be applied to the field template.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.Table">
      <summary>Gets the table object that is associated with the control.</summary>
      <returns>The table object that is associated with the control.</returns>
      <exception cref="T:System.Exception">The <see cref="T:System.Web.DynamicData.DynamicControl" /> control is inside a data-bound control that is not bound to a data source control that implements the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> interface.</exception>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.UIHint">
      <summary>Gets or sets the name of the field template that is used to render the data field.</summary>
      <returns>The name of the field template that is used to render the data field. The default is an empty string (""), which indicates that the field template will be rendered based on the data field type or on metadata information applied to the data model.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.ValidationGroup">
      <summary>Gets or sets the validation group name for the control.</summary>
      <returns>The validation group name for the control.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicControlParameter">
      <summary>Represents a parameter that is used for master-detail filters in which a data source gets information from another data control.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> class.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="System.Web.DynamicData.DynamicControlParameter" /> class, bound to the specified control.</summary>
      <param name="controlId">The ID of the control whose values the parameter represents.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControlParameter.ControlId">
      <summary>Gets or sets the unique identifier of the control that the <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> object binds to.</summary>
      <returns>The unique identifier of the control from which the <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> object gets its data.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)">
      <summary>Throws an <see cref="T:System.InvalidOperationException" /> exception to indicate that the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control is missing.</summary>
      <returns>A <see cref="T:System.InvalidOperationException" /> object that indicates the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control is missing.</returns>
      <param name="context">The HTTP context.</param>
      <param name="control">The dynamic control parameter. </param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Returns the collection of parameters that are used to create a Where clause for when the data source is queried.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.WebControls.Parameter" /> objects that represent the query parameters for the specified <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> instance.</returns>
      <param name="dataSource">The <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> instance to get the parameters from.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataExtensions">
      <summary>Provides extension methods that are used by ASP.NET Dynamic Data.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions,System.String)">
      <summary>Returns the value provided by a user for a control that is being validated.</summary>
      <returns>null if <paramref name="value" /> is null or an empty string and the <see cref="P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull" /> property of <paramref name="formattingOptions" /> is true; null if <paramref name="value" /> is not null or an empty string and matches the <see cref="P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText" /> property of <paramref name="formattingOptions" />; otherwise, the unchanged value of <paramref name="value" />.</returns>
      <param name="formattingOptions">The formatting options object, as defined by the <see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /> object.</param>
      <param name="value">The input value to be converted.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Enables selection to be persisted in data controls that support selection and paging.</summary>
      <param name="dataBoundControl">The data bound control.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Expands dynamic filters into Where parameters that are usable by the data source.</summary>
      <param name="dataSource">The data source object.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)">
      <summary>Returns the data source that is associated with the data control for the specified control.</summary>
      <returns>The data source that is associated with the data control for the specified control.</returns>
      <param name="current">A control inside the hierarchy of a data-bound control whose containing control you want to find.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)">
      <summary>Returns the field template for the specified column in the specified control's naming container.</summary>
      <returns>The field template for the specified column in the specified control's naming container.</returns>
      <param name="control">The containing control.</param>
      <param name="columnName">The name of the column.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)">
      <summary>Returns the metatable object for the containing data control.</summary>
      <returns>The metatable object for the containing data control.</returns>
      <param name="current">The current control.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
      <summary>Formats the specified field value by using the specified formatting options.</summary>
      <returns>The field value that has been formatted by using the specified formatting options.</returns>
      <param name="formattingOptions">The <see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /> instance to use.</param>
      <param name="fieldValue">The field value to format.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
      <summary>Formats the specified field value by using the specified formatting options.</summary>
      <returns>The field value that has been formatted by using the specified formatting options.</returns>
      <param name="formattingOptions">The <see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /> instance to use.</param>
      <param name="fieldValue">The field value to format.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource)">
      <summary>Gets the collection of the default values for the specified data source.</summary>
      <returns>The collection of default values that are associated with the <see cref="T:System.Web.UI.IDataSource" /> object.</returns>
      <param name="dataSource">The data source for which to get the default values.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer)">
      <summary>Gets the collection of the default values for the specified data control.</summary>
      <returns>The collection of default values that are associated with the <see cref="T:System.Web.UI.INamingContainer" /> object.</returns>
      <param name="control">The data control for which to get the default values.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn)">
      <summary>Gets the type of the enumeration that represents the column.</summary>
      <returns>The type of the enumeration that represents the column if the underlying type is an enumeration; otherwise, null.</returns>
      <param name="column">The column to get the enumeration type for.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource)">
      <summary>Gets the metadata for a table in the specified data source object.</summary>
      <returns>The table metadata associated with the <see cref="T:System.Web.UI.IDataSource" /> object.</returns>
      <param name="dataSource">The data source object for which to get the table metadata. </param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer)">
      <summary>Gets the table metadata for the specified data control.</summary>
      <returns>The table metadata that is associated with the <see cref="T:System.Web.UI.INamingContainer" /> object.</returns>
      <param name="control">The data control for which to get the table metadata. </param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Returns the <see cref="T:System.Web.DynamicData.MetaTable" /> object that is associated with the specified data source control.</summary>
      <returns>The table that is associated with the specified data source control.</returns>
      <param name="dataSource">The data source control.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.DynamicData.IDynamicDataSource.EntitySetName" /> property of <paramref name="dataSource" /> is null.-or-The <see cref="P:System.Web.DynamicData.IDynamicDataSource.ContextType" /> property of <paramref name="dataSource" /> is null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource)">
      <summary>Sets the <see cref="T:System.Data.Linq.DataLoadOptions" /> value of a LINQ-to-SQL data source to force all the foreign-key entities to be loaded.</summary>
      <param name="dataSource">The LINQ data source to load the foreign keys from.</param>
      <typeparam name="TEntity">The type of the entities that are returned by the data source.</typeparam>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource,System.Type)">
      <summary>Sets the <see cref="T:System.Data.Linq.DataLoadOptions" /> value of a LINQ-to-SQL data source to force all the foreign-key entities to be loaded.</summary>
      <param name="dataSource">The LINQ data source to load the foreign keys from.</param>
      <param name="rowType">The type of the entities that are returned by the data source.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable)">
      <summary>Sets the table metadata for the specified data control.</summary>
      <param name="control">The <see cref="T:System.Web.UI.INamingContainer" /> object that contains the table.</param>
      <param name="table">The table metadata.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Sets the table metadata and default value mapping for the specified data control.</summary>
      <param name="control">The <see cref="T:System.Web.UI.INamingContainer" /> object that contains the table.</param>
      <param name="table">The table metadata.</param>
      <param name="defaultValues">The default value mapping.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)">
      <summary>Sets the table metadata and default value mapping for the specified data control.</summary>
      <param name="control">The <see cref="T:System.Web.UI.INamingContainer" /> object that contains the table.</param>
      <param name="table">The table metadata.</param>
      <param name="defaultValues">The default value mapping.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)">
      <summary>Determines whether table metadata is available.</summary>
      <returns>true if table metadata is available; otherwise, false.</returns>
      <param name="dataSource">The data source that contains the table.</param>
      <param name="table">When this method returns, contains the table metadata. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)">
      <summary>Determines whether table metadata is available.</summary>
      <returns>true if table metadata is available; otherwise, false.</returns>
      <param name="control">The <see cref="T:System.Web.UI.INamingContainer" /> object that contains the table. </param>
      <param name="table">When this method returns, contains the table metadata. This parameter is passed uninitialized.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataManager">
      <summary>Enables dynamic behavior for ASP.NET Web controls that support ASP.NET Dynamic Data.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control. </summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.AutoLoadForeignKeys">
      <summary>Gets or sets a value that indicates whether foreign keys are automatically loaded for a LINQ-to-SQL data context.</summary>
      <returns>true if foreign keys are automatically loaded; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.ClientID">
      <summary>Gets the <see cref="P:System.Web.UI.Control.ClientID" /> property that is generated by ASP.NET. </summary>
      <returns>The <see cref="P:System.Web.UI.Control.ClientID" /> property that is generated by ASP.NET. </returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.ClientIDMode">
      <summary>Gets the algorithm that is used to generate the value in the <see cref="P:System.Web.UI.Control.ClientID" /> property.</summary>
      <returns>A value that indicates how the <see cref="P:System.Web.UI.Control.ClientID" /> property is generated. This property cannot be set.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.DataControls">
      <summary>Gets the list of data-control references in the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control.</summary>
      <returns>The list of data-control references in the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">The event data. </param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.OnLoad(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.RegisterControl(System.Web.UI.Control)">
      <summary>Registers a control with the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control.</summary>
      <param name="control">The data control to register.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.RegisterControl(System.Web.UI.Control,System.Boolean)">
      <summary>Registers a control with the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control.</summary>
      <param name="control">The data control to register.</param>
      <param name="setSelectionFromUrl">true to use the primary key to set the selected item; otherwise, the selected item is not set.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.Visible">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> control is visible. </summary>
      <returns>true if the <see cref="T:System.Web.DynamicData.DynamicDataManager" /> is visible; otherwise false.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataRoute">
      <summary>Represents a route that is used by ASP.NET Dynamic Data.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicDataRoute" /> class by using the specified URL pattern.</summary>
      <param name="url">The pattern for the URL.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.Action">
      <summary>Gets or sets the name of an action for a route.</summary>
      <returns>The action name for a route.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)">
      <summary>Returns the action from the <see cref="T:System.Web.Routing.RouteData" /> object for the current Dynamic Data Web request.</summary>
      <returns>The action. For a list of possible values, see <see cref="T:System.Web.DynamicData.PageAction" />.</returns>
      <param name="routeData">The route data that pertains to the current request. For more information, see <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />.</param>
      <exception cref="T:System.InvalidOperationException">The action was not found in the Web request routing information.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)">
      <summary>Returns routing information for a specific Web request.</summary>
      <returns>The routing information for the Web request.</returns>
      <param name="httpContext">Contains information about the Web request. </param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)">
      <summary>Identifies the table that is associated with a Dynamic Data Web page request.</summary>
      <returns>The metadata that describes a table that is displayed by Dynamic Data.</returns>
      <param name="routeData">The route data that pertains to the current request. For more information, see <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />.</param>
      <exception cref="T:System.InvalidOperationException">The table was not found in the Web request routing information.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Returns the virtual path of a route.</summary>
      <returns>The virtual path.</returns>
      <param name="requestContext">Contains information about the Web request.</param>
      <param name="values">The collection of route objects for the current application.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.Model">
      <summary>Gets or sets the data model to which the route applies.</summary>
      <returns>The data-model metadata that the route applies to. </returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.RouteHandler">
      <summary>Gets or sets the object that processes requests for the route.</summary>
      <returns>The handler that is used to process requests for the route.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.Table">
      <summary>Gets or sets the name of the table for the route.</summary>
      <returns>The name of the table that is associated with the route.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.ViewName">
      <summary>Gets or sets the name of the .aspx page that is associated with a route.</summary>
      <returns>The name of the .aspx page that is associated with the route. If no page is specified for the route, the property returns the value of the <see cref="P:System.Web.DynamicData.DynamicDataRoute.Action" /> property with ".aspx" appended to it.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataRouteHandler">
      <summary>Processes ASP.NET Dynamic Data route patterns.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler(System.Web.DynamicData.DynamicDataRoute,System.Web.DynamicData.MetaTable,System.String)">
      <summary>Creates a handler to process a request.</summary>
      <returns>The handler that can process a request.</returns>
      <param name="route">The matched route.</param>
      <param name="table">The metadata table that is contained in the route.</param>
      <param name="action">The action that is contained in the route.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)">
      <summary>Creates the virtual path of a custom page.</summary>
      <returns>The virtual path of the custom page.</returns>
      <param name="table">The data-model metadata table that the page is for.</param>
      <param name="viewName">The name of the view action, which is the page name without the ".aspx" file-name extension.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext(System.Web.HttpContext)">
      <summary>Returns the <see cref="T:System.Web.Routing.RequestContext" /> instance for the current Web request.</summary>
      <returns>The request context for the Web request.</returns>
      <param name="httpContext">The context information that is associated with the Web request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> is null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable(System.Web.HttpContext)">
      <summary>Returns a <see cref="T:System.Web.DynamicData.MetaTable" /> object from the <see cref="T:System.Web.HttpContext" /> object.</summary>
      <returns>The data-model metadata table that is associated with the current Web request, or null if the request is not a Dynamic Data request</returns>
      <param name="httpContext">The context information that is associated with the Web request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> is null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)">
      <summary>Returns the virtual path of a page that is enabled for Dynamic Data.</summary>
      <returns>The virtual path of the page.</returns>
      <param name="table">The metadata table that the page is for.</param>
      <param name="viewName">The name of the view action, which is the page name without the ".aspx" file-name extension.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRouteHandler.Model">
      <summary>Gets or sets the <see cref="T:System.Web.DynamicData.MetaModel" /> object that the <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> class is associated with.</summary>
      <returns>The data model that the <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> class is associated with.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable(System.Web.HttpContext,System.Web.DynamicData.MetaTable)">
      <summary>Sets the <see cref="T:System.Web.DynamicData.MetaTable" /> object that is associated with the current <see cref="T:System.Web.HttpRequest" /> object. </summary>
      <param name="httpContext">The context information that is associated with the Web request.</param>
      <param name="table">The metatable that is associated with the current request.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Returns the handler that processes ASP.NET Dynamic Data route patterns.</summary>
      <returns>The handler that processes ASP.NET Dynamic Data route patterns.</returns>
      <param name="requestContext">The context information that is associated with the Web request.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicEntity">
      <summary>Provides an ASP.NET control that represents an entity for use by ASP.NET Dynamic Data.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicEntity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicEntity" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicEntity.Mode">
      <summary>Gets or sets the <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> value for the <see cref="T:System.Web.DynamicData.DynamicEntity" /> control. </summary>
      <returns>The mode.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicEntity.OnLoad(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicEntity.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Sends server control content to a specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which renders the content.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content. </param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicEntity.UIHint">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> attribute for the entity.</summary>
      <returns>The <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> attribute for the entity.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicEntity.ValidationGroup">
      <summary>Gets or sets the validation group for the <see cref="T:System.Web.DynamicData.DynamicEntity" /> control.</summary>
      <returns>The validation group.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicField">
      <summary>Represents a data field that is displayed in a data-bound control that uses ASP.NET Dynamic Data features.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicField" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode">
      <summary>Gets or sets a value that indicates whether the formatted string that is specified by the <see cref="P:System.Web.DynamicData.DynamicField.DataFormatString" /> property is applied to field value when the data field is in edit mode.</summary>
      <returns>true if the <see cref="T:System.Web.DynamicData.DynamicField" /> applies formatting in edit mode; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.Column">
      <summary>Gets the <see cref="T:System.Web.DynamicData.MetaColumn" /> object that this <see cref="T:System.Web.DynamicData.DynamicField" /> object is associated with.</summary>
      <returns>The meta column.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)">
      <summary>Provides a mechanism to modify a <see cref="T:System.Web.DynamicData.DynamicControl" /> object that was created by the <see cref="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" /> method.</summary>
      <param name="control">The control to modify.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull">
      <summary>Gets or sets a value that indicates whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</summary>
      <returns>true to automatically convert empty string values to null values; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)">
      <summary>Copies the properties of the current <see cref="T:System.Web.DynamicData.DynamicField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</summary>
      <param name="newField">The <see cref="T:System.Web.UI.WebControls.DataControlField" /> to copy the properties of the current <see cref="T:System.Web.DynamicData.DynamicField" /> to.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.CreateDynamicControl">
      <summary>Provides a mechanism for classes that derive from <see cref="T:System.Web.DynamicData.DynamicField" /> to override how a <see cref="T:System.Web.DynamicData.DynamicControl" /> object is created.</summary>
      <returns>A new dynamic control.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.CreateField">
      <summary>Creates and returns a new instance of the <see cref="T:System.Web.DynamicData.DynamicField" /> class.</summary>
      <returns>A new instance of the <see cref="T:System.Web.DynamicData.DynamicField" /> class.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.DataField">
      <summary>Gets or sets the name of the data field to bind the <see cref="T:System.Web.DynamicData.DynamicField" /> object to.</summary>
      <returns>The name of the data field that the <see cref="T:System.Web.DynamicData.DynamicField" /> object is bound to.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.DataFormatString">
      <summary>Gets or sets the string that specifies the display format for the value of the data field.</summary>
      <returns>A formatting string that specifies the display format for the value of the data field. The default is an empty string (""), which indicates that no special formatting is applied to the value.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)">
      <summary>Extracts the value of the data field from the current table cell and adds the value to the specified dictionary.</summary>
      <param name="dictionary">The dictionary that will hold the cell values.</param>
      <param name="cell">The cell that contains the text or controls of the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</param>
      <param name="rowState">One of the enumeration values that specifies the row state.</param>
      <param name="includeReadOnly">true to include the values of read-only fields in <paramref name="dictionary" />; otherwise, false.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)">
      <summary>Retrieves the specified attribute value.</summary>
      <returns>The value of the attribute.</returns>
      <param name="key">The key of the attribute to get.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.HeaderText">
      <summary>Gets or sets the text that is displayed in the header of the data-bound control that contains the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</summary>
      <returns>The text that is displayed in the header of the data-bound control that contains the <see cref="T:System.Web.DynamicData.DynamicField" /> object. </returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.DynamicData.DynamicField" /> object is inside a data-bound control that is not bound to a data source control that implements the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> interface.</exception>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.HtmlEncode">
      <summary>Gets or sets a value that indicates whether data field values are HTML-encoded before they are displayed in a <see cref="T:System.Web.DynamicData.DynamicField" /> object.</summary>
      <returns>true if field values are HTML-encoded before they are displayed; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
      <summary>Adds text or controls to the specified cell.</summary>
      <param name="cell">The object that contains the text or controls of the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</param>
      <param name="cellType">One of the enumeration values that specifies the function of the <paramref name="cell" /> object.</param>
      <param name="rowState">One of the enumeration values that specifies the row state.</param>
      <param name="rowIndex">The index of the row that the <paramref name="cell" /> object is contained in.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.NullDisplayText">
      <summary>Gets or sets the caption that is displayed for a data field when the field value is null.</summary>
      <returns>The caption that is displayed for a data field when the field value is null. The default is an empty string (""), which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ReadOnly">
      <summary>Gets the read-only state of the dynamic field.</summary>
      <returns>The read-only state of the dynamic field.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)">
      <summary>Sets an attribute that is associated with the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</summary>
      <param name="key">The name of the attribute to be set.</param>
      <param name="value">The attribute value.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.SortExpression">
      <summary>Gets or sets the sort expression that is used when the data field is used to sort the data source by.</summary>
      <returns>The sort expression that is used when the data field is used to sort the data source by. </returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.DynamicData.DynamicField" /> object is inside a data-bound control that is not bound to a data source control that implements the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> interface.</exception>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.UIHint">
      <summary>Gets or sets the field template to use for displaying the data field.</summary>
      <returns>The name of the field template to use for displaying the data field.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ValidationGroup">
      <summary>Gets the <see cref="P:System.Web.DynamicData.DynamicControl.ValidationGroup" /> object that this <see cref="T:System.Web.DynamicData.DynamicField" /> object is associated with.</summary>
      <returns>The name of the validation group to which this validation control belongs. The default is an empty string (""), which indicates that this property is not set.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicFilter">
      <summary>Displays the UI for filtering table rows using a specified column.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicFilter" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.Column">
      <summary>Gets or sets the table column to use for filtering.</summary>
      <returns>The table column to use for filtering.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.DataField">
      <summary>Gets or sets the name of the column to use for table row filtering.</summary>
      <returns>The name of the column used for table row filtering.</returns>
    </member>
    <member name="E:System.Web.DynamicData.DynamicFilter.FilterChanged">
      <summary>Occurs when the user select a value for the foreign key.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.FilterTemplate">
      <summary>Gets the filter template that is associated with the current instance of this control.</summary>
      <returns>The filter template that is associated with the current instance of this control.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.FilterUIHint">
      <summary>Gets or sets the name of the filter template that is used to create the UI.</summary>
      <returns>The name of the filter template.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilter.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Sends server control content to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The object that receives the server control content.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicFilterExpression">
      <summary>Modifies a database query by using a value from specified filter control.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilterExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilterExpression.ControlID">
      <summary>Gets or sets the filter control identifier.</summary>
      <returns>The filter control identifier.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Gets the modified query using the current filter value.</summary>
      <returns>The data source query that is modified by using the current value that is contained in the <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> instance.</returns>
      <param name="source">The data source query to modify.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>Initializes the expression with data source information.</summary>
      <param name="owner">The control that contains the <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> instance, such as the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control.</param>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> object. </param>
      <param name="dataSource">The target data source for the <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> instance. </param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicHyperLink">
      <summary>Displays links to table actions such as edit, delete, and insert.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.Action">
      <summary>Gets or sets the action that is associated with the link.</summary>
      <returns>The action that is associated with the link.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.ContextTypeName">
      <summary>Gets or sets the data context for the data model that the link applies to.</summary>
      <returns>The data context that applies to the link.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.DataField">
      <summary>Gets or sets the link display text.</summary>
      <returns>The link display text.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.OnDataBinding(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.DataBinding" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>Retrieves the value of the specified attribute that is applied to the <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> control.</summary>
      <returns>The specified attribute that is applied to the link.</returns>
      <param name="key">The name of the attribute to retrieve.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>Defines an attribute and its value to apply to the <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> control.</summary>
      <param name="key">The name of the attribute. </param>
      <param name="value">The value that is assigned to the attribute. </param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.TableName">
      <summary>Gets or sets the table for the link action.</summary>
      <returns>The name of the table for the link action.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicQueryStringParameter">
      <summary>Automatically generates a collection of parameters that is used to create the Where clause for the data source control by retrieving query string values.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicQueryStringParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicQueryStringParameter" /> class. </summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicQueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)">
      <summary>Throws an <see cref="T:System.InvalidOperationException" /> exception in all cases.</summary>
      <returns>Throws an <see cref="T:System.InvalidOperationException" /> exception in all cases.</returns>
      <param name="context">Information about the HTTP request.</param>
      <param name="control">The control the parameter is bound to.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicQueryStringParameter.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Returns a collection of <see cref="T:System.Web.UI.WebControls.Parameter" /> objects that are automatically generated for the columns of a table by retrieving query string values.</summary>
      <returns>A collection of parameters that are automatically generated for the columns of a table by retrieving query string values</returns>
      <param name="dataSource">The data source object.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicRouteExpression">
      <summary>Gets the primary key from the routing information in order to perform data filtering.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicRouteExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicRouteExpression.ColumnName">
      <summary>Gets or sets the name of a column that contains a foreign key that is used to query the data source.</summary>
      <returns>The name of the foreign-key column.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicRouteExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Gets the query from the data source..</summary>
      <returns>An instance of the modified query.</returns>
      <param name="source">The query to modify.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicRouteExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>Sets the HTTP context of the <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> object.</summary>
      <param name="owner">The control that contains the <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> instance. This is a <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control. </param>
      <param name="context">The Web request context.</param>
      <param name="dataSource">The target data source for the <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> instance.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicValidator">
      <summary>Enforces and catches exceptions that are thrown in a data model and displays the error.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicValidator" /> class. </summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidator.Column">
      <summary>Gets or sets the column to validate.</summary>
      <returns>The column to validate, or null if a data entity is validated.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidator.ColumnName">
      <summary>Gets the name of the column to validate.</summary>
      <returns>The name of the column to validate, or null if a data entity is validated.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.ControlPropertiesValid">
      <summary>Indicates whether the properties of the specified <see cref="T:System.Web.DynamicData.DynamicValidator" /> control are valid.</summary>
      <returns>true, if the properties of the specified validation control are valid; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.EvaluateIsValid">
      <summary>Determines whether the value in the input control to validate is valid. </summary>
      <returns>true if the validation control that is evaluated is valid; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.OnInit(System.EventArgs)">
      <summary>Raises the Init event to initialize the <see cref="T:System.Web.DynamicData.DynamicValidator" /> control.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.ValidateException(System.Exception)">
      <summary>Sets up a validation exception if an exception occurs in the data model. </summary>
      <param name="exception">The exception that is thrown.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidator.ValidationException">
      <summary>Gets or sets validation exception that occurs during validation.</summary>
      <returns>The validation exception that is thrown. </returns>
    </member>
    <member name="T:System.Web.DynamicData.EntityTemplate">
      <summary>Displays the content that is defined for the entity in entity-template data-bound controls by using ASP.NET Dynamic Data features.</summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.EntityTemplate" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplate.ItemTemplate">
      <summary>Gets or sets the custom content for the data item in a <see cref="T:System.Web.DynamicData.EntityTemplate" /> control.</summary>
      <returns>The custom content for the data item in a <see cref="T:System.Web.DynamicData.EntityTemplate" /> control.</returns>
    </member>
    <member name="T:System.Web.DynamicData.EntityTemplateFactory">
      <summary>Creates an entity template.</summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> class. </summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.BuildEntityTemplateVirtualPath(System.String,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Builds the path of the entity template for the specified table.</summary>
      <returns>The path of the entity template for the specified table.</returns>
      <param name="templateName">The name of the entity template for which to build the path.</param>
      <param name="mode">The display mode of the entity template.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="templateName" /> is null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.CreateEntityTemplate(System.Web.DynamicData.MetaTable,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>Creates an instance of the entity template for the specified table.</summary>
      <returns>An instance of the <see cref="T:System.Web.DynamicData.EntityTemplateUserControl" /> class.</returns>
      <param name="table">The metadata for the table to which the entity template applies. </param>
      <param name="mode">The display mode of the entity template.</param>
      <param name="uiHint">The name of the template to use.</param>
      <exception cref="T:System.ArgumentNullException">The table is null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.GetEntityTemplateVirtualPath(System.Web.DynamicData.MetaTable,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>Gets the virtual path of the entity template for the specified table.</summary>
      <returns>The virtual path of the entity template for the specified table.</returns>
      <param name="table">The metadata for the table to which the entity template applies.</param>
      <param name="mode">The display mode of the entity template.</param>
      <param name="uiHint">The name of the template to use.</param>
      <exception cref="T:System.ArgumentNullException">The table is null.</exception>
    </member>
    <member name="T:System.Web.DynamicData.EntityTemplateUserControl">
      <summary>Defines the base class for entity templates.</summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateUserControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.EntityTemplateUserControl" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.ContainerType">
      <summary>Gets the type of the data-bound control that contains this entity template.</summary>
      <returns>The type that contains the template.</returns>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.Mode">
      <summary>Gets the data-rendering mode for the entity. </summary>
      <returns>The data-rendering mode for the entity.</returns>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.Table">
      <summary>Gets the table that the entity template applies to.</summary>
      <returns>The table that the entity template applies to.</returns>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.ValidationGroup">
      <summary>Gets the validation to apply to the entity control group.</summary>
      <returns>The validation to apply to the entity control group.</returns>
    </member>
    <member name="T:System.Web.DynamicData.FieldTemplateFactory">
      <summary>Creates a field template.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> class.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Builds the virtual path to a field template based on the field template name and the mode.</summary>
      <returns>The virtual path to the field template.</returns>
      <param name="templateName">The name of the template to use.</param>
      <param name="column">Specifies the data column which the field template applies to.</param>
      <param name="mode">Specifies the display mode of the field template.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="templateName" /> is null. </exception>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>Creates an instance of a field template using the <see cref="T:System.Web.DynamicData.MetaColumn" /> class, the <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> class and <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> property.</summary>
      <returns>An instance of the interface that the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> class implements.</returns>
      <param name="column">Specifies the data column which the field template applies to.</param>
      <param name="mode">Specifies the display mode of the field template.</param>
      <param name="uiHint">Specifies the field template to use.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>Determines the virtual path of a field template. </summary>
      <returns>The virtual path of the field template. </returns>
      <param name="column">Specifies the data column which the field template applies to.</param>
      <param name="mode">Specifies the display mode of the field template-Read Only, Edit, or Insert.</param>
      <param name="uiHint">Specifies the field template to use. This parameter affects the field template look up.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)">
      <summary>Associates a <see cref="T:System.Web.DynamicData.MetaModel" /> with a <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />. </summary>
      <param name="model">Specifies the data model to associate with the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateFactory.Model">
      <summary>Gets or sets the <see cref="T:System.Web.DynamicData.MetaModel" /> that is associated with the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> class </summary>
      <returns>The model that is associated with the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Changes the mode of the data column.</summary>
      <returns>The mode that a column renders.</returns>
      <param name="column">The column for which the field template is needed.</param>
      <param name="mode">The mode (Read Only, Edit, or Insert) to change to.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath">
      <summary>Gets or sets the folder in which to create a field template. </summary>
      <returns> The path to the folder that contains the field templates.</returns>
    </member>
    <member name="T:System.Web.DynamicData.FieldTemplateUserControl">
      <summary>Represents the base class for all field template controls. </summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.FieldTemplateUserControl" /> class.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.BuildChildrenPath(System.String)">
      <summary>Gets the URL that links to the page that displays the list of children entities and allows the path to be overridden.</summary>
      <returns>The URL that links the displayed page to the children page. </returns>
      <param name="path">The path to override.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.BuildForeignKeyPath(System.String)">
      <summary>Get the URL that links the current page to the page that displays the details of the foreign key entity and allows the path to be overridden.</summary>
      <returns>The URL that links to the page that displays the details of the foreign key page.</returns>
      <param name="path">The path to override.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ChildrenColumn">
      <summary>Gets the <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> object associated with a field template. </summary>
      <returns>A column that represents a one-to-many relationship.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Web.DynamicData.FieldTemplateUserControl.ChildrenColumn" /> is null.</exception>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ChildrenPath">
      <summary>Gets the URL that links to a page that displays a list of children entities. </summary>
      <returns> The URL that links the displayed page to the children entities. </returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Column">
      <summary>Gets the <see cref="T:System.Web.DynamicData.MetaColumn" /> associated with a field template. </summary>
      <returns>An object that represents a database column. </returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ContainerType">
      <summary>Gets the type of the data-bound control that contains the <see cref="T:System.Web.DynamicData.FieldTemplateUserControl" /> class.</summary>
      <returns>The container control type.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ConvertEditedValue(System.String)">
      <summary>Gets either an input value or null based on <see cref="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" /> and <see cref="P:System.Web.DynamicData.DynamicField.NullDisplayText" />. </summary>
      <returns>The converted value.</returns>
      <param name="value">The input value.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.DataControl">
      <summary>Gets the data control that handles the data field in a field template.</summary>
      <returns>A data control that handles the data field in a field template.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ExtractForeignKey(System.Collections.IDictionary,System.String)">
      <summary>Saves the value of foreign keys. </summary>
      <param name="dictionary">The dictionary that contains all the new values.</param>
      <param name="selectedValue">The value to save. </param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ExtractValues(System.Collections.Specialized.IOrderedDictionary)">
      <summary>Provides dictionary access to all data in the current row. </summary>
      <param name="dictionary">The dictionary that contains all the new values.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValue">
      <summary>Gets or sets the value of a column in a current row.</summary>
      <returns>An object that represents the value of the column in the current row.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValueEditString">
      <summary>Gets the string representation of the value of a column in the current row when the row is in edit mode. </summary>
      <returns>The value of the column in the row that is edited. </returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValueString">
      <summary>Gets the formatted string representation of the value of a column in the current row.</summary>
      <returns>The formatted value of the column in the current row.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.FindOtherFieldTemplate(System.String)">
      <summary>Determines the field template that is used to render a specified data column. </summary>
      <returns>The field template that is used to render a specified data column.</returns>
      <param name="columnName">The data column the field template renders.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ForeignKeyColumn">
      <summary>Gets the <see cref="T:System.Web.DynamicData.MetaForeignKeyColumn" /> that is associated with a foreign key column. </summary>
      <returns>A column that represents a many-to-one relationship.</returns>
      <exception cref="T:System.Exception">If the <see cref="T:System.Web.DynamicData.MetaForeignKeyColumn" /> is not a foreign key column.</exception>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ForeignKeyPath">
      <summary>Get the URL that links the current page to the page that displays the details of the foreign key entity. </summary>
      <returns>The URL that links to the details of the foreign key data.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.FormatFieldValue(System.Object)">
      <summary>Applies HTML encoding and formatting to a string that will be displayed.</summary>
      <returns>The formatted value.</returns>
      <param name="fieldValue">The value from the data field to format. </param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FormattingOptions">
      <summary>Gets or sets the HTML encoding and formatting options to apply to a field template. </summary>
      <returns>The interface that exposes the HTML encoding and formatting options to apply to a field template.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.GetColumnValue(System.Web.DynamicData.MetaColumn)">
      <summary>Gets the value of a specified column in the current row.</summary>
      <returns>An object that represents the value of a specified column in the current row.</returns>
      <param name="column">The column to get the value from.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.GetSelectedValueString">
      <summary>Returns the string representation of the column's value.</summary>
      <returns>If the column's current value is a foreign-key column or an enumeration column, a string representation of the selected value; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Host">
      <summary>Gets or sets the host that provides context to this <see cref="T:System.Web.DynamicData.FieldTemplateUserControl" /> class. </summary>
      <returns>The object that provides context to this field template class.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.IgnoreModelValidationAttribute(System.Type)">
      <summary>Allows a <see cref="T:System.Web.DynamicData.DynamicValidator" /> to ignore a specific type of model validation attribute.</summary>
      <param name="attributeType">The attribute to ignore.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.MetadataAttributes">
      <summary>Gets the collection of metadata attributes that apply to the current column.</summary>
      <returns>The collection of metadata attributes that apply to the column.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Mode">
      <summary>Gets the mode a field template uses.  </summary>
      <returns>The current mode of the field template. </returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.PopulateListControl(System.Web.UI.WebControls.ListControl)">
      <summary>Populates a list control with all the values from a parent table. </summary>
      <param name="listControl">The list control to populate.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Row">
      <summary>Gets the current data row object.</summary>
      <returns>The current data row object.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.SetUpValidator(System.Web.UI.WebControls.BaseValidator)">
      <summary>Sets up a <see cref="P:System.Web.DynamicData.IFieldTemplateHost.ValidationGroup" /> on all validation controls.</summary>
      <param name="validator">The validation control to set up. </param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.SetUpValidator(System.Web.UI.WebControls.BaseValidator,System.Web.DynamicData.MetaColumn)">
      <summary>Sets up a <see cref="T:System.Web.DynamicData.DynamicValidator" /> using the type of validator and the column to validate.</summary>
      <param name="validator">The type of validator to set up.</param>
      <param name="column">The column for which to validator is set.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.System#Web#DynamicData#IFieldTemplate#SetHost(System.Web.DynamicData.IFieldTemplateHost)">
      <summary>Associates a field template with the object that controls how the field template is used. </summary>
      <param name="host">The object that hosts the field template class. Controls the use of the field template.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.System#Web#UI#IBindableControl#ExtractValues(System.Collections.Specialized.IOrderedDictionary)">
      <summary>Retrieves a set of name/value pairs to implement two-way data-binding in field template controls.</summary>
      <param name="dictionary">The dictionary that contains name/values pairs.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Table">
      <summary>Gets the <see cref="T:System.Web.DynamicData.MetaTable" /> that a column of a field template belongs to.</summary>
      <returns>The table that the column that is associated with the field template belongs to. </returns>
    </member>
    <member name="T:System.Web.DynamicData.FilterFactory">
      <summary>Creates a filter template.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> class.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)">
      <summary>Creates an instance of the filter template.</summary>
      <returns>An instance of the <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" /> class.</returns>
      <param name="column">The data column to which the filter template applies.</param>
      <param name="filterUIHint">The name of the filter template to use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> is null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)">
      <summary>Gets the virtual path of the filter template.</summary>
      <returns>The virtual path of the filter template.</returns>
      <param name="column">The data column to which the filter template applies.</param>
      <param name="filterUIHint">The filter template to use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> is null.</exception>
    </member>
    <member name="T:System.Web.DynamicData.FilterRepeater">
      <summary>Represents a control that enumerates table columns that can be filtered.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.FilterRepeater" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.ContextTypeName">
      <summary>Gets or sets the name of the data-source object to use to retrieve the data. </summary>
      <returns>The name of the data source object to use to retrieve the data.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.DataBind">
      <summary>Binds the <see cref="T:System.Web.DynamicData.FilterRepeater" /> control to the data that is retrieved from a data source.</summary>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.DynamicFilterContainerId">
      <summary>Gets or sets the ID of the <see cref="T:System.Web.DynamicData.FilterRepeater" /> control in an <see cref="P:System.Web.UI.WebControls.TemplateColumn.ItemTemplate" /> instance.</summary>
      <returns>The ID of the control used to display the filter UI in the <see cref="P:System.Web.UI.WebControls.TemplateColumn.ItemTemplate" /> instance, if an ID is specified; otherwise, "DynamicFilter".</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.GetFilteredColumns">
      <summary>Returns an enumeration of the sortable columns that belong to the table that is associated with the current <see cref="T:System.Web.DynamicData.FilterRepeater" /> control.</summary>
      <returns>An enumeration of the sortable columns that belong to the table that is associated with the current <see cref="T:System.Web.DynamicData.FilterRepeater" /> control.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Gets the list of Where parameters to add to the Where parameter collection of the <see cref="T:System.Web.DynamicData.FilterRepeater" /> control.</summary>
      <returns>A list of Where parameters.</returns>
      <param name="dataSource">The data source of the Where parameters.</param>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.OnFilterItemCreated(System.Web.UI.WebControls.RepeaterItem)">
      <summary>Called for every item and alternating item template that is being instantiated by this <see cref="T:System.Web.DynamicData.FilterRepeater" /> control during data binding.</summary>
      <param name="item">The contents of the item template.</param>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event to initialize the <see cref="T:System.Web.DynamicData.FilterRepeater" /> control.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.Repeater.ItemCreated" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.Table">
      <summary>Gets the table that is associated with the <see cref="T:System.Web.DynamicData.FilterRepeater" /> control.</summary>
      <returns>The table that is associated with the <see cref="T:System.Web.DynamicData.FilterRepeater" /> control.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.TableName">
      <summary>Gets the name of the table to filter.</summary>
      <returns>The name of the table to filter.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.Visible">
      <summary>Gets or sets a value that specifies whether the control is displayed.</summary>
      <returns>true if the control is displayed; otherwise false.</returns>
    </member>
    <member name="T:System.Web.DynamicData.FilterUserControlBase">
      <summary>Provides the base class for user controls that are used to filter data in a data table. This class is used to display filter selectors.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterUserControlBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.FilterUserControlBase" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.Column">
      <summary>Gets the column a filter applies to.</summary>
      <returns>The column a filter applies to.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.ContextTypeName">
      <summary>Gets or sets the type of context that a table or data column is part of.</summary>
      <returns>The name of the data source object to use to retrieve the data.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.DataField">
      <summary>Gets or sets the name of the column to filter.</summary>
      <returns>The name of the column to filter.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.InitialValue">
      <summary>Gets the initial value of the filter when the filter is populated.</summary>
      <returns>The initial value of the filter.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterUserControlBase.PopulateListControl(System.Web.UI.WebControls.ListControl)">
      <summary>Populates a <see cref="T:System.Web.UI.WebControls.ListControl" /> object with all the items in a data table that are related to the current table through a foreign key.</summary>
      <param name="listControl">The control to populate.</param>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.SelectedDataKey">
      <summary>Gets the data key for the selected item.</summary>
      <returns>The key of the selected item.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.SelectedValue">
      <summary>Gets the selected value in a drop-down list box control.</summary>
      <returns>The currently selected value in a drop-down list box control.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.System#Web#DynamicData#IControlParameterTarget#FilteredColumn">
      <summary>Gets the data column that is filtered.</summary>
      <returns>The data column that is filtered.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterUserControlBase.System#Web#DynamicData#IControlParameterTarget#GetPropertyNameExpression(System.String)">
      <summary>Gets the name of the column that is filtered.</summary>
      <returns>The column that is filtered.</returns>
      <param name="columnName">The column that is filtered.</param>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.System#Web#DynamicData#IControlParameterTarget#Table">
      <summary>Gets the table that is filtered.</summary>
      <returns>The table that was filtered.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.TableName">
      <summary>Gets or sets the name of the data table that is used by the filter.</summary>
      <returns>The name of the data table that is used by the filter.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IControlParameterTarget">
      <summary>Defines members that a class must implement in order to provide data to for an instance of the <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.IControlParameterTarget.FilteredColumn">
      <summary>Gets the column to which the parameter is being applied, if available.</summary>
      <returns>The column to which the parameter is being applied, if available.</returns>
    </member>
    <member name="M:System.Web.DynamicData.IControlParameterTarget.GetPropertyNameExpression(System.String)">
      <summary>Get an expression that can be used as a control parameter's property name.</summary>
      <returns>An expression that can be used as a control parameter's property name.</returns>
      <param name="columnName">The name of the column.</param>
    </member>
    <member name="P:System.Web.DynamicData.IControlParameterTarget.Table">
      <summary>Gets the type of the data that is being served by this provider.</summary>
      <returns>The type of the data that is being served by this provider.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IFieldFormattingOptions">
      <summary>Defines an interface for common formatting-option properties to be applied to field template user controls. </summary>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.ApplyFormatInEditMode">
      <summary>Gets a value that indicates whether the formatting string that is specified by the <see cref="P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString" /> property is applied to field values when the field is in edit mode.</summary>
      <returns>true if the formatting string is applied in edit mode; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull">
      <summary>Gets a value that indicates whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</summary>
      <returns>true if empty string values are automatically converted to null values; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString">
      <summary>Gets a string that specifies the display format for the value of the field.</summary>
      <returns>A formatting string that specifies the display format for the value of the field. </returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.HtmlEncode">
      <summary>Gets a value that indicates whether the data for the control is HTML-encoded before it is rendered.</summary>
      <returns>true if the data for the control is HTML-encoded before it is rendered; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText">
      <summary>Gets the caption that is displayed for a field when the field value is null.</summary>
      <returns>The caption that is displayed for a field when the field value is null.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IFieldTemplate">
      <summary>Defines members that a class must implement in order to be recognized as a field template.</summary>
    </member>
    <member name="M:System.Web.DynamicData.IFieldTemplate.SetHost(System.Web.DynamicData.IFieldTemplateHost)">
      <summary>Associates the field template with the object that controls its use. </summary>
      <param name="host">The object that controls the use of the field template.</param>
    </member>
    <member name="T:System.Web.DynamicData.IFieldTemplateFactory">
      <summary>Defines an interface implemented by objects that create field templates.</summary>
    </member>
    <member name="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>Creates an instance of a field template using the <see cref="T:System.Web.DynamicData.MetaColumn" /> class, the <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> class and <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> property.  </summary>
      <returns>An instance of a <see cref="FieldTemplateFactory" /> object when implemented in a class.</returns>
      <param name="column">Specifies the data column to use to display the field template.</param>
      <param name="mode">Specifies the display mode of the field template.</param>
      <param name="uiHint">Specifies the field template to use.</param>
    </member>
    <member name="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)">
      <summary>Initializes a <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> using the specified data model. </summary>
      <param name="model">Specifies the data model that the field template uses. </param>
    </member>
    <member name="T:System.Web.DynamicData.IFieldTemplateHost">
      <summary>Defines members that must be implemented by a class that manages the use of field-template user controls.</summary>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.Column">
      <summary>Gets the column that the field template is associated with.</summary>
      <returns>The column that the field template is associated with.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions">
      <summary>Gets the formatting options that will be applied to the field template.</summary>
      <returns>The formatting options that will be applied to the field template.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.Mode">
      <summary>Gets the rendering mode for the field template.</summary>
      <returns>One of the enumeration values that specifies the rendering mode for the field template.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.ValidationGroup">
      <summary>Gets the validation group name for the field template. </summary>
      <returns>The validation group name for the field template.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IWhereParametersProvider">
      <summary>Implemented by parameter classes that provide one or many Where parameters.</summary>
    </member>
    <member name="M:System.Web.DynamicData.IWhereParametersProvider.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Gets the list of Where parameters that should be added to the Where parameter collection.</summary>
      <returns>A list of parameters.</returns>
      <param name="dataSource">The source of the parameter.</param>
    </member>
    <member name="T:System.Web.DynamicData.MetaChildrenColumn">
      <summary>Represents a database field that indicates a one-to-many relationship.</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> class.</summary>
      <param name="table">The meta table.</param>
      <param name="entityMember">The column provider.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaChildrenColumn.ChildTable">
      <summary>Gets an object that represents the child table of the one-to-many relationship.</summary>
      <returns>An object that represents the child table of the one-to-many relationship.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable">
      <summary>Gets an object that represents the foreign-key field in the child table.</summary>
      <returns>An object that represents the foreign-key field in the child table.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)">
      <summary>Gets the path of the list-action page for the child table.</summary>
      <returns>The path of the list-action page for the child table.</returns>
      <param name="row">The row that contains the foreign-key field.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)">
      <summary>Gets the path of the specified action page of the child table.</summary>
      <returns>The path of the specified action page of the child table.</returns>
      <param name="action">The target action.</param>
      <param name="row">The row that contains the foreign-key field.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)">
      <summary>Gets the path for the specified action page of the child table.</summary>
      <returns>The path of the specified action page of the child table.</returns>
      <param name="action">The target action. </param>
      <param name="row">The row that contains the foreign-key field.</param>
      <param name="path">The target page.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.Initialize">
      <summary>Initializes data that might not be available when the constructor is called.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaChildrenColumn.IsManyToMany">
      <summary>Gets a value that indicates the many-to-many relationship status of the column.</summary>
      <returns>true if the column relationship is many-to-many; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaColumn">
      <summary>Represents a database column that is used by Dynamic Data.</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaColumn" /> class.</summary>
      <param name="table">The meta table that contains the column.</param>
      <param name="columnProvider">The column provider.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.AllowInitialValue">
      <summary>Gets or sets a value that specifies whether a column enables a value to be inserted.</summary>
      <returns>true if the column enables a value to be inserted; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode">
      <summary>Gets a value that indicates whether the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode.</summary>
      <returns>true if the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Attributes">
      <summary>Gets the collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</summary>
      <returns>The collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.BuildAttributeCollection">
      <summary>Gets the attribute collection.</summary>
      <returns>The attribute collection.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ColumnType">
      <summary>Gets the data field type.</summary>
      <returns>The data field type.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull">
      <summary>Gets a value that indicates whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</summary>
      <returns>true if empty string values are automatically converted to null values when the data field is updated in the data source; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DataFormatString">
      <summary>Gets the string that specifies the display format for the field value.</summary>
      <returns>The string that specifies the display format for the field value.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DataTypeAttribute">
      <summary>Gets the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</summary>
      <returns>The <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DefaultValue">
      <summary>Gets the default value for the data field.</summary>
      <returns>The default value for the data field.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Description">
      <summary>Gets the description for the data field.</summary>
      <returns>The description for the data field.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DisplayName">
      <summary>Gets the display name for the data field.</summary>
      <returns>The display name for the data field.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.EntityTypeProperty">
      <summary>Gets an object that contains attributes of the property that represents the data field in the entity type.</summary>
      <returns>An object that contains attributes of the property that represents the data field in the entity type.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.FilterUIHint">
      <summary>Gets the <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</summary>
      <returns>The <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.HtmlEncode">
      <summary>Gets a value that indicates whether field values are HTML-encoded before they are displayed in a data-bound control.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.Initialize">
      <summary>Initializes data that might not be available when the constructor is called.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsBinaryData">
      <summary>Gets a value that indicates whether the data field contains binary data.</summary>
      <returns>true if the data field contains binary data; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsCustomProperty">
      <summary>Gets a value that indicates whether the data field exists in the database.</summary>
      <returns>true if the data field does not exist in the database; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint">
      <summary>Gets a value that indicates whether the data field is a floating-point type.</summary>
      <returns>true if the data field is a floating-point type; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent">
      <summary>Gets a value that indicates whether the data field is part of a foreign key.</summary>
      <returns>true if the data field is part of a foreign key; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsGenerated">
      <summary>Gets a value that indicates whether the data field value is automatically generated in the database.</summary>
      <returns>true if the data field value is automatically generated in the database; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsInteger">
      <summary>Gets a value that indicates whether the data field type is an integer type.</summary>
      <returns>true if the data field type is an integer type; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsLongString">
      <summary>Gets a value that indicates whether the data field type can contain long strings.</summary>
      <returns>true if the data field type can contain long strings; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey">
      <summary>Gets a value that indicates whether the data field is part of the table's primary key.</summary>
      <returns>true if the data field is part of the table's primary key; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsReadOnly">
      <summary>Gets a value that indicates whether the data field is read-only.</summary>
      <returns>true if the data field is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsRequired">
      <summary>Gets a value that indicates whether the data field requires a value.</summary>
      <returns>true if the data field requires a value; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsString">
      <summary>Gets a value that indicates whether the data field type is a string type.</summary>
      <returns>true if the data field type is a string type; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.MaxLength">
      <summary>Gets a value that indicates the maximum length of data that can be stored in the data field.</summary>
      <returns>The maximum length of data that can be stored in the data field.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Model">
      <summary>Gets the <see cref="T:System.Web.DynamicData.MetaModel" /> object that represents the data model that this data field belongs to.</summary>
      <returns>An object that represents the data model that this data field belongs to.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Name">
      <summary>Gets the name of the data field.</summary>
      <returns>The name of the data field.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.NullDisplayText">
      <summary>Gets the caption that is displayed for a field when the field's value is null.</summary>
      <returns>The caption that is displayed for a field when the field's value is null.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Prompt">
      <summary>Gets a value that can be used as a watermark in the UI that is bound to data in the column.</summary>
      <returns>A value that can be used as a watermark in the UI that is bound to data in the column.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Provider">
      <summary>Gets the abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</summary>
      <returns>The abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage">
      <summary>Gets the error message that is displayed when the data field requires a value but its value is empty.</summary>
      <returns>The error message that is displayed when the data field requires a value but its value is empty.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.ResetMetadata">
      <summary>Clears cached column metadata.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Scaffold">
      <summary>Gets a value that indicates whether the data field should be displayed.</summary>
      <returns>true if the data field should be displayed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ShortDisplayName">
      <summary>Gets the short name for the column.</summary>
      <returns>The short name for the column.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.SortExpression">
      <summary>Gets the expression that is used to determine the sort order for the data field.</summary>
      <returns>The expression that is used to determine the sort order for the data field.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Table">
      <summary>Gets the <see cref="T:System.Web.DynamicData.MetaTable" /> object that represents the table that the data field belongs to.</summary>
      <returns>An object that represents the table that the data field belongs to.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.ToString">
      <summary>Gets the data field name.</summary>
      <returns>The data field name, which is the string representation of the column.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.TypeCode">
      <summary>Gets the type of the data field.</summary>
      <returns>The type of the data field.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.UIHint">
      <summary>Gets the name of the field template specified for the data field.</summary>
      <returns>The name of the field template specified for the data field.</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaForeignKeyColumn">
      <summary>Represents a database foreign-key field that is used by ASP.NET Dynamic Data.</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaForeignKeyColumn" /> class.</summary>
      <param name="table">The entity meta table.</param>
      <param name="entityMember">The entity column provider.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(System.Collections.IDictionary,System.String)">
      <summary>Saves the value of a foreign key in the specified dictionary.</summary>
      <param name="dictionary">A dictionary object that contains the new values for a data field.</param>
      <param name="value">The value of the foreign key.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames">
      <summary>Gets a collection that contains the names of the foreign keys in the association that represents a database relationship.</summary>
      <returns>A collection that contains the names of the foreign keys.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(System.String)">
      <summary>Returns the alternate name that is mapped to a foreign key.</summary>
      <returns>The alternate name that is mapped to the foreign key.</returns>
      <param name="foreignKeyName">The name of the foreign key.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(System.Object)">
      <summary>Gets the path for the details action page of the parent table of the specified foreign-key field.</summary>
      <returns>The path for the details action page of the parent table of the specified foreign-key field.</returns>
      <param name="row">The row that contains the foreign-key field.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object)">
      <summary>Gets the path for the specified action page of the parent table of the specified foreign-key field.</summary>
      <returns>The path for the specified action page of the parent table of the specified foreign-key field.</returns>
      <param name="action">The target action.</param>
      <param name="row">The row that contains the foreign-key field.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object,System.String)">
      <summary>Gets the path for the specified action page of the parent table of the specified foreign-key field.</summary>
      <returns>The path for the specified action page of the parent table of the specified foreign-key field.</returns>
      <param name="action">The target action. </param>
      <param name="row">The row that contains the foreign-key field.</param>
      <param name="path">The target page.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(System.Object)">
      <summary>Retrieves a comma-separated list of values that represent the foreign-key for the specified row.</summary>
      <returns>A comma-separated list of values that represent the foreign key for the specified row.</returns>
      <param name="row">The row to retrieve the foreign-key values for.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(System.Object)">
      <summary>Retrieves a collection of values that represent the foreign keys for the specified row.</summary>
      <returns>A collection of values that represent the foreign keys for the specified row.</returns>
      <param name="row">The row to retrieve the foreign-key values for.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.Initialize">
      <summary>Initializes data that may not be available when the constructor is called.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable">
      <summary>Gets a value that indicates whether the foreign-key field is part of the primary key of the table.</summary>
      <returns>true if the foreign-key field is part of the primary key of the table; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.ParentTable">
      <summary>Gets the parent table of the foreign-key field.</summary>
      <returns>The parent table of the foreign-key field.</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaModel">
      <summary>Represents one or multiple databases that are used by ASP.NET Dynamic Data. </summary>
      <exception cref="T:System.InvalidOperationException">Can be thrown by any method if there has been a data context registration error.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.#ctor">
      <summary>Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)">
      <summary>Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</summary>
      <param name="registerGlobally">true to indicate that the model is registered globally; otherwise false. The default is true.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)">
      <summary>Instantiates a <see cref="T:System.Web.DynamicData.MetaTable" /> object. </summary>
      <returns>A new instance of the table.</returns>
      <param name="provider">The provider for the table.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.Default">
      <summary>Gets the first instance of a data model that is created by the application.</summary>
      <returns>The data-model instance. </returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath">
      <summary>Gets or sets the virtual path of the DynamicData folder in the Web site.</summary>
      <returns>The virtual path of the DynamicData folder.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.EntityTemplateFactory">
      <summary>Gets or sets the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</summary>
      <returns>An instance of the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory">
      <summary>Gets or sets a custom <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</summary>
      <returns>The <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.FilterFactory">
      <summary>Gets or sets the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</summary>
      <returns>An instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)">
      <summary>Returns the action path that is associated with a specific table. </summary>
      <returns>The URL that is associated with the route.</returns>
      <param name="tableName">The name of the table that the action applies to.</param>
      <param name="action">The action to apply to the table.</param>
      <param name="row">An object that represents a single row of data in a table. <paramref name="row" /> is used to provide values for query-string parameters.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)">
      <summary>Returns the data-model instance for the specified context.</summary>
      <returns>The data model that is associated with the specified context type.</returns>
      <param name="contextType">The type of the data context as defined in the data model.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.String)">
      <summary>Returns the metadata that is associated with the specified table.</summary>
      <returns>The metadata that describes the specified table.</returns>
      <param name="uniqueTableName">The name that identifies the table in the data model.</param>
      <exception cref="T:System.ArgumentException">The name was not found in the data model.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)">
      <summary>Returns the metadata that describes the specified table.</summary>
      <returns>The metadata that describes the specified table.</returns>
      <param name="tableName">The name of the table.</param>
      <param name="contextType">The data context to search for the table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tablename" /> or <paramref name="contextType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The context is not registered or the table does not exist in the data context.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)">
      <summary>Returns the metadata that describes the specified table.</summary>
      <returns>The metadata that describes the specified table.</returns>
      <param name="entityType">The type that identifies the table in the data model.</param>
      <exception cref="T:System.ArgumentNullException">The type was not found in the data model.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})">
      <summary>Registers the data context that is specified by a context factory.</summary>
      <param name="contextFactory">The factory for instantiating the data context.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)">
      <summary>Registers a data-context instance by using the specified context configuration and by enabling a custom constructor. </summary>
      <param name="contextFactory">A delegate that is used to instantiate the data model context.</param>
      <param name="configuration">Context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextFactory" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="contextType" /> that is instantiated by <paramref name="contextFactory" /> is not valid.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)">
      <summary>Registers a data-context instance. </summary>
      <param name="contextType">The type of the data context as defined in the data model.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)">
      <summary>Registers a data-context instance by using the specified context configuration. </summary>
      <param name="contextType">The type of the data context as defined in the data model.</param>
      <param name="configuration">Configuration information for the context, as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextType" /> is null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)">
      <summary>Registers a data context instance by using a data-model provider</summary>
      <param name="dataModelProvider">A provider for the data model.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)">
      <summary>Registers a data-context instance by using the specified context configuration and by enabling a data-model provider. </summary>
      <param name="dataModelProvider">A provider for the data model.</param>
      <param name="configuration">Context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataModelProvider" /> or <paramref name="configuration" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="contextType" /> is already registered.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.ResetRegistrationException">
      <summary>Resets any previous context registration error that might have occurred. </summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.Tables">
      <summary>Gets a collection of all the tables that are part of the data model.</summary>
      <returns>A collection that contains the tables that belong to the data model.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)">
      <summary>Attempts to get the metadata that is associated with the specified table.</summary>
      <returns>true if the table metadata is found; otherwise false.</returns>
      <param name="uniqueTableName">The name that uniquely identifies the table.</param>
      <param name="table">When this method returns, and if it has found the requested table, contains the metadata for that table. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uniqueTableName" /> is null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)">
      <summary>Attempts to get the metadata that is associated with the specified table.</summary>
      <returns>true if the table metadata is found; otherwise, false.</returns>
      <param name="entityType">The table type.</param>
      <param name="table">When this method returns, and if the requested table has been found, contains the metadata for the specified table. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entityType" /> is null.</exception>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.VisibleTables">
      <summary>Gets a collection of the visible tables in the data model.</summary>
      <returns>A visible table refers to a table that has scaffolding enabled. This means that it is a table for which a List.aspx page exists.</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaTable">
      <summary>Represents the metadata that describes a table for use by Dynamic Data pages.</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaTable" /> class.</summary>
      <param name="metaModel">The entity meta model.</param>
      <param name="tableProvider">The entity model provider.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Attributes">
      <summary>Gets the attributes that are associated with the table.</summary>
      <returns>A collection that contains the attributes of the table.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.BuildAttributeCollection">
      <summary>Creates the attribute collection.</summary>
      <returns>The attribute collection.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)">
      <summary>Gets a value that indicates whether the specified user is allowed to perform delete operations.</summary>
      <returns>true if the user is allowed to perform delete operations; otherwise, false.</returns>
      <param name="principal">The user's security context.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)">
      <summary>Gets a value that indicates whether the specified user is allowed to perform insert operations.</summary>
      <returns>true if the user is allowed to perform insert operations; otherwise, false.</returns>
      <param name="principal">The user's security context.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)">
      <summary>Gets a value that indicates whether the specified user is allowed to perform read operations.</summary>
      <returns>true if the user is allowed to perform read operations; otherwise, false.</returns>
      <param name="principal">The user's security context.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)">
      <summary>Gets a value that indicates whether the specified user is allowed to perform update operations.</summary>
      <returns>true if the user is allowed to perform update operations; otherwise, false.</returns>
      <param name="principal">The user's security context.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Columns">
      <summary>Gets the column collection for the table.</summary>
      <returns>A collection that contains the columns for the table.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Creates a new <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> object.</summary>
      <returns>The new child metacolumn object.</returns>
      <param name="columnProvider">The column provider.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Creates a <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</summary>
      <returns>The new metacolumn object.</returns>
      <param name="columnProvider">The column provider.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateContext">
      <summary>Returns the data context for the table.</summary>
      <returns>The data context for the table.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Creates an object that contains foreign-key metadata.</summary>
      <returns>An object that contains foreign-key metadata.</returns>
      <param name="columnProvider">The column provider.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)">
      <summary>Creates the metadata for the specified table.</summary>
      <returns>An object that contains the table metadata.</returns>
      <param name="typeDescriptor">Information about the table type.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateTable(System.Type)">
      <summary>Creates the metadata for the specified table.</summary>
      <returns>An object that contains the table metadata.</returns>
      <param name="entityType">The table type for which to generate metadata.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DataContextPropertyName">
      <summary>Gets the name of the table.</summary>
      <returns>The name of the table.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DataContextType">
      <summary>Gets the type of the data context that is associated with the table.</summary>
      <returns>The type of the data context. </returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DisplayColumn">
      <summary>Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.</summary>
      <returns>The column that is used to display values when entries in this table are used as parents in foreign-key relationships.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DisplayName">
      <summary>Gets the name of the table in a user-friendly format.</summary>
      <returns>The string that represents the user-friendly name of the table.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.EntityType">
      <summary>Gets the entity type that represents the table.</summary>
      <returns>The type that represents the entity.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames">
      <summary>Gets a comma-separated list of foreign-key names.</summary>
      <returns>A comma-separated list of foreign-key names.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)">
      <summary>Returns the action path for the current table and the specified action.</summary>
      <returns>The action path for the specified action.</returns>
      <param name="action">The name of the action.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})">
      <summary>Returns the action path for the current table, specified action, and specified primary key.</summary>
      <returns>The action path for the specified action and primary key.</returns>
      <param name="action">The name of the action.</param>
      <param name="primaryKeyValues">The list of column values that make up the primary key.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)">
      <summary>Appends query strings to the action path, based on the specified primary key and virtual path.</summary>
      <returns>The action path for the specified primary key and virtual path, with query-string values appended to it.</returns>
      <param name="action">The name of the action.</param>
      <param name="primaryKeyValues">The list of column values that make up the primary key.</param>
      <param name="path">The virtual path of the action.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)">
      <summary>Returns the action path for the specified row by using the name of the action.</summary>
      <returns>The action path for the specified row.</returns>
      <param name="action">The name of the action.</param>
      <param name="row">The row to get the action path for.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)">
      <summary>Returns the action path for the specified row by using the name of the action and the virtual path of the action.</summary>
      <returns>The action path for the specified row.</returns>
      <param name="action">The name of the action.</param>
      <param name="row">An object that contains the row for the action path.</param>
      <param name="path">The virtual path of the action.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Returns the action path for the current table and for the specified action and routes.</summary>
      <returns>The action path for the specified action and routes.</returns>
      <param name="action">The name of the action.</param>
      <param name="routeValues">The list of routes for the action.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetColumn(System.String)">
      <summary>Returns the metadata for the specified column.</summary>
      <returns>The column metadata. </returns>
      <param name="columnName">The name of the column to get metadata for.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)">
      <summary>Gets the collection of column values.</summary>
      <returns>The collection of column values.</returns>
      <param name="context">The context for the specified Web request.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute">
      <summary>Retrieves the primary key of the entity from the route values.</summary>
      <returns>The primary-key values of the entities, if they are found; otherwise, null.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)">
      <summary>Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.</summary>
      <returns>The display name for an instance of a row.</returns>
      <param name="row">The row to get the display string for.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetFilteredColumns">
      <summary>Retrieves a list of columns that are filterable.</summary>
      <returns>A list of columns that are filterable.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)">
      <summary>Retrieves a dictionary of primary-key names and values for the specified row.</summary>
      <returns>A dictionary of primary-key names and values.</returns>
      <param name="row">A row.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})">
      <summary>Returns a comma-separated list of column values that represent the primary key for the specified row.</summary>
      <returns>A comma-separated list of column values. If the list is empty, an empty string is returned.</returns>
      <param name="primaryKeyValues">The list of column values that make up the primary key.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)">
      <summary>Returns a comma-separated list of column values that represent the primary key for the specified row.</summary>
      <returns>A comma-separated list of column values that represent the primary key for the row.</returns>
      <param name="row">The row to get the primary key for.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)">
      <summary>Returns a collection of column values that represent the primary key for the specified row.</summary>
      <returns>A collection of column values that represent the primary key for the row.</returns>
      <param name="row">The row to get the primary key for.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetQuery">
      <summary>Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table.</summary>
      <returns>The <see cref="T:System.Linq.IQueryable" /> instance for the entity type.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)">
      <summary>Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table by using the data context.</summary>
      <returns>The <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table in the data context.</returns>
      <param name="context">The context of the <see cref="T:System.Web.DynamicData.MetaTable" /> object.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)">
      <summary>Returns a list of columns to display by using scaffolding.</summary>
      <returns>A list of columns to display by using scaffolding.</returns>
      <param name="mode">The data-bound control mode.</param>
      <param name="containerType">A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetTable(System.Type)">
      <summary>Retrieves the metatable that is associated with the specified type.</summary>
      <returns>The metatable that is associated with the specified type.</returns>
      <param name="entityType">The type of the entity.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> method that was called by this method returned false.</exception>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.HasPrimaryKey">
      <summary>Gets a value that indicates whether the table has a primary key.</summary>
      <returns>true if the table has a primary key; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.Initialize">
      <summary>Initializes data that may not be available when the constructor is called.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.IsReadOnly">
      <summary>Gets a value that indicates whether the table is read-only.</summary>
      <returns>true if the table is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.ListActionPath">
      <summary>Gets the action path of the list action for the table.</summary>
      <returns>The action path of the list action for the table.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Model">
      <summary>Gets the meta model that the table belongs to.</summary>
      <returns>The meta model that the table belongs to.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Name">
      <summary>Gets the unique name of the table.</summary>
      <returns>The unique name of the table.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns">
      <summary>Gets the collection of columns that define the primary key.</summary>
      <returns>A collection that contains the primary-key columns.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Provider">
      <summary>Gets the provider for the table.</summary>
      <returns>The provider for the table.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.ResetMetadata">
      <summary>Resets the cached metadata for the table.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.RootEntityType">
      <summary>Gets the root type of the entity's inheritance hierarchy.</summary>
      <returns>The root type of the entity's inheritance hierarchy.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Scaffold">
      <summary>Gets or sets a value that indicates whether the table should be displayed.</summary>
      <returns>true if the table should be displayed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.SortColumn">
      <summary>Gets the <see cref="T:System.Web.DynamicData.MetaColumn" /> value that the table is sorted by.</summary>
      <returns>The column that the table is sorted by.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.SortDescending">
      <summary>Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.</summary>
      <returns>true if entries are sorted in descending order; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.ToString">
      <summary>Returns the name of the table.</summary>
      <returns>The name of the table.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)">
      <summary>Returns a value that indicates whether a specified column can be found.</summary>
      <returns>true if the specified column can be found; otherwise, false.</returns>
      <param name="columnName">The name of the column to find.</param>
      <param name="column">When this method returns, contains the MetaColumn object for <paramref name="columnName" />. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)">
      <summary>Retrieves the metatable that is associated with the specified type and table.</summary>
      <returns>The metatable that is associated with the given specified and table.</returns>
      <param name="entityType">The type of the entity.</param>
      <param name="table">When this method returns, contains the metatable that is associated with the specified type. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entityType" /> is null.</exception>
    </member>
    <member name="T:System.Web.DynamicData.PageAction">
      <summary>Specifies default action values that are used by the routing mechanism in ASP.NET Dynamic Data applications.</summary>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.Details">
      <summary>Gets the action name for a page that shows details of a data item.</summary>
      <returns>The literal value "Details".</returns>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.Edit">
      <summary>Gets the action name for a page that edits a data item.</summary>
      <returns>The literal value "Edit".</returns>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.Insert">
      <summary>Gets the action name for a page that inserts a data item.</summary>
      <returns>The literal value "Insert".</returns>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.List">
      <summary>Gets the action name for a page that displays data from a table.</summary>
      <returns>The literal value "List".</returns>
    </member>
    <member name="T:System.Web.DynamicData.QueryableFilterRepeater">
      <summary>Provides a templated control that automatically generates the UI to filter table rows for supported column types.</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterRepeater.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterRepeater.DynamicFilterContainerId">
      <summary>Gets or sets the ID of a <see cref="T:System.Web.DynamicData.DynamicFilter" /> control inside the template that is configured to be a filter for a column.</summary>
      <returns>The ID of a <see cref="T:System.Web.DynamicData.DynamicFilter" /> control inside the template that is configured to be a filter for a column.</returns>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate">
      <summary>Gets or sets the controls that populate the <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> class.</summary>
      <returns>An object that defines how items in the <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> control are displayed.</returns>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender(System.EventArgs)">
      <summary>Verifies whether the control contains data field filters.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Web.DynamicData.QueryableFilterUserControl">
      <summary>Provides a base class for filter controls.</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" /> class.</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.ApplyEqualityFilter(System.Linq.IQueryable,System.String,System.Object)">
      <summary>Gets the transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</summary>
      <returns>The transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</returns>
      <param name="source">The source <see cref="T:System.Linq.IQueryable" /> object.</param>
      <param name="propertyName">The name of the property.</param>
      <param name="value">The value for the <paramref name="propertyName" /> parameter.</param>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.Column">
      <summary>Gets the column to use for filtering.</summary>
      <returns>The column to use for filtering.</returns>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.DefaultValue">
      <summary>Gets the default values that are mapped for the table.</summary>
      <returns>The default values that are mapped for the table.</returns>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.DefaultValues">
      <summary>Gets the default values that are mapped for the table.</summary>
      <returns>The default values that are mapped for the table.</returns>
    </member>
    <member name="E:System.Web.DynamicData.QueryableFilterUserControl.FilterChanged">
      <summary>Occurs when the <see cref="M:System.Web.DynamicData.QueryableFilterUserControl.OnFilterChanged" /> method is called.</summary>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.FilterControl">
      <summary>Gets the data control that handles the filter inside the filter template.</summary>
      <returns>The data control that handles the filter.</returns>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.GetQueryable(System.Linq.IQueryable)">
      <summary>Gets the transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</summary>
      <returns>The transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</returns>
      <param name="source">The source <see cref="T:System.Linq.IQueryable" /> object.</param>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.OnFilterChanged">
      <summary>Raises the <see cref="E:System.Web.DynamicData.QueryableFilterUserControl.FilterChanged" /> event.</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.PopulateListControl(System.Web.UI.WebControls.ListControl)">
      <summary>Populates a list control with all the foreign-key elements or Boolean elements in the table.</summary>
      <param name="listControl">A list control.</param>
    </member>
    <member name="T:System.Web.DynamicData.TableNameAttribute">
      <summary>Provides an attribute to change the displayed name for a table.</summary>
    </member>
    <member name="M:System.Web.DynamicData.TableNameAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.TableNameAttribute" /> class with the specified name for the table.</summary>
      <param name="name">The name that the table will display.</param>
    </member>
    <member name="P:System.Web.DynamicData.TableNameAttribute.Name">
      <summary>Gets or sets the name of the table.</summary>
      <returns>The name that is associated with a table.</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.AssociationDirection">
      <summary>Indicates the relationship between two entities.</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.OneToOne">
      <summary>Indicates a one-to-one relationship.</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.OneToMany">
      <summary>Indicates a one-to-many relationship.</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.ManyToOne">
      <summary>Indicates a many-to-one relationship.</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.ManyToMany">
      <summary>Indicates a many-to-many relationship.</summary>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.AssociationProvider">
      <summary>Provides the base class for column-association providers.</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.AssociationProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.ModelProviders.AssociationProvider" /> class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.Direction">
      <summary>Gets or sets the type of the association.</summary>
      <returns>The type of the association.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ForeignKeyNames">
      <summary>Gets or sets the names of the foreign keys that make up this association.</summary>
      <returns>The names of the foreign keys that make up this association.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.FromColumn">
      <summary>Gets or sets the source column of the association.</summary>
      <returns>The source column of the association.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.AssociationProvider.GetSortExpression(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Returns the sort expression for the column that is represented by the association. </summary>
      <returns>If <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsSortable" /> returns true, the sort expression for the column that is represented by the association; otherwise, null.</returns>
      <param name="sortColumn">The column to sort the entity by.</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.IsPrimaryKeyInThisTable">
      <summary>Gets or sets a value that indicates whether the From column part of the primary key is in the table.</summary>
      <returns>true if the From column part of the primary key is in the table; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ToColumn">
      <summary>Gets or sets the destination column of the association.</summary>
      <returns>The destination column of the association.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ToTable">
      <summary>Gets the destination table of the association.</summary>
      <returns>The destination table of the association.</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.ColumnProvider">
      <summary>Provides a base class for column providers.</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.ColumnProvider.#ctor(System.Web.DynamicData.ModelProviders.TableProvider)">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
      <param name="table">The table that contains the column.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.ColumnProvider.AddDefaultAttributes(System.Web.DynamicData.ModelProviders.ColumnProvider,System.ComponentModel.AttributeCollection)">
      <summary>Adds default attributes.</summary>
      <returns>The attribute collection.</returns>
      <param name="columnProvider">The column provider.</param>
      <param name="attributes">The attribute collection.</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Association">
      <summary>Gets the provider for the table that a column represents.</summary>
      <returns>The provider for a table that a column represents, if one exists; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Attributes">
      <summary>Gets the attributes that are defined for the column that is represented by this provider.</summary>
      <returns>The attribute collection.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.ColumnType">
      <summary>Gets or sets the type of the column.</summary>
      <returns>The type of the column.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.EntityTypeProperty">
      <summary>Gets or sets the <see cref="T:System.Reflection.PropertyInfo" /> value of the property that represents the column in the entity type.</summary>
      <returns>The <see cref="T:System.Reflection.PropertyInfo" /> value of the property that represents the column in the entity type.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsCustomProperty">
      <summary>Gets or sets a value that indicates whether the column is an additional property that is not in the model's data context.</summary>
      <returns>true if the column is an additional property that is not in the model's data context; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsForeignKeyComponent">
      <summary>Gets or sets a value that indicates whether the column is part of a foreign key.</summary>
      <returns>true if the column is part of a foreign key; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsGenerated">
      <summary>Gets or sets a value that indicates whether the column value is automatically generated by the database.</summary>
      <returns>true if the column value is automatically generated by the database; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsPrimaryKey">
      <summary>Gets or sets a value that indicates whether the column is part of the primary key for the table.</summary>
      <returns>true if the column is part of the primary key for the table; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsReadOnly">
      <summary>Gets a value that indicates whether the column is read-only.</summary>
      <returns>true if column is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsSortable">
      <summary>When overridden in a derived class, gets or sets a value that indicates whether the data model supports sorting the table by this column. </summary>
      <returns>true if the data model supports sorting the table by this column; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.MaxLength">
      <summary>Gets or sets the maximum length that is allowed for this column.</summary>
      <returns>The maximum length that is allowed for this column.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name">
      <summary>Gets or sets the name of the column.</summary>
      <returns>The name of the column.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Nullable">
      <summary>Gets or sets a value that indicates whether the column accepts null values.</summary>
      <returns>true if the column accepts null values; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Table">
      <summary>Gets or sets the table that the column belongs to.</summary>
      <returns>The table that the column belongs to.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.ColumnProvider.ToString">
      <summary>Returns the <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name" /> property.</summary>
      <returns>The <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name" /> property, or the string representation of the object if the <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name" /> property is null.</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.DataModelProvider">
      <summary>Provides a base class for Dynamic Data model providers.</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.DataModelProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" /> class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.DataModelProvider.ContextType">
      <summary>Gets the type of the data context.</summary>
      <returns>The type of the data context.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.DataModelProvider.CreateContext">
      <summary>When overridden in a derived class, creates an instance of the data context.</summary>
      <returns>An instance of the data context.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.DataModelProvider.Tables">
      <summary>When overridden in a derived class, gets the list of tables that are exposed by the data model.</summary>
      <returns>The list of tables that are exposed by the data model.</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.TableProvider">
      <summary>Provides the base class for Dynamic Data table providers.</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.#ctor(System.Web.DynamicData.ModelProviders.DataModelProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" /> class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
      <param name="model">The model that the table belongs to.</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Attributes">
      <summary>Gets the attributes that are defined for the table that is represented by this provider.</summary>
      <returns>The attribute collection.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanDelete(System.Security.Principal.IPrincipal)">
      <summary>Gets a value that indicates whether the user is allowed to delete items from the table.</summary>
      <returns>true if the user is allowed to delete items from the table; otherwise, false.</returns>
      <param name="principal">The user.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanInsert(System.Security.Principal.IPrincipal)">
      <summary>Gets a value that indicates whether the user is allowed to insert items into the table.</summary>
      <returns>true if the user is allowed to insert items into the table; otherwise, false.</returns>
      <param name="principal">The user.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanRead(System.Security.Principal.IPrincipal)">
      <summary>Gets a value that indicates whether the user is allowed to read items in the table.</summary>
      <returns>true if the user is allowed to read items in the table; otherwise, false.</returns>
      <param name="principal">The user.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate(System.Security.Principal.IPrincipal)">
      <summary>Gets a value that indicates whether the user is allowed to update items in the table.</summary>
      <returns>true if the user is allowed to update items in the table; otherwise, false.</returns>
      <param name="principal">The user.</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Columns">
      <summary>When overridden in a derived class, gets the collection of columns in this table.</summary>
      <returns>The collection of columns in this table.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName">
      <summary>Gets the name of the table from the data context.</summary>
      <returns>The name of the table.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.DataModel">
      <summary>Gets the <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" /> object.</summary>
      <returns>The <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" /> object.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.EntityType">
      <summary>Gets or sets the type that represents the table.</summary>
      <returns>The type that represents the table.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey(System.Object,System.String)">
      <summary>Returns the value of a foreign key for the specified row.</summary>
      <returns>The foreign key.</returns>
      <param name="row">The row to get the foreign-key value for.</param>
      <param name="foreignKeyName">The name of the foreign-key column.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.GetQuery(System.Object)">
      <summary>When overridden in a derived class, returns the <see cref="T:System.Linq.IQueryable" /> object that in turn returns the elements of the table.</summary>
      <returns>An <see cref="T:System.Linq.IQueryable" /> object that returns the elements of the table.</returns>
      <param name="context">The data context for the table.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.GetTypeDescriptor">
      <summary>Gets the type descriptor for the table.</summary>
      <returns>The type descriptor for the table.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Name">
      <summary>Gets the name of the table.</summary>
      <returns>The name of the table.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType">
      <summary>Gets the parent type.</summary>
      <returns>The parent type if the entity has a parent; otherwise, an instance of the <see cref="T:System.Data.Metadata.Edm.EntityType" /> class.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType">
      <summary>Gets the root type for this entity.</summary>
      <returns>The root type for this entity if the entity has a parent; otherwise, an instance of the <see cref="T:System.Data.Metadata.Edm.EntityType" /> class.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.ToString">
      <summary>Returns the <see cref="P:System.Web.DynamicData.ModelProviders.TableProvider.Name" /> property of the <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" /> instance.</summary>
      <returns>The name of the <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" /> instance. If the <see cref="P:System.Web.DynamicData.ModelProviders.TableProvider.Name" /> property is null, the base class Name property is returned. </returns>
    </member>
    <member name="T:System.Web.UI.DataControlExtensions">
      <summary>Provides extension methods that are used by ASP.NET Dynamic Data.</summary>
    </member>
    <member name="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type)">
      <summary>Enables Dynamic Data behavior for the specified data control.</summary>
      <param name="control">The data control to enable Dynamic Data behavior for.</param>
      <param name="entityType">The type to use for metadata.</param>
    </member>
    <member name="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Enables Dynamic Data behavior for the specified data control.</summary>
      <param name="control">The data control to enable Dynamic Data behavior for.</param>
      <param name="entityType">The type to use for metadata.</param>
      <param name="defaultValues">The default values to use with the <see cref="T:System.Web.UI.INamingContainer" /> object.</param>
    </member>
    <member name="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)">
      <summary>Enables Dynamic Data behavior for the specified data control.</summary>
      <param name="control">The data control to enable Dynamic Data behavior for.</param>
      <param name="entityType">The type that represents the table to display.</param>
      <param name="defaults">The default values to use with the <see cref="T:System.Web.UI.INamingContainer" /> object.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Web.DataVisualization.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.DataVisualization</name>
  </assembly>
  <members>
    <member name="T:System.Web.UI.DataVisualization.Charting.Annotation">
      <summary>Defines properties and methods common to all annotations. This is an abstract class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Annotation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.Annotation" /> class. This is the default constructor and should not be used.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.Alignment">
      <summary>Gets or sets the content alignment of an annotation.</summary>
      <returns>A <see cref="T:System.Drawing.ContentAlignment" /> enumeration value that represents the content alignment.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AnchorAlignment">
      <summary>Gets or sets the position alignment of an annotation to the anchor point.</summary>
      <returns>A <see cref="T:System.Drawing.ContentAlignment" /> enumeration value that represents the alignment of the annotation to the anchor point.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AnchorDataPoint">
      <summary>Gets or sets the data point to which an annotation is anchored.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object to which an annotation is anchored.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AnchorDataPointName">
      <summary>Gets or sets the name of a data point to which an annotation is anchored.</summary>
      <returns>A string value that represents the name of the data point that an annotation is anchored to.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AnchorOffsetX">
      <summary>Gets or sets the offset from the anchor point for the X position of an annotation.</summary>
      <returns>A double value that represents the offset of the X position from the anchor point.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AnchorOffsetY">
      <summary>Gets or sets the offset from the anchor point for the Y position of an annotation.</summary>
      <returns>A double value that represents the offset of the Y position from the anchor point.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AnchorX">
      <summary>Gets or sets the X coordinate to which the annotation is anchored.</summary>
      <returns>A double value that represents the X coordinate to which an annotation is anchored.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AnchorY">
      <summary>Gets or sets the Y coordinate to which the annotation is anchored.</summary>
      <returns>A double value that represents the Y coordinate an annotation is anchored to.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AnnotationGroup">
      <summary>Gets the group, if any, to which the annotation belongs. </summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationGroup" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AnnotationType">
      <summary>Gets or sets the type name of an annotation.</summary>
      <returns>The annotation type.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AxisX">
      <summary>Gets or sets the X axis to which an annotation is attached.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object to which the annotation is attached.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AxisXName">
      <summary>Gets or sets the name of the X axis to which an annotation is attached.</summary>
      <returns>A string value that represents the name of the X axis which an annotation is attached to.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AxisY">
      <summary>Gets or sets the Y axis to which an annotation is attached.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object to which this annotation is attached.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.AxisYName">
      <summary>Gets or sets the name of the Y axis which an annotation is attached to.</summary>
      <returns>A string value that represents the name of the Y axis that an annotation is attached to.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.BackColor">
      <summary>Gets or sets the color of an annotation background.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value used to draw an annotation background.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.BackGradientStyle">
      <summary>Gets or sets the gradient style of an annotation background.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> value used to draw an annotation background.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.BackHatchStyle">
      <summary>Gets or sets the hatching style of an annotation background.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> value used to draw the background.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.BackSecondaryColor">
      <summary>Gets or sets the secondary color of an annotation background.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value used to draw an annotation background with hatching or gradient fill.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.Bottom">
      <summary>Gets or sets the bottom boundary of an annotation position.</summary>
      <returns>A double value that represents the position of the bottom boundary of an annotation.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Annotation.BringToFront">
      <summary>Brings an annotation to the front of all annotations.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.ClipToChartArea">
      <summary>Gets or sets the name of the chart area to which an annotation is clipped.</summary>
      <returns>A string that represents the name of an existing chart area.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Annotation.Dispose(System.Boolean)">
      <summary>Releases unmanaged resources and, optionally, managed resources.</summary>
      <param name="disposing">True to release both unmanaged and managed resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.Font">
      <summary>Gets or sets the font to use for the text of an annotation.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> object used to draw the annotation text.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.ForeColor">
      <summary>Gets or sets the text color of an annotation.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value used for the text color of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.Height">
      <summary>Gets or sets the height of an annotation.</summary>
      <returns>A double value that represents the height of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.IsSelected">
      <summary>Gets or sets a flag that determines if an annotation is selected.</summary>
      <returns>True if the annotation is selected, otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.IsSizeAlwaysRelative">
      <summary>Gets or sets a flag that specifies whether the size of an annotation is always defined in relative chart coordinates.</summary>
      <returns>True if the <see cref="P:System.Web.UI.DataVisualization.Charting.Annotation.Width" /> and <see cref="P:System.Web.UI.DataVisualization.Charting.Annotation.Height" /> of an annotation are always expressed in relative chart coordinates, otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.LineColor">
      <summary>Gets or sets the line color of an annotation.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value used to draw an annotation's line.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.LineDashStyle">
      <summary>Gets or sets the line style of an annotation.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> value used to draw the line style of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.LineWidth">
      <summary>Gets or sets the line width of an annotation.</summary>
      <returns>An integer value that defines the line width, in pixels, of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.MapAreaAttributes">
      <summary>Gets or sets the map area attributes of an annotation.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.Name">
      <summary>Gets or sets the unique name of an annotation.</summary>
      <returns>A string that represents the unique name of the annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.PostBackValue">
      <summary>Gets or sets the postback value which can be processed on the <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</summary>
      <returns>A string value that is passed to the <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Annotation.ResizeToContent">
      <summary>Resizes an annotation according to its content size.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.Right">
      <summary>Gets or sets the right boundary position of an annotation.</summary>
      <returns>A double value that represents the position of the right boundary of an annotation.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Annotation.SendToBack">
      <summary>Sends an annotation to the back of all the annotations.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Annotation.SetAnchor(System.Web.UI.DataVisualization.Charting.DataPoint)">
      <summary>Anchors an annotation to the specified data point.</summary>
      <param name="dataPoint">The <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> to which the annotation will be anchored.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Annotation.SetAnchor(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.DataPoint)">
      <summary>Anchors an annotation to two data points.</summary>
      <param name="dataPoint1">The first anchor <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</param>
      <param name="dataPoint2">The second anchor <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.ShadowColor">
      <summary>Gets or sets the color of an annotation's shadow.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value used to draw the annotation shadow.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.ShadowOffset">
      <summary>Gets or sets the size of an annotation's shadow.</summary>
      <returns>An integer value that represents the size of the shadow.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.SmartLabelStyle">
      <summary>Gets or sets the smart label style of an annotation.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle" /> object that represents an annotation's smart labels style properties.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.TextStyle">
      <summary>Gets or sets the text style of an annotation.</summary>
      <returns>A <see cref="P:System.Web.UI.DataVisualization.Charting.Annotation.TextStyle" /> value used to draw the text of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.ToolTip">
      <summary>Gets or sets the tooltip text for an annotation.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.Url">
      <summary>Gets or sets the URL of an annotation.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.Visible">
      <summary>Gets or sets a flag that specifies whether an annotation is visible.</summary>
      <returns>True if the annotation is visible; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.Width">
      <summary>Gets or sets the width, in pixels, of an annotation.</summary>
      <returns>A double value that represents the width of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.X">
      <summary>Gets or sets the X coordinate of an annotation.</summary>
      <returns>A double value that represents the X coordinate position of the annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.Y">
      <summary>Gets or sets the Y coordinate of the annotation.</summary>
      <returns>A double value that represents the Y coordinate of an annotation's position.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Annotation.YAxisName">
      <summary>Gets or sets the name of the Y axis to which an annotation is attached.</summary>
      <returns>A string value that represents the name of the Y axis which an annotation is attached to.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AnnotationCollection">
      <summary>Stores chart annotation objects.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnnotationCollection.FindByName(System.String)">
      <summary>Finds an annotation in the collection by name.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.Annotation" /> object, or null if the object does not exist.</returns>
      <param name="name">The name of the annotation to find.</param>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AnnotationGroup">
      <summary>Represents a group of annotations.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnnotationGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationGroup" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.Alignment">
      <summary>Gets or sets the content alignment of an annotation.</summary>
      <returns>A <see cref="T:System.Drawing.ContentAlignment" /> value that represents the content alignment of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.Annotations">
      <summary>Gets the collection of annotations in the group.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationCollection" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.AnnotationType">
      <summary>Gets the annotation type. </summary>
      <returns>The annotation type.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.BackColor">
      <summary>Gets or sets the background color of an annotation.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value used for the background of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.BackGradientStyle">
      <summary>Gets or sets the background gradient style of an annotation.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> value used to draw the background of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.BackHatchStyle">
      <summary>Gets or sets the hatch style of an annotation background.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> value used to draw the background of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.BackSecondaryColor">
      <summary>Gets or sets the secondary color for the background of an annotation.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value used to draw the background with hatching or gradient fill.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.ClipToChartArea">
      <summary>Gets or sets the name of the chart area to which the annotation is clipped.</summary>
      <returns>A string that represents the name of an existing chart area.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnnotationGroup.Dispose(System.Boolean)">
      <summary>Releases unmanaged and, optionally, managed resources.</summary>
      <param name="disposing">True to release both unmanaged and managed resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.Font">
      <summary>Gets or sets the font to use for the text of an annotation.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> object used for the text of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.ForeColor">
      <summary>Gets or sets the text color for an annotation.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value used for the text color of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.IsSelected">
      <summary>Gets or sets a flag that determines if an annotation is selected.</summary>
      <returns>True if the annotation is selected, otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.IsSizeAlwaysRelative">
      <summary>Gets or sets a flag that specifies whether the size of an annotation is always defined in relative chart coordinates.</summary>
      <returns>True if the <see cref="P:System.Web.UI.DataVisualization.Charting.Annotation.Width" /> and <see cref="P:System.Web.UI.DataVisualization.Charting.Annotation.Height" /> of an annotation are always in chart relative coordinates, otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.LineColor">
      <summary>Gets or sets the line color of the annotation.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value used to draw an annotation line.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.LineDashStyle">
      <summary>Gets or sets the line style of the annotation.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> value used to draw an annotation line.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.LineWidth">
      <summary>Gets or sets the line width, in pixels, of the annotation.</summary>
      <returns>An integer value defining the width, in pixels, of an annotation line.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.ShadowColor">
      <summary>Gets or sets the color of the annotation's shadow.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value used to draw the shadow of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.ShadowOffset">
      <summary>Gets or sets the size of the annotation's shadow.</summary>
      <returns>An integer value that represents the offset between an annotation and its shadow.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.TextStyle">
      <summary>Gets or sets the text style of an annotation.</summary>
      <returns>A <see cref="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.TextStyle" /> value used to draw the text of an annotation.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationGroup.Visible">
      <summary>Gets or sets a flag that indicates whether the annotation is visible.</summary>
      <returns>True if the annotation is visible, otherwise false.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint">
      <summary>Represents a path point of a <see cref="T:System.Web.UI.DataVisualization.Charting.PolylineAnnotation" /> or <see cref="T:System.Web.UI.DataVisualization.Charting.PolygonAnnotation" />, which is stored in their PathPoints property.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint.#ctor(System.Single,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint" /> class with the specified <paramref name="x" /> and <paramref name="y" /> values.</summary>
      <param name="x">Point X-value.</param>
      <param name="y">Point Y-value.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint.#ctor(System.Single,System.Single,System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint" /> class with the specified <paramref name="x" />, <paramref name="y" /> and point <paramref name="type" /> values.</summary>
      <param name="x">Point X-value.</param>
      <param name="y">Point Y-value.</param>
      <param name="type">Point type.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint.Name">
      <summary>Gets the name for the path point of an annotation.</summary>
      <returns>A string value that represents the name of the path point.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint.PointType">
      <summary>Gets or sets the type for the path point of an annotation.</summary>
      <returns>A byte value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint.X">
      <summary>Gets or sets the X coordinate for the path point of an annotation.</summary>
      <returns>A float that represents the X value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint.Y">
      <summary>Gets or sets the Y coordinate for the path point of an annotation.</summary>
      <returns>A float that represents the Y value.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AnnotationPathPointCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.DataVisualization.Charting.PolylineAnnotation" /> or <see cref="T:System.Web.UI.DataVisualization.Charting.PolygonAnnotation" /> path points, which can be accessed using the GraphicPathPoints property.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnnotationPathPointCollection.#ctor(System.Web.UI.DataVisualization.Charting.PolylineAnnotation)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationPathPointCollection" /> class with the specified polyline annotation.</summary>
      <param name="annotation">A polyline annotation.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnnotationPathPointCollection.Dispose(System.Boolean)">
      <summary>Releases unmanaged and, optionally, managed resources.</summary>
      <param name="disposing">True to release both unmanaged and managed resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnnotationPathPointCollection.Invalidate">
      <summary>Forces the invalidation of the chart element.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle">
      <summary>Stores the smart label properties of an annotation. </summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle" /> class with the specified chart element.</summary>
      <param name="chartElement">Chart element that this style belongs to.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle.CalloutBackColor">
      <summary>Gets or sets the back color of the label callout. This property is only applicable when the <see cref="P:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle.CalloutStyle" /> property is set to a value of <see cref="F:System.Web.UI.DataVisualization.Charting.LabelCalloutStyle.Box" />.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle.CalloutLineAnchorCapStyle">
      <summary>Gets or sets the anchor cap style for the label callout line.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle.CalloutLineColor">
      <summary>Gets or sets the color of the label callout line.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle.CalloutLineDashStyle">
      <summary>Gets or sets the style of the label callout line.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle.CalloutLineWidth">
      <summary>Gets or sets the width of the label callout line.</summary>
      <returns>The width of the callout line.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle.CalloutStyle">
      <summary>Gets or sets the callout style of the repositioned smart labels.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.LabelCalloutStyle" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AnovaResult">
      <summary>Represents the results of an ANOVA statistical test.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AnovaResult.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.AnovaResult" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnovaResult.DegreeOfFreedomBetweenGroups">
      <summary>Gets the degree of freedom between groups.</summary>
      <returns>A double value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnovaResult.DegreeOfFreedomTotal">
      <summary>Gets the total degree of freedom.</summary>
      <returns>A double value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnovaResult.DegreeOfFreedomWithinGroups">
      <summary>Gets the degree of freedom within groups.</summary>
      <returns>A double value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnovaResult.FCriticalValue">
      <summary>Gets the F-critical value.</summary>
      <returns>A double value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnovaResult.FRatio">
      <summary>Gets the F ratio.</summary>
      <returns>A double value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnovaResult.MeanSquareVarianceBetweenGroups">
      <summary>Gets the mean square variance between groups.</summary>
      <returns>A double value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnovaResult.MeanSquareVarianceWithinGroups">
      <summary>Gets the mean square variance within groups.</summary>
      <returns>A double value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnovaResult.SumOfSquaresBetweenGroups">
      <summary>Gets the sum of the squares between groups.</summary>
      <returns>A double value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnovaResult.SumOfSquaresTotal">
      <summary>Gets the total sum of the squares.</summary>
      <returns>A double value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AnovaResult.SumOfSquaresWithinGroups">
      <summary>Gets the sum of the squares within groups.</summary>
      <returns>A double value.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AntiAliasingStyles">
      <summary>Specifies the anti-aliasing options for the chart.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AntiAliasingStyles.None">
      <summary>Do not use anti-aliasing.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AntiAliasingStyles.Text">
      <summary>Use anti-aliasing when drawing text.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AntiAliasingStyles.Graphics">
      <summary>Use anti-aliasing when drawing graphics primitives such as circles or rectangles.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AntiAliasingStyles.All">
      <summary>Use anti-aliasing for text and graphics.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations">
      <summary>Specifies the alignment orientation of a chart area.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations.None">
      <summary>Chart areas are not automatically aligned.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations.Vertical">
      <summary>Chart areas are aligned vertically.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations.Horizontal">
      <summary>Chart areas are aligned horizontally.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations.All">
      <summary>Chart areas are aligned horizontally and vertically.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles">
      <summary>Specifies the alignment styles of chart areas.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles.None">
      <summary>Chart areas are not automatically aligned.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles.Position">
      <summary>Chart areas are aligned by the chart area position.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles.PlotPosition">
      <summary>Chart areas are aligned by their inner plot position.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles.AxesView">
      <summary>Chart areas are aligned using their axis scale views.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles.All">
      <summary>Chart areas are aligned using all values.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ArrowAnnotation">
      <summary>Represents an arrow annotation.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ArrowAnnotation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.ArrowAnnotation" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ArrowAnnotation.AnchorAlignment">
      <summary>Gets or sets the position alignment of the annotation to the anchor point.</summary>
      <returns>A <see cref="T:System.Drawing.ContentAlignment" /> enumeration value that represents the alignment of the annotation to the anchor point.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ArrowAnnotation.AnnotationType">
      <summary>Gets the name of the annotation type. For internal use, should not be used.</summary>
      <returns>A string value that represents the name of the annotation type.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ArrowAnnotation.ArrowSize">
      <summary>Gets or sets an arrow size, in pixels.</summary>
      <returns>An integer value that represents arrow size—that is, its thickness—in pixels.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ArrowAnnotation.ArrowStyle">
      <summary>Gets or sets the arrow style.</summary>
      <returns>The <see cref="T:System.Web.UI.DataVisualization.Charting.ArrowStyle" /> of an annotation.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ArrowStyle">
      <summary>Specifies styles for an arrow annotation. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ArrowStyle.Simple">
      <summary>A simple one-pointed arrow.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ArrowStyle.DoubleArrow">
      <summary>An arrow that points in two directions.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ArrowStyle.Tailed">
      <summary>An arrow with a tail.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.Axis">
      <summary>Provides methods and properties that manage axes in the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Axis.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Axis.#ctor(System.Web.UI.DataVisualization.Charting.ChartArea,System.Web.UI.DataVisualization.Charting.AxisName)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> class with the specified <paramref name="ChartArea" /> and <paramref name="axisTypeName" /> values.</summary>
      <param name="chartArea">The chart area.</param>
      <param name="axisTypeName">The axis name.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.ArrowStyle">
      <summary>Gets or sets the arrow style of a 2D axis; this style is not applied to 3D chart areas.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AxisArrowStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.AxisName">
      <summary>Gets the name of the axis, which can be either X, Y, X2 or Y2. </summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AxisName" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.Crossing">
      <summary>Gets or sets the location at which an axis is crossed by its associated axis.</summary>
      <returns>A double value that represents where an axis is crossed by its associated axis. The default value is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.CustomLabels">
      <summary>Gets a <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabelsCollection" /> object used to store <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> objects.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabelsCollection" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Axis.Dispose(System.Boolean)">
      <summary>Releases unmanaged and, optionally, managed resources.</summary>
      <param name="disposing">True to release both unmanaged and managed resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.Enabled">
      <summary>Gets or sets a value that indicates whether an axis is enabled.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AxisEnabled" /> enumeration value. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.AxisEnabled.Auto" />.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Axis.GetPosition(System.Double)">
      <summary>Converts an axis value to a relative position (0-100%). If an axis is logarithmic, the value is converted to a linear scale.</summary>
      <returns>A double value that represents the relative position (0-100%).</returns>
      <param name="axisValue">The axis value.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.InterlacedColor">
      <summary>Gets or sets the color of interlaced strip lines.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> object that represents the color of interlaced strip lines.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.Interval">
      <summary>Gets or sets the interval of an axis.</summary>
      <returns>A double value that represents the interval of an axis. The default value is "Auto", which is represented by a value of zero (0).</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.IntervalAutoMode">
      <summary>Gets or sets a flag that determines if a fixed number of intervals is used on the axis, or if the number of intervals depends on the axis size.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.IntervalAutoMode" /> enumeration value. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.IntervalAutoMode.FixedCount" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.IntervalOffset">
      <summary>Gets or sets the interval offset of an axis.</summary>
      <returns>A double value that represents the interval offset of an axis. The default value is "Auto", which is represented by a value of zero (0).</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.IntervalOffsetType">
      <summary>Gets or sets the interval offset type of an axis.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> that represents the interval offset type of an axis. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.IntervalType">
      <summary>Gets or sets the interval type of an axis.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> that represents the interval type of an axis. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.IsInterlaced">
      <summary>Gets or sets a flag that determines if interlaced strip lines are displayed for an axis.</summary>
      <returns>True if interlaced strip lines are displayed for an axis; otherwise, False.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.IsLabelAutoFit">
      <summary>Gets or sets a flag that determines whether axis labels are automatically fitted.</summary>
      <returns>True if axis labels are automatically fitted; otherwise, False.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.IsLogarithmic">
      <summary>Gets or sets a flag which indicates whether the axis is logarithmic. Zeros or negative data values are not allowed on logarithmic charts.</summary>
      <returns>True if the axis is logarithmic; otherwise, False.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.IsMarginVisible">
      <summary>Gets or sets a flag that determines whether an axis margin will be used.</summary>
      <returns>True if a space is added between the first or last data point and the border of chart area.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.IsMarksNextToAxis">
      <summary>Gets or sets a flag that determines whether tick marks and axis labels move with an axis if the crossing point of an axis changes.</summary>
      <returns>True if tick marks and axis labels move with an axis when the crossing point of an axis changes; otherwise, False.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.IsReversed">
      <summary>Gets or sets a flag which indicates whether the axis is reversed.</summary>
      <returns>True if the axis is reversed; otherwise, False.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.IsStartedFromZero">
      <summary>Gets or sets a flag which indicates whether the minimum value of the axis will be automatically set to zero if all data point values are positive. If there are negative data point values, the minimum value of the data points will be used.</summary>
      <returns>True if the minimum value of the axis is automatically set to zero when all data point values are positive; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.LabelAutoFitMaxFontSize">
      <summary>Gets or sets the maximum font size that can be used by the label auto-fitting algorithm.</summary>
      <returns>An integer value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.LabelAutoFitMinFontSize">
      <summary>Gets or sets the minimum font size that can be used by the label auto-fitting algorithm.</summary>
      <returns>An integer value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.LabelAutoFitStyle">
      <summary>Gets or sets the allowable label changes that can be made to enable the label to be fit along an axis.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.LabelStyle">
      <summary>Gets or sets the <see cref="T:System.Web.UI.DataVisualization.Charting.LabelStyle" /> properties of an axis.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.LabelStyle" /> object, which defines the axis label style.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.LineColor">
      <summary>Gets or sets the line color of an axis.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> object that represents the line color used to draw the axis. The default is <see cref="P:System.Drawing.Color.Black" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.LineDashStyle">
      <summary>Gets or sets the line style of an axis.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.LineWidth">
      <summary>Gets or sets the line width of an axis, in pixels.</summary>
      <returns>An integer value that represents the width of an axis line. The default value is one (1) pixel.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.LogarithmBase">
      <summary>Gets or sets a value for the logarithm base for the logarithmic axis.</summary>
      <returns>A double value. The default value is base 10.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.MajorGrid">
      <summary>Gets or sets a <see cref="T:System.Web.UI.DataVisualization.Charting.Grid" /> object used to set the major grid line properties for an axis.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.Grid" /> object used to get or set the major grid properties of an axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.MajorTickMark">
      <summary>Gets or sets a <see cref="T:System.Web.UI.DataVisualization.Charting.TickMark" /> object used to set the major tick mark properties of an axis.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.TickMark" /> object used to set the properties of a major tick mark of an axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.MapAreaAttributes">
      <summary>Gets or sets the map area attributes of an axis.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.Maximum">
      <summary>Gets or sets the maximum value of an axis.</summary>
      <returns>A double value that represents the maximum value of an axis. The default value is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.MaximumAutoSize">
      <summary>Gets or sets the maximum size of the axis, measured as a percentage of the chart area. This value is used by the automatic layout algorithm.</summary>
      <returns>A float value that represents the maximum size of the axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.Minimum">
      <summary>Gets or sets the minimum value of an axis.</summary>
      <returns>A double value that represents the minimum value of an axis. The default value is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.MinorGrid">
      <summary>Gets or sets a <see cref="T:System.Web.UI.DataVisualization.Charting.Grid" /> object used to specify the minor grid lines attributes of an axis.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.Grid" /> object used to get or set the attributes of the minor grid lines of an axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.MinorTickMark">
      <summary>Gets or sets a <see cref="T:System.Web.UI.DataVisualization.Charting.TickMark" /> object used to set the minor tick mark properties of an axis.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.TickMark" /> object used for the minor tick mark properties of an axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.Name">
      <summary>Gets or sets the name of the axis.</summary>
      <returns>A string value that represents the text name of the axis.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Axis.PixelPositionToValue(System.Double)">
      <summary>Converts an absolute pixel position along an axis to an axis value. This method only works in paint events.</summary>
      <returns>A double value that represents the axis value.</returns>
      <param name="position">The pixel position.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Axis.PositionToValue(System.Double)">
      <summary>Converts a relative coordinate along an axis to an axis value. This method only works in paint events.</summary>
      <returns>A double value that represents the axis value.</returns>
      <param name="position">The relative position (0-100%).</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.PostBackValue">
      <summary>Gets or sets the postback value that can be processed on a <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</summary>
      <returns>The string value to send back to the server.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Axis.RoundAxisValues">
      <summary>Automatically rounds axis values.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.ScaleBreakStyle">
      <summary>Gets or sets the axis automatic scale break style.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle" /> object, which represents a scale break on the chart axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.ScaleView">
      <summary>Gets or sets the view of an axis.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AxisScaleView" /> object, which represents the scale view of an axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.StripLines">
      <summary>Gets a <see cref="T:System.Web.UI.DataVisualization.Charting.StripLinesCollection" /> collection object.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.StripLinesCollection" /> collection object, which stores all <see cref="T:System.Web.UI.DataVisualization.Charting.StripLine" /> objects for an axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.TextOrientation">
      <summary>Gets or sets the orientation of the text in the axis title.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.TextOrientation" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.Title">
      <summary>Gets or sets the title of the axis.</summary>
      <returns>A string value that represents the title of the axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.TitleAlignment">
      <summary>Gets or sets the alignment of an axis title.</summary>
      <returns>A <see cref="T:System.Drawing.StringAlignment" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.TitleFont">
      <summary>Gets or sets the title font properties of an axis.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> object used for the font properties of a title.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.TitleForeColor">
      <summary>Gets or sets the text color of an axis title.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> structure. The default color is <see cref="P:System.Drawing.Color.Black" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.ToolTip">
      <summary>Gets or sets the tooltip used for the axis.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Axis.Url">
      <summary>Gets or sets the URL target of the axis.</summary>
      <returns>A string value that represents the URL.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Axis.ValueToPixelPosition(System.Double)">
      <summary>Converts an axis value to an absolute coordinate along an axis. Measured in pixels. This method only works in paint events.</summary>
      <returns>A double value that represents the pixel position.</returns>
      <param name="axisValue">The axis value.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Axis.ValueToPosition(System.Double)">
      <summary>Converts an axis value to its relative position (0-100%). If an axis has a logarithmic scale, the value is converted to a linear scale. This method only works in paint events.</summary>
      <returns>A double value that represents the relative position (0-100%).</returns>
      <param name="axisValue">The axis value.</param>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AxisArrowStyle">
      <summary>Specifies the axis arrow styles.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisArrowStyle.None">
      <summary>No arrow is used for the relevant axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisArrowStyle.Triangle">
      <summary>A triangular arrow is used for the relevant axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisArrowStyle.SharpTriangle">
      <summary>A sharp triangular arrow is used for the relevant axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisArrowStyle.Lines">
      <summary>A line-shaped arrow is used for the relevant axis.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AxisEnabled">
      <summary>Specifies the state of an axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisEnabled.Auto">
      <summary>The axis is only enabled if it used to plot a <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisEnabled.True">
      <summary>The axis is always enabled.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisEnabled.False">
      <summary>The axis is never enabled.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AxisName">
      <summary>Specifies the name of an axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisName.X">
      <summary>Primary X-axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisName.Y">
      <summary>Primary Y-axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisName.X2">
      <summary>Secondary X-axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisName.Y2">
      <summary>Secondary Y-axis.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle">
      <summary>Represents a scale break on the Y-axis of the chart.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle.BreakLineStyle">
      <summary>Gets or sets the style of the break line that will be used to draw the scale break.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.BreakLineStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle.CollapsibleSpaceThreshold">
      <summary>Gets or sets the threshold of space on the chart at which scale breaks are drawn.</summary>
      <returns>An integer value that specifies the threshold of space on the chart at which scale breaks are drawn.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle.Enabled">
      <summary>Gets or sets a flag that indicates whether scale breaks are enabled.</summary>
      <returns>A Boolean value that specifies whether scale breaks are enabled.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle.LineColor">
      <summary>Gets or sets the color of the scale break line.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that represents the color of the scale break line.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle.LineDashStyle">
      <summary>Gets or sets the style of the scale break line.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> value that represents the style of the scale break line.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle.LineWidth">
      <summary>Gets or sets the width of the scale break line.</summary>
      <returns>An integer value that represents the width of the scale break line.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle.MaxNumberOfBreaks">
      <summary>Gets or sets the maximum number of scale breaks to be displayed on the chart.</summary>
      <returns>An integer value that represents the maximum number of scale breaks to be displayed on the chart.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle.Spacing">
      <summary>Gets or sets the spacing gap between the lines of the scale break. The spacing gap is represented as a percentage of the Y-axis.</summary>
      <returns>A double value that represents the spacing gap between the lines of the scale break.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle.StartFromZero">
      <summary>Gets or sets a <see cref="T:System.Web.UI.DataVisualization.Charting.StartFromZero" /> enumeration value that indicates whether to start the scale break from zero.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.StartFromZero" /> enumeration value that indicates whether to start the scale break from zero.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AxisScaleView">
      <summary>Represents a scaled view of the chart. </summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.AxisScaleView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.AxisScaleView" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleView.IsZoomed">
      <summary>Gets a flag that indicates whether the axis is zoomed in.</summary>
      <returns>True if the axis is zoomed in, otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleView.Position">
      <summary>Gets or sets the position of the scale view.</summary>
      <returns>A double that represents the position of the scale view.-</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleView.Size">
      <summary>Gets or sets the size of the scale view.</summary>
      <returns>A double that represents the size of the scale view.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleView.SizeType">
      <summary>Gets or sets the unit of measurement of the <see cref="P:System.Web.UI.DataVisualization.Charting.AxisScaleView.Size" /> property.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleView.ViewMaximum">
      <summary>Gets the maximum axis value of a scale view.</summary>
      <returns>A double that represents the maximum axis value for the data view.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.AxisScaleView.ViewMinimum">
      <summary>Gets the minimum axis value of a data view.</summary>
      <returns>A double that represents the minimum axis value for the data view.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.AxisType">
      <summary>Specifies the axis type for the X and Y-axes of a <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisType.Primary">
      <summary>Designates an axis as the primary axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.AxisType.Secondary">
      <summary>Designates an axis as the secondary axis.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.Border3DAnnotation">
      <summary>Represents an annotation with a 3D border.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Border3DAnnotation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.Border3DAnnotation" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Border3DAnnotation.AnnotationType">
      <summary>Gets the annotation type name.</summary>
      <returns>The annotation type.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Border3DAnnotation.BorderSkin">
      <summary>Gets or sets the skin attributes of the 3D border.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.BorderSkin" /> object, which determines the attributes of the 3D border.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.BorderSkin">
      <summary>Represents the drawing properties of the 3D border skin.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.BorderSkin.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.BorderSkin" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.BackColor">
      <summary>Gets or sets the background color of a border skin frame.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.BackGradientStyle">
      <summary>Gets or sets the background gradient style of a border skin frame.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.BackHatchStyle">
      <summary>Gets or sets the background hatch style of a border skin frame.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.BackImage">
      <summary>Gets or sets the background image of a border skin frame.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.BackImageAlignment">
      <summary>Gets or sets the background image alignment of a border skin frame.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.BackImageTransparentColor">
      <summary>Gets or sets a color that is replaced with a transparent color when the background image of a border skin frame is drawn.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.BackImageWrapMode">
      <summary>Gets or sets the drawing mode for the background image of a border skin frame.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.BackSecondaryColor">
      <summary>Gets or sets the secondary background color of a border skin frame.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.BorderColor">
      <summary>Gets or sets the border color of a border skin frame.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.BorderDashStyle">
      <summary>Gets or sets the style of the border line of a border skin frame.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.BorderWidth">
      <summary>Gets or sets the width of the border line of a border skin frame.</summary>
      <returns>An integer value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.PageColor">
      <summary>Gets or sets the page color of a border skin.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.BorderSkin.SkinStyle">
      <summary>Gets or sets the style of a border skin.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.BorderSkinStyle" /> enumeration value.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.BorderSkinStyle">
      <summary>Specifies a style for the border skin of a chart.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.None">
      <summary>No border skin is used.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.Emboss">
      <summary>Use an embossed border skin.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.Raised">
      <summary>Use a raised border skin.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.Sunken">
      <summary>Use a sunken border skin.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameThin1">
      <summary>Use a thin border skin with rounded corners.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameThin2">
      <summary>Use a thin border skin with rounded top corners.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameThin3">
      <summary>Use a thin border skin with square corners.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameThin4">
      <summary>Use a thin border skin with square outside corners and rounded inside corners.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameThin5">
      <summary>Use a thin border skin with rounded corners and screws.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameThin6">
      <summary>Use a thin border skin with square inside corners and rounded outside corners.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameTitle1">
      <summary>Use a border skin with rounded corners. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameTitle2">
      <summary>Use a border skin with rounded top corners. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameTitle3">
      <summary>Use a border skin with square corners. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameTitle4">
      <summary>Use a border skin with rounded inside corners and square outside corners. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameTitle5">
      <summary>Use a border skin with rounded corners and screws. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameTitle6">
      <summary>Use a border skin with rounded outside corners and square inside corners. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameTitle7">
      <summary>Use a border skin with rounded corners. No border on the right side. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BorderSkinStyle.FrameTitle8">
      <summary>Use a border skin with rounded corners on top and bottom sides only. </summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.BreakLineStyle">
      <summary>Specifies line styles for axis scale breaks.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BreakLineStyle.None">
      <summary>Scale break is not displayed.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BreakLineStyle.Straight">
      <summary>Scale break is displayed as a straight line.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BreakLineStyle.Wave">
      <summary>Scale break is displayed as a wavy line.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.BreakLineStyle.Ragged">
      <summary>Scale break is displayed as a ragged line.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.CalloutAnnotation">
      <summary>Represents a callout annotation.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.CalloutAnnotation" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.AnchorAlignment">
      <summary>Gets or sets the annotation position alignment to the anchor point.</summary>
      <returns>A <see cref="T:System.Drawing.ContentAlignment" /> value that represents the alignment of the annotation to the anchor point.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.AnchorOffsetX">
      <summary>Gets or sets the offset that the X-position of the annotation has from the anchor point.</summary>
      <returns>A double value that represents the offset of the annotation's X-position from the anchor point.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.AnchorOffsetY">
      <summary>Gets or sets the offset that the Y-position of the annotation has from the anchor point.</summary>
      <returns>A double value that represents the offset of the annotation's Y-position from the anchor point.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.AnnotationType">
      <summary>Gets or sets the annotation type name. For internal use, should not be used.</summary>
      <returns>The annotation type.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.BackColor">
      <summary>Gets or sets the background color of the annotation.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.BackGradientStyle">
      <summary>Gets or sets the annotation background gradient style.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> enumeration value used to draw the annotation background.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.BackHatchStyle">
      <summary>Gets or sets the background hatch style of the annotation.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> value used to draw the annotation background.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.BackSecondaryColor">
      <summary>Gets or sets the secondary color for the annotation background.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> enumeration value used in conjunction with a primary color to draw the annotation background with hatching or gradient fill.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.CalloutAnchorCap">
      <summary>Gets or sets the style for a callout line anchor cap.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle" /> enumeration value that represents the style to use for a callout line anchor cap.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.CalloutStyle">
      <summary>Gets or sets the annotation callout style.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.CalloutStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.LineColor">
      <summary>Gets or sets the annotation line color.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value used to draw the annotation line.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.LineDashStyle">
      <summary>Gets or sets the annotation line style.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> enumeration value used to draw the annotation line.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CalloutAnnotation.LineWidth">
      <summary>Gets or sets the line width of the annotation.</summary>
      <returns>An integer value that represents the annotation line width, in pixels.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.CalloutStyle">
      <summary>Represents the available callout styles. Applicable only to callout annotations.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CalloutStyle.SimpleLine">
      <summary>Callout text is underlined and a line points to the anchor point.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CalloutStyle.Borderline">
      <summary>A border is drawn around the callout text and a line points to the anchor point.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CalloutStyle.Cloud">
      <summary>Callout text is inside the cloud and smaller clouds point to the anchor point.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CalloutStyle.Rectangle">
      <summary>A rectangle is drawn around the callout text, which is connected to the anchor point.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CalloutStyle.RoundedRectangle">
      <summary>A rounded rectangle is drawn around the callout text, which is connected to the anchor point.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CalloutStyle.Ellipse">
      <summary>An ellipse is drawn around the callout text, which is connected to the anchor point.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CalloutStyle.Perspective">
      <summary>A perspective rectangle is drawn around the callout text, which is connected to the anchor point.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.Chart">
      <summary>Serves as the root class of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel">
      <summary>Aligns data points along the X axis using their axis labels. Applicable when multiple series are indexed and their X-values are strings.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String)">
      <summary>Aligns data points from different series along the X axis using their axis labels. The specified series in the chart are aligned using an ascending sort order.</summary>
      <param name="series">A comma-separated list of series that will have their data points aligned to the X axis using the data point axis labels.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String,System.Web.UI.DataVisualization.Charting.PointSortOrder)">
      <summary>Aligns data points using their axis labels.</summary>
      <param name="series">A comma-separated list of series that should be aligned by axis label.</param>
      <param name="sortingOrder">A <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> enumeration value that determines if ascending or descending sort order is used on axis labels, which in turn determines the order by which points that previously occupied the same axis space are displayed.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.Web.UI.DataVisualization.Charting.PointSortOrder)">
      <summary>Aligns data points using their axis labels. All series in the chart are aligned, using the specified sort order.</summary>
      <param name="sortingOrder">A <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> object that indicates if ascending or descending sort order is used on axis labels, which in turn determines the order by which points that previously occupied the same axis space are displayed.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.AlternateText">
      <summary>Gets or sets the alternate text displayed in the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control when the chart image is unavailable.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.Annotations">
      <summary>Stores the chart annotations.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationCollection" /> object that is used to store chart annotations.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.AntiAliasing">
      <summary>Gets or sets a value that determines whether anti-aliasing is used when text and graphics are drawn.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AntiAliasingStyles" /> enumeration value.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.ApplyPaletteColors">
      <summary>Sets the automatically assigned series and data point colors, to allow programmatic access at run time.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BackColor">
      <summary>Gets or sets the background color of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value. The default color is <see cref="System.Drawing.Color.White" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle">
      <summary>Gets or sets the orientation for the background gradient of a <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control. Also determines whether a gradient is used.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> enumeration. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BackHatchStyle">
      <summary>Gets or sets the hatching style of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control. </summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> enumeration. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BackImage">
      <summary>Gets or sets the background image of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
      <returns>A string value that represents the URL of an image file. The default value is an empty string.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageAlignment">
      <summary>Gets or sets the background image alignment used for the <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> drawing mode.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" /> enumeration value. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageTransparentColor">
      <summary>Gets or sets the color of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control that will be displayed as transparent.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that will be displayed as transparent when the chart image is drawn. The default value is <see cref="F:System.Drawing.Color.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode">
      <summary>Gets or sets the drawing mode for the background image of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" /> enumeration value. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor">
      <summary>Gets or sets the secondary color of the chart background.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value. The default value is <see cref="F:System.Drawing.Color.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BorderColor">
      <summary>Gets or sets the color of the chart border.</summary>
      <returns>A T<see cref=":System.Drawing.Color" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineColor">
      <summary>Gets or sets the color of the entire chart image border.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> enumeration value. The default value is <see cref="F:System.Drawing.Color.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineDashStyle">
      <summary>Gets or sets the style of the entire chart image border line.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> enumeration value that determines the border line style of the chart image.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineWidth">
      <summary>Gets or sets the width of the border line for the entire chart image.</summary>
      <returns>An integer value that determines the width of the chart image border line, in pixels.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BorderSkin">
      <summary>Gets or sets a <see cref="T:System.Web.UI.DataVisualization.Charting.BorderSkin" /> object, which provides border skin functionality for the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.BorderSkin" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BorderStyle">
      <summary>Gets or sets the border style of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.BorderStyle" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BorderWidth">
      <summary>Gets or sets the width of the chart border.</summary>
      <returns>An integer value that determines the border width, in pixels, of the chart.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.BuildNumber">
      <summary>Gets the build number of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
      <returns>A string that represents the build number.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas">
      <summary>Gets a read-only <see cref="T:System.Web.UI.DataVisualization.Charting.ChartAreaCollection" /> object that is used to store <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> objects.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartAreaCollection" /> object.</returns>
    </member>
    <member name="E:System.Web.UI.DataVisualization.Charting.Chart.Click">
      <summary>Occurs when the active image map area defined by <see cref="P:System.Web.UI.DataVisualization.Charting.DataPoint.PostBackValue" /> on the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control is clicked.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.Compression">
      <summary>Gets or sets the amount of compression for the chart image.</summary>
      <returns>An integer that represents the amount of compression for the entire chart image.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.CurrentImageLocation">
      <summary>Gets the URL of the current image into which the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control will be rendered.</summary>
      <returns>A string value that represents the URL of the current chart image.</returns>
    </member>
    <member name="E:System.Web.UI.DataVisualization.Charting.Chart.Customize">
      <summary>Occurs just before the chart image is drawn. All chart data is available and all chart properties have been set.</summary>
    </member>
    <member name="E:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend">
      <summary>Occurs just before the chart legend is drawn. Use this event to customize the chart legend items.</summary>
    </member>
    <member name="E:System.Web.UI.DataVisualization.Charting.Chart.CustomizeMapAreas">
      <summary>Occurs just before the chart image map is rendered. Use this event to customize the map areas items.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String)">
      <summary>Data binds a chart to the table, with one series created per unique value in a given column. </summary>
      <param name="dataSource">The data source.</param>
      <param name="seriesGroupByField">The name of the field used to group data into the series.</param>
      <param name="xField">Name of the field for X values.</param>
      <param name="yFields">A comma-separated list of name(s) of the field(s) for Y value(s).</param>
      <param name="otherFields">Other data point properties that can be bound.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.Web.UI.DataVisualization.Charting.PointSortOrder)">
      <summary>Data binds a chart to the table, with one series created per unique value in a given column. </summary>
      <param name="dataSource">The data source.</param>
      <param name="seriesGroupByField">The name of the field used to group data into the series.</param>
      <param name="xField">Name of the field for X values.</param>
      <param name="yFields">A comma-separated list of name(s) of the field(s) for Y value(s).</param>
      <param name="otherFields">Other data point properties that can be bound.</param>
      <param name="sortingOrder">Series will be sorted by group field values in the specified order.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable)">
      <summary>Automatically creates and binds series data to the specified data table.</summary>
      <param name="dataSource">The data source, which can be any <see cref="T:System.Collections.IEnumerable" /> object.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable,System.String)">
      <summary>Automatically creates and binds series data to the specified data table, and optionally populates X-values.</summary>
      <param name="dataSource">The data source, which can be any <see cref="T:System.Collections.IEnumerable" /> object.</param>
      <param name="xField">The name of the field used for the series X-values.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.DataManipulator">
      <summary>Gets a <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" /> object, which provides methods and properties that handle data.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.DataSource">
      <summary>Gets or sets the data source for the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> object.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the data source for the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.DescriptionUrl">
      <summary>Gets or sets the location of a detailed description of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.Dispose">
      <summary>Disposes of the object, using the <see cref="T:System.IDisposable" /> interface.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.Dispose(System.Boolean)">
      <summary>Releases unmanaged and, optionally, managed resources.</summary>
      <param name="disposing">True to release both unmanaged and managed resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.EnableViewState">
      <summary>Gets or sets a flag that determines whether state management is enabled.</summary>
      <returns>True if state management is enabled, otherwise false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.Font">
      <summary>Gets the font properties of the control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.FontInfo" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.ForeColor">
      <summary>Gets or sets the text color of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value.</returns>
    </member>
    <member name="E:System.Web.UI.DataVisualization.Charting.Chart.FormatNumber">
      <summary>Called when a numeric value has to be converted to a string.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.GetChartElementOutline(System.Object,System.Web.UI.DataVisualization.Charting.ChartElementType)">
      <summary>Returns the chart element outline.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElementOutline" /> object that contains:An array of points in absolute coordinates that can be used as outline markers around this chart element. A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object for drawing an outline around this chart element.</returns>
      <param name="chartElement">The chart element.</param>
      <param name="elementType">The type of element.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.GetHtmlImageMap(System.String)">
      <summary>Returns the HTML image map of the currently rendered chart. One of the overloaded SaveImage methods in the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> must be called before calling this method.</summary>
      <returns>A string value that represents the HTML image map.</returns>
      <param name="name">The name of the image map tag.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.GetService(System.Type)">
      <summary>Returns the requested chart service.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the service type or null if the service cannot be found.</returns>
      <param name="serviceType">The type of requested chart service.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.Height">
      <summary>Gets or sets the height of the entire chart image in pixels.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> value that represents the height, in pixels, of the entire chart image.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32)">
      <summary>Determines the chart element, if any, that is located at a point defined by the given X and Y coordinates.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" /> object, which provides information concerning the chart element, if any, that is at the specified location.</returns>
      <param name="x">The X-coordinate value of the point the user clicked.</param>
      <param name="y">The Y-coordinate value of the point the user clicked.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean)">
      <summary>Determines the chart element, if any, that is located at a point defined by given X and Y coordinates. Transparent elements can optionally be ignored.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" /> object, which provides information concerning the chart element, if any, that is at the specified location.</returns>
      <param name="x">The X-coordinate value of the point the user clicked on.</param>
      <param name="y">The Y-coordinate value of the point the user clicked on.</param>
      <param name="ignoreTransparent">A flag that determines if transparent elements are ignored.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean,System.Web.UI.DataVisualization.Charting.ChartElementType[])">
      <summary>Determines whether a chart element that is one of the specified types is located at a point defined by the given X and Y coordinates.</summary>
      <returns>An array of T<see cref=":System.Web.UI.DataVisualization.Charting.HitTestResult" /> objects that provides information about the chart element, if any, found at the specified location. The array contains at least one element, which can be <see cref="F:System.Web.UI.DataVisualization.Charting.ChartElementType.Nothing" />. The objects in the result are sorted from the top to the bottom of different layers of control.</returns>
      <param name="x">The X-coordinate for the specified data point.</param>
      <param name="y">The Y-coordinate for the specified data point.</param>
      <param name="ignoreTransparent">A flag that indicates that transparent elements should be ignored.</param>
      <param name="requestedElement">An array of <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementType" /> objects that specify the types to test for, in order to filter the result. If omitted, checking for element types will be ignored and all element types will be valid.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Web.UI.DataVisualization.Charting.ChartElementType)">
      <summary>Determines whether a chart element of a given type is located at a point defined by the given X and Y coordinates.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" /> object that provides information about the chart element, if any, found at the specified location.</returns>
      <param name="x">The X-coordinate value of the point the user clicked on.</param>
      <param name="y">The Y-coordinate value of the point the user clicked on.</param>
      <param name="requestedElement">A flag that determines the chart element type to be tested.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.ImageLocation">
      <summary>Gets or sets the location where an image file is saved when <see cref="F:System.Web.UI.DataVisualization.Charting.RenderType.ImageTag" /> rendering is performed.</summary>
      <returns>A string value that represents the URL where the image file is saved on the server.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.Images">
      <summary>Gets a <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImagesCollection" /> object, which stores <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImage" /> objects for the chart.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImagesCollection" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.ImageStorageMode">
      <summary>Gets or sets the chart rendering type.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.ImageStorageMode" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType">
      <summary>Gets or sets the type of image into which the chart is rendered if <see cref="F:System.Web.UI.DataVisualization.Charting.RenderType.ImageTag" /> rendering is used.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageType" /> enumeration value. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageType.Jpeg" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.IsMapAreaAttributesEncoded">
      <summary>Gets or sets a flag that determines whether map area attributes are encoded.</summary>
      <returns>True if map area attributes are encoded; otherwise, False.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled">
      <summary>Gets or sets a flag that determines whether client-side image maps are enabled.</summary>
      <returns>True if image maps are enabled, otherwise false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.IsSoftShadows">
      <summary>Gets or sets a flag that determines if a smooth gradient is applied when shadows are drawn.</summary>
      <returns>True if shadows are drawn using smoothing, false if they are not. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.Legends">
      <summary>Stores all <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> objects used by the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCollection" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate(System.IO.Stream)">
      <summary>Loads a template into the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control from an image stream.</summary>
      <param name="stream">The stream to load from.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate(System.String)">
      <summary>Loads a template with the specified filename from the disk.</summary>
      <param name="name">The file name of the template to load. You must specify the full path of the template to be loaded from the disk.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.LoadViewState(System.Object)">
      <summary>Restores view-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.DataVisualization.Charting.Chart.SaveViewState" /> method.</summary>
      <param name="savedState">An <see cref="T:System.Object" /> that represents the control state to be restored.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.MapAreas">
      <summary>Gets a <see cref="T:System.Web.UI.DataVisualization.Charting.MapAreasCollection" /> object, which stores the map areas for the chart.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.MapAreasCollection" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.OnClick(System.Web.UI.WebControls.ImageMapEventArgs)">
      <summary>Invokes delegates that were registered with the <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</summary>
      <param name="e">An <see cref="T:System.Web.UI.WebControls.ImageMapEventArgs" /> object.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomize(System.EventArgs)">
      <summary>Occurs when all chart data is prepared to be customized before drawing.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomizeLegend(System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs)">
      <summary>Occurs when all chart legend data is prepared to be customized before drawing.</summary>
      <param name="e">A <see cref="T:System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomizeMapAreas(System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs)">
      <summary>Occurs when chart image map data is prepared to be rendered.</summary>
      <param name="e">The <see cref="T:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.OnFormatNumber(System.Object,System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs)">
      <summary>Converts a numeric value to a string.</summary>
      <param name="caller">The event caller, which can be a chart image, a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> or a <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> object.</param>
      <param name="e">A <see cref="T:System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs" /> object that contains the event arguments.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.OnPostPaint(System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs)">
      <summary>Occurs when a chart element is painted. </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.OnPrePaint(System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs)">
      <summary>Occurs when the chart element background is painted. </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.Paint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the chart image in the graphics.</summary>
      <param name="graphics">The graphics object in which to draw the chart image.</param>
      <param name="position">Position of the chart image in the graphics..</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.Palette">
      <summary>Gets or sets the palette for the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartColorPalette" /> enumeration value that determines the palette to be used.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.PaletteCustomColors">
      <summary>Gets or sets an array of custom palette colors.</summary>
      <returns>An array of <see cref="T:System.Drawing.Color" /> objects that represent the set of colors used for series on the chart.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.PerformDataBinding(System.Collections.IEnumerable)">
      <summary>Data binds the specified data source to the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
      <param name="data">An <see cref="T:System.Collections.IEnumerable" /> object that represents the data source.</param>
    </member>
    <member name="E:System.Web.UI.DataVisualization.Charting.Chart.PostPaint">
      <summary>Occurs after chart element was drawn. This event is raised for elements such as <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> and <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />.</summary>
    </member>
    <member name="E:System.Web.UI.DataVisualization.Charting.Chart.PrePaint">
      <summary>Occurs after the chart element backround is drawn. This event is raised for elements such as <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> and <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.RaisePostBackEvent(System.String)">
      <summary>Raises events for the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control when a form is posted back to the server.</summary>
      <param name="eventArgument">An event argument.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control to the output parameter specified.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.RenderType">
      <summary>Gets or sets the rendering method used to display a chart image.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.RenderType" /> enumeration value.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.ResetAutoValues">
      <summary>Resets automatically calculated chart property values to "Auto".</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.RightToLeft">
      <summary>Gets or sets a value that indicates whether the control should draw right-to-left for Right-to-Left (RTL) languages. </summary>
      <returns>A <see cref="T:System.Windows.Forms.RightToLeft" /> enumeration value. The default value is <see cref="T:System.Windows.Forms.RightToLeft.No" />.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream)">
      <summary>Saves the chart image to the specified stream. The properties <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType" />, <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Compression" /> and other <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control properties are used.</summary>
      <param name="imageStream">The image stream.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream,System.Web.UI.DataVisualization.Charting.ChartImageFormat)">
      <summary>Saves the chart image to the specified stream.</summary>
      <param name="imageStream">The image stream.</param>
      <param name="format">The chart image format.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.String)">
      <summary>Saves the chart image to the specified file. The properties <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType" />, <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Compression" /> and other <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control properties are used.</summary>
      <param name="imageFileName">The image file name.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.String,System.Web.UI.DataVisualization.Charting.ChartImageFormat)">
      <summary>Saves a chart image to the file.</summary>
      <param name="imageFileName">The image file name.</param>
      <param name="format">The chart image format.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.SaveViewState">
      <summary>Saves any server control view-state changes that have occurred since the time the page was posted back to the server.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the current view state for the server control.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.SaveXml(System.String)">
      <summary>Saves the current state of the chart to an XML file. This method is mainly used for support purposes. The executing thread must have file write permission.</summary>
      <param name="name">The file name to save.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.Serializer">
      <summary>Gets a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" /> object, which is used for chart serialization.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.Series">
      <summary>Gets a <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesCollection" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesCollection" /> object, which contains <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> objects.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.SuppressExceptions">
      <summary>Gets or sets a flag that determines whether noncritical exceptions should be suppressed.</summary>
      <returns>True if non-critical exceptions should be suppressed, otherwise false. The default value is false.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>Raises events for the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control when a form is posted back to the server.</summary>
      <param name="eventArgument">The event arguments.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.TextAntiAliasingQuality">
      <summary>Gets or sets the <see cref="T:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality" /> type to use when applying anti-aliasing to text.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality" /> enumeration value. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality.High" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.Titles">
      <summary>Stores all <see cref="T:System.Web.UI.DataVisualization.Charting.Title" /> objects used by the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.TitleCollection" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.Chart.ValidateDataSource(System.Object)">
      <summary>Verifies that a data-bound control can work with the object it will bind to.</summary>
      <param name="dataSource">The object to verify.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent">
      <summary>Gets or sets a value that determines the view state to be persisted at the client.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> enumeration value that represents the view state. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.SerializationContents.Default" />, which signifies that the view state will consist of all chart properties.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData">
      <summary>Gets or sets the user-defined view state of the control.</summary>
      <returns>A string value that represents the view state of the control, which is embedded in the Web document at the client.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.Chart.Width">
      <summary>Gets or sets the width of the entire chart image in pixels.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> value that represents the width, in pixels, of the entire chart image.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartArea">
      <summary>Represents a chart area on the chart image.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartArea.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartArea.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> class with the specified chart area name.</summary>
      <param name="name">The name for the new <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation">
      <summary>Gets or sets the alignment orientation of a chart area.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle">
      <summary>Gets or sets the alignment style of the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles" /> enumeration value that can represent either a single value or the bitwise-OR of multiple values that define the alignment to use.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea">
      <summary>Gets or sets the name of the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object to which this chart area should be aligned.</summary>
      <returns>A string value that represents the name of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object to which this chart area should be aligned. The default is the empty string.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.Area3DStyle">
      <summary>Gets or sets a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle" /> object, which is used to implement 3D for all series in a chart area.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle" /> object that implements 3D for all series plotted in a chart area.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.Axes">
      <summary>Gets or sets an array that represents all axes for a chart area.</summary>
      <returns>An array of <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> objects that represents all axes used by a chart area.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX">
      <summary>Gets or sets an <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object that represents the primary X-axis.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object that represents the primary X-axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2">
      <summary>Gets or sets an <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object that represents the secondary X-axis.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object that represents the secondary X-axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY">
      <summary>Gets or sets an <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object that represents the primary Y-axis.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object that represents the primary Y-axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY2">
      <summary>Gets or sets an <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object that represents the secondary Y-axis.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object that represents the secondary Y-axis.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor">
      <summary>Gets or sets the background color of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value. The default color is <see cref="T:System.Drawing.Color.White" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackGradientStyle">
      <summary>Gets or sets the orientation for the background gradient of a chart area, and also determines whether or not a gradient is used. </summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> enumeration. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackHatchStyle">
      <summary>Gets or sets the hatching style of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> enumeration. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImage">
      <summary>Gets or sets the background image of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</summary>
      <returns>A string value that represents the URL of an image file. The default is an empty string.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageAlignment">
      <summary>Gets or sets the alignment of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> background image.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" /> enumeration value. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageTransparentColor">
      <summary>Gets or sets the color of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object background image that will be drawn as transparent.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value. The default value is <see cref="F:System.Drawing.Color.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageWrapMode">
      <summary>Gets or sets the drawing mode for the background image of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" /> enumeration value. The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor">
      <summary>Gets or sets the secondary color for the background of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value. The default value is <see cref="F:System.Drawing.Color.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.BorderColor">
      <summary>Gets or sets the border color of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</summary>
      <returns>A T<see cref=":System.Drawing.Color" /> value. The default color is <see cref="F:System.Drawing.Color.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.BorderDashStyle">
      <summary>Gets or sets the border style of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> enumeration value that determines the border style of the chart area.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.BorderWidth">
      <summary>Gets or sets the border width of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</summary>
      <returns>An integer value that determines the border width, in pixels, of the chart area.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartArea.Dispose(System.Boolean)">
      <summary>Releases unmanaged and, optionally, managed resources.</summary>
      <param name="disposing">True to release both unmanaged and managed resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartArea.GetSeriesDepth(System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Returns the depth of a <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> in a chart area.</summary>
      <returns>A float value that represents the depth of the specified <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />, which is measured as a percentage of the chart area's depth.</returns>
      <param name="series">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> for which the depth is retrieved.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartArea.GetSeriesZPosition(System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Returns the Z position of a series, which is useful for custom drawing.</summary>
      <returns>A float value that represents the Z position of the specified series, which is measured as a percentage of the depth of a chart area.</returns>
      <param name="series">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> for which the Z position is retrieved.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition">
      <summary>Gets or sets an <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> object, which defines the inner plot position of a chart area object.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> object, which defines the inner plot position of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.IsSameFontSizeForAllAxes">
      <summary>Gets or sets a flag that determines if the labels of the relevant chart area axes are of equal size.</summary>
      <returns>True if all axes that have their <see cref="P:System.Web.UI.DataVisualization.Charting.Axis.IsLabelAutoFit" /> property set to true will display their labels using the same font size, otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.Name">
      <summary>Gets or sets the unique name of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</summary>
      <returns>A string value that represents the name of a ChartArea object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.Position">
      <summary>Gets or sets an <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> object that defines the position of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object within the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> object that defines the position of a chart area object within the chart image.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartArea.RecalculateAxesScale">
      <summary>Recalculates the properties of the chart area after changes have been made to the chart in the <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Customize" /> event.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.ShadowColor">
      <summary>Gets or sets the shadow color of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value. The default color is <see cref="P:System.Drawing.Color.Black" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.ShadowOffset">
      <summary>Gets or sets the shadow offset, in pixels, of a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</summary>
      <returns>An integer that represents the shadow offset, in pixels, of the chart area.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints(System.Web.UI.DataVisualization.Charting.Point3D[])">
      <summary>Applies 3D transformations to an array of 3D points, which must be done before GDI+ drawing methods can be called.</summary>
      <param name="points">An array of 3D points.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea.Visible">
      <summary>Gets or sets a flag that determines if a chart area is visible.</summary>
      <returns>True if the chart area is visible, otherwise false.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle">
      <summary>Manages the display attributes for three-dimensional (3D) chart areas.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.#ctor(System.Web.UI.DataVisualization.Charting.ChartArea)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle" /> class using the <paramref name="chartArea" /> parameter.</summary>
      <param name="chartArea">A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.Enable3D">
      <summary>Gets or sets a flag that toggles the 3D on and off for a chart area.</summary>
      <returns>true the chart area is displayed using 3D, false if the chart area is displayed in 2D. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.Inclination">
      <summary>Gets or sets the angle of rotation around the horizontal axes for 3D chart areas.</summary>
      <returns>An integer that represents the angle of rotation around the horizontal axes for 3D chart areas.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.IsClustered">
      <summary>Gets or sets a flag that determines whether data series for a bar or column chart are clustered; that is, displayed along distinct rows.</summary>
      <returns>True if whether data series for a bar or column chart are clustered; otherwise, False.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes">
      <summary>Gets or sets a flag that determines whether a chart area is displayed using an isometric projection.</summary>
      <returns>True if the chart area is displayed using an isometric projection, otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.LightStyle">
      <summary>Gets or sets the type of lighting for a 3D chart area.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.LightStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.Perspective">
      <summary>Gets or sets the percent of perspective for a 3D chart area.</summary>
      <returns>An integer value that represents the percent of perspective for a 3D chart area. The allowable range is 0-100 percent, and the default is zero (0) percent.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.PointDepth">
      <summary>Gets or sets the depth of data points displayed in a 3D chart area.</summary>
      <returns>An integer value that represents the depth of data points. The allowable range is 0-1000 percent. The default is 100 percent.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.PointGapDepth">
      <summary>Gets or sets the distance between series rows in a 3D chart area.</summary>
      <returns>An integer value that represents the distance between data rows (that is, the data series) in the 3D chart area. The allowable range is 0-1000 percent, and the default is 100 percent.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.Rotation">
      <summary>Gets or sets the angle of rotation around the vertical axes for 3D chart areas.</summary>
      <returns>An integer value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.WallWidth">
      <summary>Gets or sets the width of the walls displayed in a 3D chart area.</summary>
      <returns>An integer value that represents the width, in pixels, of the walls displayed in a 3D chart area.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartAreaCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartAreaCollection.Add(System.String)">
      <summary>Adds a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> object with the specified name to the collection.</summary>
      <returns>A string value that represents a reference to the newly added object.</returns>
      <param name="name">The name of the object to be added to the collection.</param>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartColorPalette">
      <summary>Specifies a palette when setting a Palette property. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.None">
      <summary>No palette is used. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.Bright">
      <summary>Palette utilizes bright colors.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.Grayscale">
      <summary>Palette utilizes grayscale colors, that is, shades of black and white.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.Excel">
      <summary>Palette utilizes Excel-style colors.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.Light">
      <summary>Palette utilizes light colors.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.Pastel">
      <summary>Palette utilizes pastel colors.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.EarthTones">
      <summary>Palette utilizes earth tone colors such as green and brown.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.SemiTransparent">
      <summary>Palette utilizes semi-transparent colors.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.Berry">
      <summary>Palette utilizes blues and purples.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.Chocolate">
      <summary>Palette utilizes shades of brown.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.Fire">
      <summary>Palette utilizes red, orange and yellow colors.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.SeaGreen">
      <summary>Palette utilizes colors that range from green to blue.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartColorPalette.BrightPastel">
      <summary>Palette utilizes bright pastel colors.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle">
      <summary>Specifies a line style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartDashStyle.NotSet">
      <summary>The line style is not set.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartDashStyle.Dash">
      <summary>A dashed line.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartDashStyle.DashDot">
      <summary>A line with a repeating dash-dot pattern.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartDashStyle.DashDotDot">
      <summary>A line a repeating dash-dot-dot pattern.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartDashStyle.Dot">
      <summary>A line with a repeating dot pattern.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartDashStyle.Solid">
      <summary>A solid line.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartElement">
      <summary>Base class for all the chart elements. The <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElement" /> class represents the most basic element of the chart element hierarchy.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElement" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElement.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElement" />.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElement.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElement" /> and optionally releases the managed resources.</summary>
      <param name="disposing">True to release both managed and unmanaged resources; False to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElement.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElement" />.</summary>
      <returns>True if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElement" />; otherwise, False.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElement" />.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElement.GetHashCode">
      <summary>Returns a hash function for a particular type.</summary>
      <returns>An integer value that represents the hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartElement.Tag">
      <summary>Gets or sets an object associated with this chart element.</summary>
      <returns>An <see cref="T:System.Object" /> associated with this chart element.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElement.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A string value that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1">
      <summary>Represents the base class for all chart element collections.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1.ClearItems">
      <summary>Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1" />.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1" /> and optionally releases the managed resources.</summary>
      <param name="disposing">True to release both managed and unmanaged resources; False to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index location.</summary>
      <param name="index">The zero-based index location of the item will be inserted.</param>
      <param name="item">The object to insert. The value can be null for reference types.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1.Invalidate">
      <summary>Forces the invalidation of the parent chart element.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1.RemoveItem(System.Int32)">
      <summary>Removes the element at the specified index location of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">The zero-based index location of the element to remove.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1.ResumeUpdates">
      <summary>Resumes the invalidation of a chart element in the collection.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1.SetItem(System.Int32,`0)">
      <summary>Replaces the element at the specified index location.</summary>
      <param name="index">The zero-based index location of the element to replace.</param>
      <param name="item">The new value for the element at the specified index location. The value can be null for reference types.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElementCollection`1.SuspendUpdates">
      <summary>Suspends the invalidation of a chart element in the collection.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartElementOutline">
      <summary>Represents an array of marker points and the outline path used for visual object selection in the chart.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElementOutline.Dispose">
      <summary>Performs application-defined tasks that free, release, or reset unmanaged resources.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartElementOutline.Dispose(System.Boolean)">
      <summary>Releases unmanaged and, optionally, managed resources.</summary>
      <param name="disposing">True to release both unmanaged and managed resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartElementOutline.Markers">
      <summary>Gets or sets the markers.</summary>
      <returns>An array of <see cref="T:System.Drawing.PointF" /> values that represent the marker points.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartElementOutline.OutlinePath">
      <summary>Gets or sets the outline path. The return value can be null for complex objects and objects with two points or fewer.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that represents the outline path.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartElementType">
      <summary>Specifies a chart element type.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.Nothing">
      <summary>No chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.Title">
      <summary>The title of a <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.PlottingArea">
      <summary>The plotting area, which is the chart area excluding axes, labels, and so on. Also excludes the regions that data points might occupy.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.Axis">
      <summary>An <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.TickMarks">
      <summary>Any major or minor <see cref="T:System.Web.UI.DataVisualization.Charting.TickMark" /> object.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.Gridlines">
      <summary>Any major or minor grid line, either vertical or horizontal.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.StripLines">
      <summary>A <see cref="T:System.Web.UI.DataVisualization.Charting.StripLine" /> object.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.AxisLabelImage">
      <summary>An <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> label image.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.AxisLabels">
      <summary>An <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> label.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.AxisTitle">
      <summary>An <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> title.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.DataPoint">
      <summary>A <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.DataPointLabel">
      <summary>A series <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> label.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.LegendArea">
      <summary>The area inside a <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> object. Does not include the space occupied by legend items.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.LegendTitle">
      <summary>A <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> title.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.LegendHeader">
      <summary>A <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> header.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.LegendItem">
      <summary>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItem" /> object.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartElementType.Annotation">
      <summary>Any object derived from the <see cref="T:System.Web.UI.DataVisualization.Charting.Annotation" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartGraphics">
      <summary>Provides numerous conversion functions and exposes a GDI+ <see cref="T:System.Drawing.Graphics" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartGraphics.Dispose(System.Boolean)">
      <summary>Releases unmanaged and, optionally, managed resources.</summary>
      <param name="disposing">True to release both unmanaged and managed resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint(System.Drawing.PointF)">
      <summary>Takes a <see cref="T:System.Drawing.PointF" /> object and converts its relative coordinates to absolute coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.PointF" /> object in absolute coordinates.</returns>
      <param name="point">A <see cref="T:System.Drawing.PointF" /> object in relative coordinates.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetAbsoluteRectangle(System.Drawing.RectangleF)">
      <summary>Takes a <see cref="T:System.Drawing.RectangleF" /> object and converts its relative coordinates to absolute coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> object in absolute coordinates.</returns>
      <param name="rectangle">A <see cref="T:System.Drawing.RectangleF" /> object in relative coordinates.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetAbsoluteSize(System.Drawing.SizeF)">
      <summary>Takes a <see cref="T:System.Drawing.SizeF" /> object that uses relative coordinates and returns a <see cref="T:System.Drawing.SizeF" /> object that uses absolute coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.SizeF" /> object in absolute coordinates.</returns>
      <param name="size">A <see cref="T:System.Drawing.SizeF" /> object in relative coordinates.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetPositionFromAxis(System.String,System.Web.UI.DataVisualization.Charting.AxisName,System.Double)">
      <summary>Takes a given axis value for a specified axis and returns the relative pixel value.</summary>
      <returns>A string value that represents the converted axis value, in relative pixel coordinates.</returns>
      <param name="chartAreaName">Chart area name.</param>
      <param name="axis">An <see cref="T:System.Web.UI.DataVisualization.Charting.AxisName" /> enumeration value that identifies the relevant axis.</param>
      <param name="axisValue">The axis value to be converted to a relative pixel value.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetRelativePoint(System.Drawing.PointF)">
      <summary>Takes a <see cref="T:System.Drawing.PointF" /> object that uses absolute coordinates and returns a <see cref="T:System.Drawing.PointF" /> object that uses relative coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.PointF" /> object in relative coordinates.</returns>
      <param name="point">A <see cref="T:System.Drawing.PointF" /> object in absolute coordinates.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetRelativeRectangle(System.Drawing.RectangleF)">
      <summary>Takes a <see cref="T:System.Drawing.RectangleF" /> structure that is using absolute coordinates and returns a <see cref="T:System.Drawing.RectangleF" /> object that uses relative coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> structure in relative coordinates.</returns>
      <param name="rectangle">A <see cref="T:System.Drawing.RectangleF" /> structure in absolute coordinates.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetRelativeSize(System.Drawing.SizeF)">
      <summary>Takes a <see cref="T:System.Drawing.SizeF" /> object in absolute coordinates and returns a <see cref="T:System.Drawing.SizeF" /> object that uses relative coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.SizeF" /> object in relative coordinates.</returns>
      <param name="size">A <see cref="T:System.Drawing.SizeF" /> object in absolute coordinates.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartGraphics.Graphics">
      <summary>Gets or sets a GDI+ <see cref="T:System.Drawing.Graphics" /> object that can be used for drawing purposes.</summary>
      <returns>A <see cref="T:System.Drawing.Graphics" /> object used for drawing.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle">
      <summary>Specifies a hatching style for a chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None">
      <summary>No hatching style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.BackwardDiagonal">
      <summary>Backward diagonal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Cross">
      <summary>Cross style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DarkDownwardDiagonal">
      <summary>Dark downward diagonal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DarkHorizontal">
      <summary>Dark horizontal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DarkUpwardDiagonal">
      <summary>Dark upward diagonal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DarkVertical">
      <summary>Dark vertical style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DashedDownwardDiagonal">
      <summary>Dashed downward diagonal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DashedHorizontal">
      <summary>Dashed horizontal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DashedUpwardDiagonal">
      <summary>Dashed upward diagonal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DashedVertical">
      <summary>Dashed vertical style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DiagonalBrick">
      <summary>Diagonal brick style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DiagonalCross">
      <summary>Diagonal cross style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Divot">
      <summary>Divot style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DottedDiamond">
      <summary>Dotted diamond style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.DottedGrid">
      <summary>Dotted grid style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.ForwardDiagonal">
      <summary>Forward diagonal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Horizontal">
      <summary>Horizontal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.HorizontalBrick">
      <summary>Horizontal brick style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.LargeCheckerBoard">
      <summary>Large checker board style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.LargeConfetti">
      <summary>Large confetti style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.LargeGrid">
      <summary>Large grid style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.LightDownwardDiagonal">
      <summary>Light downward diagonal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.LightHorizontal">
      <summary>Light horizontal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.LightUpwardDiagonal">
      <summary>Light upward diagonal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.LightVertical">
      <summary>Light vertical style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.NarrowHorizontal">
      <summary>Narrow horizontal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.NarrowVertical">
      <summary>Narrow vertical style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.OutlinedDiamond">
      <summary>Outlined diamond style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent05">
      <summary>Percent05 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent10">
      <summary>Percent10 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent20">
      <summary>Percent20 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent25">
      <summary>Percent25 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent30">
      <summary>Percent30 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent40">
      <summary>Percent40 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent50">
      <summary>Percent50 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent60">
      <summary>Percent60 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent70">
      <summary>Percent70 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent75">
      <summary>Percent75 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent80">
      <summary>Percent80 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Percent90">
      <summary>Percent90 style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Plaid">
      <summary>Plaid style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Shingle">
      <summary>Shingle style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.SmallCheckerBoard">
      <summary>Small checker board style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.SmallConfetti">
      <summary>Small confetti style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.SmallGrid">
      <summary>Small grid style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.SolidDiamond">
      <summary>Solid diamond style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Sphere">
      <summary>Sphere style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Trellis">
      <summary>Trellis style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Vertical">
      <summary>Vertical style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Wave">
      <summary>Wave style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.Weave">
      <summary>Weave style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.WideDownwardDiagonal">
      <summary>Wide downward diagonal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.WideUpwardDiagonal">
      <summary>Wide upward diagonal style.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.ZigZag">
      <summary>Zigzag style.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartHttpHandler">
      <summary>Processes HTTP web requests using a custom HTTP handler; handles chart images.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartHttpHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHttpHandler" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartHttpHandler.Settings">
      <summary>Gets the chart image storage settings registered in the web.config file under the ChartHttpHandler key.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartHttpHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler" /> object.</summary>
      <returns>True if the <see cref="T:System.Web.IHttpHandler" /> object is reusable, otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartHttpHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Enables HTTP web requests to be processed by a custom HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> interface.</summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to intrinsic server objects such as Request, Response, Session, and Server. Used to service HTTP requests.</param>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings">
      <summary>Provides attributes that can be used to write a custom HTTP handler for storing temporary image files.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings.CustomHandlerName">
      <summary>Gets or sets the name of the custom handler.</summary>
      <returns>A string value that represents the name of the custom handler.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings.Directory">
      <summary>Gets or sets the directory of the custom handler where the temporary image files will be stored.</summary>
      <returns>A string value that represents the directory.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings.FolderName">
      <summary>Gets or sets the folder which will be used for storing images in the specified directory.</summary>
      <returns>A string that represents the folder name.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings.HandlerType">
      <summary>Gets the handler type of the custom handler.</summary>
      <returns>The <see cref="T:System.Type" /> of the custom handler.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings.Item(System.String)">
      <summary>Gets a settings parameter with the specified name registered in the Web.config file under the ChartHttpHandler key.</summary>
      <returns>Parameter value.</returns>
      <param name="name">Name of the parameter to get.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings.PrivateImages">
      <summary>Gets a flag that indicates whether the handler will utilize private images.</summary>
      <returns>True if the handler will utilize private images, otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings.StorageType">
      <summary>Gets or sets the chart image storage type.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType" /> enumeration value that represents the chart image storage type.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings.Timeout">
      <summary>Gets or sets the timeout of the custom handler.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> enumeration value that represents the lifetime of the chart images.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings.Url">
      <summary>Gets or sets the URL that corresponds to the HTTP path where temporary image files are stored.</summary>
      <returns>A string value that represents the URL.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType">
      <summary>Specifies a storage type for chart images.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType.InProcess">
      <summary>Chart images are stored in the private process memory. You cannot use this option in a multiple-process or farm environment.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType.File">
      <summary>Chart images are stored in a file.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType.Session">
      <summary>Chart images are stored in the ASP.NET session.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle">
      <summary>Specifies the image alignment for a chart background image. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft">
      <summary>The mage is aligned to the top left corner of the chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.Top">
      <summary>The image is aligned to the top boundary of the chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopRight">
      <summary>The image is aligned to the top right corner of the chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.Right">
      <summary>The image is aligned to the right boundary of the chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.BottomRight">
      <summary>The image is aligned to the bottom right corner of the chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.Bottom">
      <summary>The image is aligned to the bottom boundary of the chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.BottomLeft">
      <summary>The image is aligned to the bottom left corner of the chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.Left">
      <summary>The image is aligned to the left boundary of the chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.Center">
      <summary>The image is aligned in the center of the chart element.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartImageFormat">
      <summary>Specifies the image type for the chart.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageFormat.Jpeg">
      <summary>A JPEG image format.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png">
      <summary>A PNG image format.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageFormat.Bmp">
      <summary>A bitmap (BMP) image format.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageFormat.Tiff">
      <summary>A TIFF image format.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageFormat.Gif">
      <summary>A GIF image format.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageFormat.Emf">
      <summary>A Windows Enhanced Metafile (EMF) image format.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageFormat.EmfPlus">
      <summary>A Windows Enhanced Metafile Plus (EMF+) image format. </summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageFormat.EmfDual">
      <summary>A Windows Enhanced Metafile Dual (EMF-dual) image format.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartImageType">
      <summary>Specifies the image type for the chart.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageType.Bmp">
      <summary>BMP image format type.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageType.Jpeg">
      <summary>JPEG image format type.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageType.Png">
      <summary>PNG image format type.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageType.Emf">
      <summary>Windows Enhanced Metafile (EMF) image format type.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode">
      <summary>Specifies the drawing mode for a background image.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Scaled">
      <summary>Background image is scaled to fit the entire chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile">
      <summary>Background image is tiled to fit the entire chart element.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.TileFlipX">
      <summary>Every other tiled image is reversed around the X-axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.TileFlipXY">
      <summary>Every other tiled image is reversed around the X-axis and Y-axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.TileFlipY">
      <summary>Every other tiled image is reversed around the Y-axis.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled">
      <summary>Background image is not scaled.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartNamedElement">
      <summary>Represents the base class for most chart elements. Chart elements such as series, chart areas, and legends must have unique names, and reuse the unique name generation and validation logic provided by the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartNamedElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartNamedElement" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartNamedElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.ChartNamedElement" /> class with the specified chart element name.</summary>
      <param name="name">The name of the new chart element.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartNamedElement.Name">
      <summary>Gets or sets the name of the chart element.</summary>
      <returns>A string value that represents the name of the chart element.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1">
      <summary>Represents the base class for all collections of named chart elements. Performs name management and enforces the uniqueness of the names.</summary>
      <typeparam name="T">A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartNamedElement" /> object.</typeparam>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1.FindByName(System.String)">
      <summary>Finds the chart element by the specified name.</summary>
      <returns>The <see cref="T:System.Web.UI.DataVisualization.Charting.ChartNamedElement" /> object of the specified name in the collection.</returns>
      <param name="name">The name of the chart element.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1.IndexOf(System.String)">
      <summary>Finds the index of the chart element with the specified name.</summary>
      <returns>An integer value that represents the position of the chart element in the zero-based index.</returns>
      <param name="name">The name of the chart element.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserts the specified item in the collection at the specified index.</summary>
      <param name="index">The zero-based index where the item is to be inserted.</param>
      <param name="item">The object to insert.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1.IsUniqueName(System.String)">
      <summary>Determines whether the chart element with the specified name already exists in the collection.</summary>
      <returns>True if the new chart element name is unique, otherwise false.</returns>
      <param name="name">The new chart element name.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1.Item(System.String)">
      <summary>Gets or sets the chart element with the specified name.</summary>
      <returns>The <see cref="T:System.Web.UI.DataVisualization.Charting.ChartNamedElement" /> object of the specified name in the collection.</returns>
      <param name="name">The name of the chart element.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1.NamePrefix">
      <summary>Gets the name prefix that is used to create unique chart element names.</summary>
      <returns>A string value that represents the default name prefix of the chart elements stored in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1.NextUniqueName">
      <summary>Finds the unique name for the new element to be added to the collection.</summary>
      <returns>A string value that represents the next unique chart element name.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1.RemoveItem(System.Int32)">
      <summary>Removes the chart element at the specified index of the collection.</summary>
      <param name="index">The zero-based index of the chart element to remove.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1.SetItem(System.Int32,`0)">
      <summary>Replaces the chart element at the specified index with a new chart element.</summary>
      <param name="index">The zero-based index of the chart element to replace.</param>
      <param name="item">The new chart element to insert at the specified index.</param>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs">
      <summary>Provides data for the paint events of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs.Chart">
      <summary>Gets the root <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> object.</summary>
      <returns>The root <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs.ChartElement">
      <summary>Gets an object for the event.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the chart element.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs.ChartGraphics">
      <summary>Gets a <see cref="T:System.Web.UI.DataVisualization.Charting.ChartGraphics" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartGraphics" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs.Position">
      <summary>Gets an <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> object.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartSerializer">
      <summary>Enables serialization of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content">
      <summary>Gets or sets the type of chart content to be serialized.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> enumeration value that represents the chart content that will be serialized during a load, save or reset operation. By default, all non-default chart properties, including data, are persisted.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format">
      <summary>Gets or sets the format used when the chart is serialized.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" /> enumeration value that represents the format of the serialized data. The default value is XML.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)">
      <summary>Returns a serializable or non serializable class and/or property names, depending on the specific flag value.</summary>
      <returns>A string value that represents the serializable or non serializable class and/or property names.</returns>
      <param name="content">The serializable content.</param>
      <param name="serializable">True to get a serializable string; false to get a non serializaable string.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading">
      <summary>Gets or sets a flag that indicates whether object properties are reset to default values before loading.</summary>
      <returns>True if object properties are reset to default values before loading; otherwise, False.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode">
      <summary>Gets or sets a flag that indicates whether the chart serializer is working in template-creation mode.</summary>
      <returns>True if the chart serializer is working in template-creation mode; otherwise, False.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored">
      <summary>Gets or sets a flag that indicates whether unknown XML properties and elements will be ignored without throwing an exception.</summary>
      <returns>True if unknown XML properties and elements are ignored without throwing an exception; otherwise, False.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)">
      <summary>Loads serialized data into the control from an object derived from the <see cref="T:System.IO.Stream" /> class.</summary>
      <param name="stream">An object derived from the <see cref="T:System.IO.Stream" /> class, for example, a <see cref="T:System.IO.MemoryStream" /> object.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)">
      <summary>Loads serialized data into the control from a reader object that derives from the <see cref="T:System.IO.TextReader" /> class.</summary>
      <param name="reader">A reader, such as <see cref="T:System.IO.StringReader" />, that is derived from the abstract <see cref="T:System.IO.TextReader" /> class.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)">
      <summary>Loads serialized data saved to disk into the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
      <param name="fileName">The relative or absolute path of the file used to store the serialized data. If a relative path is specified, the path will be relative to the current directory.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)">
      <summary>Loads serialized data into the control from an object derived from the <see cref="T:System.Xml.XmlReader" /> class.</summary>
      <param name="reader">An object from which to read the persisted data. The object is derived from the <see cref="T:System.Xml.XmlReader" /> class, and can be a .NET Framework object or a user-defined object.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent">
      <summary>Gets or sets the chart properties that will not be serialized.</summary>
      <returns>A comma-separated string expression that represents the chart properties that will not be serialized. The syntax is "Class.Property[,Class.Property]".</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset">
      <summary>Resets all chart properties marked for serialization.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)">
      <summary>Saves chart data and properties with non-default values to an object that derives from the <see cref="T:System.IO.Stream" /> class.</summary>
      <param name="stream">An object derived from the <see cref="T:System.IO.Stream" /> class, such as <see cref="T:System.IO.MemoryStream" />, that is used to save chart properties.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)">
      <summary>Saves chart data and properties with non-default values to the given object that is derived from the <see cref="T:System.IO.TextWriter" /> class.</summary>
      <param name="writer">An object derived from <see cref="T:System.IO.TextWriter" /> class, for example, <see cref="T:System.IO.StringWriter" />, that is used to save chart properties.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)">
      <summary>Saves chart data and properties with non-default values to the given file.</summary>
      <param name="fileName">The relative or absolute path of the file used to store the serialized data. Note that if a relative path is specified, the path will be relative to the current directory.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)">
      <summary>Saves chart data and properties with non-default values to the given object that is derived from the <see cref="T:System.Xml.XmlWriter" /> class.</summary>
      <param name="writer">An object derived from <see cref="T:System.Xml.XmlWriter" /> used to save <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> properties.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent">
      <summary>Gets or sets the chart properties that can be serialized.</summary>
      <returns>A comma-separated string expression that represents the chart properties to be serialized. The syntax is "Class.Property[,Class.Property]".</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.ChartValueType">
      <summary>Specifies value types for various chart properties.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto">
      <summary>Property type is set automatically by the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Double">
      <summary>A <see cref="T:System.Double" /> value.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Single">
      <summary>A <see cref="T:System.Single" /> value.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Int32">
      <summary>A <see cref="T:System.Int32" /> value.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Int64">
      <summary>A <see cref="T:System.Int64" /> value.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.UInt32">
      <summary>A <see cref="T:System.UInt32" /> value.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.UInt64">
      <summary>A <see cref="T:System.UInt64" /> value.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.String">
      <summary>A <see cref="T:System.String" /> value.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime">
      <summary>A <see cref="T:System.DateTime" /> value.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Date">
      <summary>The date portion of a <see cref="T:System.DateTime" /> value.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Time">
      <summary>The time portion of the <see cref="DateTime" /> value.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTimeOffset">
      <summary>A <see cref="T:System.DateTime" /> value with offset.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.CompareMethod">
      <summary>Specifies the type of comparison to be used when filtering data. This enumeration is used by the Filter method definitions in the <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" /> class that take the <paramref name="CompareMethod" /> argument.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CompareMethod.MoreThan">
      <summary>If the data point value is more than the compared value, the point is filtered.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan">
      <summary>If the data point value is less than the compared value, the point is filtered.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo">
      <summary>If the data point value is equal to the compared value, the point is filtered.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CompareMethod.MoreThanOrEqualTo">
      <summary>If the data point value more than or equal to the compared value, the point is filtered.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThanOrEqualTo">
      <summary>If the data point value is less than or equal to the compared value, the point is filtered.</summary>
    </member>
    <member name="F:System.Web.UI.DataVisualization.Charting.CompareMethod.NotEqualTo">
      <summary>If the data point value is not equal to the compared value, the point is filtered.</summary>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend" /> event of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs.#ctor(System.Web.UI.DataVisualization.Charting.LegendItemsCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs" /> class with the specified <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" />.</summary>
      <param name="legendItems">The <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" />.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs.#ctor(System.Web.UI.DataVisualization.Charting.LegendItemsCollection,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs" /> class with the specified <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" /> and legend name.</summary>
      <param name="legendItems">The <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" />.</param>
      <param name="legendName">The legend name.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs.LegendItems">
      <summary>Used to remove, modify or change the order of both custom and default legend items in the <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend" /> event. Can also be used to add custom legend items.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs.LegendName">
      <summary>Gets the name of the <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> object, which can be used to determine which legend was the sender of the <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend" /> event.</summary>
      <returns>A string value that represents the name of the associated <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs">
      <summary>Provides data for the CustomizeMapAreas event of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs.#ctor(System.Web.UI.DataVisualization.Charting.MapAreasCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs" /> class with the specified map areas collection.</summary>
      <param name="areaItems">A map areas collection.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs.MapAreaItems">
      <summary>Gets or sets a <see cref="T:System.Web.UI.DataVisualization.Charting.MapAreasCollection" /> object. Can be used to remove or modify map areas that correspond to a chart object, or to add custom map areas.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.MapAreasCollection" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.CustomLabel">
      <summary>Represents a custom label for an axis.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomLabel.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomLabel.#ctor(System.Double,System.Double,System.String,System.Int32,System.Web.UI.DataVisualization.Charting.LabelMarkStyle)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> class with the specified <paramref name="fromPosition" />, <paramref name="toPosition" />, <paramref name="text" />, <paramref name="labelRow" />, and <paramref name="markStyle" /> parameters.</summary>
      <param name="fromPosition">The beginning of the axis range the label applies to.</param>
      <param name="toPosition">The end of the axis range the label applies to.</param>
      <param name="text">The label text.</param>
      <param name="labelRow">The label row index.</param>
      <param name="markStyle">The label mark style.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomLabel.#ctor(System.Double,System.Double,System.String,System.Int32,System.Web.UI.DataVisualization.Charting.LabelMarkStyle,System.Web.UI.DataVisualization.Charting.GridTickTypes)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> class with the specified <paramref name="fromPosition" />, <paramref name="toPosition" />, <paramref name="text" />, <paramref name="labelRow" />, <paramref name="markStyle" /> and <paramref name="gridTick" /> parameters.</summary>
      <param name="fromPosition">The beginning of the axis range the label applies to.</param>
      <param name="toPosition">The end of the axis range the label applies to.</param>
      <param name="text">The label text.</param>
      <param name="labelRow">The label row index.</param>
      <param name="markStyle">The label mark style.</param>
      <param name="gridTick">The custom grid line and/or tick marks flag.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.Axis">
      <summary>Gets the axis that this <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> object belongs to.</summary>
      <returns>An <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomLabel.Clone">
      <summary>Returns a cloned label object.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> object that represents a copy of the current custom label.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.ForeColor">
      <summary>Gets or sets the text color of the custom label.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that represents the text color of a custom label.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.FromPosition">
      <summary>Gets or sets the beginning position, in axis coordinates, of the custom label.</summary>
      <returns>A double value that represents the beginning of the axis range that the label is applied to.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.GridTicks">
      <summary>Gets or sets a property that specifies whether custom tick marks and grid lines will be drawn in the center of the label.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.GridTickTypes" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.Image">
      <summary>Gets or sets the custom label image.</summary>
      <returns>A string value that represents the name of the custom label image.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.ImageMapAreaAttributes">
      <summary>Gets or sets a string that represents the area attributes of a custom label image.</summary>
      <returns>A string value that represents the area attributes of a custom label's image map.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.ImagePostBackValue">
      <summary>Gets or sets the postback value that can be processed on a <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</summary>
      <returns>A string value that represents the value that is passed to a <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.ImageTransparentColor">
      <summary>Gets or sets a color that will be replaced with a transparent color when a custom label image is drawn.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value which is replaced with a transparent color when you draw the image. The default value is <see cref="P:System.Drawing.Color.Magenta" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.ImageUrl">
      <summary>Gets or sets the URL target of the label image.</summary>
      <returns>A string value that represents the destination URL that is pointed to by this custom label image.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.LabelMark">
      <summary>Gets or sets the label mark for a custom label. This applies to labels in the second row only.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.LabelMarkStyle" /> enumeration value that determines the type of label mark, if any, to be used.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.MapAreaAttributes">
      <summary>Gets or sets the map area attributes, if any, of the custom label.</summary>
      <returns>A string value that represents the map area attributes, if any.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.MarkColor">
      <summary>Gets or sets the marker color for the custom label.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that represents the marker color of a custom label.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.Name">
      <summary>Gets or sets the name of the custom label.</summary>
      <returns>A string value that represents the text name of the item.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.PostBackValue">
      <summary>Gets or sets the postback value that can be processed on a <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</summary>
      <returns>A string value that represents the value that is passed to a <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.RowIndex">
      <summary>Gets or sets the index of the custom label row.</summary>
      <returns>An integer value that specifies the index, 0 to 10, of the custom label row.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.Text">
      <summary>Gets or sets the custom label text.</summary>
      <returns>A string value that represents the label text.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.ToolTip">
      <summary>Gets or sets the custom label tooltip text.</summary>
      <returns>A string that represents the tooltip text.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.ToPosition">
      <summary>Gets or sets the starting position of the custom label, in axis coordinates.</summary>
      <returns>A double value that represents the starting position.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.CustomLabel.Url">
      <summary>Gets or sets the target URL of the custom label.</summary>
      <returns>A string value that represents the URL.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.CustomLabelsCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomLabelsCollection.Add(System.Double,System.Double,System.String)">
      <summary>Adds a <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> object to the collection, using the given axis range and text.</summary>
      <returns>The newly added <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> object.</returns>
      <param name="fromPosition">The minimum value of the axis range to which the label is applied.</param>
      <param name="toPosition">The maximum value of the axis range to which the label is applied.</param>
      <param name="text">The label text.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomLabelsCollection.Add(System.Double,System.Double,System.String,System.Int32,System.Web.UI.DataVisualization.Charting.LabelMarkStyle)">
      <summary>Adds a custom label to the collection, using the given axis range, text, row index and marking style.</summary>
      <returns>The newly added <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> object.</returns>
      <param name="fromPosition">The minimum value of the axis range the label is applied to.</param>
      <param name="toPosition">The maximum value of the axis range the label is applied to.</param>
      <param name="text">Label text.</param>
      <param name="rowIndex">Label row index.</param>
      <param name="markStyle">A <see cref="T:System.Web.UI.DataVisualization.Charting.LabelMarkstyle" /> enumeration value.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomLabelsCollection.Add(System.Double,System.Double,System.String,System.Int32,System.Web.UI.DataVisualization.Charting.LabelMarkStyle,System.Web.UI.DataVisualization.Charting.GridTickTypes)">
      <summary>Adds a custom label to the collection, using the given axis range, text, row index, marking style and grid tick type.</summary>
      <returns>The newly added <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> object.</returns>
      <param name="fromPosition">The minimum value of the axis range the label is applied to.</param>
      <param name="toPosition">The maximum value of the axis range the label is applied to.</param>
      <param name="text">Label text.</param>
      <param name="rowIndex">Label row index.</param>
      <param name="markStyle">A <see cref="T:System.Web.UI.DataVisualization.Charting.LabelMarkstyle" /> enumeration value.</param>
      <param name="gridTick">A <see cref="T:System.Web.UI.DataVisualization.Charting.GridTickTypes" /> enumeration value.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomLabelsCollection.Add(System.Double,System.Web.UI.DataVisualization.Charting.DateTimeIntervalType)">
      <summary>Adds multiple <see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabel" /> objects of type <see cref="T:System.DateTime" /> to the collection. Populates the entire first row of an axis with labels.</summary>
      <param name="labelsStep">Determines how often the custom labels will be drawn.</param>
      <param name="intervalType">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that determines the interval type.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomLabelsCollection.Add(System.Double,System.Web.UI.DataVisualization.Charting.DateTimeIntervalType,System.Double,System.Double,System.String,System.Int32,System.Web.UI.DataVisualization.Charting.LabelMarkStyle)">
      <summary>Adds multiple custom labels to the collection. The labels will be <see cref="T:System.DateTime" /> labels with the specified interval type, and will be generated for the axis range that is determined by the <paramref name="min" /> and <paramref name="max" /> arguments.</summary>
      <param name="labelsStep">Determines how often custom labels will be drawn.</param>
      <param name="intervalType">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that determines the unit of measure for the <paramref name="labelsStep" /> parameter.</param>
      <param name="min">Minimum value.</param>
      <param name="max">Maximum value.</param>
      <param name="format">Label text format.</param>
      <param name="rowIndex">Label row index.</param>
      <param name="markStyle">A <see cref="T:System.Web.UI.DataVisualization.Charting.LabelMarkstyle" /> enumeration value.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomLabelsCollection.Add(System.Double,System.Web.UI.DataVisualization.Charting.DateTimeIntervalType,System.String)">
      <summary>Adds multiple <see cref="T:System.DateTime" /><see cref="T:System.Web.UI.DataVisualization.Charting.CustomLabelsCollection" /> objects to the collection. Populates the entire first row of an axis with labels with the specified format.</summary>
      <param name="labelsStep">Determines how often custom labels will be drawn.</param>
      <param name="intervalType">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that determines the unit of measure for the <paramref name="labelsStep" /> parameter.</param>
      <param name="format">A value that determines the format of the custom label. For more information, see Date and Time Format Strings.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.CustomLabelsCollection.Add(System.Double,System.Web.UI.DataVisualization.Charting.DateTimeIntervalType,System.String,System.Int32,System.Web.UI.DataVisualization.Charting.LabelMarkStyle)">
      <summary>Adds multiple custom labels to the collection. The labels will be <see cref="T:System.DateTime" /> labels with the specified interval type, text format, row index and marking style.</summary>
      <param name="labelsStep">Determines how often custom labels will be drawn.</param>
      <param name="intervalType">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that determines the unit of measure for the <paramref name="labelsStep" /> parameter.</param>
      <param name="format">The label text format.</param>
      <param name="rowIndex">The label row index.</param>
      <param name="markStyle">A <see cref="T:System.Web.UI.DataVisualization.Charting.LabelMarkstyle" /> enumeration value.</param>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.CustomProperties"></member>
    <member name="T:System.Web.UI.DataVisualization.Charting.DataFormula">
      <summary>Provides properties and methods to prepare series data for technical analysis, apply formulas on the series data and prepare output data to be displayed as a chart. The actual calculations are performed in the <see cref="T:System.Web.UI.DataVisualization.Charting.StatisticFormula" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataFormula.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataFormula" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataFormula.CopySeriesValues(System.String,System.String)">
      <summary>Merges, splits or moves Y values in the series.</summary>
      <param name="inputSeries">A comma-separated list of input data series names and optional X and Y value names.</param>
      <param name="outputSeries">A comma-separated list of output data series names and optional X and Y value names.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.String)">
      <summary>Calls a method from a formula module with the specified formula name and input series name(s).</summary>
      <param name="formulaName">Formula name.</param>
      <param name="inputSeries">A comma-separated list of input series names and optional X and Y value names.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.String,System.String)">
      <summary>Calls a method from a formula module with the specified formula name, input series name(s) and output series name(s).</summary>
      <param name="formulaName">Formula name.</param>
      <param name="inputSeries">A comma-separated list of input series names and optional X and Y value names.</param>
      <param name="outputSeries">A comma-separated list of output series names and optional X and Y value names.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.String,System.String,System.String)">
      <summary>Calls a method from a formula module with the specified formula name, formula parameters, input series name(s) and output series name(s).</summary>
      <param name="formulaName">Formula name.</param>
      <param name="parameters">Formula parameters.</param>
      <param name="inputSeries">A comma-separated list of input series names and optional X and Y value names.</param>
      <param name="outputSeries">A comma-separated list of output series names and optional X and Y value names.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.String,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Calls a method from a formula module with the specified formula name, formula parameters, input series and output series.</summary>
      <param name="formulaName">Formula name.</param>
      <param name="parameters">Formula parameters.</param>
      <param name="inputSeries">The input series.</param>
      <param name="outputSeries">The output series.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Calls a method from a formula module with the specified formula name and input series.</summary>
      <param name="formulaName">Formula name.</param>
      <param name="inputSeries">Input series.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Calls a method from a formula module with the specified formula name, input series and output series.</summary>
      <param name="formulaName">Formula name.</param>
      <param name="inputSeries">The input series.</param>
      <param name="outputSeries">The output series.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored">
      <summary>Gets or sets a flag that indicates whether empty points are ignored while performing calculations.</summary>
      <returns>True if empty points are ignored, otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataFormula.IsStartFromFirst">
      <summary>Gets or sets a flag that indicates whether to start formulas such as a rolling average from zero.</summary>
      <returns>True if formulas such as "rolling average" start from zero; otherwise, False.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataFormula.Statistics">
      <summary>Returns a reference to the <see cref="T:System.Web.UI.DataVisualization.Charting.StatisticFormula" /> class.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.StatisticFormula" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.DataManipulator">
      <summary>Performs data manipulation operations at run time. This class is exposed by the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.DataManipulator" /> property of the root <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.ExportSeriesValues">
      <summary>Exports the data for every series stored in the <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesCollection" /> to the <see cref="T:System.Data.DataSet" /> object.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> object that contains series data.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.String)">
      <summary>Exports data from one or more series to the <see cref="T:System.Data.DataSet" /> object.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> object that contains series data.</returns>
      <param name="seriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be exported.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Exports data from the specified series to the <see cref="T:System.Data.DataSet" /> object.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> object that contains series data.</returns>
      <param name="series">The series to be exported.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.String)">
      <summary>Filters one or more series by applying a filtering rule to the first Y-value of the data points in the first series. The filtered <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> objects are used to store the modified data.</summary>
      <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule. Can be <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</param>
      <param name="compareValue">The value part of the filtering rule that is applied to the first Y-values of data points. For example, in the filtering rule "&lt;6", 6 is the value.</param>
      <param name="inputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be filtered.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String)">
      <summary>Filters one or more series by applying a filtering rule to the first Y-value of each of the data points in the first series.</summary>
      <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule. Can be <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</param>
      <param name="compareValue">The value part of the filtering rule that is applied to the first Y-values of data points. For example, in the filtering rule "&lt;6", 6 is the value.</param>
      <param name="inputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be filtered.</param>
      <param name="outputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that store the filtered data. The number of output series must match the number of input series, otherwise an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String,System.String)">
      <summary>Filters one or more series by applying a filtering rule to the specified data point values in the first series.</summary>
      <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule. Can be <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</param>
      <param name="compareValue">The value part of the filtering rule that is applied to the first Y-values of data points. For example, in the filtering rule "&lt;6", 6 is the value.</param>
      <param name="inputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be filtered.</param>
      <param name="outputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that store the filtered data. The number of output series must equal the number of input series, otherwise an exception will be thrown.</param>
      <param name="usingValue">The data point value that the filtering rule is applied to. Can be X, Y, Y2, Y3, and so forth.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Filters data points in a series by applying a filtering rule to the first Y-value of each data point. The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that is filtered also stores the modified data.</summary>
      <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule. Can be <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</param>
      <param name="compareValue">The value part of the filtering rule that is applied to the first Y-values of data points. For example, in the filtering rule "&lt;6", 6 is the value.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that is filtered.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Filters the data points in a series by applying a filtering rule to the first Y-value of each of the data points.</summary>
      <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule. Can be <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</param>
      <param name="compareValue">The value part of the filtering rule that is applied to the first Y-values of data points. For example, in the filtering rule "&lt;6", 6 is the value.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be filtered.</param>
      <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that stores the filtered data. If the series does not exist, an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series,System.String)">
      <summary>Filters the data points in a series by applying a filtering rule to the specified data point values for comparison.</summary>
      <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule. Can be <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</param>
      <param name="compareValue">The value part of the filtering rule that is applied to the first Y-values of data points. For example, in the filtering rule "&lt;6", 6 is the value.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be filtered.</param>
      <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that stores the filtered data. If the series does not exist, an exception will be thrown.</param>
      <param name="usingValue">The data point value that the filtering rule is applied to. Can be X, Y, Y2, Y3, and so forth.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.DateRangeType,System.String,System.String)">
      <summary>Filters the data points of one or more series, either by removing the specified points or by marking them as empty for the given date/time ranges. The filtered <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> objects are used to store the modified data.</summary>
      <param name="dateRange">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateRangeType" /> enumeration value that represents a date/time interval, such as days of the week, days of the month, and so forth. Determines the range over which the given elements will be filtered.</param>
      <param name="rangeElements">Specifies the elements within the date/time range designated by the <paramref name="dateRange" /> parameter that will be filtered. Can be a single value, for example, "7"; comma-separated values, for example, "5,6"; a range of values, such as "9-11"; or any variation thereof, such as "5,6,9-11".</param>
      <param name="inputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be filtered.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.DateRangeType,System.String,System.String,System.String)">
      <summary>Filters the data points for one or more series, by either removing the specified points or by marking them as empty for the given date/time ranges.</summary>
      <param name="dateRange">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateRangeType" /> enumeration value that represents a date/time interval, such as days of the week, days of the month, and so forth. Determines the range over which the given elements will be filtered.</param>
      <param name="rangeElements">Specifies the elements within the date/time range designated by the <paramref name="dateRange" /> parameter that will be filtered. Can be a single value, for example, "7"; comma-separated values, for example, "5,6"; a range of values, such as "9-11"; or any variation thereof, such as "5,6,9-11".</param>
      <param name="inputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be filtered.</param>
      <param name="outputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that store the filtered data. Make sure that the number of output series matches the number of input series, otherwise an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.DateRangeType,System.String,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Filters the data points in a series, either by removing the specified points or by marking them as empty for the specified date/time ranges. The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that is filtered is used to store the modified data.</summary>
      <param name="dateRange">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateRangeType" /> enumeration value that represents a date/time interval, such as days of the week, days of the month, and so forth. Determines the range over which the given elements will be filtered.</param>
      <param name="rangeElements">Specifies the elements within the date/time range designated by the <paramref name="dateRange" /> parameter that will be filtered. Can be a single value, for example, "7"; comma-separated values, for example, "5,6"; a range of values, such as "9-11"; or any variation thereof, such as "5,6,9-11".</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be filtered.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.DateRangeType,System.String,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Filters the data points in a series, either by removing the specified points or by marking them as empty for the given date/time ranges.</summary>
      <param name="dateRange">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateRangeType" /> enumeration value that represents a date/time interval, such as days of the week, days of the month, and so forth. Determines the range over which the given elements will be filtered.</param>
      <param name="rangeElements">Specifies the elements within the date/time range designated by the <paramref name="dateRange" /> parameter that will be filtered. Can be a single value, for example, "7"; comma-separated values, for example, "5,6"; a range of values, such as "9-11"; or any variation thereof, such as "5,6,9-11".</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be filtered.</param>
      <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that stores the filtered data. If the series does not exist, an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.IDataPointFilter,System.String)">
      <summary>Performs custom filtering on the data points in one or more <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />, based on the points in the first series. The filtered <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> objects also store the modified data.</summary>
      <param name="filterInterface">An object that implements the <see cref="T:System.Web.UI.DataVisualization.Charting.IDataPointFilter" /> interface.</param>
      <param name="inputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be filtered.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.IDataPointFilter,System.String,System.String)">
      <summary>Performs custom filtering on the data points in one or more series, based on the points of the first series.</summary>
      <param name="filterInterface">An object that implements the <see cref="T:System.Web.UI.DataVisualization.Charting.IDataPointFilter" /> interface.</param>
      <param name="inputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be filtered.</param>
      <param name="outputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that store the filtered data. Make sure that the number of output series matches the number of input series, otherwise an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.IDataPointFilter,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Performs custom filtering on the data points in a series. The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that is filtered also stores the modified data.</summary>
      <param name="filterInterface">An object that implements the <see cref="T:System.Web.UI.DataVisualization.Charting.IDataPointFilter" /> interface.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that is filtered.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.IDataPointFilter,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Performs custom filtering on the data points in a series.</summary>
      <param name="filterInterface">An object that implements the <see cref="T:System.Web.UI.DataVisualization.Charting.IDataPointFilter" /> interface.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be filtered.</param>
      <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that stores the filtered data. If the series does not exist, an exception will be thrown.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterMatchedPoints">
      <summary>Gets or sets a value that determines whether points are filtered if they match criteria specified in arguments in the Filter methods of this class. </summary>
      <returns>True if points that match specified criteria are filtered, false if points that do not match the criteria are filtered. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints">
      <summary>Gets or sets a flag that indicates whether points filtered by the Filter or FilterTopN methods will be removed or marked as empty. </summary>
      <returns>True if filtered points will be marked as empty, false if they will be removed. The default value is false.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String)">
      <summary>Filters all data points in one or more series except for a specified number of points. The points that are not filtered correspond to points in the first series that have the largest first Y-values. The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> objects that are filtered are used to store the modified data.</summary>
      <param name="pointCount">The number of data points that the filtering operation will not remove.</param>
      <param name="inputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be filtered.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String)">
      <summary>Filters out data points in one or more series except for a specified number of points. The points that aren't filtered correspond to points in the first series that have the largest first Y-values.</summary>
      <param name="pointCount">The number of data points that the filtering operation will not remove.</param>
      <param name="inputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be filtered.</param>
      <param name="outputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that store the filtered data. Make sure that the number of output series matches the number of input series, otherwise an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String)">
      <summary>Filters all data points in one or more series except for a specified number of data points. The points that are not filtered correspond to points in the first series that have the largest values.</summary>
      <param name="pointCount">The number of data points that the filtering operation will not remove.</param>
      <param name="inputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be filtered.</param>
      <param name="outputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that store the filtered data. Make sure that the number of output series matches the number of input series, otherwise an exception will be thrown.</param>
      <param name="usingValue">The data point value that the filtering rule is applied to. Can be X, Y, Y2, Y3, and so forth.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String,System.Boolean)">
      <summary>Filters all data points in one or more series except for a specified number of points. The points that are not filtered correspond to points in the first input series that have the largest or smallest values.</summary>
      <param name="pointCount">The number of data points that the filtering operation will not remove.</param>
      <param name="inputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be filtered.</param>
      <param name="outputSeriesNames">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that store the filtered data. Make sure that the number of output series matches the number of input series, otherwise an exception will be thrown.</param>
      <param name="usingValue">The data point value that the filtering rule is applied to. Can be X, Y, Y2, Y3, and so forth.</param>
      <param name="getTopValues">True if the largest values are kept, false if the smallest values are kept.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Filters out all data points in a series except for a specified number of points with the largest first Y-values. The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that is filtered is used to store the modified data.</summary>
      <param name="pointCount">The number of data points that the filtering operation will not remove.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be filtered.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Filters all data points in a series except for a specified number of points with the largest first Y-values. </summary>
      <param name="pointCount">The number of data points that the filtering operation will not remove.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be filtered.</param>
      <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that stores the filtered data. If the series does not exist, an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series,System.String)">
      <summary>Filters all data points in a series except for a specified number of data points with the largest values.</summary>
      <param name="pointCount">The number of data points that the filtering operation will not remove.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be filtered.</param>
      <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that stores the filtered data. If the series does not exist, an exception will be thrown.</param>
      <param name="usingValue">The data point value that the filtering rule is applied to. Can be X, Y, Y2, Y3, and so forth.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series,System.String,System.Boolean)">
      <summary>Filters all data points in a series except for a specified number of points with the smallest or largest values.</summary>
      <param name="pointCount">The number of data points that the filtering operation will not remove.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be filtered.</param>
      <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that stores the filtered data. If the series does not exist, an exception will be thrown.</param>
      <param name="usingValue">The data point value that the filtering rule is applied to. Can be X, Y, Y2, Y3, and so forth.</param>
      <param name="getTopValues">True if the largest values are kept, false if the smallest values are kept.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String)">
      <summary>Groups data for one or more series, using one or more formulas. Series are cleared of their original data and used to store the new data points.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="intervalOffset">The interval offset size.</param>
      <param name="intervalOffsetType">The unit of measurement for the interval offset.</param>
      <param name="inputSeriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be grouped.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String,System.String)">
      <summary>Groups one or more series, using one or more formulas. Output series are used to store the grouped data points, and an offset can be used for intervals.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="intervalOffset">The interval offset size.</param>
      <param name="intervalOffsetType">The unit of measurement for the interval offset.</param>
      <param name="inputSeriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be grouped.</param>
      <param name="outputSeriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that will store the grouped data points. If a series does not exist, it will be created; if it does exist, it will first be cleared of all data before storing grouped data points. The number of output series must equal the number of input series, or an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Groups data using one or more formulas. The series that is grouped is cleared of its original data, and used to store the new data points.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="intervalOffset">The interval offset size.</param>
      <param name="intervalOffsetType">The unit of measurement for the interval offset.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be grouped.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Groups a series using one or more formulas. An output series is used to store the grouped data points, and an offset can be used for intervals.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="intervalOffset">The interval offset size.</param>
      <param name="intervalOffsetType">The unit of measurement for the interval offset.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be grouped.</param>
      <param name="outputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that will store the new data points created by the grouping operation. If it does not exist, an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String)">
      <summary>Groups data using one or more formulas, for one or more series. Series are cleared of their original data and used to store the new data points.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="inputSeriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be grouped.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String,System.String)">
      <summary>Groups data for one or more series, using one or more formulas. Output series are used to store the grouped data points.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="inputSeriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be grouped.</param>
      <param name="outputSeriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that will store the grouped data points. If a series does not exist, it will be created; if it does exist, it will first be cleared of all data before storing grouped data points. The number of output series must equal the number of input series, or an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Groups data using one or more formulas. The series that is grouped is cleared of its original data, and used to store the new data points.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be grouped.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Groups a series' data using one or more formulas. An output series is used to store the grouped data points.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="inputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be grouped.</param>
      <param name="outputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that will store the new data points created by the grouping operation. If it does not exist, an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String)">
      <summary>Groups data points from one or more series by axis labels, using one or more formulas. Original data point values are cleared, and each of the series then stores its new grouped data points.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="inputSeriesName">A comma-separated list of names of the input <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String,System.String)">
      <summary>Groups the data points in one or more series by axis labels, using one or more formulas. Output series are used to store the grouped data points.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="inputSeriesName">A comma-separated list of names of the input <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />.</param>
      <param name="outputSeriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that will store the grouped data points. If a series does not exist, it will be created; if it does exist, it will first be cleared of all data before storing grouped data points. The number of output series must equal the number of input series, or an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Groups data points in a series by axis labels, using one or more formulas. Original data point values are cleared, and the series then stores the new grouped data points.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="inputSeries">The input <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Groups the data points in a series by axis labels, using one or more formulas. An output series is used to store the grouped data points.</summary>
      <param name="formula">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</param>
      <param name="inputSeries">The input <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be grouped.</param>
      <param name="outputSeries">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that will store the new data points created by the grouping operation. If it does not exist, an exception will be thrown.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.String)">
      <summary>Replaces the missing data points in one or more series with empty points. Each series is checked for a given interval that is determined by the <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> and <paramref name="intervalType" /> arguments. The series range that is checked is determined by the <paramref name="toXValue" /> and <paramref name="fromXValue" /> arguments.</summary>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="intervalOffset">The interval offset size.</param>
      <param name="intervalOffsetType">The unit of measurement for the interval offset.</param>
      <param name="fromXValue">The starting point for the series range to be checked. Uses the X-values of the data points.</param>
      <param name="toXValue">The end point for the series range to be checked. Uses the X-values of the data points.</param>
      <param name="seriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be checked.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Replaces the missing data points in a series with empty points. The series is checked for a given interval that is determined by the <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType " />and <paramref name="intervalType" /> arguments. The series range that is checked is determined by the <paramref name="toXValue" /> and <paramref name="fromXValue" /> arguments.</summary>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="intervalOffset">The interval offset size.</param>
      <param name="intervalOffsetType">The unit of measurement for the interval offset.</param>
      <param name="fromXValue">The starting point for the series range to be checked. Uses the X-values of the data points.</param>
      <param name="toXValue">The end point for the series range to be checked. Uses the X-values of the data points.</param>
      <param name="series">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> in which to insert the empty points.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String)">
      <summary>Replaces the missing data points in one or more series with empty points. Each series is checked for a given interval that is determined by the <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> and <paramref name="intervalType" /> arguments.</summary>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="intervalOffset">The interval offset size.</param>
      <param name="intervalOffsetType">The unit of measurement for the interval offset.</param>
      <param name="seriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be checked.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Replaces the missing data points in a series with empty points. The series is checked for a given interval that is determined by the <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> and <paramref name="intervalType" /> arguments.</summary>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="intervalOffset">The interval offset size.</param>
      <param name="intervalOffsetType">The unit of measurement for the interval offset.</param>
      <param name="series">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object in which to insert the empty points.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String)">
      <summary>Replaces the missing data points in one or more series with empty points. Each series is checked for a given interval that is determined by the <paramref name="interval" /> and <paramref name="intervalType" /> arguments.</summary>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="seriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be checked.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Replaces the missing data points in a series with empty points. The series is checked for a given interval that is determined by the <paramref name="interval" /> and <paramref name="intervalType" /> arguments. </summary>
      <param name="interval">The size of the interval checked for missing data points.</param>
      <param name="intervalType">The unit of measurement for the <paramref name="interval" /> parameter.</param>
      <param name="series">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that is checked.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Web.UI.DataVisualization.Charting.DataPoint},System.String)">
      <summary>Performs a custom sort on one or more series.</summary>
      <param name="comparer">An object that implements the <see cref="T:System.Collections.IComparer" /> interface and provides the custom sorting logic.</param>
      <param name="seriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be sorted.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Web.UI.DataVisualization.Charting.DataPoint},System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Performs a custom sort on the data points in a series.</summary>
      <param name="comparer">An object that implements the <see cref="T:System.Collections.IComparer" /> interface and provides the custom sorting logic.</param>
      <param name="series">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be sorted.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)">
      <summary>Performs a sort on the data points in one or more series, using the specified order. The sort is based on the first Y-value of each of the data points.</summary>
      <param name="pointSortOrder">A <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> enumeration value that determines if the sort is ascending or descending.</param>
      <param name="seriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be sorted.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String,System.String)">
      <summary>Sorts the data points of one or more series in the specified order. The sort can be based on any available data point value.</summary>
      <param name="pointSortOrder">A <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> enumeration value that determines if the sort is ascending or descending.</param>
      <param name="sortBy">A string value that represents the data point values to be sorted. Possible values are: "X", "Y", "Y2", "Y3", "AxisLabel", and so forth.</param>
      <param name="seriesName">A comma-separated list of names of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> to be sorted.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Performs a sort on the data points in a series using the specified order. The sort can be based on any available data point value.</summary>
      <param name="pointSortOrder">A <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> enumeration value that determines if the sort is ascending or descending</param>
      <param name="sortBy">A string value that represents the data point values to be sorted. Possible values are: "X", "Y", "Y2", "Y3", "AxisLabel", and so forth.</param>
      <param name="series">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be sorted.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Performs a sort on the data points in a series using the specified order. The sort is based on the first Y-value of each of the data points.</summary>
      <param name="pointSortOrder">A <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> enumeration value that determines if the sort is ascending or descending.</param>
      <param name="series">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object to be sorted.</param>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.DataPoint">
      <summary>Represents a data point that is stored in the <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> class with the specified X and Y-value.</summary>
      <param name="xValue">The X-value of the data point.</param>
      <param name="yValue">The Y-value of the data point.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> class with the specified X-value and an array of Y-values.</summary>
      <param name="xValue">The X-value.</param>
      <param name="yValues">An array of Y-values.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> class with the specified X-value and Y-values.</summary>
      <param name="xValue">The X-value of the data point.</param>
      <param name="yValues">A string of Y-values separated by commas.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Web.UI.DataVisualization.Charting.Series)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> class, and sets the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> that the data point belongs to.</summary>
      <param name="series">The <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> object that the data point belongs to.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPoint.Clone">
      <summary>Returns an exact copy of the data point.</summary>
      <returns>A cloned <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPoint.GetValueByName(System.String)">
      <summary>Returns a data point that is specified by its name. This is a helper function.</summary>
      <returns>A string value that represents a data point.</returns>
      <param name="valueName">Point value names. X, Y, Y2...</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty">
      <summary>Gets or sets a flag that indicates whether a data point is marked as empty.</summary>
      <returns>True if the point is marked as an empty point, otherwise false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPoint.Name">
      <summary>Gets or sets the name of the data point.</summary>
      <returns>A string value that represents the text name of the item.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY(System.Object,System.Object[])">
      <summary>Sets the X-value and one or more Y-values of the data point.</summary>
      <param name="xValue">The X-value of the data point.</param>
      <param name="yValue">A list of Y-values of the data point.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY(System.Object[])">
      <summary>Sets the Y-value(s) of a single data point.</summary>
      <param name="yValue">The Y-value(s) of a <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object in the collection. Formatted as one or more values separated by commas.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPoint.XValue">
      <summary>Gets or sets the X-value of a data point.</summary>
      <returns>A double that represents the X-value of a data point.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPoint.YValues">
      <summary>Gets or sets the Y-value(s) of a data point.</summary>
      <returns>An array of double values that represent the Y-value(s) of a data point.</returns>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.DataPointCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.Add(System.Double[])">
      <summary>Adds a new <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object to the collection and sets its Y value.</summary>
      <returns>The new <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object.</returns>
      <param name="y">The Y-value.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY(System.Double,System.Double)">
      <summary>Adds a <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object to the end of the collection, with the specified X-value and Y-value.</summary>
      <returns>An integer that represents the zero-based index where the item was inserted into the data point collection.</returns>
      <param name="xValue">X-value of the data point.</param>
      <param name="yValue">Y-value of the data point.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY(System.Object,System.Object[])">
      <summary>Adds a <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object to the end of the collection, with the specified X-value and Y-value(s).</summary>
      <returns>An integer value that represents the zero-based index where the item was inserted into the collection.</returns>
      <param name="xValue">The X value of the data point.</param>
      <param name="yValue">One or more comma-separated values that represent the Y-value(s) of the data point.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY(System.Double)">
      <summary>Adds a <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object to the end of the collection, with the specified Y-value.</summary>
      <returns>An integer that represents the zero-based index where the item was inserted into the data point collection.</returns>
      <param name="yValue">The Y-value of the data point.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY(System.Object[])">
      <summary>Adds a <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object to the end of the collection, with the specified Y-value(s).</summary>
      <returns>An integer that represents the location in zero-based index where the item was inserted into the collection.</returns>
      <param name="yValue">A comma-separated list of Y-value(s) of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object added to the collection.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBind(System.Collections.IEnumerable,System.String,System.String,System.String)">
      <summary>Data binds the X-value, Y-value(s) and property values of the data points, such as Tooltip or LabelStyle, to the data source. </summary>
      <param name="dataSource">The data source.</param>
      <param name="xField">The name of the field for X-values.</param>
      <param name="yFields">A comma separated names of the fields for Y-values.</param>
      <param name="otherFields">Other data point properties with binding rules, in the format: PointProperty=Field[{Format}] [,PointProperty=Field[{Format}]]. For example: "Tooltip=Price{C1},Url=WebSiteName".</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.Collections.IEnumerable[])">
      <summary>Data binds the X-value and Y-values of the collection's data points to the first columns of the specified data source.</summary>
      <param name="xValue">The data source that will supply the X-values for the data points.</param>
      <param name="yValues">A comma-separated list of the Y-value(s) of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object added to the collection.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.String,System.Collections.IEnumerable,System.String)">
      <summary>Data binds the X-value and Y-values of the data points in the collection to the specified columns of the specified data sources.</summary>
      <param name="xValue">The data source that will supply the X-values for the data points.</param>
      <param name="xField">The name of the column that will supply the X-values for the data points.</param>
      <param name="yValue">A comma-separated list of the Y-value(s) of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object added to the collection.</param>
      <param name="yFields">A comma-separated list of column name(s) that will supply the Y-values for the data points. Note that a comma can be embedded as part of a column name, by using a double comma.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable,System.String)">
      <summary>Data binds the Y-value(s) of the data points to the specified column(s) of the specified data source.</summary>
      <param name="yValue">An <see cref="T:System.Collections.Generic.IEnumerable`1" />data source object that provides the Y-value(s).</param>
      <param name="yFields">The data source field(s) to which to bind data point(s). Note that a comma can be embedded as part of a column name, by using a double comma.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable[])">
      <summary>Data binds the Y-value(s) of the collection's data points to the first column of the specified data source(s).</summary>
      <param name="yValue">One or more comma-separated <see cref="T:System.Collections.Generic.IEnumerable`1" /> data sources.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double)">
      <summary>Find all the data points that are equal to the specified value.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> interface that represents the enumerator of the matching data points.</returns>
      <param name="valueToFind">The data point value to find.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String)">
      <summary>Finds all the data points that are equal to the specified value.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> interface that represents the enumerator of the matching data points.</returns>
      <param name="valueToFind">The data point value to find.</param>
      <param name="useValue">The data point value to use (X, Y1, Y2...).</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String,System.Int32)">
      <summary>Finds all the data points that are equal to the specified value, starting from the specified index location.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> interface that represents the enumerator of the matching data points.</returns>
      <param name="valueToFind">The data point value to find.</param>
      <param name="useValue">The data point value to use (X, Y1, Y2...).</param>
      <param name="startIndex">The index location of the data point to start searching from.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double)">
      <summary>Finds the first data point that is equal to the specified value.</summary>
      <returns>The <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> that matches the specified value, or null if there is no match.</returns>
      <param name="valueToFind">The data point value to find.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String)">
      <summary>Finds the first data point that is equal to the specified value.</summary>
      <returns>The <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> that matches the specified value, or null if there is no match.</returns>
      <param name="valueToFind">The data point value to find.</param>
      <param name="useValue">The data point value to use (X, Y1, Y2...).</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String,System.Int32)">
      <summary>Finds the first data point that is equal to the specified value, starting from the specified index location.</summary>
      <returns>The <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> that matches the specified value, or null if there is no match.</returns>
      <param name="valueToFind">The data point value to find.</param>
      <param name="useValue">The data point value to use (X, Y1, Y2...).</param>
      <param name="startIndex">The index location of the data point to start searching from.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue">
      <summary>Finds  the data point with the maximum value.</summary>
      <returns>The <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object with the maximum value.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String)">
      <summary>Finds the data point value with the maximum value.</summary>
      <returns>The <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object with the maximum value.</returns>
      <param name="useValue">The data point value to use (X, Y1, Y2...).</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String,System.Int32)">
      <summary>Finds the data point with the maximum value, starting from the specified index location.</summary>
      <returns>The <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object with the maximum value.</returns>
      <param name="useValue">The data point value to use (X, Y1, Y2...).</param>
      <param name="startIndex">The index location of the data point to start searching from.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue">
      <summary>Finds the data point with the minimum value.</summary>
      <returns>The <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object with the minimum value.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String)">
      <summary>Finds the data point with the minimum value.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object with the minimum value.</returns>
      <param name="useValue">The data point value to use (X, Y1, Y2...).</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String,System.Int32)">
      <summary>Finds the data point with the minimum value, starting from the specified index location.</summary>
      <returns>The <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object with the minimum value.</returns>
      <param name="useValue">The data point value to use (X, Y1, Y2...).</param>
      <param name="startIndex">The index location of the data point to start searching from.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.InsertXY(System.Int32,System.Object,System.Object[])">
      <summary>Inserts a data point with the specified X value and one or more specified Y values.</summary>
      <param name="index">The index after which the data point will be inserted.</param>
      <param name="xValue">The X value of the data point.</param>
      <param name="yValue">A comma-separated list of Y values of the data point.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.InsertY(System.Int32,System.Object[])">
      <summary>Inserts a data point with one or more specified Y values.</summary>
      <param name="index">The index after which the data point will be inserted.</param>
      <param name="yValue">A comma-separated list of Y values of the data point.</param>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.DataPointComparer">
      <summary>Compares data points.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor(System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointComparer" /> class with the specified data series, sort order and sort value.</summary>
      <param name="series">Data series.</param>
      <param name="sortOrder">Sort order.</param>
      <param name="sortBy">Value used for the sort, for example, "X", "Y or Y1", "Y2", and so forth.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.DataPoint)">
      <summary>Compares two data points.</summary>
      <returns>An integer value. Returns zero (0) if the two values are equal. Returns a positive integer if the value of <paramref name="x" /> is greater than the value of <paramref name="y" />; otherwise, returns a negative integer.</returns>
      <param name="x">First data point.</param>
      <param name="y">Second data point.</param>
    </member>
    <member name="T:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties">
      <summary>Defines custom properties that are common to data points, series and empty points.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.#ctor(System.Web.UI.DataVisualization.Charting.Series,System.Boolean)">
      <param name="series">The series that the data point belongs to.</param>
      <param name="pointProperties">A flag that indicates whether this is a data point custom property.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.AxisLabel">
      <summary>Gets or sets the text of the X-axis label for the data point, series or an empty point. This property is only used if a custom label has not been specified for the relevant <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> object.</summary>
      <returns>A string value that represents the text of the X-axis label.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackGradientStyle">
      <summary>Gets or sets the background gradient style.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackHatchStyle">
      <summary>Gets or sets the background hatching style.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImage">
      <summary>Gets or sets the background image of the data point.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImageAlignment">
      <summary>Gets or sets the alignment of the background image, which is used with the <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> drawing mode.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImageTransparentColor">
      <summary>Gets or sets a color that will be replaced with a transparent color when the background image is drawn.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that will be replaced with a transparent color when the image is drawn.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImageWrapMode">
      <summary>Gets or sets the drawing mode of the background image.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" /> enumeration value that defines the drawing mode of the image.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackSecondaryColor">
      <summary>Gets or sets the secondary background color.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BorderColor">
      <summary>Gets or sets the border color of the data point.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BorderDashStyle">
      <summary>Gets or sets the border style of the data point.</summary>
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BorderWidth">
      <summary>Gets or sets the border width of the data point.</summary>
      <returns>An integer value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Color">
      <summary>Gets or sets the color of the data point.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.CustomProperties">
      <summary>Gets or sets the custom properties of the data point. Custom properties can be specified in the following format: AttrName1=Value1, AttrName2=Value2 …</summary>
      <returns>A string value.</returns>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.CustomPropertiesExtended">
      <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.CustomProperties" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.DeleteCustomProperty(System.String)">
      <summary>Deletes the data point custom property with the specified name.</summary>
      <param name="name">The name of the property to delete.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Font">
      <summary>Gets or sets the font of the data point.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> value.</returns>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.GetCustomProperty(System.String)">
      <summary>Returns the data point custom property with the specified name.</summary>
      <returns>A string value that represents the data point custom property with the specified name. If the requested property is not set, the default custom property of the data series will be returned.</returns>
      <param name="name">The name of the property to return.</param>
    </member>
    <member name="M:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsCustomPropertySet(System.String)">
      <summary>Determines whether a custom property with the specified name was set.</summary>
      <returns>True if the custom property was set, otherwise false.</returns>
      <param name="name">The name of the custom property to check.</param>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsValueShownAsLabel">
      <summary>Gets or sets a flag that indicates whether to show the value of the data point on the label.</summary>
    </member>
    <member name="P:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend">
      <summary>Gets or sets a flag that indicates whether the item is shown in the lege