:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
      <summary>Ends an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data and outputs the <see cref="T:System.Net.TransportContext" /> associated with the stream.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> to use to write request data.</returns>
      <param name="asyncResult">The pending request for a stream.</param>
      <param name="context">The <see cref="T:System.Net.TransportContext" /> for the <see cref="T:System.IO.Stream" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">This method was called previously using <paramref name="asyncResult" />. </exception>
      <exception cref="T:System.IO.IOException">The request did not complete, and no stream is available. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.-or- An error occurred while processing the request. </exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Ends an asynchronous request to an Internet resource.</summary>
      <returns>A <see cref="T:System.Net.WebResponse" /> that contains the response from the Internet resource.</returns>
      <param name="asyncResult">The pending request for a response. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">This method was called previously using <paramref name="asyncResult." />-or- The <see cref="P:System.Net.HttpWebRequest.ContentLength" /> property is greater than 0 but the data has not been written to the request stream. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.-or- An error occurred while processing the request. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebRequest.Expect">
      <summary>Gets or sets the value of the Expect HTTP header.</summary>
      <returns>The contents of the Expect HTTP header. The default value is null.NoteThe value for this property is stored in <see cref="T:System.Net.WebHeaderCollection" />. If WebHeaderCollection is set, the property value is lost.</returns>
      <exception cref="T:System.ArgumentException">Expect is set to a string that contains "100-continue" as a substring. </exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize the target object.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</param>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream">
      <summary>Gets a <see cref="T:System.IO.Stream" /> object to use to write request data.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> to use to write request data.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET or HEAD.-or- <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is true, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is false, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is false, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method is called more than once.-or- <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is false. </exception>
      <exception cref="T:System.NotSupportedException">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache. This exception can occur if you are using a custom cache validator that is incorrectly implemented. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.-or- The time-out period for the request expired.-or- An error occurred while processing the request. </exception>
      <exception cref="T:System.ObjectDisposedException">In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly. For more information about handling zero content length requests, see Network Programming in the .NET Compact Framework.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.DnsPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
      <summary>Gets a <see cref="T:System.IO.Stream" /> object to use to write request data and outputs the <see cref="T:System.Net.TransportContext" /> associated with the stream.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> to use to write request data.</returns>
      <param name="context">The <see cref="T:System.Net.TransportContext" /> for the <see cref="T:System.IO.Stream" />.</param>
      <exception cref="T:System.Exception">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method was unable to obtain the <see cref="T:System.IO.Stream" />.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method is called more than once.-or- <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is false. </exception>
      <exception cref="T:System.NotSupportedException">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache. This exception can occur if you are using a custom cache validator that is incorrectly implemented. </exception>
      <exception cref="T:System.Net.ProtocolViolationException">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET or HEAD.-or- <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is true, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is false, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is false, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.-or- The time-out period for the request expired.-or- An error occurred while processing the request. </exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetResponse">
      <summary>Returns a response from an Internet resource.</summary>
      <returns>A <see cref="T:System.Net.WebResponse" /> that contains the response from the Internet resource.</returns>
      <exception cref="T:System.InvalidOperationException">The stream is already in use by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.-or- <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is false. </exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> is GET or HEAD, and either <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater or equal to zero or <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is true.-or- <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is true, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is false, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is false, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT. </exception>
      <exception cref="T:System.NotSupportedException">The request cache validator indicated that the response for this request can be served from the cache; however, this request includes data to be sent to the server. Requests that send data must not use the cache. This exception can occur if you are using a custom cache validator that is incorrectly implemented. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.-or- The time-out period for the request expired.-or- An error occurred while processing the request. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.DnsPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebRequest.HaveResponse">
      <summary>Gets a value that indicates whether a response has been received from an Internet resource.</summary>
      <returns>true if a response has been received; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Headers">
      <summary>Specifies a collection of the name/value pairs that make up the HTTP headers.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> that contains the name/value pairs that make up the headers for the HTTP request.</returns>
      <exception cref="T:System.InvalidOperationException">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebRequest.Host">
      <summary>Get or set the Host header value to use in an HTTP request independent from the request URI.</summary>
      <returns>The Host header value in the HTTP request.</returns>
      <exception cref="T:System.ArgumentNullException">The Host header cannot be set to null. </exception>
      <exception cref="T:System.ArgumentException">The Host header cannot be set to an invalid value. </exception>
      <exception cref="T:System.InvalidOperationException">The Host header cannot be set after the <see cref="T:System.Net.HttpWebRequest" /> has already started to be sent. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.IfModifiedSince">
      <summary>Gets or sets the value of the If-Modified-Since HTTP header.</summary>
      <returns>A <see cref="T:System.DateTime" /> that contains the contents of the If-Modified-Since HTTP header. The default value is the current date and time.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebRequest.KeepAlive">
      <summary>Gets or sets a value that indicates whether to make a persistent connection to the Internet resource.</summary>
      <returns>true if the request to the Internet resource should contain a Connection HTTP header with the value Keep-alive; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
      <summary>Gets or sets the maximum number of redirects that the request follows.</summary>
      <returns>The maximum number of redirection responses that the request follows. The default value is 50.</returns>
      <exception cref="T:System.ArgumentException">The value is set to 0 or less. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
      <summary>Gets or sets the maximum allowed length of the response headers.</summary>
      <returns>The length, in kilobytes (1024 bytes), of the response headers.</returns>
      <exception cref="T:System.InvalidOperationException">The property is set after the request has already been submitted. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than 0 and is not equal to -1. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.MediaType">
      <summary>Gets or sets the media type of the request.</summary>
      <returns>The media type of the request. The default value is null.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Method">
      <summary>Gets or sets the method for the request.</summary>
      <returns>The request method to use to contact the Internet resource. The default value is GET.</returns>
      <exception cref="T:System.ArgumentException">No method is supplied.-or- The method string contains invalid characters. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Pipelined">
      <summary>Gets or sets a value that indicates whether to pipeline the request to the Internet resource.</summary>
      <returns>true if the request should be pipelined; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.PreAuthenticate">
      <summary>Gets or sets a value that indicates whether to send an authenticate header with the request.</summary>
      <returns>true to send a WWW-authenticate HTTP header with requests after authentication has taken place; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ProtocolVersion">
      <summary>Gets or sets the version of HTTP to use for the request.</summary>
      <returns>The HTTP version to use for the request. The default is <see cref="F:System.Net.HttpVersion.Version11" />.</returns>
      <exception cref="T:System.ArgumentException">The HTTP version is set to a value other than 1.0 or 1.1. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Proxy">
      <summary>Gets or sets proxy information for the request.</summary>
      <returns>The <see cref="T:System.Net.IWebProxy" /> object to use to proxy the request. The default value is set by calling the <see cref="P:System.Net.GlobalProxySelection.Select" /> property.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.HttpWebRequest.Proxy" /> is set to null. </exception>
      <exception cref="T:System.InvalidOperationException">The request has been started by calling <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have permission for the requested operation. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebRequest.ReadWriteTimeout">
      <summary>Gets or sets a time-out in milliseconds when writing to or reading from a stream.</summary>
      <returns>The number of milliseconds before the writing or reading times out. The default value is 300,000 milliseconds (5 minutes).</returns>
      <exception cref="T:System.InvalidOperationException">The request has already been sent. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than or equal to zero and is not equal to <see cref="F:System.Threading.Timeout.Infinite" /></exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Referer">
      <summary>Gets or sets the value of the Referer HTTP header.</summary>
      <returns>The value of the Referer HTTP header. The default value is null.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.RequestUri">
      <summary>Gets the original Uniform Resource Identifier (URI) of the request.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the URI of the Internet resource passed to the <see cref="M:System.Net.WebRequest.Create(System.String)" /> method.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SendChunked">
      <summary>Gets or sets a value that indicates whether to send data in segments to the Internet resource.</summary>
      <returns>true to send data to the Internet resource in segments; otherwise, false. The default value is false.</returns>
      <exception cref="T:System.InvalidOperationException">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ServicePoint">
      <summary>Gets the service point to use for the request.</summary>
      <returns>A <see cref="T:System.Net.ServicePoint" /> that represents the network connection to the Internet resource.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</param>
    </member>
    <member name="P:System.Net.HttpWebRequest.Timeout">
      <summary>Gets or sets the time-out value in milliseconds for the <see cref="M:System.Net.HttpWebRequest.GetResponse" /> and <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> methods.</summary>
      <returns>The number of milliseconds to wait before the request times out. The default value is 100,000 milliseconds (100 seconds).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified is less than zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.TransferEncoding">
      <summary>Gets or sets the value of the Transfer-encoding HTTP header.</summary>
      <returns>The value of the Transfer-encoding HTTP header. The default value is null.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set when <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is false. </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to the value "Chunked". </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
      <summary>Gets or sets a value that indicates whether to allow high-speed NTLM-authenticated connection sharing.</summary>
      <returns>true to keep the authenticated connection open; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebRequest.UseDefaultCredentials">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that controls whether default credentials are sent with requests.</summary>
      <returns>true if the default credentials are used; otherwise false. The default value is false.</returns>
      <exception cref="T:System.InvalidOperationException">You attempted to set this property after the request was sent.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="USERNAME" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebRequest.UserAgent">
      <summary>Gets or sets the value of the User-agent HTTP header.</summary>
      <returns>The value of the User-agent HTTP header. The default value is null.NoteThe value for this property is stored in <see cref="T:System.Net.WebHeaderCollection" />. If WebHeaderCollection is set, the property value is lost.</returns>
    </member>
    <member name="T:System.Net.HttpWebResponse">
      <summary>Provides an HTTP-specific implementation of the <see cref="T:System.Net.WebResponse" /> class.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.HttpWebResponse" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.HttpWebRequest" />. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.Net.HttpWebRequest" />. </param>
    </member>
    <member name="P:System.Net.HttpWebResponse.CharacterSet">
      <summary>Gets the character set of the response.</summary>
      <returns>A string that contains the character set of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.HttpWebResponse.Close">
      <summary>Closes the response stream.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentEncoding">
      <summary>Gets the method that is used to encode the body of the response.</summary>
      <returns>A string that describes the method that is used to encode the body of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentLength">
      <summary>Gets the length of the content returned by the request.</summary>
      <returns>The number of bytes returned by the request. Content length does not include header information.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentType">
      <summary>Gets the content type of the response.</summary>
      <returns>A string that contains the content type of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Cookies">
      <summary>Gets or sets the cookies that are associated with this response.</summary>
      <returns>A <see cref="T:System.Net.CookieCollection" /> that contains the cookies that are associated with this response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseHeader(System.String)">
      <summary>Gets the contents of a header that was returned with the response.</summary>
      <returns>The contents of the specified header.</returns>
      <param name="headerName">The header value to return. </param>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseStream">
      <summary>Gets the stream that is used to read the body of the response from the server.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> containing the body of the response.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">There is no response stream. </exception>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebResponse.Headers">
      <summary>Gets the headers that are associated with this response from the server.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> that contains the header information returned with the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.IsMutuallyAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether both client and server were authenticated.</summary>
      <returns>true if mutual authentication occurred; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.LastModified">
      <summary>Gets the last date and time that the contents of the response were modified.</summary>
      <returns>A <see cref="T:System.DateTime" /> that contains the date and time that the contents of the response were modified.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebResponse.Method">
      <summary>Gets the method that is used to return the response.</summary>
      <returns>A string that contains the HTTP method that is used to return the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ProtocolVersion">
      <summary>Gets the version of the HTTP protocol that is used in the response.</summary>
      <returns>A <see cref="T:System.Version" /> that contains the HTTP protocol version of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ResponseUri">
      <summary>Gets the URI of the Internet resource that responded to the request.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the URI of the Internet resource that responded to the request.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Server">
      <summary>Gets the name of the server that sent the response.</summary>
      <returns>A string that contains the name of the server that sent the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusCode">
      <summary>Gets the status of the response.</summary>
      <returns>One of the <see cref="T:System.Net.HttpStatusCode" /> values.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusDescription">
      <summary>Gets the status description returned with the response.</summary>
      <returns>A string that describes the status of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes this instance into the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
      <param name="serializationInfo">The object into which this <see cref="T:System.Net.HttpWebResponse" /> will be serialized. </param>
      <param name="streamingContext">The destination of the serialization. </param>
    </member>
    <member name="T:System.Net.IAuthenticationModule">
      <summary>Provides the base authentication interface for Web client authentication modules.</summary>
    </member>
    <member name="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Returns an instance of the <see cref="T:System.Net.Authorization" /> class in respose to an authentication challenge from a server.</summary>
      <returns>An <see cref="T:System.Net.Authorization" /> instance containing the authorization message for the request, or null if the challenge cannot be handled.</returns>
      <param name="challenge">The authentication challenge sent by the server. </param>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> instance associated with the challenge. </param>
      <param name="credentials">The credentials associated with the challenge. </param>
    </member>
    <member name="P:System.Net.IAuthenticationModule.AuthenticationType">
      <summary>Gets the authentication type provided by this authentication module.</summary>
      <returns>A string indicating the authentication type provided by this authentication module.</returns>
    </member>
    <member name="P:System.Net.IAuthenticationModule.CanPreAuthenticate">
      <summary>Gets a value indicating whether the authentication module supports preauthentication.</summary>
      <returns>true if the authorization module supports preauthentication; otherwise false.</returns>
    </member>
    <member name="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Returns an instance of the <see cref="T:System.Net.Authorization" /> class for an authentication request to a server.</summary>
      <returns>An <see cref="T:System.Net.Authorization" /> instance containing the authorization message for the request.</returns>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> instance associated with the authentication request. </param>
      <param name="credentials">The credentials associated with the authentication request. </param>
    </member>
    <member name="T:System.Net.ICertificatePolicy">
      <summary>Validates a server certificate.</summary>
    </member>
    <member name="M:System.Net.ICertificatePolicy.CheckValidationResult(System.Net.ServicePoint,System.Security.Cryptography.X509Certificates.X509Certificate,System.Net.WebRequest,System.Int32)">
      <summary>Validates a server certificate.</summary>
      <returns>true if the certificate should be honored; otherwise, false.</returns>
      <param name="srvPoint">The <see cref="T:System.Net.ServicePoint" /> that will use the certificate. </param>
      <param name="certificate">The certificate to validate. </param>
      <param name="request">The request that received the certificate. </param>
      <param name="certificateProblem">The problem that was encountered when using the certificate. </param>
    </member>
    <member name="T:System.Net.ICredentialPolicy">
      <summary>Defines the credential policy to be used for resource requests that are made using <see cref="T:System.Net.WebRequest" /> and its derived classes.</summary>
    </member>
    <member name="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
      <summary>Returns a <see cref="T:System.Boolean" /> that indicates whether the client's credentials are sent with a resource request made using an instance of the <see cref="T:System.Net.WebRequest" /> class.</summary>
      <returns>true if the credentials are sent with the request; otherwise, false.</returns>
      <param name="challengeUri">The <see cref="T:System.Uri" /> that will receive the request. For more information, see the Remarks section.</param>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> that represents the resource being requested.</param>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that will be sent with the request if this method returns true. </param>
      <param name="authenticationModule">The <see cref="T:System.Net.IAuthenticationModule" /> that will conduct the authentication, if authentication is required.</param>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary>Provides the base authentication interface for retrieving credentials for Web client authentication.</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary>Returns a <see cref="T:System.Net.NetworkCredential" /> object that is associated with the specified URI, and authentication type.</summary>
      <returns>The <see cref="T:System.Net.NetworkCredential" /> that is associated with the specified URI and authentication type, or, if no credentials are available, null.</returns>
      <param name="uri">The <see cref="T:System.Uri" /> that the client is providing authentication for. </param>
      <param name="authType">The type of authentication, as defined in the <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> property. </param>
    </member>
    <member name="T:System.Net.ICredentialsByHost">
      <summary>Provides the interface for retrieving credentials for a host, port, and authentication type.</summary>
    </member>
    <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <summary>Returns the credential for the specified host, port, and authentication protocol.</summary>
      <returns>A <see cref="T:System.Net.NetworkCredential" /> for the specified host, port, and authentication protocol, or null if there are no credentials available for the specified host, port, and authentication protocol.</returns>
      <param name="host">The host computer that is authenticating the client.</param>
      <param name="port">The port on <paramref name="host " />that the client will communicate with.</param>
      <param name="authenticationType">The authentication protocol.</param>
    </member>
    <member name="T:System.Net.IPAddress">
      <summary>Provides an Internet Protocol (IP) address.</summary>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPAddress" /> class with the address specified as a <see cref="T:System.Byte" /> array.</summary>
      <param name="address">The byte array value of the IP address. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null. </exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPAddress" /> class with the address specified as a <see cref="T:System.Byte" /> array and the specified scope identifier.</summary>
      <param name="address">The byte array value of the IP address. </param>
      <param name="scopeid">The long value of the scope identifier. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scopeid" /> &lt; 0 or <paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF </exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPAddress" /> class with the address specified as an <see cref="T:System.Int64" />.</summary>
      <param name="newAddress">The long value of the IP address. For example, the value 0x2414188f in big-endian format would be the IP address "143.24.20.36". </param>
    </member>
    <member name="P:System.Net.IPAddress.Address">
      <summary>An Internet Protocol (IP) address.</summary>
      <returns>The long value of the IP address.</returns>
    </member>
    <member name="P:System.Net.IPAddress.AddressFamily">
      <summary>Gets the address family of the IP address.</summary>
      <returns>Returns <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> for IPv4 or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> for IPv6.</returns>
    </member>
    <member name="F:System.Net.IPAddress.Any">
      <summary>Provides an IP address that indicates that the server must listen for client activity on all network interfaces. This field is read-only.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Broadcast">
      <summary>Provides the IP broadcast address. This field is read-only.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Equals(System.Object)">
      <summary>Compares two IP addresses.</summary>
      <returns>true if the two addresses are equal; otherwise, false.</returns>
      <param name="comparand">An <see cref="T:System.Net.IPAddress" /> instance to compare to the current instance. </param>
    </member>
    <member name="M:System.Net.IPAddress.GetAddressBytes">
      <summary>Provides a copy of the <see cref="T:System.Net.IPAddress" /> as an array of bytes.</summary>
      <returns>A <see cref="T:System.Byte" /> array.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetHashCode">
      <summary>Returns a hash value for an IP address.</summary>
      <returns>An integer hash value.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <summary>Converts a short value from host byte order to network byte order.</summary>
      <returns>A short value, expressed in network byte order.</returns>
      <param name="host">The number to convert, expressed in host byte order. </param>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <summary>Converts an integer value from host byte order to network byte order.</summary>
      <returns>An integer value, expressed in network byte order.</returns>
      <param name="host">The number to convert, expressed in host byte order. </param>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <summary>Converts a long value from host byte order to network byte order.</summary>
      <returns>A long value, expressed in network byte order.</returns>
      <param name="host">The number to convert, expressed in host byte order. </param>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Any">
      <summary>The <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> method uses the <see cref="F:System.Net.IPAddress.IPv6Any" /> field to indicate that a <see cref="T:System.Net.Sockets.Socket" /> must listen for client activity on all network interfaces.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Loopback">
      <summary>Provides the IP loopback address. This property is read-only.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6None">
      <summary>Provides an IP address that indicates that no network interface should be used. This property is read-only.</summary>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <summary>Gets whether the address is an IPv6 link local address.</summary>
      <returns>true if the IP address is an IPv6 link local address; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Multicast">
      <summary>Gets whether the address is an IPv6 multicast global address.</summary>
      <returns>true if the IP address is an IPv6 multicast global address; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <summary>Gets whether the address is an IPv6 site local address.</summary>
      <returns>true if the IP address is an IPv6 site local address; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Teredo">
      <summary>Gets whether the address is an IPv6 Teredo address.</summary>
      <returns>true if the IP address is an IPv6 Teredo address; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <summary>Indicates whether the specified IP address is the loopback address.</summary>
      <returns>true if <paramref name="address" /> is the loopback address; otherwise, false.</returns>
      <param name="address">An IP address. </param>
    </member>
    <member name="F:System.Net.IPAddress.Loopback">
      <summary>Provides the IP loopback address. This field is read-only.</summary>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <summary>Converts a short value from network byte order to host byte order.</summary>
      <returns>A short value, expressed in host byte order.</returns>
      <param name="network">The number to convert, expressed in network byte order. </param>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <summary>Converts an integer value from network byte order to host byte order.</summary>
      <returns>An integer value, expressed in host byte order.</returns>
      <param name="network">The number to convert, expressed in network byte order. </param>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <summary>Converts a long value from network byte order to host byte order.</summary>
      <returns>A long value, expressed in host byte order.</returns>
      <param name="network">The number to convert, expressed in network byte order. </param>
    </member>
    <member name="F:System.Net.IPAddress.None">
      <summary>Provides an IP address that indicates that no network interface should be used. This field is read-only.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.String)">
      <summary>Converts an IP address string to an <see cref="T:System.Net.IPAddress" /> instance.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> instance.</returns>
      <param name="ipString">A string that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipString" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="ipString" /> is not a valid IP address. </exception>
    </member>
    <member name="P:System.Net.IPAddress.ScopeId">
      <summary>Gets or sets the IPv6 address scope identifier.</summary>
      <returns>A long integer that specifies the scope of the address.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">AddressFamily = InterNetwork. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scopeId" /> &lt; 0- or -<paramref name="scopeId" /> &gt; 0x00000000FFFFFFFF  </exception>
    </member>
    <member name="M:System.Net.IPAddress.ToString">
      <summary>Converts an Internet address to its standard notation.</summary>
      <returns>A string that contains the IP address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <summary>Determines whether a string is a valid IP address.</summary>
      <returns>true if <paramref name="ipString" /> is a valid IP address; otherwise, false.</returns>
      <param name="ipString">The string to validate.</param>
      <param name="address">The <see cref="T:System.Net.IPAddress" /> version of the string.</param>
    </member>
    <member name="T:System.Net.IPEndPoint">
      <summary>Represents a network endpoint as an IP address and a port number.</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified address and port number.</summary>
      <param name="address">The IP address of the Internet host. </param>
      <param name="port">The port number associated with the <paramref name="address" />, or 0 to specify any available port. <paramref name="port" /> is in host order.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.-or- <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.-or- <paramref name="address" /> is less than 0 or greater than 0x00000000FFFFFFFF. </exception>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified address and port number.</summary>
      <param name="address">An <see cref="T:System.Net.IPAddress" />. </param>
      <param name="port">The port number associated with the <paramref name="address" />, or 0 to specify any available port. <paramref name="port" /> is in host order.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.-or- <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.-or- <paramref name="address" /> is less than 0 or greater than 0x00000000FFFFFFFF. </exception>
    </member>
    <member name="P:System.Net.IPEndPoint.Address">
      <summary>Gets or sets the IP address of the endpoint.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> instance containing the IP address of the endpoint.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.AddressFamily">
      <summary>Gets the Internet Protocol (IP) address family.</summary>
      <returns>Returns <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <summary>Creates an endpoint from a socket address.</summary>
      <returns>An <see cref="T:System.Net.EndPoint" /> instance using the specified socket address.</returns>
      <param name="socketAddress">The <see cref="T:System.Net.SocketAddress" /> to use for the endpoint. </param>
      <exception cref="T:System.ArgumentException">The AddressFamily of <paramref name="socketAddress" /> is not equal to the AddressFamily of the current instance.-or- <paramref name="socketAddress" />.Size &lt; 8. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Net.IPEndPoint" /> instance.</summary>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
      <param name="comparand">The specified <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Net.IPEndPoint" /> instance.</param>
    </member>
    <member name="M:System.Net.IPEndPoint.GetHashCode">
      <summary>Returns a hash value for a <see cref="T:System.Net.IPEndPoint" /> instance.</summary>
      <returns>An integer hash value.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="F:System.Net.IPEndPoint.MaxPort">
      <summary>Specifies the maximum value that can be assigned to the <see cref="P:System.Net.IPEndPoint.Port" /> property. The MaxPort value is set to 0x0000FFFF. This field is read-only.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MinPort">
      <summary>Specifies the minimum value that can be assigned to the <see cref="P:System.Net.IPEndPoint.Port" /> property. This field is read-only.</summary>
    </member>
    <member name="P:System.Net.IPEndPoint.Port">
      <summary>Gets or sets the port number of the endpoint.</summary>
      <returns>An integer value in the range <see cref="F:System.Net.IPEndPoint.MinPort" /> to <see cref="F:System.Net.IPEndPoint.MaxPort" /> indicating the port number of the endpoint.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value that was specified for a set operation is less than <see cref="F:System.Net.IPEndPoint.MinPort" /> or greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Serialize">
      <summary>Serializes endpoint information into a <see cref="T:System.Net.SocketAddress" /> instance.</summary>
      <returns>A <see cref="T:System.Net.SocketAddress" /> instance containing the socket address for the endpoint.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.ToString">
      <summary>Returns the IP address and port number of the specified endpoint.</summary>
      <returns>A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.IPHostEntry">
      <summary>Provides a container class for Internet host address information.</summary>
    </member>
    <member name="M:System.Net.IPHostEntry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPHostEntry" /> class.</summary>
    </member>
    <member name="P:System.Net.IPHostEntry.AddressList">
      <summary>Gets or sets a list of IP addresses that are associated with a host.</summary>
      <returns>An array of type <see cref="T:System.Net.IPAddress" /> that contains IP addresses that resolve to the host names that are contained in the <see cref="P:System.Net.IPHostEntry.Aliases" /> property.</returns>
    </member>
    <member name="P:System.Net.IPHostEntry.Aliases">
      <summary>Gets or sets a list of aliases that are associated with a host.</summary>
      <returns>An array of strings that contain DNS names that resolve to the IP addresses in the <see cref="P:System.Net.IPHostEntry.AddressList" /> property.</returns>
    </member>
    <member name="P:System.Net.IPHostEntry.HostName">
      <summary>Gets or sets the DNS name of the host.</summary>
      <returns>A string that contains the primary host name for the server.</returns>
    </member>
    <member name="T:System.Net.IWebProxy">
      <summary>Provides the base interface for implementation of proxy access for the <see cref="T:System.Net.WebRequest" /> class.</summary>
    </member>
    <member name="P:System.Net.IWebProxy.Credentials">
      <summary>The credentials to submit to the proxy server for authentication.</summary>
      <returns>An <see cref="T:System.Net.ICredentials" /> instance that contains the credentials that are needed to authenticate a request to the proxy server.</returns>
    </member>
    <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <summary>Returns the URI of a proxy.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the URI of the proxy used to contact <paramref name="destination" />.</returns>
      <param name="destination">A <see cref="T:System.Uri" /> that specifies the requested Internet resource. </param>
    </member>
    <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <summary>Indicates that the proxy should not be used for the specified host.</summary>
      <returns>true if the proxy server should not be used for <paramref name="host" />; otherwise, false.</returns>
      <param name="host">The <see cref="T:System.Uri" /> of the host to check for proxy use. </param>
    </member>
    <member name="T:System.Net.IWebProxyScript">
      <summary>Provides the base interface to load and execute scripts for automatic proxy detection.</summary>
    </member>
    <member name="M:System.Net.IWebProxyScript.Close">
      <summary>Closes a script.</summary>
    </member>
    <member name="M:System.Net.IWebProxyScript.Load(System.Uri,System.String,System.Type)">
      <summary>Loads a script.</summary>
      <returns>A <see cref="T:System.Boolean" /> indicating whether the script was successfully loaded.</returns>
      <param name="scriptLocation">Internal only.</param>
      <param name="script">Internal only.</param>
      <param name="helperType">Internal only.</param>
    </member>
    <member name="M:System.Net.IWebProxyScript.Run(System.String,System.String)">
      <summary>Runs a script.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
      <param name="url">Internal only.</param>
      <param name="host">Internal only.</param>
    </member>
    <member name="T:System.Net.IWebRequestCreate">
      <summary>Provides the base interface for creating <see cref="T:System.Net.WebRequest" /> instances.</summary>
    </member>
    <member name="M:System.Net.IWebRequestCreate.Create(System.Uri)">
      <summary>Creates a <see cref="T:System.Net.WebRequest" /> instance.</summary>
      <returns>A <see cref="T:System.Net.WebRequest" /> instance.</returns>
      <param name="uri">The uniform resource identifier (URI) of the Web resource. </param>
      <exception cref="T:System.NotSupportedException">The request scheme specified in <paramref name="uri" /> is not supported by this <see cref="T:System.Net.IWebRequestCreate" /> instance. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null. </exception>
      <exception cref="T:System.UriFormatException">The URI specified in <paramref name="uri" /> is not a valid URI. </exception>
    </member>
    <member name="T:System.Net.NetworkAccess">
      <summary>Specifies network access permissions.</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Accept">
      <summary>Indicates that the application is allowed to accept connections from the Internet on a local resource. Notice that this is a protection for the local host that uses Accept to grant access to a local resource (address/port). At the time a socket tries to bind to this local resource a permission check is performed to see if an Accept exists on that resource.</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Connect">
      <summary>Indicates that the application is allowed to connect to specific Internet resources. Notice that, in the case of remote host resource, no check is performed to see that Connect permissions exist. This is because the port of a connecting remote host is unknown and not suitable permissions can be built in advance. It is the application responsibility to check the permissions of the remote host trying to connect to a listening socket.</summary>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary>Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class with the specified user name and password.</summary>
      <param name="userName">The user name associated with the credentials.</param>
      <param name="password">The password for the user name associated with the credentials.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Security.SecureString" /> class is not supported on this platform.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class with the specified user name, password, and domain.</summary>
      <param name="userName">The user name associated with the credentials.</param>
      <param name="password">The password for the user name associated with the credentials.</param>
      <param name="domain">The domain associated with these credentials.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Security.SecureString" /> class is not supported on this platform.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class with the specified user name and password.</summary>
      <param name="userName">The user name associated with the credentials. </param>
      <param name="password">The password for the user name associated with the credentials. </param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class with the specified user name, password, and domain.</summary>
      <param name="userName">The user name associated with the credentials. </param>
      <param name="password">The password for the user name associated with the credentials. </param>
      <param name="domain">The domain associated with these credentials. </param>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary>Gets or sets the domain or computer name that verifies the credentials.</summary>
      <returns>The name of the domain associated with the credentials.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <summary>Returns an instance of the <see cref="T:System.Net.NetworkCredential" /> class for the specified host, port, and authentication type.</summary>
      <returns>A <see cref="T:System.Net.NetworkCredential" /> for the specified host, port, and authentication protocol, or null if there are no credentials available for the specified host, port, and authentication protocol.</returns>
      <param name="host">The host computer that authenticates the client.</param>
      <param name="port">The port on the <paramref name="host" /> that the client communicates with.</param>
      <param name="authenticationType">The type of authentication requested, as defined in the <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> property. </param>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary>Returns an instance of the <see cref="T:System.Net.NetworkCredential" /> class for the specified Uniform Resource Identifier (URI) and authentication type.</summary>
      <returns>A <see cref="T:System.Net.NetworkCredential" /> object.</returns>
      <param name="uri">The URI that the client provides authentication for. </param>
      <param name="authType">The type of authentication requested, as defined in the <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> property. </param>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary>Gets or sets the password for the user name associated with the credentials.</summary>
      <returns>The password associated with the credentials. If this <see cref="T:System.Net.NetworkCredential" /> instance was initialized with the <paramref name="password" /> parameter set to null, then the <see cref="P:System.Net.NetworkCredential.Password" /> property will return an empty string.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.NetworkCredential.SecurePassword">
      <summary>Gets or sets the password as a <see cref="T:System.Security.SecureString" /> instance.</summary>
      <returns>The password for the user name associated with the credentials.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Security.SecureString" /> class is not supported on this platform.</exception>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary>Gets or sets the user name associated with the credentials.</summary>
      <returns>The user name associated with the credentials.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.OpenReadCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.OpenReadCompleted" /> event.</summary>
    </member>
    <member name="P:System.Net.OpenReadCompletedEventArgs.Result">
      <summary>Gets a readable stream that contains data downloaded by a <see cref="Overload:System.Net.WebClient.DownloadDataAsync" /> method.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> that contains the downloaded data.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.OpenReadCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.OpenReadCompleted" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.OpenReadCompletedEventArgs" /> containing event data.</param>
    </member>
    <member name="T:System.Net.OpenWriteCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.OpenWriteCompleted" /> event.</summary>
    </member>
    <member name="P:System.Net.OpenWriteCompletedEventArgs.Result">
      <summary>Gets a writable stream that is used to send data to a server.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> where you can write data to be uploaded.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.OpenWriteCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.OpenWriteCompleted" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.OpenWriteCompletedEventArgs" /> containing event data.</param>
    </member>
    <member name="T:System.Net.ProtocolViolationException">
      <summary>The exception that is thrown when an error is made while using a network protocol.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.ProtocolViolationException" /> class.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.ProtocolViolationException" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information that is required to deserialize the <see cref="T:System.Net.ProtocolViolationException" />. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.Net.ProtocolViolationException" />. </param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.ProtocolViolationException" /> class with the specified message.</summary>
      <param name="message">The error message string. </param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize the target object.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes this instance into the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
      <param name="serializationInfo">The object into which this <see cref="T:System.Net.ProtocolViolationException" /> will be serialized. </param>
      <param name="streamingContext">The destination of the serialization. </param>
    </member>
    <member name="T:System.Net.SecurityProtocolType">
      <summary>Specifies the security protocols that are supported by the Schannel security package.</summary>
    </member>
    <member name="F:System.Net.SecurityProtocolType.Ssl3">
      <summary>Specifies the Secure Socket Layer (SSL) 3.0 security protocol.</summary>
    </member>
    <member name="F:System.Net.SecurityProtocolType.Tls">
      <summary>Specifies the Transport Layer Security (TLS) 1.0 security protocol.</summary>
    </member>
    <member name="T:System.Net.ServicePoint">
      <summary>Provides connection management for HTTP connections.</summary>
    </member>
    <member name="P:System.Net.ServicePoint.Address">
      <summary>Gets the Uniform Resource Identifier (URI) of the server that this <see cref="T:System.Net.ServicePoint" /> object connects to.</summary>
      <returns>An instance of the <see cref="T:System.Uri" /> class that contains the URI of the Internet server that this <see cref="T:System.Net.ServicePoint" /> object connects to.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Net.ServicePoint" /> is in host mode.</exception>
    </member>
    <member name="P:System.Net.ServicePoint.BindIPEndPointDelegate">
      <summary>Specifies the delegate to associate a local <see cref="T:System.Net.IPEndPoint" /> with a <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>A delegate that forces a <see cref="T:System.Net.ServicePoint" /> to use a particular local Internet Protocol (IP) address and port number. The default value is null.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.Certificate">
      <summary>Gets the certificate received for this <see cref="T:System.Net.ServicePoint" /> object.</summary>
      <returns>An instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> class that contains the security certificate received for this <see cref="T:System.Net.ServicePoint" /> object.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.ClientCertificate">
      <summary>Gets the last client certificate sent to the server.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object that contains the public values of the last client certificate sent to the server.</returns>
    </member>
    <member name="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)">
      <summary>Removes the specified connection group from this <see cref="T:System.Net.ServicePoint" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether the connection group was closed.</returns>
      <param name="connectionGroupName">The name of the connection group that contains the connections to close and remove from this service point. </param>
    </member>
    <member name="P:System.Net.ServicePoint.ConnectionLeaseTimeout">
      <summary>Gets or sets the number of milliseconds after which an active <see cref="T:System.Net.ServicePoint" /> connection is closed.</summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the number of milliseconds that an active <see cref="T:System.Net.ServicePoint" /> connection remains open. The default is -1, which allows an active <see cref="T:System.Net.ServicePoint" /> connection to stay connected indefinitely. Set this property to 0 to force <see cref="T:System.Net.ServicePoint" /> connections to close after servicing a request.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is a negative number less than -1.</exception>
    </member>
    <member name="P:System.Net.ServicePoint.ConnectionLimit">
      <summary>Gets or sets the maximum number of connections allowed on this <see cref="T:System.Net.ServicePoint" /> object.</summary>
      <returns>The maximum number of connections allowed on this <see cref="T:System.Net.ServicePoint" /> object.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The connection limit is equal to or less than 0. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Net.DnsPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.ServicePoint.ConnectionName">
      <summary>Gets the connection name. </summary>
      <returns>A <see cref="T:System.String" /> that represents the connection name. </returns>
    </member>
    <member name="P:System.Net.ServicePoint.CurrentConnections">
      <summary>Gets the number of open connections associated with this <see cref="T:System.Net.ServicePoint" /> object.</summary>
      <returns>The number of open connections associated with this <see cref="T:System.Net.ServicePoint" /> object.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.Expect100Continue">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that determines whether 100-Continue behavior is used.</summary>
      <returns>true to expect 100-Continue responses for POST requests; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.IdleSince">
      <summary>Gets the date and time that the <see cref="T:System.Net.ServicePoint" /> object was last connected to a host.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that contains the date and time at which the <see cref="T:System.Net.ServicePoint" /> object was last connected.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.MaxIdleTime">
      <summary>Gets or sets the amount of time a connection associated with the <see cref="T:System.Net.ServicePoint" /> object can remain idle before the connection is closed.</summary>
      <returns>The length of time, in milliseconds, that a connection associated with the <see cref="T:System.Net.ServicePoint" /> object can remain idle before it is closed and reused for another connection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> is set to less than <see cref="F:System.Threading.Timeout.Infinite" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
    </member>
    <member name="P:System.Net.ServicePoint.ProtocolVersion">
      <summary>Gets the version of the HTTP protocol that the <see cref="T:System.Net.ServicePoint" /> object uses.</summary>
      <returns>A <see cref="T:System.Version" /> object that contains the HTTP protocol version that the <see cref="T:System.Net.ServicePoint" /> object uses.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.ReceiveBufferSize">
      <summary>Gets or sets the size of the receiving buffer for the socket used by this <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>A <see cref="T:System.Int32" /> that contains the size, in bytes, of the receive buffer. The default is 8192.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)">
      <summary>Enables or disables the keep-alive option on a TCP connection.</summary>
      <param name="enabled">If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <paramref name="keepAliveTime " />and <paramref name="keepAliveInterval" /> values. If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.The default value is false.</param>
      <param name="keepAliveTime">Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent. The value must be greater than 0.  If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</param>
      <param name="keepAliveInterval">Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.The value must be greater than 0.  If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for <paramref name="keepAliveTime" /> or <paramref name="keepAliveInterval" /> parameter is less than or equal to 0.</exception>
    </member>
    <member name="P:System.Net.ServicePoint.SupportsPipelining">
      <summary>Indicates whether the <see cref="T:System.Net.ServicePoint" /> object supports pipelined connections.</summary>
      <returns>true if the <see cref="T:System.Net.ServicePoint" /> object supports pipelined connections; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.UseNagleAlgorithm">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that determines whether the Nagle algorithm is used on connections managed by this <see cref="T:System.Net.ServicePoint" /> object.</summary>
      <returns>true to use the Nagle algorithm; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.Net.ServicePointManager">
      <summary>Manages the collection of <see cref="T:System.Net.ServicePoint" /> objects.</summary>
    </member>
    <member name="P:System.Net.ServicePointManager.CertificatePolicy">
      <summary>Gets or sets policy for server certificates.</summary>
      <returns>An object that implements the <see cref="T:System.Net.ICertificatePolicy" /> interface.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.ServicePointManager.CheckCertificateRevocationList">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that indicates whether the certificate is checked against the certificate authority revocation list.</summary>
      <returns>true if the certificate revocation list is checked; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.ServicePointManager.DefaultConnectionLimit">
      <summary>Gets or sets the maximum number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint" /> object.</summary>
      <returns>The maximum number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint" /> object. The default value is 2.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> is less than or equal to 0. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="F:System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit">
      <summary>The default number of non-persistent connections (4) allowed on a <see cref="T:System.Net.ServicePoint" /> object connected to an HTTP/1.0 or later server. This field is constant but is no longer used in the .NET Framework 2.0.</summary>
    </member>
    <member name="F:System.Net.ServicePointManager.DefaultPersistentConnectionLimit">
      <summary>The default number of persistent connections (2) allowed on a <see cref="T:System.Net.ServicePoint" /> object connected to an HTTP/1.1 or later server. This field is constant and is used to initialize the <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> property if the value of the <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> property has not been set either directly or through configuration.</summary>
    </member>
    <member name="P:System.Net.ServicePointManager.DnsRefreshTimeout">
      <summary>Gets or sets a value that indicates how long a Domain Name Service (DNS) resolution is considered valid.</summary>
      <returns>The time-out value, in milliseconds. A value of -1 indicates an infinite time-out period. The default value is 120,000 milliseconds (two minutes).</returns>
    </member>
    <member name="P:System.Net.ServicePointManager.EnableDnsRoundRobin">
      <summary>Gets or sets a value that indicates whether a Domain Name Service (DNS) resolution rotates among the applicable Internet Protocol (IP) addresses.</summary>
      <returns>false if a DNS resolution always returns the first IP address for a particular host; otherwise true. The default is false.</returns>
    </member>
    <member name="P:System.Net.ServicePointManager.EncryptionPolicy">
      <summary>Gets the <see cref="T:System.Net.Security.EncryptionPolicy" /> for this <see cref="T:System.Net.ServicePointManager" /> instance.</summary>
      <returns>The encryption policy to use for this <see cref="T:System.Net.ServicePointManager" /> instance.</returns>
    </member>
    <member name="P:System.Net.ServicePointManager.Expect100Continue">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that determines whether 100-Continue behavior is used.</summary>
      <returns>true to enable 100-Continue behavior. The default value is true.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)">
      <summary>Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified Uniform Resource Identifier (URI).</summary>
      <returns>The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</returns>
      <param name="uriString">The URI of the Internet resource to be contacted. </param>
      <param name="proxy">The proxy data for this request. </param>
      <exception cref="T:System.UriFormatException">The URI specified in <paramref name="uriString" /> is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.ServicePointManager.FindServicePoint(System.Uri)">
      <summary>Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified <see cref="T:System.Uri" /> object.</summary>
      <returns>The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</returns>
      <param name="address">The <see cref="T:System.Uri" /> object of the Internet resource to contact. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)">
      <summary>Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified <see cref="T:System.Uri" /> object.</summary>
      <returns>The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</returns>
      <param name="address">A <see cref="T:System.Uri" /> object that contains the address of the Internet resource to contact. </param>
      <param name="proxy">The proxy data for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.ServicePointManager.MaxServicePointIdleTime">
      <summary>Gets or sets the maximum idle time of a <see cref="T:System.Net.ServicePoint" /> object.</summary>
      <returns>The maximum idle time, in milliseconds, of a <see cref="T:System.Net.ServicePoint" /> object. The default value is 100,000 milliseconds (100 seconds).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Net.ServicePointManager.MaxServicePointIdleTime" /> is less than <see cref="F:System.Threading.Timeout.Infinite" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <PermissionSet>
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.ServicePointManager.MaxServicePoints">
      <summary>Gets or sets the maximum number of <see cref="T:System.Net.ServicePoint" /> objects to maintain at any time.</summary>
      <returns>The maximum number of <see cref="T:System.Net.ServicePoint" /> objects to maintain. The default value is 0, which means there is no limit to the number of <see cref="T:System.Net.ServicePoint" /> objects.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <PermissionSet>
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.ServicePointManager.SecurityProtocol">
      <summary>Gets or sets the security protocol used by the <see cref="T:System.Net.ServicePoint" /> objects managed by the <see cref="T:System.Net.ServicePointManager" /> object.</summary>
      <returns>One of the values defined in the <see cref="T:System.Net.SecurityProtocolType" /> enumeration.</returns>
      <exception cref="T:System.NotSupportedException">The value specified to set the property is not a valid <see cref="T:System.Net.SecurityProtocolType" /> enumeration value. </exception>
    </member>
    <member name="P:System.Net.ServicePointManager.ServerCertificateValidationCallback">
      <summary>Gets or sets the callback to validate a server certificate.</summary>
      <returns>A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> The default value is null.</returns>
    </member>
    <member name="M:System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)">
      <summary>Enables or disables the keep-alive option on a TCP connection.</summary>
      <param name="enabled">If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <paramref name="keepAliveTime " />and <paramref name="keepAliveInterval" /> values. If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.The default value is false.</param>
      <param name="keepAliveTime">Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.The value must be greater than 0.  If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</param>
      <param name="keepAliveInterval">Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.The value must be greater than 0.  If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for <paramref name="keepAliveTime" /> or <paramref name="keepAliveInterval" /> parameter is less than or equal to 0.</exception>
    </member>
    <member name="P:System.Net.ServicePointManager.UseNagleAlgorithm">
      <summary>Determines whether the Nagle algorithm is used by the service points managed by this <see cref="T:System.Net.ServicePointManager" /> object.</summary>
      <returns>true to use the Nagle algorithm; otherwise, false. The default value is true.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.SocketAddress">
      <summary>Stores serialized information from <see cref="T:System.Net.EndPoint" /> derived classes.</summary>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class for the given address family.</summary>
      <param name="family">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value. </param>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <summary>Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class using the specified address family and buffer size.</summary>
      <param name="family">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value. </param>
      <param name="size">The number of bytes to allocate for the underlying buffer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> is less than 2. These 2 bytes are needed to store <paramref name="family" />. </exception>
    </member>
    <member name="M:System.Net.SocketAddress.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Net.SocketAddress" /> instance.</summary>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
      <param name="comparand">The specified <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Net.SocketAddress" /> instance.</param>
    </member>
    <member name="P:System.Net.SocketAddress.Family">
      <summary>Gets the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value of the current <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated values.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.GetHashCode">
      <summary>Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Item(System.Int32)">
      <summary>Gets or sets the specified index element in the underlying buffer.</summary>
      <returns>The value of the specified index element in the underlying buffer.</returns>
      <param name="offset">The array index element of the desired information. </param>
      <exception cref="T:System.IndexOutOfRangeException">The specified index does not exist in the buffer. </exception>
    </member>
    <member name="P:System.Net.SocketAddress.Size">
      <summary>Gets the underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns>The underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.ToString">
      <summary>Returns information about the socket address.</summary>
      <returns>A string that contains information about the <see cref="T:System.Net.SocketAddress" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.SocketPermission">
      <summary>Controls rights to make or accept connections on a transport address.</summary>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.SocketPermission" /> class for the given transport address with the specified permission.</summary>
      <param name="access">One of the <see cref="T:System.Net.NetworkAccess" /> values. </param>
      <param name="transport">One of the <see cref="T:System.Net.TransportType" /> values. </param>
      <param name="hostName">The host name for the transport address. </param>
      <param name="portNumber">The port number for the transport address. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" /> is null. </exception>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.SocketPermission" /> class that allows unrestricted access to the <see cref="T:System.Net.Sockets.Socket" /> or disallows access to the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
    </member>
    <member name="P:System.Net.SocketPermission.AcceptList">
      <summary>Gets a list of <see cref="T:System.Net.EndpointPermission" /> instances that identifies the endpoints that can be accepted under this permission instance.</summary>
      <returns>An instance that implements the <see cref="T:System.Collections.IEnumerator" /> interface that contains <see cref="T:System.Net.EndpointPermission" /> instances.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>Adds a permission to the set of permissions for a transport address.</summary>
      <param name="access">One of the <see cref="T:System.Net.NetworkAccess" /> values. </param>
      <param name="transport">One of the <see cref="T:System.Net.TransportType" /> values. </param>
      <param name="hostName">The host name for the transport address. </param>
      <param name="portNumber">The port number for the transport address. </param>
    </member>
    <member name="F:System.Net.SocketPermission.AllPorts">
      <summary>Defines a constant that represents all ports.</summary>
    </member>
    <member name="P:System.Net.SocketPermission.ConnectList">
      <summary>Gets a list of <see cref="T:System.Net.EndpointPermission" /> instances that identifies the endpoints that can be connected to under this permission instance.</summary>
      <returns>An instance that implements the <see cref="T:System.Collections.IEnumerator" /> interface that contains <see cref="T:System.Net.EndpointPermission" /> instances.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.Copy">
      <summary>Creates a copy of a <see cref="T:System.Net.SocketPermission" /> instance.</summary>
      <returns>A new instance of the <see cref="T:System.Net.SocketPermission" /> class that is a copy of the current instance.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a <see cref="T:System.Net.SocketPermission" /> instance for an XML encoding.</summary>
      <param name="securityElement">The XML encoding used to reconstruct the <see cref="T:System.Net.SocketPermission" /> instance. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="securityElement" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="securityElement" /> is not a permission element for this type. </exception>
    </member>
    <member name="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
      <summary>Returns the logical intersection between two <see cref="T:System.Net.SocketPermission" /> instances.</summary>
      <returns>The <see cref="T:System.Net.SocketPermission" /> instance that represents the intersection of two <see cref="T:System.Net.SocketPermission" /> instances. If the intersection is empty, the method returns null. If the <paramref name="target" /> parameter is a null reference, the method returns null.</returns>
      <param name="target">The <see cref="T:System.Net.SocketPermission" /> instance to intersect with the current instance. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not a <see cref="T:System.Net.SocketPermission" />. </exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" /> is not granted to the method caller. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Net.DnsPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determines if the current permission is a subset of the specified permission.</summary>
      <returns>If <paramref name="target" /> is null, this method returns true if the current instance defines no permissions; otherwise, false. If <paramref name="target" /> is not null, this method returns true if the current instance defines a subset of <paramref name="target" /> permissions; otherwise, false.</returns>
      <param name="target">A <see cref="T:System.Net.SocketPermission" /> that is to be tested for the subset relationship. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a <see cref="T:System.Net.Sockets.SocketException" />. </exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" /> is not granted to the method caller. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Net.DnsPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.SocketPermission.IsUnrestricted">
      <summary>Checks the overall permission state of the object.</summary>
      <returns>true if the <see cref="T:System.Net.SocketPermission" /> instance is created with the Unrestricted value from <see cref="T:System.Security.Permissions.PermissionState" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.ToXml">
      <summary>Creates an XML encoding of a <see cref="T:System.Net.SocketPermission" /> instance and its current state.</summary>
      <returns>A <see cref="T:System.Security.SecurityElement" /> instance that contains an XML-encoded representation of the <see cref="T:System.Net.SocketPermission" /> instance, including state information.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
      <summary>Returns the logical union between two <see cref="T:System.Net.SocketPermission" /> instances.</summary>
      <returns>The <see cref="T:System.Net.SocketPermission" /> instance that represents the union of two <see cref="T:System.Net.SocketPermission" /> instances. If <paramref name="target" /> parameter is null, it returns a copy of the current instance.</returns>
      <param name="target">The <see cref="T:System.Net.SocketPermission" /> instance to combine with the current instance. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a <see cref="T:System.Net.SocketPermission" />. </exception>
    </member>
    <member name="T:System.Net.SocketPermissionAttribute">
      <summary>Specifies security actions to control <see cref="T:System.Net.Sockets.Socket" /> connections. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.SocketPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" /> value.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> is not a valid <see cref="T:System.Security.Permissions.SecurityAction" /> value. </exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Access">
      <summary>Gets or sets the network access method that is allowed by this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <returns>A string that contains the network access method that is allowed by this instance of <see cref="T:System.Net.SocketPermissionAttribute" />. Valid values are "Accept" and "Connect." </returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Net.SocketPermissionAttribute.Access" /> property is not null when you attempt to set the value. To specify more than one Access method, use an additional attribute declaration statement. </exception>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.CreatePermission">
      <summary>Creates and returns a new instance of the <see cref="T:System.Net.SocketPermission" /> class.</summary>
      <returns>An instance of the <see cref="T:System.Net.SocketPermission" /> class that corresponds to the security declaration.</returns>
      <exception cref="T:System.ArgumentException">One or more of the current instance's <see cref="P:System.Net.SocketPermissionAttribute.Access" />, <see cref="P:System.Net.SocketPermissionAttribute.Host" />, <see cref="P:System.Net.SocketPermissionAttribute.Transport" />, or <see cref="P:System.Net.SocketPermissionAttribute.Port" /> properties is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Host">
      <summary>Gets or sets the DNS host name or IP address that is specified by this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <returns>A string that contains the DNS host name or IP address that is associated with this instance of <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.SocketPermissionAttribute.Host" /> is not null when you attempt to set the value. To specify more than one host, use an additional attribute declaration statement. </exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Port">
      <summary>Gets or sets the port number that is associated with this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <returns>A string that contains the port number that is associated with this instance of <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Net.SocketPermissionAttribute.Port" /> property is null when you attempt to set the value. To specify more than one port, use an additional attribute declaration statement. </exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Transport">
      <summary>Gets or sets the <see cref="T:System.Net.TransportType" /> that is specified by this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <returns>A string that contains the <see cref="T:System.Net.TransportType" /> that is associated with this <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.SocketPermissionAttribute.Transport" /> is not null when you attempt to set the value. To specify more than one transport type, use an additional attribute declaration statement. </exception>
    </member>
    <member name="T:System.Net.TransportContext">
      <summary>The <see cref="T:System.Net.TransportContext" /> class provides additional context about the underlying transport layer.</summary>
    </member>
    <member name="M:System.Net.TransportContext.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Net.TransportContext" /> class</summary>
    </member>
    <member name="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)">
      <summary>Retrieves the requested channel binding. </summary>
      <returns>The requested <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />, or null if the channel binding is not supported by the current transport or by the operating system.</returns>
      <param name="kind">The type of channel binding to retrieve.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="kind" /> is must be <see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> for use with the <see cref="T:System.Net.TransportContext" /> retrieved from the <see cref="P:System.Net.HttpListenerRequest.TransportContext" /> property.</exception>
    </member>
    <member name="T:System.Net.TransportType">
      <summary>Defines transport types for the <see cref="T:System.Net.SocketPermission" /> and <see cref="T:System.Net.Sockets.Socket" /> classes.</summary>
    </member>
    <member name="F:System.Net.TransportType.Udp">
      <summary>UDP transport.</summary>
    </member>
    <member name="F:System.Net.TransportType.Connectionless">
      <summary>The transport type is connectionless, such as UDP. Specifying this value has the same effect as specifying <see cref="F:System.Net.TransportType.Udp" />.</summary>
    </member>
    <member name="F:System.Net.TransportType.Tcp">
      <summary>TCP transport.</summary>
    </member>
    <member name="F:System.Net.TransportType.ConnectionOriented">
      <summary>The transport is connection oriented, such as TCP. Specifying this value has the same effect as specifying <see cref="F:System.Net.TransportType.Tcp" />.</summary>
    </member>
    <member name="F:System.Net.TransportType.All">
      <summary>All transport types.</summary>
    </member>
    <member name="T:System.Net.UploadDataCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.UploadDataCompleted" /> event.</summary>
    </member>
    <member name="P:System.Net.UploadDataCompletedEventArgs.Result">
      <summary>Gets the server reply to a data upload operation started by calling an <see cref="Overload:System.Net.WebClient.UploadDataAsync" /> method.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the server reply.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.UploadDataCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.UploadDataCompleted" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.UploadDataCompletedEventArgs" /> containing event data.</param>
    </member>
    <member name="T:System.Net.UploadFileCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.UploadFileCompleted" /> event.</summary>
    </member>
    <member name="P:System.Net.UploadFileCompletedEventArgs.Result">
      <summary>Gets the server reply to a data upload operation that is started by calling an <see cref="Overload:System.Net.WebClient.UploadFileAsync" /> method.</summary>
      <returns>A <see cref="T:System.Byte" /> array that contains the server reply.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.UploadFileCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.UploadFileCompleted" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.UploadFileCompletedEventArgs" /> that contains event data.</param>
    </member>
    <member name="T:System.Net.UploadProgressChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.UploadProgressChanged" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.BytesReceived">
      <summary>Gets the number of bytes received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the number of bytes received.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.BytesSent">
      <summary>Gets the number of bytes sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the number of bytes sent.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToReceive">
      <summary>Gets the total number of bytes in a <see cref="T:System.Net.WebClient" /> data upload operation.</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the number of bytes that will be received.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToSend">
      <summary>Gets the total number of bytes to send.</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the number of bytes that will be sent.</returns>
    </member>
    <member name="T:System.Net.UploadProgressChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.UploadProgressChanged" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.UploadProgressChangedEventArgs" /> containing event data.</param>
    </member>
    <member name="T:System.Net.UploadStringCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.UploadStringCompleted" /> event.</summary>
    </member>
    <member name="P:System.Net.UploadStringCompletedEventArgs.Result">
      <summary>Gets the server reply to a string upload operation that is started by calling an <see cref="Overload:System.Net.WebClient.UploadStringAsync" /> method.</summary>
      <returns>A <see cref="T:System.Byte" /> array that contains the server reply.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.UploadStringCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.UploadStringCompleted" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.UploadStringCompletedEventArgs" /> containing event data.</param>
    </member>
    <member name="T:System.Net.UploadValuesCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.UploadValuesCompleted" /> event.</summary>
    </member>
    <member name="P:System.Net.UploadValuesCompletedEventArgs.Result">
      <summary>Gets the server reply to a data upload operation started by calling an <see cref="Overload:System.Net.WebClient.UploadValuesAsync" /> method.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the server reply.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.UploadValuesCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.UploadValuesCompleted" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.UploadValuesCompletedEventArgs" /> that contains event data.</param>
    </member>
    <member name="T:System.Net.WebClient">
      <summary>Provides common methods for sending data to and receiving data from a resource identified by a URI.</summary>
    </member>
    <member name="M:System.Net.WebClient.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebClient" /> class.</summary>
    </member>
    <member name="P:System.Net.WebClient.BaseAddress">
      <summary>Gets or sets the base URI for requests made by a <see cref="T:System.Net.WebClient" />.</summary>
      <returns>A <see cref="T:System.String" /> containing the base URI for requests made by a <see cref="T:System.Net.WebClient" /> or <see cref="F:System.String.Empty" /> if no base address has been specified.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebClient.BaseAddress" /> is set to an invalid URI. The inner exception may contain information that will help you locate the error.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebClient.CachePolicy">
      <summary>Gets or sets the application's cache policy for any resources obtained by this WebClient instance using <see cref="T:System.Net.WebRequest" /> objects.</summary>
      <returns>A <see cref="T:System.Net.Cache.RequestCachePolicy" /> object that represents the application's caching requirements.</returns>
    </member>
    <member name="M:System.Net.WebClient.CancelAsync">
      <summary>Cancels a pending asynchronous operation.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebClient.Credentials">
      <summary>Gets or sets the network credentials that are sent to the host and used to authenticate the request.</summary>
      <returns>An <see cref="T:System.Net.ICredentials" /> containing the authentication credentials for the request. The default is null.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.DownloadData(System.String)">
      <summary>Downloads the resource with the specified URI as a <see cref="T:System.Byte" /> array.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the downloaded resource.</returns>
      <param name="address">The URI from which to download data. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while downloading data. </exception>
      <exception cref="T:System.NotSupportedException">The method has been called simultaneously on multiple threads.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.DownloadData(System.Uri)">
      <summary>Downloads the resource with the specified URI as a <see cref="T:System.Byte" /> array.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the downloaded resource.</returns>
      <param name="address">The URI represented by the <see cref="T:System.Uri" />  object, from which to download data.</param>
    </member>
    <member name="M:System.Net.WebClient.DownloadDataAsync(System.Uri)">
      <summary>Downloads the specified resource as a <see cref="T:System.Byte" /> array. This method does not block the calling thread.</summary>
      <param name="address">A <see cref="T:System.Uri" /> containing the URI to download.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while downloading the resource. </exception>
    </member>
    <member name="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)">
      <summary>Downloads the specified resource as a <see cref="T:System.Byte" /> array. This method does not block the calling thread.</summary>
      <param name="address">A <see cref="T:System.Uri" /> containing the URI to download.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while downloading the resource. </exception>
    </member>
    <member name="E:System.Net.WebClient.DownloadDataCompleted">
      <summary>Occurs when an asynchronous data download operation completes.</summary>
    </member>
    <member name="M:System.Net.WebClient.DownloadFile(System.String,System.String)">
      <summary>Downloads the resource with the specified URI to a local file.</summary>
      <param name="address">The URI from which to download data. </param>
      <param name="fileName">The name of the local file that is to receive the data. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- <paramref name="filename" /> is null or <see cref="F:System.String.Empty" />.-or-The file does not exist.-or- An error occurred while downloading data. </exception>
      <exception cref="T:System.NotSupportedException">The method has been called simultaneously on multiple threads.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)">
      <summary>Downloads the resource with the specified URI to a local file.</summary>
      <param name="address">The URI specified as a <see cref="T:System.String" />, from which to download data. </param>
      <param name="fileName">The name of the local file that is to receive the data. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- <paramref name="filename" /> is null or <see cref="F:System.String.Empty" />.-or- The file does not exist. -or- An error occurred while downloading data. </exception>
      <exception cref="T:System.NotSupportedException">The method has been called simultaneously on multiple threads.</exception>
    </member>
    <member name="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)">
      <summary>Downloads, to a local file, the resource with the specified URI. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to download. </param>
      <param name="fileName">The name of the file to be placed on the local computer. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while downloading the resource. </exception>
      <exception cref="T:System.InvalidOperationException">The local file specified by <paramref name="fileName" /> is in use by another thread.</exception>
    </member>
    <member name="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)">
      <summary>Downloads, to a local file, the resource with the specified URI. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to download. </param>
      <param name="fileName">The name of the file to be placed on the local computer. </param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while downloading the resource. </exception>
      <exception cref="T:System.InvalidOperationException">The local file specified by <paramref name="fileName" /> is in use by another thread.</exception>
    </member>
    <member name="E:System.Net.WebClient.DownloadFileCompleted">
      <summary>Occurs when an asynchronous file download operation completes.</summary>
    </member>
    <member name="E:System.Net.WebClient.DownloadProgressChanged">
      <summary>Occurs when an asynchronous download operation successfully transfers some or all of the data.</summary>
    </member>
    <member name="M:System.Net.WebClient.DownloadString(System.String)">
      <summary>Downloads the requested resource as a <see cref="T:System.String" />. The resource to download is specified as a <see cref="T:System.String" /> containing the URI.</summary>
      <returns>A <see cref="T:System.String" /> containing the requested resource.</returns>
      <param name="address">A <see cref="T:System.String" /> containing the URI to download.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while downloading the resource. </exception>
      <exception cref="T:System.NotSupportedException">The method has been called simultaneously on multiple threads.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.DownloadString(System.Uri)">
      <summary>Downloads the requested resource as a <see cref="T:System.String" />. The resource to download is specified as a <see cref="T:System.Uri" />.</summary>
      <returns>A <see cref="T:System.String" /> containing the requested resource.</returns>
      <param name="address">A <see cref="T:System.Uri" /> object containing the URI to download.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while downloading the resource. </exception>
      <exception cref="T:System.NotSupportedException">The method has been called simultaneously on multiple threads.</exception>
    </member>
    <member name="M:System.Net.WebClient.DownloadStringAsync(System.Uri)">
      <summary>Downloads the resource specified as a <see cref="T:System.Uri" />. This method does not block the calling thread.</summary>
      <param name="address">A <see cref="T:System.Uri" /> containing the URI to download.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while downloading the resource. </exception>
    </member>
    <member name="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)">
      <summary>Downloads the specified string to the specified resource. This method does not block the calling thread.</summary>
      <param name="address">A <see cref="T:System.Uri" /> containing the URI to download.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while downloading the resource. </exception>
    </member>
    <member name="E:System.Net.WebClient.DownloadStringCompleted">
      <summary>Occurs when an asynchronous resource-download operation completes.</summary>
    </member>
    <member name="P:System.Net.WebClient.Encoding">
      <summary>Gets and sets the <see cref="T:System.Text.Encoding" /> used to upload and download strings.</summary>
      <returns>A <see cref="T:System.Text.Encoding" /> that is used to encode strings. The default value of this property is the encoding returned by <see cref="P:System.Text.Encoding.Default" />.</returns>
    </member>
    <member name="M:System.Net.WebClient.GetWebRequest(System.Uri)">
      <summary>Returns a <see cref="T:System.Net.WebRequest" /> object for the specified resource.</summary>
      <returns>A new <see cref="T:System.Net.WebRequest" /> object for the specified resource.</returns>
      <param name="address">A <see cref="T:System.Uri" /> that identifies the resource to request.</param>
    </member>
    <member name="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)">
      <summary>Returns the <see cref="T:System.Net.WebResponse" /> for the specified <see cref="T:System.Net.WebRequest" />.</summary>
      <returns>A <see cref="T:System.Net.WebResponse" /> containing the response for the specified <see cref="T:System.Net.WebRequest" />.</returns>
      <param name="request">A <see cref="T:System.Net.WebRequest" /> that is used to obtain the response. </param>
    </member>
    <member name="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
      <summary>Returns the <see cref="T:System.Net.WebResponse" /> for the specified <see cref="T:System.Net.WebRequest" /> using the specified <see cref="T:System.IAsyncResult" />.</summary>
      <returns>A <see cref="T:System.Net.WebResponse" /> containing the response for the specified <see cref="T:System.Net.WebRequest" />.</returns>
      <param name="request">A <see cref="T:System.Net.WebRequest" /> that is used to obtain the response.</param>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object obtained from a previous call to <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> .</param>
    </member>
    <member name="P:System.Net.WebClient.Headers">
      <summary>Gets or sets a collection of header name/value pairs associated with the request.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> containing header name/value pairs associated with this request.</returns>
    </member>
    <member name="P:System.Net.WebClient.IsBusy">
      <summary>Gets whether a Web request is in progress.</summary>
      <returns>true if the Web request is still in progress; otherwise false.</returns>
    </member>
    <member name="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.DownloadDataCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.DownloadDataCompletedEventArgs" /> object that contains event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.DownloadFileCompleted" /> event.</summary>
      <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.DownloadProgressChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.DownloadProgressChangedEventArgs" /> object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.DownloadStringCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.DownloadStringCompletedEventArgs" /> object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.OpenReadCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.OpenReadCompletedEventArgs" />  object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.OpenWriteCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.OpenWriteCompletedEventArgs" /> object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.UploadDataCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.UploadDataCompletedEventArgs" />  object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.UploadFileCompleted" /> event.</summary>
      <param name="e">An <see cref="T:System.Net.UploadFileCompletedEventArgs" /> object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.UploadProgressChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.Net.UploadProgressChangedEventArgs" /> object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.UploadStringCompleted" /> event.</summary>
      <param name="e">An <see cref="T:System.Net.UploadStringCompletedEventArgs" />  object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.UploadValuesCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.UploadValuesCompletedEventArgs" />  object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OpenRead(System.String)">
      <summary>Opens a readable stream for the data downloaded from a resource with the URI specified as a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> used to read data from a resource.</returns>
      <param name="address">The URI specified as a <see cref="T:System.String" /> from which to download data. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, <paramref name="address" /> is invalid.-or- An error occurred while downloading data. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.OpenRead(System.Uri)">
      <summary>Opens a readable stream for the data downloaded from a resource with the URI specified as a <see cref="T:System.Uri" /></summary>
      <returns>A <see cref="T:System.IO.Stream" /> used to read data from a resource.</returns>
      <param name="address">The URI specified as a <see cref="T:System.Uri" /> from which to download data. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, <paramref name="address" /> is invalid.-or- An error occurred while downloading data. </exception>
    </member>
    <member name="M:System.Net.WebClient.OpenReadAsync(System.Uri)">
      <summary>Opens a readable stream containing the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to retrieve.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and address is invalid.-or- An error occurred while downloading the resource. -or- An error occurred while opening the stream.</exception>
    </member>
    <member name="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)">
      <summary>Opens a readable stream containing the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to retrieve.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and address is invalid.-or- An error occurred while downloading the resource. -or- An error occurred while opening the stream.</exception>
    </member>
    <member name="E:System.Net.WebClient.OpenReadCompleted">
      <summary>Occurs when an asynchronous operation to open a stream containing a resource completes.</summary>
    </member>
    <member name="M:System.Net.WebClient.OpenWrite(System.String)">
      <summary>Opens a stream for writing data to the specified resource.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> used to write data to the resource.</returns>
      <param name="address">The URI of the resource to receive the data. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- An error occurred while opening the stream. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.OpenWrite(System.String,System.String)">
      <summary>Opens a stream for writing data to the specified resource, using the specified method.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> used to write data to the resource.</returns>
      <param name="address">The URI of the resource to receive the data. </param>
      <param name="method">The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- An error occurred while opening the stream. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.OpenWrite(System.Uri)">
      <summary>Opens a stream for writing data to the specified resource.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> used to write data to the resource.</returns>
      <param name="address">The URI of the resource to receive the data.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- An error occurred while opening the stream. </exception>
    </member>
    <member name="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)">
      <summary>Opens a stream for writing data to the specified resource, by using the specified method.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> used to write data to the resource.</returns>
      <param name="address">The URI of the resource to receive the data.</param>
      <param name="method">The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- An error occurred while opening the stream. </exception>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri)">
      <summary>Opens a stream for writing data to the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the data. </param>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)">
      <summary>Opens a stream for writing data to the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the data. </param>
      <param name="method">The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</param>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)">
      <summary>Opens a stream for writing data to the specified resource, using the specified method. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the data.</param>
      <param name="method">The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while opening the stream. </exception>
    </member>
    <member name="E:System.Net.WebClient.OpenWriteCompleted">
      <summary>Occurs when an asynchronous operation to open a stream to write data to a resource completes.</summary>
    </member>
    <member name="P:System.Net.WebClient.Proxy">
      <summary>Gets or sets the proxy used by this <see cref="T:System.Net.WebClient" /> object.</summary>
      <returns>An <see cref="T:System.Net.IWebProxy" /> instance used to send requests.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.WebClient.Proxy" /> is set to null. </exception>
    </member>
    <member name="P:System.Net.WebClient.QueryString">
      <summary>Gets or sets a collection of query name/value pairs associated with the request.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains query name/value pairs associated with the request. If no pairs are associated with the request, the value is an empty <see cref="T:System.Collections.Specialized.NameValueCollection" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebClient.ResponseHeaders">
      <summary>Gets a collection of header name/value pairs associated with the response.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> containing header name/value pairs associated with the response, or null if no response has been received.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.UploadData(System.String,System.Byte[])">
      <summary>Uploads a data buffer to a resource identified by a URI.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the data. </param>
      <param name="data">The data buffer to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="data" /> is null. -or-An error occurred while sending the data.-or- There was no response from the server hosting the resource. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])">
      <summary>Uploads a data buffer to the specified resource, using the specified method.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the data. </param>
      <param name="method">The HTTP method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The data buffer to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="data" /> is null.-or- An error occurred while uploading the data.-or- There was no response from the server hosting the resource. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])">
      <summary>Uploads a data buffer to a resource identified by a URI.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the data. </param>
      <param name="data">The data buffer to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="data" /> is null. -or-An error occurred while sending the data.-or- There was no response from the server hosting the resource. </exception>
    </member>
    <member name="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])">
      <summary>Uploads a data buffer to the specified resource, using the specified method.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the data. </param>
      <param name="method">The HTTP method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The data buffer to send to the resource.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="data" /> is null.-or- An error occurred while uploading the data.-or- There was no response from the server hosting the resource. </exception>
    </member>
    <member name="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])">
      <summary>Uploads a data buffer to a resource identified by a URI, using the POST method. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the data. </param>
      <param name="data">The data buffer to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while opening the stream.-or- There was no response from the server hosting the resource. </exception>
    </member>
    <member name="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])">
      <summary>Uploads a data buffer to a resource identified by a URI, using the specified method. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the data.</param>
      <param name="method">The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The data buffer to send to the resource.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while opening the stream.-or- There was no response from the server hosting the resource. </exception>
    </member>
    <member name="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)">
      <summary>Uploads a data buffer to a resource identified by a URI, using the specified method and identifying token.</summary>
      <param name="address">The URI of the resource to receive the data.</param>
      <param name="method">The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The data buffer to send to the resource.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while opening the stream.-or- There was no response from the server hosting the resource. </exception>
    </member>
    <member name="E:System.Net.WebClient.UploadDataCompleted">
      <summary>Occurs when an asynchronous data-upload operation completes.</summary>
    </member>
    <member name="M:System.Net.WebClient.UploadFile(System.String,System.String)">
      <summary>Uploads the specified local file to a resource with the specified URI.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the file. For example, ftp://localhost/samplefile.txt.</param>
      <param name="fileName">The file to send to the resource. For example, "samplefile.txt".</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="fileName" /> is null, is <see cref="F:System.String.Empty" />, contains invalid characters, or does not exist.-or- An error occurred while uploading the file.-or- There was no response from the server hosting the resource.-or- The Content-type header begins with multipart. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)">
      <summary>Uploads the specified local file to the specified resource, using the specified method.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the file.</param>
      <param name="method">The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="fileName">The file to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="fileName" /> is null, is <see cref="F:System.String.Empty" />, contains invalid characters, or does not exist.-or- An error occurred while uploading the file.-or- There was no response from the server hosting the resource.-or- The Content-type header begins with multipart. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.UploadFile(System.Uri,System.String)">
      <summary>Uploads the specified local file to a resource with the specified URI.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the file. For example, ftp://localhost/samplefile.txt.</param>
      <param name="fileName">The file to send to the resource. For example, "samplefile.txt".</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="fileName" /> is null, is <see cref="F:System.String.Empty" />, contains invalid characters, or does not exist.-or- An error occurred while uploading the file.-or- There was no response from the server hosting the resource.-or- The Content-type header begins with multipart. </exception>
    </member>
    <member name="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)">
      <summary>Uploads the specified local file to the specified resource, using the specified method.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the file.</param>
      <param name="method">The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="fileName">The file to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="fileName" /> is null, is <see cref="F:System.String.Empty" />, contains invalid characters, or does not exist.-or- An error occurred while uploading the file.-or- There was no response from the server hosting the resource.-or- The Content-type header begins with multipart. </exception>
    </member>
    <member name="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)">
      <summary>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page. </param>
      <param name="fileName">The file to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- <paramref name="fileName" /> is null, is <see cref="F:System.String.Empty" />, contains invalid character, or the specified path to the file does not exist.-or- An error occurred while opening the stream.-or- There was no response from the server hosting the resource.-or- The Content-type header begins with multipart. </exception>
    </member>
    <member name="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)">
      <summary>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page. </param>
      <param name="method">The HTTP method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="fileName">The file to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- <paramref name="fileName" /> is null, is <see cref="F:System.String.Empty" />, contains invalid character, or the specified path to the file does not exist.-or- An error occurred while opening the stream.-or- There was no response from the server hosting the resource.-or- The Content-type header begins with multipart. </exception>
    </member>
    <member name="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)">
      <summary>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</param>
      <param name="method">The HTTP method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="fileName">The file to send to the resource.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- <paramref name="fileName" /> is null, is <see cref="F:System.String.Empty" />, contains invalid character, or the specified path to the file does not exist.-or- An error occurred while opening the stream.-or- There was no response from the server hosting the resource.-or- The Content-type header begins with multipart. </exception>
    </member>
    <member name="E:System.Net.WebClient.UploadFileCompleted">
      <summary>Occurs when an asynchronous file-upload operation completes.</summary>
    </member>
    <member name="E:System.Net.WebClient.UploadProgressChanged">
      <summary>Occurs when an asynchronous upload operation successfully transfers some or all of the data.</summary>
    </member>
    <member name="M:System.Net.WebClient.UploadString(System.String,System.String)">
      <summary>Uploads the specified string to the specified resource, using the POST method.</summary>
      <returns>A <see cref="T:System.String" /> containing the response sent by the server.</returns>
      <param name="address">The URI of the resource to receive the string. For Http resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page. </param>
      <param name="data">The string to be uploaded.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)">
      <summary>Uploads the specified string to the specified resource, using the specified method.</summary>
      <returns>A <see cref="T:System.String" /> containing the response sent by the server.</returns>
      <param name="address">The URI of the resource to receive the file. This URI must identify a resource that can accept a request sent with the <paramref name="method" /> method. </param>
      <param name="method">The HTTP method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The string to be uploaded.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.-or-<paramref name="method" /> cannot be used to send content.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.UploadString(System.Uri,System.String)">
      <summary>Uploads the specified string to the specified resource, using the POST method.</summary>
      <returns>A <see cref="T:System.String" /> containing the response sent by the server.</returns>
      <param name="address">The URI of the resource to receive the string. For Http resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page. </param>
      <param name="data">The string to be uploaded.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)">
      <summary>Uploads the specified string to the specified resource, using the specified method.</summary>
      <returns>A <see cref="T:System.String" /> containing the response sent by the server.</returns>
      <param name="address">The URI of the resource to receive the file. This URI must identify a resource that can accept a request sent with the <paramref name="method" /> method. </param>
      <param name="method">The HTTP method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The string to be uploaded.</param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.-or-<paramref name="method" /> cannot be used to send content.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)">
      <summary>Uploads the specified string to the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page. </param>
      <param name="data">The string to be uploaded.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)">
      <summary>Uploads the specified string to the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</param>
      <param name="method">The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The string to be uploaded.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)">
      <summary>Uploads the specified string to the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</param>
      <param name="method">The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The string to be uploaded.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.</exception>
    </member>
    <member name="E:System.Net.WebClient.UploadStringCompleted">
      <summary>Occurs when an asynchronous string-upload operation completes.</summary>
    </member>
    <member name="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Uploads the specified name/value collection to the resource identified by the specified URI.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the collection. </param>
      <param name="data">The <see cref="T:System.Collections.Specialized.NameValueCollection" /> to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="data" /> is null.-or- There was no response from the server hosting the resource.-or- An error occurred while opening the stream.-or- The Content-type header is not null or "application/x-www-form-urlencoded". </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Uploads the specified name/value collection to the resource identified by the specified URI, using the specified method.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the collection. </param>
      <param name="method">The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The <see cref="T:System.Collections.Specialized.NameValueCollection" /> to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="data" /> is null.-or- An error occurred while opening the stream.-or- There was no response from the server hosting the resource.-or- The Content-type header value is not null and is not application/x-www-form-urlencoded. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)">
      <summary>Uploads the specified name/value collection to the resource identified by the specified URI.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the collection. </param>
      <param name="data">The <see cref="T:System.Collections.Specialized.NameValueCollection" /> to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="data" /> is null.-or- There was no response from the server hosting the resource.-or- An error occurred while opening the stream.-or- The Content-type header is not null or "application/x-www-form-urlencoded". </exception>
    </member>
    <member name="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Uploads the specified name/value collection to the resource identified by the specified URI, using the specified method.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the body of the response from the resource.</returns>
      <param name="address">The URI of the resource to receive the collection. </param>
      <param name="method">The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The <see cref="T:System.Collections.Specialized.NameValueCollection" /> to send to the resource. </param>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" />, and <paramref name="address" /> is invalid.-or- <paramref name="data" /> is null.-or- An error occurred while opening the stream.-or- There was no response from the server hosting the resource.-or- The Content-type header value is not null and is not application/x-www-form-urlencoded. </exception>
    </member>
    <member name="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)">
      <summary>Uploads the data in the specified name/value collection to the resource identified by the specified URI. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the collection. This URI must identify a resource that can accept a request sent with the default method. See remarks.</param>
      <param name="data">The <see cref="T:System.Collections.Specialized.NameValueCollection" /> to send to the resource.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Uploads the data in the specified name/value collection to the resource identified by the specified URI, using the specified method. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the collection. This URI must identify a resource that can accept a request sent with the <paramref name="method" /> method.</param>
      <param name="method">The method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The <see cref="T:System.Collections.Specialized.NameValueCollection" /> to send to the resource.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null. -or- <paramref name="address" /> is null.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.-or-<paramref name="method" /> cannot be used to send content.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)">
      <summary>Uploads the data in the specified name/value collection to the resource identified by the specified URI, using the specified method. This method does not block the calling thread, and allows the caller to pass an object to the method that is invoked when the operation completes.</summary>
      <param name="address">The URI of the resource to receive the collection. This URI must identify a resource that can accept a request sent with the <paramref name="method" /> method.</param>
      <param name="method">The HTTP method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</param>
      <param name="data">The <see cref="T:System.Collections.Specialized.NameValueCollection" /> to send to the resource.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null. -or- <paramref name="address" /> is null.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.-or-<paramref name="method" /> cannot be used to send content.</exception>
    </member>
    <member name="E:System.Net.WebClient.UploadValuesCompleted">
      <summary>Occurs when an asynchronous upload of a name/value collection completes.</summary>
    </member>
    <member name="P:System.Net.WebClient.UseDefaultCredentials">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that controls whether the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</summary>
      <returns>true if the default credentials are used; otherwise false. The default value is false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="USERNAME" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.WebException">
      <summary>The exception that is thrown when an error occurs while accessing the network through a pluggable protocol.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebException" /> class.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebException" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.WebException" />. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.Net.WebException" />. </param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebException" /> class with the specified error message.</summary>
      <param name="message">The text of the error message. </param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebException" /> class with the specified error message and nested exception.</summary>
      <param name="message">The text of the error message. </param>
      <param name="innerException">A nested exception. </param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebException" /> class with the specified error message, nested exception, status, and response.</summary>
      <param name="message">The text of the error message. </param>
      <param name="innerException">A nested exception. </param>
      <param name="status">One of the <see cref="T:System.Net.WebExceptionStatus" /> values. </param>
      <param name="response">A <see cref="T:System.Net.WebResponse" /> instance that contains the response from the remote host. </param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebException" /> class with the specified error message and status.</summary>
      <param name="message">The text of the error message. </param>
      <param name="status">One of the <see cref="T:System.Net.WebExceptionStatus" /> values. </param>
    </member>
    <member name="M:System.Net.WebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the <see cref="T:System.Net.WebException" />.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to be used. </param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> to be used. </param>
    </member>
    <member name="P:System.Net.WebException.Response">
      <summary>Gets the response that the remote host returned.</summary>
      <returns>If a response is available from the Internet resource, a <see cref="T:System.Net.WebResponse" /> instance that contains the error response from an Internet resource; otherwise, null.</returns>
    </member>
    <member name="P:System.Net.WebException.Status">
      <summary>Gets the status of the response.</summary>
      <returns>One of the <see cref="T:System.Net.WebExceptionStatus" /> values.</returns>
    </member>
    <member name="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes this instance into the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
      <param name="serializationInfo">The object into which this <see cref="T:System.Net.WebException" /> will be serialized. </param>
      <param name="streamingContext">The destination of the serialization. </param>
    </member>
    <member name="T:System.Net.WebExceptionStatus">
      <summary>Defines status codes for the <see cref="T:System.Net.WebException" /> class.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Success">
      <summary>No error was encountered.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.NameResolutionFailure">
      <summary>The name resolver service could not resolve the host name.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectFailure">
      <summary>The remote service point could not be contacted at the transport level.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ReceiveFailure">
      <summary>A complete response was not received from the remote server.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SendFailure">
      <summary>A complete request could not be sent to the remote server.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.PipelineFailure">
      <summary>The request was a piplined request and the connection was closed before the response was received.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestCanceled">
      <summary>The request was canceled, the <see cref="M:System.Net.WebRequest.Abort" /> method was called, or an unclassifiable error occurred. This is the default value for <see cref="P:System.Net.WebException.Status" />.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProtocolError">
      <summary>The response received from the server was complete but indicated a protocol-level error. For example, an HTTP protocol error such as 401 Access Denied would use this status.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectionClosed">
      <summary>The connection was prematurely closed.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.TrustFailure">
      <summary>A server certificate could not be validated.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SecureChannelFailure">
      <summary>An error occurred while establishing a connection using SSL.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ServerProtocolViolation">
      <summary>The server response was not a valid HTTP response.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.KeepAliveFailure">
      <summary>The connection for a request that specifies the Keep-alive header was closed unexpectedly.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Pending">
      <summary>An internal asynchronous request is pending.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Timeout">
      <summary>No response was received during the time-out period for a request.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProxyNameResolutionFailure">
      <summary>The name resolver service could not resolve the proxy host name.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.UnknownError">
      <summary>An exception of unknown type has occurred.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded">
      <summary>A message was received that exceeded the specified limit when sending a request or receiving a response from the server.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.CacheEntryNotFound">
      <summary>The specified cache entry was not found.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByCachePolicy">
      <summary>The request was not permitted by the cache policy. In general, this occurs when a request is not cacheable and the effective policy prohibits sending the request to the server. You might receive this status if a request method implies the presence of a request body, a request method requires direct interaction with the server, or a request contains a conditional header.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByProxy">
      <summary>This request was not permitted by the proxy.</summary>
    </member>
    <member name="T:System.Net.WebHeaderCollection">
      <summary>Contains protocol headers associated with a request or response.</summary>
    </member>
    <member name="M:System.Net.WebHeaderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebHeaderCollection" /> class.</summary>
    </member>
    <member name="M:System.Net.WebHeaderCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebHeaderCollection" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> containing the information required to serialize the <see cref="T:System.Net.WebHeaderCollection" />. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> containing the source of the serialized stream associated with the new <see cref="T:System.Net.WebHeaderCollection" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="headerName" /> contains invalid characters. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="headerName" /> is a null reference or <see cref="F:System.String.Empty" />. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Add(System.Net.HttpRequestHeader,System.String)">
      <summary>Inserts the specified header with the specified value into the collection.</summary>
      <param name="header">The header to add to the collection. </param>
      <param name="value">The content of the header. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="value" /> is greater than 65535. </exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.WebHeaderCollection" /> instance does not allow instances of <see cref="T:System.Net.HttpRequestHeader" />. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Add(System.Net.HttpResponseHeader,System.String)">
      <summary>Inserts the specified header with the specified value into the collection.</summary>
      <param name="header">The header to add to the collection. </param>
      <param name="value">The content of the header. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="value" /> is greater than 65535. </exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.WebHeaderCollection" /> instance does not allow instances of <see cref="T:System.Net.HttpResponseHeader" />. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Add(System.String)">
      <summary>Inserts the specified header into the collection.</summary>
      <param name="header">The header to add, with the name and value separated by a colon. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="header" /> is null or <see cref="F:System.String.Empty" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="header" /> does not contain a colon (:) character.The length of <paramref name="value" /> is greater than 65535.-or- The name part of <paramref name="header" /> is <see cref="F:System.String.Empty" /> or contains invalid characters.-or- <paramref name="header" /> is a restricted header that should be set with a property.-or- The value part of <paramref name="header" /> contains invalid characters. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length the string after the colon (:) is greater than 65535. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Add(System.String,System.String)">
      <summary>Inserts a header with the specified name and value into the collection.</summary>
      <param name="name">The header to add to the collection. </param>
      <param name="value">The content of the header. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null, <see cref="F:System.String.Empty" />, or contains invalid characters.-or- <paramref name="name" /> is a restricted header that must be set with a property setting.-or- <paramref name="value" /> contains invalid characters. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="value" /> is greater than 65535. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.AddWithoutValidate(System.String,System.String)">
      <summary>Inserts a header into the collection without checking whether the header is on the restricted header list.</summary>
      <param name="headerName">The header to add to the collection. </param>
      <param name="headerValue">The content of the header. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="headerName" /> is null, <see cref="F:System.String.Empty" />, or contains invalid characters.-or- <paramref name="headerValue" /> contains invalid characters. </exception>
    </member>
    <member name="P:System.Net.WebHeaderCollection.AllKeys">
      <summary>Gets all header names (keys) in the collection.</summary>
      <returns>An array of type <see cref="T:System.String" /> containing all header names in a Web request.</returns>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Clear">
      <summary>Removes all headers from the collection.</summary>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Count">
      <summary>Gets the number of headers in the collection.</summary>
      <returns>An <see cref="T:System.Int32" /> indicating the number of headers in a request.</returns>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Get(System.Int32)">
      <summary>Get the value of a particular header in the collection, specified by an index into the collection.</summary>
      <returns>A <see cref="T:System.String" /> containing the value of the specified header.</returns>
      <param name="index">The zero-based index of the key to get from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is negative. -or-<paramref name="index" /> exceeds the size of the collection.</exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Get(System.String)">
      <summary>Get the value of a particular header in the collection, specified by the name of the header.</summary>
      <returns>A <see cref="T:System.String" /> holding the value of the specified header.</returns>
      <param name="name">The name of the Web header.</param>
    </member>
    <member name="M:System.Net.WebHeaderCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.Net.WebHeaderCollection" /> instance.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Net.WebHeaderCollection" />.</returns>
    </member>
    <member name="M:System.Net.WebHeaderCollection.GetKey(System.Int32)">
      <summary>Get the header name at the specified position in the collection.</summary>
      <returns>A <see cref="T:System.String" /> holding the header name.</returns>
      <param name="index">The zero-based index of the key to get from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is negative. -or-<paramref name="index" /> exceeds the size of the collection.</exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</param>
    </member>
    <member name="M:System.Net.WebHeaderCollection.GetValues(System.Int32)">
      <summary>Gets an array of header values stored in the <paramref name="index" /> position of the header collection.</summary>
      <returns>An array of header strings.</returns>
      <param name="index">The header index to return.</param>
    </member>
    <member name="M:System.Net.WebHeaderCollection.GetValues(System.String)">
      <summary>Gets an array of header values stored in a header.</summary>
      <returns>An array of header strings.</returns>
      <param name="header">The header to return. </param>
    </member>
    <member name="M:System.Net.WebHeaderCollection.IsRestricted(System.String)">
      <summary>Tests whether the specified HTTP header can be set for the request.</summary>
      <returns>true if the header is restricted; otherwise false.</returns>
      <param name="headerName">The header to test. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="headerName" /> is null or <see cref="F:System.String.Empty" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="headerName" /> contains invalid characters. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.IsRestricted(System.String,System.Boolean)">
      <summary>Tests whether the specified HTTP header can be set for the request or the response.</summary>
      <returns>true if the header is restricted; otherwise, false.</returns>
      <param name="headerName">The header to test.</param>
      <param name="response">Does the Framework test the response or the request?</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="headerName" /> is null or <see cref="F:System.String.Empty" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="headerName" /> contains invalid characters. </exception>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Item(System.Net.HttpRequestHeader)">
      <summary>Gets or sets the specified request header.</summary>
      <returns>A <see cref="T:System.String" /> instance containing the specified header value.</returns>
      <param name="header">The request header value.</param>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.WebHeaderCollection" /> instance does not allow instances of <see cref="T:System.Net.HttpRequestHeader" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Item(System.Net.HttpResponseHeader)">
      <summary>Gets or sets the specified response header.</summary>
      <returns>A <see cref="T:System.String" /> instance containing the specified header.</returns>
      <param name="header">The response header value.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="value" /> is greater than 65535. </exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.WebHeaderCollection" /> instance does not allow instances of <see cref="T:System.Net.HttpResponseHeader" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Keys">
      <summary>Gets the collection of header names (keys) in the collection.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> containing all header names in a Web request.</returns>
    </member>
    <member name="M:System.Net.WebHeaderCollection.OnDeserialization(System.Object)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</summary>
      <param name="sender">The source of the deserialization event.</param>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Remove(System.Net.HttpRequestHeader)">
      <summary>Removes the specified header from the collection.</summary>
      <param name="header">The <see cref="T:System.Net.HttpRequestHeader" /> instance to remove from the collection. </param>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.WebHeaderCollection" /> instance does not allow instances of <see cref="T:System.Net.HttpRequestHeader" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Remove(System.Net.HttpResponseHeader)">
      <summary>Removes the specified header from the collection.</summary>
      <param name="header">The <see cref="T:System.Net.HttpResponseHeader" /> instance to remove from the collection. </param>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.WebHeaderCollection" /> instance does not allow instances of <see cref="T:System.Net.HttpResponseHeader" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Remove(System.String)">
      <summary>Removes the specified header from the collection.</summary>
      <param name="name">The name of the header to remove from the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null<see cref="F:System.String.Empty" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is a restricted header.-or- <paramref name="name" /> contains invalid characters. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Set(System.Net.HttpRequestHeader,System.String)">
      <summary>Sets the specified header to the specified value.</summary>
      <param name="header">The <see cref="T:System.Net.HttpRequestHeader" /> value to set. </param>
      <param name="value">The content of the header to set. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="value" /> is greater than 65535. </exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.WebHeaderCollection" /> instance does not allow instances of <see cref="T:System.Net.HttpRequestHeader" />. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Set(System.Net.HttpResponseHeader,System.String)">
      <summary>Sets the specified header to the specified value.</summary>
      <param name="header">The <see cref="T:System.Net.HttpResponseHeader" /> value to set. </param>
      <param name="value">The content of the header to set. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="value" /> is greater than 65535. </exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.WebHeaderCollection" /> instance does not allow instances of <see cref="T:System.Net.HttpResponseHeader" />. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.Set(System.String,System.String)">
      <summary>Sets the specified header to the specified value.</summary>
      <param name="name">The header to set. </param>
      <param name="value">The content of the header to set. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null or <see cref="F:System.String.Empty" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="value" /> is greater than 65535. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is a restricted header.-or- <paramref name="name" /> or <paramref name="value" /> contain invalid characters. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes this instance into the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
      <param name="serializationInfo">The object into which this <see cref="T:System.Net.WebHeaderCollection" /> will be serialized. </param>
      <param name="streamingContext">The destination of the serialization. </param>
    </member>
    <member name="M:System.Net.WebHeaderCollection.ToByteArray">
      <summary>Converts the <see cref="T:System.Net.WebHeaderCollection" /> to a byte array..</summary>
      <returns>A <see cref="T:System.Byte" /> array holding the header collection.</returns>
    </member>
    <member name="M:System.Net.WebHeaderCollection.ToString">
      <summary>Obsolete.</summary>
      <returns>The <see cref="T:System.String" /> representation of the collection.</returns>
    </member>
    <member name="T:System.Net.WebPermission">
      <summary>Controls rights to access HTTP Internet resources.</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Net.WebPermission" /> class.</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebPermission" /> class with the specified access rights for the specified URI.</summary>
      <param name="access">A NetworkAccess value that indicates what kind of access to grant to the specified URI. <see cref="F:System.Net.NetworkAccess.Accept" /> indicates that the application is allowed to accept connections from the Internet on a local resource. <see cref="F:System.Net.NetworkAccess.Connect" /> indicates that the application is allowed to connect to specific Internet resources. </param>
      <param name="uriString">A URI string to which access rights are granted. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> is null. </exception>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebPermission" /> class with the specified access rights for the specified URI regular expression.</summary>
      <param name="access">A <see cref="T:System.Net.NetworkAccess" /> value that indicates what kind of access to grant to the specified URI. <see cref="F:System.Net.NetworkAccess.Accept" /> indicates that the application is allowed to accept connections from the Internet on a local resource. <see cref="F:System.Net.NetworkAccess.Connect" /> indicates that the application is allowed to connect to specific Internet resources. </param>
      <param name="uriRegex">A regular expression that describes the URI to which access is to be granted. </param>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Creates a new instance of the <see cref="T:System.Net.WebPermission" /> class that passes all demands or fails all demands.</summary>
      <param name="state">A <see cref="T:System.Security.Permissions.PermissionState" /> value. </param>
    </member>
    <member name="P:System.Net.WebPermission.AcceptList">
      <summary>This property returns an enumeration of a single accept permissions held by this <see cref="T:System.Net.WebPermission" />. The possible objects types contained in the returned enumeration are <see cref="T:System.String" /> and <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>The <see cref="T:System.Collections.IEnumerator" /> interface that contains accept permissions.</returns>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
      <summary>Adds the specified URI string with the specified access rights to the current <see cref="T:System.Net.WebPermission" />.</summary>
      <param name="access">A <see cref="T:System.Net.NetworkAccess" /> that specifies the access rights that are granted to the URI. </param>
      <param name="uriString">A string that describes the URI to which access rights are granted. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> is null. </exception>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>Adds the specified URI with the specified access rights to the current <see cref="T:System.Net.WebPermission" />.</summary>
      <param name="access">A NetworkAccess that specifies the access rights that are granted to the URI. </param>
      <param name="uriRegex">A regular expression that describes the set of URIs to which access rights are granted. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="uriRegex" /> parameter is null. </exception>
    </member>
    <member name="P:System.Net.WebPermission.ConnectList">
      <summary>This property returns an enumeration of a single connect permissions held by this <see cref="T:System.Net.WebPermission" />. The possible objects types contained in the returned enumeration are <see cref="T:System.String" /> and <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>The <see cref="T:System.Collections.IEnumerator" /> interface that contains connect permissions.</returns>
    </member>
    <member name="M:System.Net.WebPermission.Copy">
      <summary>Creates a copy of a <see cref="T:System.Net.WebPermission" />.</summary>
      <returns>A new instance of the <see cref="T:System.Net.WebPermission" /> class that has the same values as the original. </returns>
    </member>
    <member name="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a <see cref="T:System.Net.WebPermission" /> from an XML encoding.</summary>
      <param name="securityElement">The XML encoding from which to reconstruct the <see cref="T:System.Net.WebPermission" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="securityElement" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> is not a permission element for this type. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
      <summary>Returns the logical intersection of two <see cref="T:System.Net.WebPermission" /> instances.</summary>
      <returns>A new <see cref="T:System.Net.WebPermission" /> that represents the intersection of the current instance and the <paramref name="target" /> parameter. If the intersection is empty, the method returns null.</returns>
      <param name="target">The <see cref="T:System.Net.WebPermission" /> to compare with the current instance. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not null or of type <see cref="T:System.Net.WebPermission" /></exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determines whether the current <see cref="T:System.Net.WebPermission" /> is a subset of the specified object.</summary>
      <returns>true if the current instance is a subset of the <paramref name="target" /> parameter; otherwise, false. If the target is null, the method returns true for an empty current permission that is not unrestricted and false otherwise.</returns>
      <param name="target">The <see cref="T:System.Net.WebPermission" /> to compare to the current <see cref="T:System.Net.WebPermission" />. </param>
      <exception cref="T:System.ArgumentException">The target parameter is not an instance of <see cref="T:System.Net.WebPermission" />. </exception>
      <exception cref="T:System.NotSupportedException">The current instance contains a Regex-encoded right and there is not exactly the same right found in the target instance. </exception>
    </member>
    <member name="M:System.Net.WebPermission.IsUnrestricted">
      <summary>Checks the overall permission state of the <see cref="T:System.Net.WebPermission" />.</summary>
      <returns>true if the <see cref="T:System.Net.WebPermission" /> was created with the <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.WebPermission.ToXml">
      <summary>Creates an XML encoding of a <see cref="T:System.Net.WebPermission" /> and its current state.</summary>
      <returns>A <see cref="T:System.Security.SecurityElement" /> that contains an XML-encoded representation of the <see cref="T:System.Net.WebPermission" />, including state information.</returns>
    </member>
    <member name="M:System.Net.WebPermission.Union(System.Security.IPermission)">
      <summary>Returns the logical union between two instances of the <see cref="T:System.Net.WebPermission" /> class.</summary>
      <returns>A <see cref="T:System.Net.WebPermission" /> that represents the union of the current instance and the <paramref name="target" /> parameter. If either WebPermission is <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />, the method returns a <see cref="T:System.Net.WebPermission" /> that is <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. If the target is null, the method returns a copy of the current <see cref="T:System.Net.WebPermission" />.</returns>
      <param name="target">The <see cref="T:System.Net.WebPermission" /> to combine with the current <see cref="T:System.Net.WebPermission" />. </param>
      <exception cref="T:System.ArgumentException">target is not null or of type <see cref="T:System.Net.WebPermission" />. </exception>
    </member>
    <member name="T:System.Net.WebPermissionAttribute">
      <summary>Specifies permission to access Internet resources. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebPermissionAttribute" /> class with a value that specifies the security actions that can be performed on this class.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> is not a valid <see cref="T:System.Security.Permissions.SecurityAction" /> value. </exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Accept">
      <summary>Gets or sets the URI string accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
      <returns>A string containing the URI accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.Accept" /> is not null when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement. </exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.AcceptPattern">
      <summary>Gets or sets a regular expression pattern that describes the URI accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
      <returns>A string containing a regular expression pattern that describes the URI accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />. This string must be escaped according to the rules for encoding a <see cref="T:System.Text.RegularExpressions.Regex" /> constructor string.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.AcceptPattern" /> is not null when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Connect">
      <summary>Gets or sets the URI connection string controlled by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
      <returns>A string containing the URI connection controlled by the current <see cref="T:System.Net.WebPermissionAttribute" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.Connect" /> is not null when you attempt to set the value. If you wish to specify more than one Connect URI, use an additional attribute declaration statement. </exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.ConnectPattern">
      <summary>Gets or sets a regular expression pattern that describes the URI connection controlled by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
      <returns>A string containing a regular expression pattern that describes the URI connection controlled by this <see cref="T:System.Net.WebPermissionAttribute" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.ConnectPattern" /> is not null when you attempt to set the value. If you wish to specify more than one connect URI, use an additional attribute declaration statement. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.CreatePermission">
      <summary>Creates and returns a new instance of the <see cref="T:System.Net.WebPermission" /> class.</summary>
      <returns>A <see cref="T:System.Net.WebPermission" /> corresponding to the security declaration.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.WebProxy">
      <summary>Contains HTTP proxy settings for the <see cref="T:System.Net.WebRequest" /> class.</summary>
    </member>
    <member name="M:System.Net.WebProxy.#ctor">
      <summary>Initializes an empty instance of the <see cref="T:System.Net.WebProxy" /> class.</summary>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Net.WebProxy" /> class using previously serialized content.</summary>
      <param name="serializationInfo">The serialization data. </param>
      <param name="streamingContext">The context for the serialized data. </param>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI.</summary>
      <param name="Address">The URI of the proxy server. </param>
      <exception cref="T:System.UriFormatException">
        <paramref name="Address" /> is an invalid URI. </exception>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI and bypass setting.</summary>
      <param name="Address">The URI of the proxy server. </param>
      <param name="BypassOnLocal">true to bypass the proxy for local addresses; otherwise, false. </param>
      <exception cref="T:System.UriFormatException">
        <paramref name="Address" /> is an invalid URI. </exception>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI, bypass setting, and list of URIs to bypass.</summary>
      <param name="Address">The URI of the proxy server. </param>
      <param name="BypassOnLocal">true to bypass the proxy for local addresses; otherwise, false. </param>
      <param name="BypassList">An array of regular expression strings that contain the URIs of the servers to bypass. </param>
      <exception cref="T:System.UriFormatException">
        <paramref name="Address" /> is an invalid URI. </exception>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI, bypass setting, list of URIs to bypass, and credentials.</summary>
      <param name="Address">The URI of the proxy server. </param>
      <param name="BypassOnLocal">true to bypass the proxy for local addresses; otherwise, false. </param>
      <param name="BypassList">An array of regular expression strings that contains the URIs of the servers to bypass. </param>
      <param name="Credentials">An <see cref="T:System.Net.ICredentials" /> instance to submit to the proxy server for authentication. </param>
      <exception cref="T:System.UriFormatException">
        <paramref name="Address" /> is an invalid URI. </exception>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified host and port number.</summary>
      <param name="Host">The name of the proxy host. </param>
      <param name="Port">The port number on <paramref name="Host" /> to use. </param>
      <exception cref="T:System.UriFormatException">The URI formed by combining <paramref name="Host" /> and <paramref name="Port" /> is not a valid URI. </exception>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class from the specified <see cref="T:System.Uri" /> instance.</summary>
      <param name="Address">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server. </param>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the <see cref="T:System.Uri" /> instance and bypass setting.</summary>
      <param name="Address">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server. </param>
      <param name="BypassOnLocal">true to bypass the proxy for local addresses; otherwise, false. </param>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified <see cref="T:System.Uri" /> instance, bypass setting, and list of URIs to bypass.</summary>
      <param name="Address">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server. </param>
      <param name="BypassOnLocal">true to bypass the proxy for local addresses; otherwise, false. </param>
      <param name="BypassList">An array of regular expression strings that contains the URIs of the servers to bypass. </param>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified <see cref="T:System.Uri" /> instance, bypass setting, list of URIs to bypass, and credentials.</summary>
      <param name="Address">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server. </param>
      <param name="BypassOnLocal">true to bypass the proxy for local addresses; otherwise, false. </param>
      <param name="BypassList">An array of regular expression strings that contains the URIs of the servers to bypass. </param>
      <param name="Credentials">An <see cref="T:System.Net.ICredentials" /> instance to submit to the proxy server for authentication. </param>
    </member>
    <member name="P:System.Net.WebProxy.Address">
      <summary>Gets or sets the address of the proxy server.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</returns>
    </member>
    <member name="P:System.Net.WebProxy.BypassArrayList">
      <summary>Gets a list of addresses that do not use the proxy server.</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> that contains a list of <see cref="P:System.Net.WebProxy.BypassList" /> arrays that represents URIs that do not use the proxy server when accessed.</returns>
    </member>
    <member name="P:System.Net.WebProxy.BypassList">
      <summary>Gets or sets an array of addresses that do not use the proxy server.</summary>
      <returns>An array that contains a list of regular expressions that describe URIs that do not use the proxy server when accessed.</returns>
    </member>
    <member name="P:System.Net.WebProxy.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>true to bypass the proxy server for local addresses; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Net.WebProxy.Credentials">
      <summary>Gets or sets the credentials to submit to the proxy server for authentication.</summary>
      <returns>An <see cref="T:System.Net.ICredentials" /> instance that contains the credentials to submit to the proxy server for authentication.</returns>
      <exception cref="T:System.InvalidOperationException">You attempted to set this property when the <see cref="P:System.Net.WebProxy.UseDefaultCredentials" />  property was set to true. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebProxy.GetDefaultProxy">
      <summary>Reads the Internet Explorer nondynamic proxy settings.</summary>
      <returns>A <see cref="T:System.Net.WebProxy" /> instance that contains the nondynamic proxy settings from Internet Explorer 5.5 and later.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data that is needed to serialize the target object.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</param>
    </member>
    <member name="M:System.Net.WebProxy.GetProxy(System.Uri)">
      <summary>Returns the proxied URI for a request.</summary>
      <returns>The <see cref="T:System.Uri" /> instance of the Internet resource, if the resource is on the bypass list; otherwise, the <see cref="T:System.Uri" /> instance of the proxy.</returns>
      <param name="destination">The <see cref="T:System.Uri" /> instance of the requested Internet resource. </param>
    </member>
    <member name="M:System.Net.WebProxy.IsBypassed(System.Uri)">
      <summary>Indicates whether to use the proxy server for the specified host.</summary>
      <returns>true if the proxy server should not be used for <paramref name="host" />; otherwise, false.</returns>
      <param name="host">The <see cref="T:System.Uri" /> instance of the host to check for proxy use. </param>
    </member>
    <member name="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates the serialization data and context that are used by the system to serialize a <see cref="T:System.Net.WebProxy" /> object.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that indicates the destination for this serialization. </param>
    </member>
    <member name="P:System.Net.WebProxy.UseDefaultCredentials">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that controls whether the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</summary>
      <returns>true if the default credentials are used; otherwise, false. The default value is false.</returns>
      <exception cref="T:System.InvalidOperationException">You attempted to set this property when the <see cref="P:System.Net.WebProxy.Credentials" /> property contains credentials other than the default credentials. For more information, see the Remarks section.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="USERNAME" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.WebRequest">
      <summary>Makes a request to a Uniform Resource Identifier (URI). This is an abstract class.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.WebRequest" /> instance. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the source of the serialized stream associated with the new <see cref="T:System.Net.WebRequest" /> instance. </param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the constructor, when the constructor is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebRequest.Abort">
      <summary>Aborts the Request </summary>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.AuthenticationLevel">
      <summary>Gets or sets values indicating the level of authentication and impersonation used for this request.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Net.Security.AuthenticationLevel" /> values. The default value is <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.In mutual authentication, both the client and server present credentials to establish their identity. The <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> and <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> values are relevant for Kerberos authentication. Kerberos authentication can be supported directly, or can be used if the Negotiate security protocol is used to select the actual security protocol. For more information about authentication protocols, see Internet Authentication.To determine whether mutual authentication occurred, check the <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> property. If you specify the <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> authentication flag value and mutual authentication does not occur, your application will receive an <see cref="T:System.IO.IOException" /> with a <see cref="T:System.Net.ProtocolViolationException" /> inner exception indicating that mutual authentication failed.</returns>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>When overridden in a descendant class, provides an asynchronous version of the <see cref="M:System.Net.WebRequest.GetRequestStream" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object containing state information for this asynchronous request. </param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>When overridden in a descendant class, begins an asynchronous request for an Internet resource.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object containing state information for this asynchronous request. </param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebRequest.CachePolicy">
      <summary>Gets or sets the cache policy for this request.</summary>
      <returns>A <see cref="T:System.Net.Cache.RequestCachePolicy" /> object that defines a cache policy.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ConnectionGroupName">
      <summary>When overridden in a descendant class, gets or sets the name of the connection group for the request.</summary>
      <returns>The name of the connection group for the request.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.ContentLength">
      <summary>When overridden in a descendant class, gets or sets the content length of the request data being sent.</summary>
      <returns>The number of bytes of request data being sent.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.ContentType">
      <summary>When overridden in a descendant class, gets or sets the content type of the request data being sent.</summary>
      <returns>The content type of the request data.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.String)">
      <summary>Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</summary>
      <returns>A <see cref="T:System.Net.WebRequest" /> descendant for the specific URI scheme.</returns>
      <param name="requestUriString">The URI that identifies the Internet resource. </param>
      <exception cref="T:System.NotSupportedException">The request scheme specified in <paramref name="requestUriString" /> has not been registered. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </exception>
      <exception cref="T:System.UriFormatException">The URI specified in <paramref name="requestUriString" /> is not a valid URI. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.Uri)">
      <summary>Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</summary>
      <returns>A <see cref="T:System.Net.WebRequest" /> descendant for the specified URI scheme.</returns>
      <param name="requestUri">A <see cref="T:System.Uri" /> containing the URI of the requested resource. </param>
      <exception cref="T:System.NotSupportedException">The request scheme specified in <paramref name="requestUri" /> is not registered. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.CreateDefault(System.Uri)">
      <summary>Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</summary>
      <returns>A <see cref="T:System.Net.WebRequest" /> descendant for the specified URI scheme.</returns>
      <param name="requestUri">A <see cref="T:System.Uri" /> containing the URI of the requested resource. </param>
      <exception cref="T:System.NotSupportedException">The request scheme specified in <paramref name="requestUri" /> is not registered. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.Credentials">
      <summary>When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.</summary>
      <returns>An <see cref="T:System.Net.ICredentials" /> containing the authentication credentials associated with the request. The default is null.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.DefaultCachePolicy">
      <summary>Gets or sets the default cache policy for this request.</summary>
      <returns>A <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> that specifies the cache policy in effect for this request when no other policy is applicable.</returns>
    </member>
    <member name="P:System.Net.WebRequest.DefaultWebProxy">
      <summary>Gets or sets the global HTTP proxy.</summary>
      <returns>An <see cref="T:System.Net.IWebProxy" /> used by every call to instances of <see cref="T:System.Net.WebRequest" />.</returns>
    </member>
    <member name="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> to write data to.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references a pending request for a stream. </param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>When overridden in a descendant class, returns a <see cref="T:System.Net.WebResponse" />.</summary>
      <returns>A <see cref="T:System.Net.WebResponse" /> that contains a response to the Internet request.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references a pending request for a response. </param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</param>
    </member>
    <member name="M:System.Net.WebRequest.GetRequestStream">
      <summary>When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.GetResponse">
      <summary>When overridden in a descendant class, returns a response to an Internet request.</summary>
      <returns>A <see cref="T:System.Net.WebResponse" /> containing the response to the Internet request.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.GetSystemWebProxy">
      <summary>Returns a proxy configured with the Internet Explorer settings of the currently impersonated user.</summary>
      <returns>An <see cref="T:System.Net.IWebProxy" /> used by every call to instances of <see cref="T:System.Net.WebRequest" />.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Headers">
      <summary>When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> containing the header name/value pairs associated with this request.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.ImpersonationLevel">
      <summary>Gets or sets the impersonation level for the current request.</summary>
      <returns>A <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> value.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Method">
      <summary>When overridden in a descendant class, gets or sets the protocol method to use in this request.</summary>
      <returns>The protocol method to use in this request.</returns>
      <exception cref="T:System.NotImplementedException">If the property is not overridden in a descendant class, any attempt is made to get or set the property. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.PreAuthenticate">
      <summary>When overridden in a descendant class, indicates whether to pre-authenticate the request.</summary>
      <returns>true to pre-authenticate; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.Proxy">
      <summary>When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.</summary>
      <returns>The <see cref="T:System.Net.IWebProxy" /> to use to access the Internet resource.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
      <summary>Registers a <see cref="T:System.Net.WebRequest" /> descendant for the specified URI.</summary>
      <returns>true if registration is successful; otherwise, false.</returns>
      <param name="prefix">The complete URI or URI prefix that the <see cref="T:System.Net.WebRequest" /> descendant services. </param>
      <param name="creator">The create method that the <see cref="T:System.Net.WebRequest" /> calls to create the <see cref="T:System.Net.WebRequest" /> descendant. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> is null-or- <paramref name="creator" /> is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.RequestUri">
      <summary>When overridden in a descendant class, gets the URI of the Internet resource associated with the request.</summary>
      <returns>A <see cref="T:System.Uri" /> representing the resource associated with the request </returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a descendant class, populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the <see cref="T:System.Net.WebRequest" />.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" />, which holds the serialized data for the <see cref="T:System.Net.WebRequest" />. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the destination of the serialized stream associated with the new <see cref="T:System.Net.WebRequest" />. </param>
      <exception cref="T:System.NotImplementedException">An attempt is made to serialize the object, when the interface is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebRequest.Timeout">
      <summary>Gets or sets the length of time, in milliseconds, before the request times out.</summary>
      <returns>The length of time, in milliseconds, until the request times out, or the value <see cref="F:System.Threading.Timeout.Infinite" /> to indicate that the request does not time out. The default value is defined by the descendant class.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.UseDefaultCredentials">
      <summary>When overridden in a descendant class, gets or sets a <see cref="T:System.Boolean" /> value that controls whether <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</summary>
      <returns>true if the default credentials are used; otherwise false. The default value is false.</returns>
      <exception cref="T:System.InvalidOperationException">You attempted to set this property after the request was sent.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.WebRequestMethods">
      <summary>Container class for <see cref="T:System.Net.WebRequestMethods.Ftp" />, <see cref="T:System.Net.WebRequestMethods.File" />, and <see cref="T:System.Net.WebRequestMethods.Http" /> classes. This class cannot be inherited</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.File">
      <summary>Represents the types of file protocol methods that can be used with a FILE request. This class cannot be inherited.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.DownloadFile">
      <summary>Represents the FILE GET protocol method that is used to retrieve a file from a specified location.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.UploadFile">
      <summary>Represents the FILE PUT protocol method that is used to copy a file to a specified location.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Ftp">
      <summary>Represents the types of FTP protocol methods that can be used with an FTP request. This class cannot be inherited.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.AppendFile">
      <summary>Represents the FTP APPE protocol method that is used to append a file to an existing file on an FTP server.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DeleteFile">
      <summary>Represents the FTP DELE protocol method that is used to delete a file on an FTP server.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DownloadFile">
      <summary>Represents the FTP RETR protocol method that is used to download a file from an FTP server.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetDateTimestamp">
      <summary>Represents the FTP MDTM protocol method that is used to retrieve the date-time stamp from a file on an FTP server.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetFileSize">
      <summary>Represents the FTP SIZE protocol method that is used to retrieve the size of a file on an FTP server.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectory">
      <summary>Represents the FTP NLIST protocol method that gets a short listing of the files on an FTP server.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails">
      <summary>Represents the FTP LIST protocol method that gets a detailed listing of the files on an FTP server.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.MakeDirectory">
      <summary>Represents the FTP MKD protocol method creates a directory on an FTP server.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.PrintWorkingDirectory">
      <summary>Represents the FTP PWD protocol method that prints the name of the current working directory.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.RemoveDirectory">
      <summary>Represents the FTP RMD protocol method that removes a directory.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.Rename">
      <summary>Represents the FTP RENAME protocol method that renames a directory.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFile">
      <summary>Represents the FTP STOR protocol method that uploads a file to an FTP server.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFileWithUniqueName">
      <summary>Represents the FTP STOU protocol that uploads a file with a unique name to an FTP server.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Http">
      <summary>Represents the types of HTTP protocol methods that can be used with an HTTP request.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Connect">
      <summary>Represents the HTTP CONNECT protocol method that is used with a proxy that can dynamically switch to tunneling, as in the case of SSL tunneling.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Get">
      <summary>Represents an HTTP GET protocol method. </summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Head">
      <summary>Represents an HTTP HEAD protocol method. The HEAD method is identical to GET except that the server only returns message-headers in the response, without a message-body.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.MkCol">
      <summary>Represents an HTTP MKCOL request that creates a new collection (such as a collection of pages) at the location specified by the request-Uniform Resource Identifier (URI).</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Post">
      <summary>Represents an HTTP POST protocol method that is used to post a new entity as an addition to a URI.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Put">
      <summary>Represents an HTTP PUT protocol method that is used to replace an entity identified by a URI.</summary>
    </member>
    <member name="T:System.Net.WebResponse">
      <summary>Provides a response from a Uniform Resource Identifier (URI). This is an abstract class.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebResponse" /> class.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebResponse" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="serializationInfo">An instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class that contains the information required to serialize the new <see cref="T:System.Net.WebRequest" /> instance. </param>
      <param name="streamingContext">An instance of the <see cref="T:System.Runtime.Serialization.StreamingContext" /> class that indicates the source of the serialized stream that is associated with the new <see cref="T:System.Net.WebRequest" /> instance. </param>
      <exception cref="T:System.NotSupportedException">Any attempt is made to access the constructor, when the constructor is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebResponse.Close">
      <summary>When overridden by a descendant class, closes the response stream.</summary>
      <exception cref="T:System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebResponse.ContentLength">
      <summary>When overridden in a descendant class, gets or sets the content length of data being received.</summary>
      <returns>The number of bytes returned from the Internet resource.</returns>
      <exception cref="T:System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebResponse.ContentType">
      <summary>When overridden in a derived class, gets or sets the content type of the data being received.</summary>
      <returns>A string that contains the content type of the response.</returns>
      <exception cref="T:System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data that is needed to serialize the target object.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization. </param>
    </member>
    <member name="M:System.Net.WebResponse.GetResponseStream">
      <summary>When overridden in a descendant class, returns the data stream from the Internet resource.</summary>
      <returns>An instance of the <see cref="T:System.IO.Stream" /> class for reading data from the Internet resource.</returns>
      <exception cref="T:System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebResponse.Headers">
      <summary>When overridden in a derived class, gets a collection of header name-value pairs associated with this request.</summary>
      <returns>An instance of the <see cref="T:System.Net.WebHeaderCollection" /> class that contains header values associated with this response.</returns>
      <exception cref="T:System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebResponse.IsFromCache">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether this response was obtained from the cache.</summary>
      <returns>true if the response was taken from the cache; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.WebResponse.IsMutuallyAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether mutual authentication occurred.</summary>
      <returns>true if both client and server were authenticated; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.WebResponse.ResponseUri">
      <summary>When overridden in a derived class, gets the URI of the Internet resource that actually responded to the request.</summary>
      <returns>An instance of the <see cref="T:System.Uri" /> class that contains the URI of the Internet resource that actually responded to the request.</returns>
      <exception cref="T:System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebResponse.System#IDisposable#Dispose">
      <summary>When overridden in a derived class, releases all resources used by the <see cref="T:System.Net.WebResponse" />. </summary>
      <exception cref="T:System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data that is needed to serialize <see cref="T:System.Net.WebResponse" />.  </summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that will hold the serialized data for the <see cref="T:System.Net.WebResponse" />. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the destination of the serialized stream that is associated with the new <see cref="T:System.Net.WebResponse" />. </param>
    </member>
    <member name="T:System.Net.WebUtility">
      <summary>Provides methods for encoding and decoding URLs when processing Web requests. </summary>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String)">
      <summary>Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</summary>
      <returns>A decoded string.</returns>
      <param name="value">The string to decode.</param>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
      <summary>Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</summary>
      <param name="value">The string to decode.</param>
      <param name="output">A <see cref="T:System.IO.TextWriter" /> stream of output.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="output" /> parameter cannot be null if the <paramref name="value" /> parameter is not null.  </exception>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String)">
      <summary>Converts a string to an HTML-encoded string.</summary>
      <returns>An encoded string.</returns>
      <param name="value">The string to encode.</param>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
      <summary>Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</summary>
      <param name="value">The string to encode.</param>
      <param name="output">A <see cref="T:System.IO.TextWriter" /> output stream.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="output" /> parameter cannot be null if the <paramref name="value" /> parameter is not null.  </exception>
    </member>
    <member name="T:System.Net.Cache.HttpCacheAgeControl">
      <summary>Specifies the meaning of time values that control caching behavior for resources obtained using <see cref="T:System.Net.HttpWebRequest" /> objects.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.None">
      <summary>For internal use only. The Framework will throw an <see cref="T:System.ArgumentException" /> if you try to use this member.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MinFresh">
      <summary>Content can be taken from the cache if the time remaining before expiration is greater than or equal to the time specified with this value.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAge">
      <summary>Content can be taken from the cache until it is older than the age specified with this value.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxStale">
      <summary>Content can be taken from the cache after it has expired, until the time specified with this value elapses.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh">
      <summary>
        <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" /> and <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale">
      <summary>
        <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" /> and <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCacheLevel">
      <summary>Specifies caching behavior for resources obtained using the Hypertext Transfer protocol (HTTP).</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Default">
      <summary>Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.BypassCache">
      <summary>Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOnly">
      <summary>Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a <see cref="T:System.Net.WebException" /> exception is thrown if the item is not in the client cache.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable">
      <summary>Satisfies a request for a resource from the cache if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Revalidate">
      <summary>Compares the copy of the resource in the cache with the copy on the server. If the copy on the server is newer, it is used to satisfy the request and replaces the copy in the cache. If the copy in the cache is the same as the server copy, the cached copy is used. In the HTTP caching protocol, this is achieved using a conditional request.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Reload">
      <summary>Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the no-cache cache control directive and the no-cache Pragma header.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore">
      <summary>Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the no-cache cache control directive.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly">
      <summary>Satisfies a request for a resource either from the local computer's cache or a remote cache on the local area network. If the request cannot be satisfied, a <see cref="T:System.Net.WebException" /> exception is thrown. In the HTTP caching protocol, this is achieved using the only-if-cached cache control directive.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Refresh">
      <summary>Satisfies a request by using the server or a cache other than the local cache. Before the request can be satisfied by an intermediate cache, that cache must revalidate its cached entry with the server. In the HTTP caching protocol, this is achieved using the max-age = 0 cache control directive and the no-cache Pragma header.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCachePolicy">
      <summary>Defines an application's caching requirements for resources obtained by using <see cref="T:System.Net.HttpWebRequest" /> objects.</summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class. </summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified cache synchronization date.</summary>
      <param name="cacheSyncDate">A <see cref="T:System.DateTime" /> object that specifies the time when resources stored in the cache must be revalidated.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified age control and time values. </summary>
      <param name="cacheAgeControl">One of the following <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> enumeration values: <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />, <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" />, or <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" />.</param>
      <param name="ageOrFreshOrStale">A <see cref="T:System.TimeSpan" /> value that specifies an amount of time. See the Remarks section for more information. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="cacheAgeControl" /> parameter cannot be used with this constructor.</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified maximum age, age control value, and time value.</summary>
      <param name="cacheAgeControl">An <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> value. </param>
      <param name="maxAge">A <see cref="T:System.TimeSpan" /> value that specifies the maximum age for resources.</param>
      <param name="freshOrStale">A <see cref="T:System.TimeSpan" /> value that specifies an amount of time. See the Remarks section for more information.  </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="cacheAgeControl" /> parameter is not valid.</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified maximum age, age control value, time value, and cache synchronization date.</summary>
      <param name="cacheAgeControl">An <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> value. </param>
      <param name="maxAge">A <see cref="T:System.TimeSpan" /> value that specifies the maximum age for resources.</param>
      <param name="freshOrStale">A <see cref="T:System.TimeSpan" /> value that specifies an amount of time. See the Remarks section for more information.  </param>
      <param name="cacheSyncDate">A <see cref="T:System.DateTime" /> object that specifies the time when resources stored in the cache must be revalidated.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified cache policy.</summary>
      <param name="level">An <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> value. </param>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate">
      <summary>Gets the cache synchronization date for this instance.</summary>
      <returns>A <see cref="T:System.DateTime" /> value set to the date specified when this instance was created. If no date was specified, this property's value is <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.Level">
      <summary>Gets the <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> value that was specified when this instance was created.</summary>
      <returns>A <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> value that specifies the cache behavior for resources that were obtained using <see cref="T:System.Net.HttpWebRequest" /> objects.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge">
      <summary>Gets the maximum age permitted for a resource returned from the cache.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that is set to the maximum age value specified when this instance was created. If no date was specified, this property's value is <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale">
      <summary>Gets the maximum staleness value that is permitted for a resource returned from the cache.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that is set to the maximum staleness value specified when this instance was created. If no date was specified, this property's value is <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh">
      <summary>Gets the minimum freshness that is permitted for a resource returned from the cache.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that specifies the minimum freshness specified when this instance was created. If no date was specified, this property's value is <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.ToString">
      <summary>Returns a string representation of this instance.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the property values for this instance.</returns>
    </member>
    <member name="T:System.Net.Cache.RequestCacheLevel">
      <summary>Specifies caching behavior for resources obtained using <see cref="T:System.Net.WebRequest" /> and its derived classes.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Default">
      <summary>Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.BypassCache">
      <summary>Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheOnly">
      <summary>Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a <see cref="T:System.Net.WebException" /> exception is thrown if the item is not in the client cache.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
      <summary>Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Revalidate">
      <summary>Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Reload">
      <summary>Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the no-cache cache control directive and the no-cache Pragma header.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
      <summary>Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the no-cache cache control directive.</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCachePolicy">
      <summary>Defines an application's caching requirements for resources obtained by using <see cref="T:System.Net.WebRequest" /> objects.</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.RequestCachePolicy" /> class. </summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor(System.Net.Cache.RequestCacheLevel)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.RequestCachePolicy" /> class. using the specified cache policy.</summary>
      <param name="level">A <see cref="T:System.Net.Cache.RequestCacheLevel" /> that specifies the cache behavior for resources obtained using <see cref="T:System.Net.WebRequest" /> objects. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">level is not a valid <see cref="T:System.Net.Cache.RequestCacheLevel" />.value.</exception>
    </member>
    <member name="P:System.Net.Cache.RequestCachePolicy.Level">
      <summary>Gets the <see cref="T:System.Net.Cache.RequestCacheLevel" /> value specified when this instance was constructed.</summary>
      <returns>A <see cref="T:System.Net.Cache.RequestCacheLevel" /> value that specifies the cache behavior for resources obtained using <see cref="T:System.Net.WebRequest" /> objects.</returns>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.ToString">
      <summary>Returns a string representation of this instance.</summary>
      <returns>A <see cref="T:System.String" /> containing the <see cref="P:System.Net.Cache.RequestCachePolicy.Level" /> for this instance.</returns>
    </member>
    <member name="T:System.Net.Configuration.AuthenticationModuleElement">
      <summary>Represents the type information for an authentication module. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.AuthenticationModuleElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.AuthenticationModuleElement" /> class. </summary>
    </member>
    <member name="M:System.Net.Configuration.AuthenticationModuleElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.AuthenticationModuleElement" /> class with the specified type information.</summary>
      <param name="typeName">A string that identifies the type and the assembly that contains it.</param>
    </member>
    <member name="P:System.Net.Configuration.AuthenticationModuleElement.Type">
      <summary>Gets or sets the type and assembly information for the current instance.</summary>
      <returns>A string that identifies a type that implements an authentication module or null if no value has been specified.</returns>
    </member>
    <member name="T:System.Net.Configuration.AuthenticationModuleElementCollection">
      <summary>Represents a container for authentication module configuration elements. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.AuthenticationModuleElementCollection" /> class. </summary>
    </member>
    <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.Add(System.Net.Configuration.AuthenticationModuleElement)">
      <summary>Adds an element to the collection.</summary>
      <param name="element">The <see cref="T:System.Net.Configuration.AuthenticationModuleElement" /> to add to the collection.</param>
    </member>
    <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.IndexOf(System.Net.Configuration.AuthenticationModuleElement)">
      <summary>Returns the index of the specified configuration element.</summary>
      <returns>The zero-based index of <paramref name="element" />.</returns>
      <param name="element">A <see cref="T:System.Net.Configuration.AuthenticationModuleElement" />.</param>
    </member>
    <member name="P:System.Net.Configuration.AuthenticationModuleElementCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified position in the collection.</summary>
      <returns>The <see cref="T:System.Net.Configuration.AuthenticationModuleElement" /> at the specified location.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="P:System.Net.Configuration.AuthenticationModuleElementCollection.Item(System.String)">
      <summary>Gets or sets the element with the specified key.</summary>
      <returns>The <see cref="T:System.Net.Configuration.AuthenticationModuleElement" /> with the specified key or null if there is no element with the specified key.</returns>
      <param name="name">The key for an element in the collection. </param>
    </member>
    <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.Remove(System.Net.Configuration.AuthenticationModuleElement)">
      <summary>Removes the specified configuration element from the collection.</summary>
      <param name="element">The <see cref="T:System.Net.Configuration.AuthenticationModuleElement" /> to remove.</param>
    </member>
    <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.Remove(System.String)">
      <summary>Removes the element with the specified key.</summary>
      <param name="name">The key of the element to remove.</param>
    </member>
    <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="T:System.Net.Configuration.AuthenticationModulesSection">
      <summary>Represents the configuration section for authentication modules. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.AuthenticationModulesSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.AuthenticationModulesSection" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.AuthenticationModulesSection.AuthenticationModules">
      <summary>Gets the collection of authentication modules in the section.</summary>
      <returns>A <see cref="T:System.Net.Configuration.AuthenticationModuleElementCollection" /> that contains the registered authentication modules. </returns>
    </member>
    <member name="T:System.Net.Configuration.BypassElement">
      <summary>Represents the address information for resources that are not retrieved using a proxy server. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.BypassElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.BypassElement" /> class. </summary>
    </member>
    <member name="M:System.Net.Configuration.BypassElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.BypassElement" /> class with the specified type information.</summary>
      <param name="address">A string that identifies the address of a resource.</param>
    </member>
    <member name="P:System.Net.Configuration.BypassElement.Address">
      <summary>Gets or sets the addresses of resources that bypass the proxy server.</summary>
      <returns>A string that identifies a resource.</returns>
    </member>
    <member name="T:System.Net.Configuration.BypassElementCollection">
      <summary>Represents a container for the addresses of resources that bypass the proxy server. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.BypassElementCollection.#ctor">
      <summary>Initializes an empty instance of the <see cref="T:System.Net.Configuration.BypassElementCollection" /> class. </summary>
    </member>
    <member name="M:System.Net.Configuration.BypassElementCollection.Add(System.Net.Configuration.BypassElement)">
      <summary>Adds an element to the collection.</summary>
      <param name="element">The <see cref="T:System.Net.Configuration.BypassElement" /> to add to the collection.</param>
    </member>
    <member name="M:System.Net.Configuration.BypassElementCollection.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.Net.Configuration.BypassElementCollection.IndexOf(System.Net.Configuration.BypassElement)">
      <summary>Returns the index of the specified configuration element.</summary>
      <returns>The zero-based index of <paramref name="element" />.</returns>
      <param name="element">A <see cref="T:System.Net.Configuration.BypassElement" />.</param>
    </member>
    <member name="P:System.Net.Configuration.BypassElementCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified position in the collection.</summary>
      <returns>The <see cref="T:System.Net.Configuration.BypassElement" /> at the specified location.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="P:System.Net.Configuration.BypassElementCollection.Item(System.String)">
      <summary>Gets or sets the element with the specified key.</summary>
      <returns>The <see cref="T:System.Net.Configuration.BypassElement" /> with the specified key, or null if there is no element with the specified key.</returns>
      <param name="name">The key for an element in the collection. </param>
    </member>
    <member name="M:System.Net.Configuration.BypassElementCollection.Remove(System.Net.Configuration.BypassElement)">
      <summary>Removes the specified configuration element from the collection.</summary>
      <param name="element">The <see cref="T:System.Net.Configuration.BypassElement" /> to remove.</param>
    </member>
    <member name="M:System.Net.Configuration.BypassElementCollection.Remove(System.String)">
      <summary>Removes the element with the specified key.</summary>
      <param name="name">The key of the element to remove.</param>
    </member>
    <member name="M:System.Net.Configuration.BypassElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="T:System.Net.Configuration.ConnectionManagementElement">
      <summary>Represents the maximum number of connections to a remote computer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.ConnectionManagementElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.ConnectionManagementElement" /> class. </summary>
    </member>
    <member name="M:System.Net.Configuration.ConnectionManagementElement.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.ConnectionManagementElement" /> class with the specified address and connection limit information.</summary>
      <param name="address">A string that identifies the address of a remote computer.</param>
      <param name="maxConnection">An integer that identifies the maximum number of connections allowed to <paramref name="address" /> from the local computer.</param>
    </member>
    <member name="P:System.Net.Configuration.ConnectionManagementElement.Address">
      <summary>Gets or sets the address for remote computers.</summary>
      <returns>A string that contains a regular expression describing an IP address or DNS name.</returns>
    </member>
    <member name="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection">
      <summary>Gets or sets the maximum number of connections that can be made to a remote computer.</summary>
      <returns>An integer that specifies the maximum number of connections.</returns>
    </member>
    <member name="T:System.Net.Configuration.ConnectionManagementElementCollection">
      <summary>Represents a container for connection management configuration elements. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.ConnectionManagementElementCollection" /> class. </summary>
    </member>
    <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.Add(System.Net.Configuration.ConnectionManagementElement)">
      <summary>Adds an element to the collection.</summary>
      <param name="element">The <see cref="T:System.Net.Configuration.ConnectionManagementElement" /> to add to the collection.</param>
    </member>
    <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.IndexOf(System.Net.Configuration.ConnectionManagementElement)">
      <summary>Returns the index of the specified configuration element.</summary>
      <returns>The zero-based index of <paramref name="element" />.</returns>
      <param name="element">A <see cref="T:System.Net.Configuration.ConnectionManagementElement" />.</param>
    </member>
    <member name="P:System.Net.Configuration.ConnectionManagementElementCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified position in the collection.</summary>
      <returns>The <see cref="T:System.Net.Configuration.ConnectionManagementElement" /> at the specified location.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="P:System.Net.Configuration.ConnectionManagementElementCollection.Item(System.String)">
      <summary>Gets or sets the element with the specified key.</summary>
      <returns>The <see cref="T:System.Net.Configuration.ConnectionManagementElement" /> with the specified key or null if there is no element with the specified key.</returns>
      <param name="name">The key for an element in the collection. </param>
    </member>
    <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.Remove(System.Net.Configuration.ConnectionManagementElement)">
      <summary>Removes the specified configuration element from the collection.</summary>
      <param name="element">The <see cref="T:System.Net.Configuration.ConnectionManagementElement" /> to remove.</param>
    </member>
    <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.Remove(System.String)">
      <summary>Removes the element with the specified key.</summary>
      <param name="name">The key of the element to remove.</param>
    </member>
    <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="T:System.Net.Configuration.ConnectionManagementSection">
      <summary>Represents the configuration section for connection management. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.ConnectionManagementSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.ConnectionManagementSection" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.ConnectionManagementSection.ConnectionManagement">
      <summary>Gets the collection of connection management objects in the section.</summary>
      <returns>A <see cref="T:System.Net.Configuration.ConnectionManagementElementCollection" /> that contains the connection management information for the local computer. </returns>
    </member>
    <member name="T:System.Net.Configuration.DefaultProxySection">
      <summary>Represents the configuration section for Web proxy server usage. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.DefaultProxySection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.DefaultProxySection" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.DefaultProxySection.BypassList">
      <summary>Gets the collection of resources that are not obtained using the Web proxy server.</summary>
      <returns>A <see cref="T:System.Net.Configuration.BypassElementCollection" /> that contains the addresses of resources that bypass the Web proxy server. </returns>
    </member>
    <member name="P:System.Net.Configuration.DefaultProxySection.Enabled">
      <summary>Gets or sets whether a Web proxy is used.</summary>
      <returns>true if a Web proxy will be used; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Configuration.DefaultProxySection.Module">
      <summary>Gets the type information for a custom Web proxy implementation.</summary>
      <returns>A <see cref="T:System.Net.Configuration.ModuleElement" />. </returns>
    </member>
    <member name="P:System.Net.Configuration.DefaultProxySection.Proxy">
      <summary>Gets the URI that identifies the Web proxy server to use.</summary>
      <returns>A <see cref="T:System.Net.Configuration.ProxyElement" />. </returns>
    </member>
    <member name="P:System.Net.Configuration.DefaultProxySection.UseDefaultCredentials">
      <summary>Gets or sets whether default credentials are to be used to access a Web proxy server.</summary>
      <returns>true if default credentials are to be used; otherwise, false.</returns>
    </member>
    <member name="T:System.Net.Configuration.FtpCachePolicyElement">
      <summary>Represents the default FTP cache policy for network resources. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.FtpCachePolicyElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.FtpCachePolicyElement" /> class.</summary>
    </member>
    <member name="P:System.Net.Configuration.FtpCachePolicyElement.PolicyLevel">
      <summary>Gets or sets FTP caching behavior for the local machine.</summary>
      <returns>A <see cref="T:System.Net.Cache.RequestCacheLevel" /> value that specifies the cache behavior.</returns>
    </member>
    <member name="T:System.Net.Configuration.HttpCachePolicyElement">
      <summary>Represents the default HTTP cache policy for network resources. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.HttpCachePolicyElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.HttpCachePolicyElement" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.HttpCachePolicyElement.MaximumAge">
      <summary>Gets or sets the maximum age permitted for a resource returned from the cache.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that specifies the maximum age for cached resources specified in the configuration file.</returns>
    </member>
    <member name="P:System.Net.Configuration.HttpCachePolicyElement.MaximumStale">
      <summary>Gets or sets the maximum staleness value permitted for a resource returned from the cache.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that is set to the maximum staleness value specified in the configuration file.</returns>
    </member>
    <member name="P:System.Net.Configuration.HttpCachePolicyElement.MinimumFresh">
      <summary>Gets or sets the minimum freshness permitted for a resource returned from the cache.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that specifies the minimum freshness specified in the configuration file.</returns>
    </member>
    <member name="P:System.Net.Configuration.HttpCachePolicyElement.PolicyLevel">
      <summary>Gets or sets HTTP caching behavior for the local machine.</summary>
      <returns>A <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> value that specifies the cache behavior.</returns>
    </member>
    <member name="T:System.Net.Configuration.HttpListenerElement">
      <summary>Represents the HttpListener element in the configuration file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.HttpListenerElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.HttpListenerElement" /> class.</summary>
    </member>
    <member name="P:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl">
      <summary>Gets a value that indicates if <see cref="T:System.Net.HttpListener" /> uses the raw unescaped URI instead of the converted URI.</summary>
      <returns>A Boolean value that indicates if <see cref="T:System.Net.HttpListener" /> uses the raw unescaped URI, rather than the converted URI.</returns>
    </member>
    <member name="T:System.Net.Configuration.HttpWebRequestElement">
      <summary>Represents the maximum length for response headers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.HttpWebRequestElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.HttpWebRequestElement" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.HttpWebRequestElement.MaximumErrorResponseLength">
      <summary>Gets or sets the maximum allowed length of an error response.</summary>
      <returns>A 32-bit signed integer containing the maximum length in kilobytes (1024 bytes) of the error response. The default value is 64.</returns>
    </member>
    <member name="P:System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength">
      <summary>Gets or sets the maximum allowed length of the response headers.</summary>
      <returns>A 32-bit signed integer containing the maximum length in kilobytes (1024 bytes) of the response headers. The default value is 64.</returns>
    </member>
    <member name="P:System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength">
      <summary>Gets or sets the maximum length of an upload in response to an unauthorized error code.</summary>
      <returns>A 32-bit signed integer containing the maximum length (in bytes) of an upload in respons to an unauthorized error code. A value of -1 indicates that no size limit will be imposed on the upload. The default value is -1.</returns>
    </member>
    <member name="P:System.Net.Configuration.HttpWebRequestElement.UseUnsafeHeaderParsing">
      <summary>Setting this property ignores validation errors that occur during HTTP parsing.</summary>
      <returns>Boolean that indicates whether this property has been set. </returns>
    </member>
    <member name="T:System.Net.Configuration.Ipv6Element">
      <summary>Determines whether Internet Protocol version 6 is enabled on the local computer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.Ipv6Element.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.Ipv6Element" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.Ipv6Element.Enabled">
      <summary>Gets or sets a Boolean value that indicates whether Internet Protocol version 6 is enabled on the local computer.</summary>
      <returns>true if IPv6 is enabled; otherwise, false.</returns>
    </member>
    <member name="T:System.Net.Configuration.MailSettingsSectionGroup">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.MailSettingsSectionGroup" /> class.</summary>
    </member>
    <member name="M:System.Net.Configuration.MailSettingsSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.MailSettingsSectionGroup" /> class.</summary>
    </member>
    <member name="P:System.Net.Configuration.MailSettingsSectionGroup.Smtp">
      <summary>Gets the SMTP settings for the local computer.</summary>
      <returns>A <see cref="T:System.Net.Configuration.SmtpSection" /> object that contains configuration information for the local computer.</returns>
    </member>
    <member name="T:System.Net.Configuration.ModuleElement">
      <summary>Represents the type information for a custom <see cref="T:System.Net.IWebProxy" /> module. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.ModuleElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.ModuleElement" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.ModuleElement.Type">
      <summary>Gets or sets the type and assembly information for the current instance.</summary>
      <returns>A string that identifies a type that implements the <see cref="T:System.Net.IWebProxy" /> interface or null if no value has been specified.</returns>
    </member>
    <member name="T:System.Net.Configuration.NetSectionGroup">
      <summary>Gets the section group information for the networking namespaces. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.NetSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.NetSectionGroup" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.NetSectionGroup.AuthenticationModules">
      <summary>Gets the configuration section containing the authentication modules registered for the local computer.</summary>
      <returns>A <see cref="T:System.Net.Configuration.AuthenticationModulesSection" /> object.</returns>
    </member>
    <member name="P:System.Net.Configuration.NetSectionGroup.ConnectionManagement">
      <summary>Gets the configuration section containing the connection management settings for the local computer.</summary>
      <returns>A <see cref="T:System.Net.Configuration.ConnectionManagementSection" /> object.</returns>
    </member>
    <member name="P:System.Net.Configuration.NetSectionGroup.DefaultProxy">
      <summary>Gets the configuration section containing the default Web proxy server settings for the local computer.</summary>
      <returns>A <see cref="T:System.Net.Configuration.DefaultProxySection" /> object.</returns>
    </member>
    <member name="M:System.Net.Configuration.NetSectionGroup.GetSectionGroup(System.Configuration.Configuration)">
      <summary>Gets the System.Net configuration section group from the specified configuration file.</summary>
      <returns>A <see cref="T:System.Net.Configuration.NetSectionGroup" /> that represents the System.Net settings in <paramref name="config" />.</returns>
      <param name="config">A <see cref="T:System.Configuration.Configuration" /> that represents a configuration file.</param>
    </member>
    <member name="P:System.Net.Configuration.NetSectionGroup.MailSettings">
      <summary>Gets the configuration section containing the SMTP client e-mail settings for the local computer.</summary>
      <returns>A <see cref="T:System.Net.Configuration.MailSettingsSectionGroup" /> object.</returns>
    </member>
    <member name="P:System.Net.Configuration.NetSectionGroup.RequestCaching">
      <summary>Gets the configuration section containing the cache configuration settings for the local computer.</summary>
      <returns>A <see cref="T:System.Net.Configuration.RequestCachingSection" /> object.</returns>
    </member>
    <member name="P:System.Net.Configuration.NetSectionGroup.Settings">
      <summary>Gets the configuration section containing the network settings for the local computer.</summary>
      <returns>A <see cref="T:System.Net.Configuration.SettingsSection" /> object.</returns>
    </member>
    <member name="P:System.Net.Configuration.NetSectionGroup.WebRequestModules">
      <summary>Gets the configuration section containing the modules registered for use with the <see cref="T:System.Net.WebRequest" /> class.</summary>
      <returns>A <see cref="T:System.Net.Configuration.WebRequestModulesSection" /> object.</returns>
    </member>
    <member name="T:System.Net.Configuration.PerformanceCountersElement">
      <summary>Represents the performance counter element in the System.Net configuration file that determines whether networking performance counters are enabled. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.PerformanceCountersElement.#ctor">
      <summary>Instantiates a <see cref="T:System.Net.Configuration.PerformanceCountersElement" /> object.</summary>
    </member>
    <member name="P:System.Net.Configuration.PerformanceCountersElement.Enabled">
      <summary>Gets or sets whether performance counters are enabled.</summary>
      <returns>true if performance counters are enabled; otherwise, false.</returns>
    </member>
    <member name="T:System.Net.Configuration.ProxyElement">
      <summary>Identifies the configuration settings for Web proxy server. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.ProxyElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.ProxyElement" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.ProxyElement.AutoDetect">
      <summary>Gets and sets an <see cref="T:System.Net.Configuration.ProxyElement.AutoDetectValues" /> value that controls whether the Web proxy is automatically detected.</summary>
      <returns>
        <see cref="F:System.Net.Configuration.ProxyElement.AutoDetectValues.True" /> if the <see cref="T:System.Net.WebProxy" /> is automatically detected; <see cref="F:System.Net.Configuration.ProxyElement.AutoDetectValues.False" /> if the <see cref="T:System.Net.WebProxy" /> is not automatically detected; or <see cref="F:System.Net.Configuration.ProxyElement.AutoDetectValues.Unspecified" />.</returns>
    </member>
    <member name="P:System.Net.Configuration.ProxyElement.BypassOnLocal">
      <summary>Gets and sets a value that indicates whether local resources are retrieved by using a Web proxy server.</summary>
      <returns>A <see cref="T:System.Net.Configuration.ProxyElement.BypassOnLocalValues" />.</returns>
    </member>
    <member name="P:System.Net.Configuration.ProxyElement.ProxyAddress">
      <summary>Gets and sets the URI that identifies the Web proxy server to use.</summary>
      <returns>A <see cref="T:System.String" /> containing a URI.</returns>
    </member>
    <member name="P:System.Net.Configuration.ProxyElement.ScriptLocation">
      <summary>Gets and sets an <see cref="T:System.Uri" /> value that specifies the location of the automatic proxy detection script.</summary>
      <returns>A <see cref="T:System.Uri" /> specifying the location of the automatic proxy detection script.</returns>
    </member>
    <member name="P:System.Net.Configuration.ProxyElement.UseSystemDefault">
      <summary>Gets and sets a <see cref="T:System.Boolean" /> value that controls whether the Internet Explorer Web proxy settings are used.</summary>
      <returns>true if the Internet Explorer LAN settings are used to detect and configure the default <see cref="T:System.Net.WebProxy" /> used for requests; otherwise, false.</returns>
    </member>
    <member name="T:System.Net.Configuration.ProxyElement.AutoDetectValues">
      <summary>Specifies whether the proxy is automatically detected.</summary>
    </member>
    <member name="F:System.Net.Configuration.ProxyElement.AutoDetectValues.Unspecified">
      <summary>Unspecified.</summary>
    </member>
    <member name="F:System.Net.Configuration.ProxyElement.AutoDetectValues.False">
      <summary>The proxy is not automatically detected.</summary>
    </member>
    <member name="F:System.Net.Configuration.ProxyElement.AutoDetectValues.True">
      <summary>The proxy is automatically detected.</summary>
    </member>
    <member name="T:System.Net.Configuration.ProxyElement.BypassOnLocalValues">
      <summary>Specifies whether the proxy is bypassed for local resources.</summary>
    </member>
    <member name="F:System.Net.Configuration.ProxyElement.BypassOnLocalValues.Unspecified">
      <summary>Unspecified.</summary>
    </member>
    <member name="F:System.Net.Configuration.ProxyElement.BypassOnLocalValues.False">
      <summary>All requests for local resources should go through the proxy</summary>
    </member>
    <member name="F:System.Net.Configuration.ProxyElement.BypassOnLocalValues.True">
      <summary>Access local resources directly.</summary>
    </member>
    <member name="T:System.Net.Configuration.ProxyElement.UseSystemDefaultValues">
      <summary>Specifies whether to use the local system proxy settings to determine whether the proxy is bypassed for local resources.</summary>
    </member>
    <member name="F:System.Net.Configuration.ProxyElement.UseSystemDefaultValues.Unspecified">
      <summary>The system default proxy setting is unspecified.</summary>
    </member>
    <member name="F:System.Net.Configuration.ProxyElement.UseSystemDefaultValues.False">
      <summary>Do not use system default proxy setting values</summary>
    </member>
    <member name="F:System.Net.Configuration.ProxyElement.UseSystemDefaultValues.True">
      <summary>Use system default proxy setting values.</summary>
    </member>
    <member name="T:System.Net.Configuration.RequestCachingSection">
      <summary>Represents the configuration section for cache behavior. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.RequestCachingSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.RequestCachingSection" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.RequestCachingSection.DefaultFtpCachePolicy">
      <summary>Gets the default FTP caching behavior for the local computer.</summary>
      <returns>A <see cref="T:System.Net.Configuration.FtpCachePolicyElement" /> that defines the default cache policy.</returns>
    </member>
    <member name="P:System.Net.Configuration.RequestCachingSection.DefaultHttpCachePolicy">
      <summary>Gets the default caching behavior for the local computer.</summary>
      <returns>A <see cref="T:System.Net.Configuration.HttpCachePolicyElement" /> that defines the default cache policy.</returns>
    </member>
    <member name="P:System.Net.Configuration.RequestCachingSection.DefaultPolicyLevel">
      <summary>Gets or sets the default cache policy level.</summary>
      <returns>A <see cref="T:System.Net.Cache.RequestCacheLevel" /> enumeration value.</returns>
    </member>
    <member name="P:System.Net.Configuration.RequestCachingSection.DisableAllCaching">
      <summary>Gets or sets a Boolean value that enables caching on the local computer.</summary>
      <returns>true if caching is disabled on the local computer; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Configuration.RequestCachingSection.IsPrivateCache">
      <summary>Gets or sets a Boolean value that indicates whether the local computer cache is private.</summary>
      <returns>true if the cache provides user isolation; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Configuration.RequestCachingSection.UnspecifiedMaximumAge">
      <summary>Gets or sets a value used as the maximum age for cached resources that do not have expiration information.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that provides a default maximum age for cached resources.</returns>
    </member>
    <member name="T:System.Net.Configuration.ServicePointManagerElement">
      <summary>Represents the default settings used to create connections to a remote computer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.ServicePointManagerElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.ServicePointManagerElement" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.ServicePointManagerElement.CheckCertificateName">
      <summary>Gets or sets a Boolean value that controls checking host name information in an X509 certificate.</summary>
      <returns>true to specify host name checking; otherwise, false. </returns>
    </member>
    <member name="P:System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList">
      <summary>Gets or sets a Boolean value that indicates whether the certificate is checked against the certificate authority revocation list.</summary>
      <returns>true if the certificate revocation list is checked; otherwise, false.The default value is false.</returns>
    </member>
    <member name="P:System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout">
      <summary>Gets or sets the amount of time after which address information is refreshed.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies when addresses are resolved using DNS.</returns>
    </member>
    <member name="P:System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin">
      <summary>Gets or sets a Boolean value that controls using different IP addresses on connections to the same server.</summary>
      <returns>true to enable DNS round-robin behavior; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy">
      <summary>Gets or sets the <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</summary>
      <returns>The encryption policy to use for a <see cref="T:System.Net.ServicePointManager" /> instance.</returns>
    </member>
    <member name="P:System.Net.Configuration.ServicePointManagerElement.Expect100Continue">
      <summary>Gets or sets a Boolean value that determines whether 100-Continue behavior is used.</summary>
      <returns>true to expect 100-Continue responses for POST requests; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm">
      <summary>Gets or sets a Boolean value that determines whether the Nagle algorithm is used.</summary>
      <returns>true to use the Nagle algorithm; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.Net.Configuration.SettingsSection">
      <summary>Represents the configuration section for sockets, IPv6, response headers, and service points. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.SettingsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.ConnectionManagementSection" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.SettingsSection.HttpListener">
      <summary>Gets the configuration element that controls the settings used by an <see cref="T:System.Net.HttpListener" /> object.</summary>
      <returns>A <see cref="T:System.Net.Configuration.HttpListenerElement" /> object.</returns>
    </member>
    <member name="P:System.Net.Configuration.SettingsSection.HttpWebRequest">
      <summary>Gets the configuration element that controls the maximum response header length.</summary>
      <returns>A <see cref="T:System.Net.Configuration.HttpWebRequestElement" /> object.</returns>
    </member>
    <member name="P:System.Net.Configuration.SettingsSection.Ipv6">
      <summary>Gets the configuration element that enables Internet Protocol version 6 (IPv6).</summary>
      <returns>A <see cref="T:System.Net.Configuration.Ipv6Element" />.</returns>
    </member>
    <member name="P:System.Net.Configuration.SettingsSection.PerformanceCounters">
      <summary>Gets the configuration element that controls whether performance counters are enabled.</summary>
      <returns>A <see cref="T:System.Net.Configuration.PerformanceCountersElement" />.</returns>
    </member>
    <member name="P:System.Net.Configuration.SettingsSection.ServicePointManager">
      <summary>Gets the configuration element that controls settings for connections to remote host computers.</summary>
      <returns>A <see cref="T:System.Net.Configuration.ServicePointManagerElement" /> object.</returns>
    </member>
    <member name="P:System.Net.Configuration.SettingsSection.Socket">
      <summary>Gets the configuration element that controls settings for sockets.</summary>
      <returns>A <see cref="T:System.Net.Configuration.SocketElement" /> object.</returns>
    </member>
    <member name="P:System.Net.Configuration.SettingsSection.WebProxyScript">
      <summary>Gets the configuration element that controls the execution timeout and download timeout of Web proxy scripts.</summary>
      <returns>A <see cref="T:System.Net.Configuration.WebProxyScriptElement" /> object.</returns>
    </member>
    <member name="T:System.Net.Configuration.SmtpNetworkElement">
      <summary>Represents the network element in the SMTP configuration file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.SmtpNetworkElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.SmtpNetworkElement" /> class.</summary>
    </member>
    <member name="P:System.Net.Configuration.SmtpNetworkElement.ClientDomain">
      <summary>Gets or sets the client domain name used in the initial SMTP protocol request to connect to an SMTP mail server.</summary>
      <returns>A string that represents the client domain name used in the initial SMTP protocol request to connect to an SMTP mail server.</returns>
    </member>
    <member name="P:System.Net.Configuration.SmtpNetworkElement.DefaultCredentials">
      <summary>Determines whether or not default user credentials are used to access an SMTP server. The default value is false.</summary>
      <returns>true indicates that default user credentials will be used to access the SMTP server; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl">
      <summary>Gets or sets whether SSL is used to access an SMTP mail server. The default value is false.</summary>
      <returns>true indicates that SSL will be used to access the SMTP mail server; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Configuration.SmtpNetworkElement.Host">
      <summary>Gets or sets the name of the SMTP server.</summary>
      <returns>A string that represents the name of the SMTP server to connect to.</returns>
    </member>
    <member name="P:System.Net.Configuration.SmtpNetworkElement.Password">
      <summary>Gets or sets the user password to use to connect to an SMTP mail server.</summary>
      <returns>A string that represents the password to use to connect to an SMTP mail server.</returns>
    </member>
    <member name="P:System.Net.Configuration.SmtpNetworkElement.Port">
      <summary>Gets or sets the port that SMTP clients use to connect to an SMTP mail server. The default value is 25.</summary>
      <returns>A string that represents the port to connect to an SMTP mail server.</returns>
    </member>
    <member name="P:System.Net.Configuration.SmtpNetworkElement.TargetName">
      <summary>Gets or sets the Service Provider Name (SPN) to use for authentication when using extended protection to connect to an SMTP mail server.</summary>
      <returns>A string that represents the SPN to use for authentication when using extended protection to connect to an SMTP mail server.</returns>
    </member>
    <member name="P:System.Net.Configuration.SmtpNetworkElement.UserName">
      <summary>Gets or sets the user name to connect to an SMTP mail server.</summary>
      <returns>A string that represents the user name to connect to an SMTP mail server.</returns>
    </member>
    <member name="T:System.Net.Configuration.SmtpSection">
      <summary>Represents the SMTP section in the System.Net configuration file.</summary>
    </member>
    <member name="M:System.Net.Configuration.SmtpSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.SmtpSection" /> class.</summary>
    </member>
    <member name="P:System.Net.Configuration.SmtpSection.DeliveryMethod">
      <summary>Gets or sets the SMTP delivery method. The default delivery method is <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />.</summary>
      <returns>A string that represents the SMTP delivery method.</returns>
    </member>
    <member name="P:System.Net.Configuration.SmtpSection.From">
      <summary>Gets or sets the default value that indicates who the email message is from.</summary>
      <returns>A string that represents the default value indicating who a mail message is from.</returns>
    </member>
    <member name="P:System.Net.Configuration.SmtpSection.Network">
      <summary>Gets a <see cref="T:System.Net.Configuration.SmtpNetworkElement" />.</summary>
      <returns>A <see cref="T:System.Net.Configuration.SmtpNetworkElement" /> object.</returns>
    </member>
    <member name="P:System.Net.Configuration.SmtpSection.SpecifiedPickupDirectory">
      <summary>Gets the pickup directory that will be used by the SMPT client.</summary>
      <returns>A <see cref="T:System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement" /> object that specifies the pickup directory folder.</returns>
    </member>
    <member name="T:System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement">
      <summary>Represents an SMTP pickup directory configuration element.</summary>
    </member>
    <member name="M:System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement" /> class.</summary>
    </member>
    <member name="P:System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement.PickupDirectoryLocation">
      <summary>Gets or sets the folder where applications save mail messages to be processed by the SMTP server.</summary>
      <returns>A string that specifies the pickup directory for e-mail messages.</returns>
    </member>
    <member name="T:System.Net.Configuration.SocketElement">
      <summary>Represents information used to configure <see cref="T:System.Net.Sockets.Socket" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.SocketElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.SocketElement" /> class. </summary>
    </member>
    <member name="P:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept">
      <summary>Gets or sets a Boolean value that specifies whether completion ports are used when accepting connections.</summary>
      <returns>true to use completion ports; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect">
      <summary>Gets or sets a Boolean value that specifies whether completion ports are used when making connections.</summary>
      <returns>true to use completion ports; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Configuration.SocketElement.IPProtectionLevel">
      <summary>Gets or sets a value that specifies the default <see cref="T:System.Net.Sockets.IPProtectionLevel" /> to use for a socket.</summary>
      <returns>The value of the <see cref="T:System.Net.Sockets.IPProtectionLevel" /> for the current instance.</returns>
    </member>
    <member name="T:System.Net.Configuration.WebProxyScriptElement">
      <summary>Represents information used to configure Web proxy scripts. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.WebProxyScriptElement.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Net.Configuration.WebProxyScriptElement" /> class.</summary>
    </member>
    <member name="P:System.Net.Configuration.WebProxyScriptElement.DownloadTimeout">
      <summary>Gets or sets the Web proxy script download timeout using the format hours:minutes:seconds.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that contains the timeout value. The default download timeout is one minute.</returns>
    </member>
    <member name="T:System.Net.Configuration.WebRequestModuleElement">
      <summary>Represents a URI prefix and the associated class that handles creating Web requests for the prefix. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.WebRequestModuleElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.WebRequestModuleElement" /> class. </summary>
    </member>
    <member name="M:System.Net.Configuration.WebRequestModuleElement.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.WebRequestModuleElement" /> class using the specified URI prefix and type information. </summary>
      <param name="prefix">A string containing a URI prefix.</param>
      <param name="type">A string containing the type and assembly information for the class that handles creating requests for resources that use the <paramref name="prefix" /> URI prefix. For more information, see the Remarks section.</param>
    </member>
    <member name="M:System.Net.Configuration.WebRequestModuleElement.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.WebRequestModuleElement" /> class using the specified URI prefix and type identifier.</summary>
      <param name="prefix">A string containing a URI prefix.</param>
      <param name="type">A <see cref="T:System.Type" /> that identifies the class that handles creating requests for resources that use the <paramref name="prefix" /> URI prefix. </param>
    </member>
    <member name="P:System.Net.Configuration.WebRequestModuleElement.Prefix">
      <summary>Gets or sets the URI prefix for the current Web request module.</summary>
      <returns>A string that contains a URI prefix.</returns>
    </member>
    <member name="P:System.Net.Configuration.WebRequestModuleElement.Type">
      <summary>Gets or sets a class that creates Web requests.</summary>
      <returns>A <see cref="T:System.Type" /> instance that identifies a Web request module.</returns>
    </member>
    <member name="T:System.Net.Configuration.WebRequestModuleElementCollection">
      <summary>Represents a container for Web request module configuration elements. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.WebRequestModuleElementCollection" /> class. </summary>
    </member>
    <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.Add(System.Net.Configuration.WebRequestModuleElement)">
      <summary>Adds an element to the collection.</summary>
      <param name="element">The <see cref="T:System.Net.Configuration.WebRequestModuleElement" /> to add to the collection.</param>
    </member>
    <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.IndexOf(System.Net.Configuration.WebRequestModuleElement)">
      <summary>Returns the index of the specified configuration element.</summary>
      <returns>The zero-based index of <paramref name="element" />.</returns>
      <param name="element">A <see cref="T:System.Net.Configuration.WebRequestModuleElement" />.</param>
    </member>
    <member name="P:System.Net.Configuration.WebRequestModuleElementCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified position in the collection.</summary>
      <returns>The <see cref="T:System.Net.Configuration.WebRequestModuleElement" /> at the specified location.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="P:System.Net.Configuration.WebRequestModuleElementCollection.Item(System.String)">
      <summary>Gets or sets the element with the specified key.</summary>
      <returns>The <see cref="T:System.Net.Configuration.WebRequestModuleElement" /> with the specified key or null if there is no element with the specified key.</returns>
      <param name="name">The key for an element in the collection.</param>
    </member>
    <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.Remove(System.Net.Configuration.WebRequestModuleElement)">
      <summary>Removes the specified configuration element from the collection.</summary>
      <param name="element">The <see cref="T:System.Net.Configuration.WebRequestModuleElement" /> to remove.</param>
    </member>
    <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.Remove(System.String)">
      <summary>Removes the element with the specified key.</summary>
      <param name="name">The key of the element to remove.</param>
    </member>
    <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="T:System.Net.Configuration.WebRequestModulesSection">
      <summary>Represents the configuration section for Web request modules. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Net.Configuration.WebRequestModulesSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Configuration.WebRequestModulesSection" /> class.</summary>
    </member>
    <member name="P:System.Net.Configuration.WebRequestModulesSection.WebRequestModules">
      <summary>Gets the collection of Web request modules in the section.</summary>
      <returns>A <see cref="T:System.Net.Configuration.WebRequestModuleElementCollection" /> containing the registered Web request modules. </returns>
    </member>
    <member name="T:System.Net.Mail.AlternateView">
      <summary>Represents the format to view an email message.</summary>
    </member>
    <member name="M:System.Net.Mail.AlternateView.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="contentStream">A stream that contains the content for this view.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentStream" /> is null.</exception>
    </member>
    <member name="M:System.Net.Mail.AlternateView.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified <see cref="T:System.IO.Stream" /> and <see cref="T:System.Net.Mime.ContentType" />.</summary>
      <param name="contentStream">A stream that contains the content for this attachment.</param>
      <param name="contentType">The type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentStream" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="contentType" /> is not a valid value.</exception>
    </member>
    <member name="M:System.Net.Mail.AlternateView.#ctor(System.IO.Stream,System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified <see cref="T:System.IO.Stream" /> and media type.</summary>
      <param name="contentStream">A stream that contains the content for this attachment.</param>
      <param name="mediaType">The MIME media type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentStream" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="mediaType" /> is not a valid value.</exception>
    </member>
    <member name="M:System.Net.Mail.AlternateView.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified file name.</summary>
      <param name="fileName">The name of the file that contains the content for this alternate view.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred, such as a disk error.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified file handle, such as when access is Write or ReadWrite and the file handle is set for read-only access.</exception>
    </member>
    <member name="M:System.Net.Mail.AlternateView.#ctor(System.String,System.Net.Mime.ContentType)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified file name and content type.</summary>
      <param name="fileName">The name of the file that contains the content for this alternate view.</param>
      <param name="contentType">The type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="contentType" /> is not a valid value.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred, such as a disk error.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified file handle, such as when access is Write or ReadWrite and the file handle is set for read-only access.</exception>
    </member>
    <member name="M:System.Net.Mail.AlternateView.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified file name and media type.</summary>
      <param name="fileName">The name of the file that contains the content for this alternate view.</param>
      <param name="mediaType">The MIME media type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="mediaType" /> is not a valid value.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred, such as a disk error.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified file handle, such as when access is Write or ReadWrite and the file handle is set for read-only access.</exception>
    </member>
    <member name="P:System.Net.Mail.AlternateView.BaseUri">
      <summary>Gets or sets the Base URI to use for resolving relative URIs in the <see cref="T:System.Net.Mail.AlternateView" />.</summary>
      <returns>A <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="M:System.Net.Mail.AlternateView.CreateAlternateViewFromString(System.String)">
      <summary>Creates a <see cref="T:System.Net.Mail.AlternateView" /> of an email message using the content specified in a <see cref="T:System.String" />.</summary>
      <returns>An <see cref="T:System.Net.Mail.AlternateView" /> object that represents an alternate view of an email message.</returns>
      <param name="content">The <see cref="T:System.String" /> that contains the content of the email message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> is null.</exception>
    </member>
    <member name="M:System.Net.Mail.AlternateView.CreateAlternateViewFromString(System.String,System.Net.Mime.ContentType)">
      <summary>Creates an <see cref="T:System.Net.Mail.AlternateView" /> of an email message using the content specified in a <see cref="T:System.String" /> and the specified MIME media type of the content.</summary>
      <returns>An <see cref="T:System.Net.Mail.AlternateView" /> object that represents an alternate view of an email message.</returns>
      <param name="content">A <see cref="T:System.String" /> that contains the content for this attachment.</param>
      <param name="contentType">A <see cref="T:System.Net.Mime.ContentType" /> that describes the data in <paramref name="string" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> is null.</exception>
    </member>
    <member name="M:System.Net.Mail.AlternateView.CreateAlternateViewFromString(System.String,System.Text.Encoding,System.String)">
      <summary>Creates an <see cref="T:System.Net.Mail.AlternateView" /> of an email message using the content specified in a <see cref="T:System.String" />, the specified text encoding, and MIME media type of the content.</summary>
      <returns>An <see cref="T:System.Net.Mail.AlternateView" /> object that represents an alternate view of an email message.</returns>
      <param name="content">A <see cref="T:System.String" /> that contains the content for this attachment.</param>
      <param name="contentEncoding">An <see cref="T:System.Text.Encoding" />. This value can be null.</param>
      <param name="mediaType">The MIME media type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> is null.</exception>
    </member>
    <member name="M:System.Net.Mail.AlternateView.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Mail.AlternateView" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Net.Mail.AlternateView.LinkedResources">
      <summary>Gets the set of embedded resources referred to by this attachment.</summary>
      <returns>A <see cref="T:System.Net.Mail.LinkedResourceCollection" /> object that stores the collection of linked resources to be sent as part of an e-mail message.</returns>
    </member>
    <member name="T:System.Net.Mail.AlternateViewCollection">
      <summary>Represents a collection of <see cref="T:System.Net.Mail.AlternateView" /> objects.</summary>
    </member>
    <member name="M:System.Net.Mail.AlternateViewCollection.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.Mail.AlternateViewCollection" />.</summary>
    </member>
    <member name="T:System.Net.Mail.Attachment">
      <summary>Represents an attachment to an e-mail.</summary>
    </member>
    <member name="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.Attachment" /> class with the specified stream and content type. </summary>
      <param name="contentStream">A readable <see cref="T:System.IO.Stream" /> that contains the content for this attachment.</param>
      <param name="contentType">A <see cref="T:System.Net.Mime.ContentType" /> that describes the data in <paramref name="stream" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentType" /> is null.-or-<paramref name="contentStream" /> is null.</exception>
    </member>
    <member name="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.Attachment" /> class with the specified stream and name.</summary>
      <param name="contentStream">A readable <see cref="T:System.IO.Stream" /> that contains the content for this attachment.</param>
      <param name="name">A <see cref="T:System.String" /> that contains the value for the <see cref="P:System.Net.Mime.ContentType.Name" /> property of the <see cref="T:System.Net.Mime.ContentType" /> associated with this attachment. This value can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentStream" /> is null.</exception>
    </member>
    <member name="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.Attachment" /> class with the specified stream, name, and MIME type information. </summary>
      <param name="contentStream">A readable <see cref="T:System.IO.Stream" /> that contains the content for this attachment.</param>
      <param name="name">A <see cref="T:System.String" /> that contains the value for the <see cref="P:System.Net.Mime.ContentType.Name" /> property of the <see cref="T:System.Net.Mime.ContentType" /> associated with this attachment. This value can be null.</param>
      <param name="mediaType">A <see cref="T:System.String" /> that contains the MIME Content-Header information for this attachment. This value can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="mediaType" /> is not in the correct format.</exception>
    </member>
    <member name="M:System.Net.Mail.Attachment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.Attachment" /> class with the specified content string. </summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains a file path to use to create this attachment.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> is empty.</exception>
    </member>
    <member name="M:System.Net.Mail.Attachment.#ctor(System.String,System.Net.Mime.ContentType)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.Attachment" /> class with the specified content string and <see cref="T:System.Net.Mime.ContentType" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains a file path to use to create this attachment.</param>
      <param name="contentType">A <see cref="T:System.Net.Mime.ContentType" /> that describes the data in <paramref name="string" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mediaType" /> is not in the correct format.</exception>
    </member>
    <member name="M:System.Net.Mail.Attachment.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.Attachment" /> class with the specified content string and MIME type information. </summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the content for this attachment.</param>
      <param name="mediaType">A <see cref="T:System.String" /> that contains the MIME Content-Header information for this attachment. This value can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="mediaType" /> is not in the correct format.</exception>
    </member>
    <member name="P:System.Net.Mail.Attachment.ContentDisposition">
      <summary>Gets the MIME content disposition for this attachment.</summary>
      <returns>A <see cref="T:System.Net.Mime.ContentDisposition" /> that provides the presentation information for this attachment. </returns>
    </member>
    <member name="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.Net.Mime.ContentType)">
      <summary>Creates a mail attachment using the content from the specified string, and the specified <see cref="T:System.Net.Mime.ContentType" />.</summary>
      <returns>An object of type <see cref="T:System.Net.Mail.Attachment" />.</returns>
      <param name="content">A <see cref="T:System.String" /> that contains the content for this attachment.</param>
      <param name="contentType">A <see cref="T:System.Net.Mime.ContentType" /> object that represents the Multipurpose Internet Mail Exchange (MIME) protocol Content-Type header to be used.</param>
    </member>
    <member name="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String)">
      <summary>Creates a mail attachment using the content from the specified string, and the specified MIME content type name.</summary>
      <returns>An object of type <see cref="T:System.Net.Mail.Attachment" />.</returns>
      <param name="content">A <see cref="T:System.String" /> that contains the content for this attachment.</param>
      <param name="name">The MIME content type name value in the content type associated with this attachment.</param>
    </member>
    <member name="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String,System.Text.Encoding,System.String)">
      <summary>Creates a mail attachment using the content from the specified string, the specified MIME content type name, character encoding, and MIME header information for the attachment.</summary>
      <returns>An object of type <see cref="T:System.Net.Mail.Attachment" />.</returns>
      <param name="content">A <see cref="T:System.String" /> that contains the content for this attachment.</param>
      <param name="name">The MIME content type name value in the content type associated with this attachment.</param>
      <param name="contentEncoding">An <see cref="T:System.Text.Encoding" />. This value can be null.</param>
      <param name="mediaType">A <see cref="T:System.String" /> that contains the MIME Content-Header information for this attachment. This value can be null.</param>
    </member>
    <member name="P:System.Net.Mail.Attachment.Name">
      <summary>Gets or sets the MIME content type name value in the content type associated with this attachment.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value for the content type <paramref name="name" /> represented by the <see cref="P:System.Net.Mime.ContentType.Name" /> property.</returns>
      <exception cref="T:System.ArgumentNullException">The value specified for a set operation is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for a set operation is <see cref="F:System.String.Empty" /> ("").</exception>
    </member>
    <member name="P:System.Net.Mail.Attachment.NameEncoding">
      <summary>Specifies the encoding for the <see cref="T:System.Net.Mail.Attachment" /><see cref="P:System.Net.Mail.Attachment.Name" />.</summary>
      <returns>An <see cref="T:System.Text.Encoding" /> value that specifies the type of name encoding. The default value is determined from the name of the attachment.</returns>
    </member>
    <member name="T:System.Net.Mail.AttachmentBase">
      <summary>Base class that represents an email attachment. Classes <see cref="T:System.Net.Mail.Attachment" />, <see cref="T:System.Net.Mail.AlternateView" />, and <see cref="T:System.Net.Mail.LinkedResource" /> derive from this class.</summary>
    </member>
    <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.IO.Stream)">
      <summary>Instantiates an <see cref="T:System.Net.Mail.AttachmentBase" /> with the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="contentStream">A stream containing the content for this attachment.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentStream" /> is null.</exception>
    </member>
    <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
      <summary>Instantiates an <see cref="T:System.Net.Mail.AttachmentBase" /> with the specified <see cref="T:System.IO.Stream" /> and <see cref="T:System.Net.Mime.ContentType" />.</summary>
      <param name="contentStream">A stream containing the content for this attachment.</param>
      <param name="contentType">The type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentStream" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="contentType" /> is not a valid value.</exception>
    </member>
    <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.IO.Stream,System.String)">
      <summary>Instantiates an <see cref="T:System.Net.Mail.AttachmentBase" /> with the specified <see cref="T:System.IO.Stream" /> and media type.</summary>
      <param name="contentStream">A stream containing the content for this attachment.</param>
      <param name="mediaType">The MIME media type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentStream" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="mediaType" /> is not a valid value.</exception>
    </member>
    <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.String)">
      <summary>Instantiates an <see cref="T:System.Net.Mail.AttachmentBase" /> with the specified file name.</summary>
      <param name="fileName">The file name holding the content for this attachment.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
    </member>
    <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.String,System.Net.Mime.ContentType)">
      <summary>Instantiates an <see cref="T:System.Net.Mail.AttachmentBase" /> with the specified file name and content type.</summary>
      <param name="fileName">The file name holding the content for this attachment.</param>
      <param name="contentType">The type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="contentType" /> is not a valid value.</exception>
    </member>
    <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.String,System.String)">
      <summary>Instantiates an <see cref="T:System.Net.Mail.AttachmentBase" /> with the specified file name and media type.</summary>
      <param name="fileName">The file name holding the content for this attachment.</param>
      <param name="mediaType">The MIME media type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="mediaType" /> is not a valid value.</exception>
    </member>
    <member name="P:System.Net.Mail.AttachmentBase.ContentId">
      <summary>Gets or sets the MIME content ID for this attachment.</summary>
      <returns>A <see cref="T:System.String" /> holding the content ID.</returns>
      <exception cref="T:System.ArgumentNullException">Attempted to set <see cref="P:System.Net.Mail.AttachmentBase.ContentId" /> to null.</exception>
    </member>
    <member name="P:System.Net.Mail.AttachmentBase.ContentStream">
      <summary>Gets the content stream of this attachment.</summary>
      <returns>A <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="P:System.Net.Mail.AttachmentBase.ContentType">
      <summary>Gets the content type of this attachment.</summary>
      <returns>A <see cref="T:System.Net.Mime.ContentType" />.</returns>
    </member>
    <member name="M:System.Net.Mail.AttachmentBase.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Net.Mail.AttachmentBase" />. </summary>
    </member>
    <member name="M:System.Net.Mail.AttachmentBase.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Mail.AttachmentBase" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Net.Mail.AttachmentBase.TransferEncoding">
      <summary>Gets or sets the encoding of this attachment.</summary>
      <returns>A <see cref="T:System.Net.Mime.TransferEncoding" />.</returns>
    </member>
    <member name="T:System.Net.Mail.AttachmentCollection">
      <summary>Stores attachments to be sent as part of an e-mail message.</summary>
    </member>
    <member name="M:System.Net.Mail.AttachmentCollection.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.Mail.AttachmentCollection" />. </summary>
    </member>
    <member name="T:System.Net.Mail.DeliveryNotificationOptions">
      <summary>Describes the delivery notification options for e-mail.</summary>
    </member>
    <member name="F:System.Net.Mail.DeliveryNotificationOptions.None">
      <summary>No notification.</summary>
    </member>
    <member name="F:System.Net.Mail.DeliveryNotificationOptions.OnSuccess">
      <summary>Notify if the delivery is successful.</summary>
    </member>
    <member name="F:System.Net.Mail.DeliveryNotificationOptions.OnFailure">
      <summary>Notify if the delivery is unsuccessful.</summary>
    </member>
    <member name="F:System.Net.Mail.DeliveryNotificationOptions.Delay">
      <summary>Notify if the delivery is delayed</summary>
    </member>
    <member name="F:System.Net.Mail.DeliveryNotificationOptions.Never">
      <summary>Never notify.</summary>
    </member>
    <member name="T:System.Net.Mail.LinkedResource">
      <summary>Represents an embedded external resource in an email attachment, such as an image in an HTML attachment.</summary>
    </member>
    <member name="M:System.Net.Mail.LinkedResource.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.LinkedResource" /> using the supplied <see cref="T:System.IO.Stream" />.</summary>
      <param name="contentStream">A stream that contains the content for this embedded resource.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentStream" /> is null.</exception>
    </member>
    <member name="M:System.Net.Mail.LinkedResource.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.LinkedResource" /> with the values supplied by <see cref="T:System.IO.Stream" /> and <see cref="T:System.Net.Mime.ContentType" />.</summary>
      <param name="contentStream">A stream that contains the content for this embedded resource.</param>
      <param name="contentType">The type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentStream" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="contentType" /> is not a valid value.</exception>
    </member>
    <member name="M:System.Net.Mail.LinkedResource.#ctor(System.IO.Stream,System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.LinkedResource" /> with the specified <see cref="T:System.IO.Stream" /> and media type.</summary>
      <param name="contentStream">A stream that contains the content for this embedded resource.</param>
      <param name="mediaType">The MIME media type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentStream" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="mediaType" /> is not a valid value.</exception>
    </member>
    <member name="M:System.Net.Mail.LinkedResource.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.LinkedResource" /> using the specified file name.</summary>
      <param name="fileName">The file name holding the content for this embedded resource.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
    </member>
    <member name="M:System.Net.Mail.LinkedResource.#ctor(System.String,System.Net.Mime.ContentType)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.LinkedResource" /> with the specified file name and content type.</summary>
      <param name="fileName">The file name that holds the content for this embedded resource.</param>
      <param name="contentType">The type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="contentType" /> is not a valid value.</exception>
    </member>
    <member name="M:System.Net.Mail.LinkedResource.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Net.Mail.LinkedResource" /> with the specified file name and media type.</summary>
      <param name="fileName">The file name that holds the content for this embedded resource.</param>
      <param name="mediaType">The MIME media type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="mediaType" /> is not a valid value.</exception>
    </member>
    <member name="P:System.Net.Mail.LinkedResource.ContentLink">
      <summary>Gets or sets a URI that the resource must match.</summary>
      <returns>If <see cref="P:System.Net.Mail.LinkedResource.ContentLink" /> is a relative URI, the recipient of the message must resolve it.</returns>
    </member>
    <member name="M:System.Net.Mail.LinkedResource.CreateLinkedResourceFromString(System.String)">
      <summary>Creates a <see cref="T:System.Net.Mail.LinkedResource" /> object from a string to be included in an email attachment as an embedded resource. The default media type is plain text, and the default content type is ASCII.</summary>
      <returns>A <see cref="T:System.Net.Mail.LinkedResource" /> object that contains the embedded resource to be included in the email attachment.</returns>
      <param name="content">A string that contains the embedded resource to be included in the email attachment.</param>
      <exception cref="T:System.ArgumentNullException">The specified content string is null.</exception>
    </member>
    <member name="M:System.Net.Mail.LinkedResource.CreateLinkedResourceFromString(System.String,System.Net.Mime.ContentType)">
      <summary>Creates a <see cref="T:System.Net.Mail.LinkedResource" /> object from a string to be included in an email attachment as an embedded resource, with the specified content type, and media type as plain text.</summary>
      <returns>A <see cref="T:System.Net.Mail.LinkedResource" /> object that contains the embedded resource to be included in the email attachment.</returns>
      <param name="content">A string that contains the embedded resource to be included in the email attachment.</param>
      <param name="contentType">The type of the content.</param>
      <exception cref="T:System.ArgumentNullException">The specified content string is null.</exception>
    </member>
    <member name="M:System.Net.Mail.LinkedResource.CreateLinkedResourceFromString(System.String,System.Text.Encoding,System.String)">
      <summary>Creates a <see cref="T:System.Net.Mail.LinkedResource" /> object from a string to be included in an email attachment as an embedded resource, with the specified content type, and media type.</summary>
      <returns>A <see cref="T:System.Net.Mail.LinkedResource" /> object that contains the embedded resource to be included in the email attachment.</returns>
      <param name="content">A string that contains the embedded resource to be included in the email attachment.</param>
      <param name="contentEncoding">The type of the content.</param>
      <param name="mediaType">The MIME media type of the content.</param>
      <exception cref="T:System.ArgumentNullException">The specified content string is null.</exception>
    </member>
    <member name="T:System.Net.Mail.LinkedResourceCollection">
      <summary>Stores linked resources to be sent as part of an e-mail message.</summary>
    </member>
    <member name="M:System.Net.Mail.LinkedResourceCollection.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.Mail.LinkedResourceCollection" />.</summary>
    </member>
    <member name="T:System.Net.Mail.MailAddress">
      <summary>Represents the address of an electronic mail sender or recipient.</summary>
    </member>
    <member name="M:System.Net.Mail.MailAddress.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address. </summary>
      <param name="address">A <see cref="T:System.String" /> that contains an e-mail address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</exception>
      <exception cref="T:System.FormatException">
        <paramref name="address" /> is not in a recognized format.</exception>
    </member>
    <member name="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address and display name.</summary>
      <param name="address">A <see cref="T:System.String" /> that contains an e-mail address.</param>
      <param name="displayName">A <see cref="T:System.String" /> that contains the display name associated with <paramref name="address" />. This parameter can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</exception>
      <exception cref="T:System.FormatException">
        <paramref name="address" /> is not in a recognized format.-or-<paramref name="address" /> contains non-ASCII characters.</exception>
    </member>
    <member name="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address, display name, and encoding.</summary>
      <param name="address">A <see cref="T:System.String" /> that contains an e-mail address.</param>
      <param name="displayName">A <see cref="T:System.String" /> that contains the display name associated with <paramref name="address" />.</param>
      <param name="displayNameEncoding">The <see cref="T:System.Text.Encoding" /> that defines the character set used for <paramref name="displayName" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.-or-<paramref name="displayName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").-or-<paramref name="displayName" /> is <see cref="F:System.String.Empty" /> ("").</exception>
      <exception cref="T:System.FormatException">
        <paramref name="address" /> is not in a recognized format.-or-<paramref name="address" /> contains non-ASCII characters.</exception>
    </member>
    <member name="P:System.Net.Mail.MailAddress.Address">
      <summary>Gets the e-mail address specified when this instance was created.</summary>
      <returns>A <see cref="T:System.String" /> that contains the e-mail address.</returns>
    </member>
    <member name="P:System.Net.Mail.MailAddress.DisplayName">
      <summary>Gets the display name composed from the display name and address information specified when this instance was created.</summary>
      <returns>A <see cref="T:System.String" /> that contains the display name; otherwise, <see cref="F:System.String.Empty" /> ("") if no display name information was specified when this instance was created.</returns>
    </member>
    <member name="M:System.Net.Mail.MailAddress.Equals(System.Object)">
      <summary>Compares two mail addresses.</summary>
      <returns>true if the two mail addresses are equal; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.Net.Mail.MailAddress" /> instance to compare to the current instance.</param>
    </member>
    <member name="M:System.Net.Mail.MailAddress.GetHashCode">
      <summary>Returns a hash value for a mail address.</summary>
      <returns>An integer hash value.</returns>
    </member>
    <member name="P:System.Net.Mail.MailAddress.Host">
      <summary>Gets the host portion of the address specified when this instance was created.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the host computer that accepts e-mail for the <see cref="P:System.Net.Mail.MailAddress.User" /> property.</returns>
    </member>
    <member name="M:System.Net.Mail.MailAddress.ToString">
      <summary>Returns a string representation of this instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the contents of this <see cref="T:System.Net.Mail.MailAddress" />.</returns>
    </member>
    <member name="P:System.Net.Mail.MailAddress.User">
      <summary>Gets the user information from the address specified when this instance was created.</summary>
      <returns>A <see cref="T:System.String" /> that contains the user name portion of the <see cref="P:System.Net.Mail.MailAddress.Address" />.</returns>
    </member>
    <member name="T:System.Net.Mail.MailAddressCollection">
      <summary>Store e-mail addresses that are associated with an e-mail message.</summary>
    </member>
    <member name="M:System.Net.Mail.MailAddressCollection.#ctor">
      <summary>Initializes an empty instance of the <see cref="T:System.Net.Mail.MailAddressCollection" /> class.</summary>
    </member>
    <member name="M:System.Net.Mail.MailAddressCollection.Add(System.String)">
      <summary>Add a list of e-mail addresses to the collection.</summary>
      <param name="addresses">The e-mail addresses to add to the <see cref="T:System.Net.Mail.MailAddressCollection" />. Multiple e-mail addresses must be separated with a comma character (","). </param>
      <exception cref="T:System.ArgumentNullException">The<paramref name=" addresses" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The<paramref name=" addresses" /> parameter is an empty string.</exception>
      <exception cref="T:System.FormatException">The<paramref name=" addresses" /> parameter contains an e-mail address that is invalid or not supported. </exception>
    </member>
    <member name="M:System.Net.Mail.MailAddressCollection.InsertItem(System.Int32,System.Net.Mail.MailAddress)">
      <summary>Inserts an e-mail address into the <see cref="T:System.Net.Mail.MailAddressCollection" />, at the specified location.</summary>
      <param name="index">The location at which to insert the e-mail address that is specified by <paramref name="item" />.</param>
      <param name="item">The e-mail address to be inserted into the collection.</param>
      <exception cref="T:System.ArgumentNullException">The<paramref name=" item" /> parameter is null.</exception>
    </member>
    <member name="M:System.Net.Mail.MailAddressCollection.SetItem(System.Int32,System.Net.Mail.MailAddress)">
      <summary>Replaces the element at the specified index.</summary>
      <param name="index">The index of the e-mail address element to be replaced.</param>
      <param name="item">An e-mail address that will replace the element in the collection.</param>
      <exception cref="T:System.ArgumentNullException">The<paramref name=" item" /> parameter is null.</exception>
    </member>
    <member name="M:System.Net.Mail.MailAddressCollection.ToString">
      <summary>Returns a string representation of the e-mail addresses in this <see cref="T:System.Net.Mail.MailAddressCollection" /> object.</summary>
      <returns>A <see cref="T:System.String" /> containing the e-mail addresses in this collection.</returns>
    </member>
    <member name="T:System.Net.Mail.MailMessage">
      <summary>Represents an e-mail message that can be sent using the <see cref="T:System.Net.Mail.SmtpClient" /> class.</summary>
    </member>
    <member name="M:System.Net.Mail.MailMessage.#ctor">
      <summary>Initializes an empty instance of the <see cref="T:System.Net.Mail.MailMessage" /> class.</summary>
    </member>
    <member name="M:System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.MailMessage" /> class by using the specified <see cref="T:System.Net.Mail.MailAddress" /> class objects. </summary>
      <param name="from">A <see cref="T:System.Net.Mail.MailAddress" /> that contains the address of the sender of the e-mail message.</param>
      <param name="to">A <see cref="T:System.Net.Mail.MailAddress" /> that contains the address of the recipient of the e-mail message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.-or-<paramref name="to" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="from" /> or <paramref name="to" /> is malformed.</exception>
    </member>
    <member name="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.MailMessage" /> class by using the specified <see cref="T:System.String" /> class objects. </summary>
      <param name="from">A <see cref="T:System.String" /> that contains the address of the sender of the e-mail message.</param>
      <param name="to">A <see cref="T:System.String" /> that contains the addresses of the recipients of the e-mail message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.-or-<paramref name="to" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="from" /> is <see cref="F:System.String.Empty" /> ("").-or-<paramref name="to" /> is <see cref="F:System.String.Empty" /> ("").</exception>
      <exception cref="T:System.FormatException">
        <paramref name="from" /> or <paramref name="to" /> is malformed.</exception>
    </member>
    <member name="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.MailMessage" /> class. </summary>
      <param name="from">A <see cref="T:System.String" /> that contains the address of the sender of the e-mail message.</param>
      <param name="to">A <see cref="T:System.String" /> that contains the address of the recipient of the e-mail message.</param>
      <param name="subject">A <see cref="T:System.String" /> that contains the subject text.</param>
      <param name="body">A <see cref="T:System.String" /> that contains the message body.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.-or-<paramref name="to" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="from" /> is <see cref="F:System.String.Empty" /> ("").-or-<paramref name="to" /> is <see cref="F:System.String.Empty" /> ("").</exception>
      <exception cref="T:System.FormatException">
        <paramref name="from" /> or <paramref name="to" /> is malformed.</exception>
    </member>
    <member name="P:System.Net.Mail.MailMessage.AlternateViews">
      <summary>Gets the attachment collection used to store alternate forms of the message body.</summary>
      <returns>A writable <see cref="T:System.Net.Mail.AttachmentCollection" />.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.Attachments">
      <summary>Gets the attachment collection used to store data attached to this e-mail message.</summary>
      <returns>A writable <see cref="T:System.Net.Mail.AttachmentCollection" />.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.Bcc">
      <summary>Gets the address collection that contains the blind carbon copy (BCC) recipients for this e-mail message.</summary>
      <returns>A writable <see cref="T:System.Net.Mail.MailAddressCollection" /> object.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.Body">
      <summary>Gets or sets the message body.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the body text.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.BodyEncoding">
      <summary>Gets or sets the encoding used to encode the message body.</summary>
      <returns>An <see cref="T:System.Text.Encoding" /> applied to the contents of the <see cref="P:System.Net.Mail.MailMessage.Body" />.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.CC">
      <summary>Gets the address collection that contains the carbon copy (CC) recipients for this e-mail message.</summary>
      <returns>A writable <see cref="T:System.Net.Mail.MailAddressCollection" /> object.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.DeliveryNotificationOptions">
      <summary>Gets or sets the delivery notifications for this e-mail message.</summary>
      <returns>A <see cref="T:System.Net.Mail.DeliveryNotificationOptions" /> value that contains the delivery notifications for this message.</returns>
    </member>
    <member name="M:System.Net.Mail.MailMessage.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.Mail.MailMessage" />. </summary>
    </member>
    <member name="M:System.Net.Mail.MailMessage.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Mail.MailMessage" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Net.Mail.MailMessage.From">
      <summary>Gets or sets the from address for this e-mail message.</summary>
      <returns>A <see cref="T:System.Net.Mail.MailAddress" /> that contains the from address information.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.Headers">
      <summary>Gets the e-mail headers that are transmitted with this e-mail message.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the e-mail headers.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.HeadersEncoding">
      <summary>Gets or sets the encoding used for the user-defined custom headers for this e-mail message.</summary>
      <returns>The encoding used for user-defined custom headers for this e-mail message.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.IsBodyHtml">
      <summary>Gets or sets a value indicating whether the mail message body is in Html.</summary>
      <returns>true if the message body is in Html; else false. The default is false.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.Priority">
      <summary>Gets or sets the priority of this e-mail message.</summary>
      <returns>A <see cref="T:System.Net.Mail.MailPriority" /> that contains the priority of this message.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.ReplyTo">
      <summary>Gets or sets the ReplyTo address for the mail message.</summary>
      <returns>A MailAddress that indicates the value of the <see cref="P:System.Net.Mail.MailMessage.ReplyTo" /> field.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.ReplyToList">
      <summary>Gets or sets the list of addresses to reply to for the mail message.</summary>
      <returns>The list of the addresses to reply to for the mail message.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.Sender">
      <summary>Gets or sets the sender's address for this e-mail message.</summary>
      <returns>A <see cref="T:System.Net.Mail.MailAddress" /> that contains the sender's address information.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.Subject">
      <summary>Gets or sets the subject line for this e-mail message.</summary>
      <returns>A <see cref="T:System.String" /> that contains the subject content.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.SubjectEncoding">
      <summary>Gets or sets the encoding used for the subject content for this e-mail message.</summary>
      <returns>An <see cref="T:System.Text.Encoding" /> that was used to encode the <see cref="P:System.Net.Mail.MailMessage.Subject" /> property.</returns>
    </member>
    <member name="P:System.Net.Mail.MailMessage.To">
      <summary>Gets the address collection that contains the recipients of this e-mail message.</summary>
      <returns>A writable <see cref="T:System.Net.Mail.MailAddressCollection" /> object.</returns>
    </member>
    <member name="T:System.Net.Mail.MailPriority">
      <summary>Specifies the priority of a <see cref="T:System.Net.Mail.MailMessage" />.</summary>
    </member>
    <member name="F:System.Net.Mail.MailPriority.Normal">
      <summary>The email has normal priority.</summary>
    </member>
    <member name="F:System.Net.Mail.MailPriority.Low">
      <summary>The email has low priority.</summary>
    </member>
    <member name="F:System.Net.Mail.MailPriority.High">
      <summary>The email has high priority.</summary>
    </member>
    <member name="T:System.Net.Mail.SendCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> containing event data.</param>
    </member>
    <member name="T:System.Net.Mail.SmtpAccess">
      <summary>Specifies the level of access allowed to a Simple Mail Transport Protocol (SMTP) server.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.None">
      <summary>No access to an SMTP host.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.Connect">
      <summary>Connection to an SMTP host on the default port (port 25).</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort">
      <summary>Connection to an SMTP host on any port.</summary>
    </member>
    <member name="T:System.Net.Mail.SmtpClient">
      <summary>Allows applications to send e-mail by using the Simple Mail Transfer Protocol (SMTP).</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpClient.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class by using configuration file settings. </summary>
    </member>
    <member name="M:System.Net.Mail.SmtpClient.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class that sends e-mail by using the specified SMTP server. </summary>
      <param name="host">A <see cref="T:System.String" /> that contains the name or IP address of the host computer used for SMTP transactions.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class that sends e-mail by using the specified SMTP server and port.</summary>
      <param name="host">A <see cref="T:System.String" /> that contains the name or IP address of the host used for SMTP transactions.</param>
      <param name="port">An <see cref="T:System.Int32" /> greater than zero that contains the port to be used on <paramref name="host" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> cannot be less than zero.</exception>
    </member>
    <member name="P:System.Net.Mail.SmtpClient.ClientCertificates">
      <summary>Specify which certificates should be used to establish the Secure Sockets Layer (SSL) connection.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, holding one or more client certificates. The default value is derived from the mail configuration attributes in a configuration file.</returns>
    </member>
    <member name="P:System.Net.Mail.SmtpClient.Credentials">
      <summary>Gets or sets the credentials used to authenticate the sender.</summary>
      <returns>An <see cref="T:System.Net.ICredentialsByHost" /> that represents the credentials to use for authentication; or null if no credentials have been specified.</returns>
      <exception cref="T:System.InvalidOperationException">You cannot change the value of this property when an email is being sent.</exception>
    </member>
    <member name="P:System.Net.Mail.SmtpClient.DeliveryMethod">
      <summary>Specifies how outgoing email messages will be handled.</summary>
      <returns>An <see cref="T:System.Net.Mail.SmtpDeliveryMethod" /> that indicates how email messages are delivered.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpClient.Dispose">
      <summary>Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, and releases all resources used by the current instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)">
      <summary>Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, releases all resources used by the current instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class, and optionally disposes of the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to releases only unmanaged resources.</param>
    </member>
    <member name="P:System.Net.Mail.SmtpClient.EnableSsl">
      <summary>Specify whether the <see cref="T:System.Net.Mail.SmtpClient" /> uses Secure Sockets Layer (SSL) to encrypt the connection.</summary>
      <returns>true if the <see cref="T:System.Net.Mail.SmtpClient" /> uses SSL; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Net.Mail.SmtpClient.Host">
      <summary>Gets or sets the name or IP address of the host used for SMTP transactions.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name or IP address of the computer to use for SMTP transactions.</returns>
      <exception cref="T:System.ArgumentNullException">The value specified for a set operation is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for a set operation is equal to <see cref="F:System.String.Empty" /> ("").</exception>
      <exception cref="T:System.InvalidOperationException">You cannot change the value of this property when an email is being sent.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> event.</summary>
      <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains event data.</param>
    </member>
    <member name="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation">
      <summary>Gets or sets the folder where applications save mail messages to be processed by the local SMTP server.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the pickup directory for mail messages.</returns>
    </member>
    <member name="P:System.Net.Mail.SmtpClient.Port">
      <summary>Gets or sets the port used for SMTP transactions.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the port number on the SMTP host. The default value is 25.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">You cannot change the value of this property when an email is being sent.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)">
      <summary>Sends the specified message to an SMTP server for delivery.</summary>
      <param name="message">A <see cref="T:System.Net.Mail.MailMessage" /> that contains the message to send.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.-or- <see cref="P:System.Net.Mail.MailMessage.From" /> is null.-or- There are no recipients specified in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, and <see cref="P:System.Net.Mail.MailMessage.Bcc" /> properties.-or- <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is null.-or-<see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").-or- <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <exception cref="T:System.Net.Mail.SmtpException">The connection to the SMTP server failed.-or-Authentication failed.-or-The operation timed out.-or-<see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to true but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.-or-<see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to true, but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</exception>
      <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">The <paramref name="message" /> could not be delivered to one or more of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)">
      <summary>Sends the specified e-mail message to an SMTP server for delivery. The message sender, recipients, subject, and message body are specified using <see cref="T:System.String" /> objects.</summary>
      <param name="from">A <see cref="T:System.String" /> that contains the address information of the message sender.</param>
      <param name="recipients">A <see cref="T:System.String" /> that contains the addresses that the message is sent to.</param>
      <param name="subject">A <see cref="T:System.String" /> that contains the subject line for the message.</param>
      <param name="body">A <see cref="T:System.String" /> that contains the message body.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.-or-<paramref name="recipients" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="from" /> is <see cref="F:System.String.Empty" />.-or-<paramref name="recipients" /> is <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.-or-<see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is null.-or-<see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").-or- <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <exception cref="T:System.Net.Mail.SmtpException">The connection to the SMTP server failed.-or-Authentication failed.-or-The operation timed out.-or- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to true but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.-or-<see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to true, but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</exception>
      <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">The message could not be delivered to one or more of the recipients in <paramref name="recipients" />. </exception>
    </member>
    <member name="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)">
      <summary>Sends the specified e-mail message to an SMTP server for delivery. This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes. </summary>
      <param name="message">A <see cref="T:System.Net.Mail.MailMessage" /> that contains the message to send.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.-or-<see cref="P:System.Net.Mail.MailMessage.From" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.-or- There are no recipients specified in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, and <see cref="P:System.Net.Mail.MailMessage.Bcc" /> properties.-or- <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is null.-or-<see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").-or- <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <exception cref="T:System.Net.Mail.SmtpException">The connection to the SMTP server failed.-or-Authentication failed.-or-The operation timed out.-or- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to true but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.-or-<see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to true, but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</exception>
      <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">The <paramref name="message" /> could not be delivered to one or more of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)">
      <summary>Sends an e-mail message to an SMTP server for delivery. The message sender, recipients, subject, and message body are specified using <see cref="T:System.String" /> objects. This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes.</summary>
      <param name="from">A <see cref="T:System.String" /> that contains the address information of the message sender.</param>
      <param name="recipients">A <see cref="T:System.String" /> that contains the address that the message is sent to.</param>
      <param name="subject">A <see cref="T:System.String" /> that contains the subject line for the message.</param>
      <param name="body">A <see cref="T:System.String" /> that contains the message body.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.-or-<paramref name="recipient" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="from" /> is <see cref="F:System.String.Empty" />.-or-<paramref name="recipient" /> is <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.-or- <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is null.-or-<see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").-or- <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <exception cref="T:System.Net.Mail.SmtpException">The connection to the SMTP server failed.-or-Authentication failed.-or-The operation timed out.-or- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to true but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.-or-<see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to true, but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</exception>
      <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">The message could not be delivered to one or more of the recipients in <paramref name="recipients" />. </exception>
    </member>
    <member name="M:System.Net.Mail.SmtpClient.SendAsyncCancel">
      <summary>Cancels an asynchronous operation to send an e-mail message.</summary>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="E:System.Net.Mail.SmtpClient.SendCompleted">
      <summary>Occurs when an asynchronous e-mail send operation completes.</summary>
    </member>
    <member name="P:System.Net.Mail.SmtpClient.ServicePoint">
      <summary>Gets the network connection used to transmit the e-mail message.</summary>
      <returns>A <see cref="T:System.Net.ServicePoint" /> that connects to the <see cref="P:System.Net.Mail.SmtpClient.Host" /> property used for SMTP.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.Mail.SmtpClient.Host" /> is null or the empty string ("").-or-<see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero.</exception>
    </member>
    <member name="P:System.Net.Mail.SmtpClient.TargetName">
      <summary>Gets or sets the Service Provider Name (SPN) to use for authentication when using extended protection.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the SPN to use for extended protection. The default value for this SPN is of the form "SMTPSVC/&lt;host&gt;" where &lt;host&gt; is the hostname of the SMTP mail server. </returns>
    </member>
    <member name="P:System.Net.Mail.SmtpClient.Timeout">
      <summary>Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> call times out.</summary>
      <returns>An <see cref="T:System.Int32" /> that specifies the time-out value in milliseconds. The default value is 100,000 (100 seconds).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation was less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">You cannot change the value of this property when an email is being sent.</exception>
    </member>
    <member name="P:System.Net.Mail.SmtpClient.UseDefaultCredentials">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that controls whether the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</summary>
      <returns>true if the default credentials are used; otherwise false. The default value is false.</returns>
      <exception cref="T:System.InvalidOperationException">You cannot change the value of this property when an e-mail is being sent.</exception>
    </member>
    <member name="T:System.Net.Mail.SmtpDeliveryMethod">
      <summary>Specifies how email messages are delivered.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpDeliveryMethod.Network">
      <summary>Email is sent through the network to an SMTP server.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory">
      <summary>Email is copied to the directory specified by the <see cref="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" /> property for delivery by an external application.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis">
      <summary>Email is copied to the pickup directory used by a local Internet Information Services (IIS) for delivery.</summary>
    </member>
    <member name="T:System.Net.Mail.SmtpException">
      <summary>Represents the exception that is thrown when the <see cref="T:System.Net.Mail.SmtpClient" /> is not able to complete a <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> or <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> operation.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class. </summary>
    </member>
    <member name="M:System.Net.Mail.SmtpException.#ctor(System.Net.Mail.SmtpStatusCode)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class with the specified status code.</summary>
      <param name="statusCode">An <see cref="T:System.Net.Mail.SmtpStatusCode" /> value.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpException.#ctor(System.Net.Mail.SmtpStatusCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class with the specified status code and error message.</summary>
      <param name="statusCode">An <see cref="T:System.Net.Mail.SmtpStatusCode" /> value.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error that occurred.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes. </summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.Mail.SmtpException" />. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source and destination of the serialized stream associated with the new instance. </param>
    </member>
    <member name="M:System.Net.Mail.SmtpException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class with the specified error message.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error that occurred.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class with the specified error message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error that occurred.</param>
      <param name="innerException">The exception that is the cause of the current exception. </param>
    </member>
    <member name="M:System.Net.Mail.SmtpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the <see cref="T:System.Net.Mail.SmtpException" />.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</param>
    </member>
    <member name="P:System.Net.Mail.SmtpException.StatusCode">
      <summary>Gets the status code returned by an SMTP server when an e-mail message is transmitted.</summary>
      <returns>An <see cref="T:System.Net.Mail.SmtpStatusCode" /> value that indicates the error that occurred.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the <see cref="T:System.Net.Mail.SmtpException" />.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" />, which holds the serialized data for the <see cref="T:System.Net.Mail.SmtpException" />. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the destination of the serialized stream associated with the new <see cref="T:System.Net.Mail.SmtpException" />. </param>
    </member>
    <member name="T:System.Net.Mail.SmtpFailedRecipientException">
      <summary>Represents the exception that is thrown when the <see cref="T:System.Net.Mail.SmtpClient" /> is not able to complete a <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> or <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> operation to a particular recipient.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientException.#ctor">
      <summary>Initializes an empty instance of the <see cref="T:System.Net.Mail.SmtpFailedRecipientException" /> class.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientException.#ctor(System.Net.Mail.SmtpStatusCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpFailedRecipientException" /> class with the specified status code and e-mail address.</summary>
      <param name="statusCode">An <see cref="T:System.Net.Mail.SmtpStatusCode" /> value.</param>
      <param name="failedRecipient">A <see cref="T:System.String" /> that contains the e-mail address.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientException.#ctor(System.Net.Mail.SmtpStatusCode,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpFailedRecipientException" /> class with the specified status code, e-mail address, and server response.</summary>
      <param name="statusCode">An <see cref="T:System.Net.Mail.SmtpStatusCode" /> value.</param>
      <param name="failedRecipient">A <see cref="T:System.String" /> that contains the e-mail address.</param>
      <param name="serverResponse">A <see cref="T:System.String" /> that contains the server response.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpFailedRecipientException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.Mail.SmtpFailedRecipientException" />. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source and destination of the serialized stream that is associated with the new instance. </param>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpFailedRecipientException" /> class with the specified error message.</summary>
      <param name="message">A <see cref="T:System.String" /> that contains the error message.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class with the specified error message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error that occurred.</param>
      <param name="innerException">The exception that is the cause of the current exception. </param>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class with the specified error message, e-mail address, and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error that occurred.</param>
      <param name="failedRecipient">A <see cref="T:System.String" /> that contains the e-mail address.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="P:System.Net.Mail.SmtpFailedRecipientException.FailedRecipient">
      <summary>Indicates the e-mail address with delivery difficulties.</summary>
      <returns>A <see cref="T:System.String" /> that contains the e-mail address.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data that is needed to serialize the <see cref="T:System.Net.Mail.SmtpFailedRecipientException" />.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data that is needed to serialize the <see cref="T:System.Net.Mail.SmtpFailedRecipientException" />.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance, which holds the serialized data for the <see cref="T:System.Net.Mail.SmtpFailedRecipientException" />. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the destination of the serialized stream that is associated with the new <see cref="T:System.Net.Mail.SmtpFailedRecipientException" />. </param>
    </member>
    <member name="T:System.Net.Mail.SmtpFailedRecipientsException">
      <summary>The exception that is thrown when e-mail is sent using an <see cref="T:System.Net.Mail.SmtpClient" /> and cannot be delivered to all recipients.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientsException.#ctor">
      <summary>Initializes an empty instance of the <see cref="T:System.Net.Mail.SmtpFailedRecipientsException" /> class.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpFailedRecipientsException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that contains the information required to serialize the new <see cref="T:System.Net.Mail.SmtpFailedRecipientsException" /> instance. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.Net.Mail.SmtpFailedRecipientsException" /> instance. </param>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientsException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpFailedRecipientsException" /> class with the specified <see cref="T:System.String" />.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpFailedRecipientsException" /> class with the specified <see cref="T:System.String" /> and inner <see cref="T:System.Exception" />.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientsException.#ctor(System.String,System.Net.Mail.SmtpFailedRecipientException[])">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpFailedRecipientsException" /> class with the specified <see cref="T:System.String" /> and array of type <see cref="T:System.Net.Mail.SmtpFailedRecipientException" />.</summary>
      <param name="message">The exception message.</param>
      <param name="innerExceptions">The array of recipients with delivery errors.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data that is needed to serialize the <see cref="T:System.Net.Mail.SmtpFailedRecipientsException" />.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to be used. </param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> to be used. </param>
    </member>
    <member name="P:System.Net.Mail.SmtpFailedRecipientsException.InnerExceptions">
      <summary>Gets one or more <see cref="T:System.Net.Mail.SmtpFailedRecipientException" />s that indicate the e-mail recipients with SMTP delivery errors.</summary>
      <returns>An array of type <see cref="T:System.Net.Mail.SmtpFailedRecipientException" /> that lists the recipients with delivery errors.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpFailedRecipientsException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpFailedRecipientsException" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.Mail.SmtpFailedRecipientsException" />. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.Net.Mail.SmtpFailedRecipientsException" />. </param>
    </member>
    <member name="T:System.Net.Mail.SmtpPermission">
      <summary>Controls access to Simple Mail Transport Protocol (SMTP) servers.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpPermission" /> class with the specified state.</summary>
      <param name="unrestricted">true if the new permission is unrestricted; otherwise, false.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Net.Mail.SmtpAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpPermission" /> class using the specified access level.</summary>
      <param name="access">One of the <see cref="T:System.Net.Mail.SmtpAccess" /> values.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpPermission" /> class using the specified permission state value.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
    </member>
    <member name="P:System.Net.Mail.SmtpPermission.Access">
      <summary>Gets the level of access to SMTP servers controlled by the permission.</summary>
      <returns>One of the <see cref="T:System.Net.Mail.SmtpAccess" /> values. </returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.AddPermission(System.Net.Mail.SmtpAccess)">
      <summary>Adds the specified access level value to the permission. </summary>
      <param name="access">One of the <see cref="T:System.Net.Mail.SmtpAccess" /> values.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Copy">
      <summary>Creates and returns an identical copy of the current permission. </summary>
      <returns>An <see cref="T:System.Net.Mail.SmtpPermission" /> that is identical to the current permission.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.FromXml(System.Security.SecurityElement)">
      <summary>Sets the state of the permission using the specified XML encoding.</summary>
      <param name="securityElement">The XML encoding to use to set the state of the current permission.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> does not describe an <see cref="T:System.Net.Mail.SmtpPermission" /> object.-or-<paramref name="securityElement" /> does not contain the required state information to reconstruct the permission.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> is null.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
      <returns>An <see cref="T:System.Net.Mail.SmtpPermission" /> that represents the intersection of the current permission and the specified permission. Returns null if the intersection is empty or <paramref name="target" /> is null.</returns>
      <param name="target">An <see cref="T:System.Security.IPermission" /> to intersect with the current permission. It must be of the same type as the current permission.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not an <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Returns a value indicating whether the current permission is a subset of the specified permission. </summary>
      <returns>true if the current permission is a subset of the specified permission; otherwise, false.</returns>
      <param name="target">An <see cref="T:System.Security.IPermission" /> that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not an <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsUnrestricted">
      <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
      <returns>true if the current permission is unrestricted; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.ToXml">
      <summary>Creates an XML encoding of the state of the permission. </summary>
      <returns>A <see cref="T:System.Security.SecurityElement" /> that contains an XML encoding of the current permission.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Union(System.Security.IPermission)">
      <summary>Creates a permission that is the union of the current permission and the specified permission. </summary>
      <returns>A new <see cref="T:System.Net.Mail.SmtpPermission" /> permission that represents the union of the current permission and the specified permission.</returns>
      <param name="target">An <see cref="T:System.Security.IPermission" /> to combine with the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not an <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
    </member>
    <member name="T:System.Net.Mail.SmtpPermissionAttribute">
      <summary>Controls access to Simple Mail Transport Protocol (SMTP) servers.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpPermissionAttribute" /> class. </summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values that specifies the permission behavior.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> is not a valid <see cref="T:System.Security.Permissions.SecurityAction" />.</exception>
    </member>
    <member name="P:System.Net.Mail.SmtpPermissionAttribute.Access">
      <summary>Gets or sets the level of access to SMTP servers controlled by the attribute.</summary>
      <returns>A <see cref="T:System.String" /> value. Valid values are "Connect" and "None".</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.CreatePermission">
      <summary>Creates a permission object that can be stored with the <see cref="T:System.Security.Permissions.SecurityAction" /> in an assembly's metadata.</summary>
      <returns>An <see cref="T:System.Net.Mail.SmtpPermission" /> instance.</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpStatusCode">
      <summary>Specifies the outcome of sending e-mail by using the <see cref="T:System.Net.Mail.SmtpClient" /> class.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.SystemStatus">
      <summary>A system status or system Help reply.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.HelpMessage">
      <summary>A Help message was returned by the service.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.ServiceReady">
      <summary>The SMTP service is ready.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.ServiceClosingTransmissionChannel">
      <summary>The SMTP service is closing the transmission channel.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.Ok">
      <summary>The email was successfully sent to the SMTP service.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.UserNotLocalWillForward">
      <summary>The user mailbox is not located on the receiving server; the server forwards the e-mail.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.CannotVerifyUserWillAttemptDelivery">
      <summary>The specified user is not local, but the receiving SMTP service accepted the message and attempted to deliver it. This status code is defined in RFC 1123, which is available at http://www.ietf.org.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.StartMailInput">
      <summary>The SMTP service is ready to receive the e-mail content.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.ServiceNotAvailable">
      <summary>The SMTP service is not available; the server is closing the transmission channel.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.MailboxBusy">
      <summary>The destination mailbox is in use.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.LocalErrorInProcessing">
      <summary>The SMTP service cannot complete the request. This error can occur if the client's IP address cannot be resolved (that is, a reverse lookup failed). You can also receive this error if the client domain has been identified as an open relay or source for unsolicited e-mail (spam). For details, see RFC 2505, which is available at http://www.ietf.org.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.InsufficientStorage">
      <summary>The SMTP service does not have sufficient storage to complete the request.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.ClientNotPermitted">
      <summary>The client was not authenticated or is not allowed to send mail using the specified SMTP host.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.CommandUnrecognized">
      <summary>The SMTP service does not recognize the specified command.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.SyntaxError">
      <summary>The syntax used to specify a command or parameter is incorrect.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.CommandNotImplemented">
      <summary>The SMTP service does not implement the specified command.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.BadCommandSequence">
      <summary>The commands were sent in the incorrect sequence.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.MustIssueStartTlsFirst">
      <summary>The SMTP server is configured to accept only TLS connections, and the SMTP client is attempting to connect by using a non-TLS connection. The solution is for the user to set EnableSsl=true on the SMTP Client.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.CommandParameterNotImplemented">
      <summary>The SMTP service does not implement the specified command parameter.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.MailboxUnavailable">
      <summary>The destination mailbox was not found or could not be accessed.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.UserNotLocalTryAlternatePath">
      <summary>The user mailbox is not located on the receiving server. You should resend using the supplied address information.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.ExceededStorageAllocation">
      <summary>The message is too large to be stored in the destination mailbox.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.MailboxNameNotAllowed">
      <summary>The syntax used to specify the destination mailbox is incorrect.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.TransactionFailed">
      <summary>The transaction failed.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpStatusCode.GeneralFailure">
      <summary>The transaction could not occur. You receive this error when the specified SMTP host cannot be found.</summary>
    </member>
    <member name="T:System.Net.Mime.ContentDisposition">
      <summary>Represents a MIME protocol Content-Disposition header.</summary>
    </member>
    <member name="M:System.Net.Mime.ContentDisposition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mime.ContentDisposition" /> class with a <see cref="P:System.Net.Mime.ContentDisposition.DispositionType" /> of <see cref="F:System.Net.Mime.DispositionTypeNames.Attachment" />. </summary>
    </member>
    <member name="M:System.Net.Mime.ContentDisposition.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mime.ContentDisposition" /> class with the specified disposition information.</summary>
      <param name="disposition">A <see cref="T:System.Net.Mime.DispositionTypeNames" /> value that contains the disposition.</param>
      <exception cref="T:System.FormatException">
        <paramref name="disposition" /> is null or equal to <see cref="F:System.String.Empty" /> ("").</exception>
    </member>
    <member name="P:System.Net.Mime.ContentDisposition.CreationDate">
      <summary>Gets or sets the creation date for a file attachment.</summary>
      <returns>A <see cref="T:System.DateTime" /> value that indicates the file creation date; otherwise, <see cref="F:System.DateTime.MinValue" /> if no date was specified.</returns>
    </member>
    <member name="P:System.Net.Mime.ContentDisposition.DispositionType">
      <summary>Gets or sets the disposition type for an e-mail attachment.</summary>
      <returns>A <see cref="T:System.String" /> that contains the disposition type. The value is not restricted but is typically one of the <see cref="P:System.Net.Mime.ContentDisposition.DispositionType" /> values.</returns>
      <exception cref="T:System.ArgumentNullException">The value specified for a set operation is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for a set operation is equal to <see cref="F:System.String.Empty" /> ("").</exception>
    </member>
    <member name="M:System.Net.Mime.ContentDisposition.Equals(System.Object)">
      <summary>Determines whether the content-disposition header of the specified <see cref="T:System.Net.Mime.ContentDisposition" /> object is equal to the content-disposition header of this object.</summary>
      <returns>true if the content-disposition headers are the same; otherwise false.</returns>
      <param name="rparam">The <see cref="T:System.Net.Mime.ContentDisposition" /> object to compare with this object.</param>
    </member>
    <member name="P:System.Net.Mime.ContentDisposition.FileName">
      <summary>Gets or sets the suggested file name for an e-mail attachment.</summary>
      <returns>A <see cref="T:System.String" /> that contains the file name. </returns>
    </member>
    <member name="M:System.Net.Mime.ContentDisposition.GetHashCode">
      <summary>Determines the hash code of the specified <see cref="T:System.Net.Mime.ContentDisposition" /> object</summary>
      <returns>An integer hash value.</returns>
    </member>
    <member name="P:System.Net.Mime.ContentDisposition.Inline">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that determines the disposition type (Inline or Attachment) for an e-mail attachment.</summary>
      <returns>true if content in the attachment is presented inline as part of the e-mail body; otherwise, false. </returns>
    </member>
    <member name="P:System.Net.Mime.ContentDisposition.ModificationDate">
      <summary>Gets or sets the modification date for a file attachment.</summary>
      <returns>A <see cref="T:System.DateTime" /> value that indicates the file modification date; otherwise, <see cref="F:System.DateTime.MinValue" /> if no date was specified.</returns>
    </member>
    <member name="P:System.Net.Mime.ContentDisposition.Parameters">
      <summary>Gets the parameters included in the Content-Disposition header represented by this instance.</summary>
      <returns>A writable <see cref="T:System.Collections.Specialized.StringDictionary" /> that contains parameter name/value pairs.</returns>
    </member>
    <member name="P:System.Net.Mime.ContentDisposition.ReadDate">
      <summary>Gets or sets the read date for a file attachment.</summary>
      <returns>A <see cref="T:System.DateTime" /> value that indicates the file read date; otherwise, <see cref="F:System.DateTime.MinValue" /> if no date was specified.</returns>
    </member>
    <member name="P:System.Net.Mime.ContentDisposition.Size">
      <summary>Gets or sets the size of a file attachment.</summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the number of bytes in the file attachment. The default value is -1, which indicates that the file size is unknown.</returns>
    </member>
    <member name="M:System.Net.Mime.ContentDisposition.ToString">
      <summary>Returns a <see cref="T:System.String" /> representation of this instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the property values for this instance.</returns>
    </member>
    <member name="T:System.Net.Mime.ContentType">
      <summary>Represents a MIME protocol Content-Type header.</summary>
    </member>
    <member name="M:System.Net.Mime.ContentType.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.Net.Mime.ContentType" /> class. </summary>
    </member>
    <member name="M:System.Net.Mime.ContentType.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Mime.ContentType" /> class using the specified string. </summary>
      <param name="contentType">A <see cref="T:System.String" />, for example, "text/plain; charset=us-ascii", that contains the MIME media type, subtype, and optional parameters.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contentType" /> is <see cref="F:System.String.Empty" /> ("").</exception>
      <exception cref="T:System.FormatException">
        <paramref name="contentType" /> is in a form that cannot be parsed.</exception>
    </member>
    <member name="P:System.Net.Mime.ContentType.Boundary">
      <summary>Gets or sets the value of the boundary parameter included in the Content-Type header represented by this instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value associated with the boundary parameter.</returns>
    </member>
    <member name="P:System.Net.Mime.ContentType.CharSet">
      <summary>Gets or sets the value of the charset parameter included in the Content-Type header represented by this instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value associated with the charset parameter.</returns>
    </member>
    <member name="M:System.Net.Mime.ContentType.Equals(System.Object)">
      <summary>Determines whether the content-type header of the specified <see cref="T:System.Net.Mime.ContentType" /> object is equal to the content-type header of this object.</summary>
      <returns>true if the content-type headers are the same; otherwise false.</returns>
      <param name="rparam">The <see cref="T:System.Net.Mime.ContentType" /> object to compare with this object.</param>
    </member>
    <member name="M:System.Net.Mime.ContentType.GetHashCode">
      <summary>Determines the hash code of the specified <see cref="T:System.Net.Mime.ContentType" /> object</summary>
      <returns>An integer hash value.</returns>
    </member>
    <member name="P:System.Net.Mime.ContentType.MediaType">
      <summary>Gets or sets the media type value included in the Content-Type header represented by this instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the media type and subtype value. This value does not include the semicolon (;) separator that follows the subtype.</returns>
      <exception cref="T:System.ArgumentNullException">The value specified for a set operation is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for a set operation is <see cref="F:System.String.Empty" /> ("").</exception>
      <exception cref="T:System.FormatException">The value specified for a set operation is in a form that cannot be parsed.</exception>
    </member>
    <member name="P:System.Net.Mime.ContentType.Name">
      <summary>Gets or sets the value of the name parameter included in the Content-Type header represented by this instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value associated with the name parameter. </returns>
    </member>
    <member name="P:System.Net.Mime.ContentType.Parameters">
      <summary>Gets the dictionary that contains the parameters included in the Content-Type header represented by this instance.</summary>
      <returns>A writable <see cref="T:System.Collections.Specialized.StringDictionary" /> that contains name and value pairs.</returns>
    </member>
    <member name="M:System.Net.Mime.ContentType.ToString">
      <summary>Returns a string representation of this <see cref="T:System.Net.Mime.ContentType" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that contains the current settings for this <see cref="T:System.Net.Mime.ContentType" />.</returns>
    </member>
    <member name="T:System.Net.Mime.DispositionTypeNames">
      <summary>Supplies the strings used to specify the disposition type for an e-mail attachment.</summary>
    </member>
    <member name="F:System.Net.Mime.DispositionTypeNames.Attachment">
      <summary>Specifies that the attachment is to be displayed as a file attached to the e-mail message.</summary>
    </member>
    <member name="F:System.Net.Mime.DispositionTypeNames.Inline">
      <summary>Specifies that the attachment is to be displayed as part of the e-mail message body.</summary>
    </member>
    <member name="T:System.Net.Mime.MediaTypeNames">
      <summary>Specifies the media type information for an e-mail message attachment.</summary>
    </member>
    <member name="T:System.Net.Mime.MediaTypeNames.Application">
      <summary>Specifies the kind of application data in an e-mail message attachment.</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Application.Octet">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Application" /> data is not interpreted.</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Application.Pdf">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Application" /> data is in Portable Document Format (PDF).</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Application.Rtf">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Application" /> data is in Rich Text Format (RTF).</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Application.Soap">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Application" /> data is a SOAP document.</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Application.Zip">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Application" /> data is compressed.</summary>
    </member>
    <member name="T:System.Net.Mime.MediaTypeNames.Image">
      <summary>Specifies the type of image data in an e-mail message attachment.</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Image.Gif">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Image" /> data is in Graphics Interchange Format (GIF).</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Image.Jpeg">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Image" /> data is in Joint Photographic Experts Group (JPEG) format.</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Image.Tiff">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Image" /> data is in Tagged Image File Format (TIFF).</summary>
    </member>
    <member name="T:System.Net.Mime.MediaTypeNames.Text">
      <summary>Specifies the type of text data in an e-mail message attachment.</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Text.Html">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Text" /> data is in HTML format.</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Text.Plain">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Text" /> data is in plain text format.</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Text.RichText">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Text" /> data is in Rich Text Format (RTF).</summary>
    </member>
    <member name="F:System.Net.Mime.MediaTypeNames.Text.Xml">
      <summary>Specifies that the <see cref="T:System.Net.Mime.MediaTypeNames.Text" /> data is in XML format.</summary>
    </member>
    <member name="T:System.Net.Mime.TransferEncoding">
      <summary>Specifies the Content-Transfer-Encoding header information for an e-mail message attachment.</summary>
    </member>
    <member name="F:System.Net.Mime.TransferEncoding.QuotedPrintable">
      <summary>Encodes data that consists of printable characters in the US-ASCII character set. See RFC 2406 Section 6.7.</summary>
    </member>
    <member name="F:System.Net.Mime.TransferEncoding.Base64">
      <summary>Encodes stream-based data. See RFC 2406 Section 6.8.</summary>
    </member>
    <member name="F:System.Net.Mime.TransferEncoding.SevenBit">
      <summary>Used for data that is not encoded. The data is in 7-bit US-ASCII characters with a total line length of no longer than 1000 characters. See RFC2406 Section 2.7.</summary>
    </member>
    <member name="F:System.Net.Mime.TransferEncoding.Unknown">
      <summary>Indicates that the transfer encoding is unknown.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.DuplicateAddressDetectionState">
      <summary>Specifies the current state of an IP address.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.DuplicateAddressDetectionState.Invalid">
      <summary>The address is not valid. A nonvalid address is expired and no longer assigned to an interface; applications should not send data packets to it.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.DuplicateAddressDetectionState.Tentative">
      <summary>The duplicate address detection procedure's evaluation of the address has not completed successfully. Applications should not use the address because it is not yet valid and packets sent to it are discarded.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.DuplicateAddressDetectionState.Duplicate">
      <summary>The address is not unique. This address should not be assigned to the network interface.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.DuplicateAddressDetectionState.Deprecated">
      <summary>The address is valid, but it is nearing its lease lifetime and should not be used by applications.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.DuplicateAddressDetectionState.Preferred">
      <summary>The address is valid and its use is unrestricted.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.GatewayIPAddressInformation">
      <summary>Represents the IP address of the network gateway. This class cannot be instantiated.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformation.#ctor">
      <summary>Initializes the members of this class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.GatewayIPAddressInformation.Address">
      <summary>Get the IP address of the gateway.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> object that contains the IP address of the gateway.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.GatewayIPAddressInformationCollection">
      <summary>Stores a set of <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformation" /> types.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformationCollection" /> class.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because this operation is not supported for this collection.</summary>
      <param name="address">The object to be added to the collection.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Clear">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because this operation is not supported for this collection.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)">
      <summary>Checks whether the collection contains the specified <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformation" /> object.</summary>
      <returns>true if the <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformation" /> object exists in the collection; otherwise false.</returns>
      <param name="address">The <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformation" /> object to be searched in the collection.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)">
      <summary>Copies the elements in this collection to a one-dimensional array of type <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformation" />.</summary>
      <param name="array">A one-dimensional array that receives a copy of the collection.</param>
      <param name="offset">The zero-based index in <paramref name="array" /> at which the copy begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in this <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformation" /> is greater than the available space from <paramref name="count" /> to the end of the destination <paramref name="array" />. </exception>
      <exception cref="T:System.InvalidCastException">The elements in this <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformation" /> cannot be cast automatically to the type of the destination <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Count">
      <summary>Gets the number of <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformation" /> types in this collection.</summary>
      <returns>An <see cref="T:System.Int32" /> value that contains the number of <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator">
      <summary>Returns an object that can be used to iterate through this collection.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.IsReadOnly">
      <summary>Gets a value that indicates whether access to this collection is read-only.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformation" /> at the specific index of the collection.</summary>
      <returns>The <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformation" /> at the specific index in the collection.</returns>
      <param name="index">The index of interest.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because this operation is not supported for this collection.</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" />.</returns>
      <param name="address">The object to be removed.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an object that can be used to iterate through this collection.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IcmpV4Statistics">
      <summary>Provides Internet Control Message Protocol for IPv4 (ICMPv4) statistical data for the local computer.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IcmpV4Statistics.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IcmpV4Statistics" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.AddressMaskRepliesReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Address Mask Reply messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Address Mask Reply messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.AddressMaskRepliesSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Address Mask Reply messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Address Mask Reply messages that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.AddressMaskRequestsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Address Mask Request messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Address Mask Request messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.AddressMaskRequestsSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Address Mask Request messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Address Mask Request messages that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.DestinationUnreachableMessagesReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) messages that were received because of a packet having an unreachable address in its destination.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Destination Unreachable messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.DestinationUnreachableMessagesSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) messages that were sent because of a packet having an unreachable address in its destination.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Destination Unreachable messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.EchoRepliesReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Echo Reply messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of number of ICMP Echo Reply messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.EchoRepliesSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Echo Reply messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of number of ICMP Echo Reply messages that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.EchoRequestsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Echo Request messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of number of ICMP Echo Request messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.EchoRequestsSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Echo Request messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of number of ICMP Echo Request messages that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.ErrorsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) error messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP error messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.ErrorsSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) error messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of number of ICMP error messages that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.MessagesReceived">
      <summary>Gets the number of Internet Control Message Protocol messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMPv4 messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.MessagesSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMPv4 messages that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.ParameterProblemsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Parameter Problem messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Parameter Problem messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.ParameterProblemsSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Parameter Problem messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Parameter Problem messages that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.RedirectsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Redirect messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Redirect messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.RedirectsSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Redirect messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Redirect messages that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.SourceQuenchesReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Source Quench messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Source Quench messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.SourceQuenchesSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Source Quench messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Source Quench messages that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.TimeExceededMessagesReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Time Exceeded messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Time Exceeded messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.TimeExceededMessagesSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Time Exceeded messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Time Exceeded messages that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.TimestampRepliesReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Timestamp Reply messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Timestamp Reply messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.TimestampRepliesSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Timestamp Reply messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Timestamp Reply messages that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.TimestampRequestsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Timestamp Request messages that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Timestamp Request messages that were received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV4Statistics.TimestampRequestsSent">
      <summary>Gets the number of Internet Control Message Protocol version 4 (ICMPv4) Timestamp Request messages that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Timestamp Request messages that were sent.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IcmpV6Statistics">
      <summary>Provides Internet Control Message Protocol for Internet Protocol version 6 (ICMPv6) statistical data for the local computer.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IcmpV6Statistics.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IcmpV6Statistics" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.DestinationUnreachableMessagesReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) messages received because of a packet having an unreachable address in its destination.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Destination Unreachable messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.DestinationUnreachableMessagesSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) messages sent because of a packet having an unreachable address in its destination.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Destination Unreachable messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.EchoRepliesReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Echo Reply messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of number of ICMP Echo Reply messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.EchoRepliesSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Echo Reply messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of number of ICMP Echo Reply messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.EchoRequestsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Echo Request messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of number of ICMP Echo Request messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.EchoRequestsSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Echo Request messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of number of ICMP Echo Request messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.ErrorsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) error messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP error messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.ErrorsSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) error messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP error messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipQueriesReceived">
      <summary>Gets the number of Internet Group management Protocol (IGMP) Group Membership Query messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Group Membership Query messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipQueriesSent">
      <summary>Gets the number of Internet Group management Protocol (IGMP) Group Membership Query messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Group Membership Query messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipReductionsReceived">
      <summary>Gets the number of Internet Group Management Protocol (IGMP) Group Membership Reduction messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Group Membership Reduction messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipReductionsSent">
      <summary>Gets the number of Internet Group Management Protocol (IGMP) Group Membership Reduction messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Group Membership Reduction messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipReportsReceived">
      <summary>Gets the number of Internet Group Management Protocol (IGMP) Group Membership Report messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Group Membership Report messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipReportsSent">
      <summary>Gets the number of Internet Group Management Protocol (IGMP) Group Membership Report messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Group Membership Report messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.MessagesReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMPv6 messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.MessagesSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMPv6 messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.NeighborAdvertisementsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Neighbor Advertisement messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Neighbor Advertisement messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.NeighborAdvertisementsSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Neighbor Advertisement messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Neighbor Advertisement messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.NeighborSolicitsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Neighbor Solicitation messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Neighbor Solicitation messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.NeighborSolicitsSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Neighbor Solicitation messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Neighbor Solicitation messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.PacketTooBigMessagesReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Packet Too Big messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Packet Too Big messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.PacketTooBigMessagesSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Packet Too Big messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Packet Too Big messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.ParameterProblemsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Parameter Problem messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Parameter Problem messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.ParameterProblemsSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Parameter Problem messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Parameter Problem messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.RedirectsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Redirect messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Redirect messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.RedirectsSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Redirect messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Redirect messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.RouterAdvertisementsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Router Advertisement messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Router Advertisement messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.RouterAdvertisementsSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Router Advertisement messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Router Advertisement messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.RouterSolicitsReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Router Solicitation messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Router Solicitation messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.RouterSolicitsSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Router Solicitation messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of Router Solicitation messages sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.TimeExceededMessagesReceived">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Time Exceeded messages received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Time Exceeded messages received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IcmpV6Statistics.TimeExceededMessagesSent">
      <summary>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Time Exceeded messages sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of ICMP Time Exceeded messages sent.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPAddressCollection">
      <summary>Stores a set of <see cref="T:System.Net.IPAddress" /> types.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> class.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because this operation is not supported for this collection.</summary>
      <param name="address">The object to be added to the collection.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Clear">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because this operation is not supported for this collection.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)">
      <summary>Checks whether the collection contains the specified <see cref="T:System.Net.IPAddress" /> object.</summary>
      <returns>true if the <see cref="T:System.Net.IPAddress" /> object exists in the collection; otherwise, false.</returns>
      <param name="address">The <see cref="T:System.Net.IPAddress" /> object to be searched in the collection.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)">
      <summary>Copies the elements in this collection to a one-dimensional array of type <see cref="T:System.Net.IPAddress" />.</summary>
      <param name="array">A one-dimensional array that receives a copy of the collection.</param>
      <param name="offset">The zero-based index in <paramref name="array" /> at which the copy begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in this <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> is greater than the available space from <paramref name="offset" /> to the end of the destination <paramref name="array" />. </exception>
      <exception cref="T:System.InvalidCastException">The elements in this <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Count">
      <summary>Gets the number of <see cref="T:System.Net.IPAddress" /> types in this collection.</summary>
      <returns>An <see cref="T:System.Int32" /> value that contains the number of <see cref="T:System.Net.IPAddress" /> types in this collection.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.GetEnumerator">
      <summary>Returns an object that can be used to iterate through this collection.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> types in this collection.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.IsReadOnly">
      <summary>Gets a value that indicates whether access to this collection is read-only.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Net.IPAddress" /> at the specific index of the collection.</summary>
      <returns>The <see cref="T:System.Net.IPAddress" /> at the specific index in the collection.</returns>
      <param name="index">The index of interest.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because this operation is not supported for this collection.</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" />.</returns>
      <param name="address">The object to be removed.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an object that can be used to iterate through this collection.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> types in this collection.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPAddressInformation">
      <summary>Provides information about a network interface address.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressInformation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressInformation.Address">
      <summary>Gets the Internet Protocol (IP) address.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> instance that contains the IP address of an interface.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the Internet Protocol (IP) address is valid to appear in a Domain Name System (DNS) server database.</summary>
      <returns>true if the address can appear in a DNS database; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressInformation.IsTransient">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the Internet Protocol (IP) address is transient (a cluster address).</summary>
      <returns>true if the address is transient; otherwise, false.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPAddressInformationCollection">
      <summary>Stores a set of <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> types.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.Add(System.Net.NetworkInformation.IPAddressInformation)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because this operation is not supported for this collection.</summary>
      <param name="address">The object to be added to the collection.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.Clear">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because this operation is not supported for this collection.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.Contains(System.Net.NetworkInformation.IPAddressInformation)">
      <summary>Checks whether the collection contains the specified <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> object.</summary>
      <returns>true if the <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> object exists in the collection; otherwise. false.</returns>
      <param name="address">The <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> object to be searched in the collection.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)">
      <summary>Copies the collection to the specified array.</summary>
      <param name="array">A one-dimensional array that receives a copy of the collection.</param>
      <param name="offset">The zero-based index in <paramref name="array" /> at which the copy begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in this <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> is greater than the available space from <paramref name="offset" /> to the end of the destination <paramref name="array" />. </exception>
      <exception cref="T:System.InvalidCastException">The elements in this <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> cannot be cast automatically to the type of the destination <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressInformationCollection.Count">
      <summary>Gets the number of <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> types in this collection.</summary>
      <returns>An <see cref="T:System.Int32" /> value that contains the number of <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.GetEnumerator">
      <summary>Returns an object that can be used to iterate through this collection.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressInformationCollection.IsReadOnly">
      <summary>Gets a value that indicates whether access to this collection is read-only.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressInformationCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> at the specified index in the collection. </summary>
      <returns>The <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> at the specified location.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.Remove(System.Net.NetworkInformation.IPAddressInformation)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because this operation is not supported for this collection.</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" />.</returns>
      <param name="address">The object to be removed.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an object that can be used to iterate through this collection.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the <see cref="T:System.Net.NetworkInformation.IPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPGlobalProperties">
      <summary>Provides information about the network connectivity of the local computer.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IPGlobalProperties" /> class.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to retrieve the stable unicast IP address table on the local computer.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate.</param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.NotImplementedException">This method is not implemented on the platform. This method uses the native NotifyStableUnicastIpAddressTable function that is supported on Windows Vista and later. </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">The call to the native NotifyStableUnicastIpAddressTable function failed.</exception>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName">
      <summary>Gets the Dynamic Host Configuration Protocol (DHCP) scope name.</summary>
      <returns>A <see cref="T:System.String" /> instance that contains the computer's DHCP scope name.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A Win32 function call failed. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalProperties.DomainName">
      <summary>Gets the domain in which the local computer is registered.</summary>
      <returns>A <see cref="T:System.String" /> instance that contains the computer's domain name. If the computer does not belong to a domain, returns <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A Win32 function call failed. </exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)">
      <summary>Ends a pending asynchronous request to retrieve the stable unicast IP address table on the local computer.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</param>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The call to the native GetAdaptersAddresses function failed.</exception>
      <exception cref="T:System.NotImplementedException">This method is not implemented on the platform. This method uses the native NotifyStableUnicastIpAddressTable function that is supported on Windows Vista and later. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have necessary <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> permission. </exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections">
      <summary>Returns information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) connections on the local computer.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.TcpConnectionInformation" /> array that contains objects that describe the active TCP connections, or an empty array if no active TCP connections are detected.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The Win32 function GetTcpTable failed. </exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners">
      <summary>Returns endpoint information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) listeners on the local computer.</summary>
      <returns>A <see cref="T:System.Net.IPEndPoint" /> array that contains objects that describe the active TCP listeners, or an empty array, if no active TCP listeners are detected.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The Win32 function GetTcpTable failed. </exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners">
      <summary>Returns information about the Internet Protocol version 4 (IPv4) and IPv6 User Datagram Protocol (UDP) listeners on the local computer.</summary>
      <returns>An <see cref="T:System.Net.IPEndPoint" /> array that contains objects that describe the UDP listeners, or an empty array if no UDP listeners are detected.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The call to the Win32 function GetUdpTable failed. </exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics">
      <summary>Provides Internet Control Message Protocol (ICMP) version 4 statistical data for the local computer.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IcmpV4Statistics" /> object that provides ICMP version 4 traffic statistics for the local computer.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The Win32 function GetIcmpStatistics failed. </exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics">
      <summary>Provides Internet Control Message Protocol (ICMP) version 6 statistical data for the local computer.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IcmpV6Statistics" /> object that provides ICMP version 6 traffic statistics for the local computer.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The Win32 function GetIcmpStatisticsEx failed. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The local computer's operating system is not Windows XP or later.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties">
      <summary>Gets an object that provides information about the local computer's network connectivity and traffic statistics.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.IPGlobalProperties" /> object that contains information about the local computer.</returns>
      <PermissionSet>
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics">
      <summary>Provides Internet Protocol version 4 (IPv4) statistical data for the local computer.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> object that provides IPv4 traffic statistics for the local computer.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The call to the Win32 function GetIpStatistics failed.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics">
      <summary>Provides Internet Protocol version 6 (IPv6) statistical data for the local computer.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> object that provides IPv6 traffic statistics for the local computer.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The call to the Win32 function GetIpStatistics failed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The local computer is not running an operating system that supports IPv6. </exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics">
      <summary>Provides Transmission Control Protocol/Internet Protocol version 4 (TCP/IPv4) statistical data for the local computer.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.TcpStatistics" /> object that provides TCP/IPv4 traffic statistics for the local computer.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The call to the Win32 function GetTcpStatistics failed.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics">
      <summary>Provides Transmission Control Protocol/Internet Protocol version 6 (TCP/IPv6) statistical data for the local computer.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.TcpStatistics" /> object that provides TCP/IPv6 traffic statistics for the local computer.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The call to the Win32 function GetTcpStatistics failed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The local computer is not running an operating system that supports IPv6. </exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics">
      <summary>Provides User Datagram Protocol/Internet Protocol version 4 (UDP/IPv4) statistical data for the local computer.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.UdpStatistics" /> object that provides UDP/IPv4 traffic statistics for the local computer.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The call to the Win32 function GetUdpStatistics failed.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics">
      <summary>Provides User Datagram Protocol/Internet Protocol version 6 (UDP/IPv6) statistical data for the local computer.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.UdpStatistics" /> object that provides UDP/IPv6 traffic statistics for the local computer.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The call to the Win32 function GetUdpStatistics failed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The local computer is not running an operating system that supports IPv6. </exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses">
      <summary>Retrieves the stable unicast IP address table on the local computer.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection" /> that contains a list of stable unicast IP addresses on the local computer.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The call to the native GetAdaptersAddresses function failed.</exception>
      <exception cref="T:System.NotImplementedException">This method is not implemented on the platform. This method uses the native NotifyStableUnicastIpAddressTable function that is supported on Windows Vista and later. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have necessary <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> permission. </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">The call to the native NotifyStableUnicastIpAddressTable function failed.</exception>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalProperties.HostName">
      <summary>Gets the host name for the local computer.</summary>
      <returns>A <see cref="T:System.String" /> instance that contains the computer's NetBIOS name.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A Win32 function call failed. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy">
      <summary>Gets a <see cref="T:System.Boolean" /> value that specifies whether the local computer is acting as a Windows Internet Name Service (WINS) proxy.</summary>
      <returns>true if the local computer is a WINS proxy; otherwise, false.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A Win32 function call failed. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalProperties.NodeType">
      <summary>Gets the Network Basic Input/Output System (NetBIOS) node type of the local computer.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.NetBiosNodeType" /> value.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A Win32 function call failed. </exception>
    </member>
    <member name="T:System.Net.NetworkInformation.IPGlobalStatistics">
      <summary>Provides Internet Protocol (IP) statistical data.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPGlobalStatistics.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.DefaultTtl">
      <summary>Gets the default time-to-live (TTL) value for Internet Protocol (IP) packets.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the TTL.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.ForwardingEnabled">
      <summary>Gets a <see cref="T:System.Boolean" /> value that specifies whether Internet Protocol (IP) packet forwarding is enabled.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether packet forwarding is enabled.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfInterfaces">
      <summary>Gets the number of network interfaces.</summary>
      <returns>An <see cref="T:System.Int64" /> value containing the number of network interfaces for the address family used to obtain this <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> instance.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfIPAddresses">
      <summary>Gets the number of Internet Protocol (IP) addresses assigned to the local computer.</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the number of IP addresses assigned to the address family (Internet Protocol version 4 or Internet Protocol version 6) described by this object.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfRoutes">
      <summary>Gets the number of routes in the Internet Protocol (IP) routing table.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of routes in the routing table.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRequests">
      <summary>Gets the number of outbound Internet Protocol (IP) packets.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of outgoing packets.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRoutingDiscards">
      <summary>Gets the number of routes that have been discarded from the routing table.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of valid routes that have been discarded.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsDiscarded">
      <summary>Gets the number of transmitted Internet Protocol (IP) packets that have been discarded.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of outgoing packets that have been discarded.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsWithNoRoute">
      <summary>Gets the number of Internet Protocol (IP) packets for which the local computer could not determine a route to the destination address.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the number of packets that could not be sent because a route could not be found.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketFragmentFailures">
      <summary>Gets the number of Internet Protocol (IP) packets that could not be fragmented.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of packets that required fragmentation but had the "Don't Fragment" bit set.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassembliesRequired">
      <summary>Gets the number of Internet Protocol (IP) packets that required reassembly.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of packet reassemblies required.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyFailures">
      <summary>Gets the number of Internet Protocol (IP) packets that were not successfully reassembled.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of packets that could not be reassembled.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyTimeout">
      <summary>Gets the maximum amount of time within which all fragments of an Internet Protocol (IP) packet must arrive.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the maximum number of milliseconds within which all fragments of a packet must arrive to avoid being discarded.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketsFragmented">
      <summary>Gets the number of Internet Protocol (IP) packets fragmented.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of fragmented packets.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketsReassembled">
      <summary>Gets the number of Internet Protocol (IP) packets reassembled.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of fragmented packets that have been successfully reassembled.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPackets">
      <summary>Gets the number of Internet Protocol (IP) packets received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of IP packets received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDelivered">
      <summary>Gets the number of Internet Protocol (IP) packets delivered.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of IP packets delivered.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDiscarded">
      <summary>Gets the number of Internet Protocol (IP) packets that have been received and discarded.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of incoming packets that have been discarded.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsForwarded">
      <summary>Gets the number of Internet Protocol (IP) packets forwarded.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of forwarded packets.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithAddressErrors">
      <summary>Gets the number of Internet Protocol (IP) packets with address errors that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of IP packets received with errors in the address portion of the header.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithHeadersErrors">
      <summary>Gets the number of Internet Protocol (IP) packets with header errors that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of IP packets received and discarded due to errors in the header.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithUnknownProtocol">
      <summary>Gets the number of Internet Protocol (IP) packets received on the local machine with an unknown protocol in the header.</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the total number of IP packets received with an unknown protocol.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPInterfaceProperties">
      <summary>Provides information about network interfaces that support Internet Protocol version 4 (IPv4) or Internet Protocol version 6 (IPv6).</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPInterfaceProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses">
      <summary>Gets the anycast IP addresses assigned to this interface.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IPAddressInformationCollection" /> that contains the anycast addresses for this interface.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses">
      <summary>Gets the addresses of Dynamic Host Configuration Protocol (DHCP) servers for this interface.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> that contains the address information for DHCP servers, or an empty array if no servers are found.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses">
      <summary>Gets the addresses of Domain Name System (DNS) servers for this interface.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> that contains the DNS server addresses.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix">
      <summary>Gets the Domain Name System (DNS) suffix associated with this interface.</summary>
      <returns>A <see cref="T:System.String" /> that contains the DNS suffix for this interface, or <see cref="F:System.String.Empty" /> if there is no DNS suffix for the interface.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows 2000. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses">
      <summary>Gets the IPv4 network gateway addresses for this interface.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformationCollection" /> that contains the address information for network gateways, or an empty array if no gateways are found.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties">
      <summary>Provides Internet Protocol version 4 (IPv4) configuration data for this network interface.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IPv4InterfaceProperties" /> object that contains IPv4 configuration data, or null if no data is available for the interface.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The interface does not support the IPv4 protocol.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties">
      <summary>Provides Internet Protocol version 6 (IPv6) configuration data for this network interface.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IPv6InterfaceProperties" /> object that contains IPv6 configuration data.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">The interface does not support the IPv6 protocol.</exception>
    </member>
    <member name="P:System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether NetBt is configured to use DNS name resolution on this interface.</summary>
      <returns>true if NetBt is configured to use DNS name resolution on this interface; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether this interface is configured to automatically register its IP address information with the Domain Name System (DNS).</summary>
      <returns>true if this interface is configured to automatically register a mapping between its dynamic IP address and static domain names; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses">
      <summary>Gets the multicast addresses assigned to this interface.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformationCollection" /> that contains the multicast addresses for this interface.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses">
      <summary>Gets the unicast addresses assigned to this interface.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection" /> that contains the unicast addresses for this interface.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses">
      <summary>Gets the addresses of Windows Internet Name Service (WINS) servers.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> that contains the address information for WINS servers, or an empty array if no servers are found.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPStatus">
      <summary>Reports the status of sending an Internet Control Message Protocol (ICMP) echo message to a computer.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.Success">
      <summary>The ICMP echo request succeeded; an ICMP echo reply was received. When you get this status code, the other <see cref="T:System.Net.NetworkInformation.PingReply" /> properties contain valid data.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.DestinationNetworkUnreachable">
      <summary>The ICMP echo request failed because the network that contains the destination computer is not reachable.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.DestinationHostUnreachable">
      <summary>The ICMP echo request failed because the destination computer is not reachable.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.DestinationProtocolUnreachable">
      <summary>The ICMP echo request failed because the destination computer that is specified in an ICMP echo message is not reachable, because it does not support the packet's protocol.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.DestinationPortUnreachable">
      <summary>The ICMP echo request failed because the port on the destination computer is not available.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.DestinationProhibited">
      <summary>The ICMP echo request failed because contact with the destination computer is administratively prohibited.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.NoResources">
      <summary>The ICMP echo request failed because of insufficient network resources.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.BadOption">
      <summary>The ICMP echo request failed because it contains an invalid option.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.HardwareError">
      <summary>The ICMP echo request failed because of a hardware error.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.PacketTooBig">
      <summary>The ICMP echo request failed because the packet containing the request is larger than the maximum transmission unit (MTU) of a node (router or gateway) located between the source and destination. The MTU defines the maximum size of a transmittable packet.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.TimedOut">
      <summary>The ICMP echo Reply was not received within the allotted time. The default time allowed for replies is 5 seconds. You can change this value using the <see cref="Overload:System.Net.NetworkInformation.Ping.Send" />  or <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> methods that take a <paramref name="timeout" /> parameter.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.BadRoute">
      <summary>The ICMP echo request failed because there is no valid route between the source and destination computers.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.TtlExpired">
      <summary>The ICMP echo request failed because its Time to Live (TTL) value reached zero, causing the forwarding node (router or gateway) to discard the packet.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.TtlReassemblyTimeExceeded">
      <summary>The ICMP echo request failed because the packet was divided into fragments for transmission and all of the fragments were not received within the time allotted for reassembly. RFC 2460 (available at www.ietf.org) specifies 60 seconds as the time limit within which all packet fragments must be received.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.ParameterProblem">
      <summary>The ICMP echo request failed because a node (router or gateway) encountered problems while processing the packet header. This is the status if, for example, the header contains invalid field data or an unrecognized option.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.SourceQuench">
      <summary>The ICMP echo request failed because the packet was discarded. This occurs when the source computer's output queue has insufficient storage space, or when packets arrive at the destination too quickly to be processed.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.BadDestination">
      <summary>The ICMP echo request failed because the destination IP address cannot receive ICMP echo requests or should never appear in the destination address field of any IP datagram. For example, calling <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> and specifying IP address "000.0.0.0" returns this status.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.DestinationUnreachable">
      <summary>The ICMP echo request failed because the destination computer that is specified in an ICMP echo message is not reachable; the exact cause of problem is unknown.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.TimeExceeded">
      <summary>The ICMP echo request failed because its Time to Live (TTL) value reached zero, causing the forwarding node (router or gateway) to discard the packet.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.BadHeader">
      <summary>The ICMP echo request failed because the header is invalid.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.UnrecognizedNextHeader">
      <summary>The ICMP echo request failed because the Next Header field does not contain a recognized value. The Next Header field indicates the extension header type (if present) or the protocol above the IP layer, for example, TCP or UDP.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.IcmpError">
      <summary>The ICMP echo request failed because of an ICMP protocol error.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.DestinationScopeMismatch">
      <summary>The ICMP echo request failed because the source address and destination address that are specified in an ICMP echo message are not in the same scope. This is typically caused by a router forwarding a packet using an interface that is outside the scope of the source address. Address scopes (link-local, site-local, and global scope) determine where on the network an address is valid.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.IPStatus.Unknown">
      <summary>The ICMP echo request failed for an unknown reason.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.IPv4InterfaceProperties">
      <summary>Provides information about network interfaces that support Internet Protocol version 4 (IPv4).</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IPv4InterfaceProperties" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceProperties.Index">
      <summary>Gets the interface index for the Internet Protocol version 4 (IPv4) address.</summary>
      <returns>An <see cref="T:System.Int64" /> that contains the index of the IPv4 interface.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether this interface has an automatic private IP addressing (APIPA) address.</summary>
      <returns>true if the interface uses an APIPA address; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether this interface has automatic private IP addressing (APIPA) enabled.</summary>
      <returns>true if the interface uses APIPA; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the interface is configured to use a Dynamic Host Configuration Protocol (DHCP) server to obtain an IP address.</summary>
      <returns>true if the interface is configured to obtain an IP address from a DHCP server; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether this interface can forward (route) packets.</summary>
      <returns>true if this interface routes packets; otherwise false.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu">
      <summary>Gets the maximum transmission unit (MTU) for this network interface.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the MTU.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether an interface uses Windows Internet Name Service (WINS).</summary>
      <returns>true if the interface uses WINS; otherwise, false.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPv4InterfaceStatistics">
      <summary>Provides statistical data for a network interface on the local computer.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPv4InterfaceStatistics.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.BytesReceived">
      <summary>Gets the number of bytes that were received on the interface.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of bytes that were received on the interface.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.BytesSent">
      <summary>Gets the number of bytes that were sent on the interface.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of bytes that were transmitted on the interface.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.IncomingPacketsDiscarded">
      <summary>Gets the number of incoming packets that were discarded.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of discarded incoming packets.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.IncomingPacketsWithErrors">
      <summary>Gets the number of incoming packets with errors.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of incoming packets with errors.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.IncomingUnknownProtocolPackets">
      <summary>Gets the number of incoming packets with an unknown protocol.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of incoming packets with an unknown protocol.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.NonUnicastPacketsReceived">
      <summary>Gets the number of non-unicast packets that were received on the interface.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of non-unicast packets that were received on the interface.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.NonUnicastPacketsSent">
      <summary>Gets the number of non-unicast packets that were sent on the interface.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of non-unicast packets that were sent on the interface.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.OutgoingPacketsDiscarded">
      <summary>Gets the number of outgoing packets that were discarded.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of discarded outgoing packets.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.OutgoingPacketsWithErrors">
      <summary>Gets the number of outgoing packets with errors.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of outgoing packets with errors.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.OutputQueueLength">
      <summary>Gets the length of the output queue.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of packets in the output queue.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.UnicastPacketsReceived">
      <summary>Gets the number of unicast packets that were received on the interface.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of unicast packets that were received on the interface.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv4InterfaceStatistics.UnicastPacketsSent">
      <summary>Gets the number of unicast packets that were sent on the interface.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of unicast packets that were sent on the interface.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPv6InterfaceProperties">
      <summary>Provides information about network interfaces that support Internet Protocol version 6 (IPv6).</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPv6InterfaceProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IPv6InterfaceProperties" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv6InterfaceProperties.Index">
      <summary>Gets the interface index for the Internet Protocol version 6 (IPv6) address.</summary>
      <returns>An <see cref="T:System.Int64" /> value that contains the index of the IPv6 interface.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPv6InterfaceProperties.Mtu">
      <summary>Gets the maximum transmission unit (MTU) for this network interface.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the MTU.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.MulticastIPAddressInformation">
      <summary>Provides information about a network interface's multicast address.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.MulticastIPAddressInformation.AddressPreferredLifetime">
      <summary>Gets the number of seconds remaining during which this address is the preferred address.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the number of seconds left for this address to remain preferred.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.MulticastIPAddressInformation.AddressValidLifetime">
      <summary>Gets the number of seconds remaining during which this address is valid.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the number of seconds left for this address to remain assigned.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.MulticastIPAddressInformation.DhcpLeaseLifetime">
      <summary>Specifies the amount of time remaining on the Dynamic Host Configuration Protocol (DHCP) lease for this IP address.</summary>
      <returns>An <see cref="T:System.Int64" /> value that contains the number of seconds remaining before the computer must release the <see cref="T:System.Net.IPAddress" /> instance.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState">
      <summary>Gets a value that indicates the state of the duplicate address detection algorithm.</summary>
      <returns>One of the <see cref="T:System.Net.NetworkInformation.DuplicateAddressDetectionState" /> values that indicates the progress of the algorithm in determining the uniqueness of this IP address.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.MulticastIPAddressInformation.PrefixOrigin">
      <summary>Gets a value that identifies the source of a Multicast Internet Protocol (IP) address prefix.</summary>
      <returns>One of the <see cref="T:System.Net.NetworkInformation.PrefixOrigin" /> values that identifies how the prefix information was obtained.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.MulticastIPAddressInformation.SuffixOrigin">
      <summary>Gets a value that identifies the source of a Multicast Internet Protocol (IP) address suffix.</summary>
      <returns>One of the <see cref="T:System.Net.NetworkInformation.SuffixOrigin" /> values that identifies how the suffix information was obtained.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="T:System.Net.NetworkInformation.MulticastIPAddressInformationCollection">
      <summary>Stores a set of <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" /> types.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformationCollection" /> class.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Add(System.Net.NetworkInformation.MulticastIPAddressInformation)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because the collection is read-only and elements cannot be added to the collection.</summary>
      <param name="address">The object to be added to the collection.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Clear">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because the collection is read-only and elements cannot be removed.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)">
      <summary>Checks whether the collection contains the specified <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" /> object.</summary>
      <returns>true if the <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" /> object exists in the collection; otherwise, false.</returns>
      <param name="address">The <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" /> object to be searched in the collection.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[],System.Int32)">
      <summary>Copies the elements in this collection to a one-dimensional array of type <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" />.</summary>
      <param name="array">A one-dimensional array that receives a copy of the collection.</param>
      <param name="offset">The zero-based index in <paramref name="array" /> at which the copy begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in this <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" /> is greater than the available space from <paramref name="count" /> to the end of the destination <paramref name="array" />. </exception>
      <exception cref="T:System.InvalidCastException">The elements in this <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" /> cannot be cast automatically to the type of the destination <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Count">
      <summary>Gets the number of <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" /> types in this collection.</summary>
      <returns>An <see cref="T:System.Int32" /> value that contains the number of <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.GetEnumerator">
      <summary>Returns an object that can be used to iterate through this collection.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.IsReadOnly">
      <summary>Gets a value that indicates whether access to this collection is read-only.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" /> at the specific index of the collection.</summary>
      <returns>The <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformation" /> at the specific index in the collection.</returns>
      <param name="index">The index of interest.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because the collection is read-only and elements cannot be removed.</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" />.</returns>
      <param name="address">The object to be removed.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an object that can be used to iterate through this collection.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.NetBiosNodeType">
      <summary>Specifies the Network Basic Input/Output System (NetBIOS) node type.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetBiosNodeType.Unknown">
      <summary>An unknown node type.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetBiosNodeType.Broadcast">
      <summary>A broadcast node.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetBiosNodeType.Peer2Peer">
      <summary>A peer-to-peer node.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetBiosNodeType.Mixed">
      <summary>A mixed node.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetBiosNodeType.Hybrid">
      <summary>A hybrid node.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkAddressChangedEventHandler">
      <summary>References one or more methods to be called when the address of a network interface changes.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains data about the event. </param>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkAvailabilityChangedEventHandler">
      <summary>References one or more methods to be called when the availability of the network changes.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains data about the event.</param>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkAvailabilityEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.NetworkInformation.NetworkChange.NetworkAvailabilityChanged" /> event.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkAvailabilityEventArgs.IsAvailable">
      <summary>Gets the current status of the network connection.</summary>
      <returns>true if the network is available; otherwise, false.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkChange">
      <summary>Allows applications to receive notification when the Internet Protocol (IP) address of a network interface, also called a network card or adapter, changes.</summary>
    </member>
    <member name="E:System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged">
      <summary>Occurs when the IP address of a network interface changes.</summary>
    </member>
    <member name="E:System.Net.NetworkInformation.NetworkChange.NetworkAvailabilityChanged">
      <summary>Occurs when the availability of the network changes.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationAccess">
      <summary>Specifies permission to access information about network interfaces and traffic statistics.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.None">
      <summary>No access to network information.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Read">
      <summary>Read access to network information.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping">
      <summary>Ping access to network information.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationException">
      <summary>The exception that is thrown when an error occurs while retrieving network information.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInformationException" /> class.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationException.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInformationException" /> class with the specified error code.</summary>
      <param name="errorCode">A Win32 error code. </param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInformationException" /> class with serialized data.</summary>
      <param name="serializationInfo">A SerializationInfo object that contains the serialized exception data. </param>
      <param name="streamingContext">A StreamingContext that contains contextual information about the serialized exception. </param>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationException.ErrorCode">
      <summary>Gets the Win32 error code for this exception.</summary>
      <returns>An <see cref="T:System.Int32" /> value that contains the Win32 error code.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermission">
      <summary>Controls access to network information and traffic statistics for the local computer. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> class using the specified <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> value.</summary>
      <param name="access">One of the <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> values.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermission.Access">
      <summary>Gets the level of access to network information controlled by this permission. </summary>
      <returns>One of the <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> values.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>Adds the specified value to this permission.</summary>
      <param name="access">One of the <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> values.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Copy">
      <summary>Creates and returns an identical copy of this permission.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> that is identical to the current permission</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Sets the state of this permission using the specified XML encoding.</summary>
      <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding to use to set the state of the current permission</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> is not a permission encoding.-or-<paramref name="securityElement" /> is not an encoding of a <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />. -or-<paramref name="securityElement" /> has invalid <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> values.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> that represents the intersection of the current permission and the specified permission. This new permission is null if the intersection is empty or <paramref name="target" /> is null.</returns>
      <param name="target">An <see cref="T:System.Security.IPermission" /> to intersect with the current permission. It must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determines whether the current permission is a subset of the specified permission.</summary>
      <returns>true if the current permission is a subset of the specified permission; otherwise, false.</returns>
      <param name="target">An <see cref="T:System.Security.IPermission" /> that is to be tested for the subset relationship. This permission must be of the same type as the current permission</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted">
      <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
      <returns>true if the current permission is unrestricted; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.ToXml">
      <summary>Creates an XML encoding of the state of this permission.</summary>
      <returns>A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding of the current permission.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)">
      <summary>Creates a permission that is the union of this permission and the specified permission.</summary>
      <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
      <param name="target">A <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />  permission to combine with the current permission. </param>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute">
      <summary>Allows security actions for <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> to be applied to code using declarative security.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute" /> class.</summary>
      <param name="action">A <see cref="T:System.Security.Permissions.SecurityAction" /> value that specifies the permission behavior.</param>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.Access">
      <summary>Gets or sets the network information access level.</summary>
      <returns>A string that specifies the access level.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.CreatePermission">
      <summary>Creates and returns a new <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> object.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> that corresponds to this attribute.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInterface">
      <summary>Provides configuration and statistical information for a network interface.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInterface.Description">
      <summary>Gets the description of the interface.</summary>
      <returns>A <see cref="T:System.String" /> that describes this interface.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces">
      <summary>Returns objects that describe the network interfaces on the local computer.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> array that contains objects that describe the available network interfaces, or an empty array if no interfaces are detected.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A Windows system function call failed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.GetIPProperties">
      <summary>Returns an object that describes the configuration of this network interface.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> object that describes this network interface.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics">
      <summary>Gets the IPv4 statistics.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" /> object.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable">
      <summary>Indicates whether any network connection is available.</summary>
      <returns>true if a network connection is available; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress">
      <summary>Returns the Media Access Control (MAC) or physical address for this adapter.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> object that contains the physical address.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInterface.Id">
      <summary>Gets the identifier of the network adapter.</summary>
      <returns>A <see cref="T:System.String" /> that contains the identifier.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is set to only receive data packets.</summary>
      <returns>true if the interface only receives network traffic; otherwise, false.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex">
      <summary>Gets the index of the IPv4 loopback interface.</summary>
      <returns>A <see cref="T:System.Int32" /> that contains the index for the IPv4 loopback interface.</returns>
      <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">This property is not valid on computers running only Ipv6.</exception>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInterface.Name">
      <summary>Gets the name of the network adapter.</summary>
      <returns>A <see cref="T:System.String" /> that contains the adapter name.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType">
      <summary>Gets the interface type.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" /> value that specifies the network interface type.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInterface.OperationalStatus">
      <summary>Gets the current operational state of the network connection.</summary>
      <returns>One of the <see cref="T:System.Net.NetworkInformation.OperationalStatus" /> values.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInterface.Speed">
      <summary>Gets the speed of the network interface.</summary>
      <returns>A <see cref="T:System.Int64" /> value that specifies the speed in bits per second.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the interface supports the specified protocol.</summary>
      <returns>true if the specified protocol is supported; otherwise, false.</returns>
      <param name="networkInterfaceComponent">A <see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" /> value.</param>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInterface.SupportsMulticast">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is enabled to receive multicast packets.</summary>
      <returns>true if the interface receives multicast packets; otherwise, false.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInterfaceComponent">
      <summary>Specifies the Internet Protocol versions that are supported by a network interface.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceComponent.IPv4">
      <summary>Internet Protocol version 4.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceComponent.IPv6">
      <summary>Internet Protocol version 6.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInterfaceType">
      <summary>Specifies types of network interfaces.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.Unknown">
      <summary>The interface type is not known.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet">
      <summary>The network interface uses an Ethernet connection. Ethernet is defined in IEEE standard 802.3.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.TokenRing">
      <summary>The network interface uses a Token-Ring connection. Token-Ring is defined in IEEE standard 802.5.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.Fddi">
      <summary>The network interface uses a Fiber Distributed Data Interface (FDDI) connection. FDDI is a set of standards for data transmission on fiber optic lines in a local area network.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.BasicIsdn">
      <summary>The network interface uses a basic rate interface Integrated Services Digital Network (ISDN) connection. ISDN is a set of standards for data transmission over telephone lines.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.PrimaryIsdn">
      <summary>The network interface uses a primary rate interface Integrated Services Digital Network (ISDN) connection. ISDN is a set of standards for data transmission over telephone lines.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.Ppp">
      <summary>The network interface uses a Point-To-Point protocol (PPP) connection. PPP is a protocol for data transmission using a serial device.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.Loopback">
      <summary>The network interface is a loopback adapter. Such interfaces are often used for testing; no traffic is sent over the wire.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet3Megabit">
      <summary>The network interface uses an Ethernet 3 megabit/second connection. This version of Ethernet is defined in IETF RFC 895.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.Slip">
      <summary>The network interface uses a Serial Line Internet Protocol (SLIP) connection. SLIP is defined in IETF RFC 1055.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.Atm">
      <summary>The network interface uses asynchronous transfer mode (ATM) for data transmission.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.GenericModem">
      <summary>The network interface uses a modem.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.FastEthernetT">
      <summary>The network interface uses a Fast Ethernet connection over twisted pair and provides a data rate of 100 megabits per second. This type of connection is also known as 100Base-T.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.Isdn">
      <summary>The network interface uses a connection configured for ISDN and the X.25 protocol. X.25 allows computers on public networks to communicate using an intermediary computer.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.FastEthernetFx">
      <summary>The network interface uses a Fast Ethernet connection over optical fiber and provides a data rate of 100 megabits per second. This type of connection is also known as 100Base-FX.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.Wireless80211">
      <summary>The network interface uses a wireless LAN connection (IEEE 802.11 standard).</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.AsymmetricDsl">
      <summary>The network interface uses an Asymmetric Digital Subscriber Line (ADSL).</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.RateAdaptDsl">
      <summary>The network interface uses a Rate Adaptive Digital Subscriber Line (RADSL).</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.SymmetricDsl">
      <summary>The network interface uses a Symmetric Digital Subscriber Line (SDSL).</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.VeryHighSpeedDsl">
      <summary>The network interface uses a Very High Data Rate Digital Subscriber Line (VDSL).</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.IPOverAtm">
      <summary>The network interface uses the Internet Protocol (IP) in combination with asynchronous transfer mode (ATM) for data transmission.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet">
      <summary>The network interface uses a gigabit Ethernet connection and provides a data rate of 1,000 megabits per second (1 gigabit per second).</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.Tunnel">
      <summary>The network interface uses a tunnel connection.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.MultiRateSymmetricDsl">
      <summary>The network interface uses a Multirate Digital Subscriber Line.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInterfaceType.HighPerformanceSerialBus">
      <summary>The network interface uses a High Performance Serial Bus.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.OperationalStatus">
      <summary>Specifies the operational state of a network interface.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.OperationalStatus.Up">
      <summary>The network interface is up; it can transmit data packets.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.OperationalStatus.Down">
      <summary>The network interface is unable to transmit data packets.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.OperationalStatus.Testing">
      <summary>The network interface is running tests.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.OperationalStatus.Unknown">
      <summary>The network interface status is not known.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.OperationalStatus.Dormant">
      <summary>The network interface is not in a condition to transmit data packets; it is waiting for an external event.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.OperationalStatus.NotPresent">
      <summary>The network interface is unable to transmit data packets because of a missing component, typically a hardware component.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.OperationalStatus.LowerLayerDown">
      <summary>The network interface is unable to transmit data packets because it runs on top of one or more other interfaces, and at least one of these "lower layer" interfaces is down.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.PhysicalAddress">
      <summary>Provides the Media Access Control (MAC) address for a network interface (adapter).</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.PhysicalAddress.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> class. </summary>
      <param name="address">A <see cref="T:System.Byte" /> array containing the address.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.PhysicalAddress.Equals(System.Object)">
      <summary>Compares two <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> instances.</summary>
      <returns>true if this instance and the specified instance contain the same address; otherwise false.</returns>
      <param name="comparand">The <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />  to compare to the current instance.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes">
      <summary>Returns the address of the current instance.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the address.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.PhysicalAddress.GetHashCode">
      <summary>Returns the hash value of a physical address.</summary>
      <returns>An integer hash value.</returns>
    </member>
    <member name="F:System.Net.NetworkInformation.PhysicalAddress.None">
      <summary>Returns a new <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> instance with a zero length address. This field is read-only.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)">
      <summary>Parses the specified <see cref="T:System.String" /> and stores its contents as the address bytes of the <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> returned by this method.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> instance with the specified address.</returns>
      <param name="address">A <see cref="T:System.String" /> containing the address that will be used to initialize the <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> instance returned by this method.</param>
      <exception cref="T:System.FormatException">The <paramref name="address" /> parameter contains an illegal hardware address. This exception also occurs if the <paramref name="address" /> parameter contains a string in the incorrect format.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.PhysicalAddress.ToString">
      <summary>Returns the <see cref="T:System.String" /> representation of the address of this instance.</summary>
      <returns>A <see cref="T:System.String" /> containing the address contained in this instance.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.Ping">
      <summary>Allows an application to determine whether a remote computer is accessible over the network.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.Ping" /> class.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.NetworkInformation.Ping" /> object, and optionally disposes of the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to releases only unmanaged resources.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" />  object that contains event data.</param>
    </member>
    <member name="E:System.Net.NetworkInformation.Ping.PingCompleted">
      <summary>Occurs when an asynchronous operation to send an Internet Control Message Protocol (ICMP) echo message and receive the corresponding ICMP echo reply message completes or is canceled.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
      <summary>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or describes the reason for the failure if no message was received.</returns>
      <param name="address">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
      <summary>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer. This method allows you to specify a time-out value for the operation. </summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</returns>
      <param name="address">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</param>
      <param name="timeout">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
      <summary>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received. The method will return <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> if the packet exceeds the Maximum Transmission Unit (MTU).</returns>
      <param name="address">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</param>
      <param name="timeout">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <param name="buffer">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</param>
      <exception cref="T:System.ArgumentException">The size of <paramref name="buffer" /> exceeds 65500 bytes.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.-or-<paramref name="buffer" /> is null, or the <paramref name="buffer" /> size is greater than 65500 bytes.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
      <summary>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" /> and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received. The method will return <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> if the packet exceeds the Maximum Transmission Unit (MTU).</returns>
      <param name="address">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</param>
      <param name="timeout">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <param name="buffer">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</param>
      <param name="options">A <see cref="T:System.Net.NetworkInformation.PingOptions" />  object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</param>
      <exception cref="T:System.ArgumentException">The size of <paramref name="buffer" /> exceeds 65500 bytes.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.-or-<paramref name="buffer" /> is null, or the <paramref name="buffer" /> size is greater than 65500 bytes.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.Send(System.String)">
      <summary>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</returns>
      <param name="hostNameOrAddress">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostNameOrAddress" /> is null or is an empty string ("").</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
      <summary>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This method allows you to specify a time-out value for the operation.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</returns>
      <param name="hostNameOrAddress">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</param>
      <param name="timeout">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostNameOrAddress" /> is null or is an empty string ("").</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
      <summary>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</returns>
      <param name="hostNameOrAddress">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</param>
      <param name="timeout">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <param name="buffer">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</param>
      <exception cref="T:System.ArgumentException">The size of <paramref name="buffer" /> exceeds 65500 bytes.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostNameOrAddress" /> is null or is an empty string ("").-or-<paramref name="buffer" /> is null, or the <paramref name="buffer" /> size is greater than 65500 bytes.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
      <summary>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</returns>
      <param name="hostNameOrAddress">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</param>
      <param name="timeout">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <param name="buffer">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</param>
      <param name="options">A <see cref="T:System.Net.NetworkInformation.PingOptions" />  object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</param>
      <exception cref="T:System.ArgumentException">The size of <paramref name="buffer" /> exceeds 65500 bytes.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostNameOrAddress" /> is null or is a zero length string.-or-<paramref name="buffer" /> is null, or the <paramref name="buffer" /> size is greater than 65500 bytes.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
      <summary>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</summary>
      <param name="address">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</param>
      <param name="timeout">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</param>
      <param name="buffer">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <param name="options">A <see cref="T:System.Net.NetworkInformation.PingOptions" />  object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</param>
      <param name="userToken">An object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.-or-<paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="address" /> is not a valid IP address.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <exception cref="T:System.ArgumentException">The size of <paramref name="buffer" /> exceeds 65500 bytes.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
      <summary>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</summary>
      <param name="address">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</param>
      <param name="timeout">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <param name="buffer">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</param>
      <param name="userToken">An object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.-or-<paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="address" /> is not a valid IP address.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <exception cref="T:System.ArgumentException">The size of <paramref name="buffer" /> exceeds 65500 bytes.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
      <summary>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</summary>
      <param name="address">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</param>
      <param name="timeout">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <param name="userToken">An object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" />  method is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="address" /> is not a valid IP address.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
      <summary>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</summary>
      <param name="address">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</param>
      <param name="userToken">An object that is passed to the method invoked when the asynchronous operation completes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">A call to the <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  method is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="address" /> is not a valid IP address.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
      <summary>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</summary>
      <param name="hostNameOrAddress">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</param>
      <param name="timeout">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</param>
      <param name="buffer">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <param name="options">A <see cref="T:System.Net.NetworkInformation.PingOptions" />  object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</param>
      <param name="userToken">An object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostNameOrAddress" /> is null or is an empty string ("").-or-<paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <exception cref="T:System.ArgumentException">The size of <paramref name="buffer" /> exceeds 65500 bytes.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
      <summary>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</summary>
      <param name="hostNameOrAddress">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</param>
      <param name="timeout">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <param name="buffer">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</param>
      <param name="userToken">An object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostNameOrAddress" /> is null or is an empty string ("").-or-<paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />  is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="hostNameOrAddress" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <exception cref="T:System.ArgumentException">The size of <paramref name="buffer" /> exceeds 65500 bytes.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
      <summary>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</summary>
      <param name="hostNameOrAddress">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</param>
      <param name="timeout">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</param>
      <param name="userToken">An object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostNameOrAddress" /> is null or is an empty string ("").</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="hostNameOrAddress" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
      <summary>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</summary>
      <param name="hostNameOrAddress">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</param>
      <param name="userToken">An object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostNameOrAddress" /> is null or is an empty string ("").</exception>
      <exception cref="T:System.InvalidOperationException">A call to <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" />  method is in progress.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000. </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.NetworkInformation.Ping.SendAsyncCancel">
      <summary>Cancels all pending asynchronous requests to send an Internet Control Message Protocol (ICMP) echo message and receives a corresponding ICMP echo reply message.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.NetworkInformation.PingCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> event.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.PingCompletedEventArgs.Reply">
      <summary>Gets an object that contains data that describes an attempt to send an Internet Control Message Protocol (ICMP) echo request message and receive a corresponding ICMP echo reply message.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that describes the results of the ICMP echo request.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.PingCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> event of a <see cref="T:System.Net.NetworkInformation.Ping" /> object.</summary>
      <param name="sender">The source of the <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> event.</param>
      <param name="e">A <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" />  object that contains the event data.</param>
    </member>
    <member name="T:System.Net.NetworkInformation.PingException">
      <summary>The exception that is thrown when a <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> or <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> method calls a method that throws an exception.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.PingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.PingException" /> class with serialized data. </summary>
      <param name="serializationInfo">The object that holds the serialized object data. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the contextual information about the source or destination for this serialization.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.PingException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.PingException" /> class using the specified message.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.PingException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.PingException" />  class using the specified message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error.</param>
      <param name="innerException">The exception that causes the current exception.</param>
    </member>
    <member name="T:System.Net.NetworkInformation.PingOptions">
      <summary>Used to control how <see cref="T:System.Net.NetworkInformation.Ping" /> data packets are transmitted.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.PingOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.PingOptions" /> class.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.PingOptions.#ctor(System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.PingOptions" /> class and sets the Time to Live and fragmentation values.</summary>
      <param name="ttl">An <see cref="T:System.Int32" /> value greater than zero that specifies the number of times that the <see cref="T:System.Net.NetworkInformation.Ping" /> data packets can be forwarded.</param>
      <param name="dontFragment">true to prevent data sent to the remote host from being fragmented; otherwise, false.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ttl " />is less than or equal to zero.</exception>
    </member>
    <member name="P:System.Net.NetworkInformation.PingOptions.DontFragment">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that controls fragmentation of the data sent to the remote host.</summary>
      <returns>true if the data cannot be sent in multiple packets; otherwise false. The default is false.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.PingOptions.Ttl">
      <summary>Gets or sets the number of routing nodes that can forward the <see cref="T:System.Net.NetworkInformation.Ping" /> data before it is discarded.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the number of times the <see cref="T:System.Net.NetworkInformation.Ping" /> data packets can be forwarded. The default is 128.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than or equal to zero.</exception>
    </member>
    <member name="T:System.Net.NetworkInformation.PingReply">
      <summary>Provides information about the status and data resulting from a <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> or <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> operation.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.PingReply.Address">
      <summary>Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> containing the destination for the ICMP echo message.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.PingReply.Buffer">
      <summary>Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.</summary>
      <returns>A <see cref="T:System.Byte" /> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.PingReply.Options">
      <summary>Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.</summary>
      <returns>A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> is <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; otherwise, null.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.PingReply.RoundtripTime">
      <summary>Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</summary>
      <returns>An <see cref="T:System.Int64" /> that specifies the round trip time, in milliseconds. </returns>
    </member>
    <member name="P:System.Net.NetworkInformation.PingReply.Status">
      <summary>Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</summary>
      <returns>An <see cref="T:System.Net.NetworkInformation.IPStatus" /> value indicating the result of the request.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.PrefixOrigin">
      <summary>Specifies how an IP address network prefix was located.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.PrefixOrigin.Other">
      <summary>The prefix was located using an unspecified source.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.PrefixOrigin.Manual">
      <summary>The prefix was manually configured.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.PrefixOrigin.WellKnown">
      <summary>The prefix is a well-known prefix. Well-known prefixes are specified in standard-track Request for Comments (RFC) documents and assigned by the Internet Assigned Numbers Authority (Iana) or an address registry. Such prefixes are reserved for special purposes.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.PrefixOrigin.Dhcp">
      <summary>The prefix was supplied by a Dynamic Host Configuration Protocol (DHCP) server.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.PrefixOrigin.RouterAdvertisement">
      <summary>The prefix was supplied by a router advertisement.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.SuffixOrigin">
      <summary>Specifies how an IP address host suffix was located.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.SuffixOrigin.Other">
      <summary>The suffix was located using an unspecified source.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.SuffixOrigin.Manual">
      <summary>The suffix was manually configured.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.SuffixOrigin.WellKnown">
      <summary>The suffix is a well-known suffix. Well-known suffixes are specified in standard-track Request for Comments (RFC) documents and assigned by the Internet Assigned Numbers Authority (Iana) or an address registry. Such suffixes are reserved for special purposes.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.SuffixOrigin.OriginDhcp">
      <summary>The suffix was supplied by a Dynamic Host Configuration Protocol (DHCP) server.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.SuffixOrigin.LinkLayerAddress">
      <summary>The suffix is a link-local suffix.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.SuffixOrigin.Random">
      <summary>The suffix was randomly assigned.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.TcpConnectionInformation">
      <summary>Provides information about the Transmission Control Protocol (TCP) connections on the local computer.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.TcpConnectionInformation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.TcpConnectionInformation" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpConnectionInformation.LocalEndPoint">
      <summary>Gets the local endpoint of a Transmission Control Protocol (TCP) connection.</summary>
      <returns>An <see cref="T:System.Net.IPEndPoint" /> instance that contains the IP address and port on the local computer.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpConnectionInformation.RemoteEndPoint">
      <summary>Gets the remote endpoint of a Transmission Control Protocol (TCP) connection.</summary>
      <returns>An <see cref="T:System.Net.IPEndPoint" /> instance that contains the IP address and port on the remote computer.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpConnectionInformation.State">
      <summary>Gets the state of this Transmission Control Protocol (TCP) connection.</summary>
      <returns>One of the <see cref="T:System.Net.NetworkInformation.TcpState" /> enumeration values.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.TcpState">
      <summary>Specifies the states of a Transmission Control Protocol (TCP) connection.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.Unknown">
      <summary>The TCP connection state is unknown.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.Closed">
      <summary>The TCP connection is closed.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.Listen">
      <summary>The local endpoint of the TCP connection is listening for a connection request from any remote endpoint.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.SynSent">
      <summary>The local endpoint of the TCP connection has sent the remote endpoint a segment header with the synchronize (SYN) control bit set and is waiting for a matching connection request.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.SynReceived">
      <summary>The local endpoint of the TCP connection has sent and received a connection request and is waiting for an acknowledgment.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.Established">
      <summary>The TCP handshake is complete. The connection has been established and data can be sent.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.FinWait1">
      <summary>The local endpoint of the TCP connection is waiting for a connection termination request from the remote endpoint or for an acknowledgement of the connection termination request sent previously.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.FinWait2">
      <summary>The local endpoint of the TCP connection is waiting for a connection termination request from the remote endpoint.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.CloseWait">
      <summary>The local endpoint of the TCP connection is waiting for a connection termination request from the local user.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.Closing">
      <summary>The local endpoint of the TCP connection is waiting for an acknowledgement of the connection termination request sent previously.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.LastAck">
      <summary>The local endpoint of the TCP connection is waiting for the final acknowledgement of the connection termination request sent previously.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.TimeWait">
      <summary>The local endpoint of the TCP connection is waiting for enough time to pass to ensure that the remote endpoint received the acknowledgement of its connection termination request.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.TcpState.DeleteTcb">
      <summary>The transmission control buffer (TCB) for the TCP connection is being deleted.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.TcpStatistics">
      <summary>Provides Transmission Control Protocol (TCP) statistical data.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.TcpStatistics.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.TcpStatistics" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted">
      <summary>Gets the number of accepted Transmission Control Protocol (TCP) connection requests.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of TCP connection requests accepted.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated">
      <summary>Gets the number of Transmission Control Protocol (TCP) connection requests made by clients.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of TCP connections initiated by clients.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.CumulativeConnections">
      <summary>Specifies the total number of Transmission Control Protocol (TCP) connections established.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of connections established.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.CurrentConnections">
      <summary>Gets the number of current Transmission Control Protocol (TCP) connections.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of current TCP connections.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.ErrorsReceived">
      <summary>Gets the number of Transmission Control Protocol (TCP) errors received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of TCP errors received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts">
      <summary>Gets the number of failed Transmission Control Protocol (TCP) connection attempts.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of failed TCP connection attempts.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.MaximumConnections">
      <summary>Gets the maximum number of supported Transmission Control Protocol (TCP) connections.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of TCP connections that can be supported.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout">
      <summary>Gets the maximum retransmission time-out value for Transmission Control Protocol (TCP) segments.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the maximum number of milliseconds permitted by a TCP implementation for the retransmission time-out value.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout">
      <summary>Gets the minimum retransmission time-out value for Transmission Control Protocol (TCP) segments.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the minimum number of milliseconds permitted by a TCP implementation for the retransmission time-out value.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.ResetConnections">
      <summary>Gets the number of RST packets received by Transmission Control Protocol (TCP) connections.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of reset TCP connections.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.ResetsSent">
      <summary>Gets the number of Transmission Control Protocol (TCP) segments sent with the reset flag set.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of TCP segments sent with the reset flag set.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.SegmentsReceived">
      <summary>Gets the number of Transmission Control Protocol (TCP) segments received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of TCP segments received.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.SegmentsResent">
      <summary>Gets the number of Transmission Control Protocol (TCP) segments re-sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of TCP segments retransmitted.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.TcpStatistics.SegmentsSent">
      <summary>Gets the number of Transmission Control Protocol (TCP) segments sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of TCP segments sent.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.UdpStatistics">
      <summary>Provides User Datagram Protocol (UDP) statistical data.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.UdpStatistics.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.UdpStatistics" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.UdpStatistics.DatagramsReceived">
      <summary>Gets the number of User Datagram Protocol (UDP) datagrams that were received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of datagrams that were delivered to UDP users.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.UdpStatistics.DatagramsSent">
      <summary>Gets the number of User Datagram Protocol (UDP) datagrams that were sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of datagrams that were sent.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.UdpStatistics.IncomingDatagramsDiscarded">
      <summary>Gets the number of User Datagram Protocol (UDP) datagrams that were received and discarded because of port errors.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of received UDP datagrams that were discarded because there was no listening application at the destination port.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.UdpStatistics.IncomingDatagramsWithErrors">
      <summary>Gets the number of User Datagram Protocol (UDP) datagrams that were received and discarded because of errors other than bad port information.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of received UDP datagrams that could not be delivered for reasons other than the lack of an application at the destination port.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.UdpStatistics.UdpListeners">
      <summary>Gets the number of local endpoints that are listening for User Datagram Protocol (UDP) datagrams.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the total number of sockets that are listening for UDP datagrams.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.UnicastIPAddressInformation">
      <summary>Provides information about a network interface's unicast address.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> class.</summary>
    </member>
    <member name="P:System.Net.NetworkInformation.UnicastIPAddressInformation.AddressPreferredLifetime">
      <summary>Gets the number of seconds remaining during which this address is the preferred address.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the number of seconds left for this address to remain preferred.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.UnicastIPAddressInformation.AddressValidLifetime">
      <summary>Gets the number of seconds remaining during which this address is valid.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the number of seconds left for this address to remain assigned.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.UnicastIPAddressInformation.DhcpLeaseLifetime">
      <summary>Specifies the amount of time remaining on the Dynamic Host Configuration Protocol (DHCP) lease for this IP address.</summary>
      <returns>An <see cref="T:System.Int64" /> value that contains the number of seconds remaining before the computer must release the <see cref="T:System.Net.IPAddress" /> instance.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.UnicastIPAddressInformation.DuplicateAddressDetectionState">
      <summary>Gets a value that indicates the state of the duplicate address detection algorithm.</summary>
      <returns>One of the <see cref="T:System.Net.NetworkInformation.DuplicateAddressDetectionState" /> values that indicates the progress of the algorithm in determining the uniqueness of this IP address.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.UnicastIPAddressInformation.IPv4Mask">
      <summary>Gets the IPv4 mask.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> object that contains the IPv4 mask.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.UnicastIPAddressInformation.PrefixOrigin">
      <summary>Gets a value that identifies the source of a unicast Internet Protocol (IP) address prefix.</summary>
      <returns>One of the <see cref="T:System.Net.NetworkInformation.PrefixOrigin" /> values that identifies how the prefix information was obtained.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.UnicastIPAddressInformation.SuffixOrigin">
      <summary>Gets a value that identifies the source of a unicast Internet Protocol (IP) address suffix.</summary>
      <returns>One of the <see cref="T:System.Net.NetworkInformation.SuffixOrigin" /> values that identifies how the suffix information was obtained.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not valid on computers running operating systems earlier than Windows XP. </exception>
    </member>
    <member name="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection">
      <summary>Stores a set of <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> types.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection" /> class.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Add(System.Net.NetworkInformation.UnicastIPAddressInformation)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because this operation is not supported for this collection.</summary>
      <param name="address">The object to be added to the collection.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Clear">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because this operation is not supported for this collection.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)">
      <summary>Checks whether the collection contains the specified <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> object.</summary>
      <returns>true if the <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> object exists in the collection; otherwise, false.</returns>
      <param name="address">The <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> object to be searched in the collection.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[],System.Int32)">
      <summary>Copies the elements in this collection to a one-dimensional array of type <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" />.</summary>
      <param name="array">A one-dimensional array that receives a copy of the collection.</param>
      <param name="offset">The zero-based index in <paramref name="array" /> at which the copy begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in this <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection" /> is greater than the available space from <paramref name="offset" /> to the end of the destination <paramref name="array" />. </exception>
      <exception cref="T:System.InvalidCastException">The elements in this <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Count">
      <summary>Gets the number of <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> types in this collection.</summary>
      <returns>An <see cref="T:System.Int32" /> value that contains the number of <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.GetEnumerator">
      <summary>Returns an object that can be used to iterate through this collection.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.IsReadOnly">
      <summary>Gets a value that indicates whether access to this collection is read-only.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> instance at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> at the specified location.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> because the collection is read-only and elements cannot be removed.</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" />.</returns>
      <param name="address">The object to be removed.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an object that can be used to iterate through this collection.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformation" /> types in this collection.</returns>
    </member>
    <member name="T:System.Net.Security.AuthenticatedStream">
      <summary>Provides methods for passing credentials across a stream and requesting or performing authentication for client-server applications.</summary>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.AuthenticatedStream" /> class. </summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.AuthenticatedStream" />  for sending and receiving data.</param>
      <param name="leaveInnerStreamOpen">A <see cref="T:System.Boolean" /> that indicates whether closing this <see cref="T:System.Net.Security.AuthenticatedStream" />  object also closes <paramref name="innerStream" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.-or-<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Security.AuthenticatedStream" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.InnerStream">
      <summary>Gets the stream used by this <see cref="T:System.Net.Security.AuthenticatedStream" /> for sending and receiving data.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</summary>
      <returns>true if successful authentication occurred; otherwise, false. </returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether data sent using this <see cref="T:System.Net.Security.AuthenticatedStream" /> is encrypted.</summary>
      <returns>true if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</summary>
      <returns>true if the client and server have been authenticated; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsServer">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection was authenticated as the server.</summary>
      <returns>true if the local endpoint was authenticated as the server side of a client-server authenticated connection; false if the local endpoint was authenticated as the client.</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsSigned">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</summary>
      <returns>true if the data is signed before being transmitted; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
      <summary>Gets whether the stream used by this <see cref="T:System.Net.Security.AuthenticatedStream" /> for sending and receiving data has been left open.</summary>
      <returns>true if the inner stream has been left open; otherwise, false.</returns>
    </member>
    <member name="T:System.Net.Security.AuthenticationLevel">
      <summary>Specifies client requirements for authentication and impersonation when using the <see cref="T:System.Net.WebRequest" /> class and derived classes to request a resource.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.None">
      <summary>No authentication is required for the client and server.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested">
      <summary>The client and server should be authenticated. The request does not fail if the server is not authenticated. To determine whether mutual authentication occurred, check the value of the <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> property.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired">
      <summary>The client and server should be authenticated. If the server is not authenticated, your application will receive an <see cref="T:System.IO.IOException" /> with a <see cref="T:System.Net.ProtocolViolationException" /> inner exception that indicates that mutual authentication failed</summary>
    </member>
    <member name="T:System.Net.Security.EncryptionPolicy">
      <summary>The EncryptionPolicy to use. </summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.RequireEncryption">
      <summary>Require encryption and never allow a NULL cipher.</summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.AllowNoEncryption">
      <summary>Prefer that full encryption be used, but allow a NULL cipher (no encryption) if the server agrees. </summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.NoEncryption">
      <summary>Allow no encryption and request that a NULL cipher be used if the other endpoint can handle a NULL cipher.</summary>
    </member>
    <member name="T:System.Net.Security.LocalCertificateSelectionCallback">
      <summary>Selects the local Secure Sockets Layer (SSL) certificate used for authentication.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> used for establishing an SSL connection.</returns>
      <param name="sender">An object that contains state information for this validation.</param>
      <param name="targetHost">The host server specified by the client.</param>
      <param name="localCertificates">An <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing local certificates.</param>
      <param name="remoteCertificate">The certificate used to authenticate the remote party.</param>
      <param name="acceptableIssuers">A <see cref="T:System.String" /> array of certificate issuers acceptable to the remote party.</param>
    </member>
    <member name="T:System.Net.Security.NegotiateStream">
      <summary>Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</summary>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</param>
      <param name="leaveInnerStreamOpen">true to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <paramref name="innerstream" />; false to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <paramref name="innerStream" />. See the Remarks section for more information.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.- or -<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
      <summary>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <summary>Called by clients to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified client credential and the channel binding. </summary>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</param>
      <param name="binding">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection. </param>
      <param name="targetName">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> is null.- or -<paramref name="credential" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>Called by clients to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credential, authentication options, and channel binding.</summary>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</param>
      <param name="binding">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</param>
      <param name="targetName">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</param>
      <param name="requiredProtectionLevel">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</param>
      <param name="allowedImpersonationLevel">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> is null.- or -<paramref name="credential" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> is not a valid value.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
      <summary>Called by clients to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified client credential. </summary>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</param>
      <param name="targetName">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> is null.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>Called by clients to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credentials and authentication options.</summary>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</param>
      <param name="targetName">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</param>
      <param name="requiredProtectionLevel">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</param>
      <param name="allowedImpersonationLevel">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> is not a valid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
      <summary>Called by servers to authenticate the client, and optionally the server, in a client-server connection.</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 and Windows 98 are not supported.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>Called by servers to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified server credentials and authentication options.</summary>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</param>
      <param name="requiredProtectionLevel">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</param>
      <param name="requiredImpersonationLevel">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential " />is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to try to r-authenticate.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the client. You cannot use the stream to retry authentication as the server.</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 and Windows 98 are not supported.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>Called by servers to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified server credentials, authentication options, and extended protection policy.</summary>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</param>
      <param name="policy">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</param>
      <param name="requiredProtectionLevel">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</param>
      <param name="requiredImpersonationLevel">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential " />is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to try to r-authenticate.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the client. You cannot use the stream to retry authentication as the server.</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 and Windows 98 are not supported.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <summary>Called by servers to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified extended protection policy.</summary>
      <param name="policy">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection. </param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 and Windows 98 are not supported.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
      <summary>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. This method does not block.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation. </returns>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</param>
      <param name="asyncState">A user-defined object containing information about the operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
      <summary>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credentials and channel binding. This method does not block.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</returns>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</param>
      <param name="binding">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</param>
      <param name="targetName">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete. </param>
      <param name="asyncState">A user-defined object containing information about the write operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> is null.- or -<paramref name="targetName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credentials, authentication options, and channel binding. This method does not block.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</returns>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</param>
      <param name="binding">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</param>
      <param name="targetName">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</param>
      <param name="requiredProtectionLevel">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</param>
      <param name="allowedImpersonationLevel">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete. </param>
      <param name="asyncState">A user-defined object containing information about the write operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> is null.- or -<paramref name="targetName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
      <summary>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credentials. This method does not block.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation. </returns>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</param>
      <param name="targetName">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</param>
      <param name="asyncState">A user-defined object containing information about the write operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> is null.- or -<paramref name="targetName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credentials and authentication options. This method does not block.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation. </returns>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</param>
      <param name="targetName">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</param>
      <param name="requiredProtectionLevel">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</param>
      <param name="allowedImpersonationLevel">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete. </param>
      <param name="asyncState">A user-defined object containing information about the write operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> is null.- or -<paramref name="targetName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
      <summary>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. This method does not block.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation. </returns>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</param>
      <param name="asyncState">A user-defined object containing information about the operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 and Windows 98 are not supported.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified server credentials and authentication options. This method does not block.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation. </returns>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</param>
      <param name="requiredProtectionLevel">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</param>
      <param name="requiredImpersonationLevel">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</param>
      <param name="asyncState">A user-defined object containing information about the operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the client. You cannot use the stream to retry authentication as the server.</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 and Windows 98 are not supported.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified server credentials, authentication options, and extended protection policy. This method does not block.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</returns>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</param>
      <param name="policy">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</param>
      <param name="requiredProtectionLevel">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</param>
      <param name="requiredImpersonationLevel">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete. </param>
      <param name="asyncState">A user-defined object containing information about the write operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.- or -This stream was used previously to attempt authentication as the client. You cannot use the stream to retry authentication as the server.</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 and Windows 98 are not supported.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
      <summary>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified extended protection policy. This method does not block.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</returns>
      <param name="policy">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete. </param>
      <param name="asyncState">A user-defined object containing information about the write operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 and Windows 98 are not supported.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous read operation that reads data from the stream and stores it in the specified array. </summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation. </returns>
      <param name="buffer">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</param>
      <param name="offset">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</param>
      <param name="count">The maximum number of bytes to read from the stream.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete. </param>
      <param name="asyncState">A user-defined object containing information about the read operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> is less than 0.- or -<paramref name="offset" /> is greater than the length of <paramref name="buffer" />.- or -<paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The read operation failed.- or -Encryption is in use, but the data could not be decrypted.</exception>
      <exception cref="T:System.NotSupportedException">There is already a read operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation. </returns>
      <param name="buffer">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</param>
      <param name="offset">The zero-based location in<paramref name=" buffer" /> at which to begin reading bytes to be written to the stream.</param>
      <param name="count">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete. </param>
      <param name="asyncState">A user-defined object containing information about the write operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset is less than 0" />.- or -<paramref name="offset" /> is greater than the length of <paramref name="buffer" />.- or -<paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.- or -Encryption is in use, but the data could not be encrypted.</exception>
      <exception cref="T:System.NotSupportedException">There is already a write operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanRead">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</summary>
      <returns>true if authentication has occurred and the underlying stream is readable; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanSeek">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</summary>
      <returns>This property always returns false.</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanTimeout">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</summary>
      <returns>true if the underlying stream supports time-outs; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanWrite">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</summary>
      <returns>true if authentication has occurred and the underlying stream is writable; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <summary>Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending client authentication to complete.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <summary>Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending authentication to complete.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
      <summary>Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending read operation to complete.</exception>
      <exception cref="T:System.IO.IOException">The read operation failed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
      <summary>Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending write operation to complete.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Flush">
      <summary>Causes any buffered data to be written to the underlying device.</summary>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
      <summary>Gets a value that indicates how the server can use the client's credentials.</summary>
      <returns>One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</returns>
      <exception cref="T:System.InvalidOperationException">Authentication failed or has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</summary>
      <returns>true if successful authentication occurred; otherwise, false. </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsEncrypted">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</summary>
      <returns>true if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</summary>
      <returns>true if the server has been authenticated; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsServer">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</summary>
      <returns>true if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsSigned">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</summary>
      <returns>true if the data is signed before being transmitted; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Length">
      <summary>Gets the length of the underlying stream.</summary>
      <returns>A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</returns>
      <exception cref="T:System.NotSupportedException">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Position">
      <summary>Gets or sets the current position in the underlying stream.</summary>
      <returns>A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</returns>
      <exception cref="T:System.NotSupportedException">Setting this property is not supported.- or -Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Reads data from this stream and stores it in the specified array.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream. When there is no more data to be read, returns 0.</returns>
      <param name="buffer">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</param>
      <param name="offset">A <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</param>
      <param name="count">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</param>
      <exception cref="T:System.IO.IOException">The read operation failed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
      <exception cref="T:System.NotSupportedException">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ReadTimeout">
      <summary>Gets or sets the amount of time a read operation blocks waiting for data.</summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails. </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.RemoteIdentity">
      <summary>Gets information about the identity of the remote party sharing this authenticated stream.</summary>
      <returns>An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</returns>
      <exception cref="T:System.InvalidOperationException">Authentication failed or has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" />.</returns>
      <param name="offset">This value is ignored.</param>
      <param name="origin">This value is ignored.</param>
      <exception cref="T:System.NotSupportedException">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
      <summary>Sets the length of the underlying stream.</summary>
      <param name="value">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</summary>
      <param name="buffer">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</param>
      <param name="offset">An <see cref="T:System.Int32" /> containing the zero-based location in<paramref name=" buffer" /> at which to begin reading bytes to be written to the stream.</param>
      <param name="count">A <see cref="T:System.Int32" /> containing the number of bytes to read from <paramref name="buffer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset is less than 0" />.- or -<paramref name="offset" /> is greater than the length of <paramref name="buffer" />.- or -<paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.- or -Encryption is in use, but the data could not be encrypted.</exception>
      <exception cref="T:System.NotSupportedException">There is already a write operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.WriteTimeout">
      <summary>Gets or sets the amount of time a write operation blocks waiting for data.</summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails. </returns>
    </member>
    <member name="T:System.Net.Security.ProtectionLevel">
      <summary>Indicates the security services requested for an authenticated stream.</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.None">
      <summary>Authentication only.</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.Sign">
      <summary>Sign data to help ensure the integrity of transmitted data.</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.EncryptAndSign">
      <summary>Encrypt and sign data to help ensure the confidentiality and integrity of transmitted data.</summary>
    </member>
    <member name="T:System.Net.Security.RemoteCertificateValidationCallback">
      <summary>Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that determines whether the specified certificate is accepted for authentication.</returns>
      <param name="sender">An object that contains state information for this validation.</param>
      <param name="certificate">The certificate used to authenticate the remote party.</param>
      <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
      <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
    </member>
    <member name="T:System.Net.Security.SslPolicyErrors">
      <summary>Enumerates Secure Socket Layer (SSL) policy errors.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.None">
      <summary>No SSL policy errors.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable">
      <summary>Certificate not available.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch">
      <summary>Certificate name mismatch.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors">
      <summary>
        <see cref="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus" /> has returned a non empty array.</summary>
    </member>
    <member name="T:System.Net.Security.SslStream">
      <summary>Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</summary>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> is not readable.-or-<paramref name="innerStream" /> is not writable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.-or-<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</param>
      <param name="leaveInnerStreamOpen">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data. This parameter indicates if the inner stream is left open.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> is not readable.-or-<paramref name="innerStream" /> is not writable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.-or-<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior and certificate validation delegate.</summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</param>
      <param name="leaveInnerStreamOpen">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data. This parameter indicates if the inner stream is left open.</param>
      <param name="userCertificateValidationCallback">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> is not readable.-or-<paramref name="innerStream" /> is not writable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.-or-<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior, certificate validation delegate and certificate selection delegate.</summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</param>
      <param name="leaveInnerStreamOpen">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data. This parameter indicates if the inner stream is left open.</param>
      <param name="userCertificateValidationCallback">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</param>
      <param name="userCertificateSelectionCallback">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> is not readable.-or-<paramref name="innerStream" /> is not writable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.-or-<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /></summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</param>
      <param name="leaveInnerStreamOpen">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data. This parameter indicates if the inner stream is left open.</param>
      <param name="userCertificateValidationCallback">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</param>
      <param name="userCertificateSelectionCallback">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</param>
      <param name="encryptionPolicy">The <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> is not readable.-or-<paramref name="innerStream" /> is not writable.-or-<paramref name="encryptionPolicy" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.-or-<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
      <summary>Called by clients to authenticate the server and optionally the client in a client-server connection.</summary>
      <param name="targetHost">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection and SSL protocol.</summary>
      <param name="targetHost">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</param>
      <param name="clientCertificates">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</param>
      <param name="enabledSslProtocols">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</param>
      <param name="checkCertificateRevocation">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</summary>
      <param name="serverCertificate">The certificate used to authenticate the server.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</summary>
      <param name="serverCertificate">The X509Certificate used to authenticate the server.</param>
      <param name="clientCertificateRequired">A <see cref="T:System.Boolean" /> value that specifies whether the client must supply a certificate for authentication.</param>
      <param name="enabledSslProtocols">The <see cref="T:System.Security.Authentication.SslProtocols" />  value that represents the protocol used for authentication.</param>
      <param name="checkCertificateRevocation">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
      <summary>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation. </returns>
      <param name="targetHost">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete. </param>
      <param name="asyncState">A user-defined object that contains information about the operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation. </returns>
      <param name="targetHost">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</param>
      <param name="clientCertificates">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</param>
      <param name="enabledSslProtocols">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</param>
      <param name="checkCertificateRevocation">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete. </param>
      <param name="asyncState">A user-defined object that contains information about the operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" />  value.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
      <summary>Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation. </returns>
      <param name="serverCertificate">The X509Certificate used to authenticate the server.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</param>
      <param name="asyncState">A user-defined object that contains information about the operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation. </returns>
      <param name="serverCertificate">The X509Certificate used to authenticate the server.</param>
      <param name="clientCertificateRequired">A <see cref="T:System.Boolean" /> value that specifies whether the client must supply a certificate for authentication.</param>
      <param name="enabledSslProtocols">The <see cref="T:System.Security.Authentication.SslProtocols" />  value that represents the protocol used for authentication.</param>
      <param name="checkCertificateRevocation">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete. </param>
      <param name="asyncState">A user-defined object that contains information about the operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation. </returns>
      <param name="buffer">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</param>
      <param name="offset">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</param>
      <param name="count">The maximum number of bytes to read from the stream.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete. </param>
      <param name="asyncState">A user-defined object that contains information about the read operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.<paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.-or-<paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The read operation failed.-or-Encryption is in use, but the data could not be decrypted.</exception>
      <exception cref="T:System.NotSupportedException">There is already a read operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation. </returns>
      <param name="buffer">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</param>
      <param name="offset">The zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</param>
      <param name="count">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete. </param>
      <param name="asyncState">A user-defined object that contains information about the write operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.<paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.-or-<paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.</exception>
      <exception cref="T:System.NotSupportedException">There is already a write operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.CanRead">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</summary>
      <returns>true if authentication has occurred and the underlying stream is readable; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanSeek">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</summary>
      <returns>This property always returns false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanTimeout">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</summary>
      <returns>true if the underlying stream supports time-outs; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanWrite">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</summary>
      <returns>true if authentication has occurred and the underlying stream is writable; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the certificate revocation list is checked during the certificate validation process.</summary>
      <returns>true if the certificate revocation list is checked; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherAlgorithm">
      <summary>Gets a value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</summary>
      <returns>A <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> value.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherStrength">
      <summary>Gets a value that identifies the strength of the cipher algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the strength of the algorithm, in bits.</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Security.SslStream" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <summary>Ends a pending asynchronous server authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending server authentication to complete.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <summary>Ends a pending asynchronous client authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending client authentication to complete.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
      <summary>Ends an asynchronous read operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending read operation to complete.</exception>
      <exception cref="T:System.IO.IOException">The read operation failed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
      <summary>Ends an asynchronous write operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending write operation to complete.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Flush">
      <summary>Causes any buffered data to be written to the underlying device.</summary>
    </member>
    <member name="P:System.Net.Security.SslStream.HashAlgorithm">
      <summary>Gets the algorithm used for generating message authentication codes (MACs).</summary>
      <returns>A <see cref="T:System.Security.Authentication.HashAlgorithmType" /> value.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.HashStrength">
      <summary>Gets a value that identifies the strength of the hash algorithm used by this instance.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.HashAlgorithmType" /> algorithm, in bits. Valid values are 128 or 160.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</summary>
      <returns>true if successful authentication occurred; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsEncrypted">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.SslStream" /> uses data encryption.</summary>
      <returns>true if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</summary>
      <returns>true if the server has been authenticated; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsServer">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.SslStream" /> was authenticated as the server.</summary>
      <returns>true if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsSigned">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</summary>
      <returns>true if the data is signed before being transmitted; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
      <summary>Gets the key exchange algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</summary>
      <returns>An <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> value.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeStrength">
      <summary>Gets a value that identifies the strength of the key exchange algorithm used by this instance.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> algorithm, in bits.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.Length">
      <summary>Gets the length of the underlying stream.</summary>
      <returns>A <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.NotSupportedException">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.LocalCertificate">
      <summary>Gets the certificate used to authenticate the local endpoint.</summary>
      <returns>An X509Certificate object that represents the certificate supplied for authentication or null if no certificate was supplied.</returns>
      <exception cref="T:System.InvalidOperationException">Authentication failed or has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.Position">
      <summary>Gets or sets the current position in the underlying stream.</summary>
      <returns>A <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.NotSupportedException">Setting this property is not supported.-or-Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Reads data from this stream and stores it in the specified array.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the number of bytes read. When there is no more data to be read, returns 0.</returns>
      <param name="buffer">A <see cref="T:System.Byte" /> array that receives the bytes read from this stream.</param>
      <param name="offset">A <see cref="T:System.Int32" /> that contains the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</param>
      <param name="count">A <see cref="T:System.Int32" /> that contains the maximum number of bytes to read from this stream.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.<paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.-or-<paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The read operation failed. Check the inner exception, if present to determine the cause of the failure.</exception>
      <exception cref="T:System.NotSupportedException">There is already a read operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.ReadTimeout">
      <summary>Gets or sets the amount of time a read operation blocks waiting for data.</summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous read operation fails.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.RemoteCertificate">
      <summary>Gets the certificate used to authenticate the remote endpoint.</summary>
      <returns>An X509Certificate object that represents the certificate supplied for authentication or null if no certificate was supplied.</returns>
      <exception cref="T:System.InvalidOperationException">Authentication failed or has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" />.</returns>
      <param name="offset">This value is ignored.</param>
      <param name="origin">This value is ignored.</param>
      <exception cref="T:System.NotSupportedException">Seeking is not supported by <see cref="T:System.Net.Security.SslStream" /> objects.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.SetLength(System.Int64)">
      <summary>Sets the length of the underlying stream.</summary>
      <param name="value">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</param>
    </member>
    <member name="P:System.Net.Security.SslStream.SslProtocol">
      <summary>Gets a value that indicates the security protocol used to authenticate this connection.</summary>
      <returns>The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.TransportContext">
      <summary>Gets the <see cref="T:System.Net.TransportContext" /> used for authentication using extended protection.</summary>
      <returns>The <see cref="T:System.Net.TransportContext" /> object that contains the channel binding token (CBT) used for extended protection.</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[])">
      <summary>Writes the specified data to this stream.</summary>
      <param name="buffer">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.</exception>
      <exception cref="T:System.NotSupportedException">There is already a write operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</summary>
      <param name="buffer">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</param>
      <param name="offset">A <see cref="T:System.Int32" /> that contains the zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</param>
      <param name="count">A <see cref="T:System.Int32" /> that contains the number of bytes to read from <paramref name="buffer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.<paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.-or-<paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.</exception>
      <exception cref="T:System.NotSupportedException">There is already a write operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.WriteTimeout">
      <summary>Gets or sets the amount of time a write operation blocks waiting for data.</summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous write operation fails. </returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary>Specifies the addressing scheme that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class can use.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary>Unknown address family.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary>Unspecified address family.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unix">
      <summary>Unix local to host address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary>Address for IP version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ImpLink">
      <summary>ARPANET IMP address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Pup">
      <summary>Address for PUP protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Chaos">
      <summary>Address for MIT CHAOS protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NS">
      <summary>Address for Xerox NS protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ipx">
      <summary>IPX or SPX address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Iso">
      <summary>Address for ISO protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Osi">
      <summary>Address for OSI protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ecma">
      <summary>European Computer Manufacturers Association (ECMA) address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataKit">
      <summary>Address for Datakit protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ccitt">
      <summary>Addresses for CCITT protocols, such as X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Sna">
      <summary>IBM SNA address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DecNet">
      <summary>DECnet address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataLink">
      <summary>Direct data-link interface address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Lat">
      <summary>LAT address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.HyperChannel">
      <summary>NSC Hyperchannel address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.AppleTalk">
      <summary>AppleTalk address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetBios">
      <summary>NetBios address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.VoiceView">
      <summary>VoiceView address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.FireFox">
      <summary>FireFox address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Banyan">
      <summary>Banyan address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Atm">
      <summary>Native ATM services address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary>Address for IP version 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Cluster">
      <summary>Address for Microsoft cluster products.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ieee12844">
      <summary>IEEE 1284.4 workgroup address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Irda">
      <summary>IrDA address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetworkDesigners">
      <summary>Address for Network Designers OSI gateway-enabled protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Max">
      <summary>MAX address.</summary>
    </member>
    <member name="T:System.Net.Sockets.IOControlCode">
      <summary>Specifies the IO control codes supported by the <see cref="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" /> method.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AsyncIO">
      <summary>Enable notification for when data is waiting to be received. This value is equal to the Winsock 2 FIOASYNC constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NonBlockingIO">
      <summary>Control the blocking behavior of the socket. If the argument specified with this control code is zero, the socket is placed in blocking mode. If the argument is nonzero, the socket is placed in nonblocking mode. This value is equal to the Winsock 2 FIONBIO constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DataToRead">
      <summary>Return the number of bytes available for reading. This value is equal to the Winsock 2 FIONREAD constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.OobDataRead">
      <summary>Return information about out-of-band data waiting to be received. When using this control code on stream sockets, the return value indicates the number of bytes available.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AssociateHandle">
      <summary>Associate this socket with the specified handle of a companion interface. Refer to the appropriate  protocol-specific annex in the Winsock 2 reference or documentation for the particular companion interface for additional details. It is recommended that the Component Object Model (COM) be used instead of this IOCTL to discover and track other interfaces that might be supported by a socket. This control code is present for backward compatibility with systems where COM is not available or cannot be used for some other reason. This value is equal to the Winsock 2 SIO_ASSOCIATE_HANDLE constant. </summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.EnableCircularQueuing">
      <summary>Replace the oldest queued datagram with an incoming datagram when the incoming message queues are full. This value is equal to the Winsock 2 SIO_ENABLE_CIRCULAR_QUEUEING constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.Flush">
      <summary>Discard the contents of the sending queue. This value is equal to the Winsock 2 SIO_FLUSH constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetBroadcastAddress">
      <summary>Return a SOCKADDR structure that contains the broadcast address for the address family of the current socket. The returned address can be used with the <see cref="Overload:System.Net.Sockets.Socket.SendTo" /> method. This value is equal to the Winsock 2 SIO_GET_BROADCAST_ADDRESS constant. This value can be used on User Datagram Protocol (UDP) sockets only.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer">
      <summary>Obtain provider-specific functions that are not part of the Winsock specification. Functions are specified using their provider-assigned GUID. This value is equal to the Winsock 2 SIO_GET_EXTENSION_FUNCTION_POINTER constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetQos">
      <summary>Retrieve the QOS structure associated with the socket. This control is only supported on platforms that provide a QOS capable transport (Windows Me, Windows 2000, and later.) This value is equal to the Winsock 2 SIO_GET_QOS constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetGroupQos">
      <summary>Return the Quality of Service (QOS) attributes for the socket group. This value is reserved for future use, and is equal to the Winsock 2 SIO_GET_GROUP_QOS constant. </summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MultipointLoopback">
      <summary>Control whether multicast data sent by the socket appears as incoming data in the sockets receive queue. This value is equal to the Winsock 2 SIO_MULTIPOINT_LOOPBACK constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastScope">
      <summary>Control the number of times a multicast packet can be forwarded by a router, also known as the Time to Live (TTL), or hop count. This value is equal to the Winsock 2 SIO_MULTICAST_SCOPE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetQos">
      <summary>Set the Quality of Service (QOS) attributes for the socket. QOS defines the bandwidth requirements for the socket. This control code is supported on Windows Me, Windows 2000, and later operating systems. This value is equal to the Winsock 2 SIO_SET_QOS constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetGroupQos">
      <summary>Set the Quality of Service (QOS) attributes for the socket group. This value is reserved for future use and is equal to the Winsock 2 SIO_SET_GROUP_QOS constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.TranslateHandle">
      <summary>Return a handle for the socket that is valid in the context of a companion interface. This value is equal to the Winsock 2 SIO_TRANSLATE_HANDLE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery">
      <summary>Return the interface addresses that can be used to connect to the specified remote address. This value is equal to the Winsock 2 SIO_ROUTING_INTERFACE_QUERY constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange">
      <summary>Enable receiving notification when the local interface used to access a remote endpoint changes. This value is equal to the Winsock 2 SIO_ROUTING_INTERFACE_CHANGE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListQuery">
      <summary>Return the list of local interfaces that the socket can bind to. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_QUERY constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListChange">
      <summary>Enable receiving notification when the list of local interfaces for the socket's protocol family changes. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_CHANGE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle">
      <summary>Retrieve the underlying provider's SOCKET handle. This handle can be used to receive plug-and-play event notification. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_QUERY_TARGET_PNP_HANDLE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NamespaceChange">
      <summary>Control whether the socket receives notification when a namespace query becomes invalid. This control code is supported on Windows XP and later operating systems. This value is equal to the Winsock 2 SIO_NSP_NOTIFY_CHANGE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListSort">
      <summary>Sort the structure returned by the <see cref="F:System.Net.Sockets.IOControlCode.AddressListQuery" /> field and add scope ID information for IPv6 addresses. This control code is supported on Windows XP and later operating systems. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_SORT constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAll">
      <summary>Enable receiving all IPv4 packets on the network. The socket must have address family <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, the socket type must be <see cref="F:System.Net.Sockets.SocketType.Raw" />, and the protocol type must be <see cref="F:System.Net.Sockets.ProtocolType.IP" />. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_RCVALL constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast">
      <summary>Enable receiving all multicast IPv4 packets on the network. These are packets with destination addresses in the range 224.0.0.0 through 239.255.255.255. The socket must have address family <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, the socket type must be <see cref="F:System.Net.Sockets.SocketType.Raw" />, and the protocol type must be <see cref="F:System.Net.Sockets.ProtocolType.Udp" />. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_RCVALL_MCAST constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast">
      <summary>Enable receiving all Internet Group Management Protocol (IGMP) packets on the network. The socket must have address family <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, the socket type must be <see cref="F:System.Net.Sockets.SocketType.Raw" />, and the protocol type must be <see cref="F:System.Net.Sockets.ProtocolType.Igmp" />. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_RCVALL_IGMPMCAST constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.KeepAliveValues">
      <summary>Control sending TCP keep-alive packets and the interval at which they are sent. This control code is supported on Windows 2000 and later operating systems. For additional information, see RFC 1122 section 4.2.3.6. This value is equal to the Winsock 2 SIO_KEEPALIVE_VALS constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert">
      <summary>This value is equal to the Winsock 2 SIO_ABSORB_RTRALERT constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.UnicastInterface">
      <summary>Set the interface used for outgoing unicast packets. This value is equal to the Winsock 2 SIO_UCAST_IF constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.LimitBroadcasts">
      <summary>This value is equal to the Winsock 2 SIO_LIMIT_BROADCASTS constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.BindToInterface">
      <summary>Bind the socket to a specified interface index. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_INDEX_BIND constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastInterface">
      <summary>Set the interface used for outgoing multicast packets. The interface is identified by its index. This control code is supported on Windows 2000 and later operating systems.  This value is equal to the Winsock 2 SIO_INDEX_MCASTIF constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface">
      <summary>Join a multicast group using an interface identified by its index. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_INDEX_ADD_MCAST constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface">
      <summary>Remove the socket from a multicast group. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_INDEX_ADD_MCAST constant.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPPacketInformation">
      <summary>Presents the packet information from a call to <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> or <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Address">
      <summary>Gets the origin information of the packet that was received as a result of calling the <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> method or <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> method.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> that indicates the origin information of the packet that was received as a result of calling the <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> method or <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> method. For packets that were sent from a unicast address, the <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> property will return the <see cref="T:System.Net.IPAddress" /> of the sender; for multicast or broadcast packets, the <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> property will return the multicast or broadcast <see cref="T:System.Net.IPAddress" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="comparand" /> is an instance of <see cref="T:System.Net.Sockets.IPPacketInformation" /> and equals the value of the instance; otherwise, false.</returns>
      <param name="comparand">The object to compare with this instance.</param>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>An Int32 hash code.</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Interface">
      <summary>Gets the network interface information that is associated with a call to <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> or <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
      <returns>An <see cref="T:System.Int32" /> value, which represents the index of the network interface. You can use this index with <see cref="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" /> to get more information about the relevant interface.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Tests whether two specified <see cref="T:System.Net.Sockets.IPPacketInformation" /> instances are equivalent.</summary>
      <returns>true if <paramref name="packetInformation1" /> and <paramref name="packetInformation2" /> are equal; otherwise, false.</returns>
      <param name="packetInformation1">The <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that is to the left of the equality operator.</param>
      <param name="packetInformation2">The <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that is to the right of the equality operator.</param>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Tests whether two specified <see cref="T:System.Net.Sockets.IPPacketInformation" /> instances are not equal.</summary>
      <returns>true if <paramref name="packetInformation1" /> and <paramref name="packetInformation2" /> are unequal; otherwise, false.</returns>
      <param name="packetInformation1">The <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that is to the left of the inequality operator.</param>
      <param name="packetInformation2">The <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that is to the right of the inequality operator.</param>
    </member>
    <member name="T:System.Net.Sockets.IPProtectionLevel">
      <summary>A value that enables restriction of an IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix. </summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unspecified">
      <summary>The IP protection level is unspecified. On Windows 7 and Windows Server 2008 R2, the default value for the IP Protection level on a socket is unspecified.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unrestricted">
      <summary>The IP protection level is unrestricted. This value would be used by applications designed to operate across the Internet, including applications taking advantage of IPv6 NAT traversal capabilities built into Windows (Teredo, for example). These applications may bypass IPv4 firewalls, so applications must be hardened against Internet attacks directed at the opened port. On Windows Server 2008 R2 and Windows Vista, the default value for the IP Protection level on a socket is unrestricted.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.EdgeRestricted">
      <summary>The IP protection level is edge restricted. This value would be used by applications designed to operate across the Internet. This setting does not allow Network Address Translation (NAT) traversal using the Windows Teredo implementation. These applications may bypass IPv4 firewalls, so applications must be hardened against Internet attacks directed at the opened port. On Windows Server 2003 and Windows XP, the default value for the IP Protection level on a socket is edge restricted.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Restricted">
      <summary>The IP protection level is restricted. This value would be used by intranet applications that do not implement Internet scenarios. These applications are generally not tested or hardened against Internet-style attacks. This setting will limit the received traffic to link-local only. </summary>
    </member>
    <member name="T:System.Net.Sockets.IPv6MulticastOption">
      <summary>Contains option values for joining an IPv6 multicast group.</summary>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Initializes a new version of the <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> class for the specified IP multicast group.</summary>
      <param name="group">The <see cref="T:System.Net.IPAddress" /> of the multicast group. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> is null. </exception>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> class with the specified IP multicast group and the local interface address.</summary>
      <param name="group">The group <see cref="T:System.Net.IPAddress" />. </param>
      <param name="ifindex">The local interface address. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ifindex" /> is less than 0.-or- <paramref name="ifindex" /> is greater than 0x00000000FFFFFFFF. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> is null. </exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.Group">
      <summary>Gets or sets the IP address of a multicast group.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> that contains the Internet address of a multicast group.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> is null. </exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.InterfaceIndex">
      <summary>Gets or sets the interface index that is associated with a multicast group.</summary>
      <returns>A <see cref="T:System.UInt64" /> value that specifies the address of the interface.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value that is specified for a set operation is less than 0 or greater than 0x00000000FFFFFFFF. </exception>
    </member>
    <member name="T:System.Net.Sockets.LingerOption">
      <summary>Specifies whether a <see cref="T:System.Net.Sockets.Socket" /> will remain connected after a call to the <see cref="M:System.Net.Sockets.Socket.Close" /> or <see cref="M:System.Net.Sockets.TcpClient.Close" /> methods and the length of time it will remain connected, if data remains to be sent.</summary>
    </member>
    <member name="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.LingerOption" /> class.</summary>
      <param name="enable">true to remain connected after the <see cref="M:System.Net.Sockets.Socket.Close" /> method is called; otherwise, false. </param>
      <param name="seconds">The number of seconds to remain connected after the <see cref="M:System.Net.Sockets.Socket.Close" /> method is called. </param>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.Enabled">
      <summary>Gets or sets a value that indicates whether to linger after the <see cref="T:System.Net.Sockets.Socket" /> is closed.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> should linger after <see cref="M:System.Net.Sockets.Socket.Close" /> is called; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.LingerTime">
      <summary>Gets or sets the amount of time to remain connected after calling the <see cref="M:System.Net.Sockets.Socket.Close" /> method if data remains to be sent.</summary>
      <returns>The amount of time, in seconds, to remain connected after calling <see cref="M:System.Net.Sockets.Socket.Close" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.MulticastOption">
      <summary>Contains <see cref="T:System.Net.IPAddress" /> values used to join and drop multicast groups.</summary>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Initializes a new version of the <see cref="T:System.Net.Sockets.MulticastOption" /> class for the specified IP multicast group.</summary>
      <param name="group">The <see cref="T:System.Net.IPAddress" /> of the multicast group. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> is null. </exception>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.MulticastOption" /> class with the specified IP multicast group address and interface index.</summary>
      <param name="group">The <see cref="T:System.Net.IPAddress" /> of the multicast group.</param>
      <param name="interfaceIndex">The index of the interface that is used to send and receive multicast packets.</param>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.MulticastOption" /> class with the specified IP multicast group address and local IP address associated with a network interface.</summary>
      <param name="group">The group <see cref="T:System.Net.IPAddress" />. </param>
      <param name="mcint">The local <see cref="T:System.Net.IPAddress" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> is null.-or- <paramref name="mcint" /> is null. </exception>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.Group">
      <summary>Gets or sets the IP address of a multicast group.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> that contains the Internet address of a multicast group.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.InterfaceIndex">
      <summary>Gets or sets the index of the interface that is used to send and receive multicast packets. </summary>
      <returns>An integer that represents the index of a <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> array element.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.LocalAddress">
      <summary>Gets or sets the local address associated with a multicast group.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> that contains the local address associated with a multicast group.</returns>
    </member>
    <member name="T:System.Net.Sockets.NetworkStream">
      <summary>Provides the underlying stream of data for network access.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
      <summary>Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="socket">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="socket" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The <paramref name="socket" /> parameter is not connected.-or- The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.-or- The <paramref name="socket" /> parameter is in a nonblocking state. </exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</summary>
      <param name="socket">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data. </param>
      <param name="ownsSocket">Set to true to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="socket" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The <paramref name="socket" /> parameter is not connected.-or- the value of the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.-or- the <paramref name="socket" /> parameter is in a nonblocking state. </exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
      <summary>Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights.</summary>
      <param name="socket">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data. </param>
      <param name="access">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specify the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="socket" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The <paramref name="socket" /> parameter is not connected.-or- the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.-or- the <paramref name="socket" /> parameter is in a nonblocking state. </exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights and the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</summary>
      <param name="socket">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data. </param>
      <param name="access">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specifies the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />. </param>
      <param name="ownsSocket">Set to true to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="socket" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The <paramref name="socket" /> parameter is not connected.-or- The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.-or- The <paramref name="socket" /> parameter is in a nonblocking state. </exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="offset">The location in <paramref name="buffer" /> to begin storing the data. </param>
      <param name="size">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes. </param>
      <param name="state">An object that contains any additional user-defined data. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> parameter is less than 0.-or- The <paramref name="offset" /> parameter is greater than the length of the <paramref name="buffer" /> paramater.-or- The <paramref name="size" /> is less than 0.-or- The <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.-or- There was a failure while reading from the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous write to a stream.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="offset">The location in <paramref name="buffer" /> to begin sending the data. </param>
      <param name="size">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes. </param>
      <param name="state">An object that contains any additional user-defined data. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> parameter is less than 0.-or- The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.-or- The <paramref name="size" /> parameter is less than 0.-or- The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.-or- There was a failure while writing to the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanRead">
      <summary>Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports reading.</summary>
      <returns>true if data can be read from the stream; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
      <summary>Gets a value that indicates whether the stream supports seeking. This property is not currently supported.This property always returns false.</summary>
      <returns>false in all cases to indicate that <see cref="T:System.Net.Sockets.NetworkStream" /> cannot seek a specific location in the stream.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanTimeout">
      <summary>Indicates whether timeout properties are usable for <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
      <summary>Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports writing.</summary>
      <returns>true if data can be written to the <see cref="T:System.Net.Sockets.NetworkStream" />; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Close(System.Int32)">
      <summary>Closes the <see cref="T:System.Net.Sockets.NetworkStream" /> after waiting the specified time to allow data to be sent.</summary>
      <param name="timeout">A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="timeout" /> parameter is less than -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.DataAvailable">
      <summary>Gets a value that indicates whether data is available on the <see cref="T:System.Net.Sockets.NetworkStream" /> to be read.</summary>
      <returns>true if data is available on the stream to be read; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed. </exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.NetworkStream" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
      <summary>Handles the end of an asynchronous read.</summary>
      <returns>The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that represents an asynchronous call. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.-or- An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
      <summary>Handles the end of an asynchronous write.</summary>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that represents the asynchronous call. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.-or- An error occurred while writing to the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Finalize">
      <summary>Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Flush">
      <summary>Flushes data from the stream. This method is reserved for future use.</summary>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Length">
      <summary>Gets the length of the data available on the stream. This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>The length of the data available on the stream.</returns>
      <exception cref="T:System.NotSupportedException">Any use of this property. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Position">
      <summary>Gets or sets the current position in the stream. This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>The current position in the stream.</returns>
      <exception cref="T:System.NotSupportedException">Any use of this property. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="offset">The location in <paramref name="buffer" /> to begin storing the data to. </param>
      <param name="size">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> parameter is less than 0.-or- The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.-or- The <paramref name="size" /> parameter is less than 0.-or- The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.-or- There is a failure reading from the network. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Readable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read.</summary>
      <returns>true to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.ReadTimeout">
      <summary>Gets or sets the amount of time that a read operation blocks waiting for data. </summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails. The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the read operation does not time out.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Sets the current position of the stream to the given value. This method is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>The position in the stream.</returns>
      <param name="offset">This parameter is not used. </param>
      <param name="origin">This parameter is not used. </param>
      <exception cref="T:System.NotSupportedException">Any use of this property. </exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
      <summary>Sets the length of the stream. This method always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">This parameter is not used. </param>
      <exception cref="T:System.NotSupportedException">Any use of this property. </exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Socket">
      <summary>Gets the underlying <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> that represents the underlying network connection.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="offset">The location in <paramref name="buffer" /> from which to start writing data. </param>
      <param name="size">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> parameter is less than 0.-or- The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.-or- The <paramref name="size" /> parameter is less than 0.-or- The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.IO.IOException">There was a failure while writing to the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.-or- There was a failure reading from the network. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Writeable">
      <summary>Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> is writable.</summary>
      <returns>true if data can be written to the stream; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.WriteTimeout">
      <summary>Gets or sets the amount of time that a write operation blocks waiting for data. </summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails. The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the write operation does not time out.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.Sockets.ProtocolFamily">
      <summary>Specifies the type of protocol that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class can use.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unknown">
      <summary>Unknown protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unspecified">
      <summary>Unspecified protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unix">
      <summary>Unix local to host protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetwork">
      <summary>IP version 4 protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ImpLink">
      <summary>ARPANET IMP protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Pup">
      <summary>PUP protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Chaos">
      <summary>MIT CHAOS protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NS">
      <summary>Xerox NS protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ipx">
      <summary>IPX or SPX protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Iso">
      <summary>ISO protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Osi">
      <summary>OSI protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ecma">
      <summary>European Computer Manufacturers Association (ECMA) protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataKit">
      <summary>DataKit protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ccitt">
      <summary>CCITT protocol, such as X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Sna">
      <summary>IBM SNA protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DecNet">
      <summary>DECNet protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataLink">
      <summary>Direct data link protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Lat">
      <summary>LAT protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.HyperChannel">
      <summary>NSC HyperChannel protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.AppleTalk">
      <summary>AppleTalk protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetBios">
      <summary>NetBIOS protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.VoiceView">
      <summary>VoiceView protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.FireFox">
      <summary>FireFox protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Banyan">
      <summary>Banyan protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Atm">
      <summary>Native ATM services protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetworkV6">
      <summary>IP version 6 protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Cluster">
      <summary>Microsoft Cluster products protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ieee12844">
      <summary>IEEE 1284.4 workgroup protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Irda">
      <summary>IrDA protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetworkDesigners">
      <summary>Network Designers OSI gateway enabled protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Max">
      <summary>MAX protocol.</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>Specifies the protocols that the <see cref="T:System.Net.Sockets.Socket" /> class supports.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IP">
      <summary>Internet Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6HopByHopOptions">
      <summary>IPv6 Hop by Hop Options header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Icmp">
      <summary>Internet Control Message Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Igmp">
      <summary>Internet Group Management Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ggp">
      <summary>Gateway To Gateway Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv4">
      <summary>Internet Protocol version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>Transmission Control Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Pup">
      <summary>PARC Universal Packet Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary>User Datagram Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Idp">
      <summary>Internet Datagram Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6">
      <summary>Internet Protocol version 6 (IPv6). </summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6RoutingHeader">
      <summary>IPv6 Routing header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6FragmentHeader">
      <summary>IPv6 Fragment header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecEncapsulatingSecurityPayload">
      <summary>IPv6 Encapsulating Security Payload header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecAuthenticationHeader">
      <summary>IPv6 Authentication header. For details, see RFC 2292 section 2.2.1, available at http://www.ietf.org.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IcmpV6">
      <summary>Internet Control Message Protocol for IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6NoNextHeader">
      <summary>IPv6 No next header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6DestinationOptions">
      <summary>IPv6 Destination Options header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.ND">
      <summary>Net Disk Protocol (unofficial).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Raw">
      <summary>Raw IP packet protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>Unspecified protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ipx">
      <summary>Internet Packet Exchange Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Spx">
      <summary>Sequenced Packet Exchange protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.SpxII">
      <summary>Sequenced Packet Exchange version 2 protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>Unknown protocol.</summary>
    </member>
    <member name="T:System.Net.Sockets.SelectMode">
      <summary>Defines the polling modes for the <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" /> method.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectRead">
      <summary>Read status mode.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectWrite">
      <summary>Write status mode.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectError">
      <summary>Error status mode.</summary>
    </member>
    <member name="T:System.Net.Sockets.SendPacketsElement">
      <summary>Represents an element in a <see cref="T:System.Net.Sockets.SendPacketsElement" /> array.</summary>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified buffer.</summary>
      <param name="buffer">A byte array of data to send using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter cannot be null</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified buffer, buffer offset, and count.</summary>
      <param name="buffer">A byte array of data to send using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <param name="offset">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to the location in the <paramref name="buffer" /> to start sending the data specified in the <paramref name="buffer" /> parameter.</param>
      <param name="count">The number of bytes to send starting from the <paramref name="offset" /> parameter. If <paramref name="count" /> is zero, no bytes are sent.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter cannot be null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> and <paramref name="count" /> parameters must be greater than or equal to zero. The <paramref name="offset" /> and <paramref name="count" /> must be less than the size of the buffer</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified buffer, buffer offset, and count with an option to combine this element with the next element in a single send request from the sockets layer to the transport. </summary>
      <param name="buffer">A byte array of data to send using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <param name="offset">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to the location in the <paramref name="buffer" /> to start sending the data specified in the <paramref name="buffer" /> parameter.</param>
      <param name="count">The number bytes to send starting from the <paramref name="offset" /> parameter. If <paramref name="count" /> is zero, no bytes are sent.</param>
      <param name="endOfPacket">A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter cannot be null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> and <paramref name="count" /> parameters must be greater than or equal to zero. The <paramref name="offset" /> and <paramref name="count" /> must be less than the size of the buffer</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified file.</summary>
      <param name="filepath">The filename of the file to be transmitted using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="filepath" /> parameter cannot be null</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified filename path, offset, and count.</summary>
      <param name="filepath">The filename of the file to be transmitted using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <param name="offset">The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the <paramref name="filepath" /> parameter.</param>
      <param name="count">The number of bytes to send starting from the <paramref name="offset" /> parameter. If <paramref name="count" /> is zero, the entire file is sent. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="filepath" /> parameter cannot be null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> and <paramref name="count" /> parameters must be greater than or equal to zero. The <paramref name="offset" /> and <paramref name="count" /> must be less than the size of the file indicated by the <paramref name="filepath" /> parameter.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified filename path, buffer offset, and count with an option to combine this element with the next element in a single send request from the sockets layer to the transport. </summary>
      <param name="filepath">The filename of the file to be transmitted using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <param name="offset">The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the <paramref name="filepath" /> parameter.</param>
      <param name="count">The number of bytes to send starting from the <paramref name="offset" /> parameter. If <paramref name="count" /> is zero, the entire file is sent.</param>
      <param name="endOfPacket">A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="filepath" /> parameter cannot be null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> and <paramref name="count" /> parameters must be greater than or equal to zero. The <paramref name="offset" /> and <paramref name="count" /> must be less than the size of the file indicated by the <paramref name="filepath" /> parameter.</exception>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Buffer">
      <summary>Gets the buffer to be sent if the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class was initialized with a <paramref name="buffer" /> parameter.</summary>
      <returns>The byte buffer to send if the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class was initialized with a <paramref name="buffer" /> parameter.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Count">
      <summary>Gets the count of bytes to be sent. </summary>
      <returns>The count of bytes to send if the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class was initialized with a <paramref name="count" /> parameter.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.EndOfPacket">
      <summary>Gets a Boolean value that indicates if this element should not be combined with the next element in a single send request from the sockets layer to the transport.</summary>
      <returns>A Boolean value that indicates if this element should not be combined with the next element in a single send request.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FilePath">
      <summary>Gets the filename of the file to send if the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class was initialized with a <paramref name="filepath" /> parameter.</summary>
      <returns>The filename of the file to send if the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class was initialized with a <paramref name="filepath" /> parameter.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Offset">
      <summary>Gets the offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data. </summary>
      <returns>The offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data.</returns>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>Implements the Berkeley sockets interface.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class using the specified address family, socket type and protocol.</summary>
      <param name="addressFamily">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values. </param>
      <param name="socketType">One of the <see cref="T:System.Net.Sockets.SocketType" /> values. </param>
      <param name="protocolType">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values. </param>
      <exception cref="T:System.Net.Sockets.SocketException">The combination of <paramref name="addressFamily" />, <paramref name="socketType" />, and <paramref name="protocolType" /> results in an invalid socket. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class using the specified value returned from <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</summary>
      <param name="socketInformation">The socket information returned by <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Accept">
      <summary>Creates a new <see cref="T:System.Net.Sockets.Socket" /> for a newly created connection.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> for a newly created connection.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">The accepting socket is not listening for connections. You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.Accept" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.Returns false if the I/O operation completed synchronously. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">An argument is not valid. This exception occurs if the buffer provided is not large enough. The buffer must be at least 2 * (sizeof(SOCKADDR_STORAGE + 16) bytes. This exception also occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">An argument is out of range. The exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> is less than 0.</exception>
      <exception cref="T:System.InvalidOperationException">An invalid operation was requested. This exception occurs if the accepting <see cref="T:System.Net.Sockets.Socket" /> is not listening for connections or the accepted socket is bound. You must call the <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> method before calling the <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.This exception also occurs if the socket is already connected or a socket operation was already in progress using the specified <paramref name="e" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>Gets the address family of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Available">
      <summary>Gets the amount of data that has been received from the network and is available to be read.</summary>
      <returns>The number of bytes of data received from the network and available to be read.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> creation.</returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.InvalidOperationException">The accepting socket is not listening for connections. You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.-or- The accepted socket is bound. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> is less than 0. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt and receives the first block of data sent by the client application.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> creation.</returns>
      <param name="receiveSize">The number of bytes to accept from the sender. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.InvalidOperationException">The accepting socket is not listening for connections. You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.-or- The accepted socket is bound. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> is less than 0. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt from a specified socket and receives the first block of data sent by the client application.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> object creation.</returns>
      <param name="acceptSocket">The accepted <see cref="T:System.Net.Sockets.Socket" /> object. This value may be null. </param>
      <param name="receiveSize">The maximum number of bytes to receive. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.InvalidOperationException">The accepting socket is not listening for connections. You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.-or- The accepted socket is bound. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> is less than 0. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</returns>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" /> that represents the remote host. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</returns>
      <param name="address">The <see cref="T:System.Net.IPAddress" /> of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete. </param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Net.Sockets.Socket" /> is not in the socket family.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="address" /> is zero.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous connections.</returns>
      <param name="addresses">At least one <see cref="T:System.Net.IPAddress" />, designating the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete. </param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets that use <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="address" /> is zero.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The host is specified by a host name and a port number.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</returns>
      <param name="host">The name of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete. </param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to disconnect from a remote endpoint.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation.</returns>
      <param name="reuseSocket">true if this socket can be reused after the connection is closed; otherwise, false. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.NotSupportedException">The operating system is Windows 2000 or earlier, and this method requires Windows XP. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="offset">The zero-based position in the <paramref name="buffer" /> parameter at which to store the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete. </param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</param>
      <param name="offset">The location in <paramref name="buffer" /> to store the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffers">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffers">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive data from a specified network device.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="offset">The zero-based position in the <paramref name="buffer" /> parameter at which to store the data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" /> that represents the source of the data. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint and packet information..</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="offset">The zero-based position in the <paramref name="buffer" /> parameter at which to store the data.</param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" /> that represents the source of the data.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate.</param>
      <param name="state">An object that contains state information for this request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to send. </param>
      <param name="offset">The zero-based position in the <paramref name="buffer" /> parameter at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is less than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to send. </param>
      <param name="offset">The zero-based position in the <paramref name="buffer" /> parameter at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is less than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</returns>
      <param name="buffers">An array of type <see cref="T:System.Byte" /> that contains the data to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> is empty.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</returns>
      <param name="buffers">An array of type <see cref="T:System.Byte" /> that contains the data to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> is empty.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
      <summary>Sends the file <paramref name="fileName" /> to a connected <see cref="T:System.Net.Sockets.Socket" /> object using the <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> flag.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the asynchronous send.</returns>
      <param name="fileName">A string that contains the path and name of the file to send. This parameter can be null. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.NotSupportedException">The socket is not connected to a remote host. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file <paramref name="fileName" /> was not found. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
      <summary>Sends a file and buffers of data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the asynchronous operation.</returns>
      <param name="fileName">A string that contains the path and name of the file to be sent. This parameter can be null. </param>
      <param name="preBuffer">A <see cref="T:System.Byte" /> array that contains data to be sent before the file is sent. This parameter can be null. </param>
      <param name="postBuffer">A <see cref="T:System.Byte" /> array that contains data to be sent after the file is sent. This parameter can be null. </param>
      <param name="flags">A bitwise combination of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values. </param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate to be invoked when this operation completes. This parameter can be null. </param>
      <param name="state">A user-defined object that contains state information for this request. This parameter can be null. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.NotSupportedException">The operating system is not Windows NT or later.- or - The socket is not connected to a remote host. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file <paramref name="fileName" /> was not found. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Sends data asynchronously to a specific remote host.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to send. </param>
      <param name="offset">The zero-based position in <paramref name="buffer" /> at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" /> that represents the remote device. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary>Associates a <see cref="T:System.Net.Sockets.Socket" /> with a local endpoint.</summary>
      <param name="localEP">The local <see cref="T:System.Net.EndPoint" /> to associate with the <see cref="T:System.Net.Sockets.Socket" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.Blocking">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.Socket" /> is in blocking mode.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> will block; otherwise, false. The default is true.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Cancels an asynchronous request for a remote host connection.</summary>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object used to request the connection to the remote host by calling one of the <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" /> methods.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources.</summary>
      <param name="timeout">Wait up to <paramref name="timeout" /> seconds to send any remaining data, then close the socket.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
      <summary>Establishes a connection to a remote host.</summary>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" /> that represents the remote device. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Establishes a connection to a remote host. The host is specified by an IP address and a port number.</summary>
      <param name="address">The IP address of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="address" /> is zero.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Establishes a connection to a remote host. The host is specified by an array of IP addresses and a port number.</summary>
      <param name="addresses">The IP addresses of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="address" /> is zero.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
      <summary>Establishes a connection to a remote host. The host is specified by a host name and a port number.</summary>
      <param name="host">The name of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous request for a remote host connection.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation. </returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">An argument is not valid. This exception occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is listening or a socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method. This exception also occurs if the local endpoint and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> are not the same address family.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous request for a remote host connection.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation. </returns>
      <param name="socketType">One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</param>
      <param name="protocolType">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</param>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">An argument is not valid. This exception occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is listening or a socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method. This exception also occurs if the local endpoint and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> are not the same address family.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>Gets a value that indicates whether a <see cref="T:System.Net.Sockets.Socket" /> is connected to a remote host as of the last <see cref="Overload:System.Net.Sockets.Socket.Send" /> or <see cref="Overload:System.Net.Sockets.Socket.Receive" /> operation.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> was connected to a remote resource as of the most recent operation; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)">
      <summary>Closes the socket connection and allows reuse of the socket.</summary>
      <param name="reuseSocket">true if this socket can be reused after the current connection is closed; otherwise, false. </param>
      <exception cref="T:System.PlatformNotSupportedException">This method requires Windows 2000 or earlier, or the exception will be thrown.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous request to disconnect from a remote endpoint.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.Socket" /> class.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.Socket" />, and optionally disposes of the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to releases only unmanaged resources. </param>
    </member>
    <member name="P:System.Net.Sockets.Socket.DontFragment">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> allows Internet Protocol (IP) datagrams to be fragmented.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> allows datagram fragmentation; otherwise, false. The default is true.</returns>
      <exception cref="T:System.NotSupportedException">This property can be set only for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)">
      <summary>Duplicates the socket reference for the target process, and closes the socket for this process.</summary>
      <returns>The socket reference to be passed to the target process.</returns>
      <param name="targetProcessId">The ID of the target process where a duplicate of the socket reference is created.</param>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="targetProcessID" /> is not a valid process id.-or- Duplication of the socket reference failed. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.EnableBroadcast">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> can send or receive broadcast packets.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> allows broadcast packets; otherwise, false. The default is false.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">This option is valid for a datagram socket only. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> object to handle remote host communication. This method returns a buffer that contains the initial data transferred.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> object to handle communication with the remote host.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the bytes transferred. </param>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation as well as any user defined data. </param>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is empty. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" /> See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> object to handle remote host communication. This method returns a buffer that contains the initial data and the number of bytes transferred.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> object to handle communication with the remote host.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the bytes transferred. </param>
      <param name="bytesTransferred">The number of bytes transferred. </param>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation as well as any user defined data. </param>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is empty. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> to handle communication with the remote host.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation as well as any user defined data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called. </exception>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
      <summary>Ends a pending asynchronous connection request.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> was previously called for the asynchronous connection. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
      <summary>Ends a pending asynchronous disconnect request.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object that stores state information and any user-defined data for this asynchronous operation. </param>
      <exception cref="T:System.NotSupportedException">The operating system is Windows 2000 or earlier, and this method requires Windows XP. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> was previously called for the asynchronous connection. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.Net.WebException">The disconnect request has timed out. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
      <summary>Ends a pending asynchronous read.</summary>
      <returns>The number of bytes received.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Ends a pending asynchronous read.</summary>
      <returns>The number of bytes received.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
      <summary>Ends a pending asynchronous read from a specific endpoint.</summary>
      <returns>If successful, the number of bytes received. If unsuccessful, returns 0.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation. </param>
      <param name="endPoint">The source <see cref="T:System.Net.EndPoint" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Ends a pending asynchronous read from a specific endpoint. This method also reveals more information about the packet than <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />.</summary>
      <returns>If successful, the number of bytes received. If unsuccessful, returns 0.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values for the received packet.</param>
      <param name="endPoint">The source <see cref="T:System.Net.EndPoint" />.</param>
      <param name="ipPacketInformation">The <see cref="T:System.Net.IPAddress" /> and interface of the received packet.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null-or- <paramref name="endPoint" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
      <summary>Ends a pending asynchronous send.</summary>
      <returns>If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous send. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Ends a pending asynchronous send.</summary>
      <returns>If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous send. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
      <summary>Ends a pending asynchronous send of a file.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation. </param>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is empty. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> was previously called for the asynchronous <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
      <summary>Ends a pending asynchronous send to a specific location.</summary>
      <returns>If successful, the number of bytes sent; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> was previously called for the asynchronous send. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.ExclusiveAddressUse">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> allows only one process to bind to a port.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> allows only one socket to bind to a specific port; otherwise, false. The default is true for Windows Server 2003 and Windows XP Service Pack 2, and false for all other versions.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> has been called for this <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>Frees resources used by the <see cref="T:System.Net.Sockets.Socket" /> class.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
      <summary>Returns the value of a specified <see cref="T:System.Net.Sockets.Socket" /> option, represented as an object.</summary>
      <returns>An object that represents the value of the option. When the <paramref name="optionName" /> parameter is set to <see cref="F:System.Net.Sockets.SocketOptionName.Linger" /> the return value is an instance of the <see cref="T:System.Net.Sockets.LingerOption" /> class. When <paramref name="optionName" /> is set to <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> or <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" />, the return value is an instance of the <see cref="T:System.Net.Sockets.MulticastOption" /> class. When <paramref name="optionName" /> is any other value, the return value is an integer.</returns>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.-or-<paramref name="optionName" /> was set to the unsupported value <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Returns the specified <see cref="T:System.Net.Sockets.Socket" /> option setting, represented as a byte array.</summary>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionValue">An array of type <see cref="T:System.Byte" /> that is to receive the option setting. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. - or -In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Returns the value of the specified <see cref="T:System.Net.Sockets.Socket" /> option in an array.</summary>
      <returns>An array of type <see cref="T:System.Byte" /> that contains the value of the socket option.</returns>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionLength">The length, in bytes, of the expected return value. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. - or -In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.Handle">
      <summary>Gets the operating system handle for the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IntPtr" /> that represents the operating system handle for the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])">
      <summary>Sets low-level operating modes for the <see cref="T:System.Net.Sockets.Socket" /> using numerical control codes.</summary>
      <returns>The number of bytes in the <paramref name="optionOutValue" /> parameter.</returns>
      <param name="ioControlCode">An <see cref="T:System.Int32" /> value that specifies the control code of the operation to perform. </param>
      <param name="optionInValue">A <see cref="T:System.Byte" /> array that contains the input data required by the operation. </param>
      <param name="optionOutValue">A <see cref="T:System.Byte" /> array that contains the output data returned by the operation. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to change the blocking mode without using the <see cref="P:System.Net.Sockets.Socket.Blocking" /> property. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])">
      <summary>Sets low-level operating modes for the <see cref="T:System.Net.Sockets.Socket" /> using the <see cref="T:System.Net.Sockets.IOControlCode" /> enumeration to specify control codes.</summary>
      <returns>The number of bytes in the <paramref name="optionOutValue" /> parameter.</returns>
      <param name="ioControlCode">A <see cref="T:System.Net.Sockets.IOControlCode" /> value that specifies the control code of the operation to perform. </param>
      <param name="optionInValue">An array of type <see cref="T:System.Byte" /> that contains the input data required by the operation. </param>
      <param name="optionOutValue">An array of type <see cref="T:System.Byte" /> that contains the output data returned by the operation. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to change the blocking mode without using the <see cref="P:System.Net.Sockets.Socket.Blocking" /> property. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.IsBound">
      <summary>Gets a value that indicates whether the <see cref="T:System.Net.Sockets.Socket" /> is bound to a specific local port.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> is bound to a local port; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LingerState">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> will delay closing a socket in an attempt to send all pending data.</summary>
      <returns>A <see cref="T:System.Net.Sockets.LingerOption" /> that specifies how to linger while closing a socket.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary>Places a <see cref="T:System.Net.Sockets.Socket" /> in a listening state.</summary>
      <param name="backlog">The maximum length of the pending connections queue. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary>Gets the local endpoint.</summary>
      <returns>The <see cref="T:System.Net.EndPoint" /> that the <see cref="T:System.Net.Sockets.Socket" /> is using for communications.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.MulticastLoopback">
      <summary>Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> receives outgoing multicast packets; otherwise, false.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the stream <see cref="T:System.Net.Sockets.Socket" /> is using the Nagle algorithm.</summary>
      <returns>false if the <see cref="T:System.Net.Sockets.Socket" /> uses the Nagle algorithm; otherwise, true. The default is false.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>Indicates whether the underlying operating system and network adaptors support Internet Protocol version 4 (IPv4).</summary>
      <returns>true if the operating system and network adaptors support the IPv4 protocol; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>Indicates whether the underlying operating system and network adaptors support Internet Protocol version 6 (IPv6).</summary>
      <returns>true if the operating system and network adaptors support the IPv6 protocol; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)">
      <summary>Determines the status of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The status of the <see cref="T:System.Net.Sockets.Socket" /> based on the polling mode value passed in the <paramref name="mode" /> parameter.Mode Return Value <see cref="F:System.Net.Sockets.SelectMode.SelectRead" />true if <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> has been called and a connection is pending; -or- true if data is available for reading; -or- true if the connection has been closed, reset, or terminated; otherwise, returns false. <see cref="F:System.Net.Sockets.SelectMode.SelectWrite" />true, if processing a <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />, and the connection has succeeded; -or- true if data can be sent; otherwise, returns false. <see cref="F:System.Net.Sockets.SelectMode.SelectError" />true if processing a <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> that does not block, and the connection has failed; -or- true if <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> is not set and out-of-band data is available; otherwise, returns false. </returns>
      <param name="microSeconds">The time to wait for a response, in microseconds. </param>
      <param name="mode">One of the <see cref="T:System.Net.Sockets.SelectMode" /> values. </param>
      <exception cref="T:System.NotSupportedException">The <paramref name="mode" /> parameter is not one of the <see cref="T:System.Net.Sockets.SelectMode" /> values. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks below. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>Gets the protocol type of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Receives the specified number of bytes from a bound <see cref="T:System.Net.Sockets.Socket" /> into the specified offset position of the receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for received data. </param>
      <param name="offset">The location in <paramref name="buffer" /> to store the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</param>
      <param name="offset">The position in the <paramref name="buffer" /> parameter to store the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property is not set.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Receives the specified number of bytes of data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> exceeds the size of <paramref name="buffer" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null.-or-<paramref name="buffers" />.Count is zero.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null.-or-<paramref name="buffers" />.Count is zero.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous request to receive data from a connected <see cref="T:System.Net.Sockets.Socket" /> object.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">An argument was invalid. The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> or <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> properties on the <paramref name="e" /> parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>Gets or sets a value that specifies the size of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the size, in bytes, of the receive buffer. The default is 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than 0.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for received data. </param>
      <param name="offset">The position in the <paramref name="buffer" /> parameter to store the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of the <paramref name="buffer" /> minus the value of the offset parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.-or- An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Receives the specified number of bytes into the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
      <summary>Receives a datagram into the data buffer and stores the endpoint.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for received data. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Receives a datagram into the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins to asynchronously receive data from a specified network device.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint and packet information.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</param>
      <param name="offset">The position in the <paramref name="buffer" /> parameter to store the received data.</param>
      <param name="size">The number of bytes to receive.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</param>
      <param name="ipPacketInformation">An <see cref="T:System.Net.Sockets.IPPacketInformation" /> holding address and interface information.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.- or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of the <paramref name="buffer" /> minus the value of the offset parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.-or- The .NET Framework is running on an AMD 64-bit processor.-or- An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins to asynchronously receive the specified number of bytes of data into the specified location in the data buffer, using the specified <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />, and stores the endpoint and packet information.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveTimeout">
      <summary>Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Sockets.Socket.Receive" /> call will time out.</summary>
      <returns>The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than -1.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>Gets the remote endpoint.</summary>
      <returns>The <see cref="T:System.Net.EndPoint" /> with which the <see cref="T:System.Net.Sockets.Socket" /> is communicating.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>Determines the status of one or more sockets.</summary>
      <param name="checkRead">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for readability. </param>
      <param name="checkWrite">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for writability. </param>
      <param name="checkError">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for errors. </param>
      <param name="microSeconds">The time-out value, in microseconds. A -1 value indicates an infinite time-out.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="checkRead" /> parameter is null or empty.-and- The <paramref name="checkWrite" /> parameter is null or empty -and- The <paramref name="checkError" /> parameter is null or empty. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
      <summary>Sends data to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, starting at the specified offset, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="offset">The position in the data buffer at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, starting at the specified offset, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" /></summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="offset">The position in the data buffer at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> is less than 0 or exceeds the size of the buffer. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- An operating system error occurs while accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Sends data to a connected <see cref="T:System.Net.Sockets.Socket" /> using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> is empty.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> is empty.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> is empty.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> or <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> properties on the <paramref name="e" /> parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">The <see cref="T:System.Net.Sockets.Socket" /> is not yet connected or was not obtained via an <see cref="M:System.Net.Sockets.Socket.Accept" />, <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />,or <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />, method.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>Gets or sets a value that specifies the size of the send buffer of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the size, in bytes, of the send buffer. The default is 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than 0.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String)">
      <summary>Sends the file <paramref name="fileName" /> to a connected <see cref="T:System.Net.Sockets.Socket" /> object with the <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> transmit flag.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the path and name of the file to be sent. This parameter can be null. </param>
      <exception cref="T:System.NotSupportedException">The socket is not connected to a remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> object is not in blocking mode and cannot accept this synchronous call. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file <paramref name="fileName" /> was not found. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)">
      <summary>Sends the file <paramref name="fileName" /> and buffers of data to a connected <see cref="T:System.Net.Sockets.Socket" /> object using the specified <see cref="T:System.Net.Sockets.TransmitFileOptions" /> value.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the path and name of the file to be sent. This parameter can be null. </param>
      <param name="preBuffer">A <see cref="T:System.Byte" /> array that contains data to be sent before the file is sent. This parameter can be null. </param>
      <param name="postBuffer">A <see cref="T:System.Byte" /> array that contains data to be sent after the file is sent. This parameter can be null. </param>
      <param name="flags">One or more of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values. </param>
      <exception cref="T:System.NotSupportedException">The operating system is not Windows NT or later.- or - The socket is not connected to a remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> object is not in blocking mode and cannot accept this synchronous call. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file <paramref name="fileName" /> was not found. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sends a collection of files or in memory data buffers asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.IO.FileNotFoundException">The file specified in the <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" /> property was not found. </exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method. This exception also occurs if the <see cref="T:System.Net.Sockets.Socket" /> is not connected to a remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">A connectionless <see cref="T:System.Net.Sockets.Socket" /> is being used and the file being sent exceeds the maximum packet size of the underlying transport.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendTimeout">
      <summary>Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Sockets.Socket.Send" /> call will time out.</summary>
      <returns>The time-out value, in milliseconds. If you set the property with a value between 1 and 499, the value will be changed to 500. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than -1.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Sends the specified number of bytes of data to the specified endpoint, starting at the specified location in the buffer, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="offset">The position in the data buffer at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Sends the specified number of bytes of data to the specified endpoint using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="size" /> exceeds the size of <paramref name="buffer" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
      <summary>Sends data to the specified endpoint.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="remoteEP">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Sends data to a specific endpoint using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sends data asynchronously to a specific remote host.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">The protocol specified is connection-oriented, but the <see cref="T:System.Net.Sockets.Socket" /> is not yet connected.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)">
      <summary>Set the IP protection level on a socket.</summary>
      <param name="level">The IP protection level to set on this socket. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="level" /> parameter cannot be <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />. The IP protection level cannot be set to unspecified.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Net.Sockets.AddressFamily" /> of the socket must be either <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
      <summary>Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified <see cref="T:System.Boolean" /> value.</summary>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionValue">The value of the option, represented as a <see cref="T:System.Boolean" />. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified value, represented as a byte array.</summary>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionValue">An array of type <see cref="T:System.Byte" /> that represents the value of the option. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified integer value.</summary>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionValue">A value of the option. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
      <summary>Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified value, represented as an object.</summary>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionValue">A <see cref="T:System.Net.Sockets.LingerOption" /> or <see cref="T:System.Net.Sockets.MulticastOption" /> that contains the value of the option. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionValue" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>Disables sends and receives on a <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="how">One of the <see cref="T:System.Net.Sockets.SocketShutdown" /> values that specifies the operation that will no longer be allowed. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.SocketType">
      <summary>Gets the type of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv4">
      <summary>Gets a value indicating whether IPv4 support is available and enabled on the current host.</summary>
      <returns>true if the current host supports the IPv4 protocol; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv6">
      <summary>Gets a value that indicates whether the Framework supports IPv6 for certain obsolete <see cref="T:System.Net.Dns" /> members.</summary>
      <returns>true if the Framework supports IPv6 for certain obsolete <see cref="T:System.Net.Dns" /> methods; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>Gets or sets a value that specifies the Time To Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The TTL value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The TTL value can't be set to a negative number.</exception>
      <exception cref="T:System.NotSupportedException">This property can be set only for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. This error is also returned when an attempt was made to set TTL to a value higher than 255.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO">
      <summary>Specifies whether the socket should only use Overlapped I/O mode.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> uses only overlapped I/O; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The socket has been bound to a completion port.</exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>Represents an asynchronous socket operation.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>Creates an empty <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance.</summary>
      <exception cref="T:System.NotSupportedException">The platform is not supported. </exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary>Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.</summary>
      <returns>The <see cref="T:System.Net.Sockets.Socket" /> to use or the socket created for accepting a connection with an asynchronous socket method.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>Gets the data buffer to use with an asynchronous socket method.</summary>
      <returns>A <see cref="T:System.Byte" /> array that represents the data buffer to use with an asynchronous socket method.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>Gets or sets an array of data buffers to use with an asynchronous socket method.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> that represents an array of data buffers to use with an asynchronous socket method.</returns>
      <exception cref="T:System.ArgumentException">There are ambiguous buffers specified on a set operation. This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property has been set to a non-null value and an attempt was made to set the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property to a non-null value.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>Gets the number of bytes transferred in the socket operation.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the number of bytes transferred in the socket operation.</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>The event used to complete an asynchronous operation.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>Gets the exception in the case of a connection failure when a <see cref="T:System.Net.DnsEndPoint" /> was used.</summary>
      <returns>An <see cref="T:System.Exception" /> that indicates the cause of the connection error when a <see cref="T:System.Net.DnsEndPoint" /> was specified for the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> property.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>The created and connected <see cref="T:System.Net.Sockets.Socket" /> object after successful completion of the <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> method.</summary>
      <returns>The connected <see cref="T:System.Net.Sockets.Socket" /> object.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the maximum amount of data, in bytes, to send or receive.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
      <summary>Gets or sets a value that specifies if socket can be reused after a disconnect operation.</summary>
      <returns>A <see cref="T:System.Boolean" /> that specifies if socket can be reused after a disconnect operation.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance and optionally disposes of the managed resources.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>Frees resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> class.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>Gets the type of socket operation most recently performed with this context object.</summary>
      <returns>A <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> instance that indicates the type of socket operation most recently performed with this context object.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>Gets the offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Represents a method that is called when an asynchronous operation completes.</summary>
      <param name="e">The event that is signaled.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
      <summary>Gets the IP address and interface of a received packet.</summary>
      <returns>An <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that contains the destination IP address and interface of a received packet.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>Gets or sets the remote IP endpoint for an asynchronous operation.</summary>
      <returns>An <see cref="T:System.Net.EndPoint" /> that represents the remote IP endpoint for an asynchronous operation.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
      <summary>Gets or sets an array of buffers to be sent for an asynchronous operation used by the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</summary>
      <returns>An array of <see cref="T:System.Net.Sockets.SendPacketsElement" /> objects that represent an array of buffers to be sent.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
      <summary>Gets or sets a bitwise combination of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values for an asynchronous operation used by the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</summary>
      <returns>A <see cref="T:System.Net.Sockets.TransmitFileOptions" /> that contains a bitwise combination of values that are used with an asynchronous operation.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
      <summary>Gets or sets the size, in bytes, of the data block used in the send operation.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the size, in bytes, of the data block used in the send operation.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>Sets the data buffer to use with an asynchronous socket method.</summary>
      <param name="buffer">The data buffer to use with an asynchronous socket method.</param>
      <param name="offset">The offset, in bytes, in the data buffer where the operation starts.</param>
      <param name="count">The maximum amount of data, in bytes, to send or receive in the buffer.</param>
      <exception cref="T:System.ArgumentException">There are ambiguous buffers specified. This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property is also not null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is also not null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">An argument was out of range. This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property. This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>Sets the data buffer to use with an asynchronous socket method.</summary>
      <param name="offset">The offset, in bytes, in the data buffer where the operation starts.</param>
      <param name="count">The maximum amount of data, in bytes, to send or receive in the buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">An argument was out of range. This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property. This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>Gets or sets the result of the asynchronous socket operation.</summary>
      <returns>A <see cref="T:System.Net.Sockets.SocketError" /> that represents the result of the asynchronous socket operation.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
      <summary>Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.</summary>
      <returns>A <see cref="T:System.Net.Sockets.SocketFlags" /> that represents the results of an asynchronous socket operation.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>Gets or sets a user or application object associated with this asynchronous socket operation.</summary>
      <returns>An object that represents the user or application object associated with this asynchronous socket operation.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>The type of asynchronous socket operation most recently performed with this context object.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>None of the socket operations.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary>A socket Accept operation. </summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>A socket Connect operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Disconnect">
      <summary>A socket Disconnect operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>A socket Receive operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary>A socket ReceiveFrom operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveMessageFrom">
      <summary>A socket ReceiveMessageFrom operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>A socket Send operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendPackets">
      <summary>A socket SendPackets operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary>A socket SendTo operation.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary>Defines error codes for the <see cref="T:System.Net.Sockets.Socket" /> class.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> operation succeeded.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary>An unspecified <see cref="T:System.Net.Sockets.Socket" /> error has occurred.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary>A blocking <see cref="T:System.Net.Sockets.Socket" /> call was canceled.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary>An attempt was made to access a <see cref="T:System.Net.Sockets.Socket" /> in a way that is forbidden by its access permissions.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary>An invalid pointer address was detected by the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary>An invalid argument was supplied to a <see cref="T:System.Net.Sockets.Socket" /> member.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary>There are too many open sockets in the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary>An operation on a nonblocking socket cannot be completed immediately.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary>A blocking operation is in progress.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary>The nonblocking <see cref="T:System.Net.Sockets.Socket" /> already has an operation in progress.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary>A <see cref="T:System.Net.Sockets.Socket" /> operation was attempted on a non-socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary>A required address was omitted from an operation on a <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary>The datagram is too long.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary>The protocol type is incorrect for this <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary>An unknown, invalid, or unsupported option or level was used with a <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary>The protocol is not implemented or has not been configured.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary>The support for the specified socket type does not exist in this address family.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary>The address family is not supported by the protocol family.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary>The protocol family is not implemented or has not been configured.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary>The address family specified is not supported. This error is returned if the IPv6 address family was specified and the IPv6 stack is not installed on the local machine. This error is returned if the IPv4 address family was specified and the IPv4 stack is not installed on the local machine.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary>Only one use of an address is normally permitted.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary>The selected IP address is not valid in this context.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary>The network is not available.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary>No route to the remote host exists.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary>The application tried to set <see cref="F:System.Net.Sockets.SocketOptionName.KeepAlive" /> on a connection that has already timed out.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary>The connection was aborted by the .NET Framework or the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary>The connection was reset by the remote peer.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary>No free buffer space is available for a <see cref="T:System.Net.Sockets.Socket" /> operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> is already connected.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary>The application tried to send or receive data, and the <see cref="T:System.Net.Sockets.Socket" /> is not connected.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary>A request to send or receive data was disallowed because the <see cref="T:System.Net.Sockets.Socket" /> has already been closed.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary>The connection attempt timed out, or the connected host has failed to respond.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary>The remote host is actively refusing a connection.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary>The operation failed because the remote host is down.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary>There is no network route to the specified host.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary>Too many processes are using the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary>The network subsystem is unavailable.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary>The version of the underlying socket provider is out of range.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary>The underlying socket provider has not been initialized.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary>A graceful shutdown is in progress.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary>The specified class was not found.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary>No such host is known. The name is not an official host name or alias.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary>The name of the host could not be resolved. Try again later.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary>The error is unrecoverable or the requested database cannot be located.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary>The requested name or IP address was not found on the name server.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary>The application has initiated an overlapped operation that cannot be completed immediately.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary>The overlapped operation was aborted due to the closure of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary>The exception that is thrown when a socket error occurs.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SocketException" /> class with the last operating system error code.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SocketException" /> class with the specified error code.</summary>
      <param name="errorCode">The error code that indicates the error that occurred. </param>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SocketException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that contains the information that is required to serialize the new <see cref="T:System.Net.Sockets.SocketException" /> instance. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.Net.Sockets.SocketException" /> instance. </param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary>Gets the error code that is associated with this exception.</summary>
      <returns>An integer error code that is associated with this exception.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.Message">
      <summary>Gets the error message that is associated with this exception.</summary>
      <returns>A string that contains the error message. </returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary>Gets the error code that is associated with this exception.</summary>
      <returns>An integer error code that is associated with this exception.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketFlags">
      <summary>Specifies socket send and receive behaviors.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.None">
      <summary>Use no flags for this call.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.OutOfBand">
      <summary>Process out-of-band data.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Peek">
      <summary>Peek at the incoming message.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.DontRoute">
      <summary>Send without using routing tables.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.MaxIOVectorLength">
      <summary>Provides a standard value for the number of WSABUF structures that are used to send and receive data.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Truncated">
      <summary>The message was too large to fit into the specified buffer and was truncated.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.ControlDataTruncated">
      <summary>Indicates that the control data did not fit into an internal 64-KB buffer and was truncated.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Broadcast">
      <summary>Indicates a broadcast packet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Multicast">
      <summary>Indicates a multicast packet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Partial">
      <summary>Partial send or receive for message.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketInformation">
      <summary>Encapsulates the information that is necessary to duplicate a <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.Options">
      <summary>Gets or sets the options for a <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>A <see cref="T:System.Net.Sockets.SocketInformationOptions" /> instance.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.ProtocolInformation">
      <summary>Gets or sets the protocol information for a <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An array of type <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketInformationOptions">
      <summary>Describes states for a <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.NonBlocking">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> is nonblocking.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Connected">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> is connected.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Listening">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> is listening for new connections.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.UseOnlyOverlappedIO">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> uses overlapped I/O.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionLevel">
      <summary>Defines socket option levels for the <see cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" /> and <see cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" /> methods.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Socket">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> options apply to all sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IP">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> options apply only to IP sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IPv6">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> options apply only to IPv6 sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Tcp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> options apply only to TCP sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Udp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> options apply only to UDP sockets.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionName">
      <summary>Defines configuration option names.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Debug">
      <summary>Record debugging information.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AcceptConnection">
      <summary>The socket is listening.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseAddress">
      <summary>Allows the socket to be bound to an address that is already in use.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.KeepAlive">
      <summary>Use keep-alives.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontRoute">
      <summary>Do not route; send the packet directly to the interface addresses.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Broadcast">
      <summary>Permit sending broadcast messages on the socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UseLoopback">
      <summary>Bypass hardware when possible.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Linger">
      <summary>Linger on close if unsent data is present.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.OutOfBandInline">
      <summary>Receives out-of-band data in the normal data stream.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontLinger">
      <summary>Close the socket gracefully without lingering.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse">
      <summary>Enables a socket to be bound for exclusive access.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendBuffer">
      <summary>Specifies the total per-socket buffer space reserved for sends. This is unrelated to the maximum message size or the size of a TCP window.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveBuffer">
      <summary>Specifies the total per-socket buffer space reserved for receives. This is unrelated to the maximum message size or the size of a TCP window.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendLowWater">
      <summary>Specifies the low water mark for <see cref="Overload:System.Net.Sockets.Socket.Send" /> operations.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveLowWater">
      <summary>Specifies the low water mark for <see cref="Overload:System.Net.Sockets.Socket.Receive" /> operations.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendTimeout">
      <summary>Send a time-out. This option applies only to synchronous methods; it has no effect on asynchronous methods such as the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveTimeout">
      <summary>Receive a time-out. This option applies only to synchronous methods; it has no effect on asynchronous methods such as the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Error">
      <summary>Get the error status and clear.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Type">
      <summary>Get the socket type.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MaxConnections">
      <summary>Not supported; will throw a <see cref="T:System.Net.Sockets.SocketException" /> if used.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPOptions">
      <summary>Specifies the IP options to be inserted into outgoing datagrams.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HeaderIncluded">
      <summary>Indicates that the application provides the IP header for outgoing datagrams.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TypeOfService">
      <summary>Change the IP header type of the service field.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IpTimeToLive">
      <summary>Set the IP header Time-to-Live field.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastInterface">
      <summary>Set the interface for outgoing multicast packets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive">
      <summary>An IP multicast Time to Live.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastLoopback">
      <summary>An IP multicast loopback.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddMembership">
      <summary>Add an IP group membership.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropMembership">
      <summary>Drop an IP group membership.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontFragment">
      <summary>Do not fragment IP datagrams.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddSourceMembership">
      <summary>Join a source group.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropSourceMembership">
      <summary>Drop a source group.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BlockSource">
      <summary>Block data from a source.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UnblockSource">
      <summary>Unblock a previously blocked source.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.PacketInformation">
      <summary>Return information about received packets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HopLimit">
      <summary>Specifies the maximum number of router hops for an Internet Protocol version 6 (IPv6) packet. This is similar to Time to Live (TTL) for Internet Protocol version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel">
      <summary>Enables restriction of a IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix.This socket option enables applications to place access restrictions on IPv6 sockets. Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks. This socket option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required. This socket option has defined protection levels specified in the <see cref="T:System.Net.Sockets.IPProtectionLevel" /> enumeration.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPv6Only">
      <summary>Indicates if a socket created for the AF_INET6 address family is restricted to IPv6 communications only. Sockets created for the AF_INET6 address family may be used for both IPv6 and IPv4 communications. Some applications may want to restrict their use of a socket created for the AF_INET6 address family to IPv6 communications only. When this value is non-zero (the default on Windows), a socket created for the AF_INET6 address family can be used to send and receive IPv6 packets only. When this value is zero, a socket created for the AF_INET6 address family can be used to send and receive packets to and from an IPv6 address or an IPv4 address. Note that the ability to interact with an IPv4 address requires the use of IPv4 mapped addresses. This socket option is supported on Windows Vista or later.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoDelay">
      <summary>Disables the Nagle algorithm for send coalescing.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BsdUrgent">
      <summary>Use urgent data as defined in RFC-1222. This option can be set only once; after it is set, it cannot be turned off.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Expedited">
      <summary>Use expedited data as defined in RFC-1222. This option can be set only once; after it is set, it cannot be turned off.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoChecksum">
      <summary>Send UDP datagrams with checksum set to zero.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ChecksumCoverage">
      <summary>Set or get the UDP checksum coverage.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext">
      <summary>Updates an accepted socket's properties by using those of an existing socket. This is equivalent to using the Winsock2 SO_UPDATE_ACCEPT_CONTEXT socket option and is supported only on connection-oriented sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateConnectContext">
      <summary>Updates a connected socket's properties by using those of an existing socket. This is equivalent to using the Winsock2 SO_UPDATE_CONNECT_CONTEXT socket option and is supported only on connection-oriented sockets.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>Defines constants that are used by the <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" /> method.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>Disables a <see cref="T:System.Net.Sockets.Socket" /> for receiving. This field is constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>Disables a <see cref="T:System.Net.Sockets.Socket" /> for sending. This field is constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>Disables a <see cref="T:System.Net.Sockets.Socket" /> for both sending and receiving. This field is constant.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>Specifies the type of socket that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class represents.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries. A Socket of this type communicates with a single peer and requires a remote host connection before communication can begin. <see cref="F:System.Net.Sockets.SocketType.Stream" /> uses the Transmission Control Protocol (<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) <see cref="T:System.Net.Sockets.ProtocolType" /> and the InterNetwork<see cref="T:System.Net.Sockets.AddressFamily" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary>Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length. Messages might be lost or duplicated and might arrive out of order. A <see cref="T:System.Net.Sockets.Socket" /> of type <see cref="F:System.Net.Sockets.SocketType.Dgram" /> requires no connection prior to sending and receiving data, and can communicate with multiple peers. <see cref="F:System.Net.Sockets.SocketType.Dgram" /> uses the Datagram Protocol (<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) and the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /><see cref="T:System.Net.Sockets.AddressFamily" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Raw">
      <summary>Supports access to the underlying transport protocol. Using the <see cref="T:System.Net.Sockets.SocketType" /><see cref="F:System.Net.Sockets.SocketType.Raw" />, you can communicate using protocols like Internet Control Message Protocol (<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) and Internet Group Management Protocol (<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />). Your application must provide a complete IP header when sending. Received datagrams return with the IP header and options intact.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Rdm">
      <summary>Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data. Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order. Furthermore, the sender is notified if messages are lost. If you initialize a Socket using <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you do not require a remote host connection before sending and receiving data. With <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you can communicate with multiple peers.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Seqpacket">
      <summary>Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> does not duplicate data, and it preserves boundaries within the data stream. A Socket of type <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> communicates with a single peer and requires a remote host connection before communication can begin.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>Specifies an unknown Socket type.</summary>
    </member>
    <member name="T:System.Net.Sockets.TcpClient">
      <summary>Provides client connections for TCP network services.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</summary>
      <param name="localEP">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />. </param>
      <exception cref="T:System.ArgumentNullException">The  <paramref name="localEP" /> parameter is null. </exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</summary>
      <param name="family">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork -or- The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6 </exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</summary>
      <param name="hostname">The DNS name of the remote host to which you intend to connect. </param>
      <param name="port">The port number of the remote host to which you intend to connect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="hostname" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Active">
      <summary>Gets or set a value that indicates whether a connection has been made.</summary>
      <returns>true if the connection has been made; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Available">
      <summary>Gets the amount of data that has been received from the network and is available to be read.</summary>
      <returns>The number of bytes of data received from the network and available to be read.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</returns>
      <param name="address">The <see cref="T:System.Net.IPAddress" /> of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete. </param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</returns>
      <param name="addresses">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</param>
      <param name="port">The port number of the remote hosts.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="addresses" /> parameter is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</returns>
      <param name="host">The name of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="host" /> parameter is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Client">
      <summary>Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The underlying network <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Close">
      <summary>Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Connects the client to a remote TCP host using the specified IP address and port number.</summary>
      <param name="address">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect. </param>
      <param name="port">The port number to which you intend to connect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Connects the client to a remote TCP host using the specified IP addresses and port number.</summary>
      <param name="ipAddresses">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</param>
      <param name="port">The port number to which you intend to connect.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="ipAddresses" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
      <summary>Connects the client to a remote TCP host using the specified remote network endpoint.</summary>
      <param name="remoteEP">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="remoteEp" /> parameter is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
      <summary>Connects the client to the specified port on the specified host.</summary>
      <param name="hostname">The DNS name of the remote host to which you intend to connect. </param>
      <param name="port">The port number of the remote host to which you intend to connect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="hostname" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Connected">
      <summary>Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</summary>
      <returns>true if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, false. The default is true for Windows Server 2003 and Windows XP Service Pack 2 and later, and false for all other versions.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the underlying socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Finalize">
      <summary>Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.GetStream">
      <summary>Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</summary>
      <returns>The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.LingerState">
      <summary>Gets or sets information about the linger state of the associated socket.</summary>
      <returns>A <see cref="T:System.Net.Sockets.LingerOption" />. By default, lingering is disabled.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.NoDelay">
      <summary>Gets or sets a value that disables a delay when send or receive buffers are not full.</summary>
      <returns>true if the delay is disabled, otherwise false. The default value is false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
      <summary>Gets or sets the size of the receive buffer.</summary>
      <returns>The size of the receive buffer, in bytes. The default value is 8192 bytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when setting the buffer size.-or-In .NET Compact Framework applications, you cannot set this property. For a workaround, see the Platform Note in Remarks.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
      <summary>Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</summary>
      <returns>The time-out value of the connection in milliseconds. The default value is 0.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendBufferSize">
      <summary>Gets or sets the size of the send buffer.</summary>
      <returns>The size of the send buffer, in bytes. The default value is 8192 bytes.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendTimeout">
      <summary>Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</summary>
      <returns>The send time-out value, in milliseconds. The default is 0.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.Sockets.TcpClient" />. </summary>
    </member>
    <member name="T:System.Net.Sockets.TcpListener">
      <summary>Listens for connections from TCP network clients.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens on the specified port.</summary>
      <param name="port">The port on which to listen for incoming connection attempts. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens for incoming connection attempts on the specified local IP address and port number.</summary>
      <param name="localaddr">An <see cref="T:System.Net.IPAddress" /> that represents the local IP address. </param>
      <param name="port">The port on which to listen for incoming connection attempts. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localaddr" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class with the specified local endpoint.</summary>
      <param name="localEP">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which to bind the listener <see cref="T:System.Net.Sockets.Socket" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> is null. </exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
      <summary>Accepts a pending connection request.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</returns>
      <exception cref="T:System.InvalidOperationException">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
      <summary>Accepts a pending connection request </summary>
      <returns>A <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</returns>
      <exception cref="T:System.InvalidOperationException">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Active">
      <summary>Gets a value that indicates whether <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening for client connections.</summary>
      <returns>true if <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
      <summary>Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.TcpListener" /> instance.</summary>
      <param name="allowed">A Boolean value that specifies whether to enable or disable NAT traversal.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> method was called after calling the <see cref="M:System.Net.Sockets.TcpListener.Start" /> method</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object containing information about the accept operation. This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient" />.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object containing information about the accept operation. This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />  method.</param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="asyncResult" /> parameter was not created by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> method was previously called. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient" /> to handle remote host communication.</summary>
      <returns>A <see cref="T:System.Net.Sockets.TcpClient" />.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> method.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one underlying socket to listen to a specific port.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one <see cref="T:System.Net.Sockets.TcpListener" /> to listen to a specific port; otherwise, false. . The default is true for Windows Server 2003 and Windows XP Service Pack 2 and later, and false for all other versions.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.TcpListener" /> has been started. Call the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method and then set the <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> property.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the underlying socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.LocalEndpoint">
      <summary>Gets the underlying <see cref="T:System.Net.EndPoint" /> of the current <see cref="T:System.Net.Sockets.TcpListener" />.</summary>
      <returns>The <see cref="T:System.Net.EndPoint" /> to which the <see cref="T:System.Net.Sockets.Socket" /> is bound.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Pending">
      <summary>Determines if there are pending connection requests.</summary>
      <returns>true if connections are pending; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Server">
      <summary>Gets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The underlying <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start">
      <summary>Starts listening for incoming connection requests.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
      <summary>Starts listening for incoming connection requests with a maximum number of pending connection.</summary>
      <param name="backlog">The maximum length of the pending connections queue.</param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The<paramref name=" backlog" /> parameter is less than zero or exceeds the maximum number of permitted connections.</exception>
      <exception cref="T:System.InvalidOperationException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Stop">
      <summary>Closes the listener.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.Sockets.TransmitFileOptions">
      <summary>The <see cref="T:System.Net.Sockets.TransmitFileOptions" /> enumeration defines values used in file transfer requests.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread">
      <summary>Use the default thread to process long file transfer requests.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.Disconnect">
      <summary>Start a transport-level disconnect after all the file data has been queued for transmission. When used with <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />, these flags return the socket to a disconnected, reusable state after the file has been transmitted.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket">
      <summary>The socket handle may be reused when the request completes. This flag is valid only if <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> is also specified. When used with <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />, these flags return the socket to a disconnected, reusable state after the file has been transmitted.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.WriteBehind">
      <summary>Complete the file transfer request immediately, without pending. If this flag is specified and the file transfer succeeds, the data has been accepted by the system but not necessarily acknowledged by the remote end. Do not use this flag with the <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> and <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" /> flags.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread">
      <summary>Use system threads to process long file transfer requests.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc">
      <summary>Use kernel asynchronous procedure calls (APCs) instead of worker threads to process long file transfer requests. Long requests are defined as requests that require more than a single read from the file or a cache; the request therefore depends on the size of the file and the specified length of the send packet.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpClient">
      <summary>Provides User Datagram Protocol (UDP) network services.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</summary>
      <param name="port">The local port number from which you intend to communicate. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</summary>
      <param name="port">The port on which to listen for incoming connection attempts. </param>
      <param name="family">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</summary>
      <param name="localEP">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</summary>
      <param name="family">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</summary>
      <param name="hostname">The name of the remote DNS host to which you intend to connect. </param>
      <param name="port">The remote port number to which you intend to connect. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Active">
      <summary>Gets or sets a value indicating whether a default remote host has been established.</summary>
      <returns>true if a connection is active; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
      <summary>Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</summary>
      <param name="allowed">A Boolean value that specifies whether to enable or disable NAT traversal.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Available">
      <summary>Gets the amount of data received from the network that is available to read.</summary>
      <returns>The number of bytes of data received from the network.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Receives a datagram from a remote host asynchronously.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</returns>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete. </param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Sends a datagram to a remote host asynchronously. The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</returns>
      <param name="datagram">A <see cref="T:System.Byte" /> array that contains the data to be sent.</param>
      <param name="bytes">The number of bytes to send.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the send operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>Sends a datagram to a destination asynchronously. The destination is specified by a <see cref="T:System.Net.EndPoint" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</returns>
      <param name="datagram">A <see cref="T:System.Byte" /> array that contains the data to be sent.</param>
      <param name="bytes">The number of bytes to send.</param>
      <param name="endPoint">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete. </param>
      <param name="state">A user-defined object that contains information about the send operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Sends a datagram to a destination asynchronously. The destination is specified by the host name and port number.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</returns>
      <param name="datagram">A <see cref="T:System.Byte" /> array that contains the data to be sent.</param>
      <param name="bytes">The number of bytes to send.</param>
      <param name="hostname">The destination host.</param>
      <param name="port">The destination port number.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete. </param>
      <param name="state">A user-defined object that contains information about the send operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Client">
      <summary>Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Close">
      <summary>Closes the UDP connection.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Establishes a default remote host using the specified IP address and port number.</summary>
      <param name="addr">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data. </param>
      <param name="port">The port number to which you intend send data. </param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addr" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
      <summary>Establishes a default remote host using the specified network endpoint.</summary>
      <param name="endPoint">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endPoint" /> is null. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
      <summary>Establishes a default remote host using the specified host name and port number.</summary>
      <param name="hostname">The DNS name of the remote host to which you intend send data. </param>
      <param name="port">The port number on the remote host to which you intend to send data. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.DontFragment">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, false. The default is true.</returns>
      <exception cref="T:System.NotSupportedException">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
      <summary>Leaves a multicast group.</summary>
      <param name="multicastAddr">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave. </param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentException">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Leaves a multicast group.</summary>
      <param name="multicastAddr">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave. </param>
      <param name="ifindex">The local address of the multicast group to leave.</param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentException">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.EnableBroadcast">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, false. The default is false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>Ends a pending asynchronous receive.</summary>
      <returns>If successful, the number of bytes received. If unsuccessful, this method returns 0.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</param>
      <param name="remoteEP">The specified remote endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
      <summary>Ends a pending asynchronous send.</summary>
      <returns>If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the underlying socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, false. The default is true for Windows Server 2003 and Windows XP Service Pack 2 and later, and false for all other versions.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the underlying socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
      <summary>Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</summary>
      <param name="ifindex">The local address. </param>
      <param name="multicastAddr">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join. </param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
      <summary>Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</summary>
      <param name="multicastAddr">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join. </param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentException">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</summary>
      <param name="multicastAddr">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join. </param>
      <param name="timeToLive">The Time to Live (TTL), measured in router hops. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The TTL provided is not between 0 and 255 </exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</summary>
      <param name="multicastAddr">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</param>
      <param name="localAddress">The local <see cref="T:System.Net.IPAddress" />.</param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.MulticastLoopback">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
      <summary>Returns a UDP datagram that was sent by a remote host.</summary>
      <returns>An array of type <see cref="T:System.Byte" /> that contains datagram data.</returns>
      <param name="remoteEP">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent. </param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
      <summary>Sends a UDP datagram to a remote host.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="dgram">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes. </param>
      <param name="bytes">The number of bytes in the datagram. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>Sends a UDP datagram to the host at the specified remote endpoint.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="dgram">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes. </param>
      <param name="bytes">The number of bytes in the datagram. </param>
      <param name="endPoint">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>Sends a UDP datagram to a specified port on a specified remote host.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="dgram">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes. </param>
      <param name="bytes">The number of bytes in the datagram. </param>
      <param name="hostname">The name of the remote host to which you intend to send the datagram. </param>
      <param name="port">The remote port number with which you intend to communicate. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Ttl">
      <summary>Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <returns>The TTL value.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultParameterValueAttribute">
      <summary>Sets the default value of a parameter when called from a language that supports default parameters. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultParameterValueAttribute.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.DefaultParameterValueAttribute" /> class with the default value of a parameter.</summary>
      <param name="value">An object that represents the default value of a parameter.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultParameterValueAttribute.Value">
      <summary>Gets the default value of a parameter.</summary>
      <returns>An object that represents the default value of a parameter.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleCollector">
      <summary>Tracks outstanding handles and forces a garbage collection when the specified threshold is reached.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.HandleCollector" /> class using a name and a threshold at which to begin handle collection. </summary>
      <param name="name">A name for the collector. This parameter allows you to name collectors that track handle types separately.</param>
      <param name="initialThreshold">A value that specifies the point at which collections should begin.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="initialThreshold" /> parameter is less than 0.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.HandleCollector" /> class using a name, a threshold at which to begin handle collection, and a threshold at which handle collection must occur. </summary>
      <param name="name">A name for the collector.  This parameter allows you to name collectors that track handle types separately.</param>
      <param name="initialThreshold">A value that specifies the point at which collections should begin.</param>
      <param name="maximumThreshold">A value that specifies the point at which collections must occur. This should be set to the maximum number of available handles.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="initialThreshold" /> parameter is less than 0.-or-The <paramref name="maximumThreshold" /> parameter is less than 0.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="maximumThreshold" /> parameter is less than the <paramref name="initialThreshold" /> parameter.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Add">
      <summary>Increments the current handle count.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> property is less than 0.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Count">
      <summary>Gets the number of handles collected.</summary>
      <returns>The number of handles collected.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.InitialThreshold">
      <summary>Gets a value that specifies the point at which collections should begin.</summary>
      <returns>A value that specifies the point at which collections should begin.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.MaximumThreshold">
      <summary>Gets a value that specifies the point at which collections must occur.</summary>
      <returns>A value that specifies the point at which collections must occur.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Name">
      <summary>Gets the name of a <see cref="T:System.Runtime.InteropServices.HandleCollector" /> object.</summary>
      <returns>This <see cref="P:System.Runtime.InteropServices.HandleCollector.Name" /> property allows you to name collectors that track handle types separately.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Remove">
      <summary>Decrements the current handle count.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> property is less than 0.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.StandardOleMarshalObject">
      <summary>Replaces the standard common language runtime (CLR) free-threaded marshaler with the standard OLE STA marshaler.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StandardOleMarshalObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.StandardOleMarshalObject" /> class. </summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ADVF">
      <summary>Specifies the requested behavior when setting up an advise sink or a caching connection with an object.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_NODATA">
      <summary>For data advisory connections (<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> or <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />), this flag requests the data object not to send data when it calls <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. </summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_PRIMEFIRST">
      <summary>Requests that the object not wait for the data or view to change before making an initial call to <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> (for data or view advisory connections) or updating the cache (for cache connections).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_ONLYONCE">
      <summary>Requests that the object make only one change notification or cache update before deleting the connection.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_DATAONSTOP">
      <summary>For data advisory connections, assures accessibility to data. </summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_NOHANDLER">
      <summary>Synonym for <see cref="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN" />, which is used more often.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN">
      <summary>This value is used by DLL object applications and object handlers that perform the drawing of their objects.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_ONSAVE">
      <summary>For cache connections, this flag updates the cached representation only when the object containing the cache is saved.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DATADIR">
      <summary>Specifies the direction of the data flow in the <paramref name="dwDirection" /> parameter of the <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> method. This determines the formats that the resulting enumerator can enumerate.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_GET">
      <summary>Requests that <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> supply an enumerator for the formats that can be specified in <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_SET">
      <summary>Requests that <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> supply an enumerator for the formats that can be specified in <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DVASPECT">
      <summary>Specifies the desired data or view aspect of the object when drawing or getting data.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_CONTENT">
      <summary>A representation of an object that lets that object be displayed as an embedded object inside a container. This value is typically specified for compound document objects. The presentation can be provided for the screen or printer.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_THUMBNAIL">
      <summary>A thumbnail representation of an object that lets that object be displayed in a browsing tool. The thumbnail is approximately a 120 by 120 pixel, 16-color (recommended), device-independent bitmap potentially wrapped in a metafile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_ICON">
      <summary>An iconic representation of an object.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_DOCPRINT">
      <summary>A representation of an object on the screen as though it were printed to a printer using the Print command from the File menu. The described data may represent a sequence of pages.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FORMATETC">
      <summary>Represents a generalized Clipboard format. </summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat">
      <summary>Specifies the particular clipboard format of interest.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect">
      <summary>Specifies one of the <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" /> enumeration constants that indicates how much detail should be contained in the rendering.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex">
      <summary>Specifies part of the aspect when the data must be split across page boundaries. </summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.ptd">
      <summary>Specifies a pointer to a DVTARGETDEVICE structure containing information about the target device that the data is being composed for. </summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed">
      <summary>Specifies one of the <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> enumeration constants, which indicates the type of storage medium used to transfer the object's data. </summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IAdviseSink">
      <summary>Provides a managed definition of the IAdviseSink interface.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnClose">
      <summary>Notifies all registered advisory sinks that the object has changed from the running state to the loaded state.  This method is called by a server.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Notifies all data objects currently registered advisory sinks that data in the object has changed.</summary>
      <param name="format">A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passed by reference, which describes the format, target device, rendering, and storage information of the calling data object.</param>
      <param name="stgmedium">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passed by reference, which defines the storage medium (global memory, disk file, storage object, stream object, Graphics Device Interface (GDI) object, or undefined) and ownership of that medium for the calling data object.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnRename(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Notifies all registered advisory sinks that the object has been renamed. This method is called by a server.</summary>
      <param name="moniker">A pointer to the IMoniker interface on the new full moniker of the object.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnSave">
      <summary>Notifies all registered advisory sinks that the object has been saved. This method is called by a server.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnViewChange(System.Int32,System.Int32)">
      <summary>Notifies an object's registered advisory sinks that its view has changed. This method is called by a server.</summary>
      <param name="aspect">The aspect, or view, of the object. Contains a value taken from the <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" /> enumeration.</param>
      <param name="index">The portion of the view that has changed. Currently, only -1 is valid.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDataObject">
      <summary>Provides the managed definition of the IDataObject interface.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)">
      <summary>Creates a connection between a data object and an advisory sink. This method is called by an object that supports an advisory sink and enables the advisory sink to be notified of changes in the object's data.</summary>
      <returns>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following: ValueDescriptionS_OKThe advisory connection was created.E_NOTIMPLThis method is not implemented on the data object.DV_E_LINDEXThere is an invalid value for <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; currently, only -1 is supported.DV_E_FORMATETCThere is an invalid value for the <paramref name="pFormatetc" /> parameter.OLE_E_ADVISENOTSUPPORTEDThe data object does not support change notification.</returns>
      <param name="pFormatetc"> A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, target device, aspect, and medium that will be used for future notifications.</param>
      <param name="advf">One of the <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> values that specifies a group of flags for controlling the advisory connection.</param>
      <param name="adviseSink">A pointer to the <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> interface on the advisory sink that will receive the change notification.</param>
      <param name="connection">When this method returns, contains a pointer to a DWORD token that identifies this connection. You can use this token later to delete the advisory connection by passing it to <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. If this value is zero, the connection was not established. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)">
      <summary>Destroys a notification connection that had been previously established.</summary>
      <param name="connection">A DWORD token that specifies the connection to remove. Use the value returned by <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> when the connection was originally established.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary>Creates an object that can be used to enumerate the current advisory connections.</summary>
      <returns>This method supports the standard return value E_OUTOFMEMORY, as well as the following:ValueDescriptionS_OKThe enumerator object is successfully instantiated or there are no connections.OLE_E_ADVISENOTSUPPORTEDThis object does not support advisory notifications.</returns>
      <param name="enumAdvise">When this method returns, contains an <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> that receives the interface pointer to the new enumerator object. If the implementation sets <paramref name="enumAdvise" /> to null, there are no connections to advisory sinks at this time. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)">
      <summary>Creates an object for enumerating the <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structures for a data object. These structures are used in calls to <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> or <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />. </summary>
      <returns>This method supports the standard return values E_INVALIDARG and E_OUTOFMEMORY, as well as the following:ValueDescriptionS_OKThe enumerator object was successfully created.E_NOTIMPLThe direction specified by the <paramref name="direction" /> parameter is not supported.OLE_S_USEREGRequests that OLE enumerate the formats from the registry.</returns>
      <param name="direction">One of the <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> values that specifies the direction of the data.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary>Provides a standard <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure that is logically equivalent to a more complex structure. Use this method to determine whether two different <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structures would return the same data, removing the need for duplicate rendering.</summary>
      <returns>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following: ValueDescriptionS_OKThe returned <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure is different from the one that was passed.DATA_S_SAMEFORMATETCThe <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structures are the same and null is returned in the <paramref name="formatOut" /> parameter.DV_E_LINDEXThere is an invalid value for <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; currently, only -1 is supported.DV_E_FORMATETCThere is an invalid value for the <paramref name="pFormatetc" /> parameter.OLE_E_NOTRUNNINGThe application is not running.</returns>
      <param name="formatIn">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device that the caller would like to use to retrieve data in a subsequent call such as <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. The <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> member is not significant in this case and should be ignored.</param>
      <param name="formatOut">When this method returns, contains a pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure that contains the most general information possible for a specific rendering, making it canonically equivalent to <paramref name="formatetIn" />. The caller must allocate this structure and the <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> method must fill in the data. To retrieve data in a subsequent call such as <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, the caller uses the supplied value of <paramref name="formatOut" />, unless the value supplied is null. This value is null if the method returns DATA_S_SAMEFORMATETC. The <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> member is not significant in this case and should be ignored. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Obtains data from a source data object. The <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> method, which is called by a data consumer, renders the data described in the specified <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure and transfers it through the specified <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure. The caller then assumes responsibility for releasing the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure.</summary>
      <param name="format">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device to use when passing the data. It is possible to specify more than one medium by using the Boolean OR operator, allowing the method to choose the best medium among those specified.</param>
      <param name="medium">When this method returns, contains a pointer to the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure that indicates the storage medium containing the returned data through its <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> member, and the responsibility for releasing the medium through the value of its <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member. If <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> is null, the receiver of the medium is responsible for releasing it; otherwise, <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> points to the IUnknown interface on the appropriate object so its Release method can be called. The medium must be allocated and filled in by <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Obtains data from a source data object. This method, which is called by a data consumer, differs from the <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> method in that the caller must allocate and free the specified storage medium.</summary>
      <param name="format">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device to use when passing the data. Only one medium can be specified in <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, and only the following <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> values are valid: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" />, or <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
      <param name="medium">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passed by reference, that defines the storage medium containing the data being transferred. The medium must be allocated by the caller and filled in by <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. The caller must also free the medium. The implementation of this method must always supply a value of null for the <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member of the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure that this parameter points to.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary>Determines whether the data object is capable of rendering the data described in the <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure. Objects attempting a paste or drop operation can call this method before calling <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> to get an indication of whether the operation may be successful.</summary>
      <returns>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following: ValueDescriptionS_OKA subsequent call to <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> would probably be successful.DV_E_LINDEXAn invalid value for <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; currently, only -1 is supported.DV_E_FORMATETCAn invalid value for the <paramref name="pFormatetc" /> parameter.DV_E_TYMEDAn invalid <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> value.DV_E_DVASPECTAn invalid <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> value.OLE_E_NOTRUNNINGThe application is not running.</returns>
      <param name="format">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device to use for the query.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
      <summary>Transfers data to the object that implements this method. This method is called by an object that contains a data source.</summary>
      <param name="formatIn">A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format used by the data object when interpreting the data contained in the storage medium.</param>
      <param name="medium">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure, passed by reference, that defines the storage medium in which the data is being passed.</param>
      <param name="release">true to specify that the data object called, which implements <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, owns the storage medium after the call returns. This means that the data object must free the medium after it has been used by calling the ReleaseStgMedium function. false to specify that the caller retains ownership of the storage medium, and the data object called uses the storage medium for the duration of the call only.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC">
      <summary>Provides the managed definition of the IEnumFORMATETC interface.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Clone(System.Runtime.InteropServices.ComTypes.IEnumFORMATETC@)">
      <summary>Creates a new enumerator that contains the same enumeration state as the current enumerator.</summary>
      <param name="newEnum">When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
      <summary>Retrieves a specified number of items in the enumeration sequence.</summary>
      <returns>S_OK if the <paramref name="pceltFetched" /> parameter equals the <paramref name="celt" /> parameter; otherwise, S_FALSE.</returns>
      <param name="celt">The number of <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> references to return in <paramref name="rgelt" />.</param>
      <param name="rgelt">When this method returns, contains a reference to the enumerated <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> references. This parameter is passed uninitialized.</param>
      <param name="pceltFetched">When this method returns, contains a reference to the actual number of references enumerated in <paramref name="rgelt" />. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Reset">
      <summary>Resets the enumeration sequence to the beginning.</summary>
      <returns>An HRESULT with the value S_OK.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Skip(System.Int32)">
      <summary>Skips a specified number of items in the enumeration sequence.</summary>
      <returns>S_OK if the number of elements skipped equals the <paramref name="celt" /> parameter; otherwise, S_FALSE.</returns>
      <param name="celt">The number of elements to skip in the enumeration.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA">
      <summary>Provides the managed definition of the IEnumSTATDATA interface.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Clone(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary>Creates a new enumerator that contains the same enumeration state as the current enumerator.</summary>
      <param name="newEnum">When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Next(System.Int32,System.Runtime.InteropServices.ComTypes.STATDATA[],System.Int32[])">
      <summary>Retrieves a specified number of items in the enumeration sequence.</summary>
      <returns>S_OK if the <paramref name="pceltFetched" /> parameter equals the <paramref name="celt" /> parameter; otherwise, S_FALSE.</returns>
      <param name="celt">The number of <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" /> references to return in <paramref name="rgelt" />.</param>
      <param name="rgelt">When this method returns, contains a reference to the enumerated <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" /> references. This parameter is passed uninitialized.</param>
      <param name="pceltFetched">When this parameter returns, contains a reference to the actual number of references enumerated in <paramref name="rgelt" />. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Reset">
      <summary>Resets the enumeration sequence to the beginning.</summary>
      <returns>An HRESULT with the value S_OK.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Skip(System.Int32)">
      <summary>Skips a specified number of items in the enumeration sequence.</summary>
      <returns>S_OK if the number of elements skipped equals the <paramref name="celt" /> parameter; otherwise, S_FALSE.</returns>
      <param name="celt">The number of elements to skip in the enumeration.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATDATA">
      <summary>Provides the managed definition of the STATDATA structure.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advf">
      <summary>Represents the <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> enumeration value that determines when the advisory sink is notified of changes in the data.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advSink">
      <summary>Represents the <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> interface that will receive change notifications.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.connection">
      <summary>Represents the token that uniquely identifies the advisory connection. This token is returned by the method that sets up the advisory connection.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.formatetc">
      <summary>Represents the <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure for the data of interest to the advise sink. The advise sink receives notification of changes to the data specified by this <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM">
      <summary>Provides the managed definition of the STGMEDIUM structure.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease">
      <summary>Represents a pointer to an interface instance that allows the sending process to control the way the storage is released when the receiving process calls the ReleaseStgMedium function. If <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> is null, ReleaseStgMedium uses default procedures to release the storage; otherwise, ReleaseStgMedium uses the specified IUnknown interface.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed">
      <summary>Specifies the type of storage medium. The marshaling and unmarshaling routines use this value to determine which union member was used. This value must be one of the elements of the <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> enumeration.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.unionmember">
      <summary>Represents a handle, string, or interface pointer that the receiving process can use to access the data being transferred.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYMED">
      <summary>Provides the managed definition of the TYMED structure.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL">
      <summary>The storage medium is a global memory handle (HGLOBAL). Allocate the global handle with the GMEM_SHARE flag. If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is null, the destination process should use GlobalFree to release the memory.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE">
      <summary>The storage medium is a disk file identified by a path. If the STGMEDIUM<see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is null, the destination process should use OpenFile to delete the file.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM">
      <summary>The storage medium is a stream object identified by an IStream pointer. Use ISequentialStream::Read to read the data. If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is not null, the destination process should use IStream::Release to release the stream component.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE">
      <summary>The storage medium is a storage component identified by an IStorage pointer. The data is in the streams and storages contained by this IStorage instance. If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is not null, the destination process should use IStorage::Release to release the storage component.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_GDI">
      <summary>The storage medium is a Graphics Device Interface (GDI) component (HBITMAP). If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is null, the destination process should use DeleteObject to delete the bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_MFPICT">
      <summary>The storage medium is a metafile (HMETAFILE). Use the Windows or WIN32 functions to access the metafile's data. If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is null, the destination process should use DeleteMetaFile to delete the bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ENHMF">
      <summary>The storage medium is an enhanced metafile. If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is null, the destination process should use DeleteEnhMetaFile to delete the bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_NULL">
      <summary>No data is being passed.</summary>
    </member>
    <member name="T:System.Runtime.Versioning.FrameworkName">
      <summary>Represents the name of a version of the .NET Framework.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Versioning.FrameworkName" /> class from a string that contains information about a version of the .NET Framework.</summary>
      <param name="frameworkName">A string that contains .NET Framework version information.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="frameworkName" /> is <see cref="F:System.String.Empty" />.-or-<paramref name="frameworkName" /> has fewer than two components or more than three components.-or-<paramref name="frameworkName" /> does not include a major and minor version number.-or-<paramref name="frameworkName " />does not include a valid version number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frameworkName" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Versioning.FrameworkName" /> class from a string and a <see cref="T:System.Version" /> object that identify a .NET Framework version.</summary>
      <param name="identifier">A string that identifies a .NET Framework version. </param>
      <param name="version">An object that contains .NET Framework version information.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="identifier" /> is <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> is null.-or-<paramref name="version" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Versioning.FrameworkName" /> class from a string, a <see cref="T:System.Version" /> object that identifies a .NET Framework version, and a profile name.</summary>
      <param name="identifier">A string that identifies a .NET Framework version.</param>
      <param name="version">An object that contains .NET Framework version information.</param>
      <param name="profile">A profile name.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="identifier" /> is <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> is null.-or-<paramref name="version" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Object)">
      <summary>Returns a value that indicates whether this <see cref="T:System.Runtime.Versioning.FrameworkName" /> instance represents the same .NET Framework version as a specified object.</summary>
      <returns>true if every component of the current <see cref="T:System.Runtime.Versioning.FrameworkName" /> object matches the corresponding component of <paramref name="obj" />; otherwise, false.</returns>
      <param name="obj">The object to compare to the current instance.</param>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Runtime.Versioning.FrameworkName)">
      <summary>Returns a value that indicates whether this <see cref="T:System.Runtime.Versioning.FrameworkName" /> instance represents the same .NET Framework version as a specified <see cref="T:System.Runtime.Versioning.FrameworkName" /> instance.</summary>
      <returns>true if every component of the current <see cref="T:System.Runtime.Versioning.FrameworkName" /> object matches the corresponding component of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The object to compare to the current instance.</param>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.FullName">
      <summary>Gets the full name of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>The full name of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>A 32-bit signed integer that represents the hash code of this instance.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Identifier">
      <summary>Gets the identifier of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>The identifier of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Equality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Returns a value that indicates whether two <see cref="T:System.Runtime.Versioning.FrameworkName" /> objects represent the same .NET Framework version.</summary>
      <returns>true if the <paramref name="left" /> and <paramref name="right" /> parameters represent the same .NET Framework version; otherwise, false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Inequality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Returns a value that indicates whether two <see cref="T:System.Runtime.Versioning.FrameworkName" /> objects represent different .NET Framework versions.</summary>
      <returns>true if the <paramref name="left" /> and <paramref name="right" /> parameters represent different .NET Framework versions; otherwise, false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Profile">
      <summary>Gets the profile name of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>The profile name of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.ToString">
      <summary>Returns the string representation of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>A string that represents this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Version">
      <summary>Gets the version of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>An object that contains version information about this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAccessRule">
      <summary>Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</summary>
      <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the rights allowed or denied.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifies an invalid value.-or-<paramref name="type" /> specifies an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null. -or-<paramref name="eventRights" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</summary>
      <param name="identity">The name of the user or group the rule applies to.</param>
      <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the rights allowed or denied.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifies an invalid value.-or-<paramref name="type" /> specifies an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> is null.-or-<paramref name="identity" /> is a zero-length string.-or-<paramref name="identity" /> is longer than 512 characters.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
      <summary>Gets the rights allowed or denied by the access rule.</summary>
      <returns>A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values indicating the rights allowed or denied by the access rule.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAuditRule">
      <summary>Represents a set of access rights to be audited for a user or group. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.</summary>
      <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the kinds of access to audit.</param>
      <param name="flags">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifies an invalid value.-or-<paramref name="flags" /> specifies an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null. -or-<paramref name="eventRights" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights">
      <summary>Gets the access rights affected by the audit rule.</summary>
      <returns>A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values that indicates the rights affected by the audit rule.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreRights">
      <summary>Specifies the access control rights that can be applied to named system semaphore objects.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Modify">
      <summary>The right to release a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Delete">
      <summary>The right to delete a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions">
      <summary>The right to open and copy the access rules and audit rules for a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions">
      <summary>The right to change the security and audit rules associated with a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.TakeOwnership">
      <summary>The right to change the owner of a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Synchronize">
      <summary>The right to wait on a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.FullControl">
      <summary>The right to exert full control over a named semaphore, and to modify its access rules and audit rules.</summary>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreSecurity">
      <summary>Represents the Windows access control security for a named semaphore. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class with default values.</summary>
      <exception cref="T:System.NotSupportedException">This class is not supported on Windows 98 or Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class with the specified sections of the access control security rules from the system semaphore with the specified name.</summary>
      <param name="name">The name of the system semaphore whose access control security rules are to be retrieved.</param>
      <param name="includeSections">A combination of <see cref="T:System.Security.AccessControl.AccessControlSections" /> flags specifying the sections to retrieve.</param>
      <exception cref="T:System.NotSupportedException">This class is not supported on Windows 98 or Windows Millennium Edition.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
      <summary>Gets the enumeration that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent access rights.</summary>
      <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreRights" /> enumeration.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</summary>
      <returns>A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> object representing the specified rights for the specified user.</returns>
      <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</param>
      <param name="accessMask">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the access rights to allow or deny, cast to an integer.</param>
      <param name="isInherited">Meaningless for named semaphores, because they have no hierarchy.</param>
      <param name="inheritanceFlags">Meaningless for named semaphores, because they have no hierarchy.</param>
      <param name="propagationFlags">Meaningless for named semaphores, because they have no hierarchy.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> is null. -or-<paramref name="accessMask" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
      <summary>Gets the type that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent access rules.</summary>
      <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Searches for a matching rule with which the new rule can be merged. If none are found, adds the new rule.</summary>
      <param name="rule">The access control rule to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Searches for an audit rule with which the new rule can be merged. If none are found, adds the new rule.</summary>
      <param name="rule">The audit rule to add. The user specified by this rule determines the search.</param>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</summary>
      <returns>A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> object representing the specified audit rule for the specified user. The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</returns>
      <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</param>
      <param name="accessMask">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the access rights to audit, cast to an integer.</param>
      <param name="isInherited">Meaningless for named wait handles, because they have no hierarchy.</param>
      <param name="inheritanceFlags">Meaningless for named wait handles, because they have no hierarchy.</param>
      <param name="propagationFlags">Meaningless for named wait handles, because they have no hierarchy.</param>
      <param name="flags">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values that specify whether to audit successful access, failed access, or both.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> is null. -or-<paramref name="accessMask" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
      <summary>Gets the type that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent audit rules.</summary>
      <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> class.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</summary>
      <returns>true if a compatible rule is found; otherwise false.</returns>
      <param name="rule">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</summary>
      <param name="rule">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for. Any rights specified by this rule are ignored.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</summary>
      <param name="rule">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</summary>
      <returns>true if a compatible rule is found; otherwise, false.</returns>
      <param name="rule">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</summary>
      <param name="rule">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> that specifies the user to search for. Any rights specified by this rule are ignored.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</summary>
      <param name="rule">The <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</summary>
      <param name="rule">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to add. The user specified by this rule determines the rules to remove before this rule is added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</summary>
      <param name="rule">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to add. The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</summary>
      <param name="rule">The <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> to add. The user specified by this rule determines the rules to remove before this rule is added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="T:System.Security.Authentication.AuthenticationException">
      <summary>The exception that is thrown when authentication fails for an authentication stream.</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.AuthenticationException" /> class with no message.</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.AuthenticationException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that contains the information required to deserialize the new <see cref="T:System.Security.Authentication.AuthenticationException" /> instance. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance. </param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.AuthenticationException" /> class with the specified message.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the authentication failure.</param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.AuthenticationException" /> class with the specified message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the authentication failure.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that is the cause of the current exception.</param>
    </member>
    <member name="T:System.Security.Authentication.CipherAlgorithmType">
      <summary>Defines the possible cipher algorithms for the <see cref="T:System.Net.Security.SslStream" /> class.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.None">
      <summary>No encryption algorithm is used.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc2">
      <summary>Rivest's Code 2 (RC2) algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc4">
      <summary>Rivest's Code 4 (RC4) algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Des">
      <summary>The Data Encryption Standard (DES) algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.TripleDes">
      <summary>The Triple Data Encryption Standard (3DES) algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes">
      <summary>The Advanced Encryption Standard (AES) algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes128">
      <summary>The Advanced Encryption Standard (AES) algorithm with a 128 bit key.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes192">
      <summary>The Advanced Encryption Standard (AES) algorithm with a 192 bit key.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes256">
      <summary>The Advanced Encryption Standard (AES) algorithm with a 256 bit key.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Null">
      <summary />
    </member>
    <member name="T:System.Security.Authentication.ExchangeAlgorithmType">
      <summary>Specifies the algorithm used to create keys shared by the client and server.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.None">
      <summary>No key exchange algorithm is used.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaSign">
      <summary>The RSA public-key signature algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaKeyX">
      <summary>The RSA public-key exchange algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.DiffieHellman">
      <summary>The Diffie Hellman ephemeral key exchange algorithm.</summary>
    </member>
    <member name="T:System.Security.Authentication.HashAlgorithmType">
      <summary>Specifies the algorithm used for generating message authentication codes (MACs).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.None">
      <summary>No hashing algorithm is used.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Md5">
      <summary>The Message Digest 5 (MD5) hashing algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha1">
      <summary>The Secure Hashing Algorithm (SHA1).</summary>
    </member>
    <member name="T:System.Security.Authentication.InvalidCredentialException">
      <summary>The exception that is thrown when authentication fails for an authentication stream and cannot be retried.</summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.InvalidCredentialException" /> class with no message. </summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.InvalidCredentialException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that contains the information required to deserialize the new <see cref="T:System.Security.Authentication.InvalidCredentialException" /> instance. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance. </param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.InvalidCredentialException" /> class with the specified message.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the authentication failure.</param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.InvalidCredentialException" /> class with the specified message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the authentication failure.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that is the cause of the current exception.</param>
    </member>
    <member name="T:System.Security.Authentication.SslProtocols">
      <summary>Defines the possible versions of <see cref="T:System.Security.Authentication.SslProtocols" />.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.None">
      <summary>No SSL protocol is specified.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl2">
      <summary>Specifies the SSL 2.0 protocol. SSL 2.0 has been superseded by the TLS protocol and is provided for backward compatibility only.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl3">
      <summary>Specifies the SSL 3.0 protocol. SSL 3.0 has been superseded by the TLS protocol and is provided for backward compatibility only.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls">
      <summary>Specifies the TLS 1.0 security protocol. The TLS protocol is defined in IETF RFC 2246.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Default">
      <summary>Specifies that either Secure Sockets Layer (SSL) 3.0 or Transport Layer Security (TLS) 1.0 are acceptable for secure communications</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBinding">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> class.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> class.</summary>
      <param name="ownsHandle">A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size">
      <summary>The <see cref="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size" /> property gets the size, in bytes, of the channel binding token associated with the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> instance.</summary>
      <returns>The size, in bytes, of the channel binding token in the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> instance.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind" /> enumeration represents the kinds of channel bindings that can be queried from secure channels.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unknown">
      <summary>An unknown channel binding type.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique">
      <summary>A channel binding completely unique to a given channel (a TLS session key, for example).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint">
      <summary>A channel binding unique to a given endpoint (a TLS server certificate, for example).</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class represents the extended protection policy used by the server to validate incoming client connections. </summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class from a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the required data to populate the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that contains the information that is required to serialize the new <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> instance.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> instance.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class that specifies when the extended protection policy should be enforced.</summary>
      <param name="policyEnforcement">A <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class that specifies when the extended protection policy should be enforced and the channel binding token (CBT) to be used.</summary>
      <param name="policyEnforcement">A <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced.</param>
      <param name="customChannelBinding">A <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that contains a custom channel binding to use for validation.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> is specified as <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customChannelBinding " />is null. </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class that specifies when the extended protection policy should be enforced, the kind of protection enforced by the policy, and a custom Service Provider Name (SPN) list that is used to match against a client's SPN.</summary>
      <param name="policyEnforcement">A <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced.</param>
      <param name="protectionScenario">A <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> value that indicates the kind of protection enforced by the policy.</param>
      <param name="customServiceNames">A <see cref="T:System.Collections.ICollection" /> that contains the custom SPN list that is used to match against a client's SPN.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> is specified as <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames " />is nullor an empty list. </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class that specifies when the extended protection policy should be enforced, the kind of protection enforced by the policy, and a custom Service Provider Name (SPN) list that is used to match against a client's SPN.</summary>
      <param name="policyEnforcement">A <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced.</param>
      <param name="protectionScenario">A <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> value that indicates the kind of protection enforced by the policy.</param>
      <param name="customServiceNames">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains the custom SPN list that is used to match against a client's SPN.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> is specified as <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames " />is nullor an empty list. </exception>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding">
      <summary>Gets a custom channel binding token (CBT) to use for validation.</summary>
      <returns>A <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that contains a custom channel binding to use for validation.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames">
      <summary>Gets the custom Service Provider Name (SPN) list used to match against a client's SPN.</summary>
      <returns>A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains the custom SPN list that is used to match against a client's SPN.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection">
      <summary>Indicates whether the operating system supports integrated windows authentication with extended protection.</summary>
      <returns>true if the operating system supports integrated windows authentication with extended protection, otherwise false.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement">
      <summary>Gets when the extended protection policy should be enforced.</summary>
      <returns>A <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced. </returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario">
      <summary>Gets the kind of protection enforced by the extended protection policy.</summary>
      <returns>A <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> value that indicates the kind of protection enforced by the policy. </returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the required data to serialize an <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized data for an <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the destination of the serialized stream that is associated with the new <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString">
      <summary>Gets a string representation for the extended protection policy instance.</summary>
      <returns>A <see cref="T:System.String" /> instance that contains the representation of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> instance.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter" /> class represents the type converter for extended protection policy used by the server to validate incoming client connections. </summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter" /> class.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
      <returns>true if this converter can perform the conversion; otherwise false.</returns>
      <param name="context">The object to convert.</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <returns>An <see cref="T:System.Object" /> that represents the converted <paramref name="value" /> parameter.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object. If null is passed, the current culture is assumed.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert. This should be an <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> object.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the value parameter to.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType" /> parameter is null.</exception>
      <exception cref="T:System.NotSupportedException">The conversion could not be performed.</exception>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> enumeration specifies when the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> should be enforced.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> is never enforced and extended protection is disabled.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.WhenSupported">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> is enforced only if the client and server supports extended protection.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> is always enforced. Clients that don’t support extended protection will fail to authenticate.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> enumeration specifies the protection scenario enforced by the policy.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected">
      <summary>The transport will select between a secure and standard protection scenario depending on the type of channel used. For secure protection, integrated Windows authentication is wrapped in a secure channel and has an exactly matching channel binding token with no Service Provider Name (SPN) validation. For standard protection, integrated Windows authentication is optionally wrapped in a secure channel with an optional channel binding token and SPN validation is required. So if the request comes through a secure channel, the channel binding token (CBT) is checked, otherwise the SPN is checked.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy">
      <summary>Integrated Windows authentication is wrapped in a secure channel terminated by a trusted proxy and has a channel binding token with SPN validation required. This requires the presence of a CBT, but the CBT is not checked while the SPN is checked.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> class is a read-only collection of service principal names. </summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new read-only instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> class based on an existing <see cref="T:System.Collections.ICollection" />. </summary>
      <param name="items">An instance of the <see cref="T:System.Collections.ICollection" /> class that contains the specified values of service names to be used to initialize the class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item " />is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> is empty.</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.Collections.IEnumerable)">
      <summary>Merges the current <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> with the specified values to create a new <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> containing the union.</summary>
      <returns>A new <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> instance that contains the union of the existing <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> instance merged with the specified values.</returns>
      <param name="serviceNames">An instance of the <see cref="T:System.Collections.IEnumerable" /> class that contains the specified values of service names to be merged.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames " />is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> is empty.</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.String)">
      <summary>Merges the current <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> with the specified values to create a new <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> containing the union.</summary>
      <returns>A new <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> instance that contains the union of the existing <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> instance merged with the specified values.</returns>
      <param name="serviceName">A string that contains the specified values of service names to be used to initialize the class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames " />is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> is empty.</exception>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" /> class represents a configuration element for an <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" /> class.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.BuildPolicy">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.BuildPolicy" /> method builds a new <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> instance based on the properties set on the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" /> class. </summary>
      <returns>A new <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> instance that represents the extended protection policy created.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.CustomServiceNames">
      <summary>Gets or sets the custom Service Provider Name (SPN) list used to match against a client's SPN for this configuration policy element. </summary>
      <returns>Returns a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" /> that includes the custom SPN list used to match against a client's SPN.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.PolicyEnforcement">
      <summary>Gets or sets the policy enforcement value for this configuration policy element.</summary>
      <returns>Returns a <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.ProtectionScenario">
      <summary>Gets or sets the kind of protection enforced by the extended protection policy for this configuration policy element.</summary>
      <returns>A <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> value that indicates the kind of protection enforced by the policy.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> class represents a configuration element for a service name used in a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> class.</summary>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement.Name">
      <summary>Gets or sets the Service Provider Name (SPN) for this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the representation of SPN for this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> class is a collection of service principal names that represent a configuration element for an <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" /> class.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Add(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Add(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)" /> method adds a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />. </summary>
      <param name="element">The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to add to this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Clear">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Clear" /> method removes all configuration element objects from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.IndexOf(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.IndexOf(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)" /> method retrieves the index of the specified configuration element in this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</summary>
      <returns>The index of the specified <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> in this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</returns>
      <param name="element">The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to retrieve the index of in this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Item(System.String)" /> property gets or sets the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance at the specified index location.</summary>
      <returns>The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance requested. If the requested instance is not found, then null is returned.</returns>
      <param name="index">The index of the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance in this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Item(System.String)">
      <summary>The <see cref="P:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Item(System.String)" /> property gets or sets the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance based on a string that represents the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance.</summary>
      <returns>The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance requested. If the requested instance is not found, then null is returned.</returns>
      <param name="name">A <see cref="T:System.String" /> that represents the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance in this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)" /> method removes a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</summary>
      <param name="element">The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to remove from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element " />is null. </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.String)">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)" /> method removes a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" /> based on the <see cref="T:System.String" /> specified.</summary>
      <param name="name">A <see cref="T:System.String" /> that represents the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to remove from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" /></param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.RemoveAt(System.Int32)">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)" /> method removes a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" /> based on the index specified.</summary>
      <param name="index">The index of the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to remove from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
    </member>
    <member name="T:System.Security.Cryptography.AsnEncodedData">
      <summary>Represents Abstract Syntax Notation One (ASN.1)-encoded data.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class using a byte array.</summary>
      <param name="rawData">A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class using an instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class.</summary>
      <param name="asnEncodedData">An instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class using an <see cref="T:System.Security.Cryptography.Oid" /> object and a byte array.</summary>
      <param name="oid">An <see cref="T:System.Security.Cryptography.Oid" /> object.</param>
      <param name="rawData">A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.String,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class using a byte array.</summary>
      <param name="oid">A string that represents <see cref="T:System.Security.Cryptography.Oid" /> information.</param>
      <param name="rawData">A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copies information from an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to base the new object on.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData " />is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.Format(System.Boolean)">
      <summary>Returns a formatted version of the Abstract Syntax Notation One (ASN.1)-encoded data as a string.</summary>
      <returns>A formatted string that represents the Abstract Syntax Notation One (ASN.1)-encoded data.</returns>
      <param name="multiLine">true if the return string should contain carriage returns; otherwise, false.</param>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedData.Oid">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.Oid" /> value for an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Oid" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedData.RawData">
      <summary>Gets or sets the Abstract Syntax Notation One (ASN.1)-encoded data represented in a byte array.</summary>
      <returns>A byte array that represents the Abstract Syntax Notation One (ASN.1)-encoded data.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="T:System.Security.Cryptography.AsnEncodedDataCollection">
      <summary>Represents a collection of <see cref="T:System.Security.Cryptography.AsnEncodedData" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> class and adds an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to the collection.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to add to the collection.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary>Adds an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>The index of the added <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</returns>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Neither of the OIDs are null and the OIDs do not match.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">One of the OIDs is null and the OIDs do not match.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.CopyTo(System.Security.Cryptography.AsnEncodedData[],System.Int32)">
      <summary>Copies the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object into an array.</summary>
      <param name="array">The array that the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object is to be copied into.</param>
      <param name="index">The location where the copy operation starts.</param>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.Count">
      <summary>Gets the number of <see cref="T:System.Security.Cryptography.AsnEncodedData" /> objects in a collection.</summary>
      <returns>The number of <see cref="T:System.Security.Cryptography.AsnEncodedData" /> objects.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> object that can be used to navigate the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object is thread safe.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object from the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</returns>
      <param name="index">The location in the collection.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.Remove(System.Security.Cryptography.AsnEncodedData)">
      <summary>Removes an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object from the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>An object used to synchronize access to the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object into an array.</summary>
      <param name="array">The array that the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object is to be copied into.</param>
      <param name="index">The location where the copy operation starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is a multidimensional array, which is not supported by this method.</exception>
      <exception cref="T:System.ArgumentException">The length for <paramref name="index" /> is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length for <paramref name="index" /> is out of range.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> object that can be used to navigate the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> object that can be used to navigate the collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.AsnEncodedDataEnumerator">
      <summary>Provides the ability to navigate through an <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object in an <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>The current <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object in the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataEnumerator.MoveNext">
      <summary>Advances to the next <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object in an <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>true, if the enumerator was successfully advanced to the next element; false, if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataEnumerator.Reset">
      <summary>Sets an enumerator to its initial position.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object in an <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>The current <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Oid">
      <summary>Represents a cryptographic object identifier. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Oid" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Oid" /> class using the specified <see cref="T:System.Security.Cryptography.Oid" /> object.</summary>
      <param name="oid">The object identifier information to use to create the new object identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oid " />is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Oid" /> class using a string value of an <see cref="T:System.Security.Cryptography.Oid" /> object.</summary>
      <param name="oid">An object identifier.</param>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Oid" /> class using the specified value and friendly name.</summary>
      <param name="value">The dotted number of the identifier.</param>
      <param name="friendlyName">The friendly name of the identifier.</param>
    </member>
    <member name="P:System.Security.Cryptography.Oid.FriendlyName">
      <summary>Gets or sets the friendly name of the identifier.</summary>
      <returns>The friendly name of the identifier.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Oid.Value">
      <summary>Gets or sets the dotted number of the identifier.</summary>
      <returns>The dotted number of the identifier.</returns>
    </member>
    <member name="T:System.Security.Cryptography.OidCollection">
      <summary>Represents a collection of <see cref="T:System.Security.Cryptography.Oid" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.OidCollection" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.Add(System.Security.Cryptography.Oid)">
      <summary>Adds an <see cref="T:System.Security.Cryptography.Oid" /> object to the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>The index of the added <see cref="T:System.Security.Cryptography.Oid" /> object.</returns>
      <param name="oid">The <see cref="T:System.Security.Cryptography.Oid" /> object to add to the collection.</param>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.CopyTo(System.Security.Cryptography.Oid[],System.Int32)">
      <summary>Copies the <see cref="T:System.Security.Cryptography.OidCollection" /> object into an array.</summary>
      <param name="array">The array to copy the <see cref="T:System.Security.Cryptography.OidCollection" /> object into.</param>
      <param name="index">The location where the copy operation starts.</param>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Count">
      <summary>Gets the number of <see cref="T:System.Security.Cryptography.Oid" /> objects in a collection. </summary>
      <returns>The number of <see cref="T:System.Security.Cryptography.Oid" /> objects in a collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Security.Cryptography.OidEnumerator" /> object that can be used to navigate the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.OidEnumerator" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Security.Cryptography.OidCollection" /> object is thread safe.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.Security.Cryptography.Oid" /> object from the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Oid" /> object.</returns>
      <param name="index">The location of the <see cref="T:System.Security.Cryptography.Oid" /> object in the collection.</param>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Item(System.String)">
      <summary>Gets the first <see cref="T:System.Security.Cryptography.Oid" /> object that contains a value of the <see cref="P:System.Security.Cryptography.Oid.Value" /> property or a value of the <see cref="P:System.Security.Cryptography.Oid.FriendlyName" /> property that matches the specified string value from the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Oid" /> object.</returns>
      <param name="oid">A string that represents a <see cref="P:System.Security.Cryptography.Oid.Value" /> property or a <see cref="P:System.Security.Cryptography.Oid.FriendlyName" /> property.</param>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Security.Cryptography.OidCollection" /> object into an array.</summary>
      <param name="array">The array to copy the <see cref="T:System.Security.Cryptography.OidCollection" /> object to.</param>
      <param name="index">The location where the copy operation starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> cannot be a multidimensional array.-or-The length of <paramref name="array" /> is an invalid offset length.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of <paramref name="index" /> is out range.</exception>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Security.Cryptography.OidEnumerator" /> object that can be used to navigate the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.OidEnumerator" /> object that can be used to navigate the collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.OidEnumerator">
      <summary>Provides the ability to navigate through an <see cref="T:System.Security.Cryptography.OidCollection" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Security.Cryptography.OidEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.Oid" /> object in an <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>The current <see cref="T:System.Security.Cryptography.Oid" /> object in the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidEnumerator.MoveNext">
      <summary>Advances to the next <see cref="T:System.Security.Cryptography.Oid" /> object in an <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>true, if the enumerator was successfully advanced to the next element; false, if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Security.Cryptography.OidEnumerator.Reset">
      <summary>Sets an enumerator to its initial position.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="P:System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.Oid" /> object in an <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>The current <see cref="T:System.Security.Cryptography.Oid" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.OpenFlags">
      <summary>Specifies the way to open the X.509 certificate store.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly">
      <summary>Open the X.509 certificate store for reading only.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite">
      <summary>Open the X.509 certificate store for both reading and writing.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed">
      <summary>Open the X.509 certificate store for the highest access allowed.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly">
      <summary>Opens only existing stores; if no store exists, the <see cref="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)" /> method will not create a new store.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived">
      <summary>Open the X.509 certificate store and include archived certificates.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.PublicKey">
      <summary>Represents a certificate's public key information. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.PublicKey.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedData,System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.PublicKey" /> class using an object identifier (OID) object of the public key, an ASN.1-encoded representation of the public key parameters, and an ASN.1-encoded representation of the public key value. </summary>
      <param name="oid">An object identifier (OID) object that represents the public key.</param>
      <param name="parameters">An ASN.1-encoded representation of the public key parameters.</param>
      <param name="keyValue">An ASN.1-encoded representation of the public key value.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.PublicKey.EncodedKeyValue">
      <summary>Gets the ASN.1-encoded representation of the public key value.</summary>
      <returns>The ASN.1-encoded representation of the public key value.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.PublicKey.EncodedParameters">
      <summary>Gets the ASN.1-encoded representation of the public key parameters.</summary>
      <returns>The ASN.1-encoded representation of the public key parameters.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.PublicKey.Key">
      <summary>Gets an <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> or <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object representing the public key.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object representing the public key.</returns>
      <exception cref="T:System.NotSupportedException">The key algorithm is not supported.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.PublicKey.Oid">
      <summary>Gets an object identifier (OID) object of the public key.</summary>
      <returns>An object identifier (OID) object of the public key.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.StoreLocation">
      <summary>Specifies the location of the X.509 certificate store.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser">
      <summary>The X.509 certificate store used by the current user.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine">
      <summary>The X.509 certificate store assigned to the local machine.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.StoreName">
      <summary>Specifies the name of the X.509 certificate store to open.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.AddressBook">
      <summary>The X.509 certificate store for other users.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.AuthRoot">
      <summary>The X.509 certificate store for third-party certificate authorities (CAs).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.CertificateAuthority">
      <summary>The X.509 certificate store for intermediate certificate authorities (CAs). </summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.Disallowed">
      <summary>The X.509 certificate store for revoked certificates.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.My">
      <summary>The X.509 certificate store for personal certificates.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.Root">
      <summary>The X.509 certificate store for trusted root certificate authorities (CAs).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.TrustedPeople">
      <summary>The X.509 certificate store for directly trusted people and resources.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.TrustedPublisher">
      <summary>The X.509 certificate store for directly trusted publishers.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName">
      <summary>Represents the distinguished name of an X509 certificate. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> class using information from the specified byte array.</summary>
      <param name="encodedDistinguishedName">A byte array that contains distinguished name information.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> class using the specified <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="encodedDistinguishedName">An <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object that represents the distinguished name.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.Security.Cryptography.X509Certificates.X500DistinguishedName)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> class using the specified <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object.</summary>
      <param name="distinguishedName">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> class using information from the specified string.</summary>
      <param name="distinguishedName">A string that represents the distinguished name.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.String,System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> class using the specified string and <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" /> flag.</summary>
      <param name="distinguishedName">A string that represents the distinguished name.</param>
      <param name="flag">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that specifies the characteristics of the distinguished name.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.Decode(System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags)">
      <summary>Decodes a distinguished name using the characteristics specified by the <paramref name="flag" /> parameter.</summary>
      <returns>The decoded distinguished name.</returns>
      <param name="flag">A flag that specifies the characteristics of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate has an invalid name.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.Format(System.Boolean)">
      <summary>Returns a formatted version of an X500 distinguished name for printing or for output to a text window or to a console.</summary>
      <returns>A formatted string that represents the X500 distinguished name.</returns>
      <param name="multiLine">true if the return string should contain carriage returns; otherwise, false.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X500DistinguishedName.Name">
      <summary>Gets the comma-delimited distinguished name from an X500 certificate.</summary>
      <returns>The comma-delimited distinguished name of the X509 certificate.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags">
      <summary>Specifies characteristics of the X.500 distinguished name.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.None">
      <summary>The distinguished name has no special characteristics.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.Reversed">
      <summary>The distinguished name is reversed.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.UseSemicolons">
      <summary>The distinguished name uses semicolons.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.DoNotUsePlusSign">
      <summary>The distinguished name does not use the plus sign.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.DoNotUseQuotes">
      <summary>The distinguished name does not use quotation marks.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.UseCommas">
      <summary>The distinguished name uses commas.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.UseNewLines">
      <summary>The distinguished name uses the new line character.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.UseUTF8Encoding">
      <summary>The distinguished name uses UTF8 encoding.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.UseT61Encoding">
      <summary>The distinguished name uses T61 encoding.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.ForceUTF8Encoding">
      <summary>The distinguished name uses UTF8 encoding.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension">
      <summary>Defines the constraints set on a certificate. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class. Parameters specify a value that indicates whether a certificate is a certificate authority (CA) certificate, a value that indicates whether the certificate has a restriction on the number of path levels it allows, the number of levels allowed in a certificate's path, and a value that indicates whether the extension is critical.  </summary>
      <param name="certificateAuthority">true if the certificate is a certificate authority (CA) certificate; otherwise, false.</param>
      <param name="hasPathLengthConstraint">true if the certificate has a restriction on the number of path levels it allows; otherwise, false.</param>
      <param name="pathLengthConstraint">The number of levels allowed in a certificate's path.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object and a value that identifies whether the extension is critical. </summary>
      <param name="encodedBasicConstraints">The encoded data to use to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority">
      <summary>Gets a value indicating whether a certificate is a certificate authority (CA) certificate.</summary>
      <returns>true if the certificate is a certificate authority (CA) certificate, otherwise, false.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The encoded data to use to create the extension.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint">
      <summary>Gets a value indicating whether a certificate has a restriction on the number of path levels it allows.</summary>
      <returns>true if the certificate has a restriction on the number of path levels it allows, otherwise, false.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The extension cannot be decoded. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint">
      <summary>Gets the number of levels allowed in a certificate's path.</summary>
      <returns>An integer indicating the number of levels allowed in a certificate's path.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The extension cannot be decoded. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2">
      <summary>Represents an X.509 certificate.  </summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</summary>
      <param name="rawData">A byte array that contains data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</summary>
      <param name="rawData">A byte array that contains data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls where and how to import the private key. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</summary>
      <param name="handle">A pointer to a certificate context in unmanaged code. The C structure is called PCCERT_CONTEXT.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information. </summary>
      <param name="info">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</param>
      <param name="context">Contextual information about the source of the stream to be deserialized.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls where and how to import the private key.. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived">
      <summary>Gets or sets a value indicating that an X.509 certificate is archived.</summary>
      <returns>true if the certificate is archived, false if the certificate is not archived.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions">
      <summary>Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName">
      <summary>Gets or sets the associated alias for a certificate.</summary>
      <returns>The certificate's friendly name.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])">
      <summary>Indicates the type of certificate contained in a byte array.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</returns>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rawData" /> has a zero length or is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)">
      <summary>Indicates the type of certificate contained in a file.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</returns>
      <param name="fileName">The name of a certificate file. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)">
      <summary>Gets the subject and issuer names from a certificate.</summary>
      <returns>The name of the certificate.</returns>
      <param name="nameType">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject. </param>
      <param name="forIssuer">true to include the issuer name; otherwise, false. </param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey">
      <summary>Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key. </summary>
      <returns>true if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, false. </returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate context is invalid.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</summary>
      <param name="rawData">A byte array that contains data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls where and how to import the private key. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values used to control where and how to import the private key. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</summary>
      <param name="fileName">The name of a certificate. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls where and how to import the private key. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values used to control where and how to import the private key. </param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName">
      <summary>Gets the distinguished name of the certificate issuer.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate context is invalid.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter">
      <summary>Gets the date in local time after which a certificate is no longer valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate .</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore">
      <summary>Gets the date in local time on which a certificate becomes valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The key value is not an RSA or DSA key, or the key is unreadable. </exception>
      <exception cref="T:System.ArgumentNullException">The value being set for this property is null.</exception>
      <exception cref="T:System.NotSupportedException">The key algorithm for this private key is not supported.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">The X.509 keys do not match.</exception>
      <exception cref="T:System.ArgumentException">The cryptographic service provider key is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey">
      <summary>Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</summary>
      <returns>A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The key value is not an RSA or DSA key, or the key is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData">
      <summary>Gets the raw data of a certificate.</summary>
      <returns>The raw data of the certificate as a byte array.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset">
      <summary>Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber">
      <summary>Gets the serial number of a certificate.</summary>
      <returns>The serial number of the certificate.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm">
      <summary>Gets the algorithm used to create the signature of a certificate.</summary>
      <returns>Returns the object identifier (<see cref="T:System.Security.Cryptography.Oid" />) of the signature algorithm.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName">
      <summary>Gets the subject distinguished name from a certificate.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate context is invalid.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint">
      <summary>Gets the thumbprint of a certificate.</summary>
      <returns>The thumbprint of the certificate.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString">
      <summary>Displays an X.509 certificate in text format.</summary>
      <returns>The certificate information.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)">
      <summary>Displays an X.509 certificate in text format.</summary>
      <returns>The certificate information.</returns>
      <param name="verbose">true to display the public key, private key, extensions, and so forth; false to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify">
      <summary>Performs a X.509 chain validation using basic validation policy.</summary>
      <returns>true if the validation succeeds; false if the validation fails.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version">
      <summary>Gets the X.509 format version of a certificate.</summary>
      <returns>The certificate format.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection">
      <summary>Represents a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> class without any <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> information.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object to start the collection from.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> class using an array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects.</summary>
      <param name="certificates">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> class using the specified certificate collection.</summary>
      <param name="certificates">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Adds an object to the end of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> index at which the <paramref name="certificate" /> has been added.</returns>
      <param name="certificate">An X.509 certificate represented as an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
      <summary>Adds multiple <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects in an array to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="certificates">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Adds multiple <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects in an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object to another <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="certificates">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Determines whether the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object contains a specific certificate.</summary>
      <returns>true if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> contains the specified <paramref name="certificate" />; otherwise, false.</returns>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object to locate in the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)">
      <summary>Exports X.509 certificate information into a byte array.</summary>
      <returns>X.509 certificate information in a byte array.</returns>
      <param name="contentType">A supported <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)">
      <summary>Exports X.509 certificate information into a byte array using a password.</summary>
      <returns>X.509 certificate information in a byte array.</returns>
      <param name="contentType">A supported <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object. </param>
      <param name="password">A string used to protect the byte array. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable, the content is invalid or, in the case of a certificate requiring a password, the private key could not be exported because the password provided was incorrect. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)">
      <summary>Searches an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object using the search criteria specified by the <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> enumeration and the <paramref name="findValue" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</returns>
      <param name="findType">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />  values. </param>
      <param name="findValue">The search criteria as an object. </param>
      <param name="validOnly">true to allow only valid certificates to be returned from the search; otherwise, false. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="findType" /> is invalid. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator" /> object that can iterate through the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])">
      <summary>Imports a certificate in the form of a byte array into a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Imports a certificate, in the form of a byte array that requires a password to access the certificate, into a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="rawData">A byte array containing data from an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object. </param>
      <param name="password">The password required to access the certificate information. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls how and where the private key is imported. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)">
      <summary>Imports a certificate file into a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="fileName">The name of the file containing the certificate information. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Imports a certificate file that requires a password into a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="fileName">The name of the file containing the certificate information. </param>
      <param name="password">The password required to access the certificate information. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls how and where the private key is imported. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Inserts an object into the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object at the specified index.</summary>
      <param name="index">The zero-based index at which to insert <paramref name="certificate" />. </param>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object to insert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or- <paramref name="index" /> is greater than the <see cref="P:System.Collections.CollectionBase.Count" /> property. </exception>
      <exception cref="T:System.NotSupportedException">The collection is read-only.-or- The collection has a fixed size. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or- <paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.CollectionBase.Count" /> property. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Removes the first occurrence of a certificate from the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object to be removed from the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
      <summary>Removes multiple <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects in an array from an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="certificates">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Removes multiple <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects in an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object from another <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="certificates">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator">
      <summary>Supports a simple iteration over a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.Current">
      <summary>Gets the current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System#Collections#IEnumerator#Current">
      <summary>For a description of this member, see <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System#Collections#IEnumerator#MoveNext">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerator.MoveNext" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System#Collections#IEnumerator#Reset">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerator.Reset" />.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection">
      <summary>Defines a collection that stores <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> objects.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> class from an array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> objects.</summary>
      <param name="value">The array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> objects with which to initialize the new object. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.#ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> class from another <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> with which to initialize the new object. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Adds an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> with the specified value to the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>The index into the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> at which the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> was inserted.</returns>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to add to the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])">
      <summary>Copies the elements of an array of type <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to the end of the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <param name="value">The array of type <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> containing the objects to add to the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
      <summary>Copies the elements of the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> to the end of the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Gets a value indicating whether the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> contains the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />.</summary>
      <returns>true if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> is contained in this collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to locate. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)">
      <summary>Copies the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> values in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </param>
      <param name="index">The index into <paramref name="array" /> to begin copying. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="array" /> parameter is multidimensional.-or- The number of elements in the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> is greater than the available space between <paramref name="arrayIndex" /> and the end of <paramref name="array" />. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="arrayIndex" /> parameter is less than the <paramref name="array" /> parameter's lower bound. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>An enumerator of the subelements of <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> you can use to iterate through the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode">
      <summary>Builds a hash value based on all values contained in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>A hash value based on all values contained in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Returns the index of the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>The index of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> specified by the <paramref name="value" /> parameter in the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to locate. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Inserts a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> into the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted. </param>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to insert. </param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Item(System.Int32)">
      <summary>Gets or sets the entry at the specified index of the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> at the specified index of the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</returns>
      <param name="index">The zero-based index of the entry to locate in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Removes a specific <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> from the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to remove from the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> specified by the <paramref name="value" /> parameter is not found in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator">
      <summary>Enumerates the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> objects in an <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.#ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator" /> class for the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <param name="mappings">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> to enumerate. </param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> in the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>The current <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> in the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was instantiated. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The collection is modified after the enumerator is instantiated. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#Current">
      <summary>For a description of this member, see <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>The current X.509 certificate object in the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerator.MoveNext" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was instantiated. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#Reset">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerator.Reset" />.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was instantiated. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Chain">
      <summary>Represents a chain-building engine for <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> certificates.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> class specifying a value that indicates whether the machine context should be used.</summary>
      <param name="useMachineContext">true to use the machine context; false to use the current user context. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> class using an <see cref="T:System.IntPtr" /> handle to an X.509 chain.</summary>
      <param name="chainContext">An <see cref="T:System.IntPtr" /> handle to an X.509 chain.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="chainContext" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="chainContext" /> parameter points to an invalid context.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Builds an X.509 chain using the policy specified in <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" />.</summary>
      <returns>true if the X.509 certificate is valid; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="certificate" /> is not a valid certificate or is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="certificate" /> is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainContext">
      <summary>Gets a handle to an X.509 chain.</summary>
      <returns>An <see cref="T:System.IntPtr" /> handle to an X.509 chain.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainElements">
      <summary>Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElement" /> objects.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> to use when building an X.509 certificate chain.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> object associated with this X.509 chain.</returns>
      <exception cref="T:System.ArgumentNullException">The value being set for this property is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus">
      <summary>Gets the status of each element in an <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> object.</summary>
      <returns>An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainStatus" /> objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.Create">
      <summary>Creates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> object after querying for the mapping defined in the CryptoConfig file, and maps the chain to that mapping.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.Reset">
      <summary>Clears the current <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> object.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainElement">
      <summary>Represents an element of an X.509 chain.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElement.Certificate">
      <summary>Gets the X.509 certificate at a particular chain element.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElement.ChainElementStatus">
      <summary>Gets the error status of the current X.509 certificate in a chain.</summary>
      <returns>An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainStatus" /> objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElement.Information">
      <summary>Gets additional error information from an unmanaged certificate chain structure.</summary>
      <returns>A string representing the pwszExtendedErrorInfo member of the unmanaged CERT_CHAIN_ELEMENT structure in the Crypto API.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection">
      <summary>Represents a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElement" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509ChainElement[],System.Int32)">
      <summary>Copies an <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" /> object into an array, starting at the specified index.</summary>
      <param name="array">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElement" /> objects. </param>
      <param name="index">An integer representing the index value. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="index" /> is less than zero, or greater than or equal to the length of the array. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus the current count is greater than the length of the array. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.Count">
      <summary>Gets the number of elements in the collection.</summary>
      <returns>An integer representing the number of elements in the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.GetEnumerator">
      <summary>Gets an <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator" /> object that can be used to navigate through a collection of chain elements.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.IsSynchronized">
      <summary>Gets a value indicating whether the collection of chain elements is synchronized.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElement" /> object at the specified index.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElement" /> object.</returns>
      <param name="index">An integer value. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is greater than or equal to the length of the collection. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to an <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" /> object.</summary>
      <returns>A pointer reference to the current object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies an <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" /> object into an array, starting at the specified index.</summary>
      <param name="array">An array to copy the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" /> object to.</param>
      <param name="index">The index of <paramref name="array" /> at which to start copying.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="index" /> is less than zero, or greater than or equal to the length of the array. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus the current count is greater than the length of the array. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> object that can be used to navigate a collection of chain elements.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator">
      <summary>Supports a simple iteration over an <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.Current">
      <summary>Gets the current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy">
      <summary>Represents the chain policy to be applied when building an X509 certificate chain. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainPolicy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> class. </summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.ApplicationPolicy">
      <summary>Gets a collection of object identifiers (OIDs) specifying which application policies or enhanced key usages (EKUs) the certificate supports.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.OidCollection" />  object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.CertificatePolicy">
      <summary>Gets a collection of object identifiers (OIDs) specifying which certificate policies the certificate supports.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.OidCollection" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.ExtraStore">
      <summary>Represents an additional collection of certificates that can be searched by the chaining engine when validating a certificate chain.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset">
      <summary>Resets the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> members to their default values.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationFlag">
      <summary>Gets or sets values for X509 revocation flags.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationFlag" /> object.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationFlag" /> value supplied is not a valid flag. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationMode">
      <summary>Gets or sets values for X509 certificate revocation mode.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> object.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> value supplied is not a valid flag. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.UrlRetrievalTimeout">
      <summary>Gets the time span that elapsed during online revocation verification or downloading the certificate revocation list (CRL).</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationFlags">
      <summary>Gets verification flags for the certificate.</summary>
      <returns>A value from the <see cref="T:System.Security.Cryptography.X509Certificates.X509VerificationFlags" /> enumeration.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Cryptography.X509Certificates.X509VerificationFlags" /> value supplied is not a valid flag. <see cref="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.NoFlag" /> is the default value. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationTime">
      <summary>The time that the certificate was verified expressed in local time.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainStatus">
      <summary>Provides a simple structure for storing X509 chain status and error information.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainStatus.Status">
      <summary>Specifies the status of the X509 chain.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" /> value.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainStatus.StatusInformation">
      <summary>Specifies a description of the <see cref="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus" /> value.</summary>
      <returns>A localizable string.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags">
      <summary>Defines the status of an X509 chain.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError">
      <summary>Specifies that the X509 chain has no errors.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NotTimeValid">
      <summary>Specifies that the X509 chain is not valid due to an invalid time value, such as a value that indicates an expired certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NotTimeNested">
      <summary>Specifies that the CA (certificate authority) certificate and the issued certificate have validity periods that are not nested. For example, the CA cert can be valid from January 1 to December 1 and the issued certificate from January 2 to December 2, which would mean the validity periods are not nested.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.Revoked">
      <summary>Specifies that the X509 chain is invalid due to a revoked certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NotSignatureValid">
      <summary>Specifies that the X509 chain is invalid due to an invalid certificate signature.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NotValidForUsage">
      <summary>Specifies that the key usage is not valid.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.UntrustedRoot">
      <summary>Specifies that the X509 chain is invalid due to an untrusted root certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.RevocationStatusUnknown">
      <summary>Specifies that it is not possible to determine whether the certificate has been revoked. This can be due to the certificate revocation list (CRL) being offline or unavailable.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.Cyclic">
      <summary>Specifies that the X509 chain could not be built.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidExtension">
      <summary>Specifies that the X509 chain is invalid due to an invalid extension.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidPolicyConstraints">
      <summary>Specifies that the X509 chain is invalid due to invalid policy constraints.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidBasicConstraints">
      <summary>Specifies that the X509 chain is invalid due to invalid basic constraints.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidNameConstraints">
      <summary>Specifies that the X509 chain is invalid due to invalid name constraints.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasNotSupportedNameConstraint">
      <summary>Specifies that the certificate does not have a supported name constant or has a name constant that is unsupported.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasNotDefinedNameConstraint">
      <summary>Specifies that the certificate has an undefined name constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasNotPermittedNameConstraint">
      <summary>Specifies that the certificate has an impermissible name constraint.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasExcludedNameConstraint">
      <summary>Specifies that the X509 chain is invalid because a certificate has excluded a name constraint.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.PartialChain">
      <summary>Specifies that the X509 chain could not be built up to the root certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.CtlNotTimeValid">
      <summary>Specifies that the certificate trust list (CTL) is not valid because of an invalid time value, such as one that indicates that the CTL has expired.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.CtlNotSignatureValid">
      <summary>Specifies that the certificate trust list (CTL) contains an invalid signature.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.CtlNotValidForUsage">
      <summary>Specifies that the certificate trust list (CTL) is not valid for this use.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.OfflineRevocation">
      <summary>Specifies that the online certificate revocation list (CRL) the X509 chain relies on is currently offline.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoIssuanceChainPolicy">
      <summary>Specifies that there is no certificate policy extension in the certificate. This error would occur if a group policy has specified that all certificates must have a certificate policy.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension">
      <summary>Defines the collection of object identifiers (OIDs) that indicates the applications that use the key. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object and a value that identifies whether the extension is critical.</summary>
      <param name="encodedEnhancedKeyUsages">The encoded data to use to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.OidCollection,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension" /> class using an <see cref="T:System.Security.Cryptography.OidCollection" /> and a value that identifies whether the extension is critical. </summary>
      <param name="enhancedKeyUsages">An <see cref="T:System.Security.Cryptography.OidCollection" /> collection. </param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The specified <see cref="T:System.Security.Cryptography.OidCollection" />  contains one or more corrupt values.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The encoded data to use to create the extension.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.EnhancedKeyUsages">
      <summary>Gets the collection of object identifiers (OIDs) that indicate the applications that use the key.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.OidCollection" /> object indicating the applications that use the key.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Extension">
      <summary>Represents an X509 extension.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
      <param name="encodedExtension">The encoded data to be used to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.#ctor(System.Security.Cryptography.Oid,System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
      <param name="oid">The object identifier used to identify the extension.</param>
      <param name="rawData">The encoded data used to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oid" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="oid" /> is an empty string ("").</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.#ctor(System.String,System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
      <param name="oid">A string representing the object identifier.</param>
      <param name="rawData">The encoded data used to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copies the extension properties of the specified <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asnEncodedData" /> does not have a valid X.509 extension.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Extension.Critical">
      <summary>Gets a Boolean value indicating whether the extension is critical.</summary>
      <returns>true if the extension is critical; otherwise, false.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection">
      <summary>Represents a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> class. </summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Add(System.Security.Cryptography.X509Certificates.X509Extension)">
      <summary>Adds an <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object to an <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</summary>
      <returns>The index at which the <paramref name="extension" /> parameter was added.</returns>
      <param name="extension">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" />  object to add to the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="extension" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Extension[],System.Int32)">
      <summary>Copies a collection into an array starting at the specified index.</summary>
      <param name="array">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects. </param>
      <param name="index">The location in the array at which copying starts. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> is a zero-length string or contains an invalid value. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> specifies a value that is not in the range of the array. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Count">
      <summary>Gets the number of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects in a <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</summary>
      <returns>An integer representing the number of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through an <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator" /> object to use to iterate through the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.IsSynchronized">
      <summary>Gets a value indicating whether the collection is guaranteed to be thread safe.</summary>
      <returns>true if the collection is thread safe; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object at the specified index.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object.</returns>
      <param name="index">The location of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object to retrieve. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is equal to or greater than the length of the array. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Item(System.String)">
      <summary>Gets the first <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object whose value or friendly name is specified by an object identifier (OID).</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object.</returns>
      <param name="oid">The object identifier (OID) of the extension to retrieve. </param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.SyncRoot">
      <summary>Gets an object that you can use to synchronize access to the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</summary>
      <returns>An object that you can use to synchronize access to the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection into an array starting at the specified index.</summary>
      <param name="array">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects. </param>
      <param name="index">The location in the array at which copying starts. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> is a zero-length string or contains an invalid value. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> specifies a value that is not in the range of the array. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can iterate through an <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object to use to iterate through the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator">
      <summary>Supports a simple iteration over a <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.Current">
      <summary>Gets the current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets an object from a collection.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509FindType">
      <summary>Specifies the type of value searched for by the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByThumbprint">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method must be a string representing the thumbprint of the certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method must be a string representing the subject name of the certificate. This is a less specific search than if you use the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectDistinguishedName" /> enumeration value. Using the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName" /> value, the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method performs a case-insensitive string compare using the supplied value. For example, if you pass "MyCert" to the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method, it will find all certificates with the subject name containing that string, regardless of other subject values. Searching by distinguished name is a more precise search.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectDistinguishedName">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method must be a string representing the subject distinguished name of the certificate. This is a more specific search than if you use the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName" /> enumeration value. Using the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectDistinguishedName" /> value, the Find method performs a case-insensitive string compare for the entire distinguished name. Searching by subject name is a less precise search.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerName">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method must be a string representing the issuer name of the certificate. This is a less specific search than if you use the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerDistinguishedName" /> enumeration value. Using the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerName" /> value, the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method performs a case-insensitive string compare using the supplied value. For example, if you pass "MyCA" to the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method, it will find all certificates with the issuer name containing that string, regardless of other issuer values.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerDistinguishedName">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method must be a string representing the issuer distinguished name of the certificate. This is a more specific search than if you use the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerName" /> enumeration value. Using the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerDistinguishedName" /> value, the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method performs a case-insensitive string compare for the entire distinguished name. Searching by issuer name is a less precise search.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySerialNumber">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string representing the serial number of the certificate as it is displayed by the UI. The serial number must be in reverse order since it is an integer.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeValid">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a <see cref="T:System.DateTime" /> value in local time, such as <see cref="P:System.DateTime.Now" />. Note that the union of certificates returned using <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeValid" />, <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeNotYetValid" /> and <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeExpired" /> should represent all certificates in the queried collection.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeNotYetValid">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a <see cref="T:System.DateTime" /> value in local time, such as <see cref="P:System.DateTime.Now" />. Note that the union of certificates returned using <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeValid" />, <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeNotYetValid" /> and <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeExpired" /> should represent all certificates in the queried collection.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeExpired">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a <see cref="T:System.DateTime" /> value in local time, such as <see cref="P:System.DateTime.Now" />. Note that the union of certificates returned using <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeValid" />, <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeNotYetValid" /> and <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeExpired" /> should represent all certificates in the queried collection.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTemplateName">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string representing the template name of the certificate, such as "ClientAuth." A template name is an X509 version 3 extension that specifies the uses of the certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByApplicationPolicy">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string representing either the application policy friendly name or the object identifier (<see cref="T:System.Security.Cryptography.Oid" />) of the certificate. For example, "Encrypting File System" or "1.3.6.1.4.1.311.10.3.4" can be used. Note that for an application that is going to be localized, the OID value must be used since the friendly name is localized.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByCertificatePolicy">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string representing either the friendly name or the object identifier (<see cref="T:System.Security.Cryptography.Oid" />) of the certificate policy. The best practice is to use the OID, such as "1.3.6.1.4.1.311.10.3.4". Note that for an application that is going to be localized, the OID must be used since the friendly name is localized.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByExtension">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string describing the extension to find. The object identifier (OID) is most commonly used to direct the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method to search for all certificates that have an extension matching that OID value.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByKeyUsage">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be either a string representing the key usage or an integer representing a bit mask containing all the requested key usages. For the string value, only one key usage at a time can be specified, but the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method can be used in a cascading sequence to get the intersection of the requested usages. For example, the <paramref name="findValue" /> parameter can be set to "KeyEncipherment" or an integer (0x30 indicates "KeyEncipherment" and "DataEncipherment"). Values of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" /> enumeration can also be used.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectKeyIdentifier">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string representing the subject key identifier in hexadecimal, such as "F3E815D45E83B8477B9284113C64EF208E897112," as displayed in the UI.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509IncludeOption">
      <summary>Specifies how much of the X.509 certificate chain should be included in the X.509 data.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.None">
      <summary>No X.509 chain information is included.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot">
      <summary>The entire X.509 chain is included except for the root certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.EndCertOnly">
      <summary>Only the end certificate is included in the X.509 chain information.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain">
      <summary>The entire X.509 chain is included.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension">
      <summary>Defines the usage of a key contained within an X.509 certificate.  This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object and a value that identifies whether the extension is critical. </summary>
      <param name="encodedKeyUsage">The encoded data to use to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor(System.Security.Cryptography.X509Certificates.X509KeyUsageFlags,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension" /> class using the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" /> value and a value that identifies whether the extension is critical. </summary>
      <param name="keyUsages">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" /> values that describes how to use the key.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object. </summary>
      <param name="asnEncodedData">The encoded data to use to create the extension.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages">
      <summary>Gets the key usage flag associated with the certificate.</summary>
      <returns>One of the <see cref="P:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages" /> values.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The extension cannot be decoded. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags">
      <summary>Defines how the certificate key can be used. If this value is not defined, the key can be used for any purpose.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.None">
      <summary>No key usage parameters.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.EncipherOnly">
      <summary>The key can be used for encryption only.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.CrlSign">
      <summary>The key can be used to sign a certificate revocation list (CRL).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.KeyCertSign">
      <summary>The key can be used to sign certificates.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.KeyAgreement">
      <summary>The key can be used to determine key agreement, such as a key created using the Diffie-Hellman key agreement algorithm.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.DataEncipherment">
      <summary>The key can be used for data encryption.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.KeyEncipherment">
      <summary>The key can be used for key encryption.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.NonRepudiation">
      <summary>The key can be used for authentication.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.DigitalSignature">
      <summary>The key can be used as a digital signature.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.DecipherOnly">
      <summary>The key can be used for decryption only.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509NameType">
      <summary>Specifies the type of name the X509 certificate contains.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.SimpleName">
      <summary>The simple name of a subject or issuer of an X509 certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.EmailName">
      <summary>The email address of the subject or issuer associated of an X509 certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.UpnName">
      <summary>The UPN name of the subject or issuer of an X509 certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.DnsName">
      <summary>The DNS name associated with the alternative name of either the subject or issuer of an X509 certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.DnsFromAlternativeName">
      <summary>The DNS name associated with the alternative name of either the subject or the issuer of an X.509 certificate.  This value is equivalent to the <see cref="F:System.Security.Cryptography.X509Certificates.X509NameType.DnsName" /> value.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.UrlName">
      <summary>The URL address associated with the alternative name of either the subject or issuer of an X509 certificate.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509RevocationFlag">
      <summary>Specifies which X509 certificates in the chain should be checked for revocation.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationFlag.EndCertificateOnly">
      <summary>Only the end certificate is checked for revocation.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationFlag.EntireChain">
      <summary>The entire chain of certificates is checked for revocation.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationFlag.ExcludeRoot">
      <summary>The entire chain, except the root certificate, is checked for revocation.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509RevocationMode">
      <summary>Specifies the mode used to check for X509 certificate revocation.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationMode.NoCheck">
      <summary>No revocation check is performed on the certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationMode.Online">
      <summary>A revocation check is made using an online certificate revocation list (CRL).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationMode.Offline">
      <summary>A revocation check is made using a cached certificate revocation list (CRL).</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Store">
      <summary>Represents an X.509 store, which is a physical store where certificates are persisted and managed. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using the personal certificates of the current user store.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using an Intptr handle to an HCERTSTORE store.</summary>
      <param name="storeHandle">A handle to an HCERTSTORE store.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="storeHandle" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="storeHandle" /> parameter points to an invalid context.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using the specified T:System.Security.Cryptography.X509Certificates.StoreLocation value.</summary>
      <param name="storeLocation">One of the enumeration values that specifies the location of the X.509 certificate store. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using the specified T:System.Security.Cryptography.X509Certificates.StoreName value.</summary>
      <param name="storeName">One of the enumeration values that specifies the name of the X.509 certificate store. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using the specified T:System.Security.Cryptography.X509Certificates.StoreName and T:System.Security.Cryptography.X509Certificates.StoreLocation values.</summary>
      <param name="storeName">One of the enumeration values that specifies the name of the X.509 certificate store. </param>
      <param name="storeLocation">One of the enumeration values that specifies the location of the X.509 certificate store. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="storeLocation" /> is not a valid location or <paramref name="storeName" /> is not a valid name. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using the specified store name.</summary>
      <param name="storeName">A string value that represents the store name. See <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />  for more information. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using a string that represents a value from the <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> enumeration and a value from the <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> enumeration.</summary>
      <param name="storeName">A string that represents a value from the <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> enumeration. </param>
      <param name="storeLocation">One of the enumeration values that specifies the location of the X.509 certificate store. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="storeLocation" /> contains invalid values. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Adds a certificate to an X.509 certificate store.</summary>
      <param name="certificate">The certificate to add. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate could not be added to the store.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Adds a collection of certificates to an X.509 certificate store.</summary>
      <param name="certificates">The collection of certificates to add. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Store.Certificates">
      <summary>Returns a collection of certificates located in an X.509 certificate store.</summary>
      <returns>A collection of certificates.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Close">
      <summary>Closes an X.509 certificate store.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Store.Location">
      <summary>Gets the location of the X.509 certificate store.</summary>
      <returns>The location of the certificate store.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Store.Name">
      <summary>Gets the name of the X.509 certificate store.</summary>
      <returns>The name of the certificate store.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)">
      <summary>Opens an X.509 certificate store or creates a new store, depending on <see cref="T:System.Security.Cryptography.X509Certificates.OpenFlags" /> flag settings.</summary>
      <param name="flags">A bitwise combination of enumeration values that specifies the way to open the X.509 certificate store. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The store is unreadable. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
      <exception cref="T:System.ArgumentException">The store contains invalid values.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Removes a certificate from an X.509 certificate store.</summary>
      <param name="certificate">The certificate to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Removes a range of certificates from an X.509 certificate store.</summary>
      <param name="certificates">A range of certificates to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Store.StoreHandle">
      <summary>Gets an <see cref="T:System.IntPtr" /> handle to an HCERTSTORE store.  </summary>
      <returns>A handle to an HCERTSTORE store.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The store is not open. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension">
      <summary>Defines a string that identifies a certificate's subject key identifier (SKI). This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class using a byte array and a value that identifies whether the extension is critical.</summary>
      <param name="subjectKeyIdentifier">A byte array that represents data to use to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class using encoded data and a value that identifies whether the extension is critical.</summary>
      <param name="encodedSubjectKeyIdentifier">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to use to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Security.Cryptography.X509Certificates.PublicKey,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class using a public key and a value indicating whether the extension is critical.</summary>
      <param name="key">A <see cref="T:System.Security.Cryptography.X509Certificates.PublicKey" />  object to create a subject key identifier (SKI) from. </param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Security.Cryptography.X509Certificates.PublicKey,System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class using a public key, a hash algorithm identifier, and a value indicating whether the extension is critical. </summary>
      <param name="key">A <see cref="T:System.Security.Cryptography.X509Certificates.PublicKey" /> object to create a subject key identifier (SKI) from.</param>
      <param name="algorithm">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm" /> values that identifies which hash algorithm to use.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class using a string and a value that identifies whether the extension is critical.</summary>
      <param name="subjectKeyIdentifier">A string, encoded in hexadecimal format, that represents the subject key identifier (SKI) for a certificate.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Creates a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class by copying information from encoded data.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to use to create the extension.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.SubjectKeyIdentifier">
      <summary>Gets a string that represents the subject key identifier (SKI) for a certificate.</summary>
      <returns>A string, encoded in hexadecimal format, that represents the subject key identifier (SKI).</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The extension cannot be decoded. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm">
      <summary>Defines the type of hash algorithm to use with the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm.Sha1">
      <summary>The SKI is composed of the 160-bit SHA-1 hash of the value of the public key (excluding the tag, length, and number of unused bits).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm.ShortSha1">
      <summary>The SKI is composed of a four-bit type field with the value 0100, followed by the least significant 60 bits of the SHA-1 hash of the value of the public key (excluding the tag, length, and number of unused bit string bits)</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm.CapiSha1">
      <summary>The subject key identifier (SKI) is composed of a 160-bit SHA-1 hash of the encoded public key (including the tag, length, and number of unused bits).</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509VerificationFlags">
      <summary>Specifies conditions under which verification of certificates in the X509 chain should be conducted.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.NoFlag">
      <summary>No flags pertaining to verification are included.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreNotTimeValid">
      <summary>Ignore certificates in the chain that are not valid either because they have expired or they are not yet in effect when determining certificate validity.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreCtlNotTimeValid">
      <summary>Ignore that the certificate trust list (CTL) is not valid, for reasons such as the CTL has expired, when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreNotTimeNested">
      <summary>Ignore that the CA (certificate authority) certificate and the issued certificate have validity periods that are not nested when verifying the certificate. For example, the CA cert can be valid from January 1 to December 1 and the issued certificate from January 2 to December 2, which would mean the validity periods are not nested.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreInvalidBasicConstraints">
      <summary>Ignore that the basic constraints are not valid when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.AllowUnknownCertificateAuthority">
      <summary>Ignore that the chain cannot be verified due to an unknown certificate authority (CA).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreWrongUsage">
      <summary>Ignore that the certificate was not issued for the current use when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreInvalidName">
      <summary>Ignore that the certificate has an invalid name when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreInvalidPolicy">
      <summary>Ignore that the certificate has invalid policy when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreEndRevocationUnknown">
      <summary>Ignore that the end certificate (the user certificate) revocation is unknown when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreCtlSignerRevocationUnknown">
      <summary>Ignore that the certificate trust list (CTL) signer revocation is unknown when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreCertificateAuthorityRevocationUnknown">
      <summary>Ignore that the certificate authority revocation is unknown when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreRootRevocationUnknown">
      <summary>Ignore that the root revocation is unknown when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.AllFlags">
      <summary>All flags pertaining to verification are included.</summary>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBase">
      <summary>Allows control of code access security permissions.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> class.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> class with the specified level of access to resources at creation.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />. </exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>Adds a permission entry to the permission.</summary>
      <param name="entry">The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> to add. </param>
      <exception cref="T:System.ArgumentNullException">The specified <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> property is not equal to the number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> property.-or- The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is already included in the permission. </exception>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Any">
      <summary>Specifies the character to be used to represent the any wildcard character.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Clear">
      <summary>Clears the permission of the added permission entries.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Copy">
      <summary>Creates and returns an identical copy of the current permission object.</summary>
      <returns>A copy of the current permission object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
      <param name="securityElement">The XML encoding to use to reconstruct the security object. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="securityElement" /> parameter is not a valid permission element.-or- The version number of the <paramref name="securityElement" /> parameter is not supported.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="securityElement" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries">
      <summary>Returns an array of the <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> objects added to this permission.</summary>
      <returns>An array of <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> objects that were added to this permission.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission object that is the intersection of the current permission object and a target permission object.</summary>
      <returns>A new permission object that represents the intersection of the current object and the specified target. This object is null if the intersection is empty.</returns>
      <param name="target">A permission object of the same type as the current permission object. </param>
      <exception cref="T:System.ArgumentException">The target permission object is not of the same type as the current permission object. </exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
      <summary>Determines whether the current permission object is a subset of the specified permission.</summary>
      <returns>true if the current permission object is a subset of the specified permission object; otherwise, false.</returns>
      <param name="target">A permission object that is to be tested for the subset relationship. </param>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted">
      <summary>Gets a value indicating whether the permission is unrestricted.</summary>
      <returns>true if permission is unrestricted; otherwise, false.</returns>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Local">
      <summary>Specifies the character to be used to represent a local reference.</summary>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType">
      <summary>Gets or sets an enumeration value that describes the types of access that you are giving the resource.</summary>
      <returns>An enumeration value that is derived from <see cref="T:System.Type" /> and describes the types of access that you are giving the resource.</returns>
      <exception cref="T:System.ArgumentNullException">The property value is null. </exception>
      <exception cref="T:System.ArgumentException">The property value is not an enumeration value. </exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>Removes a permission entry from the permission.</summary>
      <param name="entry">The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> to remove. </param>
      <exception cref="T:System.ArgumentNullException">The specified <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> property is not equal to the number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> property.-or- The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is not in the permission. </exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.TagNames">
      <summary>Gets or sets an array of strings that identify the resource you are protecting.</summary>
      <returns>An array of strings that identify the resource you are trying to protect.</returns>
      <exception cref="T:System.ArgumentNullException">The property value is null. </exception>
      <exception cref="T:System.ArgumentException">The length of the array is 0. </exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.ToXml">
      <summary>Creates and returns an XML encoding of the security object and its current state.</summary>
      <returns>An XML encoding of the security object, including any state information.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)">
      <summary>Creates a permission object that combines the current permission object and the target permission object.</summary>
      <returns>A new permission object that represents the union of the current permission object and the specified permission object.</returns>
      <param name="target">A permission object to combine with the current permission object. It must be of the same type as the current permission object. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="target" /> permission object is not of the same type as the current permission object. </exception>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBaseEntry">
      <summary>Defines the smallest unit of a code access security permission set.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> class.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> class with the specified permission access and permission access path.</summary>
      <param name="permissionAccess">The integer representation of the permission access level enumeration value. The <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess" /> property is set to this value. </param>
      <param name="permissionAccessPath">The array of strings that identify the resource you are protecting. The <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> property is set to this value. </param>
      <exception cref="T:System.ArgumentNullException">The specified <paramref name="permissionAccessPath" /> is null. </exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess">
      <summary>Gets an integer representation of the access level enumeration value.</summary>
      <returns>The access level enumeration value.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath">
      <summary>Gets an array of strings that identify the resource you are protecting.</summary>
      <returns>An array of strings that identify the resource you are protecting.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermission">
      <summary>Controls access to stores containing X.509 certificates. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StorePermission" /> class with either fully restricted or unrestricted permission state.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> is not a valid <see cref="T:System.Security.Permissions.PermissionState" /> value. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StorePermission" /> class with the specified access.</summary>
      <param name="flag">A bitwise combination of the <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> is not a valid combination of <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Copy">
      <summary>Creates and returns an identical copy of the current permission.</summary>
      <returns>A copy of the current permission.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Permissions.StorePermission.Flags">
      <summary>Gets or sets the type of <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> access allowed by the current permission.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values.</returns>
      <exception cref="T:System.ArgumentException">An attempt is made to set this property to an invalid value. See <see cref="T:System.Security.Permissions.StorePermissionFlags" /> for the valid values. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
      <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding to use to reconstruct the permission. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> is not a valid permission element.-or- The version number in <paramref name="securityElement" /> is not valid. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
      <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is null if the intersection is empty.</returns>
      <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> s not null and is not of the same type as the current permission. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determines whether the current permission is a subset of the specified permission.</summary>
      <returns>true if the current permission is a subset of the specified permission; otherwise, false.</returns>
      <param name="target">A permission to test for the subset relationship. This permission must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not null and is not of the same type as the current permission. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsUnrestricted">
      <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
      <returns>true if the current permission is unrestricted; otherwise, false.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.ToXml">
      <summary>Creates an XML encoding of the permission and its current state.</summary>
      <returns>A <see cref="T:System.Security.SecurityElement" /> that contains an XML encoding of the permission, including any state information.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)">
      <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
      <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not null and is not of the same type as the current permission. </exception>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionAttribute">
      <summary>Allows security actions for <see cref="T:System.Security.Permissions.StorePermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StorePermissionAttribute" /> class with the specified security action.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.AddToStore">
      <summary>Gets or sets a value indicating whether the code is permitted to add to a store.</summary>
      <returns>true if the ability to add to a store is allowed; otherwise, false.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission">
      <summary>Creates and returns a new <see cref="T:System.Security.Permissions.StorePermission" />.</summary>
      <returns>A <see cref="T:System.Security.Permissions.StorePermission" /> that corresponds to the attribute.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.CreateStore">
      <summary>Gets or sets a value indicating whether the code is permitted to create a store.</summary>
      <returns>true if the ability to create a store is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.DeleteStore">
      <summary>Gets or sets a value indicating whether the code is permitted to delete a store.</summary>
      <returns>true if the ability to delete a store is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates">
      <summary>Gets or sets a value indicating whether the code is permitted to enumerate the certificates in a store.</summary>
      <returns>true if the ability to enumerate certificates is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores">
      <summary>Gets or sets a value indicating whether the code is permitted to enumerate stores.</summary>
      <returns>true if the ability to enumerate stores is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.Flags">
      <summary>Gets or sets the store permissions.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values. The default is <see cref="F:System.Security.Permissions.StorePermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.OpenStore">
      <summary>Gets or sets a value indicating whether the code is permitted to open a store.</summary>
      <returns>true if the ability to open a store is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore">
      <summary>Gets or sets a value indicating whether the code is permitted to remove a certificate from a store.</summary>
      <returns>true if the ability to remove a certificate from a store is allowed; otherwise, false.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionFlags">
      <summary>Specifies the permitted access to X.509 certificate stores.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.NoFlags">
      <summary>Permission is not given to perform any certificate or store operations.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.CreateStore">
      <summary>The ability to create a new store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.DeleteStore">
      <summary>The ability to delete a store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateStores">
      <summary>The ability to enumerate the stores on a computer.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.OpenStore">
      <summary>The ability to open a store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AddToStore">
      <summary>The ability to add a certificate to a store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.RemoveFromStore">
      <summary>The ability to remove a certificate from a store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateCertificates">
      <summary>The ability to enumerate the certificates in a store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AllFlags">
      <summary>The ability to perform all certificate and store operations.</summary>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermission">
      <summary>Defines partial-trust access to the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> class. </summary>
      <param name="state">The <see cref="T:System.Security.Permissions.PermissionState" /> to request. Only <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />  and <see cref="F:System.Security.Permissions.PermissionState.None" /> are valid.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> is not a valid permission state. Only <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />  and <see cref="F:System.Security.Permissions.PermissionState.None" /> are valid. </exception>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> class with the specified permission flags. </summary>
      <param name="flag">The permission flags to request.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Copy">
      <returns>A copy of the current permission object.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermission.Flags">
      <summary>Gets or sets the <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the type descriptor. </summary>
      <returns>The <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the type descriptor.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)">
      <param name="securityElement">The XML encoding to use to reconstruct the security object.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)">
      <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is null if the intersection is empty.</returns>
      <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)">
      <returns>true if the current permission is a subset of the specified permission; otherwise, false.</returns>
      <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted">
      <summary>Gets a value that indicates whether the type descriptor may be called from partially trusted code. </summary>
      <returns>true if the <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> property is set to <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" />; otherwise, false. </returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.ToXml">
      <returns>An XML encoding of the security object, including any state information.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)">
      <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionAttribute">
      <summary>Determines the permission flags that apply to a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />. </summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission">
      <returns>A serializable permission object.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags">
      <summary>Gets or sets the <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the <see cref="T:System.ComponentModel.TypeDescriptor" />. </summary>
      <returns>The <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the <see cref="T:System.ComponentModel.TypeDescriptor" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess">
      <summary>Gets or sets a value that indicates whether the type descriptor can be accessed from partial trust. </summary>
      <returns>true if the type descriptor can be accessed from partial trust; otherwise, false. </returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionFlags">
      <summary>Defines permission settings for type descriptors. </summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.NoFlags">
      <summary>No permission flags are set on the type descriptor.</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess">
      <summary>The type descriptor may be called from partially trusted code.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary>Represents the results from a single successful subexpression capture. </summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary>The position in the original string where the first character of the captured substring was found.</summary>
      <returns>The zero-based starting position in the original string where the captured substring was found.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary>The length of the captured substring.</summary>
      <returns>The length of the captured substring.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary>Gets the captured substring from the input string.</summary>
      <returns>The actual substring that was captured by the match.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary>Gets the captured substring from the input string.</summary>
      <returns>The actual substring that was captured by the match.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary>Represents the set of captures made by a single capturing group. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the collection to the given array beginning at the given index.</summary>
      <param name="array">The array the collection is to be copied into. </param>
      <param name="arrayIndex">The position in the destination array where copying is to begin. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array " />is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />. -or-<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> is outside the bounds of <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary>Gets the number of substrings captured by the group.</summary>
      <returns>The number of items in the <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary>Provides an enumerator that iterates through the collection.</summary>
      <returns>An object that contains all <see cref="T:System.Text.RegularExpressions.Capture" /> objects within the <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read only.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary>Gets an individual member of the collection.</summary>
      <returns>The captured substring at position <paramref name="i" /> in the collection.</returns>
      <param name="i">Index into the capture collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> is less than 0 or greater than <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary>Represents the results from a single capturing group. </summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary>Gets a collection of all the captures matched by the capturing group, in innermost-leftmost-first order (or innermost-rightmost-first order if the regular expression is modified with the <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> option). The collection may have zero or more items.</summary>
      <returns>The collection of substrings matched by the group.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary>Gets a value indicating whether the match is successful.</summary>
      <returns>true if the match is successful; otherwise, false.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary>Returns a Group object equivalent to the one supplied that is safe to share between multiple threads.</summary>
      <returns>A regular expression Group object. </returns>
      <param name="inner">The input <see cref="T:System.Text.RegularExpressions.Group" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inner" /> is null.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary>Returns the set of captured groups in a single match.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the collection to the given array beginning at the given index.</summary>
      <param name="array">The array the collection is to be copied into. </param>
      <param name="arrayIndex">The position in the destination array where the copying is to begin. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />.-or-<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> is outside the bounds of <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary>Returns the number of groups in the collection.</summary>
      <returns>The number of groups in the collection.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary>Provides an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that contains all <see cref="T:System.Text.RegularExpressions.Group" /> objects in the <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read-only.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Text.RegularExpressions.GroupCollection" /> is synchronized (thread-safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary>Enables access to a member of the collection by integer index.</summary>
      <returns>The member of the collection specified by <paramref name="groupnum" />.</returns>
      <param name="groupnum">The zero-based index of the collection member to be retrieved. </param>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary>Enables access to a member of the collection by string index.</summary>
      <returns>The member of the collection specified by <paramref name="groupname" />.</returns>
      <param name="groupname">The name of a capturing group. </param>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns>A copy of the <see cref="T:System.Text.RegularExpressions.Match" /> object to synchronize.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary>Represents the results from a single regular expression match.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary>Gets the empty group. All failed matches return this empty match.</summary>
      <returns>An empty <see cref="T:System.Text.RegularExpressions.Match" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary>Gets a collection of groups matched by the regular expression.</summary>
      <returns>The character groups matched by the pattern.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary>Returns a new <see cref="T:System.Text.RegularExpressions.Match" /> with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).</summary>
      <returns>The next regular expression match.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary>Returns the expansion of the specified replacement pattern. </summary>
      <returns>The expanded version of the <paramref name="replacement" /> parameter.</returns>
      <param name="replacement">The replacement pattern to use. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="replacement" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">Expansion is not allowed for this pattern.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary>Returns a <see cref="T:System.Text.RegularExpressions.Match" /> instance equivalent to the one supplied that is suitable to share between multiple threads.</summary>
      <returns>A regular expression match that is suitable to share between multiple threads. </returns>
      <param name="inner">A regular expression match equivalent to the one expected. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inner" /> is null.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary>Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the collection to the given array starting at the given index.</summary>
      <param name="array">The array the collection is to be copied into. </param>
      <param name="arrayIndex">The position in the array where copying is to begin. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is a multi-dimensional array.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />.-or-<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> is outside the bounds of <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary>Gets the number of matches.</summary>
      <returns>The number of matches.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary>Provides an enumerator that iterates through the collection.</summary>
      <returns>An object that contains all <see cref="T:System.Text.RegularExpressions.Match" /> objects within the <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read only.</summary>
      <returns>true in all cases. </returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread-safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary>Gets an individual member of the collection.</summary>
      <returns>The captured substring at position <paramref name="i" /> in the collection.</returns>
      <param name="i">Index into the <see cref="T:System.Text.RegularExpressions.Match" /> collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> is less than 0 or greater than or equal to <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection. This property always returns the object itself.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary>Represents the method that is called each time a regular expression match is found during a <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" /> method operation.</summary>
      <returns>A string returned by the method that is represented by the <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</returns>
      <param name="match">The <see cref="T:System.Text.RegularExpressions.Match" /> object that represents a single regular expression match during a <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" /> method operation. </param>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary>Represents an immutable regular expression.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class by using serialized data.</summary>
      <param name="info">The object that contains a serialized pattern and <see cref="T:System.Text.RegularExpressions.RegexOptions" />  information.</param>
      <param name="context">The destination for this serialization. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">The pattern that <paramref name="info" /> contains is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="info" /> contains an invalid <see cref="T:System.Text.RegularExpressions.RegexOptions" />  flag.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary>Initializes and compiles a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression.</summary>
      <param name="pattern">The regular expression pattern to match. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> is null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Initializes and compiles a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression, with options that modify the pattern.</summary>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="options">A bitwise combination of the enumeration values that modify the regular expression. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> contains an invalid flag.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary>Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.</summary>
      <returns>The maximum number of entries in the static cache.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than zero.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary>Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects to a named assembly.</summary>
      <param name="regexinfos">An array that describes the regular expressions to compile. </param>
      <param name="assemblyname">The file name of the assembly. </param>
      <exception cref="T:System.ArgumentException">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.-or-The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> or <paramref name="regexinfos" /> is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary>Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects to a named assembly with the specified attributes.</summary>
      <param name="regexinfos">An array that describes the regular expressions to compile. </param>
      <param name="assemblyname">The file name of the assembly. </param>
      <param name="attributes">An array that defines the attributes to apply to the assembly. </param>
      <exception cref="T:System.ArgumentException">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.-or-The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> or <paramref name="regexinfos" /> is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary>Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects and a specified resource file to a named assembly with the specified attributes.</summary>
      <param name="regexinfos">An array that describes the regular expressions to compile. </param>
      <param name="assemblyname">The file name of the assembly. </param>
      <param name="attributes">An array that defines the attributes to apply to the assembly. </param>
      <param name="resourceFile">The name of the Win32 resource file to include in the assembly. </param>
      <exception cref="T:System.ArgumentException">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.-or-The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> or <paramref name="regexinfos" /> is null. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The <paramref name="resourceFile" /> parameter designates an invalid Win32 resource file.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file designated by the <paramref name="resourceFile" /> parameter cannot be found.  </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary>Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $,., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.</summary>
      <returns>A string of characters with metacharacters converted to their escaped form.</returns>
      <param name="str">The input string that contains the text to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> is null.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary>Returns an array of capturing group names for the regular expression.</summary>
      <returns>A string array of group names.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary>Returns an array of capturing group numbers that correspond to group names in an array.</summary>
      <returns>An integer array of group numbers.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary>Gets the group name that corresponds to the specified group number.</summary>
      <returns>A string that contains the group name associated with the specified group number. If there is no group name that corresponds to <paramref name="i" />, the method returns <see cref="F:System.String.Empty" />.</returns>
      <param name="i">The group number to convert to the corresponding group name. </param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary>Returns the group number that corresponds to the specified group name.</summary>
      <returns>The group number that corresponds to the specified group name.</returns>
      <param name="name">The group name to convert to the corresponding group number. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
      <exception cref="T:System.NotSupportedException">References have already been initialized. </exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary>Indicates whether the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor finds a match in a specified input string.</summary>
      <returns>true if the regular expression finds a match; otherwise, false.</returns>
      <param name="input">The string to search for a match. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary>Indicates whether the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor finds a match in the specified input string, beginning at the specified starting position in the string.</summary>
      <returns>true if the regular expression finds a match; otherwise, false.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="startat">The character position at which to start the search. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary>Indicates whether the specified regular expression finds a match in the specified input string.</summary>
      <returns>true if the regular expression finds a match; otherwise, false.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.</summary>
      <returns>true if the regular expression finds a match; otherwise, false.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="options">A bitwise combination of the enumeration values that provide options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" />  value.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary>Searches the specified input string for the first occurrence of the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</summary>
      <returns>An object that contains information about the match.</returns>
      <param name="input">The string to search for a match. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary>Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.</summary>
      <returns>An object that contains information about the match.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="startat">The zero-based character position at which to start the search. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary>Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.</summary>
      <returns>An object that contains information about the match.</returns>
      <param name="input">The string to be tested for a match. </param>
      <param name="beginning">The zero-based character position in the input string at which to begin the search. </param>
      <param name="length">The number of characters in the substring to include in the search. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="beginning" /> is less than zero or greater than the length of <paramref name="input" />.-or-<paramref name="length" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary>Searches the specified input string for the first occurrence of the specified regular expression.</summary>
      <returns>An object that contains information about the match.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.</summary>
      <returns>An object that contains information about the match.</returns>
      <param name="input">The string to be tested for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="options">A bitwise combination of the enumeration values that provide options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary>Searches the specified input string for all occurrences of a regular expression.</summary>
      <returns>A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</returns>
      <param name="input">The string to search for a match. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary>Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.</summary>
      <returns>A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="startat">The character position in the input string at which to start the search. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary>Searches the specified input string for all occurrences of a specified regular expression.</summary>
      <returns>A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.</summary>
      <returns>The collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="options">A bitwise combination of the enumeration values that specify options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary>Returns the options passed into the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</summary>
      <returns>The <paramref name="options" /> parameter that was passed into the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary>Within a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="replacement">The replacement string. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="replacement" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary>Within a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="replacement">The replacement string. </param>
      <param name="count">The maximum number of times the replacement can occur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="replacement" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>Within a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="replacement">The replacement string. </param>
      <param name="count">Maximum number of times the replacement can occur. </param>
      <param name="startat">The character position in the input string where the search begins. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="replacement" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary>Within a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="replacement">The replacement string. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Within a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="replacement">The replacement string. </param>
      <param name="options">A bitwise combination of the enumeration values that provide options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>Within a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary>Within a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate. Specified options modify the matching operation.</summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string. </param>
      <param name="options">A bitwise combination of the enumeration values that provide options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>Within a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="evaluator" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary>Within a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
      <param name="count">The maximum number of times the replacement will occur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="evaluator" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary>Within a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
      <param name="count">The maximum number of times the replacement will occur. </param>
      <param name="startat">The character position in the input string where the search begins. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="evaluator" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary>Gets a value indicating whether the regular expression searches from right to left.</summary>
      <returns>true if the regular expression searches from right to left; otherwise false.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary>Splits the specified input string at the positions defined by a regular expression pattern specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</summary>
      <returns>An array of strings.</returns>
      <param name="input">The string to split. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary>Splits the specified input string a specified maximum number of times at the positions defined by a regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</summary>
      <returns>An array of strings.</returns>
      <param name="input">The string to be split. </param>
      <param name="count">The maximum number of times the split can occur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary>Splits the specified input string a specified maximum number of times at the positions defined by a regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor. The search for the regular expression pattern starts at a specified character position in the input string.</summary>
      <returns>An array of strings.</returns>
      <param name="input">The string to be split. </param>
      <param name="count">The maximum number of times the split can occur. </param>
      <param name="startat">The character position in the input string where the search will begin. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary>Splits the input string at the positions defined by a regular expression pattern.</summary>
      <returns>An array of strings.</returns>
      <param name="input">The string to split. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Splits the input string at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.</summary>
      <returns>An array of strings.</returns>
      <param name="input">The string to split. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="options">A bitwise combination of the enumeration values that provide options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data necessary to deserialize the current <see cref="T:System.Text.RegularExpressions.Regex" /> object.</summary>
      <param name="si">The object to populate with serialization information.</param>
      <param name="context">The place to store and retrieve serialized data. Reserved for future use.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary>Returns the regular expression pattern that was passed into the Regex constructor.</summary>
      <returns>The <paramref name="pattern" /> parameter that was passed into the Regex constructor.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary>Converts any escaped characters in the input string.</summary>
      <returns>A string of characters with any escaped characters converted to their unescaped form.</returns>
      <param name="str">The input string containing the text to convert. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> includes an unrecognized escape sequence.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> is null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</summary>
      <returns>true if the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property contains the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option; otherwise, false.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</summary>
      <returns>true if the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property contains the <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> option; otherwise, false.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary>Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression to be included in an assembly. </summary>
      <param name="pattern">The regular expression to compile. </param>
      <param name="options">The regular expression options to use when compiling the regular expression. </param>
      <param name="name">The name of the type that represents the compiled regular expression. </param>
      <param name="fullnamespace">The namespace to which the new type belongs. </param>
      <param name="ispublic">true to make the compiled regular expression publicly visible; otherwise, false. </param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary>Gets or sets a value that indicates whether the compiled regular expression has public visibility.</summary>
      <returns>true if the regular expression has public visibility; otherwise, false.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary>Gets or sets the name of the type that represents the compiled regular expression.</summary>
      <returns>The name of the new type.</returns>
      <exception cref="T:System.ArgumentNullException">The value for this property is null.</exception>
      <exception cref="T:System.ArgumentException">The value for this property is an empty string.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary>Gets or sets the namespace to which the new type belongs.</summary>
      <returns>The namespace of the new type.</returns>
      <exception cref="T:System.ArgumentNullException">The value for this property is null.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary>Gets or sets the options to use when compiling the regular expression.</summary>
      <returns>A bitwise combination of the enumeration values.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary>Gets or sets the regular expression to compile.</summary>
      <returns>The regular expression to compile.</returns>
      <exception cref="T:System.ArgumentNullException">The value for this property is null.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary>Provides enumerated values to use to set regular expression options.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary>Specifies that no options are set.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary>Specifies case-insensitive matching.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary>Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary>Specifies that the only valid captures are explicitly named or numbered groups of the form (?&lt;name&gt;…). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:…).</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary>Specifies that the regular expression is compiled to an assembly. This yields faster execution but increases startup time. This value should not be assigned to the <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> property when calling the <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary>Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n).</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary>Eliminates unescaped white space from the pattern and enables comments marked with #. However, the <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace" /> value does not affect or eliminate white space in character classes. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary>Specifies that the search will be from right to left instead of from left to right.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary>Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" />, and <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> values. The use of this value with any other values results in an exception.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary>Specifies that cultural differences in language is ignored. See Performing Culture-Insensitive Operations in the RegularExpressions Namespace for more information.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary>The <see cref="T:System.Text.RegularExpressions.RegexRunner" /> class is the base class for compiled regular expressions.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexRunner" /> class. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. Determines whether a character is in a character class.</summary>
      <returns>true if the <paramref name="ch" /> parameter is in the character class specified by the <paramref name="charClass" /> parameter.</returns>
      <param name="ch">A character to test.</param>
      <param name="charClass">The internal name of a character class.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary>Creates a <see cref="T:System.Text.RegularExpressions.RegexRunner" /> class for a compiled regular expression.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" /> class. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary>When overridden in a derived class, creates a <see cref="T:System.Text.RegularExpressions.RegexRunner" /> object for a specific compiled regular expression.</summary>
      <returns>A <see cref="T:System.Text.RegularExpressions.RegexRunner" /> object designed to execute a specific compiled regular expression. </returns>
    </member>
    <member name="T:System.Threading.Barrier">
      <summary>Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.</summary>
    </member>
    <member name="M:System.Threading.Barrier.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</summary>
      <param name="participantCount">The number of participating threads.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> is less than 0 or greater than 32,767.</exception>
    </member>
    <member name="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</summary>
      <param name="participantCount">The number of participating threads.</param>
      <param name="postPhaseAction">The <see cref="T:System.Action`1" /> to be executed after each phase.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> is less than 0 or greater than 32,767.</exception>
    </member>
    <member name="M:System.Threading.Barrier.AddParticipant">
      <summary>Notifies the <see cref="T:System.Threading.Barrier" /> that there will be an additional participant.</summary>
      <returns>The phase number of the barrier in which the new participants will first participate.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">Adding a participant would cause the barrier's participant count to exceed 32,767.-or-The method was invoked from within a post-phase action.</exception>
    </member>
    <member name="M:System.Threading.Barrier.AddParticipants(System.Int32)">
      <summary>Notifies the <see cref="T:System.Threading.Barrier" /> that there will be additional participants.</summary>
      <returns>The phase number of the barrier in which the new participants will first participate.</returns>
      <param name="participantCount">The number of additional participants to add to the barrier.</param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> is less than 0.-or-Adding <paramref name="participantCount" /> participants would cause the barrier's participant count to exceed 32,767.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action.</exception>
    </member>
    <member name="P:System.Threading.Barrier.CurrentPhaseNumber">
      <summary>Gets the number of the barrier's current phase.</summary>
      <returns>Returns the number of the barrier's current phase.</returns>
    </member>
    <member name="M:System.Threading.Barrier.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</summary>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action.</exception>
    </member>
    <member name="M:System.Threading.Barrier.Dispose(System.Boolean)">
      <summary>When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Threading.Barrier" />, and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Threading.Barrier.ParticipantCount">
      <summary>Gets the total number of participants in the barrier.</summary>
      <returns>Returns the total number of participants in the barrier.</returns>
    </member>
    <member name="P:System.Threading.Barrier.ParticipantsRemaining">
      <summary>Gets the number of participants in the barrier that haven’t yet signaled in the current phase.</summary>
      <returns>Returns the number of participants in the barrier that haven’t yet signaled in the current phase.</returns>
    </member>
    <member name="M:System.Threading.Barrier.RemoveParticipant">
      <summary>Notifies the <see cref="T:System.Threading.Barrier" /> that there will be one less participant.</summary>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The barrier already has 0 participants.-or-The method was invoked from within a post-phase action.</exception>
    </member>
    <member name="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
      <summary>Notifies the <see cref="T:System.Threading.Barrier" /> that there will be fewer participants.</summary>
      <param name="participantCount">The number of additional participants to remove from the barrier.</param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> is less than 0.</exception>
      <exception cref="T:System.InvalidOperationException">The barrier already has 0 participants.-or-The method was invoked from within a post-phase action.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait">
      <summary>Signals that a participant has reached the <see cref="T:System.Threading.Barrier" /> and waits for all other participants to reach the barrier as well.</summary>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
      <summary>Signals that a participant has reached the <see cref="T:System.Threading.Barrier" /> and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the time interval.</summary>
      <returns>true if all other participants reached the barrier; otherwise, false.</returns>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
      <summary>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</summary>
      <returns>true if all other participants reached the barrier; otherwise, false.</returns>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to observe.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> has been canceled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
      <summary>Signals that a participant has reached the <see cref="T:System.Threading.Barrier" /> and waits for all other participants to reach the barrier, while observing a <see cref="T:System.Threading.CancellationToken" />.</summary>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to observe.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> has been canceled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
      <summary>Signals that a participant has reached the <see cref="T:System.Threading.Barrier" /> and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> to measure the time interval.</summary>
      <returns>true if all other participants reached the barrier; otherwise, false.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
      <summary>Signals that a participant has reached the <see cref="T:System.Threading.Barrier" /> and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</summary>
      <returns>true if all other participants reached the barrier; otherwise, false.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to observe.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> has been canceled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />is a negative number other than -1 milliseconds, which represents an infinite time-out.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="T:System.Threading.BarrierPostPhaseException">
      <summary>Represents an exception that can be thrown after a <see cref="T:System.Threading.Barrier" /> phase has completed.</summary>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.BarrierPostPhaseException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.BarrierPostPhaseException" /> class with the specified inner exception.</summary>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.BarrierPostPhaseException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.BarrierPostPhaseException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.BarrierPostPhaseException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Threading.Semaphore">
      <summary>Limits the number of threads that can access a resource or pool of resources concurrently. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the maximum number of concurrent entries and optionally reserving some entries.</summary>
      <param name="initialCount">The initial number of requests for the semaphore that can be granted concurrently.</param>
      <param name="maximumCount">The maximum number of requests for the semaphore that can be granted concurrently.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumCount" /> is less than 1.-or-<paramref name="initialCount" /> is less than 0.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the maximum number of concurrent entries, optionally reserving some entries for the calling thread, and optionally specifying the name of a system semaphore object.</summary>
      <param name="initialCount">The initial number of requests for the semaphore that can be granted concurrently. </param>
      <param name="maximumCount">The maximum number of requests for the semaphore that can be granted concurrently.</param>
      <param name="name">The name of a named system semaphore object.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.-or-<paramref name="name" /> is longer than 260 characters.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumCount" /> is less than 1.-or-<paramref name="initialCount" /> is less than 0.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the maximum number of concurrent entries, optionally reserving some entries for the calling thread, optionally specifying the name of a system semaphore object, and specifying a variable that receives a value indicating whether a new system semaphore was created.</summary>
      <param name="initialCount">The initial number of requests for the semaphore that can be satisfied concurrently. </param>
      <param name="maximumCount">The maximum number of requests for the semaphore that can be satisfied concurrently.</param>
      <param name="name">The name of a named system semaphore object.</param>
      <param name="createdNew">When this method returns, contains true if a local semaphore was created (that is, if <paramref name="name" /> is null or an empty string) or if the specified named system semaphore was created; false if the specified named system semaphore already existed. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />. -or-<paramref name="name" /> is longer than 260 characters.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumCount" /> is less than 1.-or-<paramref name="initialCount" /> is less than 0.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the maximum number of concurrent entries, optionally reserving some entries for the calling thread, optionally specifying the name of a system semaphore object, specifying a variable that receives a value indicating whether a new system semaphore was created, and specifying security access control for the system semaphore.</summary>
      <param name="initialCount">The initial number of requests for the semaphore that can be satisfied concurrently. </param>
      <param name="maximumCount">The maximum number of requests for the semaphore that can be satisfied concurrently.</param>
      <param name="name">The name of a named system semaphore object.</param>
      <param name="createdNew">When this method returns, contains true if a local semaphore was created (that is, if <paramref name="name" /> is null or an empty string) or if the specified named system semaphore was created; false if the specified named system semaphore already existed. This parameter is passed uninitialized.</param>
      <param name="semaphoreSecurity">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />  object that represents the access control security to be applied to the named system semaphore.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.-or-<paramref name="name" /> is longer than 260 characters.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumCount" /> is less than 1.-or-<paramref name="initialCount" /> is less than 0.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.GetAccessControl">
      <summary>Gets the access control security for a named system semaphore.</summary>
      <returns>A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security for the named system semaphore.</returns>
      <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.-or-The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore and was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</exception>
      <exception cref="T:System.NotSupportedException">Not supported for Windows 98 or Windows Millennium Edition.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Semaphore.OpenExisting(System.String)">
      <summary>Opens an existing named semaphore.</summary>
      <returns>A <see cref="T:System.Threading.Semaphore" /> object that represents a named system semaphore.</returns>
      <param name="name">The name of a named system semaphore.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.-or-<paramref name="name" /> is longer than 260 characters.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">The named semaphore does not exist.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The named semaphore exists, but the user does not have the security access required to use it.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)">
      <summary>Opens an existing named semaphore, specifying the desired security access rights.</summary>
      <returns>A <see cref="T:System.Threading.Semaphore" /> object that represents the named system semaphore.</returns>
      <param name="name">The name of a system semaphore.</param>
      <param name="rights">A bitwise combination of the <see cref="T:System.Security.AccessControl.SemaphoreRights" />  values that represent the desired security access rights.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.-or-<paramref name="name" /> is longer than 260 characters.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">The named semaphore does not exist.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The named semaphore exists, but the user does not have the desired security access rights.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Semaphore.Release">
      <summary>Exits the semaphore and returns the previous count.</summary>
      <returns>The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called. </returns>
      <exception cref="T:System.Threading.SemaphoreFullException">The semaphore count is already at the maximum value.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred with a named semaphore.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.-or-The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Semaphore.Release(System.Int32)">
      <summary>Exits the semaphore a specified number of times and returns the previous count.</summary>
      <returns>The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called. </returns>
      <param name="releaseCount">The number of times to exit the semaphore.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="releaseCount" /> is less than 1.</exception>
      <exception cref="T:System.Threading.SemaphoreFullException">The semaphore count is already at the maximum value.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred with a named semaphore.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.-or-The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)">
      <summary>Sets the access control security for a named system semaphore.</summary>
      <param name="semaphoreSecurity">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />  object that represents the access control security to be applied to the named system semaphore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="semaphoreSecurity" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.-or-The semaphore was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</exception>
      <exception cref="T:System.NotSupportedException">The current <see cref="T:System.Threading.Semaphore" /> object does not represent a named system semaphore.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.Application.ThreadException" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.ThreadExceptionEventArgs" /> class.</summary>
      <param name="t">The <see cref="T:System.Exception" /> that occurred. </param>
    </member>
    <member name="P:System.Threading.ThreadExceptionEventArgs.Exception">
      <summary>Gets the <see cref="T:System.Exception" /> that occurred.</summary>
      <returns>The <see cref="T:System.Exception" /> that occurred.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.Application.ThreadException" /> event of an <see cref="T:System.Windows.Forms.Application" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Threading.ThreadExceptionEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Timers.ElapsedEventArgs">
      <summary>Provides data for the <see cref="E:System.Timers.Timer.Elapsed" /> event.</summary>
    </member>
    <member name="P:System.Timers.ElapsedEventArgs.SignalTime">
      <summary>Gets the time the <see cref="E:System.Timers.Timer.Elapsed" /> event was raised.</summary>
      <returns>The time the <see cref="E:System.Timers.Timer.Elapsed" /> event was raised.</returns>
    </member>
    <member name="T:System.Timers.ElapsedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Timers.Timer.Elapsed" /> event of a <see cref="T:System.Timers.Timer" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.Timers.ElapsedEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:System.Timers.Timer">
      <summary>Generates recurring events in an application.</summary>
    </member>
    <member name="M:System.Timers.Timer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets all the properties to their initial values.</summary>
    </member>
    <member name="M:System.Timers.Timer.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets the <see cref="P:System.Timers.Timer.Interval" /> property to the specified number of milliseconds.</summary>
      <param name="interval">The time, in milliseconds, between events. The value must be greater than zero and less than or equal to <see cref="F:System.Int32.MaxValue" />.</param>
      <exception cref="T:System.ArgumentException">The value of the <paramref name="interval" /> parameter is less than or equal to zero, or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
    </member>
    <member name="P:System.Timers.Timer.AutoReset">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event each time the specified interval elapses or only after the first time it elapses.</summary>
      <returns>true if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event each time the interval elapses; false if it should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once, after the first time the interval elapses. The default is true.</returns>
    </member>
    <member name="M:System.Timers.Timer.BeginInit">
      <summary>Begins the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</summary>
    </member>
    <member name="M:System.Timers.Timer.Close">
      <summary>Releases the resources used by the <see cref="T:System.Timers.Timer" />.</summary>
    </member>
    <member name="M:System.Timers.Timer.Dispose(System.Boolean)">
      <summary>Releases all resources used by the current <see cref="T:System.Timers.Timer" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="E:System.Timers.Timer.Elapsed">
      <summary>Occurs when the interval elapses.</summary>
    </member>
    <member name="P:System.Timers.Timer.Enabled">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</summary>
      <returns>true if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event; otherwise, false. The default is false.</returns>
      <exception cref="T:System.ObjectDisposedException">This property cannot be set because the timer has been disposed.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Timers.Timer.Interval" /> property was set to a value greater than <see cref="F:System.Int32.MaxValue" /> before the timer was enabled. </exception>
    </member>
    <member name="M:System.Timers.Timer.EndInit">
      <summary>Ends the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Timers.Timer.Interval">
      <summary>Gets or sets the interval at which to raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</summary>
      <returns>The time, in milliseconds, between <see cref="E:System.Timers.Timer.Elapsed" /> events. The value must be greater than zero and less than or equal to <see cref="F:System.Int32.MaxValue" />. The default is 100 milliseconds.</returns>
      <exception cref="T:System.ArgumentException">The interval is less than or equal to zero.-or-The interval is greater than <see cref="F:System.Int32.MaxValue" />, and the timer is currently enabled. (If the timer is not currently enabled, no exception is thrown until it is enabled.) </exception>
    </member>
    <member name="P:System.Timers.Timer.Site">
      <summary>Gets or sets the site that binds the <see cref="T:System.Timers.Timer" /> to its container in design mode.</summary>
      <returns>An <see cref="T:System.ComponentModel.ISite" /> interface representing the site that binds the <see cref="T:System.Timers.Timer" /> object to its container.</returns>
    </member>
    <member name="M:System.Timers.Timer.Start">
      <summary>Starts raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to true.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="T:System.Timers.Timer" /> is created with an interval equal to or greater than <see cref="F:System.Int32.MaxValue" /> + 1, or set to an interval less than zero.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Timers.Timer.Stop">
      <summary>Stops raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to false.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Timers.Timer.SynchronizingObject">
      <summary>Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</summary>
      <returns>The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed. The default is null.</returns>
    </member>
    <member name="T:System.Timers.TimersDescriptionAttribute">
      <summary>Sets the description that visual designers can display when referencing an event, extender, or property.</summary>
    </member>
    <member name="M:System.Timers.TimersDescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Timers.TimersDescriptionAttribute" /> class.</summary>
      <param name="description">The description to use. </param>
    </member>
    <member name="P:System.Timers.TimersDescriptionAttribute.Description">
      <summary>Gets the description that visual designers can display when referencing an event, extender, or property.</summary>
      <returns>The description for the event, extender, or property.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermission">
      <summary>Controls access permissions in ASP.NET hosted environments. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.AspNetHostingPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" /> enumeration value.</summary>
      <param name="state">A <see cref="T:System.Security.Permissions.PermissionState" /> enumeration value. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> is not set to one of the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration values.</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.AspNetHostingPermission" /> class with the specified permission level.</summary>
      <param name="level">An <see cref="T:System.Web.AspNetHostingPermissionLevel" /> enumeration value. </param>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Copy">
      <summary>When implemented by a derived class, creates and returns an identical copy of the current permission object.</summary>
      <returns>A copy of the current permission object.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a permission object with a specified state from an XML encoding.</summary>
      <param name="securityElement">The <see cref="T:System.Security.SecurityElement" /> containing the XML encoding to use to reconstruct the permission object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.SecurityElement.Tag" /> property of <paramref name="securityElement" /> is not equal to "IPermission". - or- The class <see cref="M:System.Security.SecurityElement.Attribute(System.String)" /> of <paramref name="securityElement" /> is null or an empty string (""). </exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)">
      <summary>When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
      <returns>An <see cref="T:System.Security.IPermission" /> that represents the intersection of the current permission and the specified permission; otherwise, null if the intersection is empty.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not an <see cref="T:System.Web.AspNetHostingPermission" />. </exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Returns a value indicating whether the current permission is a subset of the specified permission.</summary>
      <returns>true if the current <see cref="T:System.Security.IPermission" /> is a subset of the specified <see cref="T:System.Security.IPermission" />; otherwise, false.</returns>
      <param name="target">The <see cref="T:System.Security.IPermission" /> to combine with the current permission. It must be of the same type as the current <see cref="T:System.Security.IPermission" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not an <see cref="T:System.Web.AspNetHostingPermission" />. </exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsUnrestricted">
      <summary>Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed.</summary>
      <returns>true if unrestricted use of the resource protected by the permission is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermission.Level">
      <summary>Gets or sets the current hosting permission level for an ASP.NET application.</summary>
      <returns>One of the <see cref="T:System.Web.AspNetHostingPermissionLevel" /> enumeration values.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.ToXml">
      <summary>Creates an XML encoding of the permission object and its current state.</summary>
      <returns>A <see cref="T:System.Security.SecurityElement" /> containing the XML encoding of the permission object, including any state information.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)">
      <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
      <returns>An <see cref="T:System.Security.IPermission" /> that represents the union of the current permission and the specified permission.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not an <see cref="T:System.Web.AspNetHostingPermission" />. </exception>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionAttribute">
      <summary>Allows security actions for <see cref="T:System.Web.AspNetHostingPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.AspNetHostingPermissionAttribute" /> class.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> enumeration values. </param>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission">
      <summary>Creates a new <see cref="T:System.Web.AspNetHostingPermission" /> with the permission level previously set by the <see cref="P:System.Web.AspNetHostingPermissionAttribute.Level" /> property.</summary>
      <returns>An <see cref="T:System.Security.IPermission" /> that is the new <see cref="T:System.Web.AspNetHostingPermission" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.AspNetHostingPermissionAttribute.Level">
      <summary>Gets or sets the current hosting permission level.</summary>
      <returns>One of the <see cref="T:System.Web.AspNetHostingPermissionLevel" /> enumeration values.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionLevel">
      <summary>Specifies the trust level that is granted to an ASP.NET Web application.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.None">
      <summary>Indicates that no permission is granted. All demands for <see cref="T:System.Web.AspNetHostingPermission" /> will fail.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Minimal">
      <summary>Indicates that features protected with a demand for the <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> level will succeed. This level allows code to execute but not to interact with resources present on the system. This level is granted by configuring at least the <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> trust level using the trust section in a configuration file.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Low">
      <summary>Indicates that features protected with a demand for any level less than or equal to the <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> level will succeed. This level is intended to allow read-only access to limited resources in a constrained environment. This level is granted by specifying the <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> trust level in the trust section in a configuration file.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Medium">
      <summary>Indicates that features protected with a demand for any level less than or equal to the <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> level will succeed. This level is granted by configuring at least the <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> trust level in the trust section in a configuration file.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.High">
      <summary>Indicates that features protected with a demand for any level less than or equal to the High trust level will succeed. This level is intended for highly trusted managed-code applications that need to use most of the managed permissions that support semi-trusted access. It does not grant some of the highest permissions (for example, the ability to call into native code), but it does provide a way to run trusted applications with least privilege or to provide some level of constraints for highly trusted applications. This level is granted by configuring at least the <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> trust level in the trust section in a configuration file.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Unrestricted">
      <summary>Indicates that all demands for permission to use all features of an application will be granted. This is equivalent to granting Full trust level in the trust section in a configuration file.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.Build.Tasks.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Tasks</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Tasks.CreateTemporaryVCProject">
      <summary>Creates a temporary Visual C++ project with MSBuild references replaced with file references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateTemporaryVCProject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateTemporaryVCProject" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.Configuration">
      <summary>Gets or sets the configuration of the Visual C++ project file to process.</summary>
      <returns>The configuration of the Visual C++ project file to process.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateTemporaryVCProject.Execute">
      <summary>Executes the CreateTemporaryVCProject task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.OutputProjectFile">
      <summary>Gets or sets the name of the temporary project file to create.</summary>
      <returns>The name of the temporary project file to create.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ProjectFile">
      <summary>Gets or sets the Visual C++ project file to process.</summary>
      <returns>The Visual C++ project file to process.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ReferenceAssemblies">
      <summary>Gets or sets pre-resolved outputs of MSBuild references.</summary>
      <returns>Pre-resolved outputs of MSBuild references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ReferenceGuids">
      <summary>Gets or sets an array of GUIDs of referenced MSBuild projects.</summary>
      <returns>An array of GUIDs of referenced MSBuild projects.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ReferenceImportLibraries">
      <summary>Gets or sets pre-resolved import library (.lib) outputs of Visual C++ projects.</summary>
      <returns>Pre-resolved import library (.lib) outputs of Visual C++ projects.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveVCProjectOutput">
      <summary>Determines the output files for Visual C++ project references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveVCProjectOutput.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveVCProjectOutput" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.Configuration">
      <summary>Gets or sets the configuration to look up for the Visual C++ project when using the Visual C++ project engine object model.</summary>
      <returns>The configuration to look up for the Visual C++ project.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveVCProjectOutput.Execute">
      <summary>Executes the ResolveVCProjectOutput task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.Override">
      <summary>Gets or sets the path of the override stylesheet that the ResolveVCProjectOutput task uses to change the directory of the Visual C++ built project.</summary>
      <returns>The path of the override stylesheet.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.ProjectReferences">
      <summary>Gets or sets Visual C++ project references.</summary>
      <returns>
            Visual C++ project references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.ResolvedImportLibraryPaths">
      <summary>Gets or sets resolved .LIB file paths for native Visual C++ projects and preserves the original project reference attributes.</summary>
      <returns>The resolved .LIB file paths for native Visual C++ projects.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.ResolvedOutputPaths">
      <summary>Gets or sets resolved reference paths for managed Visual C++ projects. Preserves the original project reference attributes.</summary>
      <returns>The resolved reference paths for managed Visual C++ projects.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.SolutionFile">
      <summary>Gets or sets the path of the solution file that is used to set the solution macros for VCBuild.</summary>
      <returns>The path of the solution file.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.VCBuild">
      <summary>Implements the VCBuild task. Use the VCBuild element in your project file to create and execute this task. For usage and parameter information, see VCBuild Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.VCBuild" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Generates command line arguments that the VCBuild tool must run directly from the command line and not from a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.AdditionalLibPaths">
      <summary>Gets or sets additional paths to append to the LIBPATH environment variable before executing vcbuild.exe.</summary>
      <returns>The additional paths to append to the LIBPATH environment variable.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.AdditionalOptions">
      <summary>Gets or sets additional options you want to specify to the VCBuild tool.</summary>
      <returns>Additional options you want to specify to the VCBuild tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Clean">
      <summary>Gets or sets a Boolean value that specifies whether the VCBuild task outputs only clean build outputs. </summary>
      <returns>true if the VCBuild task outputs only clean build outputs; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Configuration">
      <summary>Gets or sets the name of the configuration and platform to build with such as Debug|Win32.</summary>
      <returns>The name of the configuration and platform to build with</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.EnvironmentOverride">
      <summary>Overrides the LIBPATH environment variable with <see cref="P:Microsoft.Build.Tasks.VCBuild.AdditionalLibPaths" /> and returns the new environment variables.</summary>
      <returns>Name/value pairs containing the new environment variable values.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.Execute">
      <summary>Executes the VCBuild task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.GenerateFullPathToTool">
      <summary>Returns the full file path of the VCBuild tool (vcbuild.exe).</summary>
      <returns>The full file path of the VCBuild tool (vcbuild.exe).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Override">
      <summary>Gets or sets the location of a VCBuild property sheet file that overrides project file settings.</summary>
      <returns>The location of a VCBuild property sheet file that overrides project file settings.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Platform">
      <summary>Gets or sets the name of the platform to build for.</summary>
      <returns>The name of the platform to build for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Projects">
      <summary>Gets or sets the projects to build.</summary>
      <returns>The projects to build.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Rebuild">
      <summary>Gets or sets a Boolean value that specifies whether the task performs a clean build of outputs before performing a build.</summary>
      <returns>true if the task performs a clean build of outputs before performing a build; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.SolutionFile">
      <summary>Gets or sets the full path to the solution file when building solutions, which is used to resolve solution-related Visual C++ project macros.</summary>
      <returns>The full path to the solution file when building solutions.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.ToolName">
      <summary>Returns the name of the VCBuild tool (vcbuild.exe).</summary>
      <returns>The name of the VCBuild tool (vcbuild.exe).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.UserEnvironment">
      <summary>This property is obsolete.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>True if task execution should proceed; otherwise, false.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.Build.Engine.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Engine</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.BuildEngine.BuildItem">
      <summary>Represents a single item in an MSBuild project. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,Microsoft.Build.Framework.ITaskItem)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> class based on an <see cref="T:Microsoft.Build.Framework.ITaskItem" /> object.</summary>
      <param name="itemName">The <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Name" /> property of the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</param>
      <param name="taskItem">The <see cref="T:Microsoft.Build.Framework.ITaskItem" /> from which to create the <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Include" /> property of the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> class with the specified <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Name" /> and <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Include" /> property values.</summary>
      <param name="itemName">The <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Name" /> property of the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</param>
      <param name="itemInclude">The <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Include" /> property of the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItem.Clone">
      <summary>Creates a shallow copy of the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</summary>
      <returns>A copy of the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItem.Condition">
      <summary>Gets or sets the Condition attribute value of the item.</summary>
      <returns>The Condition attribute value of the item.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo(Microsoft.Build.BuildEngine.BuildItem)">
      <summary>Copies all item metadata on this <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> to the specified <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</summary>
      <param name="destinationItem">The <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> to which to copy the item metadata.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount">
      <summary>Gets the number of custom attributes that are set on this item.</summary>
      <returns>An integer indicating how many custom attributes are set on this item.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames">
      <summary>Gets all user-defined or custom attribute names.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing string names for all of the user-defined or custom attributes.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItem.Exclude">
      <summary>Gets or sets the Exclude attribute value of the item.</summary>
      <returns>Gets or sets the Exclude attribute value of the item.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec">
      <summary>Gets the final specification of the item after all wildcards and properties have been evaluated.</summary>
      <returns>The final specification of the item after all wildcards and properties have been evaluated.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata(System.String)">
      <summary>Returns the value of the specified item metadata after after all item and property references have been evaluated.</summary>
      <returns>The value of the specified item metadata after after all item and property references have been evaluated.</returns>
      <param name="metadataName">The item metadata name.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItem.GetMetadata(System.String)">
      <summary>Returns the value of the specified item metadata.</summary>
      <returns>The value of the specified item metadata.</returns>
      <param name="metadataName">The item metadata name.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItem.HasMetadata(System.String)">
      <summary>Indicates whether the item has the specified item metadata.</summary>
      <returns>true if the item has the specified item metadata; otherwise, false.</returns>
      <param name="metadataName">The item metadata name.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItem.Include">
      <summary>Gets or sets the Include attribute that created the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</summary>
      <returns>The Include attribute that created the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItem.IsImported">
      <summary>Gets a value indicating whether the item was imported into the project.</summary>
      <returns>true if the item was imported into the project; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItem.MetadataCount">
      <summary>Gets the number of metadata set on the item</summary>
      <returns>An integer representing the number of metadata items.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItem.MetadataNames">
      <summary>Gets the names of metadata on the item, including pre-defined or reserved item-spec modifiers.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing name strings of all metadata on the item.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItem.Name">
      <summary>Gets or sets the name of the item collection to which the item belongs.</summary>
      <returns>The name of the item collection to which the item belongs.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata(System.String)">
      <summary>Removes the specified item metadata.</summary>
      <param name="metadataName">The item metadata name.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String)">
      <summary>Assigns the specified value to the specified item metadata.</summary>
      <param name="metadataName">The item metadata name.</param>
      <param name="metadataValue">The item metadata value.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String,System.Boolean)">
      <summary>Assigns the specified value to the specified item metadata, and optionally treats the metadata as a literal value.</summary>
      <param name="metadataName">The item metadata name.</param>
      <param name="metadataValue">The item metadata value.</param>
      <param name="treatMetadataValueAsLiteral">true to treat the metadata as a literal value by escaping all MSBuild special characters; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.BuildItemGroup">
      <summary>Represents a collection of <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> objects. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItemGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String)">
      <summary>Adds a new <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> with the specified <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Name" /> and <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Include" /> property values to the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</summary>
      <returns>The new <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</returns>
      <param name="itemName">The <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Name" /> property value to assign the new <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</param>
      <param name="itemInclude">The <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Include" /> property value to assign the new <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String,System.Boolean)">
      <summary>Adds a new <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> with the specified <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Name" /> and <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Include" /> property values to the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />, allowing you to specify whether the <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Include" /> property value is treated as a literal.</summary>
      <returns>The new <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</returns>
      <param name="itemName">The <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Name" /> property value to assign the new <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</param>
      <param name="itemInclude">The <see cref="P:Microsoft.Build.BuildEngine.BuildItem.Include" /> property value to assign the new <see cref="T:Microsoft.Build.BuildEngine.BuildItem" />.</param>
      <param name="treatItemIncludeAsLiteral">true to treat the <paramref name="itemInclude" /> parameter as a literal value; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItemGroup.Clear">
      <summary>Removes the <see cref="P:Microsoft.Build.BuildEngine.BuildItemGroup.Condition" /> property value and all <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> objects from the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItemGroup.Clone(System.Boolean)">
      <summary>Creates a deep or shallow copy of the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</summary>
      <returns>A copy of the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</returns>
      <param name="deepClone">true to create a deep copy of the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItemGroup.Condition">
      <summary>Gets or sets the Condition attribute value of the item group.</summary>
      <returns>The Condition attribute value of the item group.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItemGroup.Count">
      <summary>Gets a value indicating the number of <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> objects in the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</summary>
      <returns>An integer value representing the number of <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> objects in the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator">
      <summary>Gets an enumerator that iterates through the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItemGroup.IsImported">
      <summary>Gets or sets a value indicating whether the item group was imported into the project.</summary>
      <returns>true if the item group was imported into the project; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItemGroup.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> object in this <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> object in this <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</returns>
      <param name="index">The zero-based index of the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> object to get or set.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)">
      <summary>Removes the specified <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> from the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</summary>
      <param name="itemToRemove">The <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> to remove.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt(System.Int32)">
      <summary>Removes the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> at the specified index from the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />. </summary>
      <param name="index">The zero-based index of the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> object to remove.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItemGroup.ToArray">
      <summary>Copies the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> objects in the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> to a new array.</summary>
      <returns>A new array containing the <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> objects copied from the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection">
      <summary>Represents a collection of <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> objects. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItemGroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.Count">
      <summary>Gets a value indicating the number of <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> objects in the collection.</summary>
      <returns>An integer value representing the number of <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> objects in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildItemGroupCollection.GetEnumerator">
      <summary>Gets an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" /> is synchronized (thread safe); otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.BuildProperty">
      <summary>Represents a single property in an MSBuild project. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildProperty.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> class with the specified name and value.</summary>
      <param name="propertyName">The property name.</param>
      <param name="propertyValue">The property value.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildProperty.Clone(System.Boolean)">
      <summary>Creates a deep or shallow copy of the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" />.</summary>
      <returns>A copy of the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" />.</returns>
      <param name="deepClone">true to create a deep copy of the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" />; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildProperty.Condition">
      <summary>Gets or sets the Condition attribute value of the property.</summary>
      <returns>Gets or sets the Condition attribute value of the property.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildProperty.FinalValue">
      <summary>Gets the final value of the property after all property evaluations have been performed.</summary>
      <returns>The final value of the property after all property evaluations have been performed.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildProperty.IsImported">
      <summary>Gets or sets a value indicating whether the property was imported into the project.</summary>
      <returns>true if the property was imported into the project; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildProperty.Name">
      <summary>Gets the property name.</summary>
      <returns>The property name.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildProperty.op_Explicit(Microsoft.Build.BuildEngine.BuildProperty)~System.String">
      <summary>Converts a <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> to a String.</summary>
      <returns>A String, whose contents are the same as the <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Value" /> property of the <paramref name="propertyToCast" /> parameter.</returns>
      <param name="propertyToCast">The <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> to convert to a string.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildProperty.ToString">
      <summary>Returns the string that represents the property <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Value" />.</summary>
      <returns>The string that represents the property <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Value" />.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildProperty.Value">
      <summary>Gets or sets the property value.</summary>
      <returns>The property value.</returns>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.BuildPropertyGroup">
      <summary>Represents a collection of <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor(Microsoft.Build.BuildEngine.Project)">
      <summary>Initializes a new PropertyGroup element in the specified project.</summary>
      <param name="parentProject">The name of the Project in which to add the new PropertyGroup.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(System.String,System.String)">
      <summary>Adds a new <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> with the specified <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Name" /> and <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Value" /> to the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</summary>
      <returns>The new <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" />.</returns>
      <param name="propertyName">The <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Name" /> property value to assign the new <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" />.</param>
      <param name="propertyValue">The <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Value" /> property value to assign the new <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" />.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(System.String,System.String,System.Boolean)">
      <summary>Adds a new <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> with the specified <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Name" /> and <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Value" /> to the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</summary>
      <returns>The new <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" />.</returns>
      <param name="propertyName">The <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Name" /> property value to assign the new <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" />.</param>
      <param name="propertyValue">The <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Value" /> property value to assign the new <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" />.</param>
      <param name="treatPropertyValueAsLiteral">true to treat the <paramref name="propertyValue" /> parameter as a literal value; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.Clear">
      <summary>Removes the <see cref="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Condition" /> property value and all <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> objects from the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.Clone(System.Boolean)">
      <summary>Creates a deep or shallow copy of the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</summary>
      <returns>A copy of the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</returns>
      <param name="deepClone">true to create a deep copy of the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Condition">
      <summary>Gets or sets the Condition attribute value of the property group.</summary>
      <returns>The Condition attribute value of the property group.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Count">
      <summary>Gets a value indicating the number of <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> objects in the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</summary>
      <returns>An integer value representing the number of <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> objects in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.GetEnumerator">
      <summary>Gets an enumerator that iterates through the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.IsImported">
      <summary>Gets or sets a value indicating whether the property group was imported into the project.</summary>
      <returns>true if the property group was imported into the project; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Item(System.String)">
      <summary>Gets or sets a <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> object in this <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> object in this <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</returns>
      <param name="propertyName">The <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Name" /> value of the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> to get or set.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(Microsoft.Build.BuildEngine.BuildProperty)">
      <summary>Removes the specified <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> from the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</summary>
      <param name="property">The <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> to remove.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(System.String)">
      <summary>Removes the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> with the specified <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Name" /> from the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />.</summary>
      <param name="propertyName">The <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Name" /> value of the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> to remove.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetImportedPropertyGroupCondition(System.String)">
      <summary>Sets the condition for imported property groups. Changes are not persisted.</summary>
      <param name="condition">The condition to add to the imported PropertyGroup.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(System.String,System.String)">
      <summary>Sets the <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Value" /> of the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> with the specified <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Name" />.</summary>
      <param name="propertyName">The <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Name" /> property value of the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> to set.</param>
      <param name="propertyValue">The <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Value" /> property value to assign the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" />.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(System.String,System.String,System.Boolean)">
      <summary>Sets the <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Value" /> of the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> with the specified <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Name" />.</summary>
      <param name="propertyName">The <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Name" /> property value of the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" /> to set.</param>
      <param name="propertyValue">The <see cref="P:Microsoft.Build.BuildEngine.BuildProperty.Value" /> property value to assign the <see cref="T:Microsoft.Build.BuildEngine.BuildProperty" />.</param>
      <param name="treatPropertyValueAsLiteral">true to treat the <paramref name="propertyValue" /> parameter as a literal value; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection">
      <summary>Represents a collection of <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> objects. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the entire collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.Count">
      <summary>Gets a value indicating the number of <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> objects in the collection.</summary>
      <returns>An integer value representing the number of <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> objects in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.GetEnumerator">
      <summary>Gets an enumerator that iterates through the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" /> is synchronized (thread safe); otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.BuildSettings">
      <summary>Specifies the settings for a build. </summary>
    </member>
    <member name="F:Microsoft.Build.BuildEngine.BuildSettings.None">
      <summary>Specifies that the build should run normally.</summary>
    </member>
    <member name="F:Microsoft.Build.BuildEngine.BuildSettings.DoNotResetPreviouslyBuiltTargets">
      <summary>Specifies that no important external state has changed and no previously built targets should be rebuilt.</summary>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.BuildTask">
      <summary>Represents a Task element in a project. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildTask.AddOutputItem(System.String,System.String)">
      <summary>Adds an Output element with the specified TaskParameter and ItemName attributes to the Task element.</summary>
      <param name="taskParameter">The value of the TaskParameter attribute of the Output element.</param>
      <param name="itemName">The value of the ItemName attribute of the Output element.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildTask.AddOutputProperty(System.String,System.String)">
      <summary>Adds an Output element with the specified TaskParameter and PropertyName attributes to the Task element.</summary>
      <param name="taskParameter">The value of the TaskParameter attribute of the Output element.</param>
      <param name="propertyName">The value of the PropertyName attribute of the Output element.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildTask.Condition">
      <summary>Gets or sets the Condition attribute value of the Task element.</summary>
      <returns>The Condition attribute value of the Task element.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildTask.ContinueOnError">
      <summary>Gets or sets the ContinueOnError attribute value of the Task element.</summary>
      <returns>The ContinueOnError attribute value of the Task element.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildTask.Execute">
      <summary>Runs the task represented by this <see cref="T:Microsoft.Build.BuildEngine.BuildTask" /> object.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildTask.GetParameterNames">
      <summary>Gets an array containing the parameter names passed to the task.</summary>
      <returns>An array containing the parameter names passed to the task.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildTask.GetParameterValue(System.String)">
      <summary>Gets the value of the specified task parameter.</summary>
      <returns>The value of the specified task parameter.</returns>
      <param name="attributeName">The parameter name.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildTask.HostObject">
      <summary>Gets or sets the host object associated with the task.</summary>
      <returns>The host object associated with the task.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildTask.Name">
      <summary>Gets the task name.</summary>
      <returns>The task name.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(System.String,System.String)">
      <summary>Sets the value of the specified task parameter.</summary>
      <param name="parameterName">The parameter name to set.</param>
      <param name="parameterValue">The value to assign to <paramref name="parameterName" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(System.String,System.String,System.Boolean)">
      <summary>Sets the value of the specified task parameter.</summary>
      <param name="parameterName">The parameter name to set.</param>
      <param name="parameterValue">The value to assign to <paramref name="parameterName" />.</param>
      <param name="treatParameterValueAsLiteral">true to treat <paramref name="parameterValue" /> as a literal value; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.BuildTask.Type">
      <summary>Gets the <see cref="T:System.Type" /> of the class that implements the task.</summary>
      <returns>The <see cref="T:System.Type" /> of the class that implements the task.</returns>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.ColorResetter">
      <summary>Defines the type of delegate used to reset the console color. </summary>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.ColorSetter">
      <summary>Defines the type of delegate used to set the console color. </summary>
      <param name="color">The text color.</param>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger">
      <summary>Represents the ConfigurableForwardingLogger, a pre-fabricated forwarding logger to be used when building projects on a multi-proc or multi-core system. For more information, see Writing Multi-Processor-Aware Loggers.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.BuildEventRedirector">
      <summary>Gets or sets whether the build engine allows node loggers to forward messages to the central logger.</summary>
      <returns>An <see cref="T:Microsoft.Build.Framework.IEventRedirector" /> object to forward the events.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.ForwardToCentralLogger(Microsoft.Build.Framework.BuildEventArgs)">
      <summary>Forwards the specified event to the central logger.</summary>
      <param name="e">The event arguments. </param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>Enlists the console logger for all build events.</summary>
      <param name="eventSource">The <see cref="T:Microsoft.Build.Framework.IEventSource" /> object to provide the build events.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>Enlists the console logger for all build events.</summary>
      <param name="eventSource">The <see cref="T:Microsoft.Build.Framework.IEventSource" /> object to provide the build events.</param>
      <param name="nodeCount">The node ID of the event source.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.NodeId">
      <summary>Gets or sets the unique identifier (Node ID) to which the logger is attached.</summary>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Parameters">
      <summary>Gets or sets the parameters for the ConfigurableForwardingLogger.</summary>
      <returns>A string representing the logger parameters.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Shutdown">
      <summary>Closes the configurable forwarding logger.</summary>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Verbosity">
      <summary>Gets or sets the level of detail to show in the event log.</summary>
      <returns>a <see cref="T:Microsoft.Build.Framework.LoggerVerbosity" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.ConsoleLogger">
      <summary>Implements the standard console logger that outputs event data to the console window during a build.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.ConsoleLogger" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.ConsoleLogger" /> class with the specified <see cref="T:Microsoft.Build.Framework.LoggerVerbosity" />.</summary>
      <param name="verbosity">The <see cref="T:Microsoft.Build.Framework.LoggerVerbosity" /> to apply to the logger.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity,Microsoft.Build.BuildEngine.WriteHandler,Microsoft.Build.BuildEngine.ColorSetter,Microsoft.Build.BuildEngine.ColorResetter)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.ConsoleLogger" /> class with the specified <see cref="T:Microsoft.Build.Framework.LoggerVerbosity" />, <see cref="T:Microsoft.Build.BuildEngine.ColorSetter" />, and <see cref="T:Microsoft.Build.BuildEngine.ColorResetter" /> values.</summary>
      <param name="verbosity">The <see cref="T:Microsoft.Build.Framework.LoggerVerbosity" /> to apply to the logger.</param>
      <param name="write">The <see cref="T:Microsoft.Build.BuildEngine.WriteHandler" /> for the logger to use.</param>
      <param name="colorSet">The <see cref="T:Microsoft.Build.BuildEngine.ColorSetter" /> for the logger to use.</param>
      <param name="colorReset">The <see cref="T:Microsoft.Build.BuildEngine.ColorResetter" /> for the logger to use.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.ApplyParameter(System.String,System.String)">
      <summary>Adds the specified parameter name and value to the logger.</summary>
      <param name="parameterName">The parameter name to add to the logger.</param>
      <param name="parameterValue">The parameter value to assign to the <paramref name="parameterName" />.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildFinishedHandler(System.Object,Microsoft.Build.Framework.BuildFinishedEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.BuildFinished" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildFinishedEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildStartedHandler(System.Object,Microsoft.Build.Framework.BuildStartedEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.BuildStarted" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildStartedEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.CustomEventHandler(System.Object,Microsoft.Build.Framework.CustomBuildEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.CustomEventRaised" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.CustomBuildEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.ErrorHandler(System.Object,Microsoft.Build.Framework.BuildErrorEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.ErrorRaised" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>Registers the logger for the specified events.</summary>
      <param name="eventSource">The <see cref="T:Microsoft.Build.Framework.IEventSource" /> to register with the logger.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>Registers the logger for the specified events.</summary>
      <param name="eventSource">The <see cref="T:Microsoft.Build.Framework.IEventSource" /> to register with the logger.</param>
      <param name="nodeCount">The number of nodes to initialize.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.MessageRaised" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildMessageEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ConsoleLogger.Parameters">
      <summary>Gets or sets the parameters passed to the <see cref="T:Microsoft.Build.BuildEngine.ConsoleLogger" />.</summary>
      <returns>The parameters passed to the <see cref="T:Microsoft.Build.BuildEngine.ConsoleLogger" />.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectFinishedHandler(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.ProjectFinished" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.ProjectFinishedEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectStartedHandler(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.ProjectStarted" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.ProjectStartedEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ConsoleLogger.ShowSummary">
      <summary>Gets or sets a value indicating whether the logger will display a summary of errors and warnings.</summary>
      <returns>true if the logger will display a summary of errors and warnings; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.Shutdown">
      <summary>Stops the logger and releases all resources.</summary>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ConsoleLogger.SkipProjectStartedText">
      <summary>Gets or sets a value indicating whether the logger will display messages when new projects are started during the build.</summary>
      <returns>true to display messages when new projects are started during the build; otherwise, false. The default is true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetFinishedHandler(System.Object,Microsoft.Build.Framework.TargetFinishedEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.TargetFinished" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.TargetFinishedEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetStartedHandler(System.Object,Microsoft.Build.Framework.TargetStartedEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.TargetStarted" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.TargetStartedEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskFinishedHandler(System.Object,Microsoft.Build.Framework.TaskFinishedEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.TaskFinished" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.TaskFinishedEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskStartedHandler(System.Object,Microsoft.Build.Framework.TaskStartedEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.TaskStarted" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.TaskStartedEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ConsoleLogger.Verbosity">
      <summary>Gets or sets the <see cref="T:Microsoft.Build.Framework.LoggerVerbosity" /> level of the logger.</summary>
      <returns>The <see cref="T:Microsoft.Build.Framework.LoggerVerbosity" /> level of the logger.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ConsoleLogger.WarningHandler(System.Object,Microsoft.Build.Framework.BuildWarningEventArgs)">
      <summary>Handles the <see cref="E:Microsoft.Build.Framework.IEventSource.WarningRaised" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ConsoleLogger.WriteHandler">
      <summary>Gets or sets to the <see cref="T:Microsoft.Build.BuildEngine.WriteHandler" /> delegate for the <see cref="T:Microsoft.Build.BuildEngine.ConsoleLogger" />.</summary>
      <returns>The <see cref="T:Microsoft.Build.BuildEngine.WriteHandler" /> delegate for the <see cref="T:Microsoft.Build.BuildEngine.ConsoleLogger" />.</returns>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.DistributedFileLogger">
      <summary>Represents a text file that contains the build log for a build node.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.DistributedFileLogger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.DistributedFileLogger" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.DistributedFileLogger.BuildEventRedirector">
      <summary>Set by the build engine to allow a node loggers to forward messages to the central logger.</summary>
      <returns>An <see cref="T:Microsoft.Build.Framework.IEventRedirector" /> object to forward the events.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>Enlists the console logger for all build events.</summary>
      <param name="eventSource">The <see cref="T:Microsoft.Build.Framework.IEventSource" /> object that provides the build events.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>Enlists the console logger for all build events.</summary>
      <param name="eventSource">The <see cref="T:Microsoft.Build.Framework.IEventSource" /> object that provides the build events.</param>
      <param name="nodeCount">The Node ID of the event source.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.DistributedFileLogger.NodeId">
      <summary>Gets or sets the unique identifier (Node ID) of the node to which the forwarding logger is attached.</summary>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.DistributedFileLogger.Parameters">
      <summary>Gets or sets the parameters for the DistributedFileLogger.</summary>
      <returns>A string representing the logger parameters.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Shutdown">
      <summary>Closes the node file logger.</summary>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.DistributedFileLogger.Verbosity">
      <summary>Gets or sets the level of detail (a <see cref="T:Microsoft.Build.Framework.LoggerVerbosity" /> value) to display in the build event log.</summary>
      <returns>a <see cref="T:Microsoft.Build.Framework.LoggerVerbosity" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.Engine">
      <summary>Represents the MSBuild engine.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine" /> class.</summary>
      <param name="globalProperties">A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> that represents properties to be passed to the child engine.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine" /> class.</summary>
      <param name="globalProperties">A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> that represents properties to be passed to the child engine.</param>
      <param name="locations">A <see cref="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" /> enumeration specifies the location of the Toolset definition.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine" /> class.</summary>
      <param name="globalProperties">A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> that represents properties to be passed to the child engine.</param>
      <param name="locations">A <see cref="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" /> enumeration specifies the location of the Toolset definition.</param>
      <param name="numberOfCpus">An integer that specifies the number of CPUs or cores in the system.</param>
      <param name="localNodeProviderParameters">A string of parameters that are used to configure the MSBuild engine. You must format the parameters as ParameterName=ParameterValue. The valid semicolon-separated, optional parameters are as follows:MSBUILDLOCATION Indicates where the build process can find MSBuild.exe. This path enables the MSBuild engine to locate MSBuild.exe and start it as a local node. MSBUILDLOCATION is the only essential parameter for a host. The default value is C:\Windows\Microsoft.Net\Framework\v3.5\.NODEREUSE Indicates whether the child nodes should remain after the build finishes, in case they can be used later by another build. The nodes are discarded automatically after one minute of non-use. The default value is true.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine" /> class.</summary>
      <param name="locations">A <see cref="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" /> enumeration that specifies the location of the Toolset definition.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine" /> class that has the specified <see cref="P:Microsoft.Build.BuildEngine.Engine.BinPath" />.</summary>
      <param name="binPath">The path to MSBuild.exe.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Engine.BinPath">
      <summary>Gets or sets the path to MSBuild.exe.</summary>
      <returns>The path to MSBuild.exe.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Engine.BuildEnabled">
      <summary>Gets or sets a value that indicates whether the building of targets in the project is enabled.</summary>
      <returns>true if the building of targets in the project is enabled; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project)">
      <summary>Builds the specified <see cref="T:Microsoft.Build.BuildEngine.Project" />.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="project">The <see cref="T:Microsoft.Build.BuildEngine.Project" /> to build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String)">
      <summary>Builds the specified target of the specified <see cref="T:Microsoft.Build.BuildEngine.Project" />.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="project">The <see cref="T:Microsoft.Build.BuildEngine.Project" /> to build.</param>
      <param name="targetName">The Name attribute of the Target element to build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[])">
      <summary>Builds the specified targets of the specified <see cref="T:Microsoft.Build.BuildEngine.Project" />.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="project">The <see cref="T:Microsoft.Build.BuildEngine.Project" /> to build.</param>
      <param name="targetNames">An array that contains the Name attributes of the Target elements to build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary)">
      <summary>Builds the specified targets of the specified <see cref="T:Microsoft.Build.BuildEngine.Project" />, and returns the outputs of the targets.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="project">The <see cref="T:Microsoft.Build.BuildEngine.Project" /> to build.</param>
      <param name="targetNames">An array that contains the Name attributes of the Target elements to build.</param>
      <param name="targetOutputs">The outputs of the built targets. This parameter can be a null reference (Nothing in Visual Basic) if outputs are not required.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)">
      <summary>Builds the specified targets of the specified <see cref="T:Microsoft.Build.BuildEngine.Project" /> with the specified <see cref="T:Microsoft.Build.BuildEngine.BuildSettings" />, and returns the outputs of the targets.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="project">The <see cref="T:Microsoft.Build.BuildEngine.Project" /> to build.</param>
      <param name="targetNames">An array that contains the Name attributes of the Target elements to build.</param>
      <param name="targetOutputs">The outputs of the built targets. This parameter can be a null reference (Nothing in Visual Basic) if outputs are not required.</param>
      <param name="buildFlags">The <see cref="T:Microsoft.Build.BuildEngine.BuildSettings" /> to apply to the build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String)">
      <summary>Loads the specified project file and builds the project.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="projectFile">The project file to load and build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String)">
      <summary>Loads the specified project file and builds the specified target of the project.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="projectFile">The project file to load and build.</param>
      <param name="targetName">The Name attribute of the Target element to build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[])">
      <summary>Loads the specified project file and builds the specified targets of the project.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="projectFile">The project file to load and build.</param>
      <param name="targetNames">An array that contains the Name attributes of the Target elements to build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup)">
      <summary>Loads the specified project file and builds the specified targets of the project with the specified <see cref="P:Microsoft.Build.BuildEngine.Engine.GlobalProperties" />, and returns the outputs of the targets.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="projectFile">The project file to load and build.</param>
      <param name="targetNames">An array that contains the Name attributes of the Target elements to build.</param>
      <param name="globalProperties">The <see cref="P:Microsoft.Build.BuildEngine.Engine.GlobalProperties" /> to apply to the build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary)">
      <summary>Loads the specified project file and builds the specified targets of the project with the specified <see cref="P:Microsoft.Build.BuildEngine.Engine.GlobalProperties" />, and returns the outputs of the targets.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="projectFile">The project file to load and build.</param>
      <param name="targetNames">An array that contains the Name attributes of the Target elements to build.</param>
      <param name="globalProperties">The <see cref="P:Microsoft.Build.BuildEngine.Engine.GlobalProperties" /> to apply to the build.</param>
      <param name="targetOutputs">The outputs of the built targets. This parameter can be a null reference (Nothing in Visual Basic) if outputs are not required.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)">
      <summary>Loads the specified project file and builds the specified targets of the project with the specified <see cref="T:Microsoft.Build.BuildEngine.BuildSettings" /> and <see cref="P:Microsoft.Build.BuildEngine.Engine.GlobalProperties" />, and returns the outputs of the targets.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="projectFile">The project file to load and build.</param>
      <param name="targetNames">An array that contains the Name attributes of the Target elements to build.</param>
      <param name="globalProperties">The <see cref="P:Microsoft.Build.BuildEngine.Engine.GlobalProperties" /> to apply to the build.</param>
      <param name="targetOutputs">The outputs of the built targets. This parameter can be a null reference (Nothing in Visual Basic) if outputs are not required.</param>
      <param name="buildFlags">The <see cref="T:Microsoft.Build.BuildEngine.BuildSettings" /> to apply to the build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings,System.String)">
      <summary>Loads a project file from disk and builds the given targets.</summary>
      <returns>true if the build succeeds; otherwise, false.</returns>
      <param name="projectFile">The name of the project to build. </param>
      <param name="targetNames">A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> array of targets for each project. Can be null if you want to build the default targets for the project.</param>
      <param name="globalProperties">An <see cref="T:System.Collections.IDictionary" /> array of properties for each project. Can be null if no global properties are required.</param>
      <param name="targetOutputs">A <see cref="T:Microsoft.Build.BuildEngine.BuildSettings" /> array of tables for target outputs. Can be null if outputs are not required.</param>
      <param name="buildFlags">A string array of additional build flags.</param>
      <param name="toolsVersion">The ToolsVersion to impose on the project in this build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFiles(System.String[],System.String[][],Microsoft.Build.BuildEngine.BuildPropertyGroup[],System.Collections.IDictionary[],Microsoft.Build.BuildEngine.BuildSettings,System.String[])">
      <summary>Loads a set of project files from disk and then builds the given list of targets for each project.</summary>
      <returns>true if the project built successfully; otherwise, false.</returns>
      <param name="projectFiles">A string list of project files to build. This value cannot be null.</param>
      <param name="targetNamesPerProject">A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> array of targets for each project.</param>
      <param name="globalPropertiesPerProject">An <see cref="T:System.Collections.IDictionary" /> array of properties for each project. This value cannot be null.</param>
      <param name="targetOutputsPerProject">A <see cref="T:Microsoft.Build.BuildEngine.BuildSettings" /> array of tables for target outputs. This value cannot be null.</param>
      <param name="buildFlags">A string array of additional build flags.</param>
      <param name="toolsVersions">The ToolsVersion to impose on the project in this build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.CreateNewProject">
      <summary>Creates an empty <see cref="T:Microsoft.Build.BuildEngine.Project" /> object that is associated with this <see cref="T:Microsoft.Build.BuildEngine.Engine" />.</summary>
      <returns>The created <see cref="T:Microsoft.Build.BuildEngine.Project" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Engine.DefaultToolsVersion">
      <summary>The default ToolsVersion of this build engine.</summary>
      <returns>A string that represents the default ToolsVersion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.GetLoadedProject(System.String)">
      <summary>Returns the <see cref="T:Microsoft.Build.BuildEngine.Project" /> object that is associated with the specified project file.</summary>
      <returns>The <see cref="T:Microsoft.Build.BuildEngine.Project" /> object that associated with the specified project file. If no <see cref="T:Microsoft.Build.BuildEngine.Project" /> object is associated with the specified project file, the method returns a null reference (Nothing in Visual Basic).</returns>
      <param name="projectFullFileName">The fully qualified file path to the project file of the <see cref="T:Microsoft.Build.BuildEngine.Project" /> object.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Engine.GlobalEngine">
      <summary>Gets the <see cref="T:Microsoft.Build.BuildEngine.Engine" /> that is global (shared) for this <see cref="T:System.AppDomain" />.</summary>
      <returns>The <see cref="T:Microsoft.Build.BuildEngine.Engine" /> that is global (shared) for this <see cref="T:System.AppDomain" />.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Engine.GlobalProperties">
      <summary>Gets or sets a collection of the global properties for the project.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> that contains the global properties for the project.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Engine.IsBuilding">
      <summary>Gets whether a project is currently being built.</summary>
      <returns>true if a build is in progress; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Engine.OnlyLogCriticalEvents">
      <summary>Gets or sets a value that indicates whether to only log critical events, such as warnings and errors, during the build.</summary>
      <returns>true if only critical events should be logged; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.RegisterDistributedLogger(Microsoft.Build.Framework.ILogger,Microsoft.Build.BuildEngine.LoggerDescription)">
      <summary>Registers distributed loggers with the build engine.</summary>
      <param name="centralLogger">An <see cref="T:Microsoft.Build.Framework.ILogger" /> that represents the central logger.</param>
      <param name="forwardingLogger">A <see cref="T:Microsoft.Build.BuildEngine.LoggerDescription" /> that represents the forwarding logger.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.RegisterLogger(Microsoft.Build.Framework.ILogger)">
      <summary>Registers the specified logger with the <see cref="T:Microsoft.Build.BuildEngine.Engine" />.</summary>
      <param name="logger">The logger to associate with the <see cref="T:Microsoft.Build.BuildEngine.Engine" />.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.Shutdown">
      <summary>Called when the host is finished with this build engine. It unregisters loggers and shuts down nodes.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Engine.Toolsets">
      <summary>Returns the collection of Toolsets that are recognized by this build engine instance.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.ToolsetCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.UnloadAllProjects">
      <summary>Removes all references to <see cref="T:Microsoft.Build.BuildEngine.Project" /> objects from the <see cref="T:Microsoft.Build.BuildEngine.Engine" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.UnloadProject(Microsoft.Build.BuildEngine.Project)">
      <summary>Removes the reference to the specified <see cref="T:Microsoft.Build.BuildEngine.Project" /> from the <see cref="T:Microsoft.Build.BuildEngine.Engine" />.</summary>
      <param name="project">The <see cref="T:Microsoft.Build.BuildEngine.Project" /> to remove from the <see cref="T:Microsoft.Build.BuildEngine.Engine" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Engine.UnregisterAllLoggers">
      <summary>Unregisters all loggers from the <see cref="T:Microsoft.Build.BuildEngine.Engine" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Engine.Version">
      <summary>Gets the version of the <see cref="T:Microsoft.Build.BuildEngine.Engine" />.</summary>
      <returns>The version of the <see cref="T:Microsoft.Build.BuildEngine.Engine" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.FileLogger">
      <summary>Extends the <see cref="T:Microsoft.Build.BuildEngine.ConsoleLogger" /> to log messages to a file rather than the console window.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.FileLogger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.FileLogger" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>Registers the logger for the specified events.</summary>
      <param name="eventSource">The <see cref="T:Microsoft.Build.Framework.IEventSource" /> to register with the logger.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>Registers the logger for the specified events.</summary>
      <param name="eventSource">The <see cref="T:Microsoft.Build.Framework.IEventSource" /> to register with the logger.</param>
      <param name="nodeCount">An integer representing the node ID for the event source.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.FileLogger.Shutdown">
      <summary>Stops the logger, releases all resources, and closes the file to which the logger was writing.</summary>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.Import">
      <summary>Represents a single Import element in an MSBuild project.</summary>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Import.Condition">
      <summary>Gets the Condition attribute value of the Import element.</summary>
      <returns>The Condition attribute value of the Import element.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Import.EvaluatedProjectPath">
      <summary>Gets the fully qualified path of the file specified in the Name attribute of the Import element.</summary>
      <returns>The fullly qualified path of the file specified in the Name attribute of the Import element.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Import.IsImported">
      <summary>Gets a value indicating whether the Import element was imported into the project.</summary>
      <returns>true if the Import element was imported into the project; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Import.ProjectPath">
      <summary>Gets or sets the Project attribute value of the Import element.</summary>
      <returns>The Project attribute value of the Import element.</returns>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.ImportCollection">
      <summary>Represents a collection of all Import elements in a project. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ImportCollection.AddNewImport(System.String,System.String)">
      <summary>Allows hosts to programmatically add a new &lt;Import&gt; tag to a project file being manipulated by the host.</summary>
      <param name="projectFile">A required string representing the name of the project file for the &lt;Import&gt; statement to be added. For example, "myproject.csproj."</param>
      <param name="condition">An optional string indicating whether the element is processed. If <paramref name="condition" /> is true, then the specified &lt;Import&gt; tag is added, if false, it is not.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Microsoft.Build.BuildEngine.Import[],System.Int32)">
      <summary>Copies the entire <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> to a compatible one-dimensional <see cref="T:System.Array" /> of <see cref="T:Microsoft.Build.BuildEngine.Import" /> objects, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> of <see cref="T:Microsoft.Build.BuildEngine.Import" /> objects that is the destination of the elements copied from <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the entire <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ImportCollection.Count">
      <summary>Gets a value indicating the number of <see cref="T:Microsoft.Build.BuildEngine.Import" /> objects in the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</summary>
      <returns>An integer value representing the number of <see cref="T:Microsoft.Build.BuildEngine.Import" /> objects in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator">
      <summary>Gets an enumerator that iterates through the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> is synchronized (thread safe); otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ImportCollection.RemoveImport(Microsoft.Build.BuildEngine.Import)">
      <summary>Allows hosts to programmatically remove &lt;Import&gt; tags that are part of a project file being manipulated by the host.</summary>
      <param name="importToRemove">A string representing the name of the &lt;Import&gt; tag to remove from the project file.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ImportCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.InternalLoggerException">
      <summary>This exception is used to wrap an unhandled exception from a logger.  </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.InternalLoggerException" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.InternalLoggerException" /> class using the specified values.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.InternalLoggerException" /> class using the specified values.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current excpetion. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InternalLoggerException.BuildEventArgs">
      <summary>Gets the details of the build event, if any, that was being logged.</summary>
      <returns>The details of the build event that was being logged.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InternalLoggerException.ErrorCode">
      <summary>Gets the error code associated with this exception's message.</summary>
      <returns>The text for the error code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InternalLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InternalLoggerException.HelpKeyword">
      <summary>Gets the F1-help keyword associated with this error.</summary>
      <returns>The F1-help keyword associated with this error.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InternalLoggerException.InitializationException">
      <summary>Gets whether an exception occurred during logger initialization.</summary>
      <returns>true if the exception occured during logger initialization, false otherwise.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.InvalidProjectFileException">
      <summary>This exception is thrown whenever there is a problem with the user's XML project file. The problem might be semantic or syntactical. If the problem is in the syntax, it can typically be caught by XSD validation. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" /> class using the specified message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" /> class using the specified error message and inner exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current excpetion. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" /> class using rich error information.</summary>
      <param name="projectFile">The invalid project file. Can be an empty string.</param>
      <param name="lineNumber">The invalid line number in the project. Set to zero if not available.</param>
      <param name="columnNumber">The invalid column number in the project. Set to zero if not available.</param>
      <param name="endLineNumber">The end of a range of invalid lines in the project. Set to zero if not available.</param>
      <param name="endColumnNumber">The end of a range of invalid columns in the project. Set to zero if not available.</param>
      <param name="message">The error message text for the exception.</param>
      <param name="errorSubcategory">The description of the error. This parameter can be a null reference (Nothing in Visual Basic).</param>
      <param name="errorCode">The error code. This parameter can be a null reference (Nothing).</param>
      <param name="helpKeyword">The F1-help keyword for the host IDE. This parameter can be a null reference (Nothing).</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.Xml.XmlNode,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" /> class using rich error information.</summary>
      <param name="xmlNode">The XML node where the error is located. Can be null.</param>
      <param name="message">The error message text for the exception.</param>
      <param name="errorSubcategory">A description for the error. This parameter can be a null reference (Nothing in Visual Basic).</param>
      <param name="errorCode">The error code. This parameter can be a null reference (Nothing).</param>
      <param name="helpKeyword">The F1-help keyword for the host IDE. Can be null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.BaseMessage">
      <summary>Gets the exception message, not including the project file.</summary>
      <returns>The error message string only.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ColumnNumber">
      <summary>Gets the invalid column number, if any, in the project.</summary>
      <returns>The invalid column number, or zero.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.EndColumnNumber">
      <summary>Gets the last column number, if any, of a range of invalid columns in the project.</summary>
      <returns>The last invalid column number, or zero.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.EndLineNumber">
      <summary>Gets the last line number, if any, of a range of invalid lines in the project.</summary>
      <returns>The last invalid line number, or zero.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ErrorCode">
      <summary>Gets the error code, if any, associated with the exception message.</summary>
      <returns>Error code string, or a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ErrorSubcategory">
      <summary>Gets the error sub-category, if any that describes the type of this error.</summary>
      <returns>The sub-category string, or null.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.HelpKeyword">
      <summary>Gets the F1-help keyword, if any, associated with this error, for the host IDE.</summary>
      <returns>The keyword string, or a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.LineNumber">
      <summary>Gets the invalid line number, if any, in the project.</summary>
      <returns>The invalid line number, or zero.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.Message">
      <summary>Gets the exception message, including the affected project file, if any.</summary>
      <returns>The complete message string.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ProjectFile">
      <summary>Gets the project file, if any, associated with this exception.</summary>
      <returns>The project file name and path string, or a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException">
      <summary>This exception is thrown whenever there is a problem with the user's custom toolset definition file. The problem might be semantic or syntactical. If the problem is in the syntax, it can typically be caught by XSD validation. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" /> class.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" /> class.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" /> class.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The error code. This parameter can be a null reference (Nothing).</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" /> class.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="errorCode">The error code. This parameter can be a null reference (Nothing).</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" /> class.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="errorCode">The error code. This parameter can be a null reference (Nothing).</param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.ErrorCode">
      <summary>Gets the exception error code that was thrown.</summary>
      <returns>A string representing the error code.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.LocalNode">
      <summary>This class hosts a node class in the child build process. It uses shared memory to communicate with the local node provider. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.LocalNode.StartLocalNodeServer(System.Int32)">
      <summary>Starts the local node when the process is launched and shuts it down on timeout.</summary>
      <param name="nodeNumber">The number of nodes to start. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.LoggerDescription">
      <summary>Contains information about a logger as a collection of values that can be used to instantiate the logger as well as being serialized to pass between different processes. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.LoggerDescription.#ctor(System.String,System.String,System.String,System.String,Microsoft.Build.Framework.LoggerVerbosity)">
      <summary>Creates a logger description based on the given parameters.</summary>
      <param name="loggerClassName">The class name for the logger.</param>
      <param name="loggerAssemblyName">The assembly name for the logger.</param>
      <param name="loggerAssemblyFile">The assembly file name for the logger.</param>
      <param name="loggerSwitchParameters">A string of logger parameters, null if there are none. </param>
      <param name="verbosity">The verbosity switch for the logger.NoteOn the command line, all loggers get the same verbosity level.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.LoggerDescription.LoggerSwitchParameters">
      <summary>Gets the string of logger parameters.</summary>
      <returns>Returns a string list of the log parameters; null if there are none.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.LoggerDescription.Verbosity">
      <summary>Gets the verbosity level for the logger.</summary>
      <returns>A string value representing the logger's verbosity level.</returns>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.Project">
      <summary>Represents a project that can be built using MSBuild.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Project" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.#ctor(Microsoft.Build.BuildEngine.Engine)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Project" /> class using the supplied <see cref="T:Microsoft.Build.BuildEngine.Engine" />.</summary>
      <param name="engine">The <see cref="T:Microsoft.Build.BuildEngine.Engine" /> instance to use for creating the project in memory.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.#ctor(Microsoft.Build.BuildEngine.Engine,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Project" /> class using the supplied <see cref="T:Microsoft.Build.BuildEngine.Engine" /> and <see cref="P:Microsoft.Build.BuildEngine.Project.ToolsVersion" />.</summary>
      <param name="engine">The <see cref="T:Microsoft.Build.BuildEngine.Engine" /> instance to use for creating the project in memory.</param>
      <param name="toolsVersion">The <see cref="P:Microsoft.Build.BuildEngine.Project.ToolsVersion" /> to use for creating the project in memory.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.AddNewImport(System.String,System.String)">
      <summary>Add an Import element to the end of the project.</summary>
      <param name="projectFile">The name of the project file to import. Corresponds to the Project attribute of the Import element.</param>
      <param name="condition">The condition to evaluate before importing the project. Corresponds to the Condition attribute of the Import element.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String)">
      <summary>Adds the specified Item element to the project.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> containing the created item.</returns>
      <param name="itemName">The name of the item collection to add the item to. Corresponds to the user-defined name of the Item element.</param>
      <param name="itemInclude">The value of the Include attribute of the item.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String,System.Boolean)">
      <summary>Adds the specified Item element to the project.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildItem" /> containing the created item.</returns>
      <param name="itemName">The name of the item collection to add the item to. Corresponds to the user-defined name of the Item element.</param>
      <param name="itemInclude">The value of the Include attribute of the item.</param>
      <param name="treatItemIncludeAsLiteral">true to treat the <paramref name="itemInclude" /> parameter as a literal value; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.AddNewItemGroup">
      <summary>Adds a new ItemGroup element to the project.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> containing the created item group.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.AddNewPropertyGroup(System.Boolean)">
      <summary>Adds a new PropertyGroup element to the project.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> containing the created property group.</returns>
      <param name="insertAtEndOfProject">true to insert the PropertyGroup at the end of the project; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyFile(System.String,System.String)">
      <summary>Adds a new UsingTask element with the specified assembly file.</summary>
      <param name="taskName">The name of the task to reference from the assembly. Corresponds to the TaskName attribute of the UsingTask element.</param>
      <param name="assemblyFile">The file path to the assembly. Corresponds to the AssemblyFile attribute of the UsingTask element.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyName(System.String,System.String)">
      <summary>Adds a new UsingTask element with the specified assembly name.</summary>
      <param name="taskName">The name of the task to reference from the assembly. Corresponds to the TaskName attribute of the UsingTask element.</param>
      <param name="assemblyName">The name of the assembly to load. Corresponds to the AssemblyName attribute of the UsingTask element.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Build">
      <summary>Builds the default targets of the project.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Build(System.String)">
      <summary>Builds the specified target in the project.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="targetName">The target to build.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Build(System.String[])">
      <summary>Builds the specified list of targets in the project.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="targetNames">The list of targets to build. This parameter can be a null reference (Nothing in Visual Basic) to build the default targets.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary)">
      <summary>Builds the specified list of targets in the project, and returns the outputs of the targets.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="targetNames">The list of targets to build. This parameter can be a null reference (Nothing in Visual Basic) to build the default targets.</param>
      <param name="targetOutputs">The outputs of the built targets. This parameter can be a null reference (Nothing) if outputs are not needed.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)">
      <summary>Builds the specified list of targets in the project using the specified settings, and returns the outputs of the targets.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="targetNames">The list of targets to build. This parameter can be a null reference (Nothing in Visual Basic) to build the default targets.</param>
      <param name="targetOutputs">The outputs of the built targets. This parameter can be a null reference (Nothing) if outputs are not needed.</param>
      <param name="buildFlags">The <see cref="T:Microsoft.Build.BuildEngine.BuildSettings" /> to apply to the build.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.BuildEnabled">
      <summary>Gets or sets a value indicating whether the project is enabled for building tasks and targets.</summary>
      <returns>true if the project is enabled for building tasks and targets; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.DefaultTargets">
      <summary>Gets or sets the DefaultTargets attribute of the Project element in the MSBuild project.</summary>
      <returns>A semi-colon (;) delimited list of the targets specified in the DefaultTargets attribute.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.DefaultToolsVersion">
      <summary>Sets or gets the ToolsVersion XML attribute found on the <see cref="Project" />Project Element (MSBuild) element in the project file.</summary>
      <returns>A string representing the Tools version.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.Encoding">
      <summary>Gets the encoding for the project file.</summary>
      <returns>An <see cref="T:System.Text.Encoding" /> value of the project file.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.EvaluatedItems">
      <summary>Gets a collection of the items evaluated during the build.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> containing the items evaluated during the build.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.EvaluatedItemsIgnoringCondition">
      <summary>Gets a collection of all items in a project, even those not used in the build process because a Condition attribute evaluated to false.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> containing all items in a project.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.EvaluatedProperties">
      <summary>Gets a collection of the properties evaluated during the build.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> containing the properties evaluated during the build.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.FullFileName">
      <summary>Gets or sets the fully qualified path and file name of the project file.</summary>
      <returns>The full path of the project file.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.GetConditionedPropertyValues(System.String)">
      <summary>Returns a list of possible values for the specified property.</summary>
      <returns>The list of possible values for the property.</returns>
      <param name="propertyName">The property to use when generating the list of possible values.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByName(System.String)">
      <summary>Returns all evaluated items belonging to the specified item collection.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> containing all of the evaluated items belonging to the specified item collection.</returns>
      <param name="itemName">The name of the item collection.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByNameIgnoringCondition(System.String)">
      <summary>Returns all items belonging to the specified item collection.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> containing all items belonging to the specified item collection, even those not used in the build process because a Condition attribute evaluated to false..</returns>
      <param name="itemName">The name of the specified item collection.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedProperty(System.String)">
      <summary>Returns the value of the specified property.</summary>
      <returns>The value of the specified property.</returns>
      <param name="propertyName">The name of the property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.GetProjectExtensions(System.String)">
      <summary>Returns a string value of the XML from the specified element in the ProjectExtensions element.</summary>
      <returns>The string value of the specified element in the ProjectExtensions element of the project.</returns>
      <param name="id">The name of the element in the ProjectExtensions element to return.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.GlobalProperties">
      <summary>Gets or sets a collection of the global properties for the project.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> containing the global properties for the project.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.HasToolsVersionAttribute">
      <summary>Gets whether the Project file has the ToolsVersion XML attribute.</summary>
      <returns>true if the project has the ToolsVersion attribute; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.Imports">
      <summary>Gets the projects imported into this project.</summary>
      <returns>An <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> of the projects imported into this project.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.InitialTargets">
      <summary>Gets or sets the InitialTargets attribute of the Project element in the MSBuild project.</summary>
      <returns>A semi-colon (;) delimited list of the targets specified in the InitialTargets attribute.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.IsDirty">
      <summary>Gets a value indicating whether the project has changed and needs to be saved to a file.</summary>
      <returns>true if the project has changed and needs to be saved; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.IsValidated">
      <summary>Gets a value indicating whether the project is to be validated against a schema.</summary>
      <returns>true if the project is to be validated against a schema; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.ItemGroups">
      <summary>Gets a collection of the item groups specified with the ItemGroup element in the project.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" /> containing the item groups specifiied in the project.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader)">
      <summary>Loads the contents of the specified <see cref="T:System.IO.TextReader" /> into the <see cref="T:Microsoft.Build.BuildEngine.Project" /> object.</summary>
      <param name="textReader">The <see cref="T:System.IO.TextReader" /> to load.</param>
      <exception cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException">The file used by the <paramref name="textReader" /><see cref="T:System.IO.TextReader" /> is not a valid project file.</exception>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader,Microsoft.Build.BuildEngine.ProjectLoadSettings)">
      <summary>Reads the contents of this project from a string containing the XML contents.</summary>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> object containing the project contents.</param>
      <param name="projectLoadSettings">A <see cref="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" /> value that specifies the settings for the project being loaded.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Load(System.String)">
      <summary>Loads the contents of the specified project file into the <see cref="T:Microsoft.Build.BuildEngine.Project" /> object.</summary>
      <param name="projectFileName">The project file to load.</param>
      <exception cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException">The file specified by <paramref name="projectFileName" /> is not a valid project file.</exception>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Load(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)">
      <summary>Reads the contents of this project from a project XML file on disk.</summary>
      <param name="projectFileName">A string representing the name of the file to load.</param>
      <param name="projectLoadSettings">A <see cref="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" /> value that specifies the settings for the project being loaded.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String)">
      <summary>Loads the contents of the specified string into the <see cref="T:Microsoft.Build.BuildEngine.Project" /> object.</summary>
      <param name="projectXml">The string of XML to load.</param>
      <exception cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException">The XML contained in <paramref name="projectXML" /> is not a valid project file.</exception>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)">
      <summary>Reads the contents of this project from a string containing the XML contents.</summary>
      <param name="projectXml">A string containing the project contents.</param>
      <param name="projectLoadSettings">A <see cref="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" /> value that specifies the settings for the project being loaded.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.MarkProjectAsDirty">
      <summary>Sets the <see cref="P:Microsoft.Build.BuildEngine.Project.IsDirty" /> property of the project to true.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.ParentEngine">
      <summary>Gets the <see cref="T:Microsoft.Build.BuildEngine.Engine" /> that builds the project.</summary>
      <returns>The parent <see cref="T:Microsoft.Build.BuildEngine.Engine" /> object.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.PropertyGroups">
      <summary>Gets a collection of the property groups specified with the PropertyGroup element in the project.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" /> containing the property groups specifiied in the project.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.RemoveAllItemGroups">
      <summary>Removes all item groups from the project, but does not modify imported projects.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.RemoveAllPropertyGroups">
      <summary>Removes all property groups from the project, but does not modify imported projects.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.RemoveImportedPropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup)">
      <summary>Removes the specified property group from the main project file.</summary>
      <param name="propertyGroupToRemove">A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> object representing the group to remove.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)">
      <summary>Removes the specified item from the project.</summary>
      <param name="itemToRemove">The item to remove from the project.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.RemoveItemGroup(Microsoft.Build.BuildEngine.BuildItemGroup)">
      <summary>Removes the specified item group from the project.</summary>
      <param name="itemGroupToRemove">The item group to remove from the project.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.RemoveItemGroupsWithMatchingCondition(System.String)">
      <summary>Removes all item groups with the specified condition from the project, but does not modify imported projects.</summary>
      <param name="matchCondition">The condition to match when removing item groups.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.RemoveItemsByName(System.String)">
      <summary>Removes all items in the specified item collection from the project, but does not modify imported projects.</summary>
      <param name="itemName">The item collection to remove.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup)">
      <summary>Removes the specified property group from the project.</summary>
      <param name="propertyGroupToRemove">The property group to remove from the project.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String)">
      <summary>Removes all property groups with the specified condition from the project, but does not modify imported projects.</summary>
      <param name="matchCondition">The condition to match when removing property groups.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String,System.Boolean)">
      <summary>Removes all &lt;PropertyGroup&gt;'s from the main project file that have a specific "Condition."</summary>
      <param name="matchCondition">A string representing the condition of the PropertyGroups that you want removed.</param>
      <param name="includeImportedPropertyGroups">A boolean value indicating whether to include imported property groups in the search.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.ResetBuildStatus">
      <summary>Resets the status every target in the project so that the next build will build all targets again.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Save(System.IO.TextWriter)">
      <summary>Saves the project in the specified <see cref="T:System.IO.TextWriter" /> object.</summary>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> object in which to save the project.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Save(System.String)">
      <summary>Saves the project to the specified file.</summary>
      <param name="projectFileName">The name of the file in which to save the project.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.Save(System.String,System.Text.Encoding)">
      <summary>Saves the project in the specified file with the specified encoding.</summary>
      <param name="projectFileName">The name of the file in which to save the project.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> value with which to save the file.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.SchemaFile">
      <summary>Gets or sets the XML schema file to use when validating the project.</summary>
      <returns>The XML schema file to use when validating the project.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project)">
      <summary>Sets the value of a property in the specified imported project.</summary>
      <param name="propertyName">The name of the property to change.</param>
      <param name="propertyValue">The value to assign the property.</param>
      <param name="condition">The condition to use on the property. Corresponds to the Condition attribute of the Property element.</param>
      <param name="importProject">The <see cref="T:Microsoft.Build.BuildEngine.Project" /> that contains the specified property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition)">
      <summary>Sets the value of a property in the specified imported project.</summary>
      <param name="propertyName">The name of the property to change.</param>
      <param name="propertyValue">The value to assign the property.</param>
      <param name="condition">The condition to use on the property. Corresponds to the Condition attribute of the Property element.</param>
      <param name="importedProject">The <see cref="T:Microsoft.Build.BuildEngine.Project" /> that contains the specified property.</param>
      <param name="position">A <see cref="T:Microsoft.Build.BuildEngine.PropertyPosition" /> value indicating the location to insert the property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)">
      <summary>Sets the value of a property in the specified imported project.</summary>
      <param name="propertyName">The name of the property to change.</param>
      <param name="propertyValue">The value to assign the property.</param>
      <param name="condition">The condition to use on the property. Corresponds to the Condition attribute of the Property element.</param>
      <param name="importedProject">The <see cref="T:Microsoft.Build.BuildEngine.Project" /> that contains the specified property.</param>
      <param name="position">A <see cref="T:Microsoft.Build.BuildEngine.PropertyPosition" /> value indicating the location to insert the property.</param>
      <param name="treatPropertyValueAsLiteral">true to treat the <paramref name="propertyValue" /> parameter as a literal value; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.SetProjectExtensions(System.String,System.String)">
      <summary>Sets the ProjectExtensions element of the project with the specified element name and content.</summary>
      <param name="id">The name of the XML element to create as a child of the ProjectExtensions element.</param>
      <param name="content">The text value of the created XML element.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String)">
      <summary>Sets the value of the specified property.</summary>
      <param name="propertyName">The name of the property to change.</param>
      <param name="propertyValue">The value to assign the property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String)">
      <summary>Sets the value of the specified property.</summary>
      <param name="propertyName">The name of the property to change.</param>
      <param name="propertyValue">The value to assign the property.</param>
      <param name="condition">The condition to use on the property. Corresponds to the Condition attribute of the Property element.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition)">
      <summary>Sets the value of the specified property.</summary>
      <param name="propertyName">The name of the property to change.</param>
      <param name="propertyValue">The value to assign the property.</param>
      <param name="condition">The condition to use on the property. Corresponds to the Condition attribute of the Property element.</param>
      <param name="position">A <see cref="T:Microsoft.Build.BuildEngine.PropertyPosition" /> value indicating the location to insert the property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)">
      <summary>Sets the value of the specified property.</summary>
      <param name="propertyName">The name of the property to change.</param>
      <param name="propertyValue">The value to assign the property.</param>
      <param name="condition">The condition to use on the property. Corresponds to the Condition attribute of the Property element.</param>
      <param name="position">A <see cref="T:Microsoft.Build.BuildEngine.PropertyPosition" /> value indicating the location to insert the property.</param>
      <param name="treatPropertyValueAsLiteral">true to treat the <paramref name="propertyValue" /> parameter as a literal value; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.Targets">
      <summary>Gets the targets in the project.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" /> of the targets in the project.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.TimeOfLastDirty">
      <summary>Gets a <see cref="T:System.DateTime" /> object indicating the time the project was last changed in a way that required it to be saved to a file.</summary>
      <returns>A <see cref="T:System.DateTime" /> object indicating the time the project was last changed in a way that required it to be saved to a file.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.ToolsVersion">
      <summary>Sets or gets the current version of the Toolset being used by the project.</summary>
      <returns>A string representing the version number of the Toolset.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.UsingTasks">
      <summary>Gets a collection of the UsingTask elements in the project.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" /> of the UsingTask elements in the project.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Project.Xml">
      <summary>Gets the XML representing the project.</summary>
      <returns>The full XML representing the project.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.ProjectLoadSettings">
      <summary>Defines how MSBuild loads a project. </summary>
    </member>
    <member name="F:Microsoft.Build.BuildEngine.ProjectLoadSettings.None">
      <summary>Load the project  normally. </summary>
    </member>
    <member name="F:Microsoft.Build.BuildEngine.ProjectLoadSettings.IgnoreMissingImports">
      <summary>Ignore nonexistent .targets files when loading the project.</summary>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.PropertyPosition">
      <summary>Specifies constants that define the location in the project to insert a property. </summary>
    </member>
    <member name="F:Microsoft.Build.BuildEngine.PropertyPosition.UseExistingOrCreateAfterLastPropertyGroup">
      <summary>Replace the existing Property element if it exists. Otherwise, if possible, create a new Property element as a child of an existing compatible PropertyGroup element. If necessary, create a new compatible PropertyGroup element immediately following the last PropertyGroup in the project.</summary>
    </member>
    <member name="F:Microsoft.Build.BuildEngine.PropertyPosition.UseExistingOrCreateAfterLastImport">
      <summary>Replace the existing Property element if it exists. Otherwise, create the Property after the last Import element in the project.</summary>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.RemoteErrorException">
      <summary>Wraps exceptions that occur on a different node. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.RemoteErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>ISerializable method which must be overridden since Exception implements this interface.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object representing information about the remote error exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object representing the context in which the remote error exception occurred.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.SolutionWrapperProject">
      <summary>This class is used to generate an MSBuild wrapper project for a solution file or standalone VC project.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.SolutionWrapperProject.Generate(System.String,System.String,Microsoft.Build.Framework.BuildEventContext)">
      <summary>Given the full path to a solution, returns a string containing the v3.5 MSBuild-format wrapper project for that solution.</summary>
      <returns>A string containing the path to the solution.</returns>
      <param name="solutionPath">Full path to the solution we are wrapping</param>
      <param name="toolsVersionOverride">May be null. If non-null, contains the ToolsVersion passed in on the command line</param>
      <param name="projectBuildEventContext">An event context for logging purposes.</param>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.Target">
      <summary>Represents a single Target element in an MSBuild project. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Target.AddNewTask(System.String)">
      <summary>Adds the specified Task element to the Target element.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildTask" /> object represents a child Task element of the Target element.</returns>
      <param name="taskName">The <see cref="T:Microsoft.Build.BuildEngine.BuildTask" /> object that represents the Task element to add to the Target element.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Target.Condition">
      <summary>Gets the Condition attribute value of the Target element.</summary>
      <returns>The Condition attribute value of the Target element.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Target.DependsOnTargets">
      <summary>Gets the DependsOnTargets attribute value of the Target element.</summary>
      <returns>The DependsOnTargets attribute value of the Target element.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Target.GetEnumerator">
      <summary>Gets an enumerator that iterates through the <see cref="T:Microsoft.Build.BuildEngine.BuildTask" /> objects in the <see cref="T:Microsoft.Build.BuildEngine.Target" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:Microsoft.Build.BuildEngine.BuildTask" /> objects in the <see cref="T:Microsoft.Build.BuildEngine.Target" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Target.Inputs">
      <summary>Gets or sets the items that are to be input into this target.</summary>
      <returns>A string representing the items.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Target.IsImported">
      <summary>Gets a value indicating whether the Target element was imported into the project.</summary>
      <returns>true if the Target element was imported into the project; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Target.Name">
      <summary>Gets the Name attribute value of the Target element.</summary>
      <returns>The Name attribute value of the Target element.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Target.Outputs">
      <summary>Gets or sets the expected outputs of this target.</summary>
      <returns>A string representing the outputs.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Target.RemoveTask(Microsoft.Build.BuildEngine.BuildTask)">
      <summary>Removes the specified Task element from the Target element.</summary>
      <param name="taskElement">The <see cref="T:Microsoft.Build.BuildEngine.BuildTask" /> object that represents the Task element to remove from the Target element.</param>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.TargetCollection">
      <summary>Represents a collection of all Target elements in a project. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.TargetCollection.AddNewTarget(System.String)">
      <summary>Adds a new Target element to the end of the project.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.Target" /> object representing the created Target element.</returns>
      <param name="targetName">The Name attribute of the new Target element.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.TargetCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the entire <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.TargetCollection.Count">
      <summary>Gets a value indicating the number of <see cref="T:Microsoft.Build.BuildEngine.Target" /> objects in the <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" />.</summary>
      <returns>An integer value representing the number of <see cref="T:Microsoft.Build.BuildEngine.Target" /> objects in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.TargetCollection.Exists(System.String)">
      <summary>Determines whether the specified <see cref="T:Microsoft.Build.BuildEngine.Target" /> exists in the <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" />.</summary>
      <returns>true if the Target element exists; otherwise, false.</returns>
      <param name="targetName">The Name attribute of the Target element to search for.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.TargetCollection.GetEnumerator">
      <summary>Gets an enumerator that iterates through the <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.TargetCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" /> is synchronized (thread safe); otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.TargetCollection.Item(System.String)">
      <summary>Gets the specified <see cref="T:Microsoft.Build.BuildEngine.Target" /> object in the <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" />.</summary>
      <returns>The <see cref="T:Microsoft.Build.BuildEngine.Target" /> object that contains the <see cref="P:Microsoft.Build.BuildEngine.Target.Name" /> property value specified by <paramref name="index" />.</returns>
      <param name="index">The Name attribute of the Target element in the collection.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.TargetCollection.RemoveTarget(Microsoft.Build.BuildEngine.Target)">
      <summary>Removes the specified Target element from the project.</summary>
      <param name="targetToRemove">The Name attribute of the Target element to remove.</param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.TargetCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.Toolset">
      <summary>Represents a Toolset in MSBuild. For more information about Toolsets, see Standard and Custom Toolset Configurations. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Toolset.#ctor(System.String,System.String)">
      <summary>Creates a <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> object.</summary>
      <param name="toolsVersion">A string representing the version of the <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> currently in use.</param>
      <param name="toolsPath">A string representing the path to the <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> currently in use.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Toolset.#ctor(System.String,System.String,Microsoft.Build.BuildEngine.BuildPropertyGroup)">
      <summary>Creates a <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> object.</summary>
      <param name="toolsVersion">A string representing the version of the <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> currently in use.</param>
      <param name="toolsPath">A string representing the path to the <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> currently in use.</param>
      <param name="buildProperties">A string representing the <see cref="T:Microsoft.Build.BuildEngine.Toolset" />-specific custom properties. </param>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Toolset.BuildProperties">
      <summary>Gets the <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> that is used to set <see cref="T:Microsoft.Build.BuildEngine.Toolset" />-specific custom properties.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> object.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Toolset.Clone">
      <summary>Creates a copy of the specified <see cref="T:Microsoft.Build.BuildEngine.Toolset" />.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Toolset.ToolsPath">
      <summary>Gets the path to the specified <see cref="T:Microsoft.Build.BuildEngine.Toolset" />.</summary>
      <returns>A string representing the path to the <see cref="T:Microsoft.Build.BuildEngine.Toolset" />.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.Toolset.ToolsVersion">
      <summary>Gets the version of the specified <see cref="T:Microsoft.Build.BuildEngine.Toolset" />.</summary>
      <returns>A string representing the version of the <see cref="T:Microsoft.Build.BuildEngine.Toolset" />.</returns>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.ToolsetCollection">
      <summary>Represents one or more <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> objects. A Toolset is a combination of a Toolset version (such as "2.0"), a tools path, and an optional set of associated properties.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ToolsetCollection.Add(Microsoft.Build.BuildEngine.Toolset)">
      <summary>Adds the specified <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> to this collection.</summary>
      <param name="item">A <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> object representing the Toolset to add to the collection.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ToolsetCollection.Clear">
      <summary>This method is not supported.</summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ToolsetCollection.Contains(Microsoft.Build.BuildEngine.Toolset)">
      <summary>Gets whether the collection contains a <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> with the specified <see cref="T:Microsoft.Build.BuildEngine.ToolsetCollection" /> name.</summary>
      <returns>true if the <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> is contained in the collection; otherwise, false. The default is false.</returns>
      <param name="item">Required. A string value representing the name of the <see cref="T:Microsoft.Build.BuildEngine.Toolset" />.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ToolsetCollection.Contains(System.String)">
      <summary>Gets whether the collection contains a <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> with the specified tools version.</summary>
      <returns>true if the <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> is contained in the collection; otherwise, false. The default is false.</returns>
      <param name="toolsVersion">Required. A string value representing the tools version associated with the <see cref="T:Microsoft.Build.BuildEngine.Toolset" />.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ToolsetCollection.CopyTo(Microsoft.Build.BuildEngine.Toolset[],System.Int32)">
      <summary>Copies the contents of the <see cref="T:Microsoft.Build.BuildEngine.ToolsetCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.Build.BuildEngine.ToolsetCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="Array" /> at which copying begins.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ToolsetCollection.Count">
      <summary>Gets a value indicating the number of <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> objects in the <see cref="T:Microsoft.Build.BuildEngine.ToolsetCollection" />.</summary>
      <returns>An integer value representing the number of <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> objects in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ToolsetCollection.GetEnumerator">
      <summary>Gets an enumerator that iterates through the <see cref="T:Microsoft.Build.BuildEngine.ToolsetCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:Microsoft.Build.BuildEngine.ToolsetCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ToolsetCollection.IsReadOnly">
      <summary>Gets whether the <see cref="T:Microsoft.Build.BuildEngine.ToolsetCollection" /> is read-only. <see cref="P:Microsoft.Build.BuildEngine.ToolsetCollection.IsReadOnly" /> always returns false because Toolsets are always writable.</summary>
      <returns>A boolean value indicating whether the <see cref="T:Microsoft.Build.BuildEngine.ToolsetCollection" /> is read-only.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ToolsetCollection.Item(System.String)">
      <summary>Gets the <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> associated with the specified tools version.</summary>
      <returns>A <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> object representing the toolset that matches the specified <paramref name="toolsVersion" />.</returns>
      <param name="toolsVersion">Required. A string value representing the tools version associated with the desired <see cref="T:Microsoft.Build.BuildEngine.Toolset" />.</param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ToolsetCollection.Remove(Microsoft.Build.BuildEngine.Toolset)">
      <summary>This method is not supported.</summary>
      <returns>Not supported.</returns>
      <param name="item">Not supported. </param>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.ToolsetCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Non-generic enumerator for the Toolsets in this collection.</summary>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.ToolsetCollection.ToolsVersions">
      <summary>Gets the names of the <see cref="T:Microsoft.Build.BuildEngine.Toolset" />s stored in this collection.</summary>
      <returns>An enumeration whose elements represent individual <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> objects in this collection.</returns>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations">
      <summary>An enumeration whose values control <see cref="T:Microsoft.Build.BuildEngine.Toolset" /> initialization. </summary>
    </member>
    <member name="F:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.None">
      <summary>Do not read Toolset information from any external location.</summary>
    </member>
    <member name="F:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.ConfigurationFile">
      <summary>Read Toolset information from the .exe configuration file.</summary>
    </member>
    <member name="F:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.Registry">
      <summary>Read Toolset information from the registry (HKLM\Software\Microsoft\MSBuild\ToolsVersions).</summary>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.UsingTask">
      <summary>Represents a single UsingTask element in an MSBuild project. </summary>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.UsingTask.AssemblyFile">
      <summary>Gets the AssemblyFile attribute value of the UsingTask element.</summary>
      <returns>The AssemblyFile attribute value of the UsingTask element.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.UsingTask.AssemblyName">
      <summary>Gets the AssemblyName attribute value of the UsingTask element.</summary>
      <returns>The AssemblyName attribute value of the UsingTask element.</returns>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.UsingTask.Condition">
      <summary>Gets the Condition attribute value of the UsingTask element.</summary>
      <returns>The Condition attribute value of the UsingTask element.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.UsingTask.IsImported">
      <summary>Gets a value indicating whether the UsingTask element was imported into the project.</summary>
      <returns>true if the UsingTask element was imported into the project; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.UsingTask.TaskName">
      <summary>Gets the TaskName attribute value of the UsingTask element.</summary>
      <returns>The TaskName attribute value of the UsingTask element.</returns>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.UsingTaskCollection">
      <summary>Represents a collection of all UsingTask elements in a project. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)">
      <summary>Copies the entire <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" /> to a compatible one-dimensional <see cref="T:System.Array" /> of <see cref="T:Microsoft.Build.BuildEngine.UsingTask" /> objects, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> of <see cref="T:Microsoft.Build.BuildEngine.UsingTask" /> objects that is the destination of the elements copied from <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the entire <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.UsingTaskCollection.Count">
      <summary>Gets a value indicating the number of <see cref="T:Microsoft.Build.BuildEngine.UsingTask" /> objects in the <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />.</summary>
      <returns>An integer value representing the number of <see cref="T:Microsoft.Build.BuildEngine.UsingTask" /> objects in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator">
      <summary>Gets an enumerator that iterates through the <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" /> is synchronized (thread safe); otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.Utilities">
      <summary>Contains utility methods used by MSBuild. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.Build.BuildEngine.Utilities.Escape(System.String)">
      <summary>Converts the specified string into a syntax that allows the MSBuild engine to interpret the character literally.</summary>
      <returns>The converted value of the specified string.</returns>
      <param name="unescapedExpression">The string to convert.</param>
    </member>
    <member name="T:Microsoft.Build.BuildEngine.WriteHandler">
      <summary>Represents the method that writes strings to a certain location, such as the console window or a window in an integrated development environment. </summary>
      <param name="message">The string to write.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.Build.Framework.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Framework</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Framework.AnyEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.AnyEventRaised" /> event of a build.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildEngineResult"></member>
    <member name="M:Microsoft.Build.Framework.BuildEngineResult.#ctor(System.Boolean,System.Collections.Generic.List{System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.ITaskItem[]}})">
      <summary>Constructor that takes the result of the build and a list of the target outputs per project.</summary>
      <param name="result">The result of the build.</param>
      <param name="targetOutputsPerProject">The list of outputs per project.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEngineResult.Result">
      <summary>Returns true if the build succeeded.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEngineResult.TargetOutputsPerProject">
      <summary>Outputs of the targets per project.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildErrorEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.ErrorRaised" /> event.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildErrorEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildErrorEventArgs.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" /> class with the specified <see cref="P:Microsoft.Build.Framework.BuildErrorEventArgs.SubCategory" />, <see cref="P:Microsoft.Build.Framework.BuildErrorEventArgs.Code" />, <see cref="P:Microsoft.Build.Framework.BuildErrorEventArgs.File" />, <see cref="P:Microsoft.Build.Framework.BuildErrorEventArgs.LineNumber" />, <see cref="P:Microsoft.Build.Framework.BuildErrorEventArgs.ColumnNumber" />, <see cref="P:Microsoft.Build.Framework.BuildErrorEventArgs.EndLineNumber" />, <see cref="P:Microsoft.Build.Framework.BuildErrorEventArgs.EndColumnNumber" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword" />, and <see cref="P:Microsoft.Build.Framework.BuildEventArgs.SenderName" /> values.</summary>
      <param name="subcategory">The custom subcategory of the event.</param>
      <param name="code">The error code of the event.</param>
      <param name="file">The name of the file associated with the event.</param>
      <param name="lineNumber">The line number that corresponds to the beginning of the section of code that raised the event.</param>
      <param name="columnNumber">The column number that corresponds to the beginning of the section of code that raised the event.</param>
      <param name="endLineNumber">The line number that corresponds to the end of the section of code that raised the event.</param>
      <param name="endColumnNumber">The column number that corresponds to the end of the section of code that raised the event.</param>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildErrorEventArgs.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)">
      <summary>This constructor which allows a timestamp to be set</summary>
      <param name="subcategory">event sub-category</param>
      <param name="code">event code</param>
      <param name="file">file associated with the event</param>
      <param name="lineNumber">line number (0 if not applicable)</param>
      <param name="columnNumber">column number (0 if not applicable)</param>
      <param name="endLineNumber">end line number (0 if not applicable)</param>
      <param name="endColumnNumber">end column number (0 if not applicable)</param>
      <param name="message">text message</param>
      <param name="helpKeyword">help keyword </param>
      <param name="senderName">name of event sender</param>
      <param name="eventTimestamp">Timestamp when event was created</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildErrorEventArgs.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime,System.Object[])">
      <summary>This constructor which allows a timestamp to be set</summary>
      <param name="subcategory">event sub-category</param>
      <param name="code">event code</param>
      <param name="file">file associated with the event</param>
      <param name="lineNumber">line number (0 if not applicable)</param>
      <param name="columnNumber">column number (0 if not applicable)</param>
      <param name="endLineNumber">end line number (0 if not applicable)</param>
      <param name="endColumnNumber">end column number (0 if not applicable)</param>
      <param name="message">text message</param>
      <param name="helpKeyword">help keyword </param>
      <param name="senderName">name of event sender</param>
      <param name="eventTimestamp">Timestamp when event was created</param>
      <param name="messageArgs">message arguments</param>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildErrorEventArgs.Code">
      <summary>Gets the error code of the event.</summary>
      <returns>The error code of the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildErrorEventArgs.ColumnNumber">
      <summary>Gets the column number that corresponds to the beginning of the section of code that raised the event.</summary>
      <returns>The column number that corresponds to the beginning of the section of code that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildErrorEventArgs.EndColumnNumber">
      <summary>Gets the column number that corresponds to the end of the section of code that raised the event.</summary>
      <returns>The column number that corresponds to the end of the section of code that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildErrorEventArgs.EndLineNumber">
      <summary>Gets the line number that corresponds to the end of the section of code that raised the event.</summary>
      <returns>The line number that corresponds to the end of the section of code that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildErrorEventArgs.File">
      <summary>Gets the name of the file that raised the event.</summary>
      <returns>The name of the file that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildErrorEventArgs.LineNumber">
      <summary>Gets the line number that corresponds to the beginning of the section of code that raised the event.</summary>
      <returns>The line number that corresponds to the beginning of the section of code that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildErrorEventArgs.ProjectFile">
      <summary>Gets or set the name of the project file which issued this event.</summary>
      <returns>Returns the name of the project file which issued this event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildErrorEventArgs.Subcategory">
      <summary>Gets the custom subtype of the event.</summary>
      <returns>The custom subtype of the event.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildErrorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.ErrorRaised" /> event of a build.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.AnyEventRaised" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildEventArgs.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildEventArgs" /> class with the specified <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword" />, and <see cref="P:Microsoft.Build.Framework.BuildEventArgs.SenderName" /> values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildEventArgs.#ctor(System.String,System.String,System.String,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildEventArgs" /> class.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
      <param name="eventTimestamp">The date and time to associate with the event.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventArgs.BuildEventContext">
      <summary>Gets or sets location contextual information. This is attached to logging events to define where they are located in relation to the process, engine, project, target, or task that is executing.</summary>
      <returns>A <see cref="T:Microsoft.Build.Framework.BuildEventContext" /> object representing the location contextual information.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword">
      <summary>Gets the Help keyword for the event.</summary>
      <returns>The Help keyword for the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventArgs.Message">
      <summary>Gets the message for the event.</summary>
      <returns>The message for the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventArgs.SenderName">
      <summary>Gets the name of the <see cref="T:System.Object" /> raising the event.</summary>
      <returns>The name of the <see cref="T:System.Object" /> raising the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventArgs.ThreadId">
      <summary>Gets an integer identifier for the thread that raised the event.</summary>
      <returns>An integer identifier for the thread that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventArgs.Timestamp">
      <summary>Gets the time the event was raised as a <see cref="T:System.DateTime" />.</summary>
      <returns>The time the event was raised as a <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildEventContext">
      <summary>Provides contextual location information for build events.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildEventContext.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildEventContext" /> class.</summary>
      <param name="nodeId">The node ID of the build event.</param>
      <param name="targetId">The target ID of the build event.</param>
      <param name="projectContextId">The project ID of the build event.</param>
      <param name="taskId">The task ID of the build event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildEventContext.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Constructs a BuildEventContext with a specified project instance id.</summary>
      <param name="nodeId">The node ID of the build event.</param>
      <param name="projectInstanceId">The project instance ID of the build event.</param>
      <param name="projectContextId">The project ID of the build event.</param>
      <param name="targetId">The target ID of the build event.</param>
      <param name="taskId">The task ID of the build event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildEventContext.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Constructs a BuildEventContext with a specific submission id</summary>
      <param name="submissionId">The submission ID of the build event.</param>
      <param name="nodeId">The node ID of the build event.</param>
      <param name="projectInstanceId">The project instance ID of the build event.</param>
      <param name="projectContextId">The project ID of the build event.</param>
      <param name="targetId">The target ID of the build event.</param>
      <param name="taskId">The task ID of the build event.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventContext.BuildRequestId">
      <summary>Retrieves the BuildRequest id. Note that this is not the same as the global request id on a BuildRequest or BuildResult.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildEventContext.Equals(System.Object)">
      <summary>Gets whether the references are the same.</summary>
      <returns>true if the references are equal, false otherwise.</returns>
      <param name="obj">The reference to compare.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildEventContext.GetHashCode">
      <summary>Gets a code comprised of the <see cref="P:Microsoft.Build.Framework.BuildEventContext.ProjectContextId" /> and the <see cref="P:Microsoft.Build.Framework.BuildEventContext.NodeId" />.</summary>
      <returns>An integer value representing the hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventContext.Invalid">
      <summary>Gets whether the context where the event occurred is valid.</summary>
      <returns>true if the context is valid; false otherwise.</returns>
    </member>
    <member name="F:Microsoft.Build.Framework.BuildEventContext.InvalidNodeId">
      <summary>The node ID of the target the event was in when the event was triggered.</summary>
    </member>
    <member name="F:Microsoft.Build.Framework.BuildEventContext.InvalidProjectContextId">
      <summary>The project ID of the target the event was in when the event was triggered.</summary>
    </member>
    <member name="F:Microsoft.Build.Framework.BuildEventContext.InvalidProjectInstanceId">
      <summary>The project instance ID of the target the event was in when the event was triggered.</summary>
    </member>
    <member name="F:Microsoft.Build.Framework.BuildEventContext.InvalidSubmissionId">
      <summary>The submission ID of the target the event was in when the event was triggered.</summary>
    </member>
    <member name="F:Microsoft.Build.Framework.BuildEventContext.InvalidTargetId">
      <summary>The name of the target the event was in when the event was triggered.</summary>
    </member>
    <member name="F:Microsoft.Build.Framework.BuildEventContext.InvalidTaskId">
      <summary>The task ID of the target the event was in when the event was triggered.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventContext.NodeId">
      <summary>Gets the node ID where the event occurred.</summary>
      <returns>An integer value representing the node ID.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildEventContext.op_Equality(Microsoft.Build.Framework.BuildEventContext,Microsoft.Build.Framework.BuildEventContext)">
      <summary>Override == so the equals comparison using this operator will be the same as .Equals</summary>
      <returns>True if the object values are identical, false if they are not identical</returns>
      <param name="left">Left hand side operand</param>
      <param name="right">Right hand side operand</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildEventContext.op_Inequality(Microsoft.Build.Framework.BuildEventContext,Microsoft.Build.Framework.BuildEventContext)">
      <summary>Override != so the equals comparison using this operator will be the same as ! Equals</summary>
      <returns>True if the object values are not identical, false if they are identical</returns>
      <param name="left">Left hand side operand</param>
      <param name="right">Right hand side operand</param>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventContext.ProjectContextId">
      <summary>Gets the ID of the project where the event occurred.</summary>
      <returns>An integer value representing the project ID.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventContext.ProjectInstanceId">
      <summary>Retrieves the project instance id.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventContext.SubmissionId">
      <summary>Retrieves the Submission id.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventContext.TargetId">
      <summary>Gets the ID of the target where the event occurred.</summary>
      <returns>An integer value representing the target ID.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildEventContext.TaskId">
      <summary>Gets the ID of the task where the event occurred.</summary>
      <returns>An integer value representing the task ID.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildFinishedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.BuildFinished" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildFinishedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildFinishedEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildFinishedEventArgs.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildFinishedEventArgs" /> class with the specified <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword" />, and <see cref="P:Microsoft.Build.Framework.BuildFinishedEventArgs.Succeeded" /> values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="succeeded">true to indicate the build succeeded; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildFinishedEventArgs.#ctor(System.String,System.String,System.Boolean,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildFinishedEventArgs" /> class.</summary>
      <param name="message">Text message.</param>
      <param name="helpKeyword">Help keyword.</param>
      <param name="succeeded">True if the event succeeded.</param>
      <param name="eventTimestamp">Message for the event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildFinishedEventArgs.#ctor(System.String,System.String,System.Boolean,System.DateTime,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildFinishedEventArgs" /> class.</summary>
      <param name="message">Text message.</param>
      <param name="helpKeyword">Help keyword.</param>
      <param name="succeeded">True if the event succeeded.</param>
      <param name="eventTimestamp">Date and time associated with the event.</param>
      <param name="messageArgs">Message for the event.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildFinishedEventArgs.Succeeded">
      <summary>Gets or sets a value indicating whether the build succeeded.</summary>
      <returns>true to indicate the build succeeded; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildFinishedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.BuildFinished" /> event of a build. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildFinishedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildMessageEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.MessageRaised" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildMessageEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildMessageEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildMessageEventArgs.#ctor(System.String,System.String,System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildMessageEventArgs" /> class with the specified <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.SenderName" />, and <see cref="P:Microsoft.Build.Framework.BuildMessageEventArgs.Importance" /> values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
      <param name="importance">A <see cref="T:Microsoft.Build.Framework.MessageImportance" /> value indicating the importance of the event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildMessageEventArgs.#ctor(System.String,System.String,System.String,Microsoft.Build.Framework.MessageImportance,System.DateTime)">
      <summary>Initializes the <see cref="Microsoft.Build.Framework.BuildMessageEventArgs" /> object.</summary>
      <param name="message">The message text.</param>
      <param name="helpKeyword">The keyword to link to a help topic.</param>
      <param name="senderName">The name of the event sender.</param>
      <param name="importance">The importance of the message</param>
      <param name="eventTimestamp">The data and time associated with the event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildMessageEventArgs.#ctor(System.String,System.String,System.String,Microsoft.Build.Framework.MessageImportance,System.DateTime,System.Object[])">
      <summary>Initializes the <see cref="Microsoft.Build.Framework.BuildMessageEventArgs" /> object.</summary>
      <param name="message">The message text.</param>
      <param name="helpKeyword">The keyword to link to a help topic.</param>
      <param name="senderName">The name of the event sender.</param>
      <param name="importance">The importance of the message</param>
      <param name="eventTimestamp">The data and time associated with the event.</param>
      <param name="messageArgs">The message arguments.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildMessageEventArgs.Importance">
      <summary>Gets the importance of the event.</summary>
      <returns>A <see cref="T:Microsoft.Build.Framework.MessageImportance" /> value indicating the importance of the event.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildMessageEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.MessageRaised" /> event of a build. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildMessageEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildStartedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.BuildStarted" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildStartedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildStartedEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildStartedEventArgs.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildStartedEventArgs" /> class with the specified message and Help keyword.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildStartedEventArgs.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Constructor to initialize all parameters.</summary>
      <param name="message">text message</param>
      <param name="helpKeyword">help keyword </param>
      <param name="environmentOfBuild">A dictionary which lists the environment of the build when the build is started.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildStartedEventArgs.#ctor(System.String,System.String,System.DateTime)">
      <summary>Constructor to allow timestamp to be set</summary>
      <param name="message">text message</param>
      <param name="helpKeyword">help keyword </param>
      <param name="eventTimestamp">Timestamp when the event was created</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildStartedEventArgs.#ctor(System.String,System.String,System.DateTime,System.Object[])">
      <summary>Constructor to allow timestamp to be set</summary>
      <param name="message">text message</param>
      <param name="helpKeyword">help keyword </param>
      <param name="eventTimestamp">Timestamp when the event was created</param>
      <param name="messageArgs">message args</param>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildStartedEventArgs.BuildEnvironment">
      <summary>Gets the environment dictionary which is used at the start of the build.</summary>
      <returns>Returns the environment dictionary which is used at the start of the build.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildStartedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.BuildStarted" /> event of a build.  </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildStartedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildStatusEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.StatusEventRaised" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildStatusEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildStatusEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildStatusEventArgs.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildStatusEventArgs" /> class with the specified <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword" />, and <see cref="P:Microsoft.Build.Framework.BuildEventArgs.SenderName" /> values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildStatusEventArgs.#ctor(System.String,System.String,System.String,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildStatusEventArgs" /> class with the specified <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword" />, and <see cref="P:Microsoft.Build.Framework.BuildEventArgs.SenderName" /> and <see cref="P:Microsoft.Build.Framework.BuildEventArgs.TimeStamp" /> values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
      <param name="eventTimestamp">The time the event was raised.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildStatusEventArgs.#ctor(System.String,System.String,System.String,System.DateTime,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildStatusEventArgs" /> class with the specified <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword" />, and <see cref="P:Microsoft.Build.Framework.BuildEventArgs.SenderName" /> and <see cref="P:Microsoft.Build.Framework.BuildEventArgs.TimeStamp" /> and <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" /> values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
      <param name="eventTimestamp">The time the event was raised.</param>
      <param name="messageArgs">The event message.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildStatusEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.StatusEventRaised" /> event of a build.  </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildStatusEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildWarningEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.WarningRaised" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildWarningEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildWarningEventArgs.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> class with the specified <see cref="P:Microsoft.Build.Framework.BuildWarningEventArgs.SubCategory" />, <see cref="P:Microsoft.Build.Framework.BuildWarningEventArgs.Code" />, <see cref="P:Microsoft.Build.Framework.BuildWarningEventArgs.File" />, <see cref="P:Microsoft.Build.Framework.BuildWarningEventArgs.LineNumber" />, <see cref="P:Microsoft.Build.Framework.BuildWarningEventArgs.ColumnNumber" />, <see cref="P:Microsoft.Build.Framework.BuildWarningEventArgs.EndLineNumber" />, <see cref="P:Microsoft.Build.Framework.BuildWarningEventArgs.EndColumnNumber" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword" />, and <see cref="P:Microsoft.Build.Framework.BuildEventArgs.SenderName" /> values.</summary>
      <param name="subcategory">The custom subcategory of the event.</param>
      <param name="code">The warning code of the event.</param>
      <param name="file">The name of the file associated with the event.</param>
      <param name="lineNumber">The line number that corresponds to the beginning of the section of code that raised the event.</param>
      <param name="columnNumber">The column number that corresponds to the beginning of the section of code that raised the event.</param>
      <param name="endLineNumber">The line number that corresponds to the end of the section of code that raised the event.</param>
      <param name="endColumnNumber">The column number that corresponds to the end of the section of code that raised the event.</param>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildWarningEventArgs.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)">
      <summary>This constructor allows timestamp to be set</summary>
      <param name="subcategory">event subcategory</param>
      <param name="code">event code</param>
      <param name="file">file associated with the event</param>
      <param name="lineNumber">line number (0 if not applicable)</param>
      <param name="columnNumber">column number (0 if not applicable)</param>
      <param name="endLineNumber">end line number (0 if not applicable)</param>
      <param name="endColumnNumber">end column number (0 if not applicable)</param>
      <param name="message">text message</param>
      <param name="helpKeyword">help keyword </param>
      <param name="senderName">name of event sender</param>
      <param name="eventTimestamp">custom timestamp for the event</param>
    </member>
    <member name="M:Microsoft.Build.Framework.BuildWarningEventArgs.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime,System.Object[])">
      <summary>This constructor allows timestamp to be set</summary>
      <param name="subcategory">event subcategory</param>
      <param name="code">event code</param>
      <param name="file">file associated with the event</param>
      <param name="lineNumber">line number (0 if not applicable)</param>
      <param name="columnNumber">column number (0 if not applicable)</param>
      <param name="endLineNumber">end line number (0 if not applicable)</param>
      <param name="endColumnNumber">end column number (0 if not applicable)</param>
      <param name="message">text message</param>
      <param name="helpKeyword">help keyword </param>
      <param name="senderName">name of event sender</param>
      <param name="eventTimestamp">custom timestamp for the event</param>
      <param name="messageArgs">message arguments</param>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildWarningEventArgs.Code">
      <summary>Gets the warning code of the event.</summary>
      <returns>The warning code of the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildWarningEventArgs.ColumnNumber">
      <summary>Gets the column number that corresponds to the beginning of the section of code that raised the event.</summary>
      <returns>The column number that corresponds to the beginning of the section of code that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildWarningEventArgs.EndColumnNumber">
      <summary>Gets the column number that corresponds to the end of the section of code that raised the event.</summary>
      <returns>The column number that corresponds to the end of the section of code that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildWarningEventArgs.EndLineNumber">
      <summary>Gets the line number that corresponds to the end of the section of code that raised the event.</summary>
      <returns>The line number that corresponds to the end of the section of code that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildWarningEventArgs.File">
      <summary>Gets the name of the file that raised the event.</summary>
      <returns>The name of the file that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildWarningEventArgs.LineNumber">
      <summary>Gets the line number that corresponds to the beginning of the section of code that raised the event.</summary>
      <returns>The line number that corresponds to the beginning of the section of code that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildWarningEventArgs.ProjectFile">
      <summary>Gets or sets the project which was building when the message was issued.</summary>
      <returns>Returns the project which was building when the message was issued.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.BuildWarningEventArgs.Subcategory">
      <summary>Gets the custom subcategory of the event.</summary>
      <returns>The custom subcategory of the event.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.BuildWarningEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.WarningRaised" /> event of a build. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.CustomBuildEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.CustomEventRaised" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.CustomBuildEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.CustomBuildEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.CustomBuildEventArgs.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.CustomBuildEventArgs" /> class with the specified <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword" />, and <see cref="P:Microsoft.Build.Framework.BuildEventArgs.SenderName" /> values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.CustomBuildEventArgs.#ctor(System.String,System.String,System.String,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.CustomBuildEventArgs" /> class.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
      <param name="eventTimestamp">The date and time to associate with the event.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.CustomBuildEventArgs.#ctor(System.String,System.String,System.String,System.DateTime,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.CustomBuildEventArgs" /> class.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
      <param name="eventTimestamp">The date and time to associate with the event.</param>
      <param name="messageArgs">The arguments for the message.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.CustomBuildEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.CustomEventRaised" /> event of a build. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.CustomBuildEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.CustomEventRaised" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs" /> class, with the specified values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
      <param name="projectFile">The project file name.</param>
      <param name="succeeded">true to indicate that the project built successfully; otherwise false.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs" /> class, with the specified values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
      <param name="projectFile">The project file name.</param>
      <param name="succeeded">true to indicate that the project built successfully; otherwise false.</param>
      <param name="eventTimestamp">The date and time the event was created.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ProjectFile">
      <summary>Gets the project file name that raised the event.</summary>
      <returns>The project file name that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.Succeeded">
      <summary>Gets a value indicating whether the build succeeded.</summary>
      <returns>true if the build succeeded; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.ExternalProjectStartedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.CustomEventRaised" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ExternalProjectStartedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ExternalProjectStartedEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ExternalProjectStartedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs" /> class, with the specified values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
      <param name="projectFile">The project file name.</param>
      <param name="targetNames">The names of the targets to build in the external project. This can be a null reference (Nothing in Visual Basic) if the external project is being built with the default targets.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.ExternalProjectStartedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs" /> class, with the specified values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="senderName">The source of the event.</param>
      <param name="projectFile">The project file name.</param>
      <param name="targetNames">The names of the targets to build in the external project. This can be a null reference (Nothing in Visual Basic) if the external project is being built with the default targets.</param>
      <param name="eventTimestamp">The date and time to associate with the event.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ProjectFile">
      <summary>Gets the project file that raised the event.</summary>
      <returns>The project file that raised the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ExternalProjectStartedEventArgs.TargetNames">
      <summary>Gets the target names that are being built in the project.</summary>
      <returns>The names of the targets being built in the external project. This can be a null reference (Nothing in Visual Basic) if the external project is being built with the default target.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.IBuildEngine">
      <summary>Provides a way for task authors to use a subset of the functionality of the MSBuild engine. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.IBuildEngine.BuildProjectFile(System.String,System.String[],System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Initiates a build of a project file. If the build is successful, the outputs, if any, of the specified targets are returned.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="projectFileName">The name of the project file to build.</param>
      <param name="targetNames">The names of the target in the project to build. Separate multiple targets with a semicolon (;).</param>
      <param name="globalProperties">An <see cref="T:System.Collections.IDictionary" /> of additional global properties to apply to the project. The key and value must be String data types.</param>
      <param name="targetOutputs">The outputs of each specified target.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.IBuildEngine.ColumnNumberOfTaskNode">
      <summary>Gets the line number of the task node within the project file that called it.</summary>
      <returns>The line number of the task node within the project file that called it.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.IBuildEngine.ContinueOnError">
      <summary>Returns true if the ContinueOnError flag was set to true for this particular task in the project file.</summary>
      <returns>true if the ContinueOnError flag was set to true for this particular task in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.IBuildEngine.LineNumberOfTaskNode">
      <summary>Gets the line number of the task node within the project file that called it.</summary>
      <returns>The line number of the task node within the project file that called it.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.IBuildEngine.LogCustomEvent(Microsoft.Build.Framework.CustomBuildEventArgs)">
      <summary>Raises a custom event to all registered loggers.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.IBuildEngine.LogErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs)">
      <summary>Raises an error event to all registered loggers.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.IBuildEngine.LogMessageEvent(Microsoft.Build.Framework.BuildMessageEventArgs)">
      <summary>Raises a message event to all registered loggers.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.IBuildEngine.LogWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs)">
      <summary>Raises a warning event to all registered loggers.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.IBuildEngine.ProjectFileOfTaskNode">
      <summary>Gets the full path to the project file that contained the call to this task.</summary>
      <returns>The full path to the project file that contained the call to this task.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.IBuildEngine2">
      <summary>Provides a way for task authors to use a subset of the functionality of the MSBuild engine.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.IBuildEngine2.BuildProjectFile(System.String,System.String[],System.Collections.IDictionary,System.Collections.IDictionary,System.String)">
      <summary>Initiates a build of a project file. If the build is successful, the outputs of the specified targets are returned, if any exist.</summary>
      <returns>true if the build was successful; otherwise, false.</returns>
      <param name="projectFileName">The name of the project file to build.</param>
      <param name="targetNames">The names of the target in the project to build. Separate multiple targets with a semicolon (;). Null values are acceptable.</param>
      <param name="globalProperties">An <see cref="T:System.Collections.IDictionary" /> of additional global properties to apply to the project. The key and value must be String data types.</param>
      <param name="targetOutputs">The outputs of each specified target. Null values are acceptable.</param>
      <param name="toolsVersion">Default value = "3.5." Specifies the Toolset version for the build to use. Null values are acceptable.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.IBuildEngine2.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.IDictionary[],System.String[],System.Boolean,System.Boolean)">
      <summary>Allows tasks to initiate parallel builds of the specified project files on systems with multiple processors or multiple core processors. If the builds are successful, the outputs of the specified targets are returned, if any exist.</summary>
      <returns>True if the build succeeded, false if otherwise.</returns>
      <param name="projectFileNames">The names of the project files to build.</param>
      <param name="targetNames">The names of the targets in the project to build. Separate multiple targets with a semicolon (;). Null values are acceptable.</param>
      <param name="globalProperties">An <see cref="T:System.Collections.IDictionary" /> of additional global properties to apply to the project. The key and value must be String data types. Array entries can be null.</param>
      <param name="targetOutputsPerProject">The outputs of each specified target. Null values are acceptable.</param>
      <param name="toolsVersion">Default value = "3.5." Specifies the Toolset version for the build to use. Null values are acceptable.</param>
      <param name="useResultsCache">If true, the operation runs only if the cache does not already contain the result. After the operation the result is stored in the cache.</param>
      <param name="unloadProjectsOnCompletion">If true the project is unloaded once the operation completes.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.IBuildEngine2.IsRunningMultipleNodes">
      <summary>Returns whether the system is running in single- or multi-processor mode.</summary>
      <returns>true if the system is running in multi-processor mode, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.IBuildEngine3">
      <summary>This interface extends IBuildEngine to provide a method allowing building project files in parallel.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.Generic.IList{System.String}[],System.String[],System.Boolean)">
      <summary>Allows tasks to initiate a build on a project file</summary>
      <returns>If the build is successful, the outputs of the specified targets are returned.</returns>
      <param name="projectFileNames">The project to build.</param>
      <param name="targetNames">The targets in the project to build (can be null).</param>
      <param name="globalProperties">An array of <see cref="System.Collections.IDictionary" /> of additional global properties to apply to the child project (array entries can be null). The keys and should both be strings.</param>
      <param name="removeGlobalProperties">A list of global properties which should be removed.</param>
      <param name="toolsVersion">A tools version recognized by the Engine that will be used during this build (can be null).</param>
      <param name="returnTargetOutputs">Should the target outputs be returned in the BuildEngineResult.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.IBuildEngine3.Reacquire">
      <summary>Waits to reacquire control after yielding.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.IBuildEngine3.Yield">
      <summary>Informs the system that this task has a long-running out-of-process component and other work can be done in the build while that work completes.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.ICancelableTask">
      <summary>Interface for tasks which can be cancelled. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ICancelableTask.Cancel">
      <summary>Instructs the task to exit as soon as possible, or to immediately exit if Execute is invoked after this method.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.IEventRedirector">
      <summary>Forwards build events to other loggers.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.IEventRedirector.ForwardEvent(Microsoft.Build.Framework.BuildEventArgs)">
      <summary>Called by the node loggers to forward build events to the central logger.</summary>
      <param name="buildEvent">The <see cref="T:Microsoft.Build.Framework.BuildEventArgs" /> to forward.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.IEventSource">
      <summary>Defines the events raised by the build engine. Loggers receive an object implementing this interface in their <see cref="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)" /> method and use it to subscribe to the events they are interested in receiving.</summary>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.AnyEventRaised">
      <summary>Occurs when a build raises any other type of build event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.BuildFinished">
      <summary>Occurs when a build finishes.</summary>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.BuildStarted">
      <summary>Occurs when a build starts.</summary>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.CustomEventRaised">
      <summary>Occurs when a build raises a custom event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.ErrorRaised">
      <summary>Occurs when a build raises an error.</summary>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.MessageRaised">
      <summary>Occurs when a build raises a message.</summary>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.ProjectFinished">
      <summary>Occurs when a project finishes building.</summary>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.ProjectStarted">
      <summary>Occurs when a project starts building.</summary>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.StatusEventRaised">
      <summary>Occurs when a build raises a status event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.TargetFinished">
      <summary>Occurs when a target finishes building.</summary>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.TargetStarted">
      <summary>Occurs when a target starts building.</summary>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.TaskFinished">
      <summary>Occurs when a task completes execution.</summary>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.TaskStarted">
      <summary>Occurs when a task begins execution.</summary>
    </member>
    <member name="E:Microsoft.Build.Framework.IEventSource.WarningRaised">
      <summary>Occurs when a build raises a warning.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.IForwardingLogger">
      <summary>Extends the <see cref="T:Microsoft.Build.Framework.ILogger" /> interface to provide properties to forward events to a logger running in a different process. It can also be used create filtering loggers.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.IForwardingLogger.BuildEventRedirector">
      <summary>Get or set by the build engine to allow node loggers to forward messages to the central logger.</summary>
      <returns>An <see cref="T:Microsoft.Build.Framework.IEventRedirector" /> representing the event redirector to forward messages to.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.IForwardingLogger.NodeId">
      <summary>Get or set by the build engine or node to inform the forwarding logger on which node it is running.</summary>
      <returns>An integer representing the node ID on which the build engine is running.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.IGeneratedTask">
      <summary>An interface implemented by tasks that are generated by <see cref="ITaskFactory" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.IGeneratedTask.GetPropertyValue(Microsoft.Build.Framework.TaskPropertyInfo)">
      <summary>Gets the property value.</summary>
      <returns>The value of the named property.</returns>
      <param name="property">The name of the property.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.IGeneratedTask.SetPropertyValue(Microsoft.Build.Framework.TaskPropertyInfo,System.Object)">
      <summary>Sets a property value.</summary>
      <param name="property">The name of the property.</param>
      <param name="value">The value to use.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.ILogger">
      <summary>Defines an MSBuild logger, which subscribes to build system events.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>Subscribes loggers to specific events. This method is called when the logger is registered with the build engine, before any events are raised.</summary>
      <param name="eventSource">The events available to loggers.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.ILogger.Parameters">
      <summary>Gets or sets the user-defined parameters of the logger. </summary>
      <returns>The logger parameters.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.ILogger.Shutdown">
      <summary>Releases the resources allocated to the logger at the time of initialization or during the build. This method is called when the logger is unregistered from the engine, after all events are raised. A host of MSBuild typically unregisters loggers immediately before quitting.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.ILogger.Verbosity">
      <summary>Gets or sets the level of detail to show in the event log.</summary>
      <returns>One of the enumeration values. The default is <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.INodeLogger">
      <summary>Defines a "parallel aware logger" in the build system.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <param name="eventSource">An <see cref="T:Microsoft.Build.Framework.IEventSource" /> object representing the build event source.</param>
      <param name="nodeCount">The number of CPUs.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.ITask">
      <summary>Defines a task, which is a unit of executable code used by MSBuild to perform build operations.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.ITask.BuildEngine">
      <summary>Gets or sets the build engine associated with the task.</summary>
      <returns>The build engine associated with the task.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Framework.ITask.Execute">
      <summary>Executes a task.</summary>
      <returns>true if the task executed successfully; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ITask.HostObject">
      <summary>Gets or sets any host object that is associated with the task.</summary>
      <returns>The host object associated with the task.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.Framework.ITaskFactory">
      <summary>Interface that a task factory Instance should implement.  </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)">
      <summary>Cleans up any context or state that may have been built up for a given task.</summary>
      <param name="task">The task to clean up.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)">
      <summary>Creates an instance of the task to be used in a batch. The task factory logging host will log messages in the context of the task.</summary>
      <returns>Returns an instance of the task to be used in a batch.</returns>
      <param name="taskFactoryLoggingHost">The logging host for the task factory.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.ITaskFactory.FactoryName">
      <summary>Gets the name of the factory.</summary>
      <returns>The name of the factory.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskFactory.GetTaskParameters">
      <summary>Get the descriptions for all the task's parameters.</summary>
      <returns>A non-null array of property descriptions.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)">
      <summary>Initializes this factory for instantiating tasks with a particular inline task block.</summary>
      <returns>A value indicating whether initialization was successful.</returns>
      <param name="taskName">Name of the task.</param>
      <param name="parameterGroup">The parameter group.</param>
      <param name="taskBody">The task body.</param>
      <param name="taskFactoryLoggingHost">The task factory logging host.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.ITaskFactory.TaskType">
      <summary>Gets the type of the task this factory will instantiate.</summary>
      <returns>The type of task.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.ITaskHost">
      <summary>Passes host objects from an integrated development environment (IDE) to individual tasks.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.ITaskItem">
      <summary>Defines an MSBuild item that can be consumed and emitted by tasks. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata">
      <summary>Gets the collection of custom metadata.</summary>
      <returns>The collection of custom metadata.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)">
      <summary>Copies the custom metadata entries to another item.</summary>
      <param name="destinationItem">The item to copy the metadata entries to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskItem.GetMetadata(System.String)">
      <summary>Gets the value of the specified metadata entry.</summary>
      <returns>The value of the <paramref name="attributeName" /> metadata.</returns>
      <param name="metadataName">The name of the metadata entry.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.Framework.ITaskItem.ItemSpec">
      <summary>Gets or sets the item specification.</summary>
      <returns>The item specification.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ITaskItem.MetadataCount">
      <summary>Gets the number of metadata entries associated with the item.</summary>
      <returns>The number of metadata entries associated with the item.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ITaskItem.MetadataNames">
      <summary>Gets the names of the metadata entries associated with the item.</summary>
      <returns>The names of the metadata entries associated with the item.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskItem.RemoveMetadata(System.String)">
      <summary>Removes the specified metadata entry from the item.</summary>
      <param name="metadataName">The name of the metadata entry to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskItem.SetMetadata(System.String,System.String)">
      <summary>Adds or changes a custom metadata entry to the item.</summary>
      <param name="metadataName">The name of the metadata entry.</param>
      <param name="metadataValue">The value of the metadata entry.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.ITaskItem2">
      <summary>This interface adds escaping support to the ITaskItem interface.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped">
      <summary>ITaskItem2 implementation which returns a clone of the metadata on this object.  Values returned are in their original escaped form.</summary>
      <returns>Returns the cloned metadata, with values' escaping preserved.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped">
      <summary>Gets or sets the item include value e.g. for disk-based items this would be the file path.</summary>
      <returns>Returns the item include value.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(System.String)">
      <summary>Allows the values of metadata on the item to be queried.</summary>
      <returns>Returns the escaped metadata value.</returns>
      <param name="metadataName">The metadata to be queried.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(System.String,System.String)">
      <summary>Allows a piece of custom metadata to be set on the item. Assumes that the value passed in is unescaped, and escapes the value as necessary in order to maintain its value.</summary>
      <param name="metadataName">The metadata name.</param>
      <param name="metadataValue">The metadata value.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.LazyFormattedBuildEventArgs">
      <summary>Stores strings for parts of a message delaying the formatting until it needs to be shown.  </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.LazyFormattedBuildEventArgs.#ctor">
      <summary>Default constructor.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.LazyFormattedBuildEventArgs.#ctor(System.String,System.String,System.String)">
      <summary>This constuctor allows all event data to be initialized.</summary>
      <param name="message">text message.</param>
      <param name="helpKeyword">help keyword.</param>
      <param name="senderName">name of event sender.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.LazyFormattedBuildEventArgs.#ctor(System.String,System.String,System.String,System.DateTime,System.Object[])">
      <summary>This constuctor that allows message arguments that are lazily formatted.</summary>
      <param name="message">text message.</param>
      <param name="helpKeyword">help keyword.</param>
      <param name="senderName">name of event sender.</param>
      <param name="eventTimestamp">Timestamp when event was created.</param>
      <param name="messageArgs">Message arguments.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.LazyFormattedBuildEventArgs.Message">
      <summary>Gets the formatted message.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute">
      <summary>Defines the metadata attribute that MSBuild uses to identify tasks that must be executed in their own application domains. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.LoggerException">
      <summary>Allows a logger to force the build to stop in an explicit way. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.LoggerException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.LoggerException" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.LoggerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.LoggerException" /> class with the values specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.LoggerException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.LoggerException" /> class with the specified values.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.LoggerException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.LoggerException" /> class with the values specified.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current excpetion. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.LoggerException.#ctor(System.String,System.Exception,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.LoggerException" /> class with the values specified.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current excpetion. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
      <param name="errorCode">The error code associated with the exception's message.</param>
      <param name="helpKeyword">The Help keyword for the error.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.LoggerException.ErrorCode">
      <summary>Gets the error code associated with this exception's message.</summary>
      <returns>The error code associated with this exception's message.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.LoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.Framework.LoggerException.HelpKeyword">
      <summary>Gets the F1-help keyword associated with this error.</summary>
      <returns>The F1-help keyword for the error.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.LoggerVerbosity">
      <summary>Specifies the available verbosity levels of a <see cref="T:Microsoft.Build.Utilities.Logger" />. </summary>
    </member>
    <member name="F:Microsoft.Build.Framework.LoggerVerbosity.Quiet">
      <summary>Quiet verbosity, which displays a build summary.</summary>
    </member>
    <member name="F:Microsoft.Build.Framework.LoggerVerbosity.Minimal">
      <summary>Minimal verbosity, which displays errors, warnings, messages with <see cref="T:Microsoft.Build.Framework.MessageImportance" /> values of <see cref="F:Microsoft.Build.Framework.MessageImportance.High" />, and a build summary.</summary>
    </member>
    <member name="F:Microsoft.Build.Framework.LoggerVerbosity.Normal">
      <summary>Normal verbosity, which displays errors, warnings, messages with <see cref="T:Microsoft.Build.Framework.MessageImportance" /> values of <see cref="F:Microsoft.Build.Framework.MessageImportance.High" />, some status events, and a build summary.</summary>
    </member>
    <member name="F:Microsoft.Build.Framework.LoggerVerbosity.Detailed">
      <summary>Detailed verbosity, which displays errors, warnings, messages with <see cref="T:Microsoft.Build.Framework.MessageImportance" /> values of <see cref="F:Microsoft.Build.Framework.MessageImportance.High" /> or <see cref="F:Microsoft.Build.Framework.MessageImportance.Normal" />, all status events, and a build summary.</summary>
    </member>
    <member name="F:Microsoft.Build.Framework.LoggerVerbosity.Diagnostic">
      <summary>Diagnostic verbosity, which displays all errors, warnings, messages, status events, and a build summary.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.MessageImportance">
      <summary>Specifies constants that define the importance of a build message. </summary>
    </member>
    <member name="F:Microsoft.Build.Framework.MessageImportance.High">
      <summary>A high importance message.</summary>
    </member>
    <member name="F:Microsoft.Build.Framework.MessageImportance.Normal">
      <summary>A normal importance message.</summary>
    </member>
    <member name="F:Microsoft.Build.Framework.MessageImportance.Low">
      <summary>A low importance message.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.OutputAttribute">
      <summary>Defines the metadata attribute that task authors use to identify task properties that output data from the task. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.OutputAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.OutputAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.ProjectFinishedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.ProjectFinished" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ProjectFinishedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ProjectFinishedEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ProjectFinishedEventArgs.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ProjectFinishedEventArgs" /> class with the specified <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword" />, <see cref="P:Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFile" />, and <see cref="P:Microsoft.Build.Framework.ProjectFinishedEventArgs.Succeeded" /> values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="projectFile">The project file associated with the event.</param>
      <param name="succeeded">true to indicate the build succeeded; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.ProjectFinishedEventArgs.#ctor(System.String,System.String,System.String,System.Boolean,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ProjectFinishedEventArgs" /> class.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="projectFile">The project file associated with the event.</param>
      <param name="succeeded">true to indicate the build succeeded; otherwise, false.</param>
      <param name="eventTimestamp">The date and time the event was created.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFile">
      <summary>Gets the project file associated with the event.</summary>
      <returns>The project file associated with the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ProjectFinishedEventArgs.Succeeded">
      <summary>Gets a value indicating whether the build succeeded.</summary>
      <returns>The value indicating whether the build succeeded.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.ProjectFinishedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.ProjectFinished" /> event of a build. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.ProjectFinishedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.ProjectStartedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.ProjectStarted" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ProjectStartedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ProjectStartedEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.ProjectStartedEventArgs.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable,Microsoft.Build.Framework.BuildEventContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ProjectStartedEventArgs" /> class with the specified values.</summary>
      <param name="projectId">The unique <see cref="P:Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectId" /> identifier for the project.</param>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="projectFile">The project file name.</param>
      <param name="targetNames">The targets to be built.</param>
      <param name="properties">A list of properties.</param>
      <param name="items">A list of items.</param>
      <param name="parentBuildEventContext">A <see cref="T:Microsoft.Build.Framework.BuildEventContext" /> value that defines location contextual information. This is attached to logging events to define where they are located in relation to the process, engine, project, target, or task that is executing.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.ProjectStartedEventArgs.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable,Microsoft.Build.Framework.BuildEventContext,System.DateTime)">
      <summary>This constructor allows event data to be initialized. Sender is assumed to be "MSBuild".</summary>
      <param name="projectId">project id</param>
      <param name="message">text message</param>
      <param name="helpKeyword">help keyword </param>
      <param name="projectFile">project name</param>
      <param name="targetNames">targets we are going to build (empty indicates default targets)</param>
      <param name="properties">list of properties</param>
      <param name="items">list of items</param>
      <param name="parentBuildEventContext">event context info for the parent project</param>
      <param name="eventTimestamp"></param>
    </member>
    <member name="M:Microsoft.Build.Framework.ProjectStartedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.ProjectStartedEventArgs" /> class with the specified values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="projectFile">The project file name.</param>
      <param name="targetNames">The targets to be built.</param>
      <param name="properties">A list of properties</param>
      <param name="items">A list of items.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.ProjectStartedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable,System.DateTime)">
      <summary>This constructor allows event data to be initialized. Also the timestamp can be set Sender is assumed to be "MSBuild".</summary>
      <param name="message">text message</param>
      <param name="helpKeyword">help keyword </param>
      <param name="projectFile">project name</param>
      <param name="targetNames">targets we are going to build (empty indicates default targets)</param>
      <param name="properties">list of properties</param>
      <param name="items">list of items</param>
      <param name="eventTimestamp"></param>
    </member>
    <member name="F:Microsoft.Build.Framework.ProjectStartedEventArgs.InvalidProjectId">
      <summary>A value representing an invalid project ID.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.ProjectStartedEventArgs.Items">
      <summary>Gets the list of items for the event.</summary>
      <returns>The list of items for the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ProjectStartedEventArgs.ParentProjectBuildEventContext">
      <summary>Gets the list of items for the event</summary>
      <returns>A <see cref="T:Microsoft.Build.Framework.BuildEventContext" /> object representing the list of items for the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectFile">
      <summary>Gets the project file associated with the event.</summary>
      <returns>The project file associated with the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectId">
      <summary>Gets the project file associated with the event.</summary>
      <returns>An integer representing the ID of the project file associated with the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ProjectStartedEventArgs.Properties">
      <summary>Gets the list of properties for the event.</summary>
      <returns>The list of properties for the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.ProjectStartedEventArgs.TargetNames">
      <summary>Gets the list of targets to be built in the project.</summary>
      <returns>The list of targets to be built in the project.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.ProjectStartedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.ProjectStarted" /> event of a build. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.ProjectStartedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.RequiredAttribute">
      <summary>Defines the metadata attribute that task authors use to identify required task properties. Task properties with this attribute must have a set value when the task is run. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.RequiredAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.RequiredAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.RequiredRuntimeAttribute">
      <summary>Defines the metadata attribute that task authors use to identify whether the task requires a specific version of the CLR runtime. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.RequiredRuntimeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.RequiredRuntimeAttribute" /> class.</summary>
      <param name="runtimeVersion">The version of the CLR runtime required prefaced with a "v," such as "v2.0."</param>
    </member>
    <member name="P:Microsoft.Build.Framework.RequiredRuntimeAttribute.RuntimeVersion">
      <summary>Gets the CLR runtime version the attribute was constructed with, such as "v2.0."</summary>
      <returns>A string containing the CLR runtime version required.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.RunInMTAAttribute">
      <summary>This attribute is used to mark a task class as explicitly not being required to run in the STA for COM. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.RunInMTAAttribute.#ctor">
      <summary>Default constructor.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.RunInSTAAttribute">
      <summary>This attribute is used to mark a task class as being required to run in a Single Threaded Apartment for COM.  </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.RunInSTAAttribute.#ctor">
      <summary>Default constructor.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.TargetFinishedEventArgs">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.TargetFinishedEventArgs" /> class. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.TargetFinishedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.TargetFinishedEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.TargetFinishedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.TargetFinishedEventArgs" /> class with the specified <see cref="P:Microsoft.Build.Framework.BuildEventArgs.Message" />, <see cref="P:Microsoft.Build.Framework.BuildEventArgs.HelpKeyword" />, <see cref="P:Microsoft.Build.Framework.TargetFinishedEventArgs.TargetName" />, <see cref="P:Microsoft.Build.Framework.TargetFinishedEventArgs.ProjectFile" />, and <see cref="P:Microsoft.Build.Framework.TargetFinishedEventArgs.Succeeded" /> values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="targetName">The name of the target associated with the event.</param>
      <param name="projectFile">The name of the project file associated with the event.</param>
      <param name="targetFile">The name of the target file.</param>
      <param name="succeeded">true to indicate the build succeeded; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.TargetFinishedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Collections.IEnumerable)">
      <summary>This constructor allows event data to be initialized. Sender is assumed to be "MSBuild".</summary>
      <param name="message">text message</param>
      <param name="helpKeyword">help keyword </param>
      <param name="targetName">target name</param>
      <param name="projectFile">project file</param>
      <param name="targetFile">file in which the target is defined</param>
      <param name="succeeded">true if target built successfully</param>
      <param name="targetOutputs">Target output items for the target. If batching will be null for everything except for the last target in the batch</param>
    </member>
    <member name="M:Microsoft.Build.Framework.TargetFinishedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.DateTime,System.Collections.IEnumerable)">
      <summary>This constructor allows event data to be initialized including the timestamp when the event was created. Sender is assumed to be "MSBuild".</summary>
      <param name="message">text message</param>
      <param name="helpKeyword">help keyword </param>
      <param name="targetName">target name</param>
      <param name="projectFile">project file</param>
      <param name="targetFile">file in which the target is defined</param>
      <param name="succeeded">true if target built successfully</param>
      <param name="eventTimestamp">Timestamp when the event was created</param>
      <param name="targetOutputs">Target output items for the target. If batching will be null for everything except for the last target in the batch</param>
    </member>
    <member name="P:Microsoft.Build.Framework.TargetFinishedEventArgs.ProjectFile">
      <summary>Gets the name of the project file associated with the event.</summary>
      <returns>the name of the project file associated with the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TargetFinishedEventArgs.Succeeded">
      <summary>Gets a value indicating whether the build of the target succeeded.</summary>
      <returns>The value indicating whether the build of the target succeeded.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFile">
      <summary>Gets the name of the file that contains the implementation of this target.</summary>
      <returns>The name of the file that contains the implementation of this target.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TargetFinishedEventArgs.TargetName">
      <summary>Gets the name of the target associated with the event.</summary>
      <returns>The name of the target associated with the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TargetFinishedEventArgs.TargetOutputs">
      <summary>Gets or sets an enumerator over all target outputs.</summary>
      <returns>Returns an enumerator over all target outputs.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.TargetFinishedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.TargetFinished" /> event of a build. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.TargetFinishedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.TargetStartedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.TargetStarted" /> event.  </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.TargetStartedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.TargetStartedEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.TargetStartedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Initalizes a new instance of the <see cref="T:Microsoft.Build.Framework.TargetStartedEventArgs" /> class with the valudes provided.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="targetName">The name of the target associated with the event.</param>
      <param name="projectFile">The name of the project file associated with the event.</param>
      <param name="targetFile">The name of the target file.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.TargetStartedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
      <summary>Represents the arguments for target started events.</summary>
      <param name="message">The text message.</param>
      <param name="helpKeyword">The help keyword.</param>
      <param name="targetName">The name of the target event.</param>
      <param name="projectFile">The project file.</param>
      <param name="targetFile">The target file.</param>
      <param name="parentTarget">The parent target.</param>
      <param name="eventTimestamp">The date and time the event was created.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.TargetStartedEventArgs.ParentTarget">
      <summary>Represents the target which caused this target to build.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.TargetStartedEventArgs.ProjectFile">
      <summary>Gets the name of the project file associated with the event.</summary>
      <returns>The name of the project file associated with the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TargetStartedEventArgs.TargetFile">
      <summary>Gets the name of the file that contains the implementation of this target.</summary>
      <returns>The name of the file that contains the implementation of this target.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TargetStartedEventArgs.TargetName">
      <summary>Gets the name of the target associated with the event.</summary>
      <returns>The name of the target associated with the event.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.TargetStartedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.TargetStarted" /> event of a build. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.TargetStartedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.TaskCommandLineEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.MessageRaised" /> event.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.TaskCommandLineEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.TaskCommandLineEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.TaskCommandLineEventArgs.#ctor(System.String,System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.TaskCommandLineEventArgs" /> class with the specified command line and <see cref="T:Microsoft.Build.Framework.MessageImportance" />.</summary>
      <param name="commandLine">The command line used by the task to run the underlying program.</param>
      <param name="taskName">The name of the task raising the event.</param>
      <param name="importance">The <see cref="T:Microsoft.Build.Framework.MessageImportance" /> of the message.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.TaskCommandLineEventArgs.#ctor(System.String,System.String,Microsoft.Build.Framework.MessageImportance,System.DateTime)">
      <param name="commandLine"></param>
      <param name="taskName"></param>
      <param name="importance"></param>
      <param name="eventTimestamp"></param>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskCommandLineEventArgs.CommandLine">
      <summary>Gets the command line used by the task to run the underlying program.</summary>
      <returns>The command line used by the task to run the underlying program.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskName">
      <summary>Gets the name of the task that raised the event.</summary>
      <returns>The name of the task that raised the event.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.TaskFinishedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.TaskFinished" /> event. </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.TaskFinishedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.TaskFinishedEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.TaskFinishedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.TaskFinishedEventArgs" /> class with the specified values.</summary>
      <param name="message">The text for the message.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="projectFile">The project file name.</param>
      <param name="taskFile">The file in which the task is defined.</param>
      <param name="taskName">The name of the task.</param>
      <param name="succeeded">true to indicate the task succeeded; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.TaskFinishedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.DateTime)">
      <param name="message">The text for the message.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="projectFile">The project file name.</param>
      <param name="taskFile">The file in which the task is defined.</param>
      <param name="taskName">The name of the task.</param>
      <param name="succeeded">true to indicate the task succeeded; otherwise, false.</param>
      <param name="eventTimestamp">When the event finished.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskFinishedEventArgs.ProjectFile">
      <summary>Gets the name of the project file associated with the event.</summary>
      <returns>The name of the project file associated with the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskFinishedEventArgs.Succeeded">
      <summary>Gets a value indicating whether the execution of the task succeeded.</summary>
      <returns>The value indicating whether the execution of the task succeeded.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFile">
      <summary>Gets the MSBuild file where the task is defined.</summary>
      <returns>The MSBuild file where the task is defined.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskFinishedEventArgs.TaskName">
      <summary>Gets the name of the task associated with the event.</summary>
      <returns>The name of the task associated with the event.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.TaskFinishedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.TaskFinished" /> event of a build. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.TargetFinishedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.TaskPropertyInfo">
      <summary>Represents the parameter information from the using task as a strongly typed class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.TaskPropertyInfo.#ctor(System.String,System.Type,System.Boolean,System.Boolean)">
      <summary>Encapsulates a list of parameters declared in the task.</summary>
      <param name="name">The name of the parameter</param>
      <param name="typeOfParameter">The type of the parameter</param>
      <param name="output">True if the parameter is both an output and an input parameter. False if the parameter is only an input parameter.</param>
      <param name="required">True if the parameter must be supplied to each invocation of the task.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskPropertyInfo.Name">
      <summary>Name of the property.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskPropertyInfo.Output">
      <summary>True of output properties</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskPropertyInfo.PropertyType">
      <summary>The type of the property</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskPropertyInfo.Required">
      <summary>True if the property is required.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.TaskStartedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Build.Framework.IEventSource.TaskStarted" /> event.  </summary>
    </member>
    <member name="M:Microsoft.Build.Framework.TaskStartedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.TaskStartedEventArgs" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.TaskStartedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.TaskStartedEventArgs" /> class with the specified values.</summary>
      <param name="message">The text of the event.</param>
      <param name="helpKeyword">The Help keyword associated with the event.</param>
      <param name="projectFile">The name of the project file associated with the event.</param>
      <param name="taskFile">The file in which the task is defined.</param>
      <param name="taskName">The name of the task.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.TaskStartedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Framework.TaskStartedEventArgs" /> class.</summary>
      <param name="message">The text message about the event.</param>
      <param name="helpKeyword">The help keyword.</param>
      <param name="projectFile">The project file.</param>
      <param name="taskFile">The file that defines the task.</param>
      <param name="taskName">The name of the task.</param>
      <param name="eventTimestamp">The date and time the task was created.</param>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskStartedEventArgs.ProjectFile">
      <summary>Gets the name of the project file associated with the event.</summary>
      <returns>The name of the project file associated with the event.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskStartedEventArgs.TaskFile">
      <summary>Gets the MSBuild file where the task was defined.</summary>
      <returns>The MSBuild file where the task was defined.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.TaskStartedEventArgs.TaskName">
      <summary>Gets the name of the task associated with the event.</summary>
      <returns>The name of the task associated with the event.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.TaskStartedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.TaskStarted" /> event of a build. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Build.Framework.TaskStartedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.Argument">
      <summary>Represents an argument to a <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Argument.#ctor">
      <summary>Default constructor required for XAML deserialization.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Argument.BeginInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Argument.EndInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Argument.IsRequired">
      <summary>Indicates whether the <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" /> pointed to by <see cref="P:Microsoft.Build.Framework.XamlTypes.Argument.Property" /> must be defined so that the definition of the <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" /> that owns this argument makes sense.</summary>
      <returns>Returns true if the BaseProperty must be defined; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Argument.Property">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" /> that this argument refers to.</summary>
      <returns>Returns the name of the <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" /> that this argument refers to.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Argument.Separator">
      <summary>Gets or sets the string used to separate the argument value from the parent <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" /> switch in the command line.</summary>
      <returns>Returns the string used to separate the argument value from the parent <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" /> switch.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.BaseProperty">
      <summary>Represents a <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> property.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.BaseProperty.#ctor">
      <summary>Default constructor. Required for deserializtion from a persisted format.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.Arguments">
      <summary>Gets or sets a list of arguments for this property.</summary>
      <returns>Returns the list of arguments for this property.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.BaseProperty.BeginInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.Category">
      <summary>Gets or sets the name of the category to which this property belongs.</summary>
      <returns>Returns the name of the category to which this property belongs.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.ContainingRule">
      <summary>Gets or sets the <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> that contains this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</summary>
      <returns>Returns the rule that contains this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.DataSource">
      <summary>Gets or sets the data source where the current value of this property is stored.</summary>
      <returns>Returns the data source where the current value of this property is stored.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.Default">
      <summary>Gets or sets the default value for this property.</summary>
      <returns>Returns the default value for this property.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.Description">
      <summary>Gets or sets a description of this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" /> for use by a prospective UI client.</summary>
      <returns>Returns the description of this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.DisplayName">
      <summary>Gets or sets a name that can be used by a prospective UI client to display this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</summary>
      <returns>Returns the display name of this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.BaseProperty.EndInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.F1Keyword">
      <summary>Gets or sets the keyword that is used to open the help page for this property.</summary>
      <returns>Returns the keyword that is used to open the help page for this property.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.HelpContext">
      <summary>Gets or sets the Help context to use when the user presses F1.</summary>
      <returns>Returns the Help context to use when the user presses F1.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.HelpFile">
      <summary>Gets or sets the Help file to use when the user presses F1.</summary>
      <returns>Returns the Help file to use when the user presses F1.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.HelpUrl">
      <summary>Gets or sets the URL of the Help page for this property. The page is opened when the user presses F1.</summary>
      <returns>Returns the URL of the Help page for this property.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.IncludeInCommandLine">
      <summary>Gets or sets a hint to the command-line constructor whether to include this property in the command line.</summary>
      <returns>Returns the hint to the command-line constructor.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.IsRequired">
      <summary>Gets or sets a flag that indicates whether this property is required to have a value set.</summary>
      <returns>Returns a flag that indicates whether this property is required to have a value set.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.Metadata">
      <summary>Gets or sets additional attributes of this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</summary>
      <returns>Returns additional attributes of this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.MultipleValuesAllowed">
      <summary>Gets or sets a switch that specifies whether this property allows multiple values to be supplied/selected simultaneously.</summary>
      <returns>Returns a switch that specifies whether this property allows multiple values to be supplied/selected simultaneously. If true, multiple values may be selected.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.Name">
      <summary>Gets or sets the name of this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</summary>
      <returns>Returns the name of this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.ReadOnly">
      <summary>Gets or sets a flag that indicates whether this property is read-only.</summary>
      <returns>Returns true if this is a read-only property; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.Separator">
      <summary>Gets or sets the token used to separate a switch from its value.</summary>
      <returns>Returns the token used to separate a switch from its value.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.Subcategory">
      <summary>Gets or sets the subcategory this property belongs to.</summary>
      <returns>Returns the subcategory this property belongs to.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.Switch">
      <summary>Gets or sets the switch representation of this property when the property represents a tool parameter.</summary>
      <returns>Returns the switch representation of this property.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.SwitchPrefix">
      <summary>Gets or sets the prefix for the switch representation of this property when this property represents a tool parameter.</summary>
      <returns>Returns the prefix for the switch representation of this property.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.ValueEditors">
      <summary>Gets or sets the list of value editors for this property.</summary>
      <returns>Returns the list of value editors for this property.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BaseProperty.Visible">
      <summary>Gets or sets a hint to the UI client that tells it whether to display this property.</summary>
      <returns>Returns a hint to the UI client that tells it whether to display this property.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.BoolProperty">
      <summary>Represents the schema of a Boolean property.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.BoolProperty.#ctor">
      <summary>The default constructor for a Boolean property.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.BoolProperty.ReverseSwitch">
      <summary>Gets or sets a flag that forces the logical negation of the value of a Boolean switch.</summary>
      <returns>Returns true if the value is logically negated; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.Category">
      <summary>Represents a category to which a <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" /> can belong.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Category.#ctor">
      <summary>Default constructor. Called during deserialization.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Category.BeginInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Category.Description">
      <summary>Gets or sets the description of this <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" />.</summary>
      <returns>Returns the description of this category.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Category.DisplayName">
      <summary>Gets or sets a name that can be used by a prospective UI client to display this <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" />.</summary>
      <returns>Returns the display name of this category.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Category.EndInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Category.HelpString">
      <summary>Gets or sets Help information for this <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" />.</summary>
      <returns>Returns Help information for this category.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Category.Name">
      <summary>Gets or sets the name of this <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" />.</summary>
      <returns>Returns the name of this category.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Category.Subtype">
      <summary>Gets or sets the subtype of this <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" />. </summary>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.CategorySchema">
      <summary>The CategorySchema provides a strongly-typed identity handle to the underlying schema data model.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.CategorySchema.#ctor">
      <summary>The default constructor for a category schema.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.ContentType">
      <summary>Used to deserialize the content type information</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ContentType.#ctor">
      <summary>Constructor</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ContentType.BeginInit">
      <summary>Begins initialization. See ISupportInitialize.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ContentType.DefaultContentTypeForItemType">
      <summary>Gets or sets a flag that determines whether default content type is available.</summary>
      <returns>Returns true if default content type is available.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ContentType.DisplayName">
      <summary>Serializes IContentType.DisplayName.</summary>
      <returns>Returns the serialized display name.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ContentType.EndInit">
      <summary>Ends initialization.  See ISupportInitialize.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ContentType.GetMetadata(System.String)">
      <summary>Gets the value of the given metadata name.</summary>
      <returns>Returns the value of the given metadata name. Returns null if the name isn't found in the metadata.</returns>
      <param name="metadataName">The name of the metadata whose value is to be retrieved.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ContentType.GetSchemaObjects(System.Type)">
      <summary>Returns an enumerator over all instances of static data that have the given type. </summary>
      <returns>Returns an enumerator over all instances of static data that have the given type. Returns Null or Empty list if no objects of the given type are provided by this node.</returns>
      <param name="type">The type of static data to retrieve.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ContentType.GetSchemaObjectTypes">
      <summary>Returns an enumerator over all types of static data for the data-driven features that this node contains.</summary>
      <returns>Returns an enumerator over all types of static data for the data-driven features that this node contains.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ContentType.ItemGroupName">
      <summary>Serializes IContentType.DefaultContentTypeForItemType</summary>
      <returns>Returns the serialized default content type for the item type.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ContentType.ItemType">
      <summary>Serializes IContentType.ItemType</summary>
      <returns>Returns the serialized item type.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ContentType.Metadata">
      <summary>Serializes content type's metadata. </summary>
      <returns>Returns the serialized metadata.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ContentType.Name">
      <summary>Serializes IContentType.Name.</summary>
      <returns>Returns the serialized name.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.DataSource">
      <summary>Represents the location and grouping for a <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.DataSource.#ctor">
      <summary>Default constructor. Required for correct XAML deserialization.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.DataSource.BeginInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.DataSource.EndInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.DataSource.HasConfigurationCondition">
      <summary>Gets or sets a flag that determines whether a property is configuration-dependent, as indicated by the presence of a configuration condition that is attached to the property definition at its persistence location.</summary>
      <returns>Returns true if a property is configuration-dependent; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.DataSource.ItemType">
      <summary>Gets or sets the item type of the data source.</summary>
      <returns>Returns the item type of the data source.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.DataSource.Label">
      <summary>Gets or sets the label of the MSBuild property group/item definition group to which a property/item definition metadata belongs. </summary>
      <returns>Returns the label of the property or item group.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.DataSource.PersistedName">
      <summary>Gets or sets the actual MSBuild property name used to read/write the value of this property.</summary>
      <returns>Returns the actual MSBuild property name used to read/write the value of this property.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.DataSource.Persistence">
      <summary>Gets or sets the storage location for this data source.</summary>
      <returns>Returns the storage location for this data source.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.DataSource.SourceType">
      <summary>Gets or sets the data type of the source, which governs how the data is treated during build.</summary>
      <returns>Returns the data type.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty">
      <summary>Represents the schema of an enumeration property.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty.#ctor">
      <summary>The default constructor for a dynamic enum property.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty.EnumProvider">
      <summary>Gets or sets the provider that produces the list of possible values for this property. </summary>
      <returns>Returns the provider.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty.ProviderSettings">
      <summary>Gets or sets a provider-specific set of options to pass to the provider.</summary>
      <returns>Returns the set of options.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.EnumProperty">
      <summary>Represents the schema of an enumeration property.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.EnumProperty.#ctor">
      <summary>The default enum property constructor.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.EnumProperty.AdmissibleValues">
      <summary>Gets or sets the list of possible values for this property. </summary>
      <returns>Returns the list of possible values for this property.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.EnumProperty.EndInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.EnumValue">
      <summary>Represents an admissible value of an <see cref="T:Microsoft.Build.Framework.XamlTypes.EnumProperty" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.EnumValue.#ctor">
      <summary>Default constructor. Required for XAML deserialization.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.EnumValue.Arguments">
      <summary>Gets or sets the list of arguments for this <see cref="T:Microsoft.Build.Framework.XamlTypes.EnumValue" />.</summary>
      <returns>Returns the list of arguments.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.EnumValue.Description">
      <summary>Gets or sets the description of this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" /> for use by a prospective UI client.</summary>
      <returns>Returns the description.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.EnumValue.DisplayName">
      <summary>Gets or sets the name that can be used by a prospective UI client to display this <see cref="T:Microsoft.Build.Framework.XamlTypes.EnumValue" />.</summary>
      <returns>Returns the name.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.EnumValue.HelpString">
      <summary>Gets or sets Help information for this <see cref="T:Microsoft.Build.Framework.XamlTypes.EnumValue" />.</summary>
      <returns>Returns the Help information.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.EnumValue.IsDefault">
      <summary>Gets or sets a flag that determines whether this <see cref="T:Microsoft.Build.Framework.XamlTypes.EnumValue" /> is the default value for the associated <see cref="T:Microsoft.Build.Framework.XamlTypes.EnumProperty" />.</summary>
      <returns>True if the enum value is the default value; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.EnumValue.Metadata">
      <summary>Gets or sets additional attributes of this <see cref="T:Microsoft.Build.Framework.XamlTypes.EnumValue" />.</summary>
      <returns>Returns the additional attributes.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.EnumValue.Name">
      <summary>Gets or sets the name of this <see cref="T:Microsoft.Build.Framework.XamlTypes.EnumValue" />.</summary>
      <returns>Returns the name.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.EnumValue.Switch">
      <summary>Gets or sets a switch representation of this property for the case when the parent <see cref="T:Microsoft.Build.Framework.XamlTypes.EnumProperty" /> represents a tool parameter.</summary>
      <returns>Returns the switch representation.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.EnumValue.SwitchPrefix">
      <summary>Gets or sets the prefix for the switch representation of this value for the case when the parent <see cref="T:Microsoft.Build.Framework.XamlTypes.EnumProperty" /> represents a tool parameter.</summary>
      <returns>Returns the switch prefix.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.FileExtension">
      <summary>A simple class that deserializes content type data.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.FileExtension.#ctor">
      <summary>Constructor</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.FileExtension.ContentType">
      <summary>Gets or sets the corresponding content type.</summary>
      <returns>Returns the corresponding content type.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.FileExtension.GetSchemaObjects(System.Type)">
      <summary>Returns an enumerator over all instances of static data that have the given type. </summary>
      <returns>Returns an enumerator over all instances of static data that have the given type. Returns Null or Empty list if no objects of the given type are provided by this node.</returns>
      <param name="type">The type of static data to retrieve.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.FileExtension.GetSchemaObjectTypes">
      <summary>Returns an enumerator over all types of static data for the data-driven features that this node contains.</summary>
      <returns>Returns an enumerator over all types of static data for the data-driven features that this node contains.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.FileExtension.Name">
      <summary>Gets or sets the name of the file extension.</summary>
      <returns>Returns the name of the file extension.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.IntProperty">
      <summary>Represent the schema of an integer property.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.IntProperty.#ctor">
      <summary>The default constructor for an integer property.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.IntProperty.EndInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.IntProperty.MaxValue">
      <summary>Gets or sets the maximum allowed value for this property.</summary>
      <returns>Returns the maximum allowed value. Returns null when this property is not set.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.IntProperty.MinValue">
      <summary>Gets or sets the minimum allowed value for this property.</summary>
      <returns>Returns the minimum allowed value. Returns null when this property is not set.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode">
      <summary>Defines an interface that all root classes from project schema XAML files must implement.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode.GetSchemaObjects(System.Type)">
      <summary>Returns an enumerator over all instances of static data that have the given type. </summary>
      <returns>Returns an enumerator over all instances of static data that have the given type. Returns Null or Empty list if no objects of the given type are provided by this node.</returns>
      <param name="type">The type of static data to retrieve.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode.GetSchemaObjectTypes">
      <summary>Returns an enumerator over all types of static data for the data-driven features that this node contains.</summary>
      <returns>Returns an enumerator over all types of static data for the data-driven features that this node contains.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.ItemType">
      <summary>Used to deserialize the item type information.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ItemType.#ctor">
      <summary>Constructor.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ItemType.BeginInit">
      <summary>Begins initialization.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ItemType.DefaultContentType">
      <summary>Serializes IItemType.ItemType.</summary>
      <returns>Returns the serialized default content type.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ItemType.DisplayName">
      <summary>Serializes IItemType.DisplayName</summary>
      <returns>Returns the serialized display name.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ItemType.EndInit">
      <summary>Ends initialization.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ItemType.GetSchemaObjects(System.Type)">
      <summary>Returns an enumerator over all instances of static data that have the given type. </summary>
      <returns>Returns an enumerator over all instances of static data that have the given type. Returns Null or Empty list if no objects of the given type are provided by this node.</returns>
      <param name="type">The type of static data to retrieve.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ItemType.GetSchemaObjectTypes">
      <summary>Returns an enumerator over all types of static data for the data-driven features that this node contains.</summary>
      <returns>Returns an enumerator over all types of static data for the data-driven features that this node contains.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ItemType.Name">
      <summary>Serializes IItemType.Name</summary>
      <returns>Returns the serialized item type name.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ItemType.UpToDateCheckInput">
      <summary>Gets or sets a switch that specifies whether item type serialization is included in an up-to-date check.</summary>
      <returns>Returns a switch that specifies whether item type serialization is included in an up-to-date check. If true, the serialization is included.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.NameValuePair">
      <summary>Represents a name-value pair. The name cannot be null or empty.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.NameValuePair.#ctor">
      <summary>Default constructor of a name-value pair.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.NameValuePair.Name">
      <summary>Gets or sets the name of a name-value pair.</summary>
      <returns>Returns the name.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.NameValuePair.Value">
      <summary>Gets or sets the value of a name-value pair.</summary>
      <returns>Gets the value.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions">
      <summary>Represents a data-driven XAML script project schema.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions.#ctor">
      <summary>The default constructor of a schema definition.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions.GetSchemaObjects(System.Type)">
      <summary>Returns an enumerator over all instances of static data that have the given type. </summary>
      <returns>Returns an enumerator over all instances of static data that have the given type. Returns Null or Empty list if there are no objects of the given type provided by this node.</returns>
      <param name="type">The type of static data to retrieve.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions.GetSchemaObjectTypes">
      <summary>Returns an enumerator over all types of static data for the data-driven features that this node contains.</summary>
      <returns>Returns an enumerator over all types of static data for the data-driven features that this node contains.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions.Nodes">
      <summary>Gets or sets the list of nodes for this schema definition.</summary>
      <returns>Returns the list of nodes for this schema definition.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.Rule">
      <summary>Used to represent the schema information for a Tool, a Custom Build Rule, a PropertyPage, and so on.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Rule.#ctor">
      <summary>Default constructor. Required for deserialization from a persisted format.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.AdditionalInputs">
      <summary>When this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> represents a Build Customization, this field defines the semicolon-separated list of additional inputs to be evaluated for the Build Customization target.</summary>
      <returns>Returns a semicolon-separated list of additional inputs.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Rule.BeginInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.Categories">
      <summary>Gets or sets the list of <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" /> categories that the properties in this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> belong to.</summary>
      <returns>Returns the list of properties.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.CommandLine">
      <summary>When this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> represents a Build Customization, this field represents the command-line template to be used by a Build Customization task to invoke the tool.</summary>
      <returns>Returns the command-line template.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.DataSource">
      <summary>The <see cref="P:Microsoft.Build.Framework.XamlTypes.Rule.DataSource" /> for the properties in this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" />. This is overridden by any data source that is defined locally for a property.</summary>
      <returns>Returns the data source.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.Description">
      <summary>Gets or sets a description of this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> for use by a prospective UI client.</summary>
      <returns>Returns the description.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.DisplayName">
      <summary>Gets or sets a name that can be used by a prospective UI client to display this <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />.</summary>
      <returns>Returns the name.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Rule.EndInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.EvaluatedCategories">
      <summary>Returns the union of XAML specified <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" /> categories and auto-generated <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" /> categories. The latter are created from any missing categories that are referred to by the properties in this Rule. The auto-generated <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" /> categories only have their names set.</summary>
      <returns>Returns the union of categories.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.ExecutionDescription">
      <summary>When this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> represents a Build Customization, this field represents the message to be displayed before a Build Customization is executed during the build.</summary>
      <returns>Returns the message.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.FileExtension">
      <summary>When this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> represents a Build Customization, this field represents the file name extension to associate.</summary>
      <returns>Returns the file name extension.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Rule.GetPropertiesByCategory">
      <summary>Returns a dictionary of all properties partitioned into categories. </summary>
      <returns>Returns a dictionary whose keys are the <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" /> names and whose values are the list of properties in that category. The returned value is never null.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Rule.GetPropertiesInCategory(System.String)">
      <summary>Returns the list of properties in a <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" />. </summary>
      <returns>Returns the list of properties in a <see cref="T:Microsoft.Build.Framework.XamlTypes.Category" />. Returns null if this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> does not contain this category.</returns>
      <param name="categoryName">The name of the category whose properties are to be returned.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Rule.GetSchemaObjects(System.Type)">
      <summary>Returns an enumerator over all instances of static data that have the given type. </summary>
      <returns>Returns an enumerator over all instances of static data that have the given type. Returns Null or Empty list if no objects of the given type are provided by this node.</returns>
      <param name="type">The type of static data to retrieve.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.Rule.GetSchemaObjectTypes">
      <summary>Returns an enumerator over all types of static data for the data-driven features that this node contains.</summary>
      <returns>Returns an enumerator over all types of static data for the data-driven features that this node contains.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.HelpString">
      <summary>Gets or sets Help information for this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" />.</summary>
      <returns>Returns the Help information.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.Name">
      <summary>The name of this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" />.</summary>
      <returns>Returns the name.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.Order">
      <summary>Gets or sets a suggestion to a prospective UI client for the relative location of this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> compared to all other Rules in the system.</summary>
      <returns>Returns the suggestion.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.Outputs">
      <summary>When this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> represents a Build Customization, this field defines the semicolon-separated list of outputs that are to be evaluated for the Build Customization target.</summary>
      <returns>Returns the outputs.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.PageTemplate">
      <summary>Gets or sets the UI rendering template that is used to display this Rule.</summary>
      <returns>Returns the UI template.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.Properties">
      <summary>Gets or sets the list of properties in this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" />. </summary>
      <returns>Returns the list of properties.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.Separator">
      <summary>Gets or sets a token that is used to separate a property switch from its value.</summary>
      <returns>Returns the token separator.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.ShowOnlyRuleProperties">
      <summary>Gets or sets a flag that determines whether to hide the command-line category. </summary>
      <returns>Returns true if command-line categories are hidden; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.SupportsFileBatching">
      <summary>Gets or sets a flag that determines whether multiple files can be batched on one command-line invocation.</summary>
      <returns>Returns true if multiple files can be batched; otherwise, false.</returns>
    </membe