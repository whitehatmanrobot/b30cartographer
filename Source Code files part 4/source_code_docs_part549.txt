imation.LinearSizeKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearSizeKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSizeKeyFrame.#ctor(System.Windows.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearSizeKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSizeKeyFrame.#ctor(System.Windows.Size,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearSizeKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSizeKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearSizeKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearSizeKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSizeKeyFrame.InterpolateValueCore(System.Windows.Size,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearVector3DKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Vector3D" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVector3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVector3DKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVector3DKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVector3DKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVector3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearVector3DKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearVector3DKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVector3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearVectorKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Vector" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVectorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVectorKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVectorKeyFrame.#ctor(System.Windows.Vector)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVectorKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVectorKeyFrame.#ctor(System.Windows.Vector,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVectorKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVectorKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearVectorKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearVectorKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVectorKeyFrame.InterpolateValueCore(System.Windows.Vector,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.MatrixAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Media.Matrix" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)">
      <summary>When implemented in a derived class, calculates the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Media.Matrix" /> property along a set of <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates the current output value of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.MatrixAnimationUsingPath">
      <summary>Animates the value of a <see cref="T:System.Windows.Media.Matrix" /> property by using a <see cref="T:System.Windows.Media.PathGeometry" /> to generate the animated values. This animation can be used to move a visual object along a path. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />.          </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent">
      <summary>Gets or sets a value indicating whether the object rotates along the tangent of the path.  </summary>
      <returns>true if the object will rotate along the tangent of the path; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />.</summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default is false. </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative">
      <summary>Gets or sets a value that specifies whether the rotation angle of the animated matrix should accumulate over repetitions.  </summary>
      <returns>true if the animation's rotation angle should accumulate over repetitions; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative">
      <summary>Gets or sets a value indicating whether the offset produced by the animated matrix will accumulate over repetitions.  </summary>
      <returns>true if the object will accumulate over repeats of the animation; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged">
      <summary>Called when this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> is modified.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry">
      <summary>Gets or sets the geometry used to generate this animation's output values.  </summary>
      <returns>The geometry used to generate this animation's output values. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.MatrixKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrame.#ctor(System.Windows.Media.Matrix)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrame.#ctor(System.Windows.Media.Matrix,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrame.InterpolateValue(System.Windows.Media.Matrix,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrame.InterpolateValueCore(System.Windows.Media.Matrix,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.MatrixKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Add(System.Windows.Media.Animation.MatrixKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Contains(System.Windows.Media.Animation.MatrixKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.CopyTo(System.Windows.Media.Animation.MatrixKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.IndexOf(System.Windows.Media.Animation.MatrixKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.MatrixKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Remove(System.Windows.Media.Animation.MatrixKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Object" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ObjectAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationBase.GetCurrentValueCore(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames">
      <summary> Animates the value of an <see cref="T:System.Object" /> property along a set of <see cref="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames" /> over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> object is read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.GetCurrentValueCore(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.#ctor(System.Object,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.InterpolateValue(System.Object,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.InterpolateValueCore(System.Object,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ObjectKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ObjectKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Add(System.Windows.Media.Animation.ObjectKeyFrame)">
      <summary>Adds an <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to the end of this collection.</summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to add.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Clear">
      <summary>Removes all key frames from the collection.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Contains(System.Windows.Media.Animation.ObjectKeyFrame)">
      <summary>Indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The key frame to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.CopyTo(System.Windows.Media.Animation.ObjectKeyFrame[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> to the specified one dimensional <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> array, started at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> array that is the destination of the key frames copied from this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</summary>
      <returns>An empty collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.IndexOf(System.Windows.Media.Animation.ObjectKeyFrame)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ObjectKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> has a fixed size.</summary>
      <returns>true if this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> is read-only.</summary>
      <returns>true if this collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> is synchronized (thread-safe)</summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Remove(System.Windows.Media.Animation.ObjectKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.ParallelTimeline">
      <summary>Defines a segment of time that may contain child <see cref="T:System.Windows.Media.Animation.Timeline" /> objects. These child timelines become active according to their respective <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> properties. Also, child timelines are able to overlap (run in parallel) with each other.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />.</summary>
      <param name="beginTime">The <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> and <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
      <param name="beginTime">The <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
      <param name="duration">The <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />, and <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />.</summary>
      <param name="beginTime">The <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
      <param name="duration">The <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
      <param name="repeatBehavior">The <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore">
      <summary> Creates a new instance of this <see cref="T:System.Windows.Freezable" />.              </summary>
      <returns>The new <see cref="T:System.Windows.Freezable" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary> Return the natural duration (duration of a single iteration) from a specified <see cref="T:System.Windows.Media.Animation.Clock" />. </summary>
      <returns>The <see cref="T:System.Windows.Duration" /> quantity representing the natural duration.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> to return the natural duration from.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior">
      <summary>Gets or sets a value that specifies how this timeline will behave when one or more of its <see cref="T:System.Windows.Media.Animation.Timeline" /> children slips.  </summary>
      <returns>A value that indicates how this timeline will behave when one or more of its <see cref="T:System.Windows.Media.Animation.Timeline" /> children slips. The default value is <see cref="F:System.Windows.Media.Animation.SlipBehavior.Grow" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.PathAnimationSource">
      <summary>Specifies the output property value of the path that is used to drive the animation. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.PathAnimationSource.X">
      <summary>Specifies the x-coordinate offset during the progression along an animation sequence path. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.PathAnimationSource.Y">
      <summary>Specifies the y-coordinate offset during the progression along an animation sequence path. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.PathAnimationSource.Angle">
      <summary>Specifies the tangent angle of rotation during the progression along an animation sequence path.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Point3DAnimation">
      <summary>Animates the value of a <see cref="T:System.Windows.Media.Media3D.Point3D" /> property using linear interpolation between two values. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration.</summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior.</summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.By" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Point3DAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" />.</summary>
      <returns>The Point3Danimation is created with all properties set to their default value.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.EasingFunction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.From">
      <summary> Gets or sets the animation's starting value.   </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.From" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.GetCurrentValueCore(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" />.</summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.To">
      <summary> Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Point3DAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Media.Media3D.Point3D" /> value.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Point3DAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.GetCurrentValue(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation. </summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.GetCurrentValueCore(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" />. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Media.Media3D.Point3D" /> property along a set of <see cref="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Point3DKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrame.InterpolateValue(System.Windows.Media.Media3D.Point3D,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Point3D,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Point3DKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Add(System.Windows.Media.Animation.Point3DKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Contains(System.Windows.Media.Animation.Point3DKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.CopyTo(System.Windows.Media.Animation.Point3DKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />. </summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />.              </summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />. </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or false if it cannot be made unmodifiable. If <paramref name="isChecking" /> is false, this method returns true if the if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having made the actual change in frozen status to this object.</returns>
      <param name="isChecking">true if the <see cref="T:System.Windows.Freezable" /> instance should actually freeze itself when this method is called. false if the <see cref="T:System.Windows.Freezable" /> should simply return whether it can be frozen.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.IndexOf(System.Windows.Media.Animation.Point3DKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection. </summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Point3DKeyFrame)">
      <summary> Inserts a <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> into a specific location within the collection.  </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection is frozen. </summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates if the collection is read-only. </summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe).</summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Remove(System.Windows.Media.Animation.Point3DKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary> This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimation">
      <summary>Animates the value of a <see cref="T:System.Windows.Point" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor(System.Windows.Point,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor(System.Windows.Point,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.By" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" />.       </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.EasingFunction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.From">
      <summary> Gets or sets the animation's starting value.  </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.From" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.PointAnimation" />.  </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.IsAdditive">
      <summary> Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.To">
      <summary> Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Point" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationBase.GetCurrentValue(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationBase.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The current value of this animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Point" /> property along a set of <see cref="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.PointKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.PointKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimationUsingPath">
      <summary>Animates the value of a <see cref="T:System.Windows.Point" /> property between two or more target values using a <see cref="T:System.Windows.Media.PathGeometry" /> to specify those values. This animation can be used to move a visual object along a path.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingPath.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingPath.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingPath.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />.          </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingPath.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />.  </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingPath.IsAdditive">
      <summary> Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingPath.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingPath.OnChanged">
      <summary>Called when this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" /> is modified.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry">
      <summary>Specifies the geometry used to generate this animation's output values.  </summary>
      <returns>The path used to generate this animation's output values. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometryProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointKeyFrame">
      <summary>Defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.#ctor(System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.#ctor(System.Windows.Point,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.InterpolateValue(System.Windows.Point,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.InterpolateValueCore(System.Windows.Point,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> property. The default is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.Value">
      <summary>Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Add(System.Windows.Media.Animation.PointKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Clone">
      <summary> Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Contains(System.Windows.Media.Animation.PointKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.CopyTo(System.Windows.Media.Animation.PointKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.IndexOf(System.Windows.Media.Animation.PointKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.PointKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.PointKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Remove(System.Windows.Media.Animation.PointKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.PowerEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = tp where p is equal to the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> property.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PowerEase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PowerEase.Power">
      <summary>Gets or sets the exponential power of the animation interpolation. For example, a value of 7 will create an animation interpolation curve that follows the formula f(t) = t7.</summary>
      <returns>The exponential power of the animation interpolation. This value must be greater or equal to 0. The default is 2.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PowerEase.PowerProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.QuadraticEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t2</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuadraticEase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.QuarticEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t4.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuarticEase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime"> Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.QuaternionAnimation">
      <summary>Animates the value of a <see cref="T:System.Windows.Media.Media3D.Quaternion" /> property between two target values using    linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Duration)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" /> using the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> and <see cref="T:System.Windows.Duration" />.</summary>
      <param name="toValue">Quaternion to which to animate.</param>
      <param name="duration">Duration of the QuaternionAnimation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" /> using the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" />, <see cref="T:System.Windows.Duration" />, and <see cref="T:System.Windows.Media.Animation.FillBehavior" />.</summary>
      <param name="toValue">Quaternion to which to animate.</param>
      <param name="duration">Duration of the QuaternionAnimation.</param>
      <param name="fillBehavior">Behavior of the timeline outside its active period.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Duration)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" /> using the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to another specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> over the specified <see cref="T:System.Windows.Duration" />.</summary>
      <param name="fromValue">Quaternion that from which to animate.</param>
      <param name="toValue">Quaternion to which to animate.</param>
      <param name="duration">Duration of the QuaternionAnimation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" /> using the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to another specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> over the specified <see cref="T:System.Windows.Duration" />, with the specified behavior at the end of the timeline.</summary>
      <param name="fromValue">Quaternion from which to animate.</param>
      <param name="toValue">Quaternion to which to animate.</param>
      <param name="duration">Duration of the QuaternionAnimation.</param>
      <param name="fillBehavior">Behavior of the timeline outside its active period.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.By">
      <summary>Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionAnimation.ByProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.By" /> dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.By" /> dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Quaternion" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" />.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.EasingFunction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.From">
      <summary>Gets or sets the animation's starting value.  </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionAnimation.FromProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.From" /> dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.From" /> dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.GetCurrentValueCore(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" />.</summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.To">
      <summary>  Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionAnimation.ToProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.To" /> dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.To" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.UseShortestPath">
      <summary>Gets or sets a Boolean value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions.</summary>
      <returns>Boolean value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionAnimation.UseShortestPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.UseShortestPath" /> dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.UseShortestPath" /> dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.QuaternionAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Media.Media3D.Quaternion" /> value.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuaternionAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.GetCurrentValue(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.GetCurrentValueCore(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames">
      <summary>Animates the value of a <see cref="T:System.Windows.Media.Media3D.Quaternion" /> property along a set of <see cref="P:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.KeyFrames" /> over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object. </summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.QuaternionKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrame.InterpolateValue(System.Windows.Media.Media3D.Quaternion,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Quaternion,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Add(System.Windows.Media.Animation.QuaternionKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Contains(System.Windows.Media.Animation.QuaternionKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.CopyTo(System.Windows.Media.Animation.QuaternionKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.IndexOf(System.Windows.Media.Animation.QuaternionKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.QuaternionKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Remove(System.Windows.Media.Animation.QuaternionKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.QuinticEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t5.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuinticEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuinticEase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuinticEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuinticEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.RectAnimation">
      <summary>Animates the value of a <see cref="T:System.Windows.Rect" /> property between two target values using linear interpolation. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RectAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RectAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RectAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Rect,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RectAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Rect,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RectAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RectAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.RectAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.RectAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.RectAnimation.By" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.RectAnimation" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.RectAnimation" />.            </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RectAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.RectAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.RectAnimation.EasingFunction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.RectAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RectAnimation.From">
      <summary> Gets or sets the animation's starting value.  </summary>
      <returns>The starting value of the animation. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.RectAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.RectAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.RectAnimation.From" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimation.GetCurrentValueCore(System.Windows.Rect,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.RectAnimation" />.</summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RectAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RectAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RectAnimation.To">
      <summary> Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.RectAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.RectAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.RectAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.RectAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Rect" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RectAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.RectAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationBase.GetCurrentValue(System.Windows.Rect,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of this animation. </returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationBase.GetCurrentValueCore(System.Windows.Rect,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The current value of this animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RectAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames">
      <summary> Animates the value of a property that takes a <see cref="T:System.Windows.Rect" /> along a set of key frames.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to add as the child of this <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="child" /> parameter is not a <see cref="T:System.Windows.Media.Animation.RectKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text to add to the <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">Child text cannot be added because <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> does not accept text as a child until a derived class overrides this behavior to allow text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of a <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> object read-only (frozen) or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> object. </summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Rect,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provides a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets or sets a value that indicates whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that indicates whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when it repeats; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.RectKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Indicates whether the <see cref="P:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.KeyFrames" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.RectKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrame.#ctor(System.Windows.Rect)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.RectKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.RectKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrame.#ctor(System.Windows.Rect,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.RectKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.RectKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.RectKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.RectKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrame.InterpolateValue(System.Windows.Rect,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrame.InterpolateValueCore(System.Windows.Rect,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RectKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.RectKeyFrame.Value" /> should be reached. </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.RectKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.RectKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.RectKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.RectKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RectKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.RectKeyFrame.Value">
      <summary> Gets or sets the key frame's target value. </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.RectKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.RectKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.RectKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.RectKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.RectKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.Add(System.Windows.Media.Animation.RectKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.Contains(System.Windows.Media.Animation.RectKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.RectKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.CopyTo(System.Windows.Media.Animation.RectKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RectKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RectKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.RectKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.IndexOf(System.Windows.Media.Animation.RectKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.RectKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RectKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RectKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RectKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RectKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.RectKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.Remove(System.Windows.Media.Animation.RectKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.RectKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RectKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.RepeatBehavior">
      <summary>Describes how a <see cref="T:System.Windows.Media.Animation.Timeline" /> repeats its simple duration.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> structure with the specified iteration count. </summary>
      <param name="count">A number greater than or equal to 0 that specifies the number of iterations to make. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> evaluates to infinity, a value that is not a number, or is negative.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.#ctor(System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> structure with the specified repeat duration. </summary>
      <param name="duration">The total length of time that the <see cref="T:System.Windows.Media.Animation.Timeline" /> should play (its active duration). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="duration" /> evaluates to a negative number.</exception>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Count">
      <summary>Gets the number of times a <see cref="T:System.Windows.Media.Animation.Timeline" /> should repeat. </summary>
      <returns>The numeric value representing the number of iterations to repeat.</returns>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> describes a repeat duration, not an iteration count.</exception>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Duration">
      <summary>Gets the total length of time a <see cref="T:System.Windows.Media.Animation.Timeline" /> should play. </summary>
      <returns>The total length of time a timeline should play. </returns>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> does not describe a repeat duration; it describes an iteration count.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)">
      <summary>Indicates whether this instance is equal to the specified object. </summary>
      <returns>true if <paramref name="value" /> is a <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> that represents the same repeat behavior as this instance; otherwise, false.</returns>
      <param name="value">The object to compare with this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Windows.Media.Animation.RepeatBehavior" />. </summary>
      <returns>true if both the type and repeat behavior of <paramref name="repeatBehavior" /> are equal to this instance; otherwise, false.</returns>
      <param name="repeatBehavior">The value to compare to this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Indicates whether the two specified <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> structures are equal. </summary>
      <returns>true if both the type and repeat behavior of <paramref name="repeatBehavior1" /> are equal to that of <paramref name="repeatBehavior2" />; otherwise, false.</returns>
      <param name="repeatBehavior1">The first value to compare.</param>
      <param name="repeatBehavior2">The second value to compare.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Forever">
      <summary>Gets a <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> that specifies an infinite number of repetitions.  </summary>
      <returns>A <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> that specifies an infinite number of repetitions.   </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.GetHashCode">
      <summary> Returns the hash code of this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.HasCount">
      <summary>Gets a value that indicates whether the repeat behavior has a specified iteration count.    </summary>
      <returns>true if the specified type refers to an iteration count; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.HasDuration">
      <summary>Gets a value that indicates whether the repeat behavior has a specified repeat duration. </summary>
      <returns>true if the specified type refers to a repeat duration; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Indicates whether the two specified <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> instances are equal. </summary>
      <returns>true if both the type and repeat behavior of <paramref name="repeatBehavior1" /> are equal to that of <paramref name="repeatBehavior2" />; otherwise, false.</returns>
      <param name="repeatBehavior1">The first value to compare.</param>
      <param name="repeatBehavior2">The second value to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Indicates whether the two <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> instances are not equal. </summary>
      <returns>true if <paramref name="repeatBehavior1" /> and <paramref name="repeatBehavior2" /> are different types or the repeat behavior properties are not equal; otherwise false.</returns>
      <param name="repeatBehavior1">The first value to compare.</param>
      <param name="repeatBehavior2">The second value to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="format"></param>
      <param name="formatProvider"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.ToString">
      <summary>Returns a string representation of this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> instance. </summary>
      <returns>A string representation of this instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.ToString(System.IFormatProvider)">
      <summary>Returns a string representation of this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> instance with the specified format. </summary>
      <returns>A string representation of this instance.</returns>
      <param name="formatProvider">The format used to construct the return value.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.RepeatBehaviorConverter">
      <summary>Converts instances of <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> to and from other data types.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehaviorConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RepeatBehaviorConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehaviorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether or not conversion from a specified data type is possible.</summary>
      <returns>true if conversion is supported; otherwise, false.</returns>
      <param name="td">Context information required for conversion.</param>
      <param name="t">Type to evaluate for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehaviorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines if conversion to a specified type is possible. </summary>
      <returns>true if conversion is possible; otherwise, false.</returns>
      <param name="context">Context information required for conversion.</param>
      <param name="destinationType">Destination type being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehaviorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a given string value to an instance of <see cref="T:System.Windows.Media.Animation.RepeatBehaviorConverter" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> object based on <paramref name="value" />.</returns>
      <param name="td">Context information required for conversion.</param>
      <param name="cultureInfo">Cultural information to respect during conversion.</param>
      <param name="value">Object being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehaviorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> to a supported destination type.</summary>
      <returns>The only supported destination types are <see cref="T:System.String" /> and <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />.</returns>
      <param name="context">Context information required for conversion.</param>
      <param name="cultureInfo">Cultural information to respect during conversion.</param>
      <param name="value">Object being evaluated for conversion.</param>
      <param name="destinationType">Destination type being evaluated for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.Rotation3DAnimation">
      <summary>Animates the value of a <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> property using linear interpolation between two values determined by the combination of <see cref="P:System.Windows.Media.Animation.Rotation3DAnimation.From" />, <see cref="P:System.Windows.Media.Animation.Rotation3DAnimation.To" />, or <see cref="P:System.Windows.Media.Animation.Rotation3DAnimation.By" /> properties that are set for the animation. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimation.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimation.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimation.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration.</summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimation.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior.</summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Rotation3DAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Rotation3DAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Rotation3DAnimation.By" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Rotation3DAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DAnimation" />.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Rotation3DAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Rotation3DAnimation.EasingFunction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Rotation3DAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DAnimation.From">
      <summary> Gets or sets the animation's starting value.  </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Rotation3DAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Rotation3DAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Rotation3DAnimation.From" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimation.GetCurrentValueCore(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.Rotation3DAnimation" />. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DAnimation.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.   </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DAnimation.To">
      <summary> Gets or sets the animation's ending value.  </summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> that represents the animation's ending value. </returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Rotation3DAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Rotation3DAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Rotation3DAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Rotation3DAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> value.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. If this animation is the first in a composition chain it will be the base value of the property being animated; otherwise it will be the value returned by the previous animation in the chain.</param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationBase.GetCurrentValue(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. If this animation is the first in a composition chain it will be the base value of the property being animated; otherwise it will be the value returned by the previous animation in the chain.</param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationBase.GetCurrentValueCore(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> property along a set of <see cref="P:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> object. </summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Rotation3DKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrame.InterpolateValue(System.Windows.Media.Media3D.Rotation3D,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Rotation3D,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Rotation3DKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Rotation3DKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Add(System.Windows.Media.Animation.Rotation3DKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> objects from the collection.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Contains(System.Windows.Media.Animation.Rotation3DKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.CopyTo(System.Windows.Media.Animation.Rotation3DKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" />. </summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" />.              </summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" />. </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.IndexOf(System.Windows.Media.Animation.Rotation3DKeyFrame)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection. </summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Rotation3DKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> into a specific location within the collection.  </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection is frozen. </summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates if the collection is read-only. </summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe).</summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Remove(System.Windows.Media.Animation.Rotation3DKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.Rotation3DKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.SineEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using a sine formula (see remarks below).</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SineEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SineEase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SineEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SineEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.SingleAnimation">
      <summary> Animates the value of a  <see cref="T:System.Single" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimation.#ctor(System.Single,System.Single,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimation.#ctor(System.Single,System.Single,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimation.#ctor(System.Single,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimation.#ctor(System.Single,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SingleAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.SingleAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SingleAnimation.By" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.SingleAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />.            </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SingleAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SingleAnimation.EasingFunction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SingleAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleAnimation.From">
      <summary> Gets or sets the animation's starting value.  </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SingleAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.SingleAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SingleAnimation.From" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimation.GetCurrentValueCore(System.Single,System.Single,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.SingleAnimation" />.  </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleAnimation.IsAdditive">
      <summary> Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleAnimation.To">
      <summary> Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SingleAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.SingleAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SingleAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SingleAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Single" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.SingleAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationBase.GetCurrentValue(System.Single,System.Single,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationBase.GetCurrentValueCore(System.Single,System.Single,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames">
      <summary>Animates the value of a <see cref="T:System.Single" /> property along a set of <see cref="P:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A derived class has not overridden the default behavior, which does not allow text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> object. </summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.GetCurrentValueCore(System.Single,System.Single,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.SingleKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SingleKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrame.#ctor(System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrame.#ctor(System.Single,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrame.InterpolateValue(System.Single,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrame.InterpolateValueCore(System.Single,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SingleKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SingleKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SingleKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.Add(System.Windows.Media.Animation.SingleKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.Contains(System.Windows.Media.Animation.SingleKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.CopyTo(System.Windows.Media.Animation.SingleKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SingleKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.IndexOf(System.Windows.Media.Animation.SingleKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.SingleKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.SingleKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.Remove(System.Windows.Media.Animation.SingleKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.SingleKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.SizeAnimation">
      <summary> Animates the value of a  <see cref="T:System.Windows.Size" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SizeAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimation.#ctor(System.Windows.Size,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SizeAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimation.#ctor(System.Windows.Size,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SizeAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimation.#ctor(System.Windows.Size,System.Windows.Size,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SizeAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimation.#ctor(System.Windows.Size,System.Windows.Size,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SizeAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SizeAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.SizeAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SizeAnimation.By" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.SizeAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.SizeAnimation" />.           </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SizeAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SizeAnimation.EasingFunction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SizeAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeAnimation.From">
      <summary> Gets or sets the animation's starting value.  </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SizeAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.SizeAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SizeAnimation.From" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimation.GetCurrentValueCore(System.Windows.Size,System.Windows.Size,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.SizeAnimation" />.  </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeAnimation.To">
      <summary> Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SizeAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.SizeAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SizeAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SizeAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Size" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SizeAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.SizeAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationBase.GetCurrentValue(System.Windows.Size,System.Windows.Size,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of this animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationBase.GetCurrentValueCore(System.Windows.Size,System.Windows.Size,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The current value of this animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Size" /> property along a set of <see cref="P:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> object. </summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Size,System.Windows.Size,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.SizeKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SizeKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrame.#ctor(System.Windows.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrame.#ctor(System.Windows.Size,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrame.InterpolateValue(System.Windows.Size,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrame.InterpolateValueCore(System.Windows.Size,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SizeKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SizeKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SizeKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.Add(System.Windows.Media.Animation.SizeKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.Contains(System.Windows.Media.Animation.SizeKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.CopyTo(System.Windows.Media.Animation.SizeKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.SizeKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.IndexOf(System.Windows.Media.Animation.SizeKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.SizeKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.SizeKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.Remove(System.Windows.Media.Animation.SizeKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.SizeKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.SlipBehavior">
      <summary>Indicates how a <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> will behave when one or more of its <see cref="T:System.Windows.Media.Animation.Timeline" /> children slips.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.SlipBehavior.Grow">
      <summary>Indicates that a <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> will not slip with the child <see cref="T:System.Windows.Media.Animation.Timeline" />, but will expand to fit all slipping <see cref="T:System.Windows.Media.Animation.Timeline" /> children. NOTE: This is only effective when the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of the <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> is not explicitly specified.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.SlipBehavior.Slip">
      <summary>Indicates that a <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> will slip along with its first child <see cref="T:System.Windows.Media.Animation.Timeline" /> that can slip whenever that child is delayed or accelerated..</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineByteKeyFrame">
      <summary>Animates from the <see cref="T:System.Byte" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineByteKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineByteKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineByteKeyFrame.#ctor(System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineByteKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineByteKeyFrame.#ctor(System.Byte,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineByteKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineByteKeyFrame.#ctor(System.Byte,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineByteKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineByteKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineByteKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineByteKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineByteKeyFrame.InterpolateValueCore(System.Byte,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineByteKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineByteKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineByteKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineByteKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineColorKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Color" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineColorKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineColorKeyFrame.#ctor(System.Windows.Media.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineColorKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineColorKeyFrame.#ctor(System.Windows.Media.Color,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineColorKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineColorKeyFrame.#ctor(System.Windows.Media.Color,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineColorKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineColorKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineColorKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineColorKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineColorKeyFrame.InterpolateValueCore(System.Windows.Media.Color,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineColorKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineDecimalKeyFrame">
      <summary>Animates from the <see cref="T:System.Decimal" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDecimalKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineDecimalKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDecimalKeyFrame.#ctor(System.Decimal)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineDecimalKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDecimalKeyFrame.#ctor(System.Decimal,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineDecimalKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDecimalKeyFrame.#ctor(System.Decimal,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineDecimalKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDecimalKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineDecimalKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineDecimalKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDecimalKeyFrame.InterpolateValueCore(System.Decimal,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress. </returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineDecimalKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineDecimalKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineDecimalKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineDecimalKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineDoubleKeyFrame">
      <summary>Animates from the <see cref="T:System.Double" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineDoubleKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDoubleKeyFrame.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineDoubleKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDoubleKeyFrame.#ctor(System.Double,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineDoubleKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDoubleKeyFrame.#ctor(System.Double,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineDoubleKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDoubleKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineDoubleKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineDoubleKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDoubleKeyFrame.InterpolateValueCore(System.Double,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineInt16KeyFrame">
      <summary>Animates from the <see cref="T:System.Int16" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt16KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt16KeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt16KeyFrame.#ctor(System.Int16)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt16KeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt16KeyFrame.#ctor(System.Int16,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt16KeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt16KeyFrame.#ctor(System.Int16,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt16KeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt16KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineInt16KeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineInt16KeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt16KeyFrame.InterpolateValueCore(System.Int16,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineInt16KeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineInt16KeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineInt16KeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineInt16KeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineInt32KeyFrame">
      <summary>Animates from the <see cref="T:System.Int32" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt32KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt32KeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt32KeyFrame.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt32KeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt32KeyFrame.#ctor(System.Int32,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt32KeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt32KeyFrame.#ctor(System.Int32,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt32KeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt32KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineInt32KeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineInt32KeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt32KeyFrame.InterpolateValueCore(System.Int32,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineInt32KeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineInt32KeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineInt32KeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineInt32KeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineInt64KeyFrame">
      <summary>Animates from the <see cref="T:System.Int64" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt64KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt64KeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt64KeyFrame.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt64KeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt64KeyFrame.#ctor(System.Int64,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt64KeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt64KeyFrame.#ctor(System.Int64,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineInt64KeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt64KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineInt64KeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineInt64KeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineInt64KeyFrame.InterpolateValueCore(System.Int64,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineInt64KeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineInt64KeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineInt64KeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineInt64KeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplinePoint3DKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Point3D" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePoint3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplinePoint3DKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePoint3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplinePoint3DKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePoint3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplinePoint3DKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePoint3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplinePoint3DKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePoint3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplinePoint3DKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplinePoint3DKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePoint3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Point3D,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplinePoint3DKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplinePoint3DKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplinePoint3DKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplinePoint3DKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplinePointKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Point" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePointKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplinePointKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePointKeyFrame.#ctor(System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplinePointKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePointKeyFrame.#ctor(System.Windows.Point,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplinePointKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePointKeyFrame.#ctor(System.Windows.Point,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplinePointKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve that defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePointKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplinePointKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplinePointKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePointKeyFrame.InterpolateValueCore(System.Windows.Point,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value from 0.0 through 1.0 that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve that defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplinePointKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineQuaternionKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Quaternion" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineQuaternionKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineQuaternionKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineQuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineQuaternionKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineQuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineQuaternionKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">The key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineQuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineQuaternionKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">The key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
      <param name="keySpline">A <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve that defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineQuaternionKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineQuaternionKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineQuaternionKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineQuaternionKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Quaternion,System.Double)">
      <summary>Interpolates, in a splined fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value from 0.0 through 1.0 that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineQuaternionKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve that defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineQuaternionKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineQuaternionKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineQuaternionKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineQuaternionKeyFrame.UseShortestPath">
      <summary>Gets or sets a value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions.  </summary>
      <returns>Boolean value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineQuaternionKeyFrame.UseShortestPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineQuaternionKeyFrame.UseShortestPath" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineQuaternionKeyFrame.UseShortestPath" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineRectKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Rect" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.RectKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRectKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineRectKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRectKeyFrame.#ctor(System.Windows.Rect)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineRectKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRectKeyFrame.#ctor(System.Windows.Rect,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineRectKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRectKeyFrame.#ctor(System.Windows.Rect,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineRectKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRectKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineRectKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineRectKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRectKeyFrame.InterpolateValueCore(System.Windows.Rect,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineRectKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineRectKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineRectKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineRectKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineRotation3DKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRotation3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineRotation3DKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineRotation3DKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineRotation3DKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineRotation3DKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRotation3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineRotation3DKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineRotation3DKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineRotation3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Rotation3D,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineRotation3DKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineRotation3DKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineRotation3DKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineRotation3DKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineSingleKeyFrame">
      <summary>Animates from the <see cref="T:System.Single" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSingleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineSingleKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSingleKeyFrame.#ctor(System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineSingleKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSingleKeyFrame.#ctor(System.Single,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineSingleKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSingleKeyFrame.#ctor(System.Single,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineSingleKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSingleKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineSingleKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineSingleKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSingleKeyFrame.InterpolateValueCore(System.Single,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineSingleKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineSingleKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineSingleKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineSingleKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineSizeKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Size" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSizeKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineSizeKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSizeKeyFrame.#ctor(System.Windows.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineSizeKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSizeKeyFrame.#ctor(System.Windows.Size,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineSizeKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSizeKeyFrame.#ctor(System.Windows.Size,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineSizeKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSizeKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineSizeKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineSizeKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineSizeKeyFrame.InterpolateValueCore(System.Windows.Size,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineSizeKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineSizeKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineSizeKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineSizeKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineVector3DKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Vector3D" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVector3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineVector3DKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineVector3DKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineVector3DKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineVector3DKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVector3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineVector3DKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineVector3DKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVector3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineVector3DKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.   </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineVector3DKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineVector3DKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineVector3DKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineVectorKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Vector" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVectorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineVectorKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVectorKeyFrame.#ctor(System.Windows.Vector)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineVectorKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVectorKeyFrame.#ctor(System.Windows.Vector,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineVectorKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVectorKeyFrame.#ctor(System.Windows.Vector,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineVectorKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVectorKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineVectorKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineVectorKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineVectorKeyFrame.InterpolateValueCore(System.Windows.Vector,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineVectorKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineVectorKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineVectorKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineVectorKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.StringAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.String" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.StringAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.StringAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationBase.GetCurrentValue(System.String,System.String,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of this animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationBase.GetCurrentValueCore(System.String,System.String,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.StringAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.String" /> property along a set of <see cref="P:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.KeyFrames" /> over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.StringKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> object. </summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.GetCurrentValueCore(System.String,System.String,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.StringKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.StringKeyFrame">
      <summary>Defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrame.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.StringKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.StringKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrame.#ctor(System.String,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.StringKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.StringKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.StringKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.StringKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrame.InterpolateValue(System.String,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrame.InterpolateValueCore(System.String,System.Double)">
      <summary>When overridden in a derived class, calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.StringKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.StringKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.StringKeyFrame.Value" /> property. The default is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.StringKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.StringKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.StringKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.StringKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.StringKeyFrame.Value">
      <summary>Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.StringKeyFrame.KeyTime" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.StringKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.StringKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.StringKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.StringKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.Add(System.Windows.Media.Animation.StringKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.Contains(System.Windows.Media.Animation.StringKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.StringKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.CopyTo(System.Windows.Media.Animation.StringKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.StringKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.StringKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.StringKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.IndexOf(System.Windows.Media.Animation.StringKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.StringKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.StringKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.StringKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.StringKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.StringKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.StringKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.Remove(System.Windows.Media.Animation.StringKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.StringKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.StringKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.Timeline">
      <summary>Defines a segment of time. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />.</summary>
      <param name="beginTime">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin. See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> and <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
      <param name="beginTime">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin. See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</param>
      <param name="duration">The length of time for which this timeline plays, not counting repetitions. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />, and <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />.</summary>
      <param name="beginTime">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin. See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</param>
      <param name="duration">The length of time for which this timeline plays, not counting repetitions. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="repeatBehavior">The repeating behavior of this timeline, either as an iteration <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> or a repeat <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" />. See the <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property for more information.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.AccelerationRatio">
      <summary>Gets or sets a value specifying the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent accelerating the passage of time from zero to its maximum rate.  </summary>
      <returns>A value between 0 and 1, inclusive, that specifies the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent accelerating the passage of time from zero to its maximum rate. If the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />  property is also set, the sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> must be less than or equal to 1. The default value is 0.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> is less than 0 or greater than 1.</exception>
      <exception cref="T:System.InvalidOperationException">The sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> exceeds 1.</exception>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.AllocateClock">
      <summary>Creates a <see cref="T:System.Windows.Media.Animation.Clock" /> for this <see cref="T:System.Windows.Media.Animation.Timeline" />. </summary>
      <returns>A clock for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.AutoReverse">
      <summary>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </summary>
      <returns>true if the timeline plays in reverse at the end of each iteration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.BeginTime">
      <summary>Gets or sets the time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.  </summary>
      <returns>The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin, relative to its parent's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />. If this timeline is a root timeline, the time is relative to its interactive begin time (the moment at which the timeline was triggered). This value may be positive, negative, or null; a null value means the timeline never plays. The default value is zero.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Timeline" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Timeline" /> object, making deep copies of this object's current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="E:System.Windows.Media.Animation.Timeline.Completed">
      <summary>Occurs when this timeline has completely finished playing: it will no longer enter its active period. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.CreateClock">
      <summary>Creates a new, controllable <see cref="T:System.Windows.Media.Animation.Clock" /> from this <see cref="T:System.Windows.Media.Animation.Timeline" />. If this <see cref="T:System.Windows.Media.Animation.Timeline" /> has children, a tree of clocks is created with this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root. </summary>
      <returns>A new, controllable <see cref="T:System.Windows.Media.Animation.Clock" /> constructed from this <see cref="T:System.Windows.Media.Animation.Timeline" />. If this <see cref="T:System.Windows.Media.Animation.Timeline" /> is a <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> that contains child timelines, a tree of <see cref="T:System.Windows.Media.Animation.Clock" /> objects is created with a controllable <see cref="T:System.Windows.Media.Animation.Clock" /> created from this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Animation.Clock" /> from this <see cref="T:System.Windows.Media.Animation.Timeline" /> and specifies whether the new <see cref="T:System.Windows.Media.Animation.Clock" /> is controllable. If this <see cref="T:System.Windows.Media.Animation.Timeline" /> has children, a tree of clocks is created with this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root. </summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.Clock" /> constructed from this <see cref="T:System.Windows.Media.Animation.Timeline" />. If this <see cref="T:System.Windows.Media.Animation.Timeline" /> is a <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> that contains child timelines, a tree of <see cref="T:System.Windows.Media.Animation.Clock" /> objects is created with a controllable <see cref="T:System.Windows.Media.Animation.Clock" /> created from this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</returns>
      <param name="hasControllableRoot">true if the root <see cref="T:System.Windows.Media.Animation.Clock" /> returned should return a <see cref="T:System.Windows.Media.Animation.ClockController" /> from its <see cref="P:System.Windows.Media.Animation.Clock.Controller" /> property so that the <see cref="T:System.Windows.Media.Animation.Clock" /> tree can be interactively controlled; otherwise, false.</param>
    </member>
    <member name="E:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated">
      <summary>Occurs when the rate at which time progresses for the timeline's clock changes.</summary>
    </member>
    <member name="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated">
      <summary>Occurs when the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> property of the timeline's <see cref="T:System.Windows.Media.Animation.Clock" /> is updated.</summary>
    </member>
    <member name="E:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated">
      <summary>Occurs when the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> property of the timeline's <see cref="T:System.Windows.Media.Animation.Clock" /> is updated.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.DecelerationRatio">
      <summary>Gets or sets a value specifying the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent decelerating the passage of time from its maximum rate to zero.  </summary>
      <returns>A value between 0 and 1, inclusive, that specifies the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent decelerating the passage of time from its maximum rate to zero. If the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> property is also set, the sum of <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> must be less than or equal to 1. The default value is 0.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> is less than 0 or greater than 1.</exception>
      <exception cref="T:System.InvalidOperationException">The sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> exceeds 1.</exception>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty">
      <summary>Identifies for the <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate">
      <summary>Gets or sets the desired frame rate for this timeline and its child timelines. </summary>
      <returns>A value greater than zero that is the desired frame rate for this timeline and its child timelines, or null if the system should automatically determine the frame rate. The default value is null. </returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.Duration">
      <summary>Gets or sets the length of time for which this timeline plays, not counting repetitions.  </summary>
      <returns>The timeline's simple duration: the amount of time this timeline takes to complete a single forward iteration. The default value is <see cref="P:System.Windows.Duration.Automatic" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.DurationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.FillBehavior">
      <summary>Gets or sets a value that specifies how the <see cref="T:System.Windows.Media.Animation.Timeline" /> behaves after it reaches the end of its active period.  </summary>
      <returns>A value that specifies how the timeline behaves after it reaches the end of its active period but its parent is inside its active or fill period. The default value is <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)">
      <summary>Makes this <see cref="T:System.Windows.Media.Animation.Timeline" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Timeline" /> instance to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Timeline" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)">
      <summary>Gets the desired frame rate of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />. </summary>
      <returns>The desired frame rate of this timeline. The default value is null.</returns>
      <param name="timeline">The timeline from which to retrieve the desired frame rate.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)">
      <summary>Returns the length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />. </summary>
      <returns>The length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />, or <see cref="P:System.Windows.Duration.Automatic" /> if the natural duration is unknown. </returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Returns the length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />. This method provides the implementation for <see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />. </summary>
      <returns>The length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />, or <see cref="P:System.Windows.Duration.Automatic" /> if the natural duration is unknown.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.Name">
      <summary> Gets or sets the name of this <see cref="T:System.Windows.Media.Animation.Timeline" />. </summary>
      <returns>The name of this timeline. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.NameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.Name" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.Name" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Media.Animation.Timeline.RemoveRequested">
      <summary>Occurs when the clock created for this timeline or one of its parent timelines is removed.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.RepeatBehavior">
      <summary>Gets or sets the repeating behavior of this timeline.  </summary>
      <returns>An iteration <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> that specifies the number of times the timeline should play, a <see cref="T:System.TimeSpan" /> value that specifies the total the length of this timeline's active period, or the special value <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />, which specifies that the timeline should repeat indefinitely. The default value is a <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> with a <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> of 1, which indicates that the timeline plays once.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})">
      <summary>Sets the desired frame rate of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
      <param name="timeline">The <see cref="T:System.Windows.Media.Animation.Timeline" /> to which <paramref name="desiredFrameRate" /> is assigned. </param>
      <param name="desiredFrameRate">The maximum number of frames this timeline should generate each second, or null if the system should control the number of frames.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.SpeedRatio">
      <summary>Gets or sets the rate, relative to its parent, at which time progresses for this <see cref="T:System.Windows.Media.Animation.Timeline" />.  </summary>
      <returns>A finite value greater than 0 that describes the rate at which time progresses for this timeline, relative to the speed of the timeline's parent or, if this is a root timeline, the default timeline speed. The default value is 1.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> is less than 0 or is not a finite value.</exception>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty">
      <summary>Identifies for the <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.TimelineCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.Timeline" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Animation.Timeline})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> class that includes all of the same elements as an existing collection.</summary>
      <param name="collection">Collection of elements this instance is based on.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="collection" /> is empty.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> with the specified initial capacity.</summary>
      <param name="capacity">The initial capacity of the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.Add(System.Windows.Media.Animation.Timeline)">
      <summary>Inserts a new <see cref="T:System.Windows.Media.Animation.Timeline" /> object into the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />. </summary>
      <param name="value">The object to add.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.TimelineCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.Contains(System.Windows.Media.Animation.Timeline)">
      <summary>Determines whether the <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> contains the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> object. </summary>
      <returns>true if <paramref name="value" /> is found; otherwise, false.</returns>
      <param name="value">The object to locate.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.CopyTo(System.Windows.Media.Animation.Timeline[],System.Int32)">
      <summary>Copies the items of the <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> to the passed Timeline array, starting at the specified index position. </summary>
      <param name="array">The destination array.</param>
      <param name="index">The zero-based index position where copying begins.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.TimelineCollection.Count">
      <summary> Gets the number of items contained in this <see cref="T:System.Windows.Media.Animation.TimelineCollection" />.  </summary>
      <returns>The number of items contained in this instance. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.GetEnumerator">
      <summary>Gets an enumerator that can iterate the members of the collection.</summary>
      <returns>An object that can iterate the members of the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.IndexOf(System.Windows.Media.Animation.Timeline)">
      <summary>Gets the zero-based index position of a Timeline object in the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />. </summary>
      <returns>The index position of <paramref name="value" /> within this list.  If not found, -1 is returned.</returns>
      <param name="value">The object to locate.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.Insert(System.Int32,System.Windows.Media.Animation.Timeline)">
      <summary>Inserts the specified Timeline object into this <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> at the specified index position. </summary>
      <param name="index">The zero-based index position into which <paramref name="value" /> is inserted.</param>
      <param name="value">The object to insert.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.TimelineCollection.Item(System.Int32)">
      <summary> Gets or sets an item at the specified index position within this <see cref="T:System.Windows.Media.Animation.TimelineCollection" />. </summary>
      <returns>The Timeline object at the <paramref name="index" /> position.</returns>
      <param name="index">The index position to access.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than or equal to the size of the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.Remove(System.Windows.Media.Animation.Timeline)">
      <summary>Removes the first occurrence of a specified <see cref="T:System.Windows.Media.Animation.Timeline" /> from this <see cref="T:System.Windows.Media.Animation.TimelineCollection" />. </summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
      <param name="value">The object to remove.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.RemoveAt(System.Int32)">
      <summary> Removes the <see cref="T:System.Windows.Media.Animation.Timeline" /> at the specified index position from this <see cref="T:System.Windows.Media.Animation.TimelineCollection" />. </summary>
      <param name="index">The zero-based index position of the item to remove.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.TimelineCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.TimelineCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.TimelineCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.Animation.TimelineCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.TimelineCollection.Enumerator">
      <summary>Enumerates the members of a <see cref="T:System.Windows.Media.Animation.TimelineCollection" />.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.TimelineCollection.Enumerator.Current">
      <summary>Gets a value that represents the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator successfully advanced to the next element in the collection; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.TimelineCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.TimelineGroup">
      <summary>Abstract class that, when implemented represents a <see cref="T:System.Windows.Media.Animation.Timeline" /> that may contain a collection of child <see cref="T:System.Windows.Media.Animation.Timeline" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> class, with default properties. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.#ctor(System.Nullable{System.TimeSpan})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />.</summary>
      <param name="beginTime">The <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> and <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
      <param name="beginTime">The <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
      <param name="duration">The <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />, and <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />.</summary>
      <param name="beginTime">The <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
      <param name="duration">The <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
      <param name="repeatBehavior">The <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.Timeline" /> to this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />. If this object is a <see cref="T:System.Windows.Media.Animation.Timeline" /> it will be added to the <see cref="P:System.Windows.Media.Animation.TimelineGroup.Children" /> collection; otherwise, an exception will be thrown.</param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.Timeline" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.Timeline" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.AllocateClock">
      <summary>Creates a type-specific clock for this timeline.</summary>
      <returns>A clock for this timeline.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.TimelineGroup.Children">
      <summary>Gets or sets the collection of direct child <see cref="T:System.Windows.Media.Animation.Timeline" /> objects of the <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.  </summary>
      <returns>Child <see cref="T:System.Windows.Media.Animation.Timeline" /> objects of the <see cref="T:System.Windows.Media.Animation.TimelineGroup" />. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.TimelineGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.TimelineGroup.Children" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.CreateClock">
      <summary>Instantiates a new <see cref="T:System.Windows.Media.Animation.ClockGroup" /> object, using this instance. </summary>
      <returns>A <see cref="T:System.Windows.Media.Animation.ClockGroup" /> object.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.TimeSeekOrigin">
      <summary>Indicates the origin of a seek operation. The offset of the seek operation is relative to this origin. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime">
      <summary>The offset is relative to the beginning of the activation period of the <see cref="T:System.Windows.Media.Animation.Timeline" />.   </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration">
      <summary>The offset is relative to the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of the <see cref="T:System.Windows.Media.Animation.Timeline" />, the length of a single iteration. This value has no meaning if the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of the <see cref="T:System.Windows.Media.Animation.Timeline" /> is not resolved. </summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Vector3DAnimation">
      <summary>Animates the value of a Vector3D property using linear interpolation between two values. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Vector3DAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimation.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Duration)">
      <summary>Initializes a new instance of the Vector3DAnimation class with the specified destination value and <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
      <param name="toValue">The ending value of this animation.</param>
      <param name="duration">The new animation's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimation.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Vector3DAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimation.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Vector3DAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration.</summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimation.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Vector3DAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior.</summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Vector3DAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Vector3DAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Vector3DAnimation.By" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Vector3DAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Vector3DAnimation" />. </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Vector3DAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Vector3DAnimation.EasingFunction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Vector3DAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DAnimation.From">
      <summary> Gets or sets the animation's starting value.  </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Vector3DAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Vector3DAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Vector3DAnimation.From" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimation.GetCurrentValueCore(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.Vector3DAnimation" />. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DAnimation.To">
      <summary> Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Vector3DAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Vector3DAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Vector3DAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Vector3DAnimationBase">
      <summary>Abstract class that represents an animated <see cref="T:System.Windows.Media.Media3D.Vector3D" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Vector3DAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Vector3DAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationBase.GetCurrentValue(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationBase.GetCurrentValueCore(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The current value of this animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> property along a set of <see cref="P:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.Clone">
      <summary>Returns a modifiable clone of this instance.</summary>
      <returns>A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object, although some copying might be deferred until necessary for improved performance. The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes the specified <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> a modifiable clone (deep copy) of the current object using base (non-animated, non-databound) property values.</summary>
      <param name="sourceFreezable">Destination for the modifiable clone of the current object.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> object, making deep copies of this object's current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes the specified <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> a modifiable clone (deep copy) of the current object using current property values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> to be cloned.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> object to be cloned.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a copy of the specified <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" />.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> to copy and freeze</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Vector3DKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrame.InterpolateValue(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" /> should be reached. </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Vector3DKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value">
      <summary> Gets or sets the key frame's target value. </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Vector3DKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Add(System.Windows.Media.Animation.Vector3DKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Contains(System.Windows.Media.Animation.Vector3DKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.CopyTo(System.Windows.Media.Animation.Vector3DKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.IndexOf(System.Windows.Media.Animation.Vector3DKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Vector3DKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection is frozen.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Remove(System.Windows.Media.Animation.Vector3DKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.Vector3DKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.VectorAnimation">
      <summary> Animates the value of a <see cref="T:System.Windows.Vector" /> property between two target values using linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.VectorAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimation.#ctor(System.Windows.Vector,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.VectorAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimation.#ctor(System.Windows.Vector,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.VectorAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimation.#ctor(System.Windows.Vector,System.Windows.Vector,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.VectorAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimation.#ctor(System.Windows.Vector,System.Windows.Vector,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.VectorAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value. </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.VectorAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.VectorAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.VectorAnimation.By" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.VectorAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.VectorAnimation" />.          </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.VectorAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.VectorAnimation.EasingFunction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.VectorAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorAnimation.From">
      <summary> Gets or sets the animation's starting value. </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.VectorAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.VectorAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.VectorAnimation.From" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimation.GetCurrentValueCore(System.Windows.Vector,System.Windows.Vector,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.VectorAnimation" />.</summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorAnimation.IsAdditive">
      <summary> Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats. </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorAnimation.To">
      <summary> Gets or sets the animation's ending value. </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.VectorAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.VectorAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.VectorAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.VectorAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Vector" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.VectorAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.VectorAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationBase.GetCurrentValue(System.Windows.Vector,System.Windows.Vector,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of this animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationBase.GetCurrentValueCore(System.Windows.Vector,System.Windows.Vector,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Vector" /> property along a set of <see cref="P:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> object. </summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Vector,System.Windows.Vector,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.VectorKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.VectorKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrame.#ctor(System.Windows.Vector)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrame.#ctor(System.Windows.Vector,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrame.InterpolateValue(System.Windows.Vector,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrame.InterpolateValueCore(System.Windows.Vector,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.VectorKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.VectorKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.VectorKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.Add(System.Windows.Media.Animation.VectorKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.Contains(System.Windows.Media.Animation.VectorKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.CopyTo(System.Windows.Media.Animation.VectorKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.VectorKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.IndexOf(System.Windows.Media.Animation.VectorKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.VectorKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.VectorKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.Remove(System.Windows.Media.Animation.VectorKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.VectorKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Converters.BaseIListConverter">
      <summary>Defines methods used to convert <see cref="T:System.Collections.IList" /> collection members to and from instances of <see cref="T:System.String" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.BaseIListConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.BaseIListConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines if a given type can be converted.</summary>
      <returns>true if this type can be converted; otherwise, false.</returns>
      <param name="td">Provides contextual information required for conversion.</param>
      <param name="t">Type being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines if a given type can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if this type can be converted; otherwise, false.</returns>
      <param name="context">Provides contextual information required for conversion.</param>
      <param name="destinationType">Type being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to a supported instance of <see cref="T:System.Collections.IList" />.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the result of the conversion.</returns>
      <param name="td">Provides contextual information required for conversion.</param>
      <param name="ci">Cultural information to respect during conversion.</param>
      <param name="value">String used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs if value is null and not a <see cref="T:System.String" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.BaseIListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a supported instance of <see cref="T:System.Collections.IList" /> to a <see cref="T:System.String" />.</summary>
      <returns>String representation of the <see cref="T:System.Collections.IList" /> collection.</returns>
      <param name="context">Provides contextual information required for conversion.</param>
      <param name="culture">Cultural information to respect during conversion.</param>
      <param name="value">Object being evaluated for conversion.</param>
      <param name="destinationType">Destination type being evaluated for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Converters.BoolIListConverter">
      <summary>Converts the members of an <see cref="T:System.Collections.IList" /> collection of Boolean values to and from instances of <see cref="T:System.String" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.BoolIListConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.BoolIListConverter" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Converters.BrushValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Brush" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.BrushValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.BrushValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.BrushValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Brush" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false. </returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.BrushValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Brush" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Brush" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Brush" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.BrushValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Brush" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Brush" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Brush" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.BrushValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Brush" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Brush" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Brush" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Converters.CacheModeValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.CacheMode" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.CacheModeValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.CacheModeValueSerializer" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Converters.CacheModeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines whether the specified <see cref="T:System.String" /> can be converted to an instance of <see cref="T:System.Windows.Media.CacheMode" />.</summary>
      <returns>true if <paramref name="value" /> can be converted; otherwise, false. </returns>
      <param name="value">A <see cref="T:System.String" /> to evaluate for conversion.</param>
      <param name="context">Context information that is used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.CacheModeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines whether the specified instance of <see cref="T:System.Windows.Media.CacheMode" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">An instance of <see cref="T:System.Windows.Media.CacheMode" /> to evaluate for conversion.</param>
      <param name="context">Context information that is used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.CacheModeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.CacheMode" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.CacheMode" /> based on the specified <paramref name="value" />.</returns>
      <param name="value">A <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.CacheMode" />.</param>
      <param name="context">Context information that is used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.CacheModeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.CacheMode" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the specified <see cref="T:System.Windows.Media.CacheMode" /> object.</returns>
      <param name="value">An instance of <see cref="T:System.Windows.Media.CacheMode" /> to evaluate for conversion.</param>
      <param name="context">Context information that is used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Converters.CharIListConverter">
      <summary>Converts the members of an <see cref="T:System.Collections.IList" /> collection of Unicode characters to and from instances of <see cref="T:System.String" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.CharIListConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.CharIListConverter" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Converters.DoubleCollectionValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.DoubleCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.DoubleCollectionValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.DoubleCollectionValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.DoubleCollectionValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.DoubleCollection" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false.</returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.DoubleCollectionValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.DoubleCollection" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.DoubleCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.DoubleCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.DoubleCollectionValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.DoubleCollection" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.DoubleCollection" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.DoubleCollection" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.DoubleCollectionValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.DoubleCollection" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.DoubleCollection" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.DoubleCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Converters.DoubleIListConverter">
      <summary>Converts members of an <see cref="T:System.Collections.IList" /> collection containing <see cref="T:System.Double" /> numbers to and from instances of <see cref="T:System.String" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.DoubleIListConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.DoubleIListConverter" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Converters.GeometryValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Geometry" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.GeometryValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.GeometryValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.GeometryValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Geometry" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false.</returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.GeometryValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Geometry" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Geometry" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Geometry" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.GeometryValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Geometry" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Geometry" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Geometry" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.GeometryValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Geometry" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Geometry" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Geometry" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Converters.Int32CollectionValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Int32Collection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.Int32CollectionValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.Int32CollectionValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.Int32CollectionValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Int32Collection" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Int32Collection" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Int32Collection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.Int32CollectionValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Int32Collection" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Int32Collection" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Int32Collection" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.Int32CollectionValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Int32Collection" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Int32Collection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Int32Collection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.Int32CollectionValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Int32Collection" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false.</returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Converters.PathFigureCollectionValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.PathFigureCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.PathFigureCollectionValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.PathFigureCollectionValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.PathFigureCollectionValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.PathFigureCollection" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false.</returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.PathFigureCollectionValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.PathFigureCollection" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.PathFigureCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.PathFigureCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.PathFigureCollectionValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.PathFigureCollection" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.PathFigureCollection" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.PathFigureCollection" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.PathFigureCollectionValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.PathFigureCollection" /> to a <see cref="T:System.String" /></summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.PathFigureCollection" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.PathFigureCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Converters.PointCollectionValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.PointCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.PointCollectionValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.PointCollectionValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.PointCollectionValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.PointCollection" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false. </returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.PointCollectionValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.PointCollection" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.PointCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.PointCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.PointCollectionValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.PointCollection" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.PointCollection" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.PointCollection" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.PointCollectionValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.PointCollection" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.PointCollection" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.PointCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Converters.PointIListConverter">
      <summary>Converts an <see cref="T:System.Collections.IList" /> collection of <see cref="T:System.Windows.Point" /> values to and from instances of <see cref="T:System.String" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.PointIListConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.PointIListConverter" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Converters.TransformValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Transform" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.TransformValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.TransformValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.TransformValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Transform" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false. </returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.TransformValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Transform" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Transform" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Transform" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.TransformValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Transform" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Transform" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Transform" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.TransformValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Transform" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Transform" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Transform" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Converters.UShortIListConverter">
      <summary>Converts an <see cref="T:System.Collections.IList" /> collection of UShort number values to and from instances of <see cref="T:System.String" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.UShortIListConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.UShortIListConverter" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Converters.VectorCollectionValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.VectorCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.VectorCollectionValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.VectorCollectionValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.VectorCollectionValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.VectorCollection" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false. </returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.VectorCollectionValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.VectorCollection" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.VectorCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.VectorCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.VectorCollectionValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.VectorCollection" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.VectorCollection" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.VectorCollection" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.VectorCollectionValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.VectorCollection" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.VectorCollection" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.VectorCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Effects.BevelBitmapEffect">
      <summary>Creates a bevel which raises the surface of the image according to a specified curve. </summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BevelBitmapEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.BevelBitmapEffect" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth">
      <summary>Gets or sets the width of the bevel. </summary>
      <returns>The width of the bevel. The default value is 5.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BevelBitmapEffect.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BevelBitmapEffect" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BevelBitmapEffect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile">
      <summary>Gets or sets the curve of the bevel. </summary>
      <returns>The curve of the bevel. The default value is <see cref="F:System.Windows.Media.Effects.EdgeProfile.Linear" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle">
      <summary>Gets or sets the direction the "virtual light" is coming from that creates the shadows of the bevel. </summary>
      <returns>The direction of the virtual light source. The valid range is from 0-360 (degrees) with 0 specifying the right-hand side of the object and successive values moving counter-clockwise around the object. The shadows of the bevel are on the opposite side of where the light is cast. The default value is 135.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BevelBitmapEffect.Relief">
      <summary>Gets or sets the height of the relief of the bevel.  </summary>
      <returns>The height of the relief of the bevel. The valid range is between 0 and 1 with 1 having the most relief (darkest shadows). The default value is 0.3.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.Relief" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.Relief" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness">
      <summary>Gets or sets how smooth the shadows of the bevel are.  </summary>
      <returns>Value indicating how smooth the bevel shadows are. The valid range is between 0 and 1 with 1 being the smoothest. The default value is 0.2.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.BitmapEffect">
      <summary>Defines a bitmap effect. Derived classes define effects that can be applied to a <see cref="T:System.Windows.Media.Visual" /> object, such as a <see cref="T:System.Windows.Controls.Button" /> or an <see cref="T:System.Windows.Controls.Image" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffect.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BitmapEffect" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter">
      <summary>Creates a handle to an IMILBitmapEffect object that is used to initialize a custom effect.</summary>
      <returns>A handle to an IMILBitmapEffect object.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect">
      <summary>When overridden in a derived class, creates a clone of the unmanaged effect.</summary>
      <returns>A handle to the unmanaged effect clone.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)">
      <summary>Returns the <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that results when the effect is applied to the specified <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> with the effect applied to the input.</returns>
      <param name="input">The input to apply the effect to.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)">
      <summary>Initializes an IMILBitmapEffect handle obtained from <see cref="M:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter" /> with the given IMILBitmapEffectPrimitive.</summary>
      <param name="outerObject">The outer IMILBitmapEffect wrapper to initialize. </param>
      <param name="innerObject">The inner IMILBitmapEffectPrimitive.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)">
      <summary>Sets the specified property to the given value.</summary>
      <param name="effect">The handle to the effect that contains the property to change.</param>
      <param name="propertyName">The name of the property to change.</param>
      <param name="value">The value to use to set the property.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)">
      <summary>When overridden in a derived class, updates the property states of the unmanaged properties of the effect.</summary>
      <param name="unmanagedEffect">The handle to the effect that contains the properties to update.</param>
    </member>
    <member name="T:System.Windows.Media.Effects.BitmapEffectCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> objects. This collection is used as part of a <see cref="T:System.Windows.Media.Effects.BitmapEffectGroup" /> to apply multiple bitmap effects to visual content.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Effects.BitmapEffect})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" /> class using the given collection.</summary>
      <param name="collection">The collection used for initialization.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" /> class with a specified capacity, or the number of <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> objects the collection is initially capable of storing.</summary>
      <param name="capacity">The initial capacity of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Add(System.Windows.Media.Effects.BitmapEffect)">
      <summary>Adds a <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> at the end of the collection.</summary>
      <param name="value">The <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Clear">
      <summary>Removes all effects from the collection.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Contains(System.Windows.Media.Effects.BitmapEffect)">
      <summary>Indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Effects.BitmapEffect" />.</summary>
      <returns>true if the collection contains value; otherwise, false.</returns>
      <param name="value">The bitmap effect to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.CopyTo(System.Windows.Media.Effects.BitmapEffect[],System.Int32)">
      <summary>Copies the elements of the collection to an array starting at the given index.</summary>
      <param name="array">The array to copy to.</param>
      <param name="index">The collection index to begin coping.</param>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.Count">
      <summary>Gets the number of effects contained in the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />.</summary>
      <returns>The number of effects contained in the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.IndexOf(System.Windows.Media.Effects.BitmapEffect)">
      <summary>Retrieves the index of the first instance of the specified <see cref="T:System.Windows.Media.Effects.BitmapEffect" />.</summary>
      <returns>The index of the specified effect.</returns>
      <param name="value">The effect to find in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Insert(System.Int32,System.Windows.Media.Effects.BitmapEffect)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> into this collection at the specified index.</summary>
      <param name="index">The index to insert the effect at.</param>
      <param name="value">The specified effect to insert.</param>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> to get or set.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Remove(System.Windows.Media.Effects.BitmapEffect)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> for this collection.</summary>
      <returns>true if <paramref name="value" /> was removed; otherwise, false. </returns>
      <param name="value">The effect to remove from the collection</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.RemoveAt(System.Int32)">
      <summary>Remove the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> at the specified index from the collection.</summary>
      <param name="index">The index of the effect to remove.</param>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> objects in a <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />.</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.MoveNext">
      <summary>Advanced the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Effects.BitmapEffectGroup">
      <summary>Represents a group of <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> objects that is used to apply multiple effects to a visible object.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.BitmapEffectGroup" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectGroup.Children">
      <summary>Gets or sets the children of the <see cref="T:System.Windows.Media.Effects.BitmapEffectGroup" />.  </summary>
      <returns>The children of the effects group as a <see cref="T:System.Windows.Media.Effects.BitmapEffectCollection" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BitmapEffectGroup.Children" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectGroup.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BitmapEffectGroup" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BitmapEffectGroup" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.BitmapEffectInput">
      <summary>Applies the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> given in the <see cref="P:System.Windows.UIElement.BitmapEffect" /> property to a specified region of the visual object.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor(System.Windows.Media.Imaging.BitmapSource)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> class using the <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> as the source for this input.</summary>
      <param name="input">The bitmap source to be used by this input object.</param>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffect">
      <summary>Gets or sets a rectangular region on the visual to which the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> is applied.  </summary>
      <returns>The rectangular region of the visual to which the effect is applied. The default value is <see cref="P:System.Windows.Rect.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffect" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffect" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectUnits">
      <summary>Gets or sets the method in which to interpret the rectangle provided by <see cref="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffect" />.  </summary>
      <returns>The method in which to interpret the rectangle provided by the <see cref="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectUnits" /> property. The default value is <see cref="F:System.Windows.Media.BrushMappingMode.RelativeToBoundingBox" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectUnitsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectUnits" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectUnits" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectInput.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectInput.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectInput.ContextInputSource">
      <summary>Gets a value representing the <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is derived from the context.</summary>
      <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is derived from the context.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BitmapEffectInput.Input">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is used for the input for the object.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is used as the input for the object. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BitmapEffectInput.InputProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BitmapEffectInput.Input" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BitmapEffectInput.Input" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BitmapEffectInput.ShouldSerializeInput">
      <summary>Determines if <see cref="P:System.Windows.Media.Effects.BitmapEffectInput.Input" /> should be serialized.</summary>
      <returns>true if <see cref="P:System.Windows.Media.Effects.BitmapEffectInput.Input" /> should be serialized; otherwise false.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.BlurBitmapEffect">
      <summary>Simulates looking at an object through an out-of-focus lens.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BlurBitmapEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.BlurBitmapEffect" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BlurBitmapEffect.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BlurBitmapEffect" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BlurBitmapEffect.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.BlurBitmapEffect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BlurBitmapEffect.KernelType">
      <summary>Gets or sets the type of blur kernel to use for the <see cref="T:System.Windows.Media.Effects.BlurBitmapEffect" />.  </summary>
      <returns>The type of blur kernel. The default value is <see cref="F:System.Windows.Media.Effects.KernelType.Gaussian" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BlurBitmapEffect.KernelTypeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BlurBitmapEffect.KernelType" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BlurBitmapEffect.KernelType" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BlurBitmapEffect.Radius">
      <summary>Gets or sets the radius used in the blur kernel. A larger radius implies more blurring.  </summary>
      <returns>The radius used in the blur kernel, in DIU (1/96 of an inch). The default value is 5.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BlurBitmapEffect.RadiusProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BlurBitmapEffect.Radius" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BlurBitmapEffect.KernelType" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.BlurEffect">
      <summary>A bitmap effect that blurs the target texture. </summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BlurEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.BlurEffect" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BlurEffect.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.Effect" /> object, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.  </summary>
      <returns>A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.BlurEffect.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.Effect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are copied.  </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BlurEffect.KernelType">
      <summary>Gets or sets a value representing the curve that is used to calculate the blur.</summary>
      <returns>A <see cref="T:System.Windows.Media.Effects.KernelType" /> representing the curve that is used to calculate the blur. The default is <see cref="F:System.Windows.Media.Effects.KernelType.Gaussian" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BlurEffect.KernelTypeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BlurEffect.KernelType" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BlurEffect.KernelType" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BlurEffect.Radius">
      <summary>Gets or sets a value that indicates the radius of the blur effect's curve. </summary>
      <returns>The radius of the blur effect's curve. The default is 5.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BlurEffect.RadiusProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BlurEffect.Radius" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BlurEffect.Radius" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.BlurEffect.RenderingBias">
      <summary>Gets or sets a value that indicates whether the system renders an effect with emphasis on speed or quality. </summary>
      <returns>A <see cref="T:System.Windows.Media.Effects.RenderingBias" /> value that indicates whether the system renders an effect with emphasis on speed or quality. The default is <see cref="F:System.Windows.Media.Effects.RenderingBias.Performance" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BlurEffect.RenderingBiasProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BlurEffect.RenderingBias" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BlurEffect.RenderingBias" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.DropShadowBitmapEffect">
      <summary>Applies a shadow behind a visual object at a slight offset. The offset is determined by mimicking a casting shadow from an imaginary light source.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.DropShadowBitmapEffect" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.DropShadowBitmapEffect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Color">
      <summary>Gets or sets the color of the shadow.  </summary>
      <returns>The color of the shadow. The default value is FF000000 (black). </returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowBitmapEffect.ColorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Color" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Color" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Direction">
      <summary>Gets or sets the angle at which the shadow is cast. </summary>
      <returns>The angle at which the shadow is cast. The valid range of values is from 0 through 360. The value 0 puts the direction immediately to the right of the object. Subsequent values move the direction around the object in a counter-clockwise direction. For example, a value of 90 indicates the shadow is cast directly upward from the object; a value of 180 is cast directly to the left of the object, and so on. The default value is 315.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowBitmapEffect.DirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Direction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Direction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Noise">
      <summary>Gets or sets the graininess, or "noise level," of the shadow. </summary>
      <returns>The noise level of the shadow. The valid range of values is from 0 through 1. A value of 0 indicates no noise and 1 indicates maximum noise. A value of 0.5 indicates 50 percent noise, a value of 0.75 indicates 75 percent noise, and so on. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowBitmapEffect.NoiseProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Noise" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Noise" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Opacity">
      <summary>Gets or sets the degree of opacity of the shadow. </summary>
      <returns>The degree of opacity. The valid range of values is from 0 through 1. A value of 0 indicates that the shadow is completely transparent, and a value of 1 indicates that the shadow is completely opaque. A value of 0.5 indicates the shadow is 50 percent opaque, a value of 0.725 indicates the shadow is 72.5 percent opaque, and so on. Values less than 0 are treated as 0, while values greater than 1 are treated as 1. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowBitmapEffect.OpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Opacity" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Opacity" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowBitmapEffect.ShadowDepth">
      <summary>Gets or sets the distance between the object and the shadow that it casts. </summary>
      <returns>The distance between the plane of the object casting the shadow and the shadow plane measured in device-independent units (1/96th inch per unit). The valid range of values is from 0 through 300. The default is 5.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowBitmapEffect.ShadowDepthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.ShadowDepth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.ShadowDepth" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Softness">
      <summary>Gets or sets the softness of the shadow. </summary>
      <returns>The shadow's softness. The valid range of values is from 0 through 1. A value of 0.0 indicates no softness (a sharply defined shadow) and 1.0 indicates maximum softness (a very diffused shadow). A value of 0.5 indicates 50 percent softness, a value of 0.75 indicates 75 percent softness, and so on. The default is 0.5. </returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowBitmapEffect.SoftnessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Softness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Softness" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.DropShadowEffect">
      <summary>A bitmap effect that paints a drop shadow around the target texture. </summary>
    </member>
    <member name="M:System.Windows.Media.Effects.DropShadowEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.DropShadowEffect" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius">
      <summary>Gets or sets a value that indicates the radius of the shadow's blur effect. </summary>
      <returns>A value that indicates the radius of the shadow's blur effect. The default is 5.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.BlurRadiusProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.DropShadowEffect.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.Effect" /> object, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</summary>
      <returns>A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.DropShadowEffect.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.Effect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are copied.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.Color">
      <summary>Gets or sets the color of the drop shadow. </summary>
      <returns>The color of the drop shadow. The default is <see cref="P:System.Windows.Media.Colors.Black" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.ColorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Color" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Color" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.Direction">
      <summary>Gets or sets the direction of the drop shadow. </summary>
      <returns>The direction of the drop shadow, in degrees. The default is 315.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.DirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Direction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Direction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.Opacity">
      <summary>Gets or sets the opacity of the drop shadow. </summary>
      <returns>The opacity of the drop shadow. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.OpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Opacity" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Opacity" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.RenderingBias">
      <summary>Gets or sets a value that indicates whether the system renders the drop shadow with emphasis on speed or quality. </summary>
      <returns>A <see cref="T:System.Windows.Media.Effects.RenderingBias" /> value that indicates whether the system renders the drop shadow with emphasis on speed or quality. The default is <see cref="F:System.Windows.Media.Effects.RenderingBias.Performance" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.RenderingBiasProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.RenderingBias" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.RenderingBias" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth">
      <summary>Gets or sets the distance of the drop shadow below the texture. </summary>
      <returns>The distance of the drop shadow below the texture. The default is 5.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.ShadowDepthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.EdgeProfile">
      <summary>Specifies the type of curve to apply to the edge of a bitmap.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.EdgeProfile.Linear">
      <summary>An edge that is a straight line. </summary>
    </member>
    <member name="F:System.Windows.Media.Effects.EdgeProfile.CurvedIn">
      <summary>A concave edge that curves in.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.EdgeProfile.CurvedOut">
      <summary>A convex edge that curves out.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.EdgeProfile.BulgedUp">
      <summary>An edge that curves up and then down, like a ridge. </summary>
    </member>
    <member name="T:System.Windows.Media.Effects.Effect">
      <summary>Provides a custom bitmap effect. </summary>
    </member>
    <member name="M:System.Windows.Media.Effects.Effect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.Effect" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Effects.Effect.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.Effect" /> object, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.  </summary>
      <returns>A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.Effect.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.Effect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are copied.  </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.Effect.EffectMapping">
      <summary>When overridden in a derived class, transforms mouse input and coordinate systems through the effect. </summary>
      <returns>The transform to apply. The default is the identity transform.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.Effect.ImplicitInput">
      <summary>Gets a <see cref="T:System.Windows.Media.Brush" /> that, when it is used as an input for an <see cref="T:System.Windows.Media.Effects.Effect" />, causes the bitmap of the <see cref="T:System.Windows.UIElement" /> that the <see cref="T:System.Windows.Media.Effects.Effect" /> is applied to be that input. </summary>
      <returns>The <see cref="T:System.Windows.Media.Brush" /> that acts as the input.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.EmbossBitmapEffect">
      <summary>Creates a bump mapping of the visual object to give the impression of depth and texture from an artificial light source. </summary>
    </member>
    <member name="M:System.Windows.Media.Effects.EmbossBitmapEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.EmbossBitmapEffect" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.EmbossBitmapEffect.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.EmbossBitmapEffect" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.EmbossBitmapEffect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle">
      <summary>Gets or sets the direction the artificial light is cast upon the embossed object.  </summary>
      <returns>The direction the artificial light is cast upon the embossed object. The valid range is from 0-360 (degrees) with 0 specifying the right-hand side of the object and successive values moving counter-clockwise around the object. The default value is 45.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.EmbossBitmapEffect.Relief">
      <summary>Gets or sets the amount of relief of the emboss.  </summary>
      <returns>The amount of relief of the emboss. The valid range of values is 0-1 with 0 having the least relief and 1 having the most. The default value is 0.44.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.EmbossBitmapEffect.Relief" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.EmbossBitmapEffect.Relief" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.KernelType">
      <summary>Describes the kernel used to create the effect.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.KernelType.Gaussian">
      <summary>A distributed curve that creates a smooth distribution for a blur. </summary>
    </member>
    <member name="F:System.Windows.Media.Effects.KernelType.Box">
      <summary>A simple blur created with a square distribution curve. </summary>
    </member>
    <member name="T:System.Windows.Media.Effects.OuterGlowBitmapEffect">
      <summary>Creates a halo of color around objects or areas of color.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor">
      <summary>Gets or sets the color of the halo glow.  </summary>
      <returns>The color of the halo glow. The default is white. </returns>
    </member>
    <member name="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize">
      <summary>Gets or sets the thickness of the halo glow.  </summary>
      <returns>The thickness of the halo glow, in device-independent unit (1/96th inch). The valid range of values is from 1 through 199. The default is 20.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise">
      <summary>Gets or sets the graininess of the halo glow.  </summary>
      <returns>The graininess (noise level) of the halo glow. The valid range of values is from 0.0 through 1.0, with 0.0 specifying no noise and 1.0 specifying maximum noise. A value of 0.5 indicates 50 percent noise, a value of 0.75 indicates 75 percent noise, and so on. The default value is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.NoiseProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity">
      <summary>Gets or sets the degree of opacity of the halo glow.  </summary>
      <returns>The opacity level of the glow. A value of 0 indicates that the halo glow is completely transparent, while a value of 1 indicates that the glow is completely opaque. A value of 0.5 indicates the glow is 50 percent opaque, a value of 0.725 indicates the glow is 72.5 percent opaque, and so on. Values less than 0 are treated as 0, while values greater than 1 are treated as 1. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.OpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.PixelShader">
      <summary>Provides a managed wrapper around a High Level Shading Language (HLSL) pixel shader.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.PixelShader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.PixelShader" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Effects.PixelShader.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.PixelShader" /> object, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values. </summary>
      <returns>A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.PixelShader.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.PixelShader" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are copied. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="E:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered">
      <summary>Occurs when the render thread cannot process the pixel shader.  </summary>
    </member>
    <member name="M:System.Windows.Media.Effects.PixelShader.SetStreamSource(System.IO.Stream)">
      <summary>Assigns the <see cref="T:System.IO.Stream" /> to use as the source of HLSL bytecode.</summary>
      <param name="source">The stream to read the HLSL bytecode from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Media.Effects.PixelShader.ShaderRenderMode">
      <summary>Gets or sets a value indicating whether to use hardware or software rendering. </summary>
      <returns>A <see cref="T:System.Windows.Media.Effects.ShaderRenderMode" /> value that indicates whether to force the use of hardware or software rendering for the effect.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.PixelShader.ShaderRenderModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.PixelShader.ShaderRenderMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.PixelShader.ShaderRenderMode" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.PixelShader.UriSource">
      <summary>Gets or sets a Pack URI reference to HLSL bytecode in the assembly. </summary>
      <returns>The Pack URI reference to HLSL bytecode in the assembly. </returns>
    </member>
    <member name="F:System.Windows.Media.Effects.PixelShader.UriSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.PixelShader.UriSource" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.PixelShader.UriSource" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.RenderingBias">
      <summary>Indicates whether the system renders an effect with emphasis on speed or quality. </summary>
    </member>
    <member name="F:System.Windows.Media.Effects.RenderingBias.Performance">
      <summary>The rendering system emphasizes performance.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.RenderingBias.Quality">
      <summary>The rendering system emphasizes quality.</summary>
    </member>
    <member name="T:System.Windows.Media.Effects.SamplingMode">
      <summary>Indicates the way <see cref="T:System.Windows.Media.Brush" />-valued dependency properties are sampled in a custom shader effect. </summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.NearestNeighbor">
      <summary>Use nearest neighbor sampling.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.Bilinear">
      <summary>Use bilinear sampling.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.Auto">
      <summary>The system selects the most appropriate sampling mode. </summary>
    </member>
    <member name="T:System.Windows.Media.Effects.ShaderEffect">
      <summary>Provides a custom bitmap effect by using a <see cref="T:System.Windows.Media.Effects.PixelShader" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> object, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.  </summary>
      <returns>A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)">
      <param name="sourceFreezable">The object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are copied. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)">
      <param name="sourceFreezable">The <see cref="T:System.Windows.Freezable" /> to be cloned.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore"></member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex">
      <summary>Gets or sets a value that indicates the shader register to use for the partial derivatives of the texture coordinates with respect to screen space. </summary>
      <returns>The index of the register that contains the partial derivatives.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set the <see cref="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" /> property more than one time or after initial processing of the effect. </exception>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)">
      <param name="sourceFreezable">The instance to copy.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <param name="sourceFreezable">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</param>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingBottom">
      <summary>Gets or sets a value indicating that the effect's output texture is larger than its input texture along the bottom edge. </summary>
      <returns>The padding along the bottom edge of the effect. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The provided value is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingLeft">
      <summary>Gets or sets a value indicating that the effect's output texture is larger than its input texture along the left edge. </summary>
      <returns>The padding along the left edge of the effect. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The provided value is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingRight">
      <summary>Gets or sets a value indicating that the effect's output texture is larger than its input texture along the right edge.</summary>
      <returns>The padding along the right edge of the effect.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The provided value is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingTop">
      <summary>Gets or sets a value indicating that the effect's output texture is larger than its input texture along the top edge.</summary>
      <returns>The padding along the top edge of the effect.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The provided value is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PixelShader">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Effects.PixelShader" /> to use for the effect. </summary>
      <returns>The <see cref="T:System.Windows.Media.Effects.PixelShader" /> for the effect. </returns>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)">
      <summary>Associates a dependency property value with a pixel shader's float constant register. </summary>
      <returns>A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader constant register specified by <paramref name="floatRegisterIndex" />.</returns>
      <param name="floatRegisterIndex">The index of the shader register associated with the dependency property. </param>
      <exception cref="T:System.InvalidOperationException">The dependency property is an unknown type. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="floatRegisterIndex" /> is greater than or equal to 32, or <paramref name="floatRegisterIndex" /> is less than 0. </exception>
    </member>
    <member name="F:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" /> dependency property. </returns>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)">
      <summary>Associates a dependency property value with a pixel shader's sampler register. </summary>
      <returns>A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader sampler register specified by <paramref name="samplerRegisterIndex" />. </returns>
      <param name="samplerRegisterIndex">The index of the shader sampler associated with the dependency property.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)">
      <summary>Associates a dependency property value with a pixel shader's sampler register and a <see cref="T:System.Windows.Media.Effects.SamplingMode" />. </summary>
      <returns>A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader sampler register specified by <paramref name="samplerRegisterIndex" />. </returns>
      <param name="samplerRegisterIndex">The index of the shader sampler associated with the dependency property.</param>
      <param name="samplingMode">The <see cref="T:System.Windows.Media.Effects.SamplingMode" /> for the shader sampler.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)">
      <summary>Associates a dependency property with a shader sampler register.</summary>
      <returns>A dependency property associated with the shader sampler specified by <paramref name="samplerRegisterIndex" />. </returns>
      <param name="dpName">The name of the dependency property.</param>
      <param name="ownerType">The type of the effect that has the dependency property. </param>
      <param name="samplerRegisterIndex">The index of the shader sampler associated with the dependency property.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)">
      <summary>Associates a dependency property with a shader sampler register and a <see cref="T:System.Windows.Media.Effects.SamplingMode" />.</summary>
      <returns>A dependency property associated with the shader sampler specified by <paramref name="samplerRegisterIndex" />. </returns>
      <param name="dpName">The name of the dependency property.</param>
      <param name="ownerType">The type of the effect that has the dependency property. </param>
      <param name="samplerRegisterIndex">The index of the shader sampler associated with the dependency property.</param>
      <param name="samplingMode">The <see cref="T:System.Windows.Media.Effects.SamplingMode" /> for the shader sampler.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)">
      <summary>Notifies the effect that the shader constant or sampler corresponding to the specified dependency property should be updated. </summary>
      <param name="dp">The dependency property to be updated. </param>
    </member>
    <member name="T:System.Windows.Media.Effects.ShaderRenderMode">
      <summary>Indicates the policy for rendering a <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> in software. </summary>
    </member>
    <member name="F:System.Windows.Media.Effects.ShaderRenderMode.Auto">
      <summary>Allow hardware and software rendering.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.ShaderRenderMode.SoftwareOnly">
      <summary>Force software rendering.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.ShaderRenderMode.HardwareOnly">
      <summary>Require hardware rendering, ignore if unavailable.</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapCacheOption">
      <summary>Specifies how a bitmap image takes advantage of memory caching.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCacheOption.Default">
      <summary>Caches the entire image into memory. This is the default value.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCacheOption.OnDemand">
      <summary>Creates a memory store for requested data only. The first request loads the image directly; subsequent requests are filled from the cache.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCacheOption.OnLoad">
      <summary>Caches the entire image into memory at load time. All requests for image data are filled from the memory store.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCacheOption.None">
      <summary>Do not create a memory store. All requests for the image are filled directly by the image file.</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapCodecInfo">
      <summary>Provides information about an imaging codec.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapCodecInfo.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.BitmapCodecInfo" />.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.Author">
      <summary>Gets a value that identifies the author of the codec.</summary>
      <returns>The author of the codec.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat">
      <summary>Gets a value that identifies the container format for the codec.</summary>
      <returns>The container format of the codec.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer">
      <summary>Gets a value that identifies the device manufacturer of the codec.</summary>
      <returns>The device manufacturer of the codec.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels">
      <summary>Gets a value that identifies the device models of the codec.</summary>
      <returns>The device model of the codec.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions">
      <summary>Gets a value that identifies the file extensions associated with the codec.</summary>
      <returns>The file extensions associated with the codec.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName">
      <summary>Gets a value that represents the friendly name of the codec.</summary>
      <returns>The friendly name of the codec.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes">
      <summary>Gets a value that identifies the Multipurpose Internet Mail Extensions (MIME) associated with the codec.</summary>
      <returns>The Multipurpose Internet Mail Extensions (MIME) types associated with the codec.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion">
      <summary>Gets a value that identifies the specification version of the codec.</summary>
      <returns>The specification version of the codec.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation">
      <summary>Gets a value that indicates whether the codec supports animation.</summary>
      <returns>true if the codec supports animation; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless">
      <summary>Gets a value that indicates whether the codec supports lossless of images.</summary>
      <returns>true if the codec supports lossless of images; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames">
      <summary>Gets a value that identifies whether the codec supports multiple frames.</summary>
      <returns>true if the codec supports multiple frames; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.Version">
      <summary>Gets a value that identifies the version of the codec.</summary>
      <returns>The version of the codec.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapCreateOptions">
      <summary>Specifies initialization options for bitmap images.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.None">
      <summary>No <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> are specified. This is the default value.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.PreservePixelFormat">
      <summary>Ensures that the <see cref="T:System.Windows.Media.PixelFormat" /> a file is stored in is the same as it is loaded to.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.DelayCreation">
      <summary>Causes a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> object to delay initialization until it is necessary. This is useful when dealing with collections of images.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.IgnoreColorProfile">
      <summary>Causes a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> to ignore an embedded color profile.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.IgnoreImageCache">
      <summary>Loads images without using an existing image cache. This option should only be selected when images in a cache need to be refreshed.</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapDecoder">
      <summary>Represents a container for bitmap frames. Each bitmap frame is a <see cref="T:System.Windows.Media.Imaging.BitmapSource" />. This abstract class provides a base set of functionality for all derived decoder objects.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapDecoder.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" />.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo">
      <summary>Gets information that describes this codec. </summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapCodecInfo" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapDecoder.ColorContexts">
      <summary>Gets a value that represents the color profile associated with a bitmap, if one is defined.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.ColorContext" /> that represents the embedded color profile of the bitmap. If no color profile has been defined, this property returns null. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapDecoder.Create(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Creates a <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" /> from a <see cref="T:System.IO.Stream" /> by using the specified <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> and <see cref="T:System.Windows.Media.Imaging.BitmapCacheOption" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" />.</returns>
      <param name="bitmapStream">The file stream that identifies the bitmap to decode.</param>
      <param name="createOptions">Identifies the <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> for this decoder.</param>
      <param name="cacheOption">Identifies the <see cref="T:System.Windows.Media.Imaging.BitmapCacheOption" /> for this decoder.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapDecoder.Create(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Creates a <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" /> from a <see cref="T:System.Uri" /> by using the specified <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> and <see cref="T:System.Windows.Media.Imaging.BitmapCacheOption" />. </summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" />.</returns>
      <param name="bitmapUri">The <see cref="T:System.Uri" /> of the bitmap to decode.</param>
      <param name="createOptions">Identifies the <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> for this decoder.</param>
      <param name="cacheOption">Identifies the <see cref="T:System.Windows.Media.Imaging.BitmapCacheOption" /> for this decoder.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapUri" /> is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapUri" /> specifies a class ID of an unsupported format type.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapDecoder.Create(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Net.Cache.RequestCachePolicy)">
      <summary>Creates a <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" /> from a <see cref="T:System.Uri" /> by using the specified <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" />, <see cref="T:System.Windows.Media.Imaging.BitmapCacheOption" /> and <see cref="T:System.Net.Cache.RequestCachePolicy" />. </summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" />.</returns>
      <param name="bitmapUri">The location of the bitmap from which the <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" /> is created.</param>
      <param name="createOptions">The options that are used to create this <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" />.</param>
      <param name="cacheOption">The cache option that is used to create this <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" />.</param>
      <param name="uriCachePolicy">The caching requirements for this <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" />.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapDecoder.CreateInPlaceBitmapMetadataWriter">
      <summary>Creates an instance of <see cref="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter" />, which can be used to update the metadata of a bitmap.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter" />.</returns>
      <exception cref="T:System.InvalidOperationException">The file original image stream is read only.</exception>
      <exception cref="T:System.NotImplementedException">The decoder is not a built in decoder.</exception>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapDecoder.DownloadCompleted">
      <summary>Occurs when a <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" /> has finished downloading bitmap content.</summary>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapDecoder.DownloadFailed">
      <summary>Occurs when bitmap content failed to download.</summary>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapDecoder.DownloadProgress">
      <summary>Occurs when a <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" /> has made progress downloading bitmap content.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapDecoder.Finalize">
      <summary>Frees resources and performs other cleanup operations before the <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" /> is reclaimed by garbage collection. </summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapDecoder.Frames">
      <summary>Gets the content of an individual frame within a bitmap.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapDecoder.IsDownloading">
      <summary>Gets a value that indicates if the decoder is currently downloading content.</summary>
      <returns>true if the decoder is downloading content; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapDecoder.Metadata">
      <summary>Gets an instance of <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> that represents the global metadata associated with this bitmap, if metadata is defined.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> that represents global metadata associated with a bitmap. If no metadata is defined, this property returns null.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapDecoder.Palette">
      <summary>Gets the <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> associated with this decoder. </summary>
      <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> associated with this decoder. If the bitmap has no palette, null is returned. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapDecoder.Preview">
      <summary>Gets a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents the global preview of this bitmap, if one is defined.</summary>
      <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents the global preview of the bitmap. If no preview is defined, this property returns null. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapDecoder.Thumbnail">
      <summary>Gets a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents the thumbnail of the bitmap, if one is defined. </summary>
      <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents a thumbnail of the bitmap. If no thumbnail is defined, this property returns null. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapDecoder.ToString">
      <summary>Converts the current value of a <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" /> to a <see cref="T:System.String" />.</summary>
      <returns>A string representation of the <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapEncoder">
      <summary>Encodes a collection of <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> objects to an image stream. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapEncoder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapEncoder" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo">
      <summary>Gets information that describes this codec. </summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapCodecInfo" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapEncoder.ColorContexts">
      <summary>Gets or sets a value that represents the color profile that is associated with this encoder.</summary>
      <returns>The collection of <see cref="T:System.Windows.Media.ColorContext" /> objects that represents the color profiles that this encoder uses.</returns>
      <exception cref="T:System.InvalidOperationException">The encoder does not support color profiles.</exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Windows.Media.ColorContext" /> value that is passed to the encoder is null.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapEncoder.Create(System.Guid)">
      <summary>Creates a <see cref="T:System.Windows.Media.Imaging.BitmapEncoder" /> from a <see cref="T:System.Guid" /> that identifies the desired bitmap format. </summary>
      <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapEncoder" /> that can encode to the specified <paramref name="containerFormat" />.</returns>
      <param name="containerFormat">Identifies the desired bitmap encoding format.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="containerFormat" /> is Empty.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapEncoder.Frames">
      <summary>Gets or sets the individual frames within an image.</summary>
      <returns>A collection of <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> objects within the image.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> value that is passed to the encoder is null.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapEncoder.Metadata">
      <summary>Gets or sets the metadata that will be associated with this bitmap during encoding.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" />.</returns>
      <exception cref="T:System.InvalidOperationException">The encoder does not support global metadata.</exception>
      <exception cref="T:System.ArgumentNullException">The metadata value that is passed to the encoder is null.</exception>
      <exception cref="T:System.ArgumentNullException">An attempt is made to write metadata in an incompatible format.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapEncoder.Palette">
      <summary>Gets or sets a value that represents the <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> of an encoded bitmap. </summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> value that is passed to the encoder is null.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapEncoder.Preview">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents the global preview of a bitmap, if there is one. </summary>
      <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents the preview of a bitmap.</returns>
      <exception cref="T:System.InvalidOperationException">The bitmap does not support preview.</exception>
      <exception cref="T:System.ArgumentNullException">The value is set to null.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapEncoder.Save(System.IO.Stream)">
      <summary>Encodes a bitmap image to a specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Identifies the file stream that this bitmap is encoded to.</param>
      <exception cref="T:System.InvalidOperationException">The bitmap has already been encoded.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Windows.Media.Imaging.BitmapEncoder.Frames" /> value that is passed to the encoder is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Windows.Media.Imaging.BitmapEncoder.Frames" /> count is less than or equal to zero.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapEncoder.Thumbnail">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents the global embedded thumbnail.</summary>
      <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents the thumbnail of the bitmap.</returns>
      <exception cref="T:System.InvalidOperationException">The bitmap does not support thumbnails.</exception>
      <exception cref="T:System.ArgumentNullException">The value is set to null.</exception>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapFrame">
      <summary>Represents image data returned by a decoder and accepted by encoders.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapFrame.BaseUri">
      <summary>When overridden in a derived class, gets or sets a value that represents the base <see cref="T:System.Uri" /> of the current context.</summary>
      <returns>The <see cref="T:System.Uri" /> of the current context.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapFrame.ColorContexts">
      <summary>When overridden in a derived class, gets a collection of <see cref="T:System.Windows.Media.ColorContext" /> objects that are associated with this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</summary>
      <returns>A read-only collection of <see cref="T:System.Windows.Media.ColorContext" /> objects that are associated with this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.IO.Stream)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> from a given <see cref="T:System.IO.Stream" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
      <param name="bitmapStream">The <see cref="T:System.IO.Stream" /> that is used to construct the <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> from a given <see cref="T:System.IO.Stream" /> with the specified <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> and <see cref="T:System.Windows.Media.Imaging.BitmapCacheOption" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
      <param name="bitmapStream">The stream from which this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> is constructed.</param>
      <param name="createOptions">The options that are used to create this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
      <param name="cacheOption">The cache option that is used to create this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Uri)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> from a given <see cref="T:System.Uri" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
      <param name="bitmapUri">The <see cref="T:System.Uri" /> that identifies the source of the <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Uri,System.Net.Cache.RequestCachePolicy)">
      <summary>Creates a <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> from a given <see cref="T:System.Uri" /> with the specified <see cref="T:System.Net.Cache.RequestCachePolicy" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
      <param name="bitmapUri">The location of the bitmap from which the <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> is created.</param>
      <param name="uriCachePolicy">The caching requirements for this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Creates a <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> from a given <see cref="T:System.Uri" /> with the specified <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> and <see cref="T:System.Windows.Media.Imaging.BitmapCacheOption" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
      <param name="bitmapUri">The location of the bitmap from which the <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> is created.</param>
      <param name="createOptions">The options that are used to create this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
      <param name="cacheOption">The cache option that is used to create this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Net.Cache.RequestCachePolicy)">
      <summary>Creates a <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> from a given <see cref="T:System.Uri" /> with the specified <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" />, <see cref="T:System.Windows.Media.Imaging.BitmapCacheOption" />, and <see cref="T:System.Net.Cache.RequestCachePolicy" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
      <param name="bitmapUri">The location of the bitmap from which the <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> is created.</param>
      <param name="createOptions">The options that are used to create this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
      <param name="cacheOption">The cache option that is used to create this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
      <param name="uriCachePolicy">The caching requirements for this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Windows.Media.Imaging.BitmapSource)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> from a given <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
      <param name="source">The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is used to construct this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.BitmapSource)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> from a given <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> with the specified thumbnail.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
      <param name="source">The source from which the <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> is constructed.</param>
      <param name="thumbnail">A thumbnail image of the resulting <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.BitmapMetadata,System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Media.ColorContext})">
      <summary>Creates a new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> from a given <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> with the specified thumbnail, <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" />, and <see cref="T:System.Windows.Media.ColorContext" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
      <param name="source">The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is used to construct this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
      <param name="thumbnail">A thumbnail image of the resulting <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
      <param name="metadata">The metadata to associate with this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
      <param name="colorContexts">The <see cref="T:System.Windows.Media.ColorContext" /> objects that are associated with this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapFrame.CreateInPlaceBitmapMetadataWriter">
      <summary>When overridden in a derived class, creates an instance of <see cref="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter" />, which can be used to associate metadata with a <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</summary>
      <returns>An <see cref="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapFrame.Decoder">
      <summary>When overridden in a derived class, gets the decoder associated with this instance of <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" /> that is associated with this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapFrame.Thumbnail">
      <summary>When overridden in a derived class, gets the thumbnail image associated with this <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents a thumbnail of the current <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapImage">
      <summary>Provides a specialized <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is optimized for loading images using Extensible Application Markup Language (XAML).</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> class by using the supplied <see cref="T:System.Uri" />.</summary>
      <param name="uriSource">The <see cref="T:System.Uri" /> to use as the source of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="uriSource" /> parameter is null.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri,System.Net.Cache.RequestCachePolicy)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> class with an image whose source is a <see cref="T:System.Uri" />, and is cached according to the provided <see cref="T:System.Net.Cache.RequestCachePolicy" />.</summary>
      <param name="uriSource">The <see cref="T:System.Uri" /> to use as the source of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.</param>
      <param name="uriCachePolicy">The <see cref="T:System.Net.Cache.RequestCachePolicy" /> that specifies the caching requirements for images that are obtained using HTTP.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="uriSource" /> parameter is null.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.BaseUri">
      <summary>Gets or sets a value that represents the base <see cref="T:System.Uri" /> of the current <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> context.</summary>
      <returns>The base <see cref="T:System.Uri" /> of the current context.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.BeginInit">
      <summary>Signals the start of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> initialization.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> is currently being initialized. <see cref="M:System.Windows.Media.Imaging.BitmapImage.BeginInit" /> has already been called.-or-The <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> has already been initialized.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.CacheOption">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Imaging.BitmapCacheOption" /> to use for this instance of <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapCacheOption" /> being used for the <see cref="T:System.Windows.Media.Imaging.BitmapImage" />. The default is <see cref="F:System.Windows.Media.Imaging.BitmapCacheOption.Default" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.CacheOptionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapImage.CacheOption" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapImage.CacheOption" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.BitmapImage" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> for a <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> used for this <see cref="T:System.Windows.Media.Imaging.BitmapImage" />. The default is <see cref="F:System.Windows.Media.Imaging.BitmapCreateOptions.None" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.CreateOptionsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight">
      <summary>Gets or sets the height, in pixels, that the image is decoded to.  </summary>
      <returns>The height, in pixels, that the image is decoded to. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth">
      <summary>Gets or sets the width, in pixels, that the image is decoded to.  </summary>
      <returns>The width, in pixels, that the image is decoded to. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.EndInit">
      <summary>Signals the end of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> initialization.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Media.Imaging.BitmapImage.UriSource" /> or <see cref="P:System.Windows.Media.Imaging.BitmapImage.StreamSource" /> properties are null.-or-The <see cref="M:System.Windows.Media.Imaging.BitmapImage.EndInit" /> method is called without first calling <see cref="M:System.Windows.Media.Imaging.BitmapImage.BeginInit" />.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.IsDownloading">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> is currently downloading content.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> is downloading content; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.Metadata">
      <summary>Not supported. <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> does not support the <see cref="P:System.Windows.Media.Imaging.BitmapImage.Metadata" /> property and will throw a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Not supported.</returns>
      <exception cref="T:System.NotSupportedException">An attempt to read the <see cref="P:System.Windows.Media.Imaging.BitmapImage.Metadata" /> occurs.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.Rotation">
      <summary>Gets or sets the angle that this <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> is rotated to.  </summary>
      <returns>The rotation that is used for the <see cref="T:System.Windows.Media.Imaging.BitmapImage" />. The default is <see cref="F:System.Windows.Media.Imaging.Rotation.Rotate0" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.RotationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapImage.Rotation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapImage.Rotation" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.SourceRect">
      <summary>Gets or sets the rectangle that is used as the source of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.  </summary>
      <returns>The rectangle that is used as the source of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" />. The default is <see cref="P:System.Windows.Int32Rect.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.SourceRectProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapImage.SourceRect" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapImage.SourceRect" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.StreamSource">
      <summary>Gets or sets the stream source of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.  </summary>
      <returns>The stream source of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.StreamSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapImage.StreamSource" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapImage.StreamSource" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.UriCachePolicy">
      <summary>Gets or sets a value that represents the caching policy for images that come from an HTTP source. </summary>
      <returns>The base <see cref="T:System.Net.Cache.RequestCachePolicy" /> of the current context. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.UriCachePolicyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapImage.UriCachePolicy" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapImage.UriCachePolicy" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.UriSource">
      <summary>Gets or sets the <see cref="T:System.Uri" /> source of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.  </summary>
      <returns>The <see cref="T:System.Uri" /> source of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.UriSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapImage.UriSource" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapImage.UriSource" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapMetadata">
      <summary>Provides support for reading and writing metadata to and from a bitmap image.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> for use with the specified image format.</summary>
      <param name="containerFormat">The format of the bitmap image, specified as "gif", "jpeg", "png", or "tiff".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="containerFormat" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.ApplicationName">
      <summary>Gets or sets a value that identifies the name of the application that was used to construct or alter an image file.</summary>
      <returns>The name of the application that was used to construct or alter an image file.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.Author">
      <summary>Gets or sets a value that represents the author of an image.</summary>
      <returns>The author of the image.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.CameraManufacturer">
      <summary>Gets or sets a value that identifies the camera manufacturer that is associated with an image.</summary>
      <returns>The camera manufacturer that is associated with an image.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.CameraModel">
      <summary>Gets or sets a value that identifies the camera model that was used to capture the image.</summary>
      <returns>The camera model that was used to capture the image.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" />. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> to clone.</param>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.Comment">
      <summary>Gets or sets a value that represents a comment that is associated with the image file.</summary>
      <returns>A comment that is associated with the image file.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.ContainsQuery(System.String)">
      <summary>Determines whether a given query string exists within a <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> object.</summary>
      <returns>true if the query string is found within the metadata store; otherwise, false.</returns>
      <param name="query">Identifies the string that is being queried in the current <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="query" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.Copyright">
      <summary>Gets or sets a value that indicates copyright information that is associated with the image file.</summary>
      <returns>The copyright information that is associated with the image file.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.CreateInstanceCore">
      <summary>An Implementation of <see cref="M:System.Windows.Freezable.CreateInstance" />.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.DateTaken">
      <summary>Gets or sets a value that indicates the date that the image was taken.</summary>
      <returns>The date that the image was taken.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.Format">
      <summary>Gets a value that identifies the format of the image.</summary>
      <returns>The format of the bitmap image.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.GetQuery(System.String)">
      <summary>Provides access to a metadata query reader that can extract metadata from a bitmap image file.</summary>
      <returns>The metadata at the specified query location.</returns>
      <param name="query">Identifies the string that is being queried in the current <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="query" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.IsFixedSize">
      <summary>Gets a value that determines whether the <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> object is a fixed size.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> is a fixed size; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.IsReadOnly">
      <summary>Gets a value that indicates whether the metadata that is associated with an image is read-only.</summary>
      <returns>true if the metadata is read-only; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.Keywords">
      <summary>Gets or sets a collection of keywords that describe the bitmap image.</summary>
      <returns>A read-only collection of strings.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.Location">
      <summary>Gets a value that identifies the base location of the metadata that is associated with an image.</summary>
      <returns>The base location of the image metadata.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.Rating">
      <summary>Gets or sets a value that identifies the image rating.</summary>
      <returns>The rating value between 0 and 5.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.RemoveQuery(System.String)">
      <summary>Removes a metadata query from an instance of <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" />.</summary>
      <param name="query">The metadata query to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="query" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Occurs when image metadata is read-only.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.SetQuery(System.String,System.Object)">
      <summary>Provides access to a metadata query writer that can write metadata to a bitmap image file.</summary>
      <param name="query">Identifies the location of the metadata to be written.</param>
      <param name="value">The value of the metadata to be written.</param>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.Subject">
      <summary>Gets or sets a value that indicates the subject matter of the bitmap image.</summary>
      <returns>The subject of the bitmap image.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadata.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapMetadata.Title">
      <summary>Gets or sets a value that identifies the title of an image file.</summary>
      <returns>The title of an image file.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapMetadataBlob">
      <summary>Provides a placeholder for metadata items that cannot be converted from C# to an underlying data type that persists metadata. The blob is converted into an array of bytes to preserve the content.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadataBlob.#ctor(System.Byte[])">
      <summary>Initializes an instance of <see cref="T:System.Windows.Media.Imaging.BitmapMetadataBlob" /> and converts the metadata it holds into an array of bytes to persist its content.</summary>
      <param name="blob">Placeholder metadata.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapMetadataBlob.GetBlobValue">
      <summary>Returns an array of bytes that represents the value of a <see cref="T:System.Windows.Media.Imaging.BitmapMetadataBlob" />.</summary>
      <returns>An array of bytes.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapPalette">
      <summary>Defines the available color palette for a supported image type.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapPalette.#ctor(System.Collections.Generic.IList{System.Windows.Media.Color})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> class with the specified colors.</summary>
      <param name="colors">The colors to add to the custom palette.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="colors" /> parameter is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="colors" /> parameter is less than 1 or greater than 256.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapPalette.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> class based on the specified <see cref="T:System.Windows.Media.Imaging.BitmapSource" />. The new <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> is limited to a specified maximum color count.</summary>
      <param name="bitmapSource">The source bitmap from which the palette is read or constructed.</param>
      <param name="maxColorCount">The maximum number of colors the new <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> can use.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapSource" /> parameter is null.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalette.Colors">
      <summary>Get the colors defined in a palette.</summary>
      <returns>The list of colors defined in a palette.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapPalettes">
      <summary>Defines several color palettes that are commonly used by bitmap images.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.BlackAndWhite">
      <summary>Gets a value that represents a black-and-white color palette. This palette consists of 2 colors total.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.BlackAndWhiteTransparent">
      <summary>Gets a value that represents a black, white, and transparent color palette. This palette consists of 3 colors total.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray16">
      <summary>Gets a value that represents a color palette that contains 16 shades of gray. The palette ranges from black to gray to white. This palette contains 16 total colors.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray16Transparent">
      <summary>Gets a value that represents a color palette that contains 16 shades of gray. The palette ranges from black to gray to white with an additional transparent color. This palette contains 17 total colors.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray256">
      <summary>Gets a value that represents a color palette that contains 256 shades of gray, ranging from black to gray to white. This palette contains 256 total colors.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray256Transparent">
      <summary>Gets a value that represents a color palette that contains 256 shades of gray, ranging from black to gray to white with an additional transparent color. This palette contains 257 total colors.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray4">
      <summary>Gets a value that represents a color palette that contains 4 shades of gray, ranging from black to gray to white. This palette contains 4 total colors.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray4Transparent">
      <summary>Gets a value that represents a color palette that contains 4 shades of gray, ranging from black to gray to white with an additional transparent color. This palette contains 5 total colors.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone125">
      <summary>Gets a value that represents a color palette that contains 125 primary colors and 16 system colors, with duplicate colors removed. There are a total of 133 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone125Transparent">
      <summary>Gets a value that represents a color palette that contains 125 primary colors, 16 system colors, and 1 additional transparent color. Duplicate colors in the palette are removed. There are a total of 134 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone216">
      <summary>Gets a value that represents a color palette that contains 216 primary colors and 16 system colors, with duplicate colors removed. There are a total of 224 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone216Transparent">
      <summary>Gets a value that represents a color palette that contains 216 primary colors, 16 system colors, and 1 additional transparent color. Duplicate colors in the palette are removed. There are a total of 225 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone252">
      <summary>Gets a value that represents a color palette that contains 252 primary colors and 16 system colors, with duplicate colors removed. There are a total of 256 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone252Transparent">
      <summary>Gets a value that represents a color palette that contains 252 primary colors, 16 system colors, and 1 additional transparent color. Duplicate colors in the palette are removed. There are a total of 256 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone256">
      <summary>Gets a value that represents a color palette that contains 256 primary colors and 16 system colors, with duplicate colors removed. There are a total of 256 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone256Transparent">
      <summary>Gets a value that represents a color palette that contains 256 primary colors, 16 system colors, and 1 additional transparent color that replaces the final color in the sequence. Duplicate colors in the palette are removed. There are a total of 256 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone27">
      <summary>Gets a value that represents a color palette that contains 27 primary colors and 16 system colors, with duplicate colors removed. There are a total of 35 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone27Transparent">
      <summary>Gets a value that represents a color palette that contains 27 primary colors and 16 system colors, with duplicate colors removed and 1 additional transparent color. There are a total of 36 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone64">
      <summary>Gets a value that represents a color palette that contains 64 primary colors and 16 system colors, with duplicate colors removed. There are a total of 72 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone64Transparent">
      <summary>Gets a value that represents a color palette that contains 64 primary colors and 16 system colors, with duplicate colors removed and 1 additional transparent color. There are a total of 73 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone8">
      <summary>Gets a value that represents a color palette that contains 8 primary colors and 16 system colors, with duplicate colors removed. There are a total of 16 colors in this palette, which are the same as the system palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone8Transparent">
      <summary>Gets a value that represents a color palette that contains 8 primary colors and 16 system colors, with duplicate colors removed and 1 additional transparent color. There are a total of 17 colors in this palette. </summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.WebPalette">
      <summary>Gets a value that represents a color palette that contains 216 primary colors and 16 system colors, with duplicate colors removed. There are a total of 224 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapPalettes.WebPaletteTransparent">
      <summary>Gets a value that represents a color palette that contains 216 primary colors and 16 system colors, with duplicate colors removed and 1 additional transparent color. There are a total of 225 colors in this palette.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapSizeOptions">
      <summary>Defines size-related attributes of a cached bitmap image. A bitmap is scaled based on values that are defined by this class.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSizeOptions.FromEmptyOptions">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.BitmapSizeOptions" /> with empty sizing properties.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapSizeOptions" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSizeOptions.FromHeight(System.Int32)">
      <summary>Initializes an instance of <see cref="T:System.Windows.Media.Imaging.BitmapSizeOptions" /> that preserves the aspect ratio of the source bitmap and specifies an initial <see cref="P:System.Windows.Media.Imaging.BitmapSizeOptions.PixelHeight" />.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapSizeOptions" />.</returns>
      <param name="pixelHeight">The height, in pixels, of the resulting bitmap.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs when <paramref name="pixelHeight" /> is less than zero.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSizeOptions.FromRotation(System.Windows.Media.Imaging.Rotation)">
      <summary>Initializes an instance of <see cref="T:System.Windows.Media.Imaging.BitmapSizeOptions" /> that preserves the aspect ratio of the source bitmap and specifies an initial <see cref="T:System.Windows.Media.Imaging.Rotation" /> to apply.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Imaging.BitmapSizeOptions" />.</returns>
      <param name="rotation">The initial rotation value to apply. Only 90 degree increments are supported.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSizeOptions.FromWidth(System.Int32)">
      <summary>Initializes an instance of <see cref="T:System.Windows.Media.Imaging.BitmapSizeOptions" /> that preserves the aspect ratio of the source bitmap and specifies an initial <see cref="P:System.Windows.Media.Imaging.BitmapSizeOptions.PixelWidth" />.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapSizeOptions" />.</returns>
      <param name="pixelWidth">The width, in pixels, of the resulting bitmap.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs when <paramref name="pixelWidth" /> is less than zero.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSizeOptions.FromWidthAndHeight(System.Int32,System.Int32)">
      <summary>Initializes an instance of <see cref="T:System.Windows.Media.Imaging.BitmapSizeOptions" /> that does not preserve the original bitmap aspect ratio.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Imaging.BitmapSizeOptions" />.</returns>
      <param name="pixelWidth">The width, in pixels, of the resulting bitmap.</param>
      <param name="pixelHeight">The height, in pixels, of the resulting bitmap.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs when <paramref name="pixelWidth" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs when <paramref name="pixelHeight" /> is less than zero.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSizeOptions.PixelHeight">
      <summary>The height, in pixels, of the bitmap image.</summary>
      <returns>The height of the bitmap.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSizeOptions.PixelWidth">
      <summary>The width, in pixels, of the bitmap image.</summary>
      <returns>The width of the bitmap.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSizeOptions.PreservesAspectRatio">
      <summary>Gets a value that determines whether the aspect ratio of the original bitmap image is preserved.</summary>
      <returns>true if the original aspect ratio is maintained; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSizeOptions.Rotation">
      <summary>Gets a value that represents the rotation angle that is applied to a bitmap. </summary>
      <returns>The rotation angle that is applied to the image.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapSource">
      <summary>Represents a single, constant set of pixels at a certain size and resolution.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin">
      <summary>Checks whether the bitmap source content is from a known site of origin. This method is used to make sure that pixel copying operations are safe. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Imaging.BitmapSource" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> to clone..</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Array,System.Int32,System.Int32)">
      <summary>Copies the bitmap pixel data into an array of pixels with the specified stride, starting at the specified offset.</summary>
      <param name="pixels">The destination array.</param>
      <param name="stride">The stride of the bitmap.</param>
      <param name="offset">The pixel location where copying starts.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
      <summary>Copies the bitmap pixel data within the specified rectangle into an array of pixels that has the specified stride starting at the specified offset.</summary>
      <param name="sourceRect">The source rectangle to copy. An <see cref="P:System.Windows.Int32Rect.Empty" /> value specifies the entire bitmap.</param>
      <param name="pixels">The destination array.</param>
      <param name="stride">The stride of the bitmap.</param>
      <param name="offset">The pixel location where copying begins.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
      <summary>Copies the bitmap pixel data within the specified rectangle </summary>
      <param name="sourceRect">The source rectangle to copy. An <see cref="P:System.Windows.Int32Rect.Empty" /> value specifies the entire bitmap.</param>
      <param name="buffer">A pointer to the buffer.</param>
      <param name="bufferSize">The size of the buffer.</param>
      <param name="stride">The stride of the bitmap.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Array,System.Int32)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> from an array of pixels.</summary>
      <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is created from the specified array of pixels.</returns>
      <param name="pixelWidth">The width of the bitmap.</param>
      <param name="pixelHeight">The height of the bitmap.</param>
      <param name="dpiX">The horizontal dots per inch (dpi) of the bitmap.</param>
      <param name="dpiY">The vertical dots per inch (dpi) of the bitmap.</param>
      <param name="pixelFormat">The pixel format of the bitmap.</param>
      <param name="palette">The palette of the bitmap.</param>
      <param name="pixels">An array of bytes that represents the content of a bitmap image.</param>
      <param name="stride">The stride of the bitmap.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> from an array of pixels that are stored in unmanaged memory.</summary>
      <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is created from the array of pixels in unmanaged memory.</returns>
      <param name="pixelWidth">The width of the bitmap.</param>
      <param name="pixelHeight">The height of the bitmap.</param>
      <param name="dpiX">The horizontal dots per inch (dpi) of the bitmap.</param>
      <param name="dpiY">The vertical dots per inch (dpi) of the bitmap.</param>
      <param name="pixelFormat">The pixel format of the bitmap.</param>
      <param name="palette">The palette of the bitmap.</param>
      <param name="buffer">A pointer to the buffer that contains the bitmap data in memory.</param>
      <param name="bufferSize">The size of the buffer.</param>
      <param name="stride">The stride of the bitmap.</param>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapSource.DecodeFailed">
      <summary>Occurs when the image fails to load, due to a corrupt image header.</summary>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapSource.DownloadCompleted">
      <summary>Occurs when the bitmap content has been completely downloaded.</summary>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapSource.DownloadFailed">
      <summary>Occurs when the bitmap content failed to download.</summary>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapSource.DownloadProgress">
      <summary>Occurs when the download progress of the bitmap content has changed.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.DpiX">
      <summary>Gets the horizontal dots per inch (dpi) of the image. </summary>
      <returns>The horizontal dots per inch (dpi) of the image; that is, the dots per inch (dpi) along the x-axis.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.DpiY">
      <summary>Gets the vertical dots per inch (dpi) of the image. </summary>
      <returns>The vertical dots per inch (dpi) of the image; that is, the dots per inch (dpi) along the y-axis.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.Format">
      <summary>Gets the native <see cref="T:System.Windows.Media.PixelFormat" /> of the bitmap data. </summary>
      <returns>The pixel format of the bitmap data.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.FreezeCore(System.Boolean)">
      <summary>Makes an instance of <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> or a derived class immutable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this <see cref="T:System.Windows.Media.Animation.Animatable" /> can be made unmodifiable, or false if it cannot be made unmodifiable. If <paramref name="isChecking" /> is false, this method returns true if the if this <see cref="T:System.Windows.Media.Animation.Animatable" /> is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this instance should actually freeze itself when this method is called; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Imaging.BitmapSource" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> to copy and freeze.</param>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.Height">
      <summary>Gets the height of the source bitmap in device-independent units (1/96th inch per unit). </summary>
      <returns>The height of the bitmap in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.IsDownloading">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> content is currently downloading. </summary>
      <returns>true if the bitmap source is currently downloading; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.Metadata">
      <summary>Gets the metadata that is associated with this bitmap image. </summary>
      <returns>The metadata that is associated with the bitmap image.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.Palette">
      <summary>Gets the color palette of the bitmap, if one is specified. </summary>
      <returns>The color palette of the bitmap.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight">
      <summary>Gets the height of the bitmap in pixels. </summary>
      <returns>The height of the bitmap in pixels.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth">
      <summary>Gets the width of the bitmap in pixels. </summary>
      <returns>The width of the bitmap in pixels.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.Width">
      <summary>Gets the width of the bitmap in device-independent units (1/96th inch per unit). </summary>
      <returns>The width of the bitmap in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.BmpBitmapDecoder">
      <summary>Defines a decoder for bitmap (BMP) encoded images.  </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BmpBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.BmpBitmapDecoder" /> from the specified file stream with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapStream">Bitmap stream to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The cache method to use for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapStream" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapStream" /> is not a bitmap (BMP) encoded image.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.BmpBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.BmpBitmapDecoder" /> from the specified <see cref="T:System.Uri" /> with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapUri">
        <see cref="T:System.Uri" /> that identifies the bitmap to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The cache method to use for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapUri" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapUri" /> is not a bitmap (BMP) encoded image.</exception>
    </member>
    <member name="T:System.Windows.Media.Imaging.BmpBitmapEncoder">
      <summary>Defines an encoder that is used to encode bitmap (BMP) format images.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BmpBitmapEncoder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BmpBitmapEncoder" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.CachedBitmap">
      <summary>Provides caching functionality for a <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.CachedBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.CachedBitmap" /> that has the specified source, bitmap create options, and bitmap cache option.</summary>
      <param name="source">The source bitmap that is being cached.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">Specifies how the bitmap is cached to memory.</param>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.CachedBitmap.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.CachedBitmap" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.CachedBitmap.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.CachedBitmap" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.ColorConvertedBitmap">
      <summary>Changes the color space of a <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.ColorContext,System.Windows.Media.ColorContext,System.Windows.Media.PixelFormat)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> class by using the specified values.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is converted.</param>
      <param name="sourceColorContext">The <see cref="T:System.Windows.Media.ColorContext" /> of the source bitmap.</param>
      <param name="destinationColorContext">The <see cref="T:System.Windows.Media.ColorContext" /> of the converted bitmap.</param>
      <param name="format">The <see cref="T:System.Windows.Media.PixelFormat" /> of the converted bitmap.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.BeginInit">
      <summary>Signals the start of the <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> initialization.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> is currently being initialized. <see cref="M:System.Windows.Media.Imaging.ColorConvertedBitmap.BeginInit" /> has already been called.-or-The <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> has already been initialized.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationColorContext">
      <summary>Gets or sets a value that identifies the color profile, as defined by the <see cref="T:System.Windows.Media.ColorContext" /> class, of the converted bitmap.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.ColorContext" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationColorContextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationColorContext" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationColorContext" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationFormat">
      <summary>Gets or sets a value that represents the <see cref="T:System.Windows.Media.PixelFormat" /> of the converted bitmap.   </summary>
      <returns>An instance of <see cref="T:System.Windows.Media.PixelFormat" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationFormat" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationFormat" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.EndInit">
      <summary>Signals the end of the <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> initialization.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Media.Imaging.ColorConvertedBitmap.Source" />, <see cref="P:System.Windows.Media.Imaging.ColorConvertedBitmap.SourceColorContext" />, or <see cref="P:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationColorContext" /> property is null.-or-The <see cref="M:System.Windows.Media.Imaging.ColorConvertedBitmap.EndInit" /> method is called without first calling <see cref="M:System.Windows.Media.Imaging.ColorConvertedBitmap.BeginInit" />.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.ColorConvertedBitmap.Source">
      <summary>Gets or sets a value that identifies the source bitmap that is converted.  </summary>
      <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.ColorConvertedBitmap.SourceColorContext">
      <summary>Gets or sets a value that identifies the color profile of the source bitmap.  </summary>
      <returns>An instance of <see cref="T:System.Windows.Media.ColorContext" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.ColorConvertedBitmap.SourceColorContextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.ColorConvertedBitmap.SourceColorContext" />  dependency property. </summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.ColorConvertedBitmap.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.ColorConvertedBitmap.Source" />  dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.ColorConvertedBitmap.Source" />  dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.CroppedBitmap">
      <summary>Crops a <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.CroppedBitmap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.CroppedBitmap" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.CroppedBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Windows.Int32Rect)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.CroppedBitmap" /> class that has the specified <see cref="P:System.Windows.Media.Imaging.CroppedBitmap.Source" /> and <see cref="P:System.Windows.Media.Imaging.CroppedBitmap.SourceRect" />.</summary>
      <param name="source">The <see cref="P:System.Windows.Media.Imaging.CroppedBitmap.Source" /> of the new <see cref="T:System.Windows.Media.Imaging.CroppedBitmap" /> instance.</param>
      <param name="sourceRect">The <see cref="P:System.Windows.Media.Imaging.CroppedBitmap.SourceRect" /> of the new <see cref="T:System.Windows.Media.Imaging.CroppedBitmap" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">Occurs when s<paramref name="ource" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.CroppedBitmap.BeginInit">
      <summary>Signals the start of the <see cref="T:System.Windows.Media.Imaging.CroppedBitmap" /> initialization.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.Imaging.CroppedBitmap" /> is currently being initialized. <see cref="M:System.Windows.Media.Imaging.CroppedBitmap.BeginInit" /> has already been called.-or-The <see cref="T:System.Windows.Media.Imaging.CroppedBitmap" /> has already been initialized.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.CroppedBitmap.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.CroppedBitmap" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.CroppedBitmap.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.CroppedBitmap" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.CroppedBitmap.EndInit">
      <summary>Signals the end of the <see cref="T:System.Windows.Media.Imaging.CroppedBitmap" /> initialization.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Media.Imaging.CroppedBitmap.Source" /> property is null.-or-The <see cref="M:System.Windows.Media.Imaging.CroppedBitmap.EndInit" /> method is called without first calling <see cref="M:System.Windows.Media.Imaging.CroppedBitmap.BeginInit" />.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.CroppedBitmap.Source">
      <summary>Gets or sets the source for the bitmap.   </summary>
      <returns>The source for the bitmap. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.CroppedBitmap.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.CroppedBitmap.Source" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.CroppedBitmap.Source" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.CroppedBitmap.SourceRect">
      <summary>Gets or sets the rectangular area that the bitmap is cropped to.  </summary>
      <returns>The rectangular area that the bitmap is cropped to. The default is <see cref="P:System.Windows.Int32Rect.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.CroppedBitmap.SourceRectProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.CroppedBitmap.SourceRect" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.CroppedBitmap.SourceRect" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.DownloadProgressEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Media.Imaging.BitmapSource.DownloadProgress" /> and <see cref="E:System.Windows.Media.Imaging.BitmapDecoder.DownloadProgress" /> events.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.DownloadProgressEventArgs.Progress">
      <summary>Gets a value that represents the download progress of a bitmap, expressed as a percentage. </summary>
      <returns>The progress, expressed as a percentage, to which a bitmap has been downloaded. The returned value will be between 1 and 100.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.FormatConvertedBitmap">
      <summary>Provides pixel format conversion functionality for a <see cref="T:System.Windows.Media.Imaging.BitmapSource" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" /> class that has the specified <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.Source" />, <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationFormat" />, <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationPalette" />, and <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.AlphaThreshold" />.</summary>
      <param name="source">The <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.Source" /> of the new <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" /> instance.</param>
      <param name="destinationFormat">The <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationFormat" /> of the new <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" /> instance.</param>
      <param name="destinationPalette">The <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationPalette" /> of the new <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" /> instance if <paramref name="destinationFormat" /> is an indexed format.</param>
      <param name="alphaThreshold">The <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.AlphaThreshold" /> of the new <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" /> instance.</param>
    </member>
    <member name="P:System.Windows.Media.Imaging.FormatConvertedBitmap.AlphaThreshold">
      <summary>Gets or sets the alpha channel threshold of a bitmap when converting to palletized formats that recognizes an alpha color.  </summary>
      <returns>The alpha channel threshold for this <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" />. The default value is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.FormatConvertedBitmap.AlphaThresholdProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.AlphaThreshold" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.AlphaThreshold" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.BeginInit">
      <summary>Signals the start of the <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" /> initialization. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" /> is currently being initialized. <see cref="M:System.Windows.Media.Imaging.FormatConvertedBitmap.BeginInit" /> has already been called.-or-The <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" /> has already been initialized.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationFormat">
      <summary>Gets or sets the pixel format to convert the bitmap to.  </summary>
      <returns>The pixel format to apply to the bitmap. The default value is <see cref="P:System.Windows.Media.PixelFormats.Pbgra32" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationFormat" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationFormat" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationPalette">
      <summary>Gets or sets the palette to apply to the bitmap if the format is indexed.  </summary>
      <returns>The destination palette to apply to the bitmap. The default value is null. </returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationPaletteProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationPalette" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationPalette" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.EndInit">
      <summary>Signals the end of the <see cref="T:System.Windows.Media.Imaging.FormatConvertedBitmap" /> initialization. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.Source" /> property is null.-or-The <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationFormat" /> property is an indexed format and the <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationPalette" /> property is null.-or-The palette colors do not match the destination format.-or-The <see cref="M:System.Windows.Media.Imaging.FormatConvertedBitmap.EndInit" /> method is called without first calling <see cref="M:System.Windows.Media.Imaging.FormatConvertedBitmap.BeginInit" />.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.FormatConvertedBitmap.Source">
      <summary>Gets or sets the source for the bitmap.   </summary>
      <returns>The source for the bitmap. The default value is null. </returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.FormatConvertedBitmap.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.Source" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.FormatConvertedBitmap.Source" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.GifBitmapDecoder">
      <summary>Defines a decoder for Graphics Interchange Format (GIF) encoded images.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.GifBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.GifBitmapDecoder" /> from the specified file stream with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapStream">Bitmap stream to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The cache method to use for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapStream" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapStream" /> is not a Graphics Interchange Format (GIF) encoded image.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.GifBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.GifBitmapDecoder" /> from the specified <see cref="T:System.Uri" /> with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapUri">
        <see cref="T:System.Uri" /> that identifies the bitmap to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The cache method to use for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapUri" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapUri" /> is not a Graphics Interchange Format (GIF) encoded image.</exception>
    </member>
    <member name="T:System.Windows.Media.Imaging.GifBitmapEncoder">
      <summary>Defines an encoder that is used to encode Graphics Interchange Format (GIF) images.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.GifBitmapEncoder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.GifBitmapEncoder" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.IconBitmapDecoder">
      <summary>Defines a specialized decoder for icon (.ico) encoded images. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.IconBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.IconBitmapDecoder" /> class from the specified file stream, with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapStream">The bitmap stream to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The cache method to use for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapStream" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapStream" /> is not an icon encoded image.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.IconBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.IconBitmapDecoder" /> class from the specified <see cref="T:System.Uri" />, with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapUri">The <see cref="T:System.Uri" /> that identifies the bitmap to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The cache method to use for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapUri" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapUri" /> is not an icon encoded image.</exception>
    </member>
    <member name="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter">
      <summary>Enables in-place updates to existing blocks of <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.TrySave">
      <summary>Gets a value that indicates whether image metadata can be saved successfully.</summary>
      <returns>true if bitmap metadata can be written successfully; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.JpegBitmapDecoder">
      <summary>Defines a decoder for Joint Photographics Experts Group (JPEG) encoded images. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.JpegBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.JpegBitmapDecoder" /> class from the specified file stream, with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapStream">The bitmap stream to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The cache method to use for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapStream" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapStream" /> is not a Joint Photographics Experts Group (JPEG) encoded image.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.JpegBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.JpegBitmapDecoder" /> class from the specified <see cref="T:System.Uri" />, with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapUri">The <see cref="T:System.Uri" /> that identifies the bitmap to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The cache method to use for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapUri" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapUri" /> is not a Joint Photographics Experts Group (JPEG) encoded image.</exception>
    </member>
    <member name="T:System.Windows.Media.Imaging.JpegBitmapEncoder">
      <summary>Defines an encoder that is used to encode Joint Photographics Experts Group (JPEG) format images.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.JpegBitmapEncoder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.JpegBitmapEncoder" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.JpegBitmapEncoder.FlipHorizontal">
      <summary>Gets or sets a value that indicates whether a Joint Photographics Experts Group (JPEG) image should be flipped horizontally during encoding.</summary>
      <returns>true if the image is flipped horizontally during encoding; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.JpegBitmapEncoder.FlipVertical">
      <summary>Gets or sets a value that indicates whether a Joint Photographics Experts Group (JPEG) image should be flipped vertically during encoding.</summary>
      <returns>true if the image is flipped vertically during encoding; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.JpegBitmapEncoder.QualityLevel">
      <summary>Gets or sets a value that indicates the quality level of the resulting Joint Photographics Experts Group (JPEG) image.</summary>
      <returns>The quality level of the JPEG image. The value range is 1 (lowest quality) to 100 (highest quality) inclusive. </returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.JpegBitmapEncoder.Rotation">
      <summary>Gets or sets a value that represents the degree to which a Joint Photographics Experts Group (JPEG) image is rotated.</summary>
      <returns>The degree to which the image is rotated.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.LateBoundBitmapDecoder">
      <summary>Defines a decoder that requires delayed bitmap creation such as asynchronous image downloads. </summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.LateBoundBitmapDecoder.CodecInfo">
      <summary>Gets information that describes this codec.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapCodecInfo" />. This property has no default value. If the late bound decoder is still downloading, this property returns null.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.LateBoundBitmapDecoder.ColorContexts">
      <summary>Gets a value that represents the color profile that is associated with a bitmap, if one is defined.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.ColorContext" /> that represents the embedded color profile of the bitmap. If no color profile has been defined, or if the <see cref="T:System.Windows.Media.Imaging.LateBoundBitmapDecoder" /> is still downloading content, this property returns null. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.LateBoundBitmapDecoder.Decoder">
      <summary>Gets the underlying decoder that is associated with this late-bound decoder.</summary>
      <returns>The underlying <see cref="T:System.Windows.Media.Imaging.BitmapDecoder" />. If the <see cref="T:System.Windows.Media.Imaging.LateBoundBitmapDecoder" /> is still downloading a bitmap, the underlying decoder is null. Otherwise, the underlying decoder is created on first access.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.LateBoundBitmapDecoder.Frames">
      <summary>Gets the content of an individual frame within a bitmap.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Imaging.BitmapFrame" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.LateBoundBitmapDecoder.IsDownloading">
      <summary>Gets a value that indicates whether the decoder is currently downloading content.</summary>
      <returns>true if the decoder is downloading content; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.LateBoundBitmapDecoder.Palette">
      <summary>Gets the <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> that is associated with this decoder.</summary>
      <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> that is associated with this decoder. If the bitmap has no palette, or if the <see cref="T:System.Windows.Media.Imaging.LateBoundBitmapDecoder" /> is still downloading content, this property returns null. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.LateBoundBitmapDecoder.Preview">
      <summary>Gets a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents the global preview of this bitmap, if one is defined.</summary>
      <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents the global preview of the bitmap. If no preview is defined, or if the <see cref="T:System.Windows.Media.Imaging.LateBoundBitmapDecoder" /> is still downloading content, this property returns null. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.LateBoundBitmapDecoder.Thumbnail">
      <summary>Gets a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents the thumbnail of the bitmap, if one is defined.</summary>
      <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that represents a thumbnail of the bitmap. If no thumbnail is defined, or if the <see cref="T:System.Windows.Media.Imaging.LateBoundBitmapDecoder" /> is still downloading content, this property returns null. This property has no default value.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.PngBitmapDecoder">
      <summary>Defines a decoder for Portable Network Graphics (PNG) encoded images. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.PngBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.PngBitmapDecoder" /> from the specified file stream with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapStream">The bitmap stream to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The cache method to use for the bitmap image..</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapStream" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapStream" /> is not a Portable Network Graphics (PNG) encoded image.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.PngBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.PngBitmapDecoder" /> from the specified <see cref="T:System.Uri" /> with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapUri">The <see cref="T:System.Uri" /> that identifies the bitmap to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The cache method to use for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapUri" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapUri" /> is not a Portable Network Graphics (PNG) encoded image.</exception>
    </member>
    <member name="T:System.Windows.Media.Imaging.PngBitmapEncoder">
      <summary>Defines an encoder that is used to encode Portable Network Graphics (PNG) format images. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.PngBitmapEncoder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.PngBitmapEncoder" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.PngBitmapEncoder.Interlace">
      <summary>Gets or sets a value that indicates whether the Portable Network Graphics (PNG) bitmap should interlace.</summary>
      <returns>One of the <see cref="P:System.Windows.Media.Imaging.PngBitmapEncoder.Interlace" /> values. The default is <see cref="F:System.Windows.Media.Imaging.PngInterlaceOption.Default" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.PngInterlaceOption">
      <summary>Specifies whether a Portable Network Graphics (PNG) format image is interlaced during encoding.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.PngInterlaceOption.Default">
      <summary>The <see cref="T:System.Windows.Media.Imaging.PngBitmapEncoder" /> determines whether the image should be interlaced.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.PngInterlaceOption.On">
      <summary>The resulting bitmap image is interlaced.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.PngInterlaceOption.Off">
      <summary>The resulting bitmap image is not interlaced.</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.RenderTargetBitmap">
      <summary>Converts a <see cref="T:System.Windows.Media.Visual" /> object into a bitmap. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.RenderTargetBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.RenderTargetBitmap" /> class that has the specified parameters.  </summary>
      <param name="pixelWidth">The width of the bitmap.</param>
      <param name="pixelHeight">The height of the bitmap.</param>
      <param name="dpiX">The horizontal DPI of the bitmap.</param>
      <param name="dpiY">The vertical DPI of the bitmap.</param>
      <param name="pixelFormat">The format of the bitmap.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.RenderTargetBitmap.Clear">
      <summary>Clears the render target and sets all pixels to transparent black.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.RenderTargetBitmap.Render(System.Windows.Media.Visual)">
      <summary>Renders the <see cref="T:System.Windows.Media.Visual" /> object.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> object to be used as a bitmap.</param>
    </member>
    <member name="T:System.Windows.Media.Imaging.Rotation">
      <summary>Specifies the rotation to apply to a bitmap image. </summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.Rotation.Rotate0">
      <summary>The bitmap is not rotated. This is the default value.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.Rotation.Rotate90">
      <summary>Rotate the bitmap clockwise by 90 degrees.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.Rotation.Rotate180">
      <summary>Rotate the bitmap clockwise by 180 degrees.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.Rotation.Rotate270">
      <summary>Rotate the bitmap clockwise by 270 degrees.</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.TiffBitmapDecoder">
      <summary>Defines a decoder for Tagged Image File Format (TIFF) encoded images. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.TiffBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.TiffBitmapDecoder" /> class from the specified file stream, with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapStream">The bitmap stream to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The caching method for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapStream" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapStream" /> is not a Tagged Image File Format (TIFF) encoded image.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.TiffBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.TiffBitmapDecoder" /> class from the specified <see cref="T:System.Uri" />, with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapUri">The <see cref="T:System.Uri" /> that identifies the bitmap to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The caching method for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapUri" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapUri" /> is not a Tagged Image File Format (TIFF) encoded image.</exception>
    </member>
    <member name="T:System.Windows.Media.Imaging.TiffBitmapEncoder">
      <summary>Defines an encoder that is used to encode Tagged Image File Format (TIFF) format images.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.TiffBitmapEncoder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.TiffBitmapEncoder" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.TiffBitmapEncoder.Compression">
      <summary>Gets or sets a value that indicates the type of compression that is used by this Tagged Image File Format (TIFF) image.</summary>
      <returns>One of the <see cref="T:System.Windows.Media.Imaging.TiffCompressOption" /> values. The default is <see cref="F:System.Windows.Media.Imaging.TiffCompressOption.Default" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.TiffCompressOption">
      <summary>Specifies the possible compression schemes for Tagged Image File Format (TIFF) bitmap images.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.TiffCompressOption.Default">
      <summary>The <see cref="T:System.Windows.Media.Imaging.TiffBitmapEncoder" /> encoder attempts to save the bitmap with the best possible compression schema. </summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.TiffCompressOption.None">
      <summary>The Tagged Image File Format (TIFF) image is not compressed.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.TiffCompressOption.Ccitt3">
      <summary>The CCITT3 compression schema is used.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.TiffCompressOption.Ccitt4">
      <summary>The CCITT4 compression schema is used.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.TiffCompressOption.Lzw">
      <summary>The LZW compression schema is used. </summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.TiffCompressOption.Rle">
      <summary>The RLE compression schema is used.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.TiffCompressOption.Zip">
      <summary>Zip compression schema is used. </summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.TransformedBitmap">
      <summary>Scales and rotates a <see cref="T:System.Windows.Media.Imaging.BitmapSource" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.TransformedBitmap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.TransformedBitmap" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.TransformedBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Transform)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.TransformedBitmap" /> class that has the specified <see cref="P:System.Windows.Media.Imaging.TransformedBitmap.Source" /> and <see cref="P:System.Windows.Media.Imaging.TransformedBitmap.Transform" />. </summary>
      <param name="source">The <see cref="P:System.Windows.Media.Imaging.TransformedBitmap.Source" /> of the new <see cref="T:System.Windows.Media.Imaging.TransformedBitmap" /> instance.</param>
      <param name="newTransform">The <see cref="P:System.Windows.Media.Imaging.TransformedBitmap.Transform" /> of the new <see cref="T:System.Windows.Media.Imaging.TransformedBitmap" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="source" /> parameter is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="newTransform" /> parameter is null.-or-The transform is not an orthogonal transform.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.TransformedBitmap.BeginInit">
      <summary>Signals the start of the <see cref="T:System.Windows.Media.Imaging.TransformedBitmap" /> initialization.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.Imaging.TransformedBitmap" /> is currently being initialized. <see cref="M:System.Windows.Media.Imaging.TransformedBitmap.BeginInit" /> has already been called.-or-The <see cref="T:System.Windows.Media.Imaging.TransformedBitmap" /> has already been initialized.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.TransformedBitmap.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.TransformedBitmap" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.TransformedBitmap.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.TransformedBitmap" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.TransformedBitmap.EndInit">
      <summary>Signals the end of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> initialization.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Media.Imaging.TransformedBitmap.Source" /> or <see cref="P:System.Windows.Media.Imaging.TransformedBitmap.Transform" /> properties are null.-or-The transform is not an orthogonal transform.-or-The <see cref="M:System.Windows.Media.Imaging.TransformedBitmap.EndInit" /> method is called without first calling <see cref="M:System.Windows.Media.Imaging.TransformedBitmap.BeginInit" />.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.TransformedBitmap.Source">
      <summary>Gets or sets the source for the bitmap.  </summary>
      <returns>The source for the bitmap. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.TransformedBitmap.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.TransformedBitmap.Source" /> dependency property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.TransformedBitmap.Source" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.TransformedBitmap.Transform">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Transform" />, which specifies the scale or rotation of the bitmap.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Transform" />, which specifies the scale or rotation of the bitmap. The default value is <see cref="P:System.Windows.Media.Transform.Identity" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.TransformedBitmap.TransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.TransformedBitmap.Transform" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.TransformedBitmap.Transform" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.WmpBitmapDecoder">
      <summary>Defines a decoder for Microsoft Windows Media Photo encoded images. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.WmpBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.WmpBitmapDecoder" /> from the specified file stream with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapStream">The bitmap stream to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The caching method for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapStream" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapStream" /> is not a Windows Media Photo encoded image.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WmpBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Imaging.WmpBitmapDecoder" /> from the specified <see cref="T:System.Uri" /> with the specified <paramref name="createOptions" /> and <paramref name="cacheOption" />.</summary>
      <param name="bitmapUri">The <see cref="T:System.Uri" /> that identifies the bitmap to decode.</param>
      <param name="createOptions">Initialization options for the bitmap image.</param>
      <param name="cacheOption">The caching method for the bitmap image.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="bitmapUri" /> value is null.</exception>
      <exception cref="T:System.IO.FileFormatException">The <paramref name="bitmapUri" /> is not a Windows Media Photo encoded image.</exception>
    </member>
    <member name="T:System.Windows.Media.Imaging.WmpBitmapEncoder">
      <summary>Defines an encoder that is used to encode Microsoft Windows Media Photo images.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.WmpBitmapEncoder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.WmpBitmapEncoder" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.AlphaDataDiscardLevel">
      <summary>Gets or sets the level of alpha frequency data to discard during a compressed domain transcode.</summary>
      <returns>The level of alpha data to discard when encoding the image. The value range is 0 (no data discarded) to 4 (alpha channel completely discarded). The default is 1.ValueDescription0No image frequency data is discarded.1FlexBits are discarded. The image quality of the image is reduced without changing the effective resolution of the image.2HighPass frequency data band is discarded. The image's effective resolution is reduced by a factor of 4 in both dimensions.3HighPass and LowPass frequency data bands are discarded. The image's effective resolution is reduced by a factor of 16 in both dimensions.4The alpha channel is completely discarded. The pixel format is changed to reflect the removal of the alpha channel.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value given is not between 0 and 4.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.AlphaQualityLevel">
      <summary>Gets or sets the compression quality for a planar alpha channel.</summary>
      <returns>The compression quality for a planar alpha channel image. A value of 1 is considered lossless, and increasing values result in higher compression ratios and lower image quality. The value range is 1 to 255. The default is 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.CompressedDomainTranscode">
      <summary>Gets or sets a value that indicates whether compressed domain operations can be used. Compressed domain operations are transformation operations that are done without decoding the image data.</summary>
      <returns>true if compressed domain operations can be used; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.FlipHorizontal">
      <summary>Gets or sets a value indicating whether to flip the image horizontally.</summary>
      <returns>true if the image is to be flipped horizontally; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.FlipVertical">
      <summary>Gets or sets a value that indicates whether to flip the image vertically.</summary>
      <returns>true if the image is to be flipped vertically; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.FrequencyOrder">
      <summary>Gets or sets a value that indicates whether to encoding in frequency order.</summary>
      <returns>true to encode the image in frequency order; false to encode the image by its spatial orientation. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.HorizontalTileSlices">
      <summary>Gets or sets the number of horizontal divisions to use during compression encoding. A single division creates two horizontal regions.</summary>
      <returns>The number of horizontal divisions to use during compression encoding. The value range is 0 to 4095. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.IgnoreOverlap">
      <summary>Gets or sets a value that indicates whether to ignore region overlap pixels in subregion compressed domain encoding. This feature is not currently implemented.</summary>
      <returns>true if overlap is ignored; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.ImageDataDiscardLevel">
      <summary>Gets or sets the level of image data to discard during a compressed domain transcode.</summary>
      <returns>The level of image data to discard during a compressed domain encoding of the image. The value range is 0 (no data discarded) to 3 (HighPass and LowPass discarded). The default is 1.ValueDescription0No image frequency data is discarded.1FlexBits are discarded. The image quality of the image is reduced without changing the effective resolution of the image.2HighPass frequency data band is discarded. The image's effective resolution is reduced by a factor of 4 in both dimensions.3HighPass and LowPass frequency data bands are discarded. The image's effective resolution is reduced by a factor of 16 in both dimensions.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value given is not between 0 and 3.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.ImageQualityLevel">
      <summary>Gets or sets the image quality level.</summary>
      <returns>The image quality level. The range is 0 to 1.0 (lossless image quality). The default is 0.9.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.InterleavedAlpha">
      <summary>Gets or sets a value that indicates whether to encode the alpha channel data as an additional interleaved channel.</summary>
      <returns>true if the image is encoded with an additional interleaved alpha channel; false if planar alpha channel is used. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.Lossless">
      <summary>Gets or sets a value that indicates whether to encode using lossless compression.</summary>
      <returns>true to use lossless compression; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.OverlapLevel">
      <summary>Gets or sets the overlap processing level.</summary>
      <returns>The overlap processing level. The default is 1.ValueDescription0No overlap processing is enabled.1One level of overlap processing is enabled. Encoded values of 4x4 blocks are modified based on the values of neighboring blocks.2Two levels of overlap processing are enabled. In addition to the first level of processing, encoded values of 16x16 macro blocks are modified based on the values of neighboring macro blocks.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.QualityLevel">
      <summary>Gets or sets the compression quality for the main image.</summary>
      <returns>The compression quality for the main image. A value of 1 is considered lossless, and higher values indicate a high compression ratio and lower image quality. The range is 1 to 255. The default is 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.Rotation">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Imaging.Rotation" /> of the image.</summary>
      <returns>The rotation of the image.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.SubsamplingLevel">
      <summary>Gets or sets the sub-sampling level for RGB image encoding.</summary>
      <returns>The sub-sampling level for RGB image encoding. The range is 0 to 3. The default is 3.ValueDescription04:0:0 encoding. Chroma content is discarded; luminance is preserved.14:2:0 encoding. Chroma resolution is reduced by 1/4 of luminance resolution.24:2:2 encoding. Chroma resolution is reduced to 1/2 of luminance resolution.34:4:4 encoding. Chroma resolution is preserved.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value given is not between 0 and 3.</exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.UseCodecOptions">
      <summary>Gets or sets a value that indicates codec options are to be used.</summary>
      <returns>true if codec options are to be used; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WmpBitmapEncoder.VerticalTileSlices">
      <summary>Gets or sets the number of vertical divisions to use during compression encoding. A single division creates two vertical regions.</summary>
      <returns>The number of vertical divisions to use during compression encoding. The value range is 0 to 4095. The default is 0.</returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.WriteableBitmap">
      <summary>Provides a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that can be written to and updated.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> class with the specified parameters.</summary>
      <param name="pixelWidth">The desired width of the bitmap.</param>
      <param name="pixelHeight">The desired height of the bitmap.</param>
      <param name="dpiX">The horizontal dots per inch (dpi) of the bitmap.</param>
      <param name="dpiY">The vertical dots per inch (dpi) of the bitmap.</param>
      <param name="pixelFormat">The <see cref="T:System.Windows.Media.PixelFormat" /> of the bitmap.</param>
      <param name="palette">The <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> of the bitmap.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> class using the given <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> to use for initialization.</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
      <summary>Specifies the area of the bitmap that changed. </summary>
      <param name="dirtyRect">An <see cref="T:System.Windows.Int32Rect" /> representing the area that changed. Dimensions are in pixels. </param>
      <exception cref="T:System.InvalidOperationException">The bitmap has not been locked by a call to the <see cref="M:System.Windows.Media.Imaging.WriteableBitmap.Lock" /> or <see cref="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)" /> methods. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dirtyRect" /> falls outside the bounds of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" />. </exception>
    </member>
    <member name="P:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer">
      <summary>Gets a pointer to the back buffer. </summary>
      <returns>An <see cref="T:System.IntPtr" /> that points to the base address of the back buffer. </returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride">
      <summary>Gets a value indicating the number of bytes in a single row of pixel data. </summary>
      <returns>An integer indicating the number of bytes in a single row of pixel data. </returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.Lock">
      <summary>Reserves the back buffer for updates.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)">
      <summary>Attempts to lock the bitmap, waiting for no longer than the specified length of time. </summary>
      <returns>true if the lock was acquired; otherwise, false. </returns>
      <param name="timeout">A <see cref="T:System.Windows.Duration" /> that represents the length of time to wait. A value of 0 returns immediately. A value of <see cref="P:System.Windows.Duration.Forever" /> blocks indefinitely. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is set to <see cref="P:System.Windows.Duration.Automatic" />. </exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.Unlock">
      <summary>Releases the back buffer to make it available for display. </summary>
      <exception cref="T:System.InvalidOperationException">The bitmap has not been locked by a call to the <see cref="M:System.Windows.Media.Imaging.WriteableBitmap.Lock" /> or <see cref="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)" /> methods. </exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
      <summary>Updates the pixels in the specified region of the bitmap.</summary>
      <param name="sourceRect">The rectangle of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> to update.</param>
      <param name="pixels">The pixel array used to update the bitmap.</param>
      <param name="stride">The stride of the update region in <paramref name="pixels" />.</param>
      <param name="offset">The input buffer offset.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the following conditions is true.<paramref name="sourceRect" /> falls outside the bounds of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" />.  <paramref name="stride" /> &lt; 1 <paramref name="offset" /> &lt; 0 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pixels" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pixels" /> has a rank other than 1 or 2, or its length is less than or equal to 0.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
      <summary>Updates the pixels in the specified region of the bitmap.</summary>
      <param name="sourceRect">The rectangle in <paramref name="sourceBuffer" /> to copy.</param>
      <param name="sourceBuffer">The input buffer used to update the bitmap.</param>
      <param name="sourceBufferStride">The stride of the input buffer, in bytes.</param>
      <param name="destinationX">The destination x-coordinate of the left-most pixel in the back buffer.</param>
      <param name="destinationY">The destination y-coordinate of the top-most pixel in the back buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the following conditions is true.<paramref name="sourceRect" /> falls outside the bounds of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" />.<paramref name="destinationX" /> or <paramref name="destinationY" /> is outside the bounds of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" />.  <paramref name="sourceBufferStride" /> &lt; 1 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceBuffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceBuffer" /> has a rank other than 1 or 2, or its length is less than or equal to 0.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
      <summary>Updates the pixels in the specified region of the bitmap.</summary>
      <param name="sourceRect">The rectangle of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> to update.</param>
      <param name="buffer">The input buffer used to update the bitmap.</param>
      <param name="bufferSize">The size of the input buffer.</param>
      <param name="stride">The stride of the update region in <paramref name="buffer" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the following conditions is true.<paramref name="sourceRect" /> falls outside the bounds of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" />.<paramref name="bufferSize" /> &lt; 1 <paramref name="stride" /> &lt; 1 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Updates the pixels in the specified region of the bitmap.</summary>
      <param name="sourceRect">The rectangle in <paramref name="sourceBuffer" /> to copy.</param>
      <param name="sourceBuffer">The input buffer used to update the bitmap.</param>
      <param name="sourceBufferSize">The size of the input buffer.</param>
      <param name="sourceBufferStride">The stride of the input buffer, in bytes.</param>
      <param name="destinationX">The destination x-coordinate of the left-most pixel in the back buffer.</param>
      <param name="destinationY">The destination y-coordinate of the top-most pixel in the back buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the following conditions is true.<paramref name="sourceRect" /> falls outside the bounds of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" />. <paramref name="destinationX" /> or <paramref name="destinationY" /> is outside the bounds of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" />.<paramref name="sourceBufferSize" /> &lt; 1 <paramref name="sourceBufferStride" /> &lt; 1 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceBuffer" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Media.Media3D.AffineTransform3D">
      <summary> Base class from which all concrete affine 3-D transforms—translations, rotations, and scale transformations—derive.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.AffineTransform3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.AffineTransform3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.AffineTransform3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.AffineTransform3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.AffineTransform3D.IsAffine">
      <summary>Gets a value that indicates whether the transformation is affine. </summary>
      <returns>True if the transformation is affine, false otherwise.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.AmbientLight">
      <summary> Light object that applies light to objects uniformly, regardless of their shape. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.AmbientLight.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.AmbientLight" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.AmbientLight.#ctor(System.Windows.Media.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.AmbientLight" /> class with the specified color.</summary>
      <param name="ambientColor">Color of the new light.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.AmbientLight.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.AmbientLight" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.AmbientLight.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.AmbientLight" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.AxisAngleRotation3D">
      <summary>Represents a 3-D rotation of a specified angle about a specified axis.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.AxisAngleRotation3D.#ctor">
      <summary>Creates an instance of a 3-D rotation.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.AxisAngleRotation3D.#ctor(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Creates an instance of a 3-D rotation using the specified axis and angle.</summary>
      <param name="axis">
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that specifies the axis around which to rotate.</param>
      <param name="angle">Double that specifies the angle of rotation, in degrees.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.AxisAngleRotation3D.Angle">
      <summary>Gets or sets the angle of a 3-D rotation, in degrees. </summary>
      <returns>Double that specifies the angle of a 3-D rotation, in degrees.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.AxisAngleRotation3D.AngleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.AxisAngleRotation3D.Angle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.AxisAngleRotation3D.Angle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.AxisAngleRotation3D.Axis">
      <summary>Gets or sets the axis of a 3-D rotation. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that specifies the axis of rotation.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.AxisAngleRotation3D.AxisProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.AxisAngleRotation3D.Axis" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.AxisAngleRotation3D.Axis" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.AxisAngleRotation3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.AxisAngleRotation3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.AxisAngleRotation3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.AxisAngleRotation3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Camera">
      <summary>Represents an imaginary viewing position and direction in 3-D coordinate space that describes how a 3-D model is projected onto a 2-D visual. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Camera.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Camera" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Camera.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Camera" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Camera.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  </summary>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Camera.ToString">
      <summary>Creates a string representation of this object based on the current culture settings. </summary>
      <returns>String representation of this object.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Camera.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of the Camera. </summary>
      <returns>String representation of this object.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Camera.Transform">
      <summary>Gets or sets the Transform3D applied to the camera.  </summary>
      <returns>Transform3D applied to the camera.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Camera.TransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Camera.Transform" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.ContainerUIElement3D">
      <summary>Represents a container for <see cref="T:System.Windows.Media.Media3D.Visual3D" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.ContainerUIElement3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.ContainerUIElement3D" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.ContainerUIElement3D.Children">
      <summary>Gets a <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" /> of child elements of this <see cref="T:System.Windows.Media.Media3D.ContainerUIElement3D" /> object.</summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" /> of child elements. The default is an empty collection.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.DiffuseMaterial">
      <summary> Allows the application of a 2-D brush, like a <see cref="T:System.Windows.Media.SolidColorBrush" /> or <see cref="T:System.Windows.Media.TileBrush" />, to a diffusely-lit 3-D model. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.DiffuseMaterial.#ctor">
      <summary> Constructs a DiffuseMaterial. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.DiffuseMaterial.#ctor(System.Windows.Media.Brush)">
      <summary>Constructs a DiffuseMaterial with the specified Brush property. </summary>
      <param name="brush">The new material's brush.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor">
      <summary>Gets or sets a color that represents the ambient color emitted by the <see cref="T:System.Windows.Media.Media3D.Material" />.  </summary>
      <returns>The color of the ambient light emitted by the 3D object. The default value is #FFFFFF.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.DiffuseMaterial.AmbientColorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.DiffuseMaterial.Brush">
      <summary>
        <see cref="T:System.Windows.Media.Brush" /> to be applied as a <see cref="T:System.Windows.Media.Media3D.Material" /> to a 3-D model. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> to apply.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.DiffuseMaterial.BrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.DiffuseMaterial.Brush" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.DiffuseMaterial.Brush" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.DiffuseMaterial.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.DiffuseMaterial" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.DiffuseMaterial.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.DiffuseMaterial" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.DiffuseMaterial.Color">
      <summary>Gets or sets the color allowed to emit from the <see cref="T:System.Windows.Media.Media3D.Material" />.  </summary>
      <returns>The color allowed to emit from the <see cref="T:System.Windows.Media.Media3D.Material" />. The default value is #FFFFFF. Since all colors make up white, all colors are visible by default.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.DiffuseMaterial.ColorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.DiffuseMaterial.Color" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.DiffuseMaterial.Color" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.DirectionalLight">
      <summary>Light object that projects its effect along a direction specified by a <see cref="T:System.Windows.Media.Media3D.Vector3D" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.DirectionalLight.#ctor">
      <summary>Creates an instance of a light that projects its effect in a specified direction. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.DirectionalLight.#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Vector3D)">
      <summary>Creates an instance of a light that projects its effect along a specified Vector3D with a specified color.</summary>
      <param name="diffuseColor">Diffuse color of the new light.</param>
      <param name="direction">Direction of the new light.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.DirectionalLight.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.DirectionalLight" /> object, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.DirectionalLight" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.DirectionalLight.Direction">
      <summary> Represents the vector along which the light's effect will be seen on models in a 3-D scene.   </summary>
      <returns>Vector3D along which the light projects, and which must have a non-zero magnitude. The default value is (0,0,-1).</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.DirectionalLight.DirectionProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Media3D.DirectionalLight.Direction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.DirectionalLight.Direction" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.EmissiveMaterial">
      <summary>Applies a <see cref="T:System.Windows.Media.Brush" /> to a 3-D model so that it participates in lighting calculations as if the <see cref="T:System.Windows.Media.Media3D.Material" /> were emitting light equal to the color of the <see cref="T:System.Windows.Media.Brush" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.EmissiveMaterial.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.EmissiveMaterial" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.EmissiveMaterial.#ctor(System.Windows.Media.Brush)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.EmissiveMaterial" /> class with the specified brush. </summary>
      <param name="brush">The new material's brush.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.EmissiveMaterial.Brush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> applied by the <see cref="T:System.Windows.Media.Media3D.EmissiveMaterial" />. </summary>
      <returns>The brush applied by the <see cref="T:System.Windows.Media.Media3D.EmissiveMaterial" />. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.EmissiveMaterial.BrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.EmissiveMaterial.Brush" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.EmissiveMaterial.Brush" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.EmissiveMaterial.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.EmissiveMaterial" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.EmissiveMaterial.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.EmissiveMaterial" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.EmissiveMaterial.Color">
      <summary>Gets or sets the color of the light that appears to be emitted from the <see cref="T:System.Windows.Media.Media3D.EmissiveMaterial" />. </summary>
      <returns>The color of the light.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.EmissiveMaterial.ColorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.EmissiveMaterial.Color" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.GeneralTransform2DTo3D">
      <summary>Provides 2-D to 3-D transformation support.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.CloneCore(System.Windows.Freezable)">
      <summary>Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</summary>
      <param name="sourceFreezable">The object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Freezable" /> to be cloned.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</summary>
      <param name="sourceFreezable">The instance to copy.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />. If the object has animated dependency properties, their current animated values are copied.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.Transform(System.Windows.Point)">
      <summary>Transforms the specified point and returns the result.</summary>
      <returns>The result of transforming <paramref name="point" />.</returns>
      <param name="point">The point to transform.</param>
      <exception cref="T:System.InvalidOperationException">The transform did not succeed.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.TryTransform(System.Windows.Point,System.Windows.Media.Media3D.Point3D@)">
      <summary>Attempts to transform the specified point and returns a value that indicates whether the transformation was successful.</summary>
      <returns>true if <paramref name="inPoint" /> was transformed; otherwise, false.</returns>
      <param name="inPoint">The point to transform.</param>
      <param name="result">The result of transforming <paramref name="inPoint" />.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.GeneralTransform3D">
      <summary>Provides generalized transformation support for 3-D objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3D.Inverse">
      <summary>Gets the inverse transformation of this <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" />, if possible.</summary>
      <returns>An inverse of this instance, if possible; otherwise, null.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance in the specified format.</returns>
      <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3D.ToString">
      <summary>Creates a string representation of this instance.</summary>
      <returns>A string representation of this instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3D.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of this instance, based on the passed <see cref="T:System.IFormatProvider" /> parameter.</summary>
      <returns>The value of the current instance in the specified format.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> instance used to process this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3D.Transform(System.Windows.Media.Media3D.Point3D)">
      <summary>Transforms the specified 3-D point and returns the result.</summary>
      <returns>The result of transforming <paramref name="point" />.</returns>
      <param name="point">The 3-D point to transform.</param>
      <exception cref="T:System.InvalidOperationException">The transform did not succeed.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3D.TransformBounds(System.Windows.Media.Media3D.Rect3D)">
      <summary>When overridden in a derived class, transforms the specified 3-D bounding box and returns an axis-aligned 3-D bounding box that is exactly large enough to contain it.</summary>
      <returns>The smallest axis-aligned 3-D bounding box possible that contains the transformed <paramref name="rect" />.</returns>
      <param name="rect">The 3-D bounding box to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3D.TryTransform(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D@)">
      <summary>When overridden in a derived class, attempts to transform the specified 3-D point and returns a value that indicates whether the transformation was successful.</summary>
      <returns>true if <paramref name="inPoint" /> was transformed; otherwise, false.</returns>
      <param name="inPoint">The 3-D point to transform.</param>
      <param name="result">The result of transforming <paramref name="inPoint" />.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.GeneralTransform3DCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.GeneralTransform3D})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" /> class, using the specified initial object.</summary>
      <param name="collection">Initial object in the new collection class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" /> class with the specified capacity, or the number of <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> objects the collection is initially capable of storing.</summary>
      <param name="capacity">The number of <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> objects that the collection is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Add(System.Windows.Media.Media3D.GeneralTransform3D)">
      <summary>Adds a <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object to the end of the collection.</summary>
      <param name="value">The <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> to add to the end of the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The collection is read-only.- or -The collection has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> objects from the collection.</summary>
      <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Clone">
      <summary>Creates a modifiable clone of this collection, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this collection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Contains(System.Windows.Media.Media3D.GeneralTransform3D)">
      <summary>Indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object.</summary>
      <returns>true if the collection contains <paramref name="value" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.CopyTo(System.Windows.Media.Media3D.GeneralTransform3D[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> objects in the collection into an array of <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> objects, starting at the specified index position. </summary>
      <param name="array">The destination array.</param>
      <param name="index">The zero-based index position where copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or-The number of items in the source collection is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.Count">
      <summary>Gets the number of objects in this collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An enumerator that can iterate the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.IndexOf(System.Windows.Media.Media3D.GeneralTransform3D)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object within the collection. </summary>
      <returns>The zero-based index position of <paramref name="value" />, or –1 if the object is not found in the collection.</returns>
      <param name="value">The object to locate.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Insert(System.Int32,System.Windows.Media.Media3D.GeneralTransform3D)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object into the specified index position within the collection.</summary>
      <param name="index">The zero-based index position to insert the object.</param>
      <param name="value">The object to insert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the collection.</exception>
      <exception cref="T:System.NotSupportedException">The collection is read-only.- or -The collection has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object at the <paramref name="index" /> position.</returns>
      <param name="index">The zero-based index position of the object to get or set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the collection.</exception>
      <exception cref="T:System.NotSupportedException">The collection is read-only.- or -The collection has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Remove(System.Windows.Media.Media3D.GeneralTransform3D)">
      <summary>Deletes a <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object from the collection.</summary>
      <returns>true if <paramref name="value" /> was successfully deleted; otherwise, false.</returns>
      <param name="value">The object to remove.</param>
      <exception cref="T:System.NotSupportedException">The collection is read-only.- or -The collection has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.RemoveAt(System.Int32)">
      <summary>Deletes a <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object from the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" />.</summary>
      <param name="index">The zero-based index position to remove the object.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.GeneralTransform3DCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> items in a <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" />.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator successfully advances to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>For a description of this member, see <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Enumerator.System#IDisposable#Dispose">
      <summary>For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.GeneralTransform3DGroup">
      <summary>Represents a <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> that is a composite of the transforms in its <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DGroup" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DGroup.Children">
      <summary>Gets or sets the collection of <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DGroup" /> objects that form this <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DGroup" />.  </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DGroup" /> objects that form this <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DGroup" />. The default is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.GeneralTransform3DGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.GeneralTransform3DGroup.Children" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.GeneralTransform3DGroup.Children" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DGroup.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DGroup" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DGroup.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DGroup" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeneralTransform3DGroup.Inverse">
      <summary>Gets the inverse transform of this <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DGroup" />, if it has an inverse.</summary>
      <returns>The inverse transform of this <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DGroup" />, if it has an inverse; otherwise, null.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DGroup.TransformBounds(System.Windows.Media.Media3D.Rect3D)">
      <summary>Transforms the specified 3-D bounding box to the smallest axis-aligned 3-D bounding box possible that contains all the points in the original bounding box.</summary>
      <returns>The transformed bounding box. </returns>
      <param name="rect">The 3-D bounding box to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DGroup.TryTransform(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D@)">
      <summary>Attempts to transform the specified 3-D point.</summary>
      <returns>true if <paramref name="inPoint" /> was transformed; otherwise, false.</returns>
      <param name="inPoint">The 3-D point to transform.</param>
      <param name="result">The result of transforming <paramref name="inPoint" />.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.GeneralTransform3DTo2D">
      <summary>Provides 3-D to 2-D transformation support.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.CloneCore(System.Windows.Freezable)">
      <summary>Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</summary>
      <param name="sourceFreezable">The object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Freezable" /> to be cloned.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</summary>
      <param name="sourceFreezable">The instance to copy.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />. If the object has animated dependency properties, their current animated values are copied.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.Transform(System.Windows.Media.Media3D.Point3D)">
      <summary>Transforms the specified 3-D point and returns the result.</summary>
      <returns>The result of transforming <paramref name="point" />.</returns>
      <param name="point">The 3-D point to transform.</param>
      <exception cref="T:System.InvalidOperationException">The transform did not succeed.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.TransformBounds(System.Windows.Media.Media3D.Rect3D)">
      <summary>Transforms the specified 3-D bounding box and returns an axis-aligned bounding box that contains all of the points in the original 3-D bounding box.</summary>
      <returns>An axis-aligned bounding box that contains all of the points in the specified 3-D bounding box.</returns>
      <param name="rect3D">The 3-D bounding box to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.TryTransform(System.Windows.Media.Media3D.Point3D,System.Windows.Point@)">
      <summary>Transforms the specified 3-D point and returns the result.</summary>
      <returns>true if <paramref name="inPoint" /> was transformed; otherwise, false.</returns>
      <param name="inPoint">The 3-D point to transform.</param>
      <param name="result">The result of transforming <paramref name="inPoint" />.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Geometry3D">
      <summary>Classes that derive from this abstract base class define 3D geometric shapes. The <see cref="T:System.Windows.Media.Media3D.Geometry3D" /> class of objects can be used for hit-testing and rendering 3D graphic data.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Geometry3D.Bounds">
      <summary> Gets a <see cref="T:System.Windows.Media.Media3D.Rect3D" /> that specifies the axis-aligned bounding box of this <see cref="T:System.Windows.Media.Media3D.Geometry3D" />. </summary>
      <returns>Bounding <see cref="T:System.Windows.Media.Media3D.Rect3D" /> for the <see cref="T:System.Windows.Media.Media3D.Geometry3D" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Geometry3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Geometry3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Geometry3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Geometry3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.GeometryModel3D">
      <summary>Creates a 3-D model comprised of a <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" /> and a <see cref="T:System.Windows.Media.Media3D.Material" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeometryModel3D.#ctor">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Media3D.GeometryModel3D" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeometryModel3D.#ctor(System.Windows.Media.Media3D.Geometry3D,System.Windows.Media.Media3D.Material)">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Media3D.GeometryModel3D" /> with the specified Geometry3D and Material. </summary>
      <param name="geometry">Geometry of the new mesh primitive.</param>
      <param name="material">Material of the new mesh primitive.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeometryModel3D.BackMaterial">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Material" /> to be applied to the back of a <see cref="T:System.Windows.Media.Media3D.Model3D" />.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Media3D.Material" /> applied to the back of the <see cref="T:System.Windows.Media.Media3D.Model3D" />. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.GeometryModel3D.BackMaterialProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.GeometryModel3D.BackMaterial" /> dependency property.</summary>
      <returns>The idenfitier for the <see cref="P:System.Windows.Media.Media3D.GeometryModel3D.BackMaterial" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeometryModel3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.GeometryModel3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.GeometryModel3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.GeometryModel3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeometryModel3D.Geometry">
      <summary> Gets or sets the geometry of a <see cref="T:System.Windows.Media.Media3D.GeometryModel3D" />.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Geometry3D" /> that comprises the model.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.GeometryModel3D.GeometryProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Media3D.GeometryModel3D.Geometry" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.GeometryModel3D.Geometry" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.GeometryModel3D.Material">
      <summary> Gets or sets the <see cref="T:System.Windows.Media.Media3D.Material" /> of a <see cref="T:System.Windows.Media.Media3D.GeometryModel3D" /></summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Material" /> applied to the <see cref="T:System.Windows.Media.Media3D.GeometryModel3D" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.GeometryModel3D.MaterialProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Media3D.GeometryModel3D.Material" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.GeometryModel3D.Material" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.HitTestParameters3D">
      <summary>Abstract class that represents the parameters of a 3D hit test.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.Light">
      <summary>
        <see cref="T:System.Windows.Media.Media3D.Model3D" /> object that represents lighting applied to a 3-D scene.  </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Light.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Light" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Light.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Light" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Light.Color">
      <summary> Gets or sets the color of the light. </summary>
      <returns>Color of the light.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Light.ColorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Light.Color" /> dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Light.Color" /> dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Material">
      <summary>Abstract base class for materials.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Material.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Material" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Material.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Material" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Material.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Material.ToString">
      <summary> Creates a string representation of the object based on the current culture. </summary>
      <returns>String representation of the object.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Material.ToString(System.IFormatProvider)">
      <summary> Creates a string representation of the Material. </summary>
      <returns>String representation of the object.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.MaterialCollection">
      <summary>Collection of <see cref="T:System.Windows.Media.Media3D.Material" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.Material})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" /> class using the specified collection.</summary>
      <param name="collection">Collection with which to instantiate the MaterialCollection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" /> class with the specified capacity.</summary>
      <param name="capacity">Integer that specifies the capacity of the MaterialCollection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.Add(System.Windows.Media.Media3D.Material)">
      <summary>Adds a <see cref="T:System.Windows.Media.Media3D.Material" /> to the end of the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</summary>
      <param name="value">Item to add to the end of this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.Clear">
      <summary>Removes all the items from this <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.MaterialCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.Contains(System.Windows.Media.Media3D.Material)">
      <summary>Determines whether a given <see cref="T:System.Windows.Media.Media3D.Material" /> is in this <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />. </summary>
      <returns>true if <paramref name="value" />, the specified Material, is in this MaterialCollection; otherwise, false.</returns>
      <param name="value">The item to locate in this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.CopyTo(System.Windows.Media.Media3D.Material[],System.Int32)">
      <summary>Copies the items of this <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />, starting with the specified index value, into an array of <see cref="T:System.Windows.Media.Media3D.Material" /> objects. </summary>
      <param name="array">The array that is the destination of the items copied from this MaterialCollection.</param>
      <param name="index">The index at which copying begins.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.MaterialCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Media.Media3D.Material" /> objects contained in the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />. </summary>
      <returns>The number of Material objects contained in the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An enumerator that can iterate the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.IndexOf(System.Windows.Media.Media3D.Material)">
      <summary>Gets the index position of the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Material" />.</summary>
      <returns>The index position of the specified Material.</returns>
      <param name="value">The Material to search for.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.Insert(System.Int32,System.Windows.Media.Media3D.Material)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Media3D.Material" /> into this <see cref="T:System.Windows.Media.Media3D.MaterialCollection" /> at the specified index position.</summary>
      <param name="index">The index position at which to insert the specified Material.</param>
      <param name="value">The Material to insert.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.MaterialCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Material" /> at the specified zero-based index.</summary>
      <returns>The item at the specified index.</returns>
      <param name="index">The zero-based index of the Material object to get or set.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.Remove(System.Windows.Media.Media3D.Material)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Material" /> from the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</summary>
      <returns>true if <paramref name="value" /> was removed from the collection; otherwise, false. </returns>
      <param name="value">The Material to remove from this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Media3D.Material" /> at the specified index position from the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</summary>
      <param name="index">The index position of the Material to remove.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.MaterialCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.MaterialCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MaterialCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.MaterialCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.Media3D.Material" /> items in a <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.MaterialCollection.Enumerator.Current">
      <summary>Gets the current element in the <see cref="T:System.Windows.Media.Media3D.MaterialCollection" />.</summary>
      <returns>The current element in the MaterialCollection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.MaterialCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.MaterialGroup">
      <summary>Represents a <see cref="T:System.Windows.Media.Media3D.Material" /> that is a composite of the Materials in its collection.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.MaterialGroup" />class. </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.MaterialGroup.Children">
      <summary> Gets or sets a collection of child <see cref="T:System.Windows.Media.Media3D.Material" /> objects.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.MaterialCollection" /> that contains the child <see cref="T:System.Windows.Media.Media3D.Material" /> objects.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.MaterialGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.MaterialGroup.Children" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.MaterialGroup.Children" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialGroup.Clone">
      <summary>Returns a modifiable copy of the <see cref="T:System.Windows.Media.Media3D.MaterialGroup" />.</summary>
      <returns>A modifiable copy of the <see cref="T:System.Windows.Media.Media3D.MaterialGroup" />. The returned copy is effectively a deep clone of the current object, although some copying might be deferred until necessary for improved performance. The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MaterialGroup.CloneCurrentValue">
      <summary>Returns a non-animated version of the <see cref="T:System.Windows.Media.Media3D.MaterialGroup" />. The returned <see cref="T:System.Windows.Media.Media3D.MaterialGroup" /> represents the current object's state at the time this method was called.</summary>
      <returns>Returns the current value of the <see cref="T:System.Windows.Media.Media3D.MaterialGroup" />. The returned <see cref="T:System.Windows.Media.Media3D.MaterialGroup" /> has the same value as the instantaneous value of the current object, but is not animated.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Matrix3D">
      <summary> Represents a 4 x 4 matrix used for transformations in 3-D space. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary> Constructor that sets matrix's initial values. </summary>
      <param name="m11">Value of the (1,1) field of the new matrix.</param>
      <param name="m12">Value of the (1,2) field of the new matrix.</param>
      <param name="m13">Value of the (1,3) field of the new matrix.</param>
      <param name="m14">Value of the (1,4) field of the new matrix.</param>
      <param name="m21">Value of the (2,1) field of the new matrix.</param>
      <param name="m22">Value of the (2,2) field of the new matrix.</param>
      <param name="m23">Value of the (2,3) field of the new matrix.</param>
      <param name="m24">Value of the (2,4) field of the new matrix.</param>
      <param name="m31">Value of the (3,1) field of the new matrix.</param>
      <param name="m32">Value of the (3,2) field of the new matrix.</param>
      <param name="m33">Value of the (3,3) field of the new matrix.</param>
      <param name="m34">Value of the (3,4) field of the new matrix.</param>
      <param name="offsetX">Value of the X offset field of the new matrix.</param>
      <param name="offsetY">Value of the Y offset field of the new matrix.</param>
      <param name="offsetZ">Value of the Z offset field of the new matrix.</param>
      <param name="m44">Value of the (4,4) field of the new matrix.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Append(System.Windows.Media.Media3D.Matrix3D)">
      <summary> Appends a specified matrix to the current matrix. </summary>
      <param name="matrix">Matrix to append.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.Determinant">
      <summary>Retrieves the determinant of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The determinant of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Equals(System.Object)">
      <summary> Tests equality between two matrices. </summary>
      <returns>
        <see cref="T:System.Boolean" /> that indicates whether the matrices are equal.</returns>
      <param name="o">Object to test for equality.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Equals(System.Windows.Media.Media3D.Matrix3D)">
      <summary>Tests equality between two matrices. </summary>
      <returns>
        <see cref="T:System.Boolean" /> that indicates whether the matrices are equal.</returns>
      <param name="value">The Matrix3D to which to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Equals(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary> Tests equality between two matrices. </summary>
      <returns>
        <see cref="T:System.Boolean" /> that indicates whether the matrices are equal.</returns>
      <param name="matrix1">The first Matrix3D to compare.</param>
      <param name="matrix2">The second Matrix3D to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.GetHashCode">
      <summary>Returns the hash code for this matrix </summary>
      <returns>Integer that specifies the hash code for this matrix.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.HasInverse">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> is invertible. </summary>
      <returns>true if the Matrix3D structure has an inverse; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.Identity">
      <summary>Changes a <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure into an identity <see cref="T:System.Windows.Media.Media3D.Matrix3D" />. </summary>
      <returns>The identity Matrix3D.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Invert">
      <summary>Inverts this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</summary>
      <exception cref="T:System.InvalidOperationException">Throws InvalidOperationException if the matrix is not invertible.</exception>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.IsAffine">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure is affine. </summary>
      <returns>true if the Matrix3D structure is affine; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.IsIdentity">
      <summary>Determines whether this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure is an identity Matrix3D.</summary>
      <returns>true if the Matrix3D structure is an identity Matrix3D; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M11">
      <summary>Gets or sets the value of the first row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the first row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M12">
      <summary>Gets or sets the value of the first row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the first row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M13">
      <summary>Gets or sets the value of the first row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the first row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M14">
      <summary>Gets or sets the value of the first row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</summary>
      <returns>The value of the first row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M21">
      <summary>Gets or sets the value of the second row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the second row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M22">
      <summary>Gets or sets the value of the second row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the second row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M23">
      <summary>Gets or sets the value of the second row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the second row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M24">
      <summary>Gets or sets the value of the second row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the second row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M31">
      <summary>Gets or sets the value of the third row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the third row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M32">
      <summary>Gets or sets the value of the third row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the third row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M33">
      <summary>Gets or sets the value of the third row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the third row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M34">
      <summary>Gets or sets the value of the third row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the third row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M44">
      <summary>Gets or sets the value of the fourth row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the fourth row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Multiply(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>Multiplies the specified matrices. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that is the result of multiplication.</returns>
      <param name="matrix1">Matrix to multiply.</param>
      <param name="matrix2">Matrix by which the first matrix is multiplied.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetX">
      <summary>Gets or sets the value of the fourth row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the fourth row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetY">
      <summary>Gets or sets the value of the fourth row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the fourth row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetZ">
      <summary>Gets or sets the value of the fourth row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The value of the fourth row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Equality(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary> Compares two <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> instances for exact equality. </summary>
      <returns>
        <see cref="T:System.Boolean" /> that indicates whether the two matrix instances are equal.</returns>
      <param name="matrix1">The first matrix to compare.</param>
      <param name="matrix2">The second matrix to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Inequality(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> instances for exact inequality. </summary>
      <returns>
        <see cref="T:System.Boolean" /> that indicates whether the two matrix instances are inequal.</returns>
      <param name="matrix1">The first matrix to compare.</param>
      <param name="matrix2">The second matrix to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Multiply(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary> Multiplies the specified matrices. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that is the result of multiplication.</returns>
      <param name="matrix1">Matrix to multiply.</param>
      <param name="matrix2">Matrix by which the first matrix is multiplied.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Parse(System.String)">
      <summary>Converts a string representation of a <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure into the equivalent Matrix3D structure.</summary>
      <returns>Matrix3D structure represented by the string.</returns>
      <param name="source">String representation of the Matrix3D.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Prepend(System.Windows.Media.Media3D.Matrix3D)">
      <summary> Prepends a specified matrix to the current matrix. </summary>
      <param name="matrix">Matrix to prepend.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Rotate(System.Windows.Media.Media3D.Quaternion)">
      <summary>Appends a rotation transform to the current <see cref="T:System.Windows.Media.Media3D.Matrix3D" />. </summary>
      <param name="quaternion">
        <see cref="T:System.Windows.Media.Media3D.Quaternion" /> that represents the rotation.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.RotateAt(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Point3D)">
      <summary>Rotates this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> about the specified <see cref="T:System.Windows.Media.Media3D.Point3D" />.</summary>
      <param name="quaternion">
        <see cref="T:System.Windows.Media.Media3D.Quaternion" /> that represents the rotation.</param>
      <param name="center">Center <see cref="T:System.Windows.Media.Media3D.Point3D" /> about which to rotate.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.RotateAtPrepend(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Point3D)">
      <summary>Prepends a rotation about a specified center <see cref="T:System.Windows.Media.Media3D.Point3D" /> to this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <param name="quaternion">
        <see cref="T:System.Windows.Media.Media3D.Quaternion" /> that represents the rotation.</param>
      <param name="center">Center <see cref="T:System.Windows.Media.Media3D.Point3D" /> about which to rotate.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.RotatePrepend(System.Windows.Media.Media3D.Quaternion)">
      <summary>Prepends a rotation specified by a <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <param name="quaternion">Quaternion representing rotation.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Scale(System.Windows.Media.Media3D.Vector3D)">
      <summary>Appends the specified scale <see cref="T:System.Windows.Media.Media3D.Vector3D" /> to this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <param name="scale">Vector3D by which to scale this Matrix3D structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.ScaleAt(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Scales this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure by the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> about the specified <see cref="T:System.Windows.Media.Media3D.Point3D" />. </summary>
      <param name="scale">Vector3D by which to scale this Matrix3D structure.</param>
      <param name="center">Point3D about which to scale.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.ScaleAtPrepend(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Prepends the specified scale transformation about the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> to this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <param name="scale">
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> by which to scale this Matrix3D structure.</param>
      <param name="center">Point3D about which to scale.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.ScalePrepend(System.Windows.Media.Media3D.Vector3D)">
      <summary>Prepends the specifed scale <see cref="T:System.Windows.Media.Media3D.Vector3D" /> to the current <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <param name="scale">Vector3D by which to scale this Matrix3D structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.SetIdentity">
      <summary>Changes this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure into an identity matrix. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.ToString">
      <summary>Creates a string representation of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>String representation of this Matrix3D structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>String representation of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
      <param name="provider">Culture-specified formatting information.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Transform(System.Windows.Media.Media3D.Point3D)">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> by the <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> and returns the result. </summary>
      <returns>The result of transforming <paramref name="point" /> by this Matrix3D.</returns>
      <param name="point">Point3D to transform.</param>
      <exception cref="T:System.InvalidOperationException">Throws InvalidOperationException if the transform is not affine.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Transform(System.Windows.Media.Media3D.Point3D[])">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> objects in the array by the <see cref="T:System.Windows.Media.Media3D.Matrix3D" />. </summary>
      <param name="points">Point3D objects to transform. The original points in the array are replaced by their transformed values.</param>
      <exception cref="T:System.InvalidOperationException">Throws InvalidOperationException if the transform is not affine.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Transform(System.Windows.Media.Media3D.Point4D)">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point4D" /> by the <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> and returns the result.. </summary>
      <returns>The result of transforming <paramref name="point" /> by this Matrix3D.</returns>
      <param name="point">
        <see cref="T:System.Windows.Media.Media3D.Point4D" /> to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Transform(System.Windows.Media.Media3D.Point4D[])">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point4D" /> objects in the array by the <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> and returns the result. </summary>
      <param name="points">
        <see cref="T:System.Windows.Media.Media3D.Point4D" /> objects to transform. The original points in the array are replaced by their transformed values.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Transform(System.Windows.Media.Media3D.Vector3D)">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> by this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />. </summary>
      <returns>The result of transforming <paramref name="vector" /> by this Matrix3D.</returns>
      <param name="vector">
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Transform(System.Windows.Media.Media3D.Vector3D[])">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> objects in the array by this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />. </summary>
      <param name="vectors">
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> objects to transform. The original Vector3D objects in the array are replaced by their transformed values.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Translate(System.Windows.Media.Media3D.Vector3D)">
      <summary>Appends a translation of the specified offset to the current <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <param name="offset">
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that specifies the offset for transformation.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.TranslatePrepend(System.Windows.Media.Media3D.Vector3D)">
      <summary>Prepends a translation of the specified offset to this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <param name="offset">
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that specifies the offset for transformation.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Matrix3DConverter">
      <summary>Converts instances of other types to and from instances of <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3DConverter.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Media.Media3D.Matrix3DConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether this type converter can convert from a specified type. </summary>
      <returns>True if this converter can convert from the specified type; false otherwise.</returns>
      <param name="context">ITypeDescriptorContext for this call.</param>
      <param name="sourceType">Type being queried for support.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether this type converter can convert to the given type. </summary>
      <returns>True if this converter can convert to the provided type; false if not.</returns>
      <param name="context">The ITypeDescriptorContext for this call.</param>
      <param name="destinationType">The Type being queried for support.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert to a Matrix3D from the given object. </summary>
      <returns>Matrix3D that was constructed.</returns>
      <param name="context">The ITypeDescriptorContext for this call.</param>
      <param name="culture">The CultureInfo which is respected when converting.</param>
      <param name="value">The object to convert to an instance of Matrix3D.</param>
      <exception cref="T:System.NotSupportedException">A NotSupportedException is thrown if the example object is null or is not a valid type which can be converted to a Matrix3D.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an instance of <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> to the given type. </summary>
      <returns>Object that was constructed.</returns>
      <param name="context">The ITypeDescriptorContext for this call.</param>
      <param name="culture">The CultureInfo which is respected when converting.</param>
      <param name="value">The object to convert to an instance of <paramref name="destinationType" />.</param>
      <param name="destinationType">The type to which the Matrix3D instance will be converted.</param>
      <exception cref="T:System.NotSupportedException">Throws NotSupportedException if the example object is null or is not a Matrix3D, or if the destinationType isn't one of the valid destination types.</exception>
    </member>
    <member name="T:System.Windows.Media.Media3D.MatrixCamera">
      <summary>Camera which specifies the view and projection transforms as <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> objects </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.MatrixCamera.#ctor">
      <summary> Creates a new instance of <see cref="T:System.Windows.Media.Media3D.MatrixCamera" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.MatrixCamera.#ctor(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary> Creates a new <see cref="T:System.Windows.Media.Media3D.MatrixCamera" /> from view and projection matrices. </summary>
      <param name="viewMatrix">Specifies the camera's view matrix.</param>
      <param name="projectionMatrix">Specifies the camera's projection matrix.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MatrixCamera.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.MatrixCamera" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MatrixCamera.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.MatrixCamera" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MatrixCamera.ProjectionMatrix">
      <summary> Gets or sets a <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> as the projection transformation matrix.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that specifies the projection transformation.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.MatrixCamera.ProjectionMatrixProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Media3D.MatrixCamera.ProjectionMatrix" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.MatrixCamera.ProjectionMatrix" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MatrixCamera.ViewMatrix">
      <summary> Gets or sets a <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> as the view transformation matrix.   </summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.Matrix3D" />that represents the position, look direction and up vector for the camera.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.MatrixCamera.ViewMatrixProperty">
      <summary>Gets the <see cref="P:System.Windows.Media.Media3D.MatrixCamera.ViewMatrix" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.MatrixCamera.ViewMatrix" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.MatrixTransform3D">
      <summary> Creates a transformation specified by a <see cref="T:System.Windows.Media.Media3D.Matrix3D" />, used to manipulate objects or coordinate systems in 3-D world space. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.MatrixTransform3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.MatrixTransform3D" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.MatrixTransform3D.#ctor(System.Windows.Media.Media3D.Matrix3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.MatrixTransform3D" /> class using the specified <see cref="T:System.Windows.Media.Media3D.Matrix3D" />. </summary>
      <param name="matrix">Matrix3D that specifies the transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.MatrixTransform3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.MatrixTransform3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MatrixTransform3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.MatrixTransform3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.  </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MatrixTransform3D.IsAffine">
      <summary>Gets a value that indicates whether the transform is affine. </summary>
      <returns>Boolean that indicates whether the transform is affine.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MatrixTransform3D.Matrix">
      <summary> Gets or sets a <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that specifies one or more 3-D transformations. </summary>
      <returns>Matrix3D that specifies one or more 3-D transformations.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.MatrixTransform3D.MatrixProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.MatrixTransform3D.Matrix" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.MatrixTransform3D.Matrix" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MatrixTransform3D.Value">
      <summary> Gets a matrix representation of the 3-D transformation.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> representation of the 3-D transformation.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.MeshGeometry3D">
      <summary>Triangle primitive for building a 3-D shape. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.MeshGeometry3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.MeshGeometry3D.Bounds">
      <summary> Gets the bounding <see cref="T:System.Windows.Media.Media3D.Rect3D" /> for this <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" />.</summary>
      <returns>Bounding <see cref="T:System.Windows.Media.Media3D.Rect3D" /> for the <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MeshGeometry3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.MeshGeometry3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MeshGeometry3D.Normals">
      <summary>Gets or sets a collection of normal vectors for the <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" />.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> that contains the normal vectors for the MeshGeometry3D.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.MeshGeometry3D.NormalsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.MeshGeometry3D.Normals" /> dependency property.</summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.Media3D.MeshGeometry3D.Normals" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MeshGeometry3D.Positions">
      <summary>Gets or sets a collection of vertex positions for a <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" />.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> that contains the vertex positions of the MeshGeometry3D.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.MeshGeometry3D.PositionsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.MeshGeometry3D.Positions" /> dependency property. </summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.Media3D.MeshGeometry3D.Positions" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MeshGeometry3D.TextureCoordinates">
      <summary>Gets or sets a collection of texture coordinates for the <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" />.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.PointCollection" /> that contains the texture coordinates for the MeshGeometry3D.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.MeshGeometry3D.TextureCoordinatesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.MeshGeometry3D.TextureCoordinates" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.MeshGeometry3D.TextureCoordinates" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.MeshGeometry3D.TriangleIndices">
      <summary>Gets or sets a collection of triangle indices for the <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" />.  </summary>
      <returns>Collection that contains the triangle indices of the MeshGeometry3D.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.MeshGeometry3D.TriangleIndicesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.MeshGeometry3D.TriangleIndices" /> dependency property. </summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.Media3D.MeshGeometry3D.TriangleIndices" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Model3D">
      <summary>Abstract class that provides functionality for 3-D models. </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3D.Bounds">
      <summary> Gets the bounding <see cref="T:System.Windows.Media.Media3D.Rect3D" /> for this <see cref="T:System.Windows.Media.Media3D.Model3D" />. </summary>
      <returns>Bounding <see cref="T:System.Windows.Media.Media3D.Rect3D" /> for the model.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Model3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Model3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3D.ToString">
      <summary>Creates a string representation of the Model3D. </summary>
      <returns>String representation of the object.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3D.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of the Model3D. </summary>
      <returns>String representation of the Model3D.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3D.Transform">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Transform3D" /> set on the model.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Transform3D" /> set on the model. The default value is <see cref="T:System.Windows.Media.Media3D.MatrixTransform3D" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Model3D.TransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Model3D.Transform" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.Model3D.Transform" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Model3DCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.Media.Media3D.Model3D" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.Model3D})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" /> class using the specified collection.</summary>
      <param name="collection">Collection with which to instantiate the Model3DCollection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" /> class with the specified capacity.</summary>
      <param name="capacity">Integer that specifies the capacity of the Model3DCollection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.Add(System.Windows.Media.Media3D.Model3D)">
      <summary> Adds a <see cref="T:System.Windows.Media.Media3D.Model3D" /> object to the end of the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />. </summary>
      <param name="value">Item to add to the end of this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.Clear">
      <summary>Removes all the items from this <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Model3DCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.Contains(System.Windows.Media.Media3D.Model3D)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Media.Media3D.Model3D" /> is in this <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />. </summary>
      <returns>true if <paramref name="value" />, the specified Model3D, is in this Model3DCollection; otherwise, false.</returns>
      <param name="value">The item to locate in this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.CopyTo(System.Windows.Media.Media3D.Model3D[],System.Int32)">
      <summary>Copies the items of this <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />, starting with the specified index value, into an array of <see cref="T:System.Windows.Media.Media3D.Model3D" /> objects.</summary>
      <param name="array">The array that is the destination of the items copied from this Model3DCollection.</param>
      <param name="index">The index at which copying begins.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3DCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Media.Media3D.Model3D" /> objects contained in the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />. </summary>
      <returns>The number of <see cref="T:System.Windows.Media.Media3D.Model3D" /> objects contained in the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An enumerator that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.IndexOf(System.Windows.Media.Media3D.Model3D)">
      <summary>Gets the index position of the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Model3D" />.</summary>
      <returns>The index position of the specified Model3D.</returns>
      <param name="value">The Model3D to search for.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.Insert(System.Int32,System.Windows.Media.Media3D.Model3D)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Media3D.Model3D" /> into this <see cref="T:System.Windows.Media.Media3D.Model3DCollection" /> at the specified index position.</summary>
      <param name="index">The index position at which to insert the specified Model3D.</param>
      <param name="value">The Model3D to insert.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3DCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Model3D" /> at the specified zero-based index.</summary>
      <returns>The item at the specified index.</returns>
      <param name="index">The zero-based index of the Model3D object to get or set.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.Remove(System.Windows.Media.Media3D.Model3D)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Model3D" /> from the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />.</summary>
      <returns>true if <paramref name="value" /> was removed from the collection; otherwise, false. </returns>
      <param name="value">The Model3D to remove from this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Media3D.Model3D" /> at the specified index position from the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />.</summary>
      <param name="index">The index position of the Model3D to remove.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3DCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3DCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3DCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.Media3D.Model3DCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Model3DCollection.Enumerator">
      <summary>Enumerates items in a collection. </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3DCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>Current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the collection. </summary>
      <returns>Returns true if the enumerator was successfully advanced to the next element; returns false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.Enumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection. </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3DCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.Model3DGroup">
      <summary>Collection of 3-D models.  </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Model3DGroup" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Model3DGroup.Children">
      <summary> Gets or sets a collection of <see cref="T:System.Windows.Media.Media3D.Model3D" /> objects.  </summary>
      <returns>Collection of <see cref="T:System.Windows.Media.Media3D.Model3D" /> objects.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Model3DGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Model3DGroup.Children" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.Model3DGroup.Children" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DGroup.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Model3DGroup" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Model3DGroup.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Model3DGroup" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.ModelUIElement3D">
      <summary>Renders a 3-D model that supports input, focus, and events.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.ModelUIElement3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.ContainerUIElement3D" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.ModelUIElement3D.Model">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Model3D" /> to render.</summary>
      <returns>The <see cref="T:System.Windows.Media.Media3D.Model3D" /> to render.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ModelUIElement3D.ModelProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ModelUIElement3D.Model" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.ModelVisual3D">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> that contains 3-D models. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.ModelVisual3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.ModelVisual3D" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.ModelVisual3D.Children">
      <summary>Gets a collection of child <see cref="T:System.Windows.Media.Media3D.Visual3D" /> objects.</summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" /> that contains child <see cref="T:System.Windows.Media.Media3D.Visual3D" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ModelVisual3D.Content">
      <summary>Gets or sets the model that comprises the content of the <see cref="T:System.Windows.Media.Media3D.ModelVisual3D" />.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Model3D" /> that comprises the content of the <see cref="T:System.Windows.Media.Media3D.ModelVisual3D" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ModelVisual3D.ContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ModelVisual3D.Content" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ModelVisual3D.Content" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.ModelVisual3D.GetVisual3DChild(System.Int32)">
      <summary>Returns the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> in the parent collection.</summary>
      <returns>The child in the collection at the specified index.</returns>
      <param name="index">The index of the 3-D visual object in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.ModelVisual3D.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Media.Media3D.ModelVisual3D.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />.</summary>
      <param name="text"></param>
    </member>
    <member name="P:System.Windows.Media.Media3D.ModelVisual3D.Transform">
      <summary>Gets or sets the transform set on the <see cref="T:System.Windows.Media.Media3D.ModelVisual3D" />.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Transform3D" /> set on the <see cref="T:System.Windows.Media.Media3D.ModelVisual3D" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ModelVisual3D.TransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ModelVisual3D.Transform" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ModelVisual3D.Transform" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ModelVisual3D.Visual3DChildrenCount">
      <summary>Returns the number of child objects.</summary>
      <returns>The number of child objects.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.OrthographicCamera">
      <summary> Represents an orthographic projection camera. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.OrthographicCamera.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.OrthographicCamera" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.OrthographicCamera.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.OrthographicCamera" /> class with the specified position, projection direction, upward direction, and width.</summary>
      <param name="position">A <see cref="T:System.Windows.Media.Media3D.Point3D" /> that specifies the camera position.</param>
      <param name="lookDirection">A <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that specifies the direction of the camera's projection.</param>
      <param name="upDirection">A <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that specifies the upward direction according to the perspective of the onlooker.</param>
      <param name="width">The width of the camera's viewing box, in world units.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.OrthographicCamera.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.OrthographicCamera" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.OrthographicCamera.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.OrthographicCamera" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.OrthographicCamera.Width">
      <summary> Gets or sets the width of the camera's viewing box, in world units. </summary>
      <returns>Width of the camera's viewing box, in world units.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.OrthographicCamera.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.OrthographicCamera.Width" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.OrthographicCamera.Width" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.PerspectiveCamera">
      <summary> Represents a perspective projection camera. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.PerspectiveCamera.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.PerspectiveCamera" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.PerspectiveCamera.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.PerspectiveCamera" /> class using the specified position, direction, and field of view.</summary>
      <param name="position">Point3D that specifies the camera's position.</param>
      <param name="lookDirection">Vector3D that specifies the direction of the camera's projection.</param>
      <param name="upDirection">Vector3D that specifies the upward direction according to the perspective of the onlooker.</param>
      <param name="fieldOfView">Width of the camera's angle of projection, specified in degrees.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.PerspectiveCamera.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.PerspectiveCamera" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.PerspectiveCamera.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.PerspectiveCamera" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.PerspectiveCamera.FieldOfView">
      <summary> Gets or sets a value that represents the camera's horizontal field of view. </summary>
      <returns>The camera's horizontal field of view, in degrees. The default value is 45.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.PerspectiveCamera.FieldOfViewProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.PerspectiveCamera.FieldOfView" /> dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.PerspectiveCamera.FieldOfView" /> dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Point3D">
      <summary>Represents an x-, y-, and z-coordinate point in 3-D space. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.#ctor(System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <param name="x">The <see cref="P:System.Windows.Media.Media3D.Point3D.X" /> value of the new <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</param>
      <param name="y">The <see cref="P:System.Windows.Media.Media3D.Point3D.Y" /> value of the new <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</param>
      <param name="z">The <see cref="P:System.Windows.Media.Media3D.Point3D.Z" /> value of the new <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.Add(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Adds a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> and returns the result as a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The sum of <paramref name="point" /> and <paramref name="vector" />.</returns>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to add.</param>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to add. </param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.Equals(System.Object)">
      <summary>Determines whether the specified object is a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure and if so, whether the <see cref="P:System.Windows.Media.Media3D.Point3D.X" />, <see cref="P:System.Windows.Media.Media3D.Point3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Point3D.Z" /> properties of the specified <see cref="T:System.Object" /> are equal to the <see cref="P:System.Windows.Media.Media3D.Point3D.X" />, <see cref="P:System.Windows.Media.Media3D.Point3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Point3D.Z" /> properties of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>true if the instances are equal; otherwise, false.true if <paramref name="o" /> is a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure and if it is also identical to this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure; otherwise, false.</returns>
      <param name="o">The object to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.Equals(System.Windows.Media.Media3D.Point3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point3D" /> structures for equality.</summary>
      <returns>true if instances are equal; otherwise, false.</returns>
      <param name="value">The instance of <see cref="T:System.Windows.Media.Media3D.Point3D" /> to compare to this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.Equals(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point3D" /> structures for equality. </summary>
      <returns>true if the <see cref="P:System.Windows.Media.Media3D.Point3D.X" />, <see cref="P:System.Windows.Media.Media3D.Point3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Point3D.Z" /> values for <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, false.</returns>
      <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to compare.</param>
      <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.GetHashCode">
      <summary>Returns a hash code for this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>A hash code for this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.Multiply(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure by the specified <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>A transformed <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure, the result of transforming <paramref name="point" /> by <paramref name="matrix" />.</returns>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to transform.</param>
      <param name="matrix">The <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure to use for the transformation.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.Offset(System.Double,System.Double,System.Double)">
      <summary>Translates the <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure by the specified amounts. </summary>
      <param name="offsetX">The amount to change the <see cref="P:System.Windows.Media.Media3D.Point3D.X" /> coordinate of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</param>
      <param name="offsetY">The amount to change the <see cref="P:System.Windows.Media.Media3D.Point3D.Y" /> coordinate of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</param>
      <param name="offsetZ">The amount to change the <see cref="P:System.Windows.Media.Media3D.Point3D.Z" /> coordinate of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.op_Addition(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Adds a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> and returns the result as a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure that is the sum of <paramref name="point" /> and <paramref name="vector" />.</returns>
      <param name="point">The point to add.</param>
      <param name="vector">The vector to add.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.op_Equality(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point3D" /> structures for equality. </summary>
      <returns>true if the <see cref="P:System.Windows.Media.Media3D.Point3D.X" />, <see cref="P:System.Windows.Media.Media3D.Point3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Point3D.Z" /> coordinates of <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, false.</returns>
      <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to compare.</param>
      <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.op_Explicit(System.Windows.Media.Media3D.Point3D)~System.Windows.Media.Media3D.Point4D">
      <summary>Converts a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure into a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>The result of converting <paramref name="point" />.</returns>
      <param name="point">The point to convert.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.op_Explicit(System.Windows.Media.Media3D.Point3D)~System.Windows.Media.Media3D.Vector3D">
      <summary>Converts a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure into a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The result of converting <paramref name="point" />.</returns>
      <param name="point">The point to convert.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.op_Inequality(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point3D" /> structures for inequality. </summary>
      <returns>true if the <see cref="P:System.Windows.Media.Media3D.Point3D.X" />, <see cref="P:System.Windows.Media.Media3D.Point3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Point3D.Z" /> coordinates of <paramref name="point1" /> and <paramref name="point2" /> are different; otherwise, false.</returns>
      <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to compare.</param>
      <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.op_Multiply(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure by the specified <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The result of transforming <paramref name="point" /> by using <paramref name="matrix" />.</returns>
      <param name="point">The point to transform.</param>
      <param name="matrix">The matrix that is used to transform <paramref name="point" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.op_Subtraction(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure and returns the result as a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure that represents the difference between <paramref name="point1" /> and <paramref name="point2" />.</returns>
      <param name="point1">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure on which to perform subtraction.</param>
      <param name="point2">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to subtract from <paramref name="point1" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.op_Subtraction(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure and returns the result as a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The changed <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure, the result of subtracting <paramref name="vector" /> from <paramref name="point" />.</returns>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure from which to subtract vector.</param>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to subtract from point.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.Parse(System.String)">
      <summary>Converts a <see cref="T:System.String" /> representation of a 3-D point into the equivalent <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The equivalent <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</returns>
      <param name="source">The <see cref="T:System.String" /> representation of the 3-D point.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.Subtract(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure and returns the result as a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure that represents the difference between <paramref name="point1" /> and <paramref name="point2" />.</returns>
      <param name="point1">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to be subtracted from.</param>
      <param name="point2">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to subtract from <paramref name="point1" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.Subtract(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure and returns the result as a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The difference between <paramref name="point" /> and <paramref name="vector" />.</returns>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure from which to subtract <paramref name="vector" />.</param>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to subtract from <paramref name="point" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A string containing the value of the current instance in the specified format. </returns>
      <param name="format">The string specifying the format to use. -or- null to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The IFormatProvider to use to format the value. -or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Media3D.Point3D.X" />, <see cref="P:System.Windows.Media.Media3D.Point3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Point3D.Z" /> values of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3D.ToString(System.IFormatProvider)">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Media3D.Point3D.X" />, <see cref="P:System.Windows.Media.Media3D.Point3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Point3D.Z" /> values of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</returns>
      <param name="provider">The culture-specific formatting information.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3D.X">
      <summary>Gets or sets the x-coordinate of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The x-coordinate of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3D.Y">
      <summary>Gets or sets the y-coordinate of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The y-coordinate of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3D.Z">
      <summary>Gets or sets the z-coordinate of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The z-coordinate of this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Point3DCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.Media.Media3D.Point3D" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.Point3D})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> class using the specified collection.</summary>
      <param name="collection">Collection with which to instantiate the Point3DCollection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> class with the specified capacity.</summary>
      <param name="capacity">Integer that specifies the capacity of the Point3DCollection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.Add(System.Windows.Media.Media3D.Point3D)">
      <summary>Adds a <see cref="T:System.Windows.Media.Media3D.Point3D" /> object to the end of the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</summary>
      <param name="value">Item to add to the end of this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.Clear">
      <summary>Removes all the items from this <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.Contains(System.Windows.Media.Media3D.Point3D)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> is in this <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</summary>
      <returns>true if <paramref name="value" />, the specified Point3D, is in this Point3DCollection; otherwise, false.</returns>
      <param name="value">The item to locate in this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.CopyTo(System.Windows.Media.Media3D.Point3D[],System.Int32)">
      <summary>Copies the items of this <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />, starting with the specified index value, into an array of <see cref="T:System.Windows.Media.Media3D.Point3D" /> objects.</summary>
      <param name="array">The array that is the destination of the items copied from this Point3DCollection.</param>
      <param name="index">The index at which copying begins.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3DCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Media.Media3D.Point3D" /> objects contained in the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</summary>
      <returns>The number of <see cref="T:System.Windows.Media.Media3D.Point3D" /> objects contained in the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An enumerator that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.IndexOf(System.Windows.Media.Media3D.Point3D)">
      <summary>Gets the index position of the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Point3D" />.</summary>
      <returns>The index position of the specified Point3D.</returns>
      <param name="value">The Point3D to search for.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.Insert(System.Int32,System.Windows.Media.Media3D.Point3D)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Media3D.Point3D" /> into this <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> at the specified index position.</summary>
      <param name="index">The index position at which to insert the specified Point3D.</param>
      <param name="value">The Point3D to insert.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3DCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Point3D" /> at the specified zero-based index.</summary>
      <returns>The item at the specified index.</returns>
      <param name="index">The zero-based index of the Point3D object to get or set.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.Parse(System.String)">
      <summary>Converts a string representation of a collection of <see cref="T:System.Windows.Media.Media3D.Point3D" /> objects into an equivalent <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</summary>
      <returns>The equivalent Point3DCollection.</returns>
      <param name="source">The string representation of the collection of Point3D objects.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.Remove(System.Windows.Media.Media3D.Point3D)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> from the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</summary>
      <returns>true if <paramref name="value" /> was removed from the collection; otherwise, false. </returns>
      <param name="value">The Point3D to remove from this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Media3D.Point3D" /> at the specified index position from the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</summary>
      <param name="index">The index position of the Point3D to remove.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3DCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3DCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3DCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A <see cref="T:System.String" /> containing the value of the current instance in the specified format.</returns>
      <param name="format">The <see cref="T:System.String" /> specifying the format to use.-or- null (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The <see cref="T:System.IFormatProvider" /> to use to format the value.-or- null (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.ToString">
      <summary> Creates a string representation of this <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />. </summary>
      <returns>String representation of the object.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of this <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />. </summary>
      <returns>String representation of the object.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Point3DCollection.Enumerator">
      <summary>Enumerates items in a <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3DCollection.Enumerator.Current">
      <summary> Gets the current <see cref="T:System.Windows.Media.Media3D.Point3D" /> in the collection. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Point3D" /> at the current position in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point3DCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.Point3DCollectionConverter">
      <summary>Converts instances of other types to and from <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> instances. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Point3DCollectionConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether the type converter can convert from a specified type. </summary>
      <returns>true if the converter can convert from the provided type; otherwise, false.</returns>
      <param name="context">The type descriptor context for this call.</param>
      <param name="sourceType">The type being queried for support.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether the type converter can convert to the specified type. </summary>
      <returns>true if the converter can convert to the provided type; otherwise, false.</returns>
      <param name="context">The type descriptor context for this call.</param>
      <param name="destinationType">The type being queried for support.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert to a <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> from the given object. </summary>
      <returns>The <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> that was constructed.</returns>
      <param name="context">The type descriptor context for this call.</param>
      <param name="culture">The culture information that is respected when converting.</param>
      <param name="value">The object to convert to an instance of <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or is not a valid type that can be converted to a <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an instance of <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> to the specified type </summary>
      <returns>The object that was constructed.</returns>
      <param name="context">The type descriptor context for this call.</param>
      <param name="culture">The culture information that is respected when converting.</param>
      <param name="value">The object to convert to an instance of <paramref name="destinationType" />.</param>
      <param name="destinationType">Type to which this method will convert the <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> instance.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or is not a <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.-or-<paramref name="destinationType" /> is not one of the valid destination types.</exception>
    </member>
    <member name="T:System.Windows.Media.Media3D.Point3DConverter">
      <summary> Converts instances of other types to and from a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DConverter.#ctor">
      <summary> Initializes a new instance of <see cref="T:System.Windows.Media.Media3D.Point3DConverter" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether a class can be converted from a given type to an instance of a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.  </summary>
      <returns>Indicates whether the type can be converted to a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.ValueMeaningfalseThe converter cannot convert from the provided type.trueThe converter can convert the provided type to a <see cref="T:System.Windows.Media.Media3D.Point3D" />.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether an instance of a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure can be converted to a different type. </summary>
      <returns>Indicates whether this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure can be converted to <paramref name="destinationType" />.ValueMeaningfalseThe converter cannot convert this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to the specified type.trueThe converter can convert this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to the specified type.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="destinationType">The desired type that this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary> Attempts to convert a specified object to a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure created from the converted <paramref name="value" />.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="culture">Describes the <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="value">The object being converted.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary> Attempts to convert a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to a specified type. </summary>
      <returns>The object created from converting this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="culture">The CultureInfo which is respected when converting.</param>
      <param name="value">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to convert.</param>
      <param name="destinationType">The type this <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure is converted to.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Point4D">
      <summary>Represents an x-, y-, z-, and w-coordinate point in world space used in performing transformations with non-affine 3-D matrices. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <param name="x">The x-coordinate of the new <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
      <param name="y">The y-coordinate of the new <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
      <param name="z">The z-coordinate of the new <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
      <param name="w">The w-coordinate of the new <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.Add(System.Windows.Media.Media3D.Point4D,System.Windows.Media.Media3D.Point4D)">
      <summary>Adds a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to a <see cref="T:System.Windows.Media.Media3D.Point4D" />.</summary>
      <returns>Returns the sum of <paramref name="point1" /> and <paramref name="point2" />.</returns>
      <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to add.</param>
      <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to add.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure and if the <see cref="P:System.Windows.Media.Media3D.Point4D.X" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Y" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Z" />, and <see cref="P:System.Windows.Media.Media3D.Point4D.W" /> properties of the specified <see cref="T:System.Object" /> are equal to the <see cref="P:System.Windows.Media.Media3D.Point4D.X" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Y" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Z" />, and <see cref="P:System.Windows.Media.Media3D.Point4D.W" />  properties of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
      <returns>true if instances are equal; otherwise, false.true if <paramref name="o" /> (the passed <see cref="T:System.Object" />) is a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure and is identical with this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure; false otherwise.</returns>
      <param name="o">The object to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.Equals(System.Windows.Media.Media3D.Point4D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point4D" /> structures for equality.</summary>
      <returns>true if instances are equal; otherwise, false.</returns>
      <param name="value">The instance of Point4D to compare to this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.Equals(System.Windows.Media.Media3D.Point4D,System.Windows.Media.Media3D.Point4D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point4D" /> structures for equality.</summary>
      <returns>true if the <see cref="P:System.Windows.Media.Media3D.Point4D.X" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Point4D.Z" /> components of <paramref name="point3D1" /> and <paramref name="point3D2" /> are equal; false otherwise.</returns>
      <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
      <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.GetHashCode">
      <summary>Returns a hash code for this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>Returns a hash code for this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.Multiply(System.Windows.Media.Media3D.Point4D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure by the specified <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>Returns the result of transforming <paramref name="point" /> and <paramref name="matrix" />.</returns>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to transform.</param>
      <param name="matrix">The transformation <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.Offset(System.Double,System.Double,System.Double,System.Double)">
      <summary>Translates the <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure by the specified amounts. </summary>
      <param name="deltaX">The amount to offset the <see cref="P:System.Windows.Media.Media3D.Point4D.X" /> coordinate of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
      <param name="deltaY">The amount to offset the <see cref="P:System.Windows.Media.Media3D.Point4D.Y" /> coordinate of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
      <param name="deltaZ">The amount to offset the <see cref="P:System.Windows.Media.Media3D.Point4D.Z" /> coordinate of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
      <param name="deltaW">The amount to offset the <see cref="P:System.Windows.Media.Media3D.Point4D.W" /> coordinate of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.op_Addition(System.Windows.Media.Media3D.Point4D,System.Windows.Media.Media3D.Point4D)">
      <summary>Adds a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to a <see cref="T:System.Windows.Media.Media3D.Point4D" />.</summary>
      <returns>Returns the sum of <paramref name="point1" /> and <paramref name="point2" />.</returns>
      <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to add.</param>
      <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to add.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.op_Equality(System.Windows.Media.Media3D.Point4D,System.Windows.Media.Media3D.Point4D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point4D" /> structures for equality.</summary>
      <returns>true if the <see cref="P:System.Windows.Media.Media3D.Point4D.X" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Point4D.Z" /> coordinates of <paramref name="point4D1" /> and <paramref name="point4D2" /> are equal; otherwise, false.</returns>
      <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
      <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.op_Inequality(System.Windows.Media.Media3D.Point4D,System.Windows.Media.Media3D.Point4D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point4D" /> structures for inequality.</summary>
      <returns>true if the <see cref="P:System.Windows.Media.Media3D.Point4D.X" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Y" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Z" />, and <see cref="P:System.Windows.Media.Media3D.Point4D.W" /> coordinates of <paramref name="point4D1" /> and <paramref name="point4D2" /> are different; otherwise, false.</returns>
      <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
      <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.op_Multiply(System.Windows.Media.Media3D.Point4D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure by the specified <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>Returns the result of transforming <paramref name="point" /> and <paramref name="matrix" />.</returns>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to transform.</param>
      <param name="matrix">The transformation <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.op_Subtraction(System.Windows.Media.Media3D.Point4D,System.Windows.Media.Media3D.Point4D)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure and returns the result as a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>Returns the difference between <paramref name="point1" /> and <paramref name="point2" />.</returns>
      <param name="point1">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to be subtracted from.</param>
      <param name="point2">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to subtract from <paramref name="point1" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.Parse(System.String)">
      <summary>Converts a <see cref="T:System.String" /> representation of a point4D structure into the equivalent <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>Returns the equivalent <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</returns>
      <param name="source">The <see cref="T:System.String" /> representation of the point4D structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.Subtract(System.Windows.Media.Media3D.Point4D,System.Windows.Media.Media3D.Point4D)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>Returns the difference between <paramref name="point1" /> and <paramref name="point2" />.</returns>
      <param name="point1">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to be subtracted from.</param>
      <param name="point2">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to subtract from <paramref name="point1" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A string containing the value of the current instance in the specified format. </returns>
      <param name="format">The string specifying the format to use. -or- null to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The IFormatProvider to use to format the value. -or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Media3D.Point4D.X" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Y" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Z" />, and <see cref="P:System.Windows.Media.Media3D.Point4D.W" /> values of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4D.ToString(System.IFormatProvider)">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Media3D.Point4D.X" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Y" />, <see cref="P:System.Windows.Media.Media3D.Point4D.Z" />, and <see cref="P:System.Windows.Media.Media3D.Point4D.W" /> values of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point4D.W">
      <summary>Gets or sets the <see cref="P:System.Windows.Media.Media3D.Point4D.W" /> component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Point4D.W" /> component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.  The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point4D.X">
      <summary>Gets or sets the <see cref="P:System.Windows.Media.Media3D.Point4D.X" /> component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Point4D.X" /> component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.  The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point4D.Y">
      <summary>Gets or sets the <see cref="P:System.Windows.Media.Media3D.Point4D.Y" /> component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Point4D.Y" /> component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.  The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Point4D.Z">
      <summary>Gets or sets the <see cref="P:System.Windows.Media.Media3D.Point4D.Z" /> component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Point4D.Z" /> component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.  The default value is 0.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Point4DConverter">
      <summary> Converts instances of other types to and from a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4DConverter.#ctor">
      <summary> Initializes a new instance of <see cref="T:System.Windows.Media.Media3D.Point4DConverter" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether a class can be converted from a given type to an instance of a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.  </summary>
      <returns>Indicates whether the type can be converted to a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.ValueMeaningfalseThe converter cannot convert from the provided type.trueThe converter can convert the provided type to a <see cref="T:System.Windows.Media.Media3D.Point4D" />.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether an instance of a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure can be converted to a different type. </summary>
      <returns>Indicates whether this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure can be converted to <paramref name="destinationType" />.ValueMeaningfalseThe converter cannot convert this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to the specified type.trueThe converter can convert this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to the specified type.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="destinationType">The desired type that this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary> Attempts to convert a specified object to a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure. </summary>
      <returns>The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure created from the converted <paramref name="value" />.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="culture">Describes the <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="value">The object being converted.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Point4DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary> Attempts to convert a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to a specified type. </summary>
      <returns>The object created from converting this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="culture">The CultureInfo which is respected when converting.</param>
      <param name="value">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to convert.</param>
      <param name="destinationType">The type this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure is converted to.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.PointLight">
      <summary>Represents a light source that has a specified position in space and projects its light in all directions.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.PointLight.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.PointLight" /> class at the origin. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.PointLight.#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Point3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.PointLight" /> class at the specified position, using the specified color.</summary>
      <param name="diffuseColor">The diffuse color.</param>
      <param name="position">The position.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.PointLight.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.PointLight" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.PointLight.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.PointLight" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.PointLightBase">
      <summary>Abstract base class that represents a light object that has a position in space and projects its light in all directions. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.PointLightBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.PointLightBase" /> object, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.PointLightBase.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.PointLightBase.ConstantAttenuation">
      <summary>Gets or sets a constant value by which the intensity of the light diminishes over distance.  </summary>
      <returns>Double by which the intensity of the light diminishes over distance.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.PointLightBase.ConstantAttenuationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.PointLightBase.ConstantAttenuation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.PointLightBase.ConstantAttenuation" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.PointLightBase.LinearAttenuation">
      <summary>Gets or sets a value that specifies the linear diminution of the light's intensity over distance.  </summary>
      <returns>Double that specifies the linear diminution of the light's intensity over distance.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.PointLightBase.LinearAttenuationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.PointLightBase.LinearAttenuation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.PointLightBase.LinearAttenuation" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.PointLightBase.Position">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Media3D.Point3D" /> that specifies the light's position in world space.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Point3D" /> that specifies the light's position in world space.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.PointLightBase.PositionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.PointLightBase.Position" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.PointLightBase.Position" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.PointLightBase.QuadraticAttenuation">
      <summary>Gets or sets a value that specifies the diminution of the light's effect over distance, calculated by a quadratic operation.  </summary>
      <returns>Double that specifies the diminution of the light's effect over distance, calculated by a quadratic operation.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.PointLightBase.QuadraticAttenuationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.PointLightBase.QuadraticAttenuation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.PointLightBase.QuadraticAttenuation" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.PointLightBase.Range">
      <summary>Gets or sets the distance beyond which the light has no effect.  </summary>
      <returns>Double that specifies the distance beyond which the light has no effect.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.PointLightBase.RangeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.PointLightBase.Range" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.PointLightBase.Range" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.ProjectionCamera">
      <summary>An abstract base class for perspective and orthographic projection cameras.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.ProjectionCamera.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.ProjectionCamera" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.ProjectionCamera.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.ProjectionCamera" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ProjectionCamera.FarPlaneDistance">
      <summary>Gets or sets a value that specifies the distance from the camera of the camera's far clip plane.  </summary>
      <returns>Double that specifies the distance from the camera of the camera's far clip plane.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ProjectionCamera.FarPlaneDistanceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ProjectionCamera.FarPlaneDistance" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ProjectionCamera.FarPlaneDistance" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ProjectionCamera.LookDirection">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> which defines the direction in which the camera is looking in world coordinates.  </summary>
      <returns>Vector3D that represents the direction of the camera's field of view.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ProjectionCamera.LookDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ProjectionCamera.LookDirection" /> dependency property..</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ProjectionCamera.LookDirection" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ProjectionCamera.NearPlaneDistance">
      <summary>Gets or sets a value that specifies the distance from the camera of the camera's near clip plane.  </summary>
      <returns>Double that specifies the distance from the camera of the camera's near clip plane.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ProjectionCamera.NearPlaneDistanceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ProjectionCamera.NearPlaneDistance" /> dependency property.. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ProjectionCamera.NearPlaneDistance" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ProjectionCamera.Position">
      <summary> Gets or sets the position of the camera in world coordinates.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Point3D" /> that specifies the position of the camera.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ProjectionCamera.PositionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ProjectionCamera.Position" /> dependency property.. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ProjectionCamera.Position" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ProjectionCamera.UpDirection">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> which defines the upward direction of the camera.  </summary>
      <returns>Vector3D that represents the upward direction in the scene projection.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ProjectionCamera.UpDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ProjectionCamera.UpDirection" /> dependency property..</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ProjectionCamera.UpDirection" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Quaternion">
      <summary>Structure that represents a rotation in three dimensions. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Quaternion" /> structure. </summary>
      <param name="x">Value of the new <see cref="T:System.Windows.Media.Media3D.Quaternion" />'s X coordinate.</param>
      <param name="y">Value of the new <see cref="T:System.Windows.Media.Media3D.Quaternion" />'s Y coordinate.</param>
      <param name="z">Value of the new <see cref="T:System.Windows.Media.Media3D.Quaternion" />'s Z coordinate.</param>
      <param name="w">Value of the new <see cref="T:System.Windows.Media.Media3D.Quaternion" />'s W coordinate.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.#ctor(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Quaternion" /> structure. </summary>
      <param name="axisOfRotation">
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that represents the axis of rotation.</param>
      <param name="angleInDegrees">Angle to rotate around the specified axis, in degrees.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Add(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)">
      <summary>Adds the specified quaternions. </summary>
      <returns>Quaternion that is the result of addition.</returns>
      <param name="left">First quaternion to add.</param>
      <param name="right">Second quaternion to add.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Quaternion.Angle">
      <summary>Gets the quaternion's angle, in degrees. </summary>
      <returns>Double that represents the quaternion's angle, in degrees.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Quaternion.Axis">
      <summary>Gets the quaternion's axis.</summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that represents the quaternion's axis.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Conjugate">
      <summary>Replaces a quaternion with its conjugate. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Equals(System.Object)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Quaternion" /> instances for equality. </summary>
      <returns>true if the two <see cref="T:System.Windows.Media.Media3D.Quaternion" /> instances are exactly equal, false otherwise.</returns>
      <param name="o">Object with which to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Equals(System.Windows.Media.Media3D.Quaternion)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Quaternion" /> instances for equality. </summary>
      <returns>true if the two <see cref="T:System.Windows.Media.Media3D.Quaternion" /> instances are exactly equal, false otherwise.</returns>
      <param name="value">Quaternion with which to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Equals(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Quaternion" /> instances for equality. </summary>
      <returns>true if the two <see cref="T:System.Windows.Media.Media3D.Quaternion" /> instances are exactly equal, false otherwise.</returns>
      <param name="quaternion1">First <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to compare.</param>
      <param name="quaternion2">Second <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.Windows.Media.Media3D.Quaternion" />. </summary>
      <returns>An integer type that represents the hash code for the <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Quaternion.Identity">
      <summary>Gets the Identity quaternion </summary>
      <returns>The Identity quaternion.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Invert">
      <summary>Replaces the specified quaternion with its inverse </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Quaternion.IsIdentity">
      <summary>Gets a value that indicates whether the specified quaternion is an <see cref="P:System.Windows.Media.Media3D.Quaternion.Identity" /> quaternion. </summary>
      <returns>true if the quaternion is the <see cref="P:System.Windows.Media.Media3D.Quaternion.Identity" /> quaternion, false otherwise.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Quaternion.IsNormalized">
      <summary>Gets a value that indicates whether the quaternion is normalized.</summary>
      <returns>true if the quaternion is normalized, false otherwise.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Multiply(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)">
      <summary>Multiplies the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> values. </summary>
      <returns>Quaternion that is the result of multiplication.</returns>
      <param name="left">First quaternion to multiply.</param>
      <param name="right">Second quaternion to multiply.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Normalize">
      <summary>Returns a normalized quaternion. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.op_Addition(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)">
      <summary>Adds the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> values.</summary>
      <returns>Quaternion that is the sum of the two specified  <see cref="T:System.Windows.Media.Media3D.Quaternion" /> values.</returns>
      <param name="left">First quaternion to add.</param>
      <param name="right">Second quaternion to add.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.op_Equality(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Quaternion" /> instances for exact equality.</summary>
      <returns>true if the two <see cref="T:System.Windows.Media.Media3D.Quaternion" /> instances are exactly equal, false otherwise.</returns>
      <param name="quaternion1">First Quaternion to compare.</param>
      <param name="quaternion2">Second Quaternion to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.op_Inequality(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Quaternion" /> instances for exact inequality. </summary>
      <returns>true if the two <see cref="T:System.Windows.Media.Media3D.Quaternion" /> instances are exactly equal, false otherwise.</returns>
      <param name="quaternion1">First quaternion to compare.</param>
      <param name="quaternion2">Second quaternion to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.op_Multiply(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)">
      <summary>Multiplies the specified quaternion by another.</summary>
      <returns>Quaternion that is the product of multiplication.</returns>
      <param name="left">First quaternion.</param>
      <param name="right">Second quaternion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.op_Subtraction(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)">
      <summary>Subtracts a specified quaternion from another.</summary>
      <returns>Quaternion that is the result of subtraction.</returns>
      <param name="left">Quaternion from which to subtract.</param>
      <param name="right">Quaternion to subtract from the first quaternion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Parse(System.String)">
      <summary>Converts a string representation of a <see cref="T:System.Windows.Media.Media3D.Quaternion" /> into the equivalent <see cref="T:System.Windows.Media.Media3D.Quaternion" /> structure. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Quaternion" /> represented by the string.</returns>
      <param name="source">A string representation of a <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Slerp(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Double)">
      <summary>Interpolates between two orientations using spherical linear interpolation. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Quaternion" /> that represents the orientation resulting from the interpolation.</returns>
      <param name="from">
        <see cref="T:System.Windows.Media.Media3D.Quaternion" /> that represents the starting orientation.</param>
      <param name="to">
        <see cref="T:System.Windows.Media.Media3D.Quaternion" /> that represents the ending orientation.</param>
      <param name="t">Interpolation coefficient.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Slerp(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Double,System.Boolean)">
      <summary>Interpolates between orientations, represented as <see cref="T:System.Windows.Media.Media3D.Quaternion" /> structures, using spherical linear interpolation.</summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Quaternion" /> that represents the orientation resulting from the interpolation.</returns>
      <param name="from">
        <see cref="T:System.Windows.Media.Media3D.Quaternion" /> that represents the starting orientation.</param>
      <param name="to">
        <see cref="T:System.Windows.Media.Media3D.Quaternion" /> that represents the ending orientation.</param>
      <param name="t">Interpolation coefficient.</param>
      <param name="useShortestPath">Boolean that indicates whether to compute quaternions that constitute the shortest possible arc on a four-dimensional unit sphere.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.Subtract(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)">
      <summary>Subtracts a Quaternion from another. </summary>
      <returns>Quaternion that is the result of subtraction.</returns>
      <param name="left">Quaternion from which to subtract.</param>
      <param name="right">Quaternion to subtract from the first quaternion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A string containing the value of the current instance in the specified format. </returns>
      <param name="format">The string specifying the format to use. -or- null to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The IFormatProvider to use to format the value. -or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.ToString">
      <summary>Creates a string representation of the object. </summary>
      <returns>String representation of the object.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Quaternion.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of the object. </summary>
      <returns>String representation of the object.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Quaternion.W">
      <summary>Gets the W component of the quaternion.</summary>
      <returns>The W component of the quaternion.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Quaternion.X">
      <summary>Gets the X component of the quaternion.</summary>
      <returns>The X component of the quaternion.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Quaternion.Y">
      <summary>Gets the Y component of the quaternion.</summary>
      <returns>The Y component of the quaternion.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Quaternion.Z">
      <summary>Gets the Z component of the quaternion.</summary>
      <returns>The Z component of the quaternion.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.QuaternionConverter">
      <summary>Converts instances of other types to and from instances of <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.QuaternionConverter.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Media.Media3D.QuaternionConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.QuaternionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether this type converter can convert from a given type. </summary>
      <returns>True if this converter can convert from the provided type, false otherwise.</returns>
      <param name="context">ITypeDescriptorContext for this call.</param>
      <param name="sourceType">Type being queried for support.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.QuaternionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether this type converter can convert to the given type. </summary>
      <returns>True if this converter can convert to the provided type, false otherwise.</returns>
      <param name="context">ITypeDescriptorContext for this call.</param>
      <param name="destinationType">Type being queried for support.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.QuaternionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:System.Windows.Media.Media3D.Quaternion" />. </summary>
      <returns>Quaternion that was constructed.</returns>
      <param name="context">ITypeDescriptorContext for this call.</param>
      <param name="culture">CultureInfo to be respected when converting.</param>
      <param name="value">Object to convert to an instance of Quaternion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.QuaternionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an instance of <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to the given type.</summary>
      <returns>Object that was constructed.</returns>
      <param name="context">The ITypeDescriptorContext for this call.</param>
      <param name="culture">The CultureInfo which is respected when converting.</param>
      <param name="value">The object to convert to an instance of <paramref name="destinationType" />.</param>
      <param name="destinationType">The type to which the Matrix3D instance will be converted.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.QuaternionRotation3D">
      <summary>Represents a rotation transformation defined as a quaternion.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.QuaternionRotation3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.QuaternionRotation3D" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.QuaternionRotation3D.#ctor(System.Windows.Media.Media3D.Quaternion)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.QuaternionRotation3D" /> class using the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</summary>
      <param name="quaternion">Quaternion that specifies the rotation to which to interpolate.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.QuaternionRotation3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.QuaternionRotation3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.QuaternionRotation3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.QuaternionRotation3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.QuaternionRotation3D.Quaternion">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Quaternion" /> that defines the destination rotation.  </summary>
      <returns>Quaternion that defines the destination rotation.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.QuaternionRotation3D.QuaternionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.QuaternionRotation3D.Quaternion" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.QuaternionRotation3D.Quaternion" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.RayHitTestParameters">
      <summary>Specifies the parameters of a hit test along a ray.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.RayHitTestParameters.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Creates an instance of the object that specifies the origin and direction of the ray along which to hit test.</summary>
      <param name="origin">Point3D at which the ray originates.</param>
      <param name="direction">Vector3D that indicates the direction of the ray.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayHitTestParameters.Direction">
      <summary> Gets or sets a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that indicates the direction (from its origin) of the ray along which to hit test. </summary>
      <returns>Vector3D that indicates the direction of the ray along which to hit test.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayHitTestParameters.Origin">
      <summary> Gets the origin of the ray along which to hit test. </summary>
      <returns>Origin of the ray along which to hit test.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.RayHitTestResult">
      <summary>Represents the result of a hit test along a ray.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayHitTestResult.DistanceToRayOrigin">
      <summary>Gets the distance between the hit intersection and the inner coordinate space of the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> which initiated the hit test.</summary>
      <returns>Double that indicates the distance between the hit intersection and the inner coordinate space of the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> which initiated the hit test.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayHitTestResult.ModelHit">
      <summary>Gets the Model3D intersected by the ray along which the hit test was performed.</summary>
      <returns>Model3D intersected by the ray.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayHitTestResult.PointHit">
      <summary>Gets the Point3D at the intersection between the ray along which the hit test was performed and the hit object.</summary>
      <returns>Point3D at which the hit object was intersected by the ray.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayHitTestResult.VisualHit">
      <summary>Gets the Visual intersected by the ray along which the hit test was performed.</summary>
      <returns>Visual3D intersected by the ray.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.RayMeshGeometry3DHitTestResult">
      <summary>Represents an intersection between a ray hit test and a <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" />.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayMeshGeometry3DHitTestResult.DistanceToRayOrigin">
      <summary>Gets the distance between the point of intersection and the ray's origin in the coordinate space of <see cref="T:System.Windows.Media.Media3D.Visual3D" /> which initiated the hit test.</summary>
      <returns>Double that indicates the distance between the point of intersection and the ray's origin in the coordinate space of <see cref="T:System.Windows.Media.Media3D.Visual3D" /> which initiated the hit test.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayMeshGeometry3DHitTestResult.MeshHit">
      <summary>Gets the <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" /> intersected by this hit test.</summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.MeshGeometry3D" /> intersected by the ray.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayMeshGeometry3DHitTestResult.PointHit">
      <summary>Gets the point at which the mesh was intersected by the ray along which the hit test was performed.</summary>
      <returns>Point3D at which the mesh was intersected.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayMeshGeometry3DHitTestResult.VertexIndex1">
      <summary>First vertex of the mesh triangle intersected by the ray.</summary>
      <returns>The index of the first vertex. </returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayMeshGeometry3DHitTestResult.VertexIndex2">
      <summary>Second vertex of the mesh triangle intersected by the ray.</summary>
      <returns>The index of the second vertex.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayMeshGeometry3DHitTestResult.VertexIndex3">
      <summary>Third vertex of the mesh triangle intersected by the ray.</summary>
      <returns>The index of the third vertex.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayMeshGeometry3DHitTestResult.VertexWeight1">
      <summary>Relative contribution of the first vertex of a mesh triangle to the point at which that triangle was intersected by the hit test, expressed as a value between zero and 1.</summary>
      <returns>The weighting of the first vertex. </returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayMeshGeometry3DHitTestResult.VertexWeight2">
      <summary>Relative contribution of the second vertex of a mesh triangle to the point at which that triangle was intersected by the hit test, expressed as a value between zero and 1.</summary>
      <returns>The weighting of the second vertex.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RayMeshGeometry3DHitTestResult.VertexWeight3">
      <summary>Relative contribution of the third vertex of a mesh triangle to the point at which that triangle was intersected by the hit test, expressed as a value between zero and 1.</summary>
      <returns>The weighting of the third vertex.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Rect3D">
      <summary>Represents a 3-D rectangle: for example, a cube. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Rect3D" /> structure. </summary>
      <param name="x">X-axis coordinate of the new <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
      <param name="y">Y-axis coordinate of the new <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
      <param name="z">Z-axis coordinate of the new <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
      <param name="sizeX">Size of the new <see cref="T:System.Windows.Media.Media3D.Rect3D" /> in the X dimension.</param>
      <param name="sizeY">Size of the new <see cref="T:System.Windows.Media.Media3D.Rect3D" /> in the Y dimension.</param>
      <param name="sizeZ">Size of the new <see cref="T:System.Windows.Media.Media3D.Rect3D" /> in the Z dimension.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Size3D)">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Media.Media3D.Rect3D" /> structure. </summary>
      <param name="location">Location of the new <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
      <param name="size">Size of the new <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Contains(System.Double,System.Double,System.Double)">
      <summary>Gets a value that indicates whether a specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> is within the <see cref="T:System.Windows.Media.Media3D.Rect3D" />, including its edges. </summary>
      <returns>true if the specified point or rectangle is within the <see cref="T:System.Windows.Media.Media3D.Rect3D" />, including its edges; false otherwise.</returns>
      <param name="x">X-axis coordinate of the <see cref="T:System.Windows.Media.Media3D.Point3D" /> to be tested.</param>
      <param name="y">Y-axis coordinate of the <see cref="T:System.Windows.Media.Media3D.Point3D" /> to be tested.</param>
      <param name="z">Z-coordinate of the <see cref="T:System.Windows.Media.Media3D.Point3D" /> to be tested.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Contains(System.Windows.Media.Media3D.Point3D)">
      <summary>Gets a value that indicates whether a specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> is within the <see cref="T:System.Windows.Media.Media3D.Rect3D" />, including its edges. </summary>
      <returns>True if the specified point or rectangle is within the <see cref="T:System.Windows.Media.Media3D.Rect3D" />, including its edges; false otherwise.</returns>
      <param name="point">Point to be tested.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Contains(System.Windows.Media.Media3D.Rect3D)">
      <summary>Gets a value that indicates whether a specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> is within the <see cref="T:System.Windows.Media.Media3D.Rect3D" />, including its edges. </summary>
      <returns>True if the specified point or rectangle is within the <see cref="T:System.Windows.Media.Media3D.Rect3D" />, including its edges; false otherwise.</returns>
      <param name="rect">
        <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to be tested. </param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Rect3D.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Media3D.Rect3D" />. </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Equals(System.Object)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Rect3D" /> instances for equality. </summary>
      <returns>true if the two specified <see cref="T:System.Windows.Media.Media3D.Rect3D" /> instances are exactly equal; false otherwise.</returns>
      <param name="o">The object to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Equals(System.Windows.Media.Media3D.Rect3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Rect3D" /> instances for equality. </summary>
      <returns>true if the two specified <see cref="T:System.Windows.Media.Media3D.Rect3D" /> instances are exactly equal; false otherwise.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Media3D.Rect3D" /> instance to compare with the current instance.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Equals(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Rect3D" /> instances for equality. </summary>
      <returns>true if the two specified <see cref="T:System.Windows.Media.Media3D.Rect3D" /> instances are exactly equal; false otherwise.</returns>
      <param name="rect1">First <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to compare.</param>
      <param name="rect2">Second <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.Windows.Media.Media3D.Rect3D" /></summary>
      <returns>A hash code for this <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Intersect(System.Windows.Media.Media3D.Rect3D)">
      <summary>Finds the intersection of the current <see cref="T:System.Windows.Media.Media3D.Rect3D" /> and the specified <see cref="T:System.Windows.Media.Media3D.Rect3D" />, and stores the result as the current <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</summary>
      <param name="rect">The <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to intersect with the current <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Intersect(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)">
      <summary>Returns the intersection of the specified <see cref="T:System.Windows.Media.Media3D.Rect3D" /> values.</summary>
      <returns>Result of the intersection of <paramref name="rect1" /> and <paramref name="rect2" />.</returns>
      <param name="rect1">First <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
      <param name="rect2">Second <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.IntersectsWith(System.Windows.Media.Media3D.Rect3D)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Windows.Media.Media3D.Rect3D" /> intersects with this <see cref="T:System.Windows.Media.Media3D.Rect3D" />. </summary>
      <returns>true if the specified <see cref="T:System.Windows.Media.Media3D.Rect3D" /> intersects with this <see cref="T:System.Windows.Media.Media3D.Rect3D" />; false otherwise.</returns>
      <param name="rect">Rectangle to evaluate.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Rect3D.IsEmpty">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Media3D.Rect3D" /> is the <see cref="P:System.Windows.Media.Media3D.Rect3D.Empty" /> <see cref="T:System.Windows.Media.Media3D.Rect3D" />. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.Media3D.Rect3D" /> is the empty rectangle; false otherwise.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Rect3D.Location">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Media3D.Point3D" /> that represents the origin of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Point3D" /> that represents the origin of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />, typically the back bottom left corner.  The default value is (0,0,0).</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Offset(System.Double,System.Double,System.Double)">
      <summary>Gets or sets an offset value by which the location of a <see cref="T:System.Windows.Media.Media3D.Rect3D" /> is translated. </summary>
      <param name="offsetX">Offset along the X axis.</param>
      <param name="offsetY">Offset along the Y axis.</param>
      <param name="offsetZ">Offset along the Z axis.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Rect3D,System.Double,System.Double,System.Double)">
      <summary>Gets or sets an offset value by which the location of a <see cref="T:System.Windows.Media.Media3D.Rect3D" /> is translated. </summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.Rect3D" /> value that represents the result of the offset.</returns>
      <param name="rect">Rect3D to be translated.</param>
      <param name="offsetX">Offset along the X axis.</param>
      <param name="offsetY">Offset along the Y axis.</param>
      <param name="offsetZ">Offset along the Z axis.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Gets or sets an offset value by which the location of a <see cref="T:System.Windows.Media.Media3D.Rect3D" /> is translated. </summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.Rect3D" /> value that represents the result of the offset.</returns>
      <param name="rect">
        <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to be translated.</param>
      <param name="offsetVector">
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that specifies the offset translation.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Vector3D)">
      <summary>Sets the offset translation of the <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to the provided value, specified as a <see cref="T:System.Windows.Media.Media3D.Vector3D" />. </summary>
      <param name="offsetVector">
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that specifies the offset translation.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.op_Equality(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Rect3D" /> instances for exact equality. </summary>
      <returns>true if the two <see cref="T:System.Windows.Media.Media3D.Rect3D" /> instances are exactly equal; false otherwise.</returns>
      <param name="rect1">First <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to evaluate.</param>
      <param name="rect2">Second <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to evaluate.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.op_Inequality(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Rect3D" /> instances for exact inequality. </summary>
      <returns>True if the two <see cref="T:System.Windows.Media.Media3D.Rect3D" /> instances are unequal, false otherwise.</returns>
      <param name="rect1">First <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to compare.</param>
      <param name="rect2">Second <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Parse(System.String)">
      <summary>Converts a string representation of a <see cref="T:System.Windows.Media.Media3D.Rect3D" /> into the equivalent <see cref="T:System.Windows.Media.Media3D.Rect3D" /> structure. </summary>
      <returns>A string representation of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</returns>
      <param name="source">String that represents a <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Rect3D.Size">
      <summary>Gets or sets the area of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Size3D" /> that specifies the area of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Rect3D.SizeX">
      <summary>Gets or sets the size of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />  in the X dimension. </summary>
      <returns>Double that specifies the size of the <see cref="T:System.Windows.Media.Media3D.Rect3D" /> in the X dimension.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Rect3D.SizeY">
      <summary>Gets or sets the size of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />  in the Y dimension. </summary>
      <returns>Double that specifies the size of the <see cref="T:System.Windows.Media.Media3D.Rect3D" /> in the Y dimension.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Rect3D.SizeZ">
      <summary>Gets or sets the size of the Rect3D in the Z dimension. </summary>
      <returns>Double that specifies the size of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />  in the Z dimension.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A string containing the value of the current instance in the specified format. </returns>
      <param name="format">The string specifying the format to use. -or- null to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The IFormatProvider to use to format the value. -or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.ToString">
      <summary>Creates a string representation of the Rect3D. </summary>
      <returns>A string representation of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />. </summary>
      <returns>A string representation of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Point3D)">
      <summary>Updates a specified <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to reflect the union of that <see cref="T:System.Windows.Media.Media3D.Rect3D" /> and a specified <see cref="T:System.Windows.Media.Media3D.Point3D" />. </summary>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> whose union with the specified <see cref="T:System.Windows.Media.Media3D.Rect3D" /> is to be evaluated.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D)">
      <summary>Updates a specified <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to reflect the union of that <see cref="T:System.Windows.Media.Media3D.Rect3D" /> and a second specified <see cref="T:System.Windows.Media.Media3D.Rect3D" />. </summary>
      <param name="rect">The <see cref="T:System.Windows.Media.Media3D.Rect3D" /> whose union with the current <see cref="T:System.Windows.Media.Media3D.Rect3D" /> is to be evaluated.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Returns a new <see cref="T:System.Windows.Media.Media3D.Rect3D" /> that represents the union of a <see cref="T:System.Windows.Media.Media3D.Rect3D" />, and a specified <see cref="T:System.Windows.Media.Media3D.Point3D" />.</summary>
      <returns>Result of the union of <paramref name="rect" /> and <paramref name="point" />.</returns>
      <param name="rect">The <see cref="T:System.Windows.Media.Media3D.Rect3D" /> whose union with the current <see cref="T:System.Windows.Media.Media3D.Rect3D" /> is to be evaluated.</param>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> whose union with the specified <see cref="T:System.Windows.Media.Media3D.Rect3D" /> is to be evaluated.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)">
      <summary>Returns a new instance of <see cref="T:System.Windows.Media.Media3D.Rect3D" /> that represents the union of two <see cref="T:System.Windows.Media.Media3D.Rect3D" /> objects. </summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.Rect3D" /> value that represents the result of the union of <paramref name="rect1" /> and <paramref name="rect2" />.</returns>
      <param name="rect1">First <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
      <param name="rect2">Second <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Rect3D.X">
      <summary>Gets or sets the value of the X coordinate of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />. </summary>
      <returns>Value of the X coordinate of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Rect3D.Y">
      <summary>Gets or sets the value of the Y coordinate of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />. </summary>
      <returns>Value of the Y coordinate of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Rect3D.Z">
      <summary>Gets or sets the value of the Z coordinate of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />. </summary>
      <returns>Value of the Z coordinate of the <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Rect3DConverter">
      <summary>Converts instances of other types to and from instances of <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3DConverter.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Media.Media3D.Rect3DConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether this type converter can convert from a given type. </summary>
      <returns>True if this converter can convert from the provided type, false otherwise.</returns>
      <param name="context">ITypeDescriptorContext for this call.</param>
      <param name="sourceType">Type being queried for support.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether this type converter can convert to the given type. </summary>
      <returns>True if this converter can convert to the provided type, false otherwise.</returns>
      <param name="context">ITypeDescriptorContext for this call.</param>
      <param name="destinationType">Type being queried for support.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:System.Windows.Media.Media3D.Rect3D" />. </summary>
      <returns>Rect3D that was constructed.</returns>
      <param name="context">ITypeDescriptorContext for this call.</param>
      <param name="culture">CultureInfo to be respected when converting.</param>
      <param name="value">Object to convert to an instance of Rect3D.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rect3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an instance of <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to the given type.</summary>
      <returns>Object that was constructed.</returns>
      <param name="context">The ITypeDescriptorContext for this call.</param>
      <param name="culture">The CultureInfo which is respected when converting.</param>
      <param name="value">The object to convert to an instance of <paramref name="destinationType" />.</param>
      <param name="destinationType">The type to which the Rect3D instance will be converted.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.RotateTransform3D">
      <summary> Specifies a rotation transformation. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.RotateTransform3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.RotateTransform3D" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.RotateTransform3D.#ctor(System.Windows.Media.Media3D.Rotation3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.RotateTransform3D" /> class with the specified rotation. </summary>
      <param name="rotation">Rotation3D that specifies the rotation.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.RotateTransform3D.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.RotateTransform3D" /> class uusing the specified rotation and center coordinates.</summary>
      <param name="rotation">Rotation3D that specifies the rotation.</param>
      <param name="centerX">Double that specifies the X value about which to rotate.</param>
      <param name="centerY">Double that specifies the Y value about which to rotate.</param>
      <param name="centerZ">Double that specifies the Z value about which to rotate.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.RotateTransform3D.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.RotateTransform3D" /> class with the specified center and rotation. </summary>
      <param name="rotation">Rotation3D that specifies the rotation.</param>
      <param name="center">Center of the transformation's rotation.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.RotateTransform3D.CenterX">
      <summary>Gets or sets the X coordinate of the <see cref="T:System.Windows.Media.Media3D.Point3D" /> about which to rotate.  </summary>
      <returns>Double that represents the X coordinate of the <see cref="T:System.Windows.Media.Media3D.Point3D" /> about which to rotate.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.RotateTransform3D.CenterXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.RotateTransform3D.CenterX" /> dependency property.</summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.Media3D.RotateTransform3D.CenterX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RotateTransform3D.CenterY">
      <summary>Gets or sets the Y coordinate of the <see cref="T:System.Windows.Media.Media3D.Point3D" /> about which to rotate.  </summary>
      <returns>Double that represents the Y coordinate of the <see cref="T:System.Windows.Media.Media3D.Point3D" /> about which to rotate.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.RotateTransform3D.CenterYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.RotateTransform3D.CenterY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.RotateTransform3D.CenterY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RotateTransform3D.CenterZ">
      <summary>Gets or sets the Z coordinate of the <see cref="T:System.Windows.Media.Media3D.Point3D" /> about which to rotate.</summary>
      <returns>Double that represents the Z coordinate of the <see cref="T:System.Windows.Media.Media3D.Point3D" /> about which to rotate.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.RotateTransform3D.CenterZProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.RotateTransform3D.CenterZ" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.RotateTransform3D.CenterZ" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.RotateTransform3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.RotateTransform3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.RotateTransform3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.RotateTransform3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RotateTransform3D.Rotation">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> that specifies the rotation.  </summary>
      <returns>Rotation3D that specifies an angle of rotation about an axis.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.RotateTransform3D.RotationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.RotateTransform3D.Rotation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.RotateTransform3D.Rotation" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.RotateTransform3D.Value">
      <summary>Retrieves a <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that represents the rotation.</summary>
      <returns>Matrix3D that represents the rotation.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Rotation3D">
      <summary>Specifies the 3-D rotation to be used in a transformation.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rotation3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Rotation3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rotation3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Rotation3D.Identity">
      <summary>Singleton identity <see cref="T:System.Windows.Media.Media3D.Rotation3D" />. </summary>
      <returns>The identity <see cref="T:System.Windows.Media.Media3D.Rotation3D" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rotation3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rotation3D.ToString">
      <summary>Returns a String that represents the current Object. </summary>
      <returns>String that represents the current Object.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Rotation3D.ToString(System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="provider"></param>
    </member>
    <member name="T:System.Windows.Media.Media3D.ScaleTransform3D">
      <summary>Scales an object in the three-dimensional x-y-z plane, starting from a defined center point. Scale factors are defined in x-, y-, and z- directions from this center point. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.ScaleTransform3D" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.#ctor(System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.ScaleTransform3D" /> class using the specified scale factors.</summary>
      <param name="scaleX">Factor by which to scale the X value.</param>
      <param name="scaleY">Factor by which to scale the Y value.</param>
      <param name="scaleZ">Factor by which to scale the Z value.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.ScaleTransform3D" /> class using the specified center coordinates and scale factors.</summary>
      <param name="scaleX">Factor by which to scale the X value.</param>
      <param name="scaleY">Factor by which to scale the Y value.</param>
      <param name="scaleZ">Factor by which to scale the Z value.</param>
      <param name="centerX">X coordinate of the center point from which to scale.</param>
      <param name="centerY">Y coordinate of the center point from which to scale.</param>
      <param name="centerZ">Z coordinate of the center point from which to scale.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.#ctor(System.Windows.Media.Media3D.Vector3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.ScaleTransform3D" /> class using the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" />. </summary>
      <param name="scale">Vector3D along which the transformation scales.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.ScaleTransform3D" /> class using the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> and <see cref="T:System.Windows.Media.Media3D.Point3D" />. </summary>
      <param name="scale">Vector3D along which the transformation scales.</param>
      <param name="center">Center around which the transformation scales.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.ScaleTransform3D.CenterX">
      <summary>Gets or sets the x-coordinate of the transform's center point.  </summary>
      <returns>The x-coordinate of the transform's center point. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ScaleTransform3D.CenterXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.CenterX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.CenterX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ScaleTransform3D.CenterY">
      <summary>Gets or sets the z-coordinate of the transform's center point.  </summary>
      <returns>The y-coordinate of the transform's center point. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ScaleTransform3D.CenterYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.CenterY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.CenterY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ScaleTransform3D.CenterZ">
      <summary>Gets or sets the z-coordinate of the transform's center point.  </summary>
      <returns>The z-coordinate of the transform's center point. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ScaleTransform3D.CenterZProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.CenterZ" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.CenterZ" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.ScaleTransform3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.ScaleTransform3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ScaleTransform3D.ScaleX">
      <summary>Gets or sets the scale factor in the x-direction.  </summary>
      <returns>Scale factor in the x-direction. The default value is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ScaleTransform3D.ScaleXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.ScaleX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.ScaleX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ScaleTransform3D.ScaleY">
      <summary>Gets or sets the scale factor in the y-direction.  </summary>
      <returns>Scale factor in the y-direction. The default value is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ScaleTransform3D.ScaleYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.ScaleY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.ScaleY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ScaleTransform3D.ScaleZ">
      <summary>Gets or sets the scale factor in the z-direction.  </summary>
      <returns>Scale factor in the z-direction. The default value is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.ScaleTransform3D.ScaleZProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.ScaleZ" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.ScaleTransform3D.ScaleZ" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.ScaleTransform3D.Value">
      <summary>Gets a <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> representation of this transformation. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> representation of this transformation.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Size3D">
      <summary>Data structure that describes the size of a three-dimensional object. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.#ctor(System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure. </summary>
      <param name="x">The new <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure's <see cref="P:System.Windows.Media.Media3D.Size3D.X" /> value.</param>
      <param name="y">The new <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure's <see cref="P:System.Windows.Media.Media3D.Size3D.Y" /> value.</param>
      <param name="z">The new <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure's <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> value.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Size3D.Empty">
      <summary>Gets a value that represents an empty <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure. </summary>
      <returns>An empty instance of a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.Equals(System.Object)">
      <summary> Determines whether the specified object is a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure and whether the <see cref="P:System.Windows.Media.Media3D.Size3D.X" />, <see cref="P:System.Windows.Media.Media3D.Size3D.Y" /> and <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> properties of the specified <see cref="T:System.Object" /> are equal to the <see cref="P:System.Windows.Media.Media3D.Size3D.X" />, <see cref="P:System.Windows.Media.Media3D.Size3D.Y" /> and <see cref="P:System.Windows.Media.Media3D.Size3D.Z" />  properties of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</summary>
      <returns>true if instances are equal; otherwise, false.true if <paramref name="o" /> is a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure and is identical with this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.Object" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.Equals(System.Windows.Media.Media3D.Size3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures for equality.</summary>
      <returns>true if instances are equal; otherwise, false.</returns>
      <param name="value">The instance of Size3D to compare to this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.Equals(System.Windows.Media.Media3D.Size3D,System.Windows.Media.Media3D.Size3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures for equality.   Two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures are equal if the values of their <see cref="P:System.Windows.Media.Media3D.Size3D.X" />, <see cref="P:System.Windows.Media.Media3D.Size3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> properties are the same.</summary>
      <returns>true if instances are equal; otherwise, false.true if the <see cref="P:System.Windows.Media.Media3D.Size3D.X" />, <see cref="P:System.Windows.Media.Media3D.Size3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> components of <paramref name="size1" /> and <paramref name="size2" /> are equal; otherwise, false.</returns>
      <param name="size1">The first <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
      <param name="size2">The second <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.GetHashCode">
      <summary>Returns a hash code for this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure. </summary>
      <returns>A hash code for this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Size3D.IsEmpty">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure is empty. </summary>
      <returns>true if the <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure is empty; otherwise, false.  The default is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.op_Equality(System.Windows.Media.Media3D.Size3D,System.Windows.Media.Media3D.Size3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures for equality.   Two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures are equal if the values of their <see cref="P:System.Windows.Media.Media3D.Size3D.X" />, <see cref="P:System.Windows.Media.Media3D.Size3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> properties are the same.</summary>
      <returns>true if the <see cref="P:System.Windows.Media.Media3D.Size3D.X" />, <see cref="P:System.Windows.Media.Media3D.Size3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> components of <paramref name="size1" /> and <paramref name="size2" /> are equal; otherwise, false.</returns>
      <param name="size1">The first <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
      <param name="size2">The second <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.op_Explicit(System.Windows.Media.Media3D.Size3D)~System.Windows.Media.Media3D.Point3D">
      <summary>Converts this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure into a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The result of converting <paramref name="size" />.</returns>
      <param name="size">The size to convert.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.op_Explicit(System.Windows.Media.Media3D.Size3D)~System.Windows.Media.Media3D.Vector3D">
      <summary>Converts this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure into a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The result of converting <paramref name="size" />.</returns>
      <param name="size">The size to convert.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.op_Inequality(System.Windows.Media.Media3D.Size3D,System.Windows.Media.Media3D.Size3D)">
      <summary> Compares two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures for inequality.  Two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures are not equal if the values of their <see cref="P:System.Windows.Media.Media3D.Size3D.X" />, <see cref="P:System.Windows.Media.Media3D.Size3D.Y" /> and <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> properties are different.</summary>
      <returns>true if the <see cref="P:System.Windows.Media.Media3D.Size3D.X" />, <see cref="P:System.Windows.Media.Media3D.Size3D.Y" /> and <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> coordinates of <paramref name="size1" /> and <paramref name="size2" /> are different; otherwise, false.</returns>
      <param name="size1">The first <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
      <param name="size2">The second <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.Parse(System.String)">
      <summary>Converts a <see cref="T:System.String" /> representation of a three-dimensional size structure into the equivalent <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure. </summary>
      <returns>The equivalent <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</returns>
      <param name="source">The <see cref="T:System.String" /> representation of the three-dimensional size structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A string containing the value of the current instance in the specified format. </returns>
      <param name="format">The string specifying the format to use. -or- null to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The IFormatProvider to use to format the value. -or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Media3D.Size3D.X" />, <see cref="P:System.Windows.Media.Media3D.Size3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> values of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3D.ToString(System.IFormatProvider)">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Media3D.Size3D.X" />, <see cref="P:System.Windows.Media.Media3D.Size3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> values of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Size3D.X">
      <summary>Gets or sets the <see cref="P:System.Windows.Media.Media3D.Size3D.X" /> value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure. </summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Size3D.X" /> value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.  The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Size3D.Y">
      <summary> Gets or sets the <see cref="P:System.Windows.Media.Media3D.Size3D.Y" /> value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure. </summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Size3D.Y" /> value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.  The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Size3D.Z">
      <summary> Gets or sets the <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure. </summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Size3D.Z" /> value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.  The default value is 0.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Size3DConverter">
      <summary> Converts instances of other types to and from a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3DConverter.#ctor">
      <summary> Initializes a new instance of <see cref="T:System.Windows.Media.Media3D.Size3DConverter" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether a class can be converted from a given type to an instance of a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.  </summary>
      <returns>Indicates whether the type can be converted to a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.ValueMeaningfalseThe converter cannot convert from the provided type.trueThe converter can convert the provided type to a <see cref="T:System.Windows.Media.Media3D.Size3D" />.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether an instance of a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure can be converted to a different type. </summary>
      <returns>Indicates whether this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure can be converted to <paramref name="destinationType" />.ValueMeaningfalseThe converter cannot convert this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to the specified type.trueThe converter can convert this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to the specified type.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="destinationType">The desired type that this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary> Attempts to convert a specified object to a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure. </summary>
      <returns>The <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure created from the converted <paramref name="value" />.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="culture">Describes the <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="value">The object being converted.</param>
      <exception cref="T:System.NotSupportedException">Occurs if the specified object is null or is a type that cannot be converted to to a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Size3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary> Attempts to convert a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to a specified type. </summary>
      <returns>The object created from converting this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="culture">The CultureInfo which is respected when converting.</param>
      <param name="value">The <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to convert.</param>
      <param name="destinationType">The type this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure is converted to.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.SpecularMaterial">
      <summary> Allows a 2-D brush, like a <see cref="T:System.Windows.Media.SolidColorBrush" /> or <see cref="T:System.Windows.Media.TileBrush" />, to be applied to a specularly-lit 3-D model.  </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.SpecularMaterial.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.SpecularMaterial.#ctor(System.Windows.Media.Brush,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" /> class with the specified brush and specular exponent.</summary>
      <param name="brush">The brush applied by the new <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" />.</param>
      <param name="specularPower">The specular exponent.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.SpecularMaterial.Brush">
      <summary> Gets or sets the 2-D brush to apply to a specularly-lit 3-D model.  </summary>
      <returns>The brush to apply.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.SpecularMaterial.BrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.SpecularMaterial.Brush" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.SpecularMaterial.Brush" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.SpecularMaterial.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.SpecularMaterial.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.SpecularMaterial.Color">
      <summary>Gets or sets a value that filters the color properties of the material applied to the model.  </summary>
      <returns>The color with which to filter the material.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.SpecularMaterial.ColorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.SpecularMaterial.Color" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.SpecularMaterial.SpecularPower">
      <summary>Gets or sets a value that specifies the degree to which a material applied to a 3-D model reflects the lighting model as shine.  </summary>
      <returns>Relative contribution, for a material applied as a 2-D brush to a 3-D model, of the specular component of the lighting model.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.SpecularMaterial.SpecularPowerProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.SpecularMaterial.SpecularPower" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.SpecularMaterial.SpecularPower" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.SpotLight">
      <summary>Light object that projects its effect in a cone-shaped area along a specified direction.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.SpotLight.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.SpotLight" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.SpotLight.#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.SpotLight" /> class using the specified color, position, direction, and cone angles. </summary>
      <param name="diffuseColor">Diffuse color of the new <see cref="T:System.Windows.Media.Media3D.SpotLight" />.</param>
      <param name="position">Position of the new <see cref="T:System.Windows.Media.Media3D.SpotLight" />.</param>
      <param name="direction">Direction of the new <see cref="T:System.Windows.Media.Media3D.SpotLight" />.</param>
      <param name="outerConeAngle">Angle that defines a cone outside which the light does not illuminate objects in the scene.</param>
      <param name="innerConeAngle">Angle that defines a cone within which the light illuminates objects in the scene.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.SpotLight.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.SpotLight" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.SpotLight.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.SpotLight" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.SpotLight.Direction">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that specifies the direction in which the <see cref="T:System.Windows.Media.Media3D.SpotLight" /> projects its light.  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> that specifies the direction of the Spotlight's projection. The default value is 0,0,-1.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.SpotLight.DirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.SpotLight.Direction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.SpotLight.Direction" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.SpotLight.InnerConeAngle">
      <summary> Gets or sets an angle that specifies the proportion of a <see cref="T:System.Windows.Media.Media3D.SpotLight" />'s cone-shaped projection in which the light fully illuminates objects in the scene.  </summary>
      <returns>The angle in degrees that specifies the proportion of a <see cref="T:System.Windows.Media.Media3D.SpotLight" />'s cone-shaped projection in which the light fully illuminates objects in the scene. The default value is 180.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.SpotLight.InnerConeAngleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.SpotLight.InnerConeAngle" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.SpotLight.InnerConeAngle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.SpotLight.OuterConeAngle">
      <summary> Gets or sets an angle that specifies the proportion of a <see cref="T:System.Windows.Media.Media3D.SpotLight" />'s cone-shaped projection outside which the light does not illuminate objects in the scene.  </summary>
      <returns>The angle in degrees that specifies the proportion of a <see cref="T:System.Windows.Media.Media3D.SpotLight" />'s cone-shaped projection outside which the light does not illuminate objects in the scene. The default value is 90.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.SpotLight.OuterConeAngleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.SpotLight.OuterConeAngle" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.SpotLight.OuterConeAngle" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Transform3D">
      <summary>Provides a parent class for all three-dimensional transformations, including translation, rotation, and scale transformations. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Transform3D" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Transform3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3D.Identity">
      <summary>Gets the identity transformation. </summary>
      <returns>Identity transformation.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3D.Inverse">
      <summary>Gets the inverse transformation of this object, if possible.</summary>
      <returns>An inverse of this instance, if possible; otherwise, null.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3D.IsAffine">
      <summary>Gets a value that specifies whether the matrix is affine. </summary>
      <returns>true if the matrix is affine; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3D.Transform(System.Windows.Media.Media3D.Point3D)">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point3D" />. </summary>
      <returns>Transformed Point3D.</returns>
      <param name="point">Point3D to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3D.Transform(System.Windows.Media.Media3D.Point3D[])">
      <summary> Transforms the specified array of <see cref="T:System.Windows.Media.Media3D.Point3D" /> objects. </summary>
      <param name="points">Array of Point3D objects to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3D.Transform(System.Windows.Media.Media3D.Point4D)">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point4D" />. </summary>
      <returns>Transformed Point4D.</returns>
      <param name="point">Point4D to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3D.Transform(System.Windows.Media.Media3D.Point4D[])">
      <summary> Transforms the specified array of <see cref="T:System.Windows.Media.Media3D.Point4D" /> objects. </summary>
      <param name="points">Array of Point4D objects to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3D.Transform(System.Windows.Media.Media3D.Vector3D)">
      <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" />. </summary>
      <returns>Transformed Vector3D.</returns>
      <param name="vector">Vector3D to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3D.Transform(System.Windows.Media.Media3D.Vector3D[])">
      <summary> Transforms the specified array of <see cref="T:System.Windows.Media.Media3D.Vector3D" /> objects. </summary>
      <param name="vectors">Array of Vector3D objects to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3D.TransformBounds(System.Windows.Media.Media3D.Rect3D)">
      <summary>Transforms the specified 3-D bounding box and returns an axis-aligned 3-D bounding box that is exactly large enough to contain it.</summary>
      <returns>The smallest axis-aligned 3-D bounding box possible that contains the transformed <paramref name="rect" />.</returns>
      <param name="rect">The 3-D bounding box to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3D.TryTransform(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D@)">
      <summary>Attempts to transform the specified 3-D point and returns a value that indicates whether the transformation was successful.</summary>
      <returns>true if <paramref name="inPoint" /> was transformed; otherwise, false.</returns>
      <param name="inPoint">The 3-D point to transform.</param>
      <param name="result">The result of transforming <paramref name="inPoint" />.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3D.Value">
      <summary>Gets the <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that represents the value of the current transformation. </summary>
      <returns>Matrix3D that represents the value of the current transformation.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Transform3DCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.Media.Media3D.Transform3D" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.Transform3D})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" /> class using the specified collection.</summary>
      <param name="collection">Collection with which to instantiate the Transform3DCollection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" /> class with the specified capacity.</summary>
      <param name="capacity">Integer that specifies the capacity of the Transform3DCollection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Add(System.Windows.Media.Media3D.Transform3D)">
      <summary>Adds a <see cref="T:System.Windows.Media.Media3D.Transform3D" /> to the end of the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</summary>
      <param name="value">Item to add to the end of this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Clear">
      <summary>Removes all the items from this <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Contains(System.Windows.Media.Media3D.Transform3D)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Media.Media3D.Transform3D" /> is in this <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</summary>
      <returns>true if <paramref name="value" />, the specified Transform3D, is in this Transform3DCollection; otherwise, false.</returns>
      <param name="value">The item to locate in this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.CopyTo(System.Windows.Media.Media3D.Transform3D[],System.Int32)">
      <summary>Copies the items of this <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />, starting with the specified index value, into an array of <see cref="T:System.Windows.Media.Media3D.Transform3D" /> objects.</summary>
      <param name="array">The array that is the destination of the items copied from this Transform3DCollection.</param>
      <param name="index">The index at which copying begins.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Media.Media3D.Transform3D" /> objects contained in the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />. </summary>
      <returns>The number of Transform3D objects contained in the Transform3DCollection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An enumerator that can iterate the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.IndexOf(System.Windows.Media.Media3D.Transform3D)">
      <summary>Gets the index position of the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Transform3D" />.</summary>
      <returns>The index position of the specified Transform3D.</returns>
      <param name="value">The Transform3D to search for.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Insert(System.Int32,System.Windows.Media.Media3D.Transform3D)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Media3D.Transform3D" /> into this <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" /> at the specified index position.</summary>
      <param name="index">The index position at which to insert the specified Transform3D.</param>
      <param name="value">The Transform3D to insert.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Transform3D" /> at the specified zero-based index.</summary>
      <returns>The item at the specified index.</returns>
      <param name="index">The zero-based index of the Transform3D object to get or set.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Remove(System.Windows.Media.Media3D.Transform3D)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Transform3D" /> from the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</summary>
      <returns>true if <paramref name="value" /> was removed fro the collection; otherwise, false. </returns>
      <param name="value">The Transform3D to remove from this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Media3D.Transform3D" /> at the specified index position from the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</summary>
      <param name="index">The index position of the Transform3D to remove.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Transform3DCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.Media3D.Transform3D" /> items in a <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.Transform3DGroup">
      <summary>Represents a transformation that is a composite of the <see cref="T:System.Windows.Media.Media3D.Transform3D" /> children in its <see cref="T:System.Windows.Media.Media3D.Transform3DCollection" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Transform3DGroup" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DGroup.Children">
      <summary> Gets or sets a collection of <see cref="T:System.Windows.Media.Media3D.Transform3D" /> objects.  </summary>
      <returns>Collection of <see cref="T:System.Windows.Media.Media3D.Transform3D" /> objects. The default value is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Transform3DGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Transform3DGroup.Children" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.Transform3DGroup.Children" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DGroup.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Transform3DGroup" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Transform3DGroup.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Transform3DGroup" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DGroup.IsAffine">
      <summary>Gets a value that indicates whether the transformation is affine. </summary>
      <returns>True if the transformation is affine; false otherwise.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Transform3DGroup.Value">
      <summary>Gets a <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that indicates the current transform value. </summary>
      <returns>Matrix3D that indicates the current transform value.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.TranslateTransform3D">
      <summary>Translates an object in the three-dimensional x-y-z plane. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.TranslateTransform3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.TranslateTransform3D" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.TranslateTransform3D.#ctor(System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.TranslateTransform3D" /> class using the specified offset.</summary>
      <param name="offsetX">Double that specifies the X value of the Vector3D that specifies the translation offset.</param>
      <param name="offsetY">Double that specifies the Y value of the Vector3D that specifies the translation offset.</param>
      <param name="offsetZ">Double that specifies the Z value of the Vector3D that specifies the translation offset.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.TranslateTransform3D.#ctor(System.Windows.Media.Media3D.Vector3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.TranslateTransform3D" /> class, using the specified offset <see cref="T:System.Windows.Media.Media3D.Vector3D" />. </summary>
      <param name="offset">
        <see cref="T:System.Windows.Media.Media3D.Vector3D" /> by which to offset the model.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.TranslateTransform3D.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.TranslateTransform3D" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.TranslateTransform3D.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.TranslateTransform3D" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.TranslateTransform3D.OffsetX">
      <summary>Gets or sets the X-axis value of the translation's offset.  </summary>
      <returns>Double that represents the X-axis value of the translation's offset.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.TranslateTransform3D.OffsetXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.TranslateTransform3D.OffsetX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.TranslateTransform3D.OffsetX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.TranslateTransform3D.OffsetY">
      <summary>Gets or sets the Y-axis value of the translation's offset.  </summary>
      <returns>Double that represents the Y-axis value of the translation's offset.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.TranslateTransform3D.OffsetYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.TranslateTransform3D.OffsetY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.TranslateTransform3D.OffsetY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.TranslateTransform3D.OffsetZ">
      <summary>Gets or sets the Z-axis value of the translation's offset.  </summary>
      <returns>Double that represents the Z-axis value of the translation's offset.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.TranslateTransform3D.OffsetZProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.TranslateTransform3D.OffsetZ" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.TranslateTransform3D.OffsetZ" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.TranslateTransform3D.Value">
      <summary>Gets a <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that represents the value of the translation.</summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that represents the value of the translation.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Vector3D">
      <summary>Represents a displacement in 3-D space. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.#ctor(System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <param name="x">The new <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure's <see cref="P:System.Windows.Media.Media3D.Vector3D.X" /> value.</param>
      <param name="y">The new <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure's <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" /> value.</param>
      <param name="z">The new <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure's <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Add(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Translates the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure by the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure and returns the result as a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The result of translating <paramref name="point" /> by <paramref name="vector" />.</returns>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure used to translate the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</param>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to be translated.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Add(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Adds two <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structures and returns the result as a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The sum of <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <param name="vector1">The first <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to add.</param>
      <param name="vector2">The second <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to add.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.AngleBetween(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Retrieves the angle required to rotate the first specified  <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure into the second specified  <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The angle in degrees needed to rotate <paramref name="vector1" /> into <paramref name="vector2" />.</returns>
      <param name="vector1">The first <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to evaluate.</param>
      <param name="vector2">The second <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to evaluate.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.CrossProduct(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Calculates the cross product of two <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structures. </summary>
      <returns>The cross product of <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <param name="vector1">The first <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to evaluate.</param>
      <param name="vector2">The second <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to evaluate.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Divide(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Divides the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure by the specified scalar and returns the result as a <see cref="T:System.Windows.Media.Media3D.Vector3D" />. </summary>
      <returns>The result of dividing <paramref name="vector" /> by <paramref name="scalar" />.</returns>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to be divided.</param>
      <param name="scalar">The scalar to divide <paramref name="vector" /> by.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.DotProduct(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Calculates the dot product of two <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structures. </summary>
      <returns>The dot product of <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <param name="vector1">The first <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to evaluate.  </param>
      <param name="vector2">The second <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to evaluate.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Equals(System.Object)">
      <summary>Determines whether the specified object is a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure and whether the <see cref="P:System.Windows.Media.Media3D.Vector3D.X" />, <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> properties of the specified <see cref="T:System.Object" /> are equal to the <see cref="P:System.Windows.Media.Media3D.Vector3D.X" />, <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> properties of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.</summary>
      <returns>true if <paramref name="o" /> is a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure and is identical with this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure; false otherwise.</returns>
      <param name="o">The object to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Equals(System.Windows.Media.Media3D.Vector3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structures for equality. </summary>
      <returns>true if instances are equal; otherwise, false.</returns>
      <param name="value">The instance of Vector to compare against this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Equals(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structures for equality.</summary>
      <returns>true if the <see cref="P:System.Windows.Media.Media3D.Vector3D.X" />, <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> components of <paramref name="vector1" /> and <paramref name="vector2" /> are equal; false otherwise.</returns>
      <param name="vector1">First <see cref="T:System.Windows.Media.Media3D.Vector3D" />  to compare.</param>
      <param name="vector2">Second <see cref="T:System.Windows.Media.Media3D.Vector3D" />  to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.GetHashCode">
      <summary>Gets a hash code for this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>A hash code for this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3D.Length">
      <summary>Gets the length of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The length of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3D.LengthSquared">
      <summary>Gets the square of the length of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The square of the length of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Multiply(System.Double,System.Windows.Media.Media3D.Vector3D)">
      <summary>Multiplies the specified scalar by the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure and returns the result as a <see cref="T:System.Windows.Media.Media3D.Vector3D" />. </summary>
      <returns>The result of multiplying <paramref name="scalar" /> and <paramref name="vector" />.</returns>
      <param name="scalar">The scalar to multiply.</param>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to multiply.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Multiply(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Multiplies the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure by the specified scalar and returns the result as a <see cref="T:System.Windows.Media.Media3D.Vector3D" />. </summary>
      <returns>The result of multiplying <paramref name="vector" /> and <paramref name="scalar" />.</returns>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to multiply.</param>
      <param name="scalar">The scalar to multiply.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Multiply(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>Transforms the coordinate space of the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure using the specified <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>Returns the result of transforming <paramref name="vector" /> by <paramref name="matrix3D" />.</returns>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to transform.</param>
      <param name="matrix">The transformation to apply to the <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Negate">
      <summary>Negates a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Normalize">
      <summary>Normalizes the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Addition(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Translates the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure by the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure and returns the result as a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The result of translating <paramref name="point" /> by <paramref name="vector" />.</returns>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure used to translate the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure.</param>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to be translated.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Addition(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Adds two <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structures and returns the result as a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The sum of <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <param name="vector1">The first <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to add.</param>
      <param name="vector2">The second <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to add.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Division(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary> Divides the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure by the specified scalar and returns the result as a <see cref="T:System.Windows.Media.Media3D.Vector3D" />. </summary>
      <returns>The result of dividing <paramref name="vector" /> by <paramref name="scalar" />.</returns>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to be divided.</param>
      <param name="scalar">The scalar to divide <paramref name="vector" /> by.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Equality(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structures for equality.   </summary>
      <returns>true if the <see cref="P:System.Windows.Media.Media3D.Vector3D.X" />, <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> components of <paramref name="vector1" /> and <paramref name="vector2" /> are equal; false otherwise.</returns>
      <param name="vector1">The first <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to compare.</param>
      <param name="vector2">The second <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Explicit(System.Windows.Media.Media3D.Vector3D)~System.Windows.Media.Media3D.Size3D">
      <summary>Converts a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure into a <see cref="T:System.Windows.Media.Media3D.Size3D" />.</summary>
      <returns>The result of converting <paramref name="vector" />.</returns>
      <param name="vector">The vector to convert.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Explicit(System.Windows.Media.Media3D.Vector3D)~System.Windows.Media.Media3D.Point3D">
      <summary>Converts a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure into a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure. </summary>
      <returns>The result of converting <paramref name="vector" />.</returns>
      <param name="vector">The vector to convert.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Inequality(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structures for inequality.</summary>
      <returns>true if the <see cref="P:System.Windows.Media.Media3D.Vector3D.X" />, <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> components of <paramref name="vector3D1" /> and <paramref name="vector3D2" /> are different; false otherwise.</returns>
      <param name="vector1">The first <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to compare.</param>
      <param name="vector2">The second <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Double,System.Windows.Media.Media3D.Vector3D)">
      <summary>Multiplies the specified scalar by the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure and returns the result as a <see cref="T:System.Windows.Media.Media3D.Vector3D" />. </summary>
      <returns>The result of multiplying <paramref name="scalar" /> and <paramref name="vector" />.</returns>
      <param name="scalar">The scalar to multiply.</param>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to multiply.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Multiplies the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure by the specified scalar and returns the result as a <see cref="T:System.Windows.Media.Media3D.Vector3D" />. </summary>
      <returns>The result of multiplying <paramref name="vector" /> and <paramref name="scalar" />.</returns>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to multiply.</param>
      <param name="scalar">The scalar to multiply.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>Transforms the coordinate space of the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure using the specified <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure. </summary>
      <returns>The result of transforming <paramref name="vector" /> by <paramref name="matrix" />.</returns>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to transform.</param>
      <param name="matrix">The transformation to apply to the <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Subtraction(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The result of subtracting <paramref name="point" /> from <paramref name="vector" />.</returns>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to be subtracted from.</param>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to subtract from <paramref name="vector" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_Subtraction(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The result of subtracting <paramref name="vector2" /> from <paramref name="vector1" />.</returns>
      <param name="vector1">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to be subtracted from.</param>
      <param name="vector2">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to subtract from <paramref name="vector1" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.op_UnaryNegation(System.Windows.Media.Media3D.Vector3D)">
      <summary>Negates a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure with <see cref="P:System.Windows.Media.Media3D.Vector3D.X" />, <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> values opposite of the <see cref="P:System.Windows.Media.Media3D.Vector3D.X" />, <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> values of <paramref name="vector" />.</returns>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to negate.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Parse(System.String)">
      <summary>Converts a <see cref="T:System.String" /> representation of a 3-D vector into the equivalent <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The equivalent <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.</returns>
      <param name="source">The <see cref="T:System.String" /> representation of the 3-D vector.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Subtract(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The result of subtracting <paramref name="point" /> from <paramref name="vector" />.</returns>
      <param name="vector">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to be subtracted from.</param>
      <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point3D" /> structure to subtract from <paramref name="vector" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.Subtract(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The result of subtracting <paramref name="vector2" /> from <paramref name="vector1" />.</returns>
      <param name="vector1">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to be subtracted from.</param>
      <param name="vector2">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to subtract from <paramref name="vector1" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member is part of the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly by your code. For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>String representation of this object.</returns>
      <param name="format">The string specifying the format to use. -or- null to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The IFormatProvider to use to format the value. -or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>A string containing the <see cref="P:System.Windows.Media.Media3D.Vector3D.X" />, <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> values of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3D.ToString(System.IFormatProvider)">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Media3D.Vector3D.X" />, <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" />, and <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> values of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3D.X">
      <summary>Gets or sets the <see cref="P:System.Windows.Media.Media3D.Vector3D.X" /> component of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Vector3D.X" /> component of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3D.Y">
      <summary>Gets or sets the <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" /> component of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Vector3D.Y" /> component of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3D.Z">
      <summary>Gets or sets the <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> component of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Vector3D.Z" /> component of this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. The default value is 0.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Vector3DCollection">
      <summary> Collection of <see cref="T:System.Windows.Media.Media3D.Vector3D" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.Vector3D})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> class using the specified collection.</summary>
      <param name="collection">Collection with which to instantiate the Vector3DCollection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> class with the specified capacity.</summary>
      <param name="capacity">Integer that specifies the capacity of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Add(System.Windows.Media.Media3D.Vector3D)">
      <summary>Adds a Vector3D to the collection. </summary>
      <param name="value">Vector3D to be added to the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Clear">
      <summary>Removes all elements from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Contains(System.Windows.Media.Media3D.Vector3D)">
      <summary>Determines whether the collection contains the specified element. </summary>
      <returns>true if <paramref name="value" /> is found in the collection; otherwise, false.</returns>
      <param name="value">Vector3D to be found in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.CopyTo(System.Windows.Media.Media3D.Vector3D[],System.Int32)">
      <summary>Copies the elements of the collection into the specified array, starting at the specified index position. </summary>
      <param name="array">Array into which to copy.</param>
      <param name="index">Position into which to copy.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3DCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Media.Media3D.Vector3D" /> objects contained in the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />. </summary>
      <returns>The number of <see cref="T:System.Windows.Media.Media3D.Vector3D" /> objects contained in the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An enumerator that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.IndexOf(System.Windows.Media.Media3D.Vector3D)">
      <summary>Gets the index position of the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" />.</summary>
      <returns>The index position of the specified Vector3D.</returns>
      <param name="value">The item to search for.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Insert(System.Int32,System.Windows.Media.Media3D.Vector3D)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> object into this <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> at the specified index position.</summary>
      <param name="index">The index position at which to insert <paramref name="value" />, the specified Vector3D.</param>
      <param name="value">The item to insert.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3DCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Vector3D" /> at the specified zero-based index.</summary>
      <returns>The item at the specified index.</returns>
      <param name="index">The zero-based index of the Vector3D object to get or set.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Parse(System.String)">
      <summary>Converts a String representation of a collection of <see cref="T:System.Windows.Media.Media3D.Vector3D" /> objects into an equivalent <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</summary>
      <returns>Returns the equivalent Vector3DCollection.</returns>
      <param name="source">The string representation of the collection of Vector3D objects.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Remove(System.Windows.Media.Media3D.Vector3D)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> from the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</summary>
      <returns>true if <paramref name="value" /> was removed from the collection; otherwise, false. </returns>
      <param name="value">The Vector3D to remove from this collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Media3D.Vector3D" /> at the specified index position from the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</summary>
      <param name="index">The index position of the <see cref="T:System.Windows.Media.Media3D.Vector3D" /> to remove.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A <see cref="T:System.String" /> containing the value of the current instance in the specified format.</returns>
      <param name="format">The <see cref="T:System.String" /> specifying the format to use.-or- null (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The <see cref="T:System.IFormatProvider" /> to use to format the value.-or- null (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.ToString">
      <summary>Creates a string representation of this <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />. </summary>
      <returns>String representation of the object.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of this <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />. </summary>
      <returns>String representation of the object.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Vector3DCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Vector" /> items in a <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3DCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Vector3DCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.Vector3DCollectionConverter">
      <summary>Converts instances of other types to and from instances of <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollectionConverter.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Media.Media3D.Vector3DCollectionConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Returns a value that indicates whether this type converter can convert from a specified type. </summary>
      <returns>True if this converter can convert from the specified type; false otherwise.</returns>
      <param name="context">ITypeDescriptorContext for this call.</param>
      <param name="sourceType">Type being queried for support.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether this type converter can convert to the given type. </summary>
      <returns>True if this converter can convert to the provided type; false if not.</returns>
      <param name="context">The ITypeDescriptorContext for this call.</param>
      <param name="destinationType">The Type being queried for support.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert to a <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> from the given object. </summary>
      <returns>Vector3DCollection that was constructed.</returns>
      <param name="context">The ITypeDescriptorContext for this call.</param>
      <param name="culture">The CultureInfo which is respected when converting.</param>
      <param name="value">The object to convert to an instance of Vector3DCollection.</param>
      <exception cref="T:System.NotSupportedException">A NotSupportedException is thrown if the example object is null or is not a valid type which can be converted to a Vector3DCollection.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an instance of <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> to the given type. </summary>
      <returns>The object which was constructoed.</returns>
      <param name="context">The ITypeDescriptorContext for this call.</param>
      <param name="culture">The CultureInfo which is respected when converting.</param>
      <param name="value">The object to convert to an instance of <paramref name="destinationType" />.</param>
      <param name="destinationType">The type to which the Matrix3D instance will be converted.</param>
      <exception cref="T:System.NotSupportedException">Throws NotSupportedException if the example object is null or is not a Vector3DCollection, or if the destinationType isn't one of the valid destination types.</exception>
    </member>
    <member name="T:System.Windows.Media.Media3D.Vector3DConverter">
      <summary> Converts instances of other types to and from a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DConverter.#ctor">
      <summary> Initializes a new instance of <see cref="T:System.Windows.Media.Media3D.Vector3DConverter" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether a class can be converted from a given type to an instance of a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.  </summary>
      <returns>Indicates whether the type can be converted to a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.ValueMeaningfalseThe converter cannot convert from the provided type.trueThe converter can convert the provided type to a <see cref="T:System.Windows.Media.Media3D.Vector3D" />.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether an instance of a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure can be converted to a different type. </summary>
      <returns>Indicates whether this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure can be converted to <paramref name="destinationType" />.ValueMeaningfalseThe converter cannot convert this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to the specified type.trueThe converter can convert this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to the specified type.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="destinationType">The desired type that this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary> Attempts to convert a specified object to a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure. </summary>
      <returns>The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure created from the converted <paramref name="value" />.</returns>
      <param name="context">The ITypeDescriptorContext for this call.</param>
      <param name="culture">Describes the <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="value">The object being converted.</param>
      <exception cref="T:System.NotSupportedException">Occurs if the specified object is null or is a type that cannot be converted to to a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Vector3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary> Attempts to convert a <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to a specified type. </summary>
      <returns>The object created from converting this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="culture">The CultureInfo which is respected when converting.</param>
      <param name="value">The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure to convert.</param>
      <param name="destinationType">The type this <see cref="T:System.Windows.Media.Media3D.Vector3D" /> structure is converted to.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Viewport2DVisual3D">
      <summary>Renders the 2-D children within the specified 3-D viewport bounds.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Viewport2DVisual3D" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheMode">
      <summary>Gets or sets a cached representation of the <see cref="T:System.Windows.Media.Media3D.Viewport2DVisual3D" />. </summary>
      <returns>A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.Media.Media3D.Viewport2DVisual3D" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheMode" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport2DVisual3D.Geometry">
      <summary>Gets or sets the 3-D geometry for this <see cref="T:System.Windows.Media.Media3D.Viewport2DVisual3D" />.</summary>
      <returns>The 3-D geometry for this <see cref="T:System.Windows.Media.Media3D.Viewport2DVisual3D" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Viewport2DVisual3D.GeometryProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.Geometry" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.GetIsVisualHostMaterial(System.Windows.Media.Media3D.Material)">
      <summary>Gets the value of the <see cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.IsVisualHostMaterial" /> attached property for a specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The <see cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.IsVisualHostMaterial" /> property value for the element.</returns>
      <param name="element">The element from which the property value is read.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport2DVisual3D.IsVisualHostMaterial">
      <summary>Gets or sets a value that specifies whether a material should be interactive.</summary>
      <returns>true if the material should be interactive; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Viewport2DVisual3D.IsVisualHostMaterialProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.IsVisualHostMaterial" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport2DVisual3D.Material">
      <summary>Gets or sets the material that describes the appearance of the 3-D object.</summary>
      <returns>The material for the 3-D object.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Viewport2DVisual3D.MaterialProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.Material" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.SetIsVisualHostMaterial(System.Windows.Media.Media3D.Material,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.IsVisualHostMaterial" /> attached property to a specified element.</summary>
      <param name="element">The element to which the attached property is written.</param>
      <param name="value">The required <see cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.IsVisualHostMaterial" /> value.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport2DVisual3D.Visual">
      <summary>Gets or sets the 2-D visual to be placed on the 3-D object.</summary>
      <returns>The visual to be placed on the 3-D object.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Viewport2DVisual3D.VisualProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.Visual" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.Viewport3DVisual">
      <summary>Renders the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> children within the specified 2D viewport bounds.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Viewport3DVisual.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.BitmapEffect">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> applied to the Viewport3DVisual.</summary>
      <returns>BitmapEffect applied to the Viewport3DVisual.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.BitmapEffectInput">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> applied to the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />. </summary>
      <returns>BitmapEffectInput applied to the Viewport3DVisual.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.Camera">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Camera" /> used by the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />.  </summary>
      <returns>Camera used by the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Viewport3DVisual.CameraProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Viewport3DVisual.Camera" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.Viewport3DVisual.Camera" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.Children">
      <summary>Gets a collection of <see cref="T:System.Windows.Media.Media3D.Visual3D" /> objects contained by <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />. </summary>
      <returns>Collection of the objects contained by the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.Clip">
      <summary>Gets or sets the clipping region of the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />.</summary>
      <returns>
        <see cref="T:System.Windows.Media.Geometry" /> that defines the clipping area.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.ContentBounds">
      <summary>Gets the bounding box for the contents of the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />.</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> that defines the bounding box.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.DescendantBounds">
      <summary>Gets the union of all of the content bounding boxes for all of the descendants of the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />, but not including the contents of the Viewport3DVisual.</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> that defines the union.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Viewport3DVisual.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
      <summary>Initiate a hit test on the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" /> by using the <see cref="T:System.Windows.Media.HitTestFilterCallback" /> and <see cref="T:System.Windows.Media.HitTestResultCallback" /> objects.</summary>
      <param name="filterCallback">Value of type HitTestFilterCallback.</param>
      <param name="resultCallback">Value of type HitTestResultCallback.</param>
      <param name="hitTestParameters">Value of type <see cref="T:System.Windows.Media.HitTestParameters" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Viewport3DVisual.HitTest(System.Windows.Point)">
      <summary>Returns the top-most visual object of a hit test performed at a specified <see cref="T:System.Windows.Point" />.</summary>
      <returns>The hit test result of the visual returned as a <see cref="T:System.Windows.Media.HitTestResult" /> type.</returns>
      <param name="point">Point against which to hit test.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.Offset">
      <summary>Gets or sets the offset value of the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />.</summary>
      <returns>
        <see cref="T:System.Windows.Vector" /> that represents the offset value of the Viewport3DVisual.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.Opacity">
      <summary>Gets or sets the opacity of the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />.</summary>
      <returns>The value of the Opacity property is expressed as a value between 0 and 1, specifying a range from fully transparent to fully opaque. A value of 0 indicates that the Opacity is completely transparent, while a value of 1 indicates that the Opacity is completely opaque. A value 0.5 would indicate the Opacity is 50% opaque, a value of 0.725 would indicate the Opacity is 72.5% opaque, and so on. Values less than 0 are treated as 0, while values greater than 1 are treated as 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.OpacityMask">
      <summary>Gets or sets the opacity mask value of the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />.</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> that represents the opacity mask value of the Viewport3DVisual.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.Parent">
      <summary>Gets the parent <see cref="T:System.Windows.Media.Visual" /> for the Viewport3DVisual.</summary>
      <returns>Visual parent of the Viewport3DVisual.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.Transform">
      <summary>Gets or sets the transform value of the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" />.</summary>
      <returns>
        <see cref="T:System.Windows.Media.Transform" /> applied to the Viewport3DVisual.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Viewport3DVisual.Viewport">
      <summary>Gets or sets the rectangle in which the <see cref="T:System.Windows.Media.Media3D.Viewport3DVisual" /> will be rendered.  </summary>
      <returns>Rectangle in which the contents of the Viewport3D will be rendered.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Viewport3DVisual.ViewportProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Viewport3DVisual.Viewport" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Media3D.Viewport3DVisual.Viewport" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Visual3D">
      <summary>Provides services and properties common to visual 3-D objects, including hit-testing, coordinate transformation, and bounding box calculations.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild(System.Windows.Media.Media3D.Visual3D)">
      <summary>Defines the parent-child relationship between two 3-D visuals.</summary>
      <param name="child">The child 3-D visual object to add to parent 3-D visual.</param>
      <exception cref="T:System.InvalidOperationException">The children collection cannot be modified when a visual children iteration is in progress.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
      <summary>Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</summary>
      <param name="dp">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</param>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property. The effect of the new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> on any current animations is determined by the value of the <paramref name="handoffBehavior" /> parameter.</summary>
      <param name="dp">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</param>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</param>
      <param name="handoffBehavior">Determines how the new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> will transition from or affect any current animations on the property.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
      <summary>Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" /> object, based on the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</summary>
      <param name="dp">The object to animate.</param>
      <param name="animation">The timeline with the necessary functionality to animate the property.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" />.object, based on both the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> and <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
      <param name="dp">The object to animate.</param>
      <param name="animation">The timeline with the necessary functionality to tailor the new animation.</param>
      <param name="handoffBehavior">The object specifying the manner in which to interact with all relevant animation sequences.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.FindCommonVisualAncestor(System.Windows.DependencyObject)">
      <summary>Returns the common ancestor of the visual object and another specified visual object.</summary>
      <returns>The common ancestor of the current visual object and <paramref name="otherVisual" />, or null if no common ancestor is found.</returns>
      <param name="otherVisual">The visual object with which to find a common ancestor.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.GetAnimationBaseValue(System.Windows.DependencyProperty)">
      <summary>Retrieves the base value of the specified <see cref="T:System.Windows.DependencyProperty" /> object.</summary>
      <returns>The object representing the base value of <paramref name="Dp" />.</returns>
      <param name="dp">The object for which the base value is being requested.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild(System.Int32)">
      <summary>Returns the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> in the parent <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</summary>
      <returns>The child in the collection at the specified <paramref name="index" /> value.</returns>
      <param name="index">The index of the 3-D visual object in the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> value is invalid.</exception>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3D.HasAnimatedProperties">
      <summary>Gets a value indicating whether this <see cref="T:System.Windows.Media.Media3D.Visual3D" /> has any animated properties.</summary>
      <returns>true if this element has animations; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.IsAncestorOf(System.Windows.DependencyObject)">
      <summary>Determines whether the visual object is an ancestor of the descendant visual object.</summary>
      <returns>True if the visual object is an ancestor of <paramref name="descendant" />; otherwise, false.</returns>
      <param name="descendant">Visual that is a possible descendant.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.IsDescendantOf(System.Windows.DependencyObject)">
      <summary>Determines whether the visual object is a descendant of the ancestor visual object. </summary>
      <returns>true if the visual object is a descendant of <paramref name="ancestor" />; otherwise, false.</returns>
      <param name="ancestor">Visual that is a possible ancestor.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Called when the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" /> of the visual object is modified.</summary>
      <param name="visualAdded">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> that was added to the collection.</param>
      <param name="visualRemoved">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> that was removed from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Called when the parent of the 3-D visual object is changed.</summary>
      <param name="oldParent">A value of type <see cref="T:System.Windows.DependencyObject" /> that represents the previous parent of the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object. If the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object did not have a previous parent, the value of the parameter is null.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.RemoveVisual3DChild(System.Windows.Media.Media3D.Visual3D)">
      <summary>Removes the parent-child relationship between two 3-D visuals.</summary>
      <param name="child">The child 3-D visual object to remove from the parent visual.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3D.Transform">
      <summary>Gets or sets the transformation that is applied to the 3-D object.</summary>
      <returns>The transformation to apply to the 3-D object. The default is the <see cref="P:System.Windows.Media.Media3D.Transform3D.Identity" /> transformation.</returns>
    </member>
    <member name="F:System.Windows.Media.Media3D.Visual3D.TransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Media3D.Visual3D.Transform" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
      <summary>Returns a transform that can be used to transform coordinates from this <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> ancestor of the object.</summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object or null, if the transform cannot be created.</returns>
      <param name="ancestor">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> to which the coordinates are transformed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ancestor" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The specified <paramref name="ancestor" /> object is not an ancestor of this object.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> objects are not related.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Visual)">
      <summary>Returns a transform that can be used to transform coordinates from this <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object to the specified <see cref="T:System.Windows.Media.Visual" /> ancestor of the object.</summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DTo2D" /> object or null, if the transform cannot be created.</returns>
      <param name="ancestor">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ancestor" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The specified <paramref name="ancestor" /> object is not an ancestor of this object.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3D.TransformToDescendant(System.Windows.Media.Media3D.Visual3D)">
      <summary>Returns a transform that can be used to transform coordinates from this <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> descent object.</summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object or null, if the transform from <paramref name="descendant" /> to this object is non-invertible.</returns>
      <param name="descendant">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> to which the coordinates are transformed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="descendant" /> is null.</exception>
      <exception cref="T:System.ArgumentException">This object is not an ancestor of the specified <paramref name="descendant" /> object.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> objects are not related.</exception>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount">
      <summary>Gets the number of child elements for the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object.</summary>
      <returns>The number of child elements.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3D.Visual3DModel">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Model3D" /> object to render.</summary>
      <returns>The <see cref="T:System.Windows.Media.Media3D.Model3D" /> object to render.</returns>
    </member>
    <member name="T:System.Windows.Media.Media3D.Visual3DCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.Media.Media3D.Visual3D" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Add(System.Windows.Media.Media3D.Visual3D)">
      <summary>Adds a <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object to the end of this <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</summary>
      <param name="value">The Visual3D to add to this Visual3DCollection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Clear">
      <summary>Removes all the items from this <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Contains(System.Windows.Media.Media3D.Visual3D)">
      <summary>Determines whether a specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> is in this <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</summary>
      <returns>True if <paramref name="value" />, the specified Visual3D, is in this Visual3DCollection; otherwise, false.</returns>
      <param name="value">Visual3D to locate in this Visual3Dcollection.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.CopyTo(System.Windows.Media.Media3D.Visual3D[],System.Int32)">
      <summary>Copies the items of this Visual3DCollection, starting with the specified index, into an array of <see cref="T:System.Windows.Media.Media3D.Visual3D" /> objects.</summary>
      <param name="array">Array that is the destination of the items copied from this Visual3DCollection.</param>
      <param name="index">The index at which to begin copying.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3DCollection.Count">
      <summary>Gets the number of items contained in a <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</summary>
      <returns>The number of items contained in the Visual3Dcollection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.GetEnumerator">
      <summary>Gets an enumerator for the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.IndexOf(System.Windows.Media.Media3D.Visual3D)">
      <summary>Gets the index of the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object. </summary>
      <returns>The index of the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" />, or -1 if <paramref name="value" /> is null or has a different visual parent.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> for which to search.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Insert(System.Int32,System.Windows.Media.Media3D.Visual3D)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object into this <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" /> at the specified index.</summary>
      <param name="index">The index at which to insert the Visual3D.</param>
      <param name="value">Visual3D to insert.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3DCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> at the specified zero-based index.</summary>
      <returns>The Visual3D at the specified index.</returns>
      <param name="index">The zero-based index of the Visual3D to get or set.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Remove(System.Windows.Media.Media3D.Visual3D)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object from this <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</summary>
      <returns>true if <paramref name="value" /> was removed from the collection; otherwise, false. </returns>
      <param name="value">Visual3D to remove.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object at the specified index from this <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</summary>
      <param name="index">Index of the Visual3D to remove.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Visual3DCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.Media3D.Visual3D" /> items in a <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3DCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="P:System.Windows.Media.Media3D.Visual3DCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Media3D.Converters.Matrix3DValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Matrix3DValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Converters.Matrix3DValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Matrix3DValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false. </returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Matrix3DValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Matrix3DValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Matrix3DValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Converters.Point3DCollectionValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point3DCollectionValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Converters.Point3DCollectionValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point3DCollectionValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false. </returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point3DCollectionValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point3DCollectionValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Media3D.Point3DCollection" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point3DCollectionValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Point3DCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Converters.Point3DValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Media3D.Point3D" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point3DValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Converters.Point3DValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point3DValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Media3D.Point3D" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false. </returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point3DValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Media3D.Point3D" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Point3D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Media3D.Point3D" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point3DValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Media3D.Point3D" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Media3D.Point3D" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Media3D.Point3D" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point3DValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Media3D.Point3D" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Media3D.Point3D" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Point3D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Converters.Point4DValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Media3D.Point4D" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point4DValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Converters.Point4DValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point4DValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Media3D.Point4D" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false. </returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point4DValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Media3D.Point4D" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Point4D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Media3D.Point4D" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point4DValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Media3D.Point4D" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Media3D.Point4D" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Media3D.Point4D" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Point4DValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Media3D.Point4D" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Media3D.Point4D" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Point4D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Converters.QuaternionValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.QuaternionValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Converters.QuaternionValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.QuaternionValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Media3D.Quaternion" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false. </returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.QuaternionValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Media3D.Quaternion" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.QuaternionValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Media3D.Quaternion" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.QuaternionValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Media3D.Quaternion" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Converters.Rect3DValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Rect3DValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Converters.Rect3DValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Rect3DValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Media3D.Rect3D" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false.</returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Rect3DValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Media3D.Rect3D" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Rect3DValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Media3D.Rect3D" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Media3D.Rect3D" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Rect3DValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Media3D.Rect3D" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Rect3D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Converters.Size3DValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Media3D.Size3D" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Size3DValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Converters.Size3DValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Size3DValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Media3D.Size3D" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false.</returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Size3DValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Media3D.Size3D" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Size3D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Media3D.Size3D" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Size3DValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Media3D.Size3D" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Media3D.Size3D" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Media3D.Size3D" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Size3DValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Media3D.Size3D" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Media3D.Size3D" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Size3D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Converters.Vector3DCollectionValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Vector3DCollectionValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Converters.Vector3DCollectionValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Vector3DCollectionValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false. </returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Vector3DCollectionValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Vector3DCollectionValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Vector3DCollectionValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Vector3DCollection" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Media3D.Converters.Vector3DValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.Media3D.Vector3D" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Vector3DValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Converters.Vector3DValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Vector3DValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Media3D.Vector3D" /> is possible.</summary>
      <returns>true if the value can be converted; otherwise, false. </returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Vector3DValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Media3D.Vector3D" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Vector3D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Media3D.Vector3D" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Vector3DValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Media3D.Vector3D" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Media3D.Vector3D" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Media3D.Vector3D" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Converters.Vector3DValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Media3D.Vector3D" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.Media3D.Vector3D" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Media3D.Vector3D" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.CharacterBufferRange">
      <summary>Describes a string of characters.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.Char*,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure from a unmanaged character string.</summary>
      <param name="unsafeCharacterString">An unmanaged pointer reference to a character string.</param>
      <param name="characterLength">The number of characters in <paramref name="unsafecharacterString" /> to use.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure from a character array.</summary>
      <param name="characterArray">The character array.</param>
      <param name="offsetToFirstChar">The character buffer offset to the first character.</param>
      <param name="characterLength">The number of characters in <paramref name="characterArray" /> to use.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure from a character string.</summary>
      <param name="characterString">The character string.</param>
      <param name="offsetToFirstChar">The character buffer offset to the first character.</param>
      <param name="characterLength">The number of characters in <paramref name="characterString" /> to use.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference">
      <summary>Gets a reference to the character buffer of a string.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> value representing the character buffer of a string.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.CharacterBufferRange.Empty">
      <summary>Gets an empty character string.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object whose <see cref="P:System.Windows.Media.TextFormatting.CharacterBufferRange.Length" /> is equal to 0.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</summary>
      <returns>true if <paramref name="o" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object; otherwise, false. If <paramref name="o" /> is not a <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object, false is returned.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.Equals(System.Windows.Media.TextFormatting.CharacterBufferRange)">
      <summary>Determines whether the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</summary>
      <returns>true if <paramref name="value" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object; otherwise, false. If <paramref name="value" /> is not a <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object, false is returned.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />. It is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.CharacterBufferRange.Length">
      <summary>Gets the number of characters in the text source character store.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the total number of characters.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.op_Equality(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Windows.Media.TextFormatting.CharacterBufferRange)">
      <summary>Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> strings for equality.</summary>
      <returns>true to show the specified <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> objects are equal; otherwise, false.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.op_Inequality(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Windows.Media.TextFormatting.CharacterBufferRange)">
      <summary>Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> strings for inequality.</summary>
      <returns>false to show <paramref name="left" /> is equal to <paramref name="right" />; otherwise, true.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</param>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.CharacterBufferReference">
      <summary>Describes a character buffer for a text run.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.#ctor(System.Char*,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> structure using a specified unsafe character string.</summary>
      <param name="unsafeCharacterString">Pointer to character string.</param>
      <param name="characterLength">The length of <paramref name="unsafeCharacterString" />.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.#ctor(System.Char[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> structure using a specified character array.</summary>
      <param name="characterArray">The <see cref="T:System.Char" /> array.</param>
      <param name="offsetToFirstChar">The offset to the first character to use in <paramref name="characterArray" />.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> structure using a specified character string.</summary>
      <param name="characterString">The <see cref="T:System.String" /> containing the text characters.</param>
      <param name="offsetToFirstChar">The offset to the first character to use in <paramref name="characterString" />.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</summary>
      <returns>true if <paramref name="obj" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object; otherwise, false. If <paramref name="obj" /> is not a <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object, false is returned.</returns>
      <param name="obj">The object to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.Equals(System.Windows.Media.TextFormatting.CharacterBufferReference)">
      <summary>Determines whether the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</summary>
      <returns>true if <paramref name="value" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />. It is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.op_Equality(System.Windows.Media.TextFormatting.CharacterBufferReference,System.Windows.Media.TextFormatting.CharacterBufferReference)">
      <summary>Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> strings for equality.</summary>
      <returns>true to show the specified <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objects are equal; otherwise, false.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.op_Inequality(System.Windows.Media.TextFormatting.CharacterBufferReference,System.Windows.Media.TextFormatting.CharacterBufferReference)">
      <summary>Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> strings for inequality.</summary>
      <returns>false to show <paramref name="left" /> is equal to <paramref name="right" />; otherwise, true.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.CharacterHit">
      <summary>Represents information about a character hit within a glyph run.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterHit.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> structure.</summary>
      <param name="firstCharacterIndex">Index of the first character that got hit.</param>
      <param name="trailingLength">In the case of a leading edge, this value is 0. In the case of a trailing edge, this value is the number of code points until the next valid caret position.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterHit.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</summary>
      <returns>true if <paramref name="obj" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object; otherwise, false. If <paramref name="obj" /> is not a <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object, false is returned.</returns>
      <param name="obj">The object to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterHit.Equals(System.Windows.Media.TextFormatting.CharacterHit)">
      <summary>Determines whether the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</summary>
      <returns>true if <paramref name="obj" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex">
      <summary>Gets the index of the first character that got hit.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the index.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterHit.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />. It is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterHit.op_Equality(System.Windows.Media.TextFormatting.CharacterHit,System.Windows.Media.TextFormatting.CharacterHit)">
      <summary>Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> strings for equality.</summary>
      <returns>true when the values of <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" /> and <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" /> properties are equal for both objects; otherwise, false.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CharacterHit.op_Inequality(System.Windows.Media.TextFormatting.CharacterHit,System.Windows.Media.TextFormatting.CharacterHit)">
      <summary>Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> strings for inequality.</summary>
      <returns>false when the values of <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" /> and <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" /> properties are equal for both objects; otherwise, true.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength">
      <summary>Gets the trailing length value for the character that got hit.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the trailing length.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange">
      <summary>Represents a range of characters that are associated with a culture.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange.#ctor(System.Globalization.CultureInfo,System.Windows.Media.TextFormatting.CharacterBufferRange)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /> class.</summary>
      <param name="culture">A value of <see cref="T:System.Globalization.CultureInfo" /> that represents the culture of the containing range of characters.</param>
      <param name="characterBufferRange">A value of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> that represents the range of characters.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange.CharacterBufferRange">
      <summary>Gets the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> of the <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" />.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange.CultureInfo">
      <summary>Gets the <see cref="T:System.Globalization.CultureInfo" /> of the <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" />.</summary>
      <returns>A value of type <see cref="T:System.Globalization.CultureInfo" />.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.IndexedGlyphRun">
      <summary>Allows text engine clients to map a text source character index to the corresponding <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.IndexedGlyphRun.GlyphRun">
      <summary>Gets the <see cref="T:System.Windows.Media.GlyphRun" /> that corresponds to the <see cref="T:System.Windows.Media.TextFormatting.IndexedGlyphRun" /> object.</summary>
      <returns>A <see cref="T:System.Windows.Media.GlyphRun" /> object.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.IndexedGlyphRun.TextSourceCharacterIndex">
      <summary>Gets the text source character index that corresponds to the beginning of the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the text source character index.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.IndexedGlyphRun.TextSourceLength">
      <summary>Gets the text source character length that corresponds to the <see cref="T:System.Windows.Media.TextFormatting.IndexedGlyphRun" /> object.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the length of the text source character.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.InvertAxes">
      <summary>Indicate the inversion of horizontal and vertical axes of the drawing surface.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormatting.InvertAxes.None">
      <summary>Drawing surface is not inverted in either axis.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormatting.InvertAxes.Horizontal">
      <summary>Drawing surface is inverted in the horizontal axis.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormatting.InvertAxes.Vertical">
      <summary>Drawing surface is inverted in the vertical axis. </summary>
    </member>
    <member name="F:System.Windows.Media.TextFormatting.InvertAxes.Both">
      <summary>Drawing surface is inverted in both axes.</summary>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth">
      <summary>Represents the smallest and largest possible paragraph width that can fully contain the specified text content.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</summary>
      <returns>true if <paramref name="obj" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object; otherwise, false. If <paramref name="obj" /> is not a <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object, false is returned.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Windows.Media.TextFormatting.MinMaxParagraphWidth)">
      <summary>Determines whether the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</summary>
      <returns>true if <paramref name="value" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />. It is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth">
      <summary>Gets the largest paragraph width possible that can fully contain the specified text content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the largest paragraph width possible.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth">
      <summary>Gets the smallest paragraph width possible that can fully contain the specified text content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the smallest paragraph width possible.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)">
      <summary>Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> strings for equality.</summary>
      <returns>true to show the specified <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objects are equal; otherwise, false.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)">
      <summary>Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objects for inequality.</summary>
      <returns>false to show <paramref name="left" /> is equal to <paramref name="right" />; otherwise, true.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</param>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextBounds">
      <summary>Represents the bounding rectangle of a range of characters. </summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextBounds.FlowDirection">
      <summary>Gets the text flow direction for the <see cref="T:System.Windows.Media.TextFormatting.TextBounds" /> object.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.FlowDirection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextBounds.Rectangle">
      <summary>Gets the bounding rectangle for the <see cref="T:System.Windows.Media.TextFormatting.TextBounds" /> object.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> value that represents the bounding rectangle of a range of characters.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextBounds.TextRunBounds">
      <summary>Gets a list of <see cref="T:System.Windows.Media.TextFormatting.TextRunBounds" /> objects.</summary>
      <returns>A list of <see cref="T:System.Windows.Media.TextFormatting.TextRunBounds" /> objects.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextCharacters">
      <summary>Represents a collection of character glyphs from distinct physical typefaces.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextCharacters.#ctor(System.Char*,System.Int32,System.Windows.Media.TextFormatting.TextRunProperties)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextCharacters" /> class using a specified unsafe character string.</summary>
      <param name="unsafeCharacterString">Pointer to character string.</param>
      <param name="length">The length of the characters to use in <paramref name="unsafeCharacterString" />.</param>
      <param name="textRunProperties">The <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value to use for the characters in <paramref name="unsafeCharacterString" />.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextCharacters.#ctor(System.Char[],System.Int32,System.Int32,System.Windows.Media.TextFormatting.TextRunProperties)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextCharacters" /> class using a specified character array.</summary>
      <param name="characterArray">The <see cref="T:System.Char" /> array.</param>
      <param name="offsetToFirstChar">The offset to the first character to use in <paramref name="characterArray" />.</param>
      <param name="length">The length of the characters to use in <paramref name="characterArray" />.</param>
      <param name="textRunProperties">The <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value to use for the characters in <paramref name="characterArray" />.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextCharacters.#ctor(System.String,System.Int32,System.Int32,System.Windows.Media.TextFormatting.TextRunProperties)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextCharacters" /> class using a specified character substring.</summary>
      <param name="characterString">The <see cref="T:System.String" /> containing the text characters.</param>
      <param name="offsetToFirstChar">The offset to the first character to use in <paramref name="characterString" />.</param>
      <param name="length">The length of the characters to use in <paramref name="characterString" />.</param>
      <param name="textRunProperties">The <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value to use for the characters in <paramref name="characterString" />.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextCharacters.#ctor(System.String,System.Windows.Media.TextFormatting.TextRunProperties)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextCharacters" /> class using a specified character string.</summary>
      <param name="characterString">The <see cref="T:System.String" /> containing the text characters.</param>
      <param name="textRunProperties">The <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value to use for the characters in <paramref name="characterString" />.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextCharacters.CharacterBufferReference">
      <summary>Gets the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> for the <see cref="T:System.Windows.Media.TextFormatting.TextCharacters" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> that represents the text characters.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextCharacters.Length">
      <summary>Gets the length of the text characters.</summary>
      <returns>An <see cref="T:System.Int32" /> object that represents the length of the text characters.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextCharacters.Properties">
      <summary>Gets the set of properties shared by every text character.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value that represents the properties shared by every text character.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextCollapsedRange">
      <summary>Represents the range of characters and its width measurement for collapsed text within a line.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextCollapsedRange.Length">
      <summary>Gets the number of characters for the collapsed text.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the number of collapsed text characters.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextCollapsedRange.TextSourceCharacterIndex">
      <summary>Gets the index to the first character in the <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> that represents collapsed text characters.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the index of the first collapsed text character.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextCollapsedRange.Width">
      <summary>The total width of collapsed text characters.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the width of the collapsed text characters.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextCollapsingProperties">
      <summary>Represents the characteristics of collapsed text.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextCollapsingProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextCollapsingProperties" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextCollapsingProperties.Style">
      <summary>Gets the style of the collapsed text.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.Media.TextFormatting.TextCollapsingStyle" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextCollapsingProperties.Symbol">
      <summary>Gets the text run that is used as the collapsed text symbol.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> value that represents the collapsed text symbol.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextCollapsingProperties.Width">
      <summary>Gets the width of the range of collapsed text.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the width of the range of collapsed text.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextCollapsingStyle">
      <summary>Specifies the style of collapsed text.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormatting.TextCollapsingStyle.TrailingCharacter">
      <summary>Collapse trailing characters.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormatting.TextCollapsingStyle.TrailingWord">
      <summary>Collapse trailing words.</summary>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextEmbeddedObject">
      <summary>Defines a type of text content in which measuring, hit testing and drawing of the entire content is done in whole.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextEmbeddedObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextEmbeddedObject" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakAfter">
      <summary>Gets the line breaking condition after the text object.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.LineBreakCondition" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakBefore">
      <summary>Gets the line breaking condition before the text object.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.LineBreakCondition" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextEmbeddedObject.ComputeBoundingBox(System.Boolean,System.Boolean)">
      <summary>Gets the computed bounding box of the text object.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> value that represents the bounding box size of the text object.</returns>
      <param name="rightToLeft">A <see cref="T:System.Boolean" /> value that determines if the text object is drawn from right to left.</param>
      <param name="sideways">A <see cref="T:System.Boolean" /> value that determines if the text object is drawn with its side parallel to the baseline.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextEmbeddedObject.Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Boolean,System.Boolean)">
      <summary>Draws the text object.</summary>
      <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to use for rendering the text object.</param>
      <param name="origin">The <see cref="T:System.Windows.Point" /> value that represents the origin where the text object is drawn.</param>
      <param name="rightToLeft">A <see cref="T:System.Boolean" /> value that determines if the text object is drawn from right to left.</param>
      <param name="sideways">A <see cref="T:System.Boolean" /> value that determines if the text object is drawn with its side parallel to the baseline.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextEmbeddedObject.Format(System.Double)">
      <summary>Get text object measurement metrics that will fit within the specified remaining width of the paragraph.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics" /> value that represents the text object metrics.</returns>
      <param name="remainingParagraphWidth">A <see cref="T:System.Double" /> that represents the remaining paragraph width.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEmbeddedObject.HasFixedSize">
      <summary>Determines whether the text object has a fixed size regardless of where it is placed within a line.</summary>
      <returns>true if the text object has a fixed size; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics">
      <summary>Specifies properties for a <see cref="T:System.Windows.Media.TextFormatting.TextEmbeddedObject" />.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics.#ctor(System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics" /> class using specified width, height, and baseline values.</summary>
      <param name="width">A <see cref="T:System.Double" /> that represents the <see cref="T:System.Windows.Media.TextFormatting.TextEmbeddedObject" /> width.</param>
      <param name="height">A <see cref="T:System.Double" /> that represents the <see cref="T:System.Windows.Media.TextFormatting.TextEmbeddedObject" /> height.</param>
      <param name="baseline">A <see cref="T:System.Double" /> that represents the <see cref="T:System.Windows.Media.TextFormatting.TextEmbeddedObject" /> baseline relative to <paramref name="height" />.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics.Baseline">
      <summary>Gets the baseline of the text object.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the text object baseline relative to its height.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics.Height">
      <summary>Gets the height of the text object.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the text object height.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics.Width">
      <summary>Gets the width of the text object.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the text object width.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextEndOfLine">
      <summary>Defines a specialized text run that is used to mark the end of a line.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextEndOfLine.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfLine" /> class using a specified character length.</summary>
      <param name="length">The number of characters in the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfLine" /> buffer.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextEndOfLine.#ctor(System.Int32,System.Windows.Media.TextFormatting.TextRunProperties)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfLine" /> class using a specified character length and <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value.</summary>
      <param name="length">The number of characters in the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfLine" /> buffer.</param>
      <param name="textRunProperties">The <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value to use for the characters in the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfLine" /> buffer.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEndOfLine.CharacterBufferReference">
      <summary>Gets a reference to the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfLine" /> character buffer.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> value.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEndOfLine.Length">
      <summary>Gets the character length of the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfLine" /> character buffer.</summary>
      <returns>An <see cref="T:System.Int32" /> object that represents the length of the character buffer.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEndOfLine.Properties">
      <summary>Gets the set of properties shared by every text character of the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfLine" /> character buffer.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value that represents the properties shared by every text character.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextEndOfParagraph">
      <summary>Defines a specialized text run that is used to mark the end of a paragraph.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextEndOfParagraph.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfParagraph" /> class using a specified character length.</summary>
      <param name="length">The number of characters in the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfParagraph" /> buffer.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextEndOfParagraph.#ctor(System.Int32,System.Windows.Media.TextFormatting.TextRunProperties)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfParagraph" /> class using a specified character length and <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value.</summary>
      <param name="length">The number of characters in the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfParagraph" /> buffer.</param>
      <param name="textRunProperties">The <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value to use for the characters in the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfParagraph" /> buffer.</param>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextEndOfSegment">
      <summary>Defines a specialized text run that is used to mark the end of a segment.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextEndOfSegment.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfSegment" /> class.</summary>
      <param name="length">The number of characters in the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfSegment" /> buffer.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEndOfSegment.CharacterBufferReference">
      <summary>Gets a reference to the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfSegment" /> character buffer.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> value.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEndOfSegment.Length">
      <summary>Gets the character length of the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfSegment" /> character buffer.</summary>
      <returns>An <see cref="T:System.Int32" /> object that represents the length of the character buffer.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextEndOfSegment.Properties">
      <summary>Gets the set of properties shared by every text character of the <see cref="T:System.Windows.Media.TextFormatting.TextEndOfSegment" /> character buffer.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value that represents the properties shared by every text character.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextFormatter">
      <summary>Provides services for formatting text and breaking text lines using a custom text layout client.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextFormatter.Create">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> class. This is a static method.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextFormatter.Create(System.Windows.Media.TextFormattingMode)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> class with the specified formatting mode. This is a static method.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</returns>
      <param name="textFormattingMode">The <see cref="T:System.Windows.Media.TextFormattingMode" /> that specifies the text layout for the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.  </param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextFormatter.Dispose">
      <summary>Releases all managed and unmanaged resources used by the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> object.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak)">
      <summary>Creates a <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> that is used for formatting and displaying document content.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> value that represents a line of text that can be displayed.</returns>
      <param name="textSource">A <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> value that represents the text source for the line.</param>
      <param name="firstCharIndex">An <see cref="T:System.Int32" /> value that specifies the character index of the starting character in the line.</param>
      <param name="paragraphWidth">A <see cref="T:System.Double" /> value that specifies the width of the paragraph that the line fills.</param>
      <param name="paragraphProperties">A <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> value that represents paragraph properties, such as flow direction, alignment, or indentation.</param>
      <param name="previousLineBreak">A <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> value that specifies the text formatter state, in terms of where the previous line in the paragraph was broken by the text formatting process.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak,System.Windows.Media.TextFormatting.TextRunCache)">
      <summary>Creates a <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> that is used for formatting and displaying document content.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> value that represents a line of text that can be displayed.</returns>
      <param name="textSource">A <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> object that represents the text source for the line.</param>
      <param name="firstCharIndex">An <see cref="T:System.Int32" /> value that specifies the character index of the starting character in the line.</param>
      <param name="paragraphWidth">A <see cref="T:System.Double" /> value that specifies the width of the paragraph that the line fills.</param>
      <param name="paragraphProperties">A <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> object that represents paragraph properties, such as flow direction, alignment, or indentation.</param>
      <param name="previousLineBreak">A <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> object that specifies the text formatter state, in terms of where the previous line in the paragraph was broken by the text formatting process.</param>
      <param name="textRunCache">A <see cref="T:System.Windows.Media.TextFormatting.TextRunCache" /> object that represents the caching mechanism for the layout of text.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties)">
      <summary>Returns a value that represents the smallest and largest possible paragraph width that can fully contain the specified text content.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" /> value that represents the smallest and largest possible paragraph width that can fully contain the specified text content.</returns>
      <param name="textSource">A <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> object that represents the text source for the line.</param>
      <param name="firstCharIndex">An <see cref="T:System.Int32" /> value that specifies the character index of the starting character in the line.</param>
      <param name="paragraphProperties">A <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> object that represents paragraph properties, such as flow direction, alignment, or indentation.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextRunCache)">
      <summary>Returns a value that represents the smallest and largest possible paragraph width that can fully contain the specified text content.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" /> value that represents the smallest and largest possible paragraph width that can fully contain the specified text content.</returns>
      <param name="textSource">A <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> object that represents the text source for the line.</param>
      <param name="firstCharIndex">An <see cref="T:System.Int32" /> value that specifies the character index of the starting character in the line.</param>
      <param name="paragraphProperties">A <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> object that represents paragraph properties, such as flow direction, alignment, or indentation.</param>
      <param name="textRunCache">A <see cref="T:System.Windows.Media.TextFormatting.TextRunCache" /> object that represents the caching mechanism for the layout of text.</param>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextHidden">
      <summary>Defines a specialized text run that is used to mark a range of hidden characters.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextHidden.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextHidden" /> class using a specified character length.</summary>
      <param name="length">The number of characters in the <see cref="T:System.Windows.Media.TextFormatting.TextHidden" /> buffer.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextHidden.CharacterBufferReference">
      <summary>Gets a reference to the <see cref="T:System.Windows.Media.TextFormatting.TextHidden" /> character buffer.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> value.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextHidden.Length">
      <summary>Gets the character length of the <see cref="T:System.Windows.Media.TextFormatting.TextHidden" /> character buffer.</summary>
      <returns>An <see cref="T:System.Int32" /> object that represents the length of the character buffer.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextHidden.Properties">
      <summary>Gets the set of properties shared by every text character of the <see cref="T:System.Windows.Media.TextFormatting.TextHidden" /> character buffer.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value that represents the properties shared by every text character.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextLine">
      <summary>Provides an abstract class for supporting formatting services to a line of text.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.Baseline">
      <summary>Gets the distance from the top to the baseline of the current <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> object.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the baseline distance.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.Collapse(System.Windows.Media.TextFormatting.TextCollapsingProperties[])">
      <summary>Create a collapsed line based on collapsed text properties.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> value that represents a collapsed line that can be displayed.</returns>
      <param name="collapsingPropertiesList">A list of <see cref="T:System.Windows.Media.TextFormatting.TextCollapsingProperties" /> objects that represent the collapsed text properties.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.DependentLength">
      <summary>Gets the number of characters following the last character of the line that may trigger reformatting of the current line.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the number of characters.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.Dispose">
      <summary>Releases all managed and unmanaged resources used by the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> object.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Windows.Media.TextFormatting.InvertAxes)">
      <summary>Renders the <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> object based upon the specified <see cref="T:System.Windows.Media.DrawingContext" />.</summary>
      <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> object onto which the <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> is rendered.</param>
      <param name="origin">A <see cref="T:System.Windows.Point" /> value that represents the drawing origin.</param>
      <param name="inversion">An enumerated <see cref="T:System.Windows.Media.TextFormatting.InvertAxes" /> value that indicates the inversion of the horizontal and vertical axes of the drawing surface.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.Extent">
      <summary>Gets the distance from the top-most to bottom-most black pixel in a line.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the extent distance.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.GetBackspaceCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)">
      <summary>Gets the previous character hit after backspacing.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> object after backspacing.</returns>
      <param name="characterHit">The current <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.GetCharacterHitFromDistance(System.Double)">
      <summary>Gets the character hit corresponding to the specified distance from the beginning of the line.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> object at the specified <paramref name="distance" /> from the beginning of the line.</returns>
      <param name="distance">A <see cref="T:System.Double" /> value that represents the distance from the beginning of the line.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.GetDistanceFromCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)">
      <summary>Gets the distance from the beginning of the line to the specified character hit.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance from the beginning of the line.</returns>
      <param name="characterHit">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> object whose distance you want to query.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.GetIndexedGlyphRuns">
      <summary>Gets an enumerator for enumerating <see cref="T:System.Windows.Media.TextFormatting.IndexedGlyphRun" /> objects in the <see cref="T:System.Windows.Media.TextFormatting.TextLine" />.</summary>
      <returns>An enumerator that allows you to enumerate each <see cref="T:System.Windows.Media.TextFormatting.IndexedGlyphRun" /> object in the <see cref="T:System.Windows.Media.TextFormatting.TextLine" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)">
      <summary>Gets the next character hit for caret navigation.</summary>
      <returns>The next <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> object based on caret navigation.</returns>
      <param name="characterHit">The current <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)">
      <summary>Gets the previous character hit for caret navigation.</summary>
      <returns>The previous <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> object based on caret navigation.</returns>
      <param name="characterHit">The current <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.GetTextBounds(System.Int32,System.Int32)">
      <summary>Gets an array of bounding rectangles that represent the range of characters within a text line.</summary>
      <returns>A list of <see cref="T:System.Windows.Media.TextFormatting.TextBounds" /> objects representing the bounding rectangle.</returns>
      <param name="firstTextSourceCharacterIndex">An <see cref="T:System.Int32" /> value that represents the index of first character of specified range.</param>
      <param name="textLength">An <see cref="T:System.Int32" /> value that represents the number of characters of the specified range.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.GetTextCollapsedRanges">
      <summary>Gets a collection of collapsed text ranges after a line has been collapsed.</summary>
      <returns>A list of <see cref="T:System.Windows.Media.TextFormatting.TextCollapsedRange" /> objects that represent the collapsed text.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.GetTextLineBreak">
      <summary>Gets the state of the line when broken by line breaking process.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> value that represents the line break.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLine.GetTextRunSpans">
      <summary>Gets a collection of <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> objects in a text span that are contained within a line.</summary>
      <returns>Gets a list of <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> objects contained within a text span.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.HasCollapsed">
      <summary>Gets a value that indicates whether the line is collapsed.</summary>
      <returns>true, if the line is collapsed; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.HasOverflowed">
      <summary>Gets a value that indicates whether content of the line overflows the specified paragraph width.</summary>
      <returns>true, it the line overflows the specified paragraph width; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.Height">
      <summary>Gets the height of a line of text.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the text line height.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.IsTruncated">
      <summary>Determines whether the text line is truncated in the middle of a word.</summary>
      <returns>true if the text line is truncated in the middle of a word; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.Length">
      <summary>Gets the total number of <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> positions of the current line.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the total number of <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> positions of the current line.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.MarkerBaseline">
      <summary>Gets the distance from the edge of the line's highest point to the baseline marker of the line.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the baseline distance of the marker.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.MarkerHeight">
      <summary>Gets the height of a marker for a list item.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the height of the marker.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.NewlineLength">
      <summary>Gets the number of newline characters at the end of a line.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the number of newline characters.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.OverhangAfter">
      <summary>Gets the distance that black pixels extend beyond the bottom alignment edge of a line.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the overhang after distance.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.OverhangLeading">
      <summary>Gets the distance that black pixels extend prior to the left leading alignment edge of the line. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the overhang leading distance.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.OverhangTrailing">
      <summary>Gets the distance that black pixels extend following the right trailing alignment edge of the line.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the overhang trailing distance.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.Start">
      <summary>Gets the distance from the start of a paragraph to the starting point of a line.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the distance from the start of a paragraph to the starting point of a line.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.TextBaseline">
      <summary>Gets the distance from the top to the baseline of the line of text.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the text baseline distance.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.TextHeight">
      <summary>Gets the height of the text and any other content in the line.</summary>
      <returns>A <see cref="T:System.Double" /> value.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.TrailingWhitespaceLength">
      <summary>Gets the number of whitespace code points beyond the last non-blank character in a line.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the number of whitespace code points beyond the last non-blank character in a line.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.Width">
      <summary>Gets the width of a line of text, excluding trailing whitespace characters.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the text line width, excluding trailing whitespace characters.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextLine.WidthIncludingTrailingWhitespace">
      <summary>Gets the width of a line of text, including trailing whitespace characters.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the text line width, including trailing whitespace characters.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextLineBreak">
      <summary>Specifies text properties and state at the point where text is broken by the line breaking process.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLineBreak.Clone">
      <summary>Clone a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> object.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextLineBreak.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextMarkerProperties">
      <summary>Represents an abstract class for defining text markers.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextMarkerProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextMarkerProperties" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextMarkerProperties.Offset">
      <summary>Gets the distance from the start of the line to the end of the text marker symbol.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the offset of the marker symbol from the beginning of the line.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextMarkerProperties.TextSource">
      <summary>Gets the <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> that represents the source of the text runs for the marker symbol.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> that represents the text marker.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextModifier">
      <summary>Represents a specialized text run that can be used to modify properties of text runs within its scope.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextModifier.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextModifier" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextModifier.CharacterBufferReference">
      <summary>Gets the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> for the <see cref="T:System.Windows.Media.TextFormatting.TextModifier" />.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextModifier.FlowDirection">
      <summary>Gets the <see cref="T:System.Windows.FlowDirection" /> for the <see cref="T:System.Windows.Media.TextFormatting.TextModifier" />.</summary>
      <returns>A value of type <see cref="T:System.Windows.FlowDirection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextModifier.HasDirectionalEmbedding">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Media.TextFormatting.TextModifier" /> supports <see cref="T:System.Windows.FlowDirection" /> for the current scope of text.</summary>
      <returns>true if <see cref="T:System.Windows.Media.TextFormatting.TextModifier" /> supports <see cref="T:System.Windows.FlowDirection" /> for the current scope of text; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextModifier.ModifyProperties(System.Windows.Media.TextFormatting.TextRunProperties)">
      <summary>Retrieves the <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> for a text run.</summary>
      <returns>The actual <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> to be used by the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />, subject to further modification by <see cref="T:System.Windows.Media.TextFormatting.TextModifier" /> objects at outer scopes.</returns>
      <param name="properties">The <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> for a text run, or the return value of <see cref="M:System.Windows.Media.TextFormatting.TextModifier.ModifyProperties(System.Windows.Media.TextFormatting.TextRunProperties)" /> for a nested text modifier.</param>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextParagraphProperties">
      <summary>Provides a set of properties, such as flow direction, alignment, or indentation, that can be applied to a paragraph. This is an abstract class.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextParagraphProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.AlwaysCollapsible">
      <summary>Gets a value that indicates whether a formatted line can always be collapsed.</summary>
      <returns>true if the formatted line can always be collapsed; otherwise, false, which indicates that only formatted lines that overflow the paragraph width are collapsed. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.DefaultIncrementalTab">
      <summary>Gets the default incremental tab distance.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the default incremental tab distance.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.DefaultTextRunProperties">
      <summary>Gets the default text run properties, such as typeface or foreground brush.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.FirstLineInParagraph">
      <summary>Gets a value that indicates whether the text run is the first line of the paragraph.</summary>
      <returns>true, if the text run is the first line of the paragraph; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.FlowDirection">
      <summary>Gets a value that specifies whether the primary text advance direction shall be left-to-right, or right-to-left.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.FlowDirection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.Indent">
      <summary>Gets the amount of line indentation.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the amount of line indentation.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.LineHeight">
      <summary>Gets the height of a line of text.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the height of a line of text.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.ParagraphIndent">
      <summary>Gets the amount of the paragraph indentation.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the amount of the paragraph indentation.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.Tabs">
      <summary>Gets a collection of tab definitions.</summary>
      <returns>A list of <see cref="T:System.Windows.Media.TextFormatting.TextTabProperties" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.TextAlignment">
      <summary>Gets a value that describes how an inline content of a block is aligned.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.TextAlignment" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.TextDecorations">
      <summary>Gets the collection of <see cref="T:System.Windows.TextDecoration" /> objects.</summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> value.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.TextMarkerProperties">
      <summary>Gets a value that specifies marker characteristics of the first line in the paragraph.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextMarkerProperties" /> value.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.TextWrapping">
      <summary>Gets a value that controls whether text wraps when it reaches the flow edge of its containing block box.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.TextWrapping" />.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextRun">
      <summary>Represents a sequence of characters that share a single property set.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextRun.#ctor">
      <summary>Creates an instance of a <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> object.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRun.CharacterBufferReference">
      <summary>Gets a reference to the text run character buffer.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> value representing the characters in the text run.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRun.Length">
      <summary>Gets the number of characters in the text run.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the number of characters.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRun.Properties">
      <summary>Gets the set of text properties that are shared by every character in the text run, such as typeface or foreground brush.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value that represents the set of shared text properties.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextRunBounds">
      <summary>Represents the bounding rectangle of a text run.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunBounds.Length">
      <summary>Gets the character length of bounded text run.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the character length.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunBounds.Rectangle">
      <summary>Gets the bounding rectangle for the text run.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> value that represents the bounding rectangle of the text run.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunBounds.TextRun">
      <summary>Gets the <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> object that represents the text run.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> value that represents the text run.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunBounds.TextSourceCharacterIndex">
      <summary>Gets the character index of the first character in the bounded text run.</summary>
      <returns>The index representing the first character of the bounded text run.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextRunCache">
      <summary>Provides caching services to the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> object in order to improve performance.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextRunCache.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextRunCache" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextRunCache.Change(System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the text engine client of a change to the cache when text content or text run properties of <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> are added, removed, or replaced.</summary>
      <param name="textSourceCharacterIndex">Specifies the <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> character index position of the start of the change.</param>
      <param name="addition">Indicates the number of <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> characters to be added.</param>
      <param name="removal">Indicates the number of <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> characters to be removed.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextRunCache.Invalidate">
      <summary>Signals the text engine client to invalidate the entire contents of the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> cache.</summary>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextRunProperties">
      <summary>Provides a set of properties, such as typeface or foreground brush, that can be applied to a <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> object. This is an abstract class.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextRunProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.BackgroundBrush">
      <summary>Gets the brush that is used to paint the background color of the text run.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> value that represents the background color.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.BaselineAlignment">
      <summary>Gets the baseline style for a text that is positioned on the vertical axis.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.BaselineAlignment" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.CultureInfo">
      <summary>Gets the culture information for the text run.</summary>
      <returns>A value of <see cref="T:System.Globalization.CultureInfo" /> that represents the culture of the text run.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.FontHintingEmSize">
      <summary>Gets the text size in points, which is then used for font hinting.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the text size in points. The default is 12 pt.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.FontRenderingEmSize">
      <summary>Gets the text size in points for the text run.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the text size in DIPs (Device Independent Pixels). The default is 12 DIP.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.ForegroundBrush">
      <summary>Gets the brush that is used to paint the foreground color of the text run.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> value that represents the foreground color.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.NumberSubstitution">
      <summary>Gets the number substitution settings, which determines who numbers in text are displayed in different cultures.</summary>
      <returns>A <see cref="T:System.Windows.Media.NumberSubstitution" /> value.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.TextDecorations">
      <summary>Gets the collection of  <see cref="T:System.Windows.TextDecoration" /> objects used for the text run.</summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> value.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.TextEffects">
      <summary>Gets the collection of <see cref="T:System.Windows.Media.TextEffect" /> objects used for the text run.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextEffectCollection" /> value.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.Typeface">
      <summary>Gets the typeface for the text run.</summary>
      <returns>A value of <see cref="T:System.Windows.Media.Typeface" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.TypographyProperties">
      <summary>Gets the typography properties for the text run.</summary>
      <returns>A value of <see cref="T:System.Windows.Media.TextFormatting.TextRunTypographyProperties" />.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextRunTypographyProperties">
      <summary>Provides an abstract class for supporting typography properties for <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextRunTypographyProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextRunTypographyProperties" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.AnnotationAlternates">
      <summary>Gets the index of an alternate annotation form.</summary>
      <returns>The index of the alternate annotation form. The default is 0 (zero).</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.Capitals">
      <summary>Gets a value that indicates the capital form of the selected font.</summary>
      <returns>One of the <see cref="T:System.Windows.FontCapitals" /> values. The default is <see cref="F:System.Windows.FontCapitals.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.CapitalSpacing">
      <summary>Gets a value that indicates whether inter-glyph spacing for all-capital text is globally adjusted to improve readability.</summary>
      <returns>true if spacing is adjusted; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.CaseSensitiveForms">
      <summary>Gets a value that indicates whether glyphs adjust their vertical position to better align with uppercase glyphs.</summary>
      <returns>true if the vertical position is adjusted; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualAlternates">
      <summary>Gets a value that indicates whether custom glyph forms can be used based upon the context of the text being rendered.</summary>
      <returns>true if custom glyph forms can be used; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualLigatures">
      <summary>Gets a value that indicates whether contextual ligatures are enabled.</summary>
      <returns>true if contextual ligatures are enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualSwashes">
      <summary>Gets a value that specifies the index of a contextual swashes form.</summary>
      <returns>The index of the standard swashes form. The default is 0 (zero).</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.DiscretionaryLigatures">
      <summary>Gets a value that indicates whether discretionary ligatures are enabled.</summary>
      <returns>true if discretionary ligatures are enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianExpertForms">
      <summary>Gets a value that indicates whether the standard Japanese font forms have been replaced with the corresponding preferred typographic forms.</summary>
      <returns>true if standard Japanese font forms have been replaced with the corresponding preferred typographic forms; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianLanguage">
      <summary>Gets a value that indicates the version of glyphs to be used for a specific writing system or language.</summary>
      <returns>One of the <see cref="T:System.Windows.FontEastAsianLanguage" /> values. The default is <see cref="F:System.Windows.FontEastAsianLanguage.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianWidths">
      <summary>Gets a value that indicates the proportional width to be used for Latin characters in an East Asian font.</summary>
      <returns>One of the <see cref="T:System.Windows.FontEastAsianWidths" /> values. The default is <see cref="F:System.Windows.FontEastAsianWidths.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.Fraction">
      <summary>Gets a value that indicates the fraction style.</summary>
      <returns>One of the <see cref="T:System.Windows.FontFraction" /> values. The default is <see cref="F:System.Windows.FontFraction.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.HistoricalForms">
      <summary>Gets a value that indicates whether historical forms are enabled.</summary>
      <returns>true if historical forms are enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.HistoricalLigatures">
      <summary>Gets a value that indicates whether historical ligatures are enabled.</summary>
      <returns>true if historical ligatures are enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.Kerning">
      <summary>Gets a value that indicates whether kerning is enabled.</summary>
      <returns>true if kerning is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.MathematicalGreek">
      <summary>Gets a value that indicates whether standard typographic font forms of Greek glyphs have been replaced with corresponding font forms commonly used in mathematical notation.</summary>
      <returns>true if mathematical Greek forms are enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.NumeralAlignment">
      <summary>Gets the alignment of widths when using numerals.</summary>
      <returns>One of the <see cref="T:System.Windows.FontNumeralAlignment" /> values. The default is <see cref="F:System.Windows.FontNumeralAlignment.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.NumeralStyle">
      <summary>Gets a value that indicates the set of glyphs that are used to render numeric alternate font forms.</summary>
      <returns>One of the <see cref="T:System.Windows.FontNumeralStyle" /> values. The default is <see cref="F:System.Windows.FontNumeralStyle.Normal" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextRunTypographyProperties.OnPropertiesChanged">
      <summary>Corrects internal state for a <see cref="T:System.Windows.Media.TextFormatting.TextRunTypographyProperties" /> derived class whenever any <see cref="T:System.Windows.Media.TextFormatting.TextRunTypographyProperties" /> property changes its value.</summary>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.SlashedZero">
      <summary>Gets a value that indicates whether a nominal zero font form should be replaced with a slashed zero.</summary>
      <returns>true if slashed zero forms are enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardLigatures">
      <summary>Gets a value that indicates whether standard ligatures are enabled.</summary>
      <returns>true if standard ligatures are enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardSwashes">
      <summary>Gets the index of a standard swashes form.</summary>
      <returns>The index of the standard swashes form. The default is 0 (zero).</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticAlternates">
      <summary>Gets the index of a stylistic alternates form.</summary>
      <returns>The index of the stylistic alternates form. The default is 0 (zero).</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet1">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet10">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet11">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet12">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet13">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet14">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet15">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet16">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet17">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet18">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet19">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet2">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet20">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet3">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet4">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet5">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet6">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet7">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet8">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet9">
      <summary>Gets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.Variants">
      <summary>Gets a value that indicates a variation of the standard typographic form to be used.</summary>
      <returns>One of the <see cref="T:System.Windows.FontVariants" /> values. The default is <see cref="F:System.Windows.FontVariants.Normal" />.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextSimpleMarkerProperties">
      <summary>Provides for a generic implementation of text marker properties.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextSimpleMarkerProperties.#ctor(System.Windows.TextMarkerStyle,System.Double,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextSimpleMarkerProperties" /> class.</summary>
      <param name="style">An enumerated value of <see cref="T:System.Windows.TextMarkerStyle" />.</param>
      <param name="offset">A <see cref="T:System.Double" /> that represents the distance from the start of the line to the end of the text marker symbol.</param>
      <param name="autoNumberingIndex">An <see cref="T:System.Int32" /> value that represents the auto-numbering counter of counter-style text marker.</param>
      <param name="textParagraphProperties">A <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> value that represents the properties shared by every text character of the text marker.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextSimpleMarkerProperties.Offset">
      <summary>Gets the distance from the start of the line to the end of the text marker symbol.</summary>
      <returns>An <see cref="T:System.Int32" /> object that represents the offset of the text marker symbol.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextSimpleMarkerProperties.TextSource">
      <summary>Gets the source of the text runs used for the text marker.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> value that represents the text run used for the text marker.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextSource">
      <summary>Provides an abstract class for specifying character data and formatting properties to be used by the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> object.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)">
      <summary>Retrieves the text span immediately before the specified <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> position.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /> value that represents the text span immediately before <paramref name="textSourceCharacterIndexLimit" />.</returns>
      <param name="textSourceCharacterIndexLimit">An <see cref="T:System.Int32" /> value that specifies the character index position where text retrieval stops.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)">
      <summary>Retrieves a value that maps a <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> character index to a <see cref="T:System.Windows.Media.TextEffect" /> character index.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the <see cref="T:System.Windows.Media.TextEffect" /> character index.</returns>
      <param name="textSourceCharacterIndex">An <see cref="T:System.Int32" /> value that specifies the <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> character index to map.</param>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)">
      <summary>Retrieves a <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> starting at a specified <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> position.</summary>
      <returns>A value that represents a <see cref="T:System.Windows.Media.TextFormatting.TextRun" />, or an object derived from <see cref="T:System.Windows.Media.TextFormatting.TextRun" />.</returns>
      <param name="textSourceCharacterIndex">Specifies the character index position in the <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> where the <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> is retrieved.</param>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextSpan`1">
      <summary>Represents a generic class that allows a simple pairing of an object of type T and a specified run length.</summary>
      <typeparam name="T">The object type to pair.</typeparam>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextSpan`1.#ctor(System.Int32,`0)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextSpan`1" /> class by specifying the length of the text span and the value associated with it.</summary>
      <param name="length">An <see cref="T:System.Int32" /> value that represents the number of characters in the text span.</param>
      <param name="value">The object associated with the text span.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextSpan`1.Length">
      <summary>Gets the number of characters in the text span.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the length of the text span.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextSpan`1.Value">
      <summary>Gets the object associated with the text span.</summary>
      <returns>An object of type <paramref name="T" />.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextTabAlignment">
      <summary>Describes how text is aligned at a tab location.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormatting.TextTabAlignment.Left">
      <summary>Text is left-aligned at the tab location.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormatting.TextTabAlignment.Center">
      <summary>Text is center-aligned at the tab location.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormatting.TextTabAlignment.Right">
      <summary>Text is right-aligned at the tab location.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormatting.TextTabAlignment.Character">
      <summary>Text is aligned at the tab location at a specified character.</summary>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextTabProperties">
      <summary>Specifies properties of user-defined tabs.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextTabProperties.#ctor(System.Windows.Media.TextFormatting.TextTabAlignment,System.Double,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextTabProperties" /> class by specifying tab properties.</summary>
      <param name="alignment">An enumerated value of <see cref="T:System.Windows.Media.TextFormatting.TextTabAlignment" /> that represents the alignment of text at the tab location.</param>
      <param name="location">A <see cref="T:System.Double" /> value that represents the tab location.</param>
      <param name="tabLeader">An <see cref="T:System.Int32" /> value that represents the tab leader.</param>
      <param name="aligningChar">An <see cref="T:System.Int32" /> value that represents the specific character in text that is aligned at tab location.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextTabProperties.AligningCharacter">
      <summary>Gets the index of the specific character in the text that is aligned at the specified tab location.</summary>
      <returns>An <see cref="T:System.Int32" /> value representing the index.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextTabProperties.Alignment">
      <summary>Gets the alignment style of the text at the tab location.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.Media.TextFormatting.TextTabAlignment" /> that represents the alignment of the text at the tab location.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextTabProperties.Location">
      <summary>Gets the index value of the tab location.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the tab location.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextTabProperties.TabLeader">
      <summary>Gets the index of the character that is used to display the tab leader. </summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the tab leader location.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextTrailingCharacterEllipsis">
      <summary>Defines collapsed text properties for collapsing a whole line toward the end at character granularity, and with ellipsis being the collapsed text symbol.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextTrailingCharacterEllipsis.#ctor(System.Double,System.Windows.Media.TextFormatting.TextRunProperties)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextTrailingCharacterEllipsis" /> class by specifying collapsed text properties.</summary>
      <param name="width">A <see cref="T:System.Double" /> that represents the width for which the specified collapsed text range is constrained to.</param>
      <param name="textRunProperties">A <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value that represents the set of shared text properties.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextTrailingCharacterEllipsis.Style">
      <summary>Gets the style of collapsed text.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.Media.TextFormatting.TextCollapsingStyle" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextTrailingCharacterEllipsis.Symbol">
      <summary>Gets the text run that is used as the collapsed text symbol.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> value that represents the collapsed text symbol.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextTrailingCharacterEllipsis.Width">
      <summary>Gets the width for which the specified collapsed text range is constrained to.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the width.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormatting.TextTrailingWordEllipsis">
      <summary>Defines collapsed text properties for collapsing a whole line toward the end at word granularity, and with ellipsis being the collapsed text symbol.</summary>
    </member>
    <member name="M:System.Windows.Media.TextFormatting.TextTrailingWordEllipsis.#ctor(System.Double,System.Windows.Media.TextFormatting.TextRunProperties)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextTrailingCharacterEllipsis" /> class by specifying collapsed text properties.</summary>
      <param name="width">A <see cref="T:System.Double" /> that represents the width for which the specified collapsed text range is constrained to.</param>
      <param name="textRunProperties">A <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> value that represents the set of shared text properties.</param>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextTrailingWordEllipsis.Style">
      <summary>Gets the style of collapsed text.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.Media.TextFormatting.TextCollapsingStyle" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextTrailingWordEllipsis.Symbol">
      <summary>Gets the text run that is used as the collapsed text symbol.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> value that represents the collapsed text symbol.</returns>
    </member>
    <member name="P:System.Windows.Media.TextFormatting.TextTrailingWordEllipsis.Width">
      <summary>Gets the width for which the specified collapsed text range is constrained to.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the width.</returns>
    </member>
    <member name="T:System.Windows.Navigation.BaseUriHelper">
      <summary>Provides a method to resolve relative uniform resource identifiers (URIs) with respect to the base URI of a container, such as a <see cref="T:System.Windows.Controls.Frame" />.</summary>
    </member>
    <member name="F:System.Windows.Navigation.BaseUriHelper.BaseUriProperty">
      <summary>Identifies the BaseUri attached property.</summary>
      <returns>The identifier for the BaseUri attached property.</returns>
    </member>
    <member name="M:System.Windows.Navigation.BaseUriHelper.GetBaseUri(System.Windows.DependencyObject)">
      <summary>Gets the value of the BaseUri attached property for a specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The base URI of a given element.</returns>
      <param name="element">The element from which the property value is read. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Resources.AssemblyAssociatedContentFileAttribute">
      <summary>This attribute is interpreted during the Extensible Application Markup Language (XAML) compilation process to associate loose content with a Windows Presentation Foundation (WPF) application.</summary>
    </member>
    <member name="M:System.Windows.Resources.AssemblyAssociatedContentFileAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Resources.AssemblyAssociatedContentFileAttribute" /> class.</summary>
      <param name="relativeContentFilePath">The path to the associated content.</param>
    </member>
    <member name="P:System.Windows.Resources.AssemblyAssociatedContentFileAttribute.RelativeContentFilePath">
      <summary>Gets the path to the associated content.</summary>
      <returns>The path, as declared in the attribute.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Configuration.Install.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Configuration.Install</name>
  </assembly>
  <members>
    <member name="T:System.Configuration.Install.AssemblyInstaller">
      <summary>Loads an assembly, and runs all the installers in it.</summary>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.AssemblyInstaller" /> class.</summary>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.Reflection.Assembly,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.AssemblyInstaller" /> class, and specifies both the assembly to install and the command line to use when creating a new <see cref="T:System.Configuration.Install.InstallContext" /> object.</summary>
      <param name="assembly">The <see cref="T:System.Reflection.Assembly" /> to install. </param>
      <param name="commandLine">The command line to use when creating a new <see cref="T:System.Configuration.Install.InstallContext" /> object for the assembly's installation. Can be a null value.</param>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.String,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.AssemblyInstaller" /> class, and specifies both the file name of the assembly to install and the command line to use when creating a new <see cref="T:System.Configuration.Install.InstallContext" /> object for the assembly's installation.</summary>
      <param name="fileName">The file name of the assembly to install. </param>
      <param name="commandLine">The command line to use when creating a new <see cref="T:System.Configuration.Install.InstallContext" /> object for the assembly's installation. Can be a null value.</param>
    </member>
    <member name="P:System.Configuration.Install.AssemblyInstaller.Assembly">
      <summary>Gets or sets the assembly to install.</summary>
      <returns>An <see cref="T:System.Reflection.Assembly" /> that defines the assembly to install.</returns>
      <exception cref="T:System.ArgumentNullException">The property value is null. </exception>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.CheckIfInstallable(System.String)">
      <summary>Checks to see if the specified assembly can be installed.</summary>
      <param name="assemblyName">The assembly in which to search for installers. </param>
      <exception cref="T:System.Exception">The specified assembly cannot be installed. </exception>
    </member>
    <member name="P:System.Configuration.Install.AssemblyInstaller.CommandLine">
      <summary>Gets or sets the command line to use when creating a new <see cref="T:System.Configuration.Install.InstallContext" /> object for the assembly's installation.</summary>
      <returns>An array of type <see cref="T:System.String" /> that represents the command line to use when creating a new <see cref="T:System.Configuration.Install.InstallContext" /> object for the assembly's installation.</returns>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)">
      <summary>Completes the installation transaction.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after all the installers in the installer collection have run. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="savedState" /> parameter is null.-or- The saved-state <see cref="T:System.Collections.IDictionary" /> might have been corrupted.-or- A file could not be found. </exception>
      <exception cref="T:System.Exception">An error occurred in the <see cref="E:System.Configuration.Install.Installer.Committing" /> event handler of one of the installers in the collection.-or- An error occurred in the <see cref="E:System.Configuration.Install.Installer.Committed" /> event handler of one of the installers in the collection.-or- An exception occurred during the <see cref="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)" /> phase of the installation. The exception is ignored and the installation continues. However, the application might not function correctly after installation completes.-or- Installer types were not found in one of the assemblies.-or- An instance of one of the installer types could not be created. </exception>
      <exception cref="T:System.Configuration.Install.InstallException">An exception occurred during the <see cref="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)" /> phase of the installation. The exception is ignored and the installation continues. However, the application might not function correctly after installation completes. </exception>
    </member>
    <member name="P:System.Configuration.Install.AssemblyInstaller.HelpText">
      <summary>Gets the help text for all the installers in the installer collection.</summary>
      <returns>The help text for all the installers in the installer collection, including the description of what each installer does and the command-line options (for the installation program) that can be passed to and understood by each installer.</returns>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.Install(System.Collections.IDictionary)">
      <summary>Performs the installation.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="savedState" /> parameter is null.-or- A file could not be found. </exception>
      <exception cref="T:System.Exception">An exception occurred in the <see cref="E:System.Configuration.Install.Installer.BeforeInstall" /> event handler of one of the installers in the collection.-or- An exception occurred in the <see cref="E:System.Configuration.Install.Installer.AfterInstall" /> event handler of one of the installers in the collection.-or- Installer types were not found in one of the assemblies.-or- An instance of one of the installer types could not be created. </exception>
    </member>
    <member name="P:System.Configuration.Install.AssemblyInstaller.Path">
      <summary>Gets or sets the path of the assembly to install.</summary>
      <returns>The path of the assembly to install.</returns>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)">
      <summary>Restores the computer to the state it was in before the installation.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="savedState" /> parameter is null.-or- The saved-state <see cref="T:System.Collections.IDictionary" /> might have been corrupted.-or- A file could not be found. </exception>
      <exception cref="T:System.Exception">An exception occurred in the <see cref="E:System.Configuration.Install.Installer.BeforeRollback" /> event handler of one of the installers in the collection.-or- An exception occurred in the <see cref="E:System.Configuration.Install.Installer.AfterRollback" /> event handler of one of the installers in the collection.-or- An exception occurred during the <see cref="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)" /> phase of the installation. The exception is ignored and the rollback continues. However, the computer might not be fully reverted to its initial state after the rollback completes.-or- Installer types were not found in one of the assemblies.-or- An instance of one of the installer types could not be created. </exception>
      <exception cref="T:System.Configuration.Install.InstallException">An exception occurred during the <see cref="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)" /> phase of the installation. The exception is ignored and the rollback continues. However, the computer might not be fully reverted to its initial state after the rollback completes. </exception>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>Removes an installation.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer. </param>
      <exception cref="T:System.ArgumentException">The saved-state <see cref="T:System.Collections.IDictionary" /> might have been corrupted.-or- A file could not be found. </exception>
      <exception cref="T:System.Exception">An error occurred in the <see cref="E:System.Configuration.Install.Installer.BeforeUninstall" /> event handler of one of the installers in the collection.-or- An error occurred in the <see cref="E:System.Configuration.Install.Installer.AfterUninstall" /> event handler of one of the installers in the collection.-or- An exception occurred while uninstalling. The exception is ignored and the uninstall continues. However, the application might not be fully uninstalled after the uninstall completes.-or- Installer types were not found in one of the assemblies.-or- An instance of one of the installer types could not be created.-or- A file could not be deleted. </exception>
      <exception cref="T:System.Configuration.Install.InstallException">An exception occurred while uninstalling. The exception is ignored and the uninstall continues. However, the application might not be fully uninstalled after the uninstall completes. </exception>
    </member>
    <member name="P:System.Configuration.Install.AssemblyInstaller.UseNewContext">
      <summary>Gets or sets a value indicating whether to create a new <see cref="T:System.Configuration.Install.InstallContext" /> object for the assembly's installation.</summary>
      <returns>true if a new <see cref="T:System.Configuration.Install.InstallContext" /> object should be created for the assembly's installation; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Configuration.Install.ComponentInstaller">
      <summary>Specifies an installer that copies properties from a component to use at install time.</summary>
    </member>
    <member name="M:System.Configuration.Install.ComponentInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.ComponentInstaller" /> class.</summary>
    </member>
    <member name="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>When overridden in a derived class, copies all the properties that are required at install time from the specified component.</summary>
      <param name="component">The component to copy from. </param>
    </member>
    <member name="M:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <summary>Determines if the specified installer installs the same object as this installer.</summary>
      <returns>true if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter install the same object; otherwise, false.</returns>
      <param name="otherInstaller">The installer to compare. </param>
    </member>
    <member name="T:System.Configuration.Install.IManagedInstaller">
      <summary>Provides an interface for a managed installer.</summary>
    </member>
    <member name="M:System.Configuration.Install.IManagedInstaller.ManagedInstall(System.String,System.Int32)">
      <summary>Executes a managed installation.</summary>
      <returns>The return code for installutil.exe. A successful installation returns 0. Other values indicate failure.</returns>
      <param name="commandLine">The command line that specifies the installation.</param>
      <param name="hInstall">The handle to the installation.</param>
    </member>
    <member name="T:System.Configuration.Install.InstallContext">
      <summary>Contains information about the current installation.</summary>
    </member>
    <member name="M:System.Configuration.Install.InstallContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</summary>
    </member>
    <member name="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class, and creates a log file for the installation.</summary>
      <param name="logFilePath">The path to the log file for this installation, or null if no log file should be created. </param>
      <param name="commandLine">The command-line parameters entered when running the installation program, or null if none were entered. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)">
      <summary>Determines whether the specified command-line parameter is true.</summary>
      <returns>true if the specified parameter is set to "yes", "true", "1", or an empty string (""); otherwise, false.</returns>
      <param name="paramName">The name of the command-line parameter to check. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallContext.LogMessage(System.String)">
      <summary>Writes a message to the console and to the log file for the installation.</summary>
      <param name="message">The message to write. </param>
    </member>
    <member name="P:System.Configuration.Install.InstallContext.Parameters">
      <summary>Gets the command-line parameters that were entered when InstallUtil.exe was run.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringDictionary" /> that represents the command-line parameters that were entered when the installation executable was run.</returns>
    </member>
    <member name="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])">
      <summary>Parses the command-line parameters into a string dictionary.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the parsed command-line parameters.</returns>
      <param name="args">An array containing the command-line parameters. </param>
    </member>
    <member name="T:System.Configuration.Install.Installer">
      <summary>Provides the foundation for custom installations.</summary>
    </member>
    <member name="M:System.Configuration.Install.Installer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.Installer" /> class.</summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.AfterInstall">
      <summary>Occurs after the <see cref="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)" /> methods of all the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property have run.</summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.AfterRollback">
      <summary>Occurs after the installations of all the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are rolled back.</summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.AfterUninstall">
      <summary>Occurs after all the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property perform their uninstallation operations.</summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.BeforeInstall">
      <summary>Occurs before the <see cref="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)" /> method of each installer in the installer collection has run.</summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.BeforeRollback">
      <summary>Occurs before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are rolled back.</summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.BeforeUninstall">
      <summary>Occurs before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property perform their uninstall operations.</summary>
    </member>
    <member name="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, completes the install transaction.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after all the installers in the collection have run. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="savedState" /> parameter is null.-or- The saved-state <see cref="T:System.Collections.IDictionary" /> might have been corrupted. </exception>
      <exception cref="T:System.Configuration.Install.InstallException">An exception occurred during the <see cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" /> phase of the installation. This exception is ignored and the installation continues. However, the application might not function correctly after the installation is complete. </exception>
    </member>
    <member name="E:System.Configuration.Install.Installer.Committed">
      <summary>Occurs after all the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property have committed their installations.</summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.Committing">
      <summary>Occurs before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property committ their installations.</summary>
    </member>
    <member name="P:System.Configuration.Install.Installer.Context">
      <summary>Gets or sets information about the current installation.</summary>
      <returns>An <see cref="T:System.Configuration.Install.InstallContext" /> that contains information about the current installation.</returns>
    </member>
    <member name="P:System.Configuration.Install.Installer.HelpText">
      <summary>Gets the help text for all the installers in the installer collection.</summary>
      <returns>The help text for all the installers in the installer collection, including the description of what the installer does and the command line options for the installation executable, such as the InstallUtil.exe utility, that can be passed to and understood by this installer.</returns>
      <exception cref="T:System.NullReferenceException">One of the installers in the installer collection specifies a null reference instead of help text. A likely cause for this exception is that a field to contain the help text is defined but not initialized.</exception>
    </member>
    <member name="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, performs the installation.</summary>
      <param name="stateSaver">An <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="stateSaver" /> parameter is null. </exception>
      <exception cref="T:System.Exception">An exception occurred in the <see cref="E:System.Configuration.Install.Installer.BeforeInstall" /> event handler of one of the installers in the collection.-or- An exception occurred in the <see cref="E:System.Configuration.Install.Installer.AfterInstall" /> event handler of one of the installers in the collection. </exception>
    </member>
    <member name="P:System.Configuration.Install.Installer.Installers">
      <summary>Gets the collection of installers that this installer contains.</summary>
      <returns>An <see cref="T:System.Configuration.Install.InstallerCollection" /> containing the collection of installers associated with this installer.</returns>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)">
      <summary>Raises the <see cref="E:System.Configuration.Install.Installer.AfterInstall" /> event.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after all the installers contained in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property have completed their installations. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)">
      <summary>Raises the <see cref="E:System.Configuration.Install.Installer.AfterRollback" /> event.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after the installers contained in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are rolled back. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)">
      <summary>Raises the <see cref="E:System.Configuration.Install.Installer.AfterUninstall" /> event.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after all the installers contained in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are uninstalled. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)">
      <summary>Raises the <see cref="E:System.Configuration.Install.Installer.BeforeInstall" /> event.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are installed. This <see cref="T:System.Collections.IDictionary" /> object should be empty at this point. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)">
      <summary>Raises the <see cref="E:System.Configuration.Install.Installer.BeforeRollback" /> event.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are rolled back. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)">
      <summary>Raises the <see cref="E:System.Configuration.Install.Installer.BeforeUninstall" /> event.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property uninstall their installations. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)">
      <summary>Raises the <see cref="E:System.Configuration.Install.Installer.Committed" /> event.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after all the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property run. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)">
      <summary>Raises the <see cref="E:System.Configuration.Install.Installer.Committing" /> event.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are committed. </param>
    </member>
    <member name="P:System.Configuration.Install.Installer.Parent">
      <summary>Gets or sets the installer containing the collection that this installer belongs to.</summary>
      <returns>An <see cref="T:System.Configuration.Install.Installer" /> containing the collection that this instance belongs to, or null if this instance does not belong to a collection.</returns>
    </member>
    <member name="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, restores the pre-installation state of the computer.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="savedState" /> parameter is null.-or- The saved-state <see cref="T:System.Collections.IDictionary" /> might have been corrupted. </exception>
      <exception cref="T:System.Configuration.Install.InstallException">An exception occurred during the <see cref="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)" /> phase of the installation. This exception is ignored and the rollback continues. However, the computer might not be fully reverted to its initial state after the rollback completes. </exception>
    </member>
    <member name="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, removes an installation.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after the installation was complete. </param>
      <exception cref="T:System.ArgumentException">The saved-state <see cref="T:System.Collections.IDictionary" /> might have been corrupted. </exception>
      <exception cref="T:System.Configuration.Install.InstallException">An exception occurred while uninstalling. This exception is ignored and the uninstall continues. However, the application might not be fully uninstalled after the uninstallation completes. </exception>
    </member>
    <member name="T:System.Configuration.Install.InstallerCollection">
      <summary>Contains a collection of installers to be run during an installation.</summary>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.Add(System.Configuration.Install.Installer)">
      <summary>Adds the specified installer to this collection of installers.</summary>
      <returns>The zero-based index of the added installer.</returns>
      <param name="value">An <see cref="T:System.Configuration.Install.Installer" /> that represents the installer to add to the collection. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.AddRange(System.Configuration.Install.Installer[])">
      <summary>Adds the specified array of installers to this collection.</summary>
      <param name="value">An array of type <see cref="T:System.Configuration.Install.Installer" /> that represents the installers to add to this collection. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.AddRange(System.Configuration.Install.InstallerCollection)">
      <summary>Adds the specified collection of installers to this collection.</summary>
      <param name="value">An <see cref="T:System.Configuration.Install.InstallerCollection" /> that represents the installers to add to this collection. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.Contains(System.Configuration.Install.Installer)">
      <summary>Determines whether the specified installer is included in collection.</summary>
      <returns>true if the specified installer is in this collection; otherwise, false.</returns>
      <param name="value">An <see cref="T:System.Configuration.Install.Installer" /> that represents the installer to look for. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.CopyTo(System.Configuration.Install.Installer[],System.Int32)">
      <summary>Copies the items from the collection to an array, begining at the specified index.</summary>
      <param name="array">The array to copy to. </param>
      <param name="index">The index of the array at which to paste the collection. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.IndexOf(System.Configuration.Install.Installer)">
      <summary>Determines the index of a specified installer in the collection.</summary>
      <returns>The zero-based index of the installer in the collection.</returns>
      <param name="value">The <see cref="T:System.Configuration.Install.Installer" /> to locate in the collection. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.Insert(System.Int32,System.Configuration.Install.Installer)">
      <summary>Inserts the specified installer into the collection at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the installer. </param>
      <param name="value">The <see cref="T:System.Configuration.Install.Installer" /> to insert. </param>
    </member>
    <member name="P:System.Configuration.Install.InstallerCollection.Item(System.Int32)">
      <summary>Gets or sets an installer at the specified index.</summary>
      <returns>An <see cref="T:System.Configuration.Install.Installer" /> that represents the installer at the specified index.</returns>
      <param name="index">The zero-based index of the installer to get or set. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before a new installer is inserted into the collection.</summary>
      <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
      <param name="value">The new value of the installer at <paramref name="index" />.</param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.OnRemove(System.Int32,System.Object)">
      <summary>Performs additional custom processes before an installer is removed from the collection.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
      <param name="value">The installer to be removed from <paramref name="index" />. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Performs additional custom processes before an existing installer is set to a new value.</summary>
      <param name="index">The zero-based index at which to replace <paramref name="oldValue" />.</param>
      <param name="oldValue">The value to replace with <paramref name="newValue." /></param>
      <param name="newValue">The new value of the installer at <paramref name="index" />.</param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.Remove(System.Configuration.Install.Installer)">
      <summary>Removes the specified <see cref="T:System.Configuration.Install.Installer" /> from the collection.</summary>
      <param name="value">An <see cref="T:System.Configuration.Install.Installer" /> that represents the installer to remove. </param>
    </member>
    <member name="T:System.Configuration.Install.InstallEventArgs">
      <summary>Provides data for the events: <see cref="E:System.Configuration.Install.Installer.BeforeInstall" />, <see cref="E:System.Configuration.Install.Installer.AfterInstall" />, <see cref="E:System.Configuration.Install.Installer.Committing" />, <see cref="E:System.Configuration.Install.Installer.Committed" />, <see cref="E:System.Configuration.Install.Installer.BeforeRollback" />, <see cref="E:System.Configuration.Install.Installer.AfterRollback" />, <see cref="E:System.Configuration.Install.Installer.BeforeUninstall" />, <see cref="E:System.Configuration.Install.Installer.AfterUninstall" />.</summary>
    </member>
    <member name="M:System.Configuration.Install.InstallEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallEventArgs" /> class, and leaves the <see cref="P:System.Configuration.Install.InstallEventArgs.SavedState" /> property empty.</summary>
    </member>
    <member name="M:System.Configuration.Install.InstallEventArgs.#ctor(System.Collections.IDictionary)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallEventArgs" /> class, and specifies the value for the <see cref="P:System.Configuration.Install.InstallEventArgs.SavedState" /> property.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that represents the current state of the installation. </param>
    </member>
    <member name="P:System.Configuration.Install.InstallEventArgs.SavedState">
      <summary>Gets an <see cref="T:System.Collections.IDictionary" /> that represents the current state of the installation.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> that represents the current state of the installation.</returns>
    </member>
    <member name="T:System.Configuration.Install.InstallEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Configuration.Install.Installer.BeforeInstall" />, <see cref="E:System.Configuration.Install.Installer.AfterInstall" />, <see cref="E:System.Configuration.Install.Installer.Committing" />, <see cref="E:System.Configuration.Install.Installer.Committed" />, <see cref="E:System.Configuration.Install.Installer.BeforeRollback" />, <see cref="E:System.Configuration.Install.Installer.AfterRollback" />, <see cref="E:System.Configuration.Install.Installer.BeforeUninstall" />, or <see cref="E:System.Configuration.Install.Installer.AfterUninstall" /> event of an <see cref="T:System.Configuration.Install.Installer" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.Configuration.Install.InstallEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Configuration.Install.InstallException">
      <summary>The exception that is thrown when an error occurs during the commit, rollback, or uninstall phase of an installation.</summary>
    </member>
    <member name="M:System.Configuration.Install.InstallException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class.</summary>
    </member>
    <member name="M:System.Configuration.Install.InstallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class, and specifies the message to display to the user.</summary>
      <param name="message">The message to display to the user. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class, and specifies the message to display to the user, and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message to display to the user. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Configuration.Install.ManagedInstallerClass">
      <summary>Represents a managed install.</summary>
    </member>
    <member name="M:System.Configuration.Install.ManagedInstallerClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.ManagedInstallerClass" /> class. </summary>
    </member>
    <member name="M:System.Configuration.Install.ManagedInstallerClass.InstallHelper(System.String[])">
      <summary>Handles the functionality of the Installutil.exe (Installer Tool).</summary>
      <param name="args">The arguments passed to the Installer Tool.</param>
    </member>
    <member name="M:System.Configuration.Install.ManagedInstallerClass.System#Configuration#Install#IManagedInstaller#ManagedInstall(System.String,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Configuration.Install.IManagedInstaller.ManagedInstall(System.String,System.Int32)" />.</summary>
      <returns>The return code for installutil.exe. A successful installation returns 0. Other values indicate failure.</returns>
      <param name="argString">The command line to install.</param>
      <param name="hInstall">The handle to the installation.</param>
    </member>
    <member name="T:System.Configuration.Install.TransactedInstaller">
      <summary>Defines an installer that either succeeds completely or fails and leaves the computer in its initial state.</summary>
    </member>
    <member name="M:System.Configuration.Install.TransactedInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.TransactedInstaller" /> class.</summary>
    </member>
    <member name="M:System.Configuration.Install.TransactedInstaller.Install(System.Collections.IDictionary)">
      <summary>Performs the installation.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> in which this method saves information needed to perform a commit, rollback, or uninstall operation. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="savedState" /> parameter is null. </exception>
      <exception cref="T:System.Exception">The installation failed, and is being rolled back. </exception>
    </member>
    <member name="M:System.Configuration.Install.TransactedInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>Removes an installation.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after the installation completed. </param>
    </member>
    <member name="T:System.Configuration.Install.UninstallAction">
      <summary>Specifies what an installer should do during an uninstallation.</summary>
    </member>
    <member name="F:System.Configuration.Install.UninstallAction.Remove">
      <summary>Removes the resource the installer created.</summary>
    </member>
    <member name="F:System.Configuration.Install.UninstallAction.NoAction">
      <summary>Leaves the resource created by the installer as is.</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogInstaller">
      <summary>Allows you to install and configure an event log that your application reads from or writes to when running. </summary>
    </member>
    <member name="M:System.Diagnostics.EventLogInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogInstaller" /> class. </summary>
    </member>
    <member name="P:System.Diagnostics.EventLogInstaller.CategoryCount">
      <summary>Gets or sets the number of categories in the category resource file.</summary>
      <returns>The number of categories in the category resource file. The default value is zero.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile">
      <summary>Gets or sets the path of the resource file that contains category strings for the source.</summary>
      <returns>The path of the category resource file. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>Copies the property values of an <see cref="T:System.Diagnostics.EventLog" /> component that are required at installation time for an event log.</summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Diagnostics.EventLogInstaller" />. </param>
      <exception cref="T:System.ArgumentException">The specified component is not an <see cref="T:System.Diagnostics.EventLog" />.-or- The <see cref="P:System.Diagnostics.EventLog.Log" /> or <see cref="P:System.Diagnostics.EventLog.Source" /> property of the specified component is either null or empty. </exception>
    </member>
    <member name="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)">
      <summary>Performs the installation and writes event log information to the registry.</summary>
      <param name="stateSaver">An <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a rollback or uninstall operation. </param>
      <exception cref="T:System.PlatformNotSupportedException">The platform the installer is trying to use is not Windows NT 4.0 or later. </exception>
      <exception cref="T:System.ArgumentException">The name specified in the <see cref="P:System.Diagnostics.EventLogInstaller.Source" />  property is already registered for a different event log.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <summary>Determines whether an installer and another specified installer refer to the same source.</summary>
      <returns>true if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter would install or uninstall the same source; otherwise, false.</returns>
      <param name="otherInstaller">The installer to compare. </param>
    </member>
    <member name="P:System.Diagnostics.EventLogInstaller.Log">
      <summary>Gets or sets the name of the log to set the source to.</summary>
      <returns>The name of the log. This can be Application, System, or a custom log name. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogInstaller.MessageResourceFile">
      <summary>Gets or sets the path of the resource file that contains message formatting strings for the source.</summary>
      <returns>The path of the message resource file. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile">
      <summary>Gets or sets the path of the resource file that contains message parameter strings for the source.</summary>
      <returns>The path of the message parameter resource file. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)">
      <summary>Restores the computer to the state it was in before the installation by rolling back the event log information that the installation procedure wrote to the registry.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer. </param>
    </member>
    <member name="P:System.Diagnostics.EventLogInstaller.Source">
      <summary>Gets or sets the source name to register with the log.</summary>
      <returns>The name to register with the event log as a source of entries. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>Removes an installation by removing event log information from the registry.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer. </param>
    </member>
    <member name="P:System.Diagnostics.EventLogInstaller.UninstallAction">
      <summary>Gets or sets a value that indicates whether the Installutil.exe (Installer Tool) should remove the event log or leave it in its installed state at uninstall time.</summary>
      <returns>One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the event log in when the <see cref="T:System.Diagnostics.EventLog" /> is uninstalled. The default is Remove.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> contains an invalid value. The only valid values for this property are Remove and NoAction.</exception>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterInstaller">
      <summary>Specifies an installer for the <see cref="T:System.Diagnostics.PerformanceCounter" /> component.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounterInstaller" /> class. </summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterInstaller.CategoryHelp">
      <summary>Gets or sets the descriptive message for the performance counter.</summary>
      <returns>The descriptive message for the performance counter.</returns>
      <exception cref="T:System.ArgumentNullException">The value is set to null. </exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterInstaller.CategoryName">
      <summary>Gets or sets the performance category name for the performance counter.</summary>
      <returns>The performance category name for the performance counter.</returns>
      <exception cref="T:System.ArgumentNullException">The value is set to null. </exception>
      <exception cref="T:System.ArgumentException">The value is not a valid category name.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterInstaller.CategoryType">
      <summary>Gets or sets the performance counter category type.</summary>
      <returns>One of the <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> values. </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not a <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>Copies all the properties from the specified component that are required at install time for a performance counter.</summary>
      <param name="component">The component to copy from. </param>
      <exception cref="T:System.ArgumentException">The specified component is not a <see cref="T:System.Diagnostics.PerformanceCounter" />.-or- The specified <see cref="T:System.Diagnostics.PerformanceCounter" /> is incomplete.-or- Multiple counters in different categories are trying to be installed. </exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterInstaller.Counters">
      <summary>Gets a collection of data that pertains to the counters to install.</summary>
      <returns>A <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> that contains the names, help messages, and types of the counters to install.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterInstaller.Install(System.Collections.IDictionary)">
      <summary>Performs the installation.</summary>
      <param name="stateSaver">An <see cref="T:System.Collections.IDictionary" /> that is used to save the information needed to perform a commit, rollback, or uninstall operation. </param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterInstaller.Rollback(System.Collections.IDictionary)">
      <summary>Restores the computer to the state it was in before the installation.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer. </param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>Removes an installation.</summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer. </param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterInstaller.UninstallAction">
      <summary>Gets a value that indicates whether the performance counter should be removed at uninstall time.</summary>
      <returns>One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values. The default is Remove.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not an <see cref="T:System.Configuration.Install.UninstallAction" />.</exception>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Configuration.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Configuration</name>
  </assembly>
  <members>
    <member name="T:System.Configuration.AppSettingsSection">
      <summary>Provides configuration system support for the appSettings configuration section. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.AppSettingsSection" /> class.</summary>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.File">
      <summary>Gets or sets a configuration file that provides additional settings or overrides the settings specified in the appSettings element.</summary>
      <returns>A configuration file that provides additional settings or overrides the settings specified in the appSettings element.</returns>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.Settings">
      <summary>Gets a <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> object of key/value pairs that contain application settings.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the application settings from the configuration file.</returns>
    </member>
    <member name="T:System.Configuration.CallbackValidator">
      <summary>Provides dynamic validation of an object.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.CallbackValidator" /> class.</summary>
      <param name="type">The type of object that will be validated.</param>
      <param name="callback">The <see cref="T:System.Configuration.ValidatorCallback" /> used as the delegate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type " />is null.</exception>
    </member>
    <member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
      <summary>Determines whether the type of the object can be validated.</summary>
      <returns>true if the type parameter matches the type used as the first parameter when creating an instance of <see cref="T:System.Configuration.CallbackValidator" />; otherwise, false. </returns>
      <param name="type">The type of object.</param>
    </member>
    <member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
      <summary>Determines whether the value of an object is valid.</summary>
      <param name="value">The value of an object.</param>
    </member>
    <member name="T:System.Configuration.CallbackValidatorAttribute">
      <summary>Specifies a <see cref="T:System.Configuration.CallbackValidator" /> object to use for code validation. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.CallbackValidatorAttribute" /> class. </summary>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
      <summary>Gets or sets the name of the callback method.</summary>
      <returns>The name of the method to call.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.Type">
      <summary>Gets or sets the type of the validator.</summary>
      <returns>The <see cref="T:System.Type" /> of the current validator attribute instance.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
      <summary>Gets the validator instance.</summary>
      <returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase" /> instance.</returns>
      <exception cref="T:System.ArgumentNullException">The value of the <see cref="P:System.Configuration.CallbackValidatorAttribute.Type" /> property is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" /> property is not set to a public static void method with one object parameter.</exception>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollection">
      <summary>Represents a collection of string elements separated by commas. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> class.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
      <summary>Adds a string to the comma-delimited collection.</summary>
      <param name="value">A string value.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
      <summary>Adds all the strings in a string array to the collection.</summary>
      <param name="range">An array of strings to add to the collection.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
      <summary>Clears the collection.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
      <summary>Creates a copy of the collection.</summary>
      <returns>A <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
      <summary>Adds a string element to the collection at the specified index.</summary>
      <param name="index">The index in the collection at which the new element will be added.</param>
      <param name="value">The value of the new element to add to the collection.</param>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
      <summary>Gets a value that specifies whether the collection has been modified. </summary>
      <returns>true if the <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> has been modified; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
      <summary>Gets a value indicating whether the collection object is read-only.</summary>
      <returns>true if the specified string element in the <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
      <summary>Gets or sets a string element in the collection based on the index.</summary>
      <returns>A string element in the collection.</returns>
      <param name="index">The index of the string element in the collection.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
      <summary>Removes a string element from the collection.</summary>
      <param name="value">The string to remove.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
      <summary>Sets the collection object to read-only.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
      <summary>Returns a string representation of the object.</summary>
      <returns>A string representation of the object.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <summary>Converts a comma-delimited string value to and from a <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" /> class. </summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> object to a <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> containing the converted value.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> used during conversion.</param>
      <param name="data">The comma-separated <see cref="T:System.String" /> to convert.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> object to a <see cref="T:System.String" /> object.</summary>
      <returns>The <see cref="T:System.String" /> representing the converted <paramref name="value" /> parameter, which is a <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> used during conversion.</param>
      <param name="value">The value to convert.</param>
      <param name="type">The conversion type.</param>
    </member>
    <member name="T:System.Configuration.Configuration">
      <summary>Represents a configuration file that is applicable to a particular computer, application, or resource. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Configuration.Configuration.AppSettings">
      <summary>Gets the <see cref="T:System.Configuration.AppSettingsSection" /> object configuration section that applies to this <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>An <see cref="T:System.Configuration.AppSettingsSection" /> object representing the appSettings configuration section that applies to this <see cref="T:System.Configuration.Configuration" /> object.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.AssemblyStringTransformer">
      <summary>Specifies a function delegate that is used to transform assembly strings in configuration files.</summary>
      <returns>A delegate that transforms type strings. The default value is null.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.ConnectionStrings">
      <summary>Gets a <see cref="T:System.Configuration.ConnectionStringsSection" /> configuration-section object that applies to this <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.ConnectionStringsSection" /> configuration-section object representing the connectionStrings configuration section that applies to this <see cref="T:System.Configuration.Configuration" /> object.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.EvaluationContext">
      <summary>Gets the <see cref="T:System.Configuration.ContextInformation" /> object for the <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>The <see cref="T:System.Configuration.ContextInformation" /> object for the <see cref="T:System.Configuration.Configuration" /> object.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.FilePath">
      <summary>Gets the physical path to the configuration file represented by this <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>The physical path to the configuration file represented by this <see cref="T:System.Configuration.Configuration" /> object.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSection(System.String)">
      <summary>Returns the specified <see cref="T:System.Configuration.ConfigurationSection" /> object.</summary>
      <returns>The specified <see cref="T:System.Configuration.ConfigurationSection" /> object.</returns>
      <param name="sectionName">The path to the section to be returned.</param>
    </member>
    <member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
      <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> specified.</returns>
      <param name="sectionGroupName">The path name of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> to return.</param>
    </member>
    <member name="P:System.Configuration.Configuration.HasFile">
      <summary>Gets a value that indicates whether a file exists for the resource represented by this <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>true if there is a configuration file; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Locations">
      <summary>Gets the locations defined within this <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationLocationCollection" /> containing the locations defined within this <see cref="T:System.Configuration.Configuration" /> object.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.NamespaceDeclared">
      <summary>Gets or sets a value indicating whether the configuration file has an XML namespace.</summary>
      <returns>true if the configuration file has an XML namespace; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.RootSectionGroup">
      <summary>Gets the root <see cref="T:System.Configuration.ConfigurationSectionGroup" /> for this <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>The root section group for this <see cref="T:System.Configuration.Configuration" /> object.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.Save">
      <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the current XML configuration file.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.- or -The configuration file has changed. </exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
      <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the current XML configuration file.</summary>
      <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> value that determines which property values to save.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.- or -The configuration file has changed. </exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the current XML configuration file.</summary>
      <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> value that determines which property values to save.</param>
      <param name="forceSaveAll">true to save even if the configuration was not modified; otherwise, false.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.- or -The configuration file has changed. </exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String)">
      <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the specified XML configuration file.</summary>
      <param name="filename">The path and file name to save the configuration file to.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.- or -The configuration file has changed. </exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the specified XML configuration file.</summary>
      <param name="filename">The path and file name to save the configuration file to.</param>
      <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> value that determines which property values to save.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.- or -The configuration file has changed. </exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the specified XML configuration file.</summary>
      <param name="filename">The path and file name to save the configuration file to.</param>
      <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> value that determines which property values to save.</param>
      <param name="forceSaveAll">true to save even if the configuration was not modified; otherwise, false.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Configuration.Configuration.SectionGroups">
      <summary>Gets a collection of the section groups defined by this configuration.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> collection representing the collection of section groups for this <see cref="T:System.Configuration.Configuration" /> object.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Sections">
      <summary>Gets a collection of the sections defined by this <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>A collection of the sections defined by this <see cref="T:System.Configuration.Configuration" /> object.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TargetFramework">
      <summary>Specifies the targeted version of the .NET Framework when a version earlier than the current one is targeted.</summary>
      <returns>The name of the targeted version of the .NET Framework. The default value is null, which indicates that the current version is targeted.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TypeStringTransformer">
      <summary>Specifies a function delegate that is used to transform type strings in configuration files. </summary>
      <returns>A delegate that transforms type strings. The default value is null.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowDefinition">
      <summary>Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a <see cref="T:System.Configuration.ConfigurationSection" /> object.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
      <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined only in the Machine.config file.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
      <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined in either the Machine.config file or the machine-level Web.config file found in the same directory as Machine.config, but not in application Web.config files.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
      <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined in either the Machine.config file, the machine-level Web.config file found in the same directory as Machine.config, or the top-level application Web.config file found in the virtual-directory root, but not in subdirectories of a virtual root.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
      <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined anywhere.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowExeDefinition">
      <summary>Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a <see cref="T:System.Configuration.ConfigurationSection" /> object.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
      <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined only in the Machine.config file. </summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
      <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined either in the Machine.config file or in the Exe.config file in the client application directory. This is the default value.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
      <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined in the Machine.config file, in the Exe.config file in the client application directory, or in the User.config file in the roaming user directory. </summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
      <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined in the Machine.config file, in the Exe.config file in the client application directory, in the User.config file in the roaming user directory, or in the User.config file in the local user directory.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationCollectionAttribute">
      <summary>Declaratively instructs the .NET Framework to create an instance of a configuration element collection. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> class.</summary>
      <param name="itemType">The type of the property collection to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" /> is null.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
      <summary>Gets or sets the name of the &lt;add&gt; configuration element.</summary>
      <returns>The name that substitutes the standard name "add" for the configuration item.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
      <summary>Gets or sets the name for the &lt;clear&gt; configuration element.</summary>
      <returns>The name that replaces the standard name "clear" for the configuration item.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
      <summary>Gets or sets the type of the <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> attribute.</summary>
      <returns>The type of the <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
      <summary>Gets the type of the collection element.</summary>
      <returns>The type of the collection element.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
      <summary>Gets or sets the name for the &lt;remove&gt; configuration element.</summary>
      <returns>The name that replaces the standard name "remove" for the configuration element.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationConverterBase">
      <summary>The base class for the configuration converter types.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationConverterBase" /> class.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the conversion is allowed.</summary>
      <returns>true if the conversion is allowed; otherwise, false.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="type">The <see cref="T:System.Type" /> to convert from.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the conversion is allowed.</summary>
      <returns>true if the conversion is allowed; otherwise, false. </returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversion.</param>
      <param name="type">The type to convert to.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElement">
      <summary>Represents a configuration element within a configuration file.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElement" /> class. </summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
      <summary>Gets a reference to the top-level <see cref="T:System.Configuration.Configuration" /> instance that represents the configuration hierarchy that the current <see cref="T:System.Configuration.ConfigurationElement" /> instance belongs to.</summary>
      <returns>The top-level <see cref="T:System.Configuration.Configuration" /> instance that the current <see cref="T:System.Configuration.ConfigurationElement" /> instance belongs to.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary>Reads XML from the configuration file.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> that reads from the configuration file.</param>
      <param name="serializeCollectionKey">true to serialize only the collection key properties; otherwise, false.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The element to read is locked.- or -An attribute of the current node is not recognized.- or -The lock status of the current node cannot be determined.  </exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementInformation">
      <summary>Gets an <see cref="T:System.Configuration.ElementInformation" /> object that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationElement" /> object. </summary>
      <returns>An <see cref="T:System.Configuration.ElementInformation" /> that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementProperty">
      <summary>Gets the <see cref="T:System.Configuration.ConfigurationElementProperty" /> object that represents the <see cref="T:System.Configuration.ConfigurationElement" /> object itself.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationElementProperty" /> that represents the <see cref="T:System.Configuration.ConfigurationElement" /> itself.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
      <summary>Compares the current <see cref="T:System.Configuration.ConfigurationElement" /> instance to the specified object.</summary>
      <returns>true if the object to compare with is equal to the current <see cref="T:System.Configuration.ConfigurationElement" /> instance; otherwise, false. The default is false. </returns>
      <param name="compareTo">The object to compare with.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
      <summary>Gets the <see cref="T:System.Configuration.ContextInformation" /> object for the <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
      <returns>The <see cref="T:System.Configuration.ContextInformation" /> for the <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The current element is not associated with a context.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetHashCode">
      <summary>Gets a unique value representing the current <see cref="T:System.Configuration.ConfigurationElement" /> instance.</summary>
      <returns>A unique value representing the current <see cref="T:System.Configuration.ConfigurationElement" /> instance.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
      <summary>Returns the transformed version of the specified assembly name. </summary>
      <returns>The transformed version of the assembly name. If no transformer is available, the <paramref name="assemblyName" /> parameter value is returned unchanged. The <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> property is null if no transformer is available.</returns>
      <param name="assemblyName">The name of the assembly.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
      <summary>Returns the transformed version of the specified type name.</summary>
      <returns>The transformed version of the specified type name. If no transformer is available, the <paramref name="typeName" /> parameter value is returned unchanged. The <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> property is null if no transformer is available.</returns>
      <param name="typeName">The name of the type.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Init">
      <summary>Sets the <see cref="T:System.Configuration.ConfigurationElement" /> object to its initial state.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
      <summary>Used to initialize a default set of values for the <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsModified">
      <summary>Indicates whether this configuration element has been modified since it was last saved or loaded, when implemented in a derived class.</summary>
      <returns>true if the element has been modified; otherwise, false. </returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement" /> object is read-only.</summary>
      <returns>true if the <see cref="T:System.Configuration.ConfigurationElement" /> object is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
      <summary>Gets or sets a property or attribute of this configuration element.</summary>
      <returns>The specified property, attribute, or child element.</returns>
      <param name="prop">The property to access. </param>
      <exception cref="T:System.Configuration.ConfigurationException">
        <paramref name="prop" /> is null or does not exist within the element.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="prop" /> is read only or locked.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
      <summary>Gets or sets a property, attribute, or child element of this configuration element.</summary>
      <returns>The specified property, attribute, or child element</returns>
      <param name="propertyName">The name of the <see cref="T:System.Configuration.ConfigurationProperty" /> to access.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="prop" /> is read-only or locked.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
      <summary>Adds the invalid-property errors in this <see cref="T:System.Configuration.ConfigurationElement" /> object, and in all subelements, to the passed list.</summary>
      <param name="errorList">An object that implements the <see cref="T:System.Collections.IList" /> interface.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
      <summary>Gets the collection of locked attributes.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationLockCollection" /> of locked attributes (properties) for the element.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
      <summary>Gets the collection of locked elements.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationLockCollection" /> of locked elements.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAttributes">
      <summary>Gets the collection of locked attributes </summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationLockCollection" /> of locked attributes (properties) for the element.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockElements">
      <summary>Gets the collection of locked elements.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationLockCollection" /> of locked elements.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockItem">
      <summary>Gets or sets a value indicating whether the element is locked.</summary>
      <returns>true if the element is locked; otherwise, false. The default is false.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The element has already been locked at a higher configuration level.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary>Gets a value indicating whether an unknown attribute is encountered during deserialization.</summary>
      <returns>true when an unknown attribute is encountered while deserializing; otherwise, false.</returns>
      <param name="name">The name of the unrecognized attribute.</param>
      <param name="value">The value of the unrecognized attribute.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Gets a value indicating whether an unknown element is encountered during deserialization.</summary>
      <returns>true when an unknown element is encountered while deserializing; otherwise, false.</returns>
      <param name="elementName">The name of the unknown subelement.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> being used for deserialization.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The element identified by <paramref name="elementName" /> is locked.- or -One or more of the element's attributes is locked.- or -<paramref name="elementName" /> is unrecognized, or the element has an unrecognized attribute.- or -The element has a Boolean attribute with an invalid value.- or -An attempt was made to deserialize a property more than once.- or -An attempt was made to deserialize a property that is not a valid member of the element.- or -The element cannot contain a CDATA or text element.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
      <summary>Throws an exception when a required property is not found.</summary>
      <returns>None.</returns>
      <param name="name">The name of the required attribute that was not found.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">In all cases.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
      <summary>Called after deserialization.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
      <summary>Called before serialization.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> that will be used to serialize the <see cref="T:System.Configuration.ConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Properties">
      <summary>Gets the collection of properties.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> of properties for the element.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>Resets the internal state of the <see cref="T:System.Configuration.ConfigurationElement" /> object, including the locks and the properties collections.</summary>
      <param name="parentElement">The parent node of the configuration element.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ResetModified">
      <summary>Resets the value of the <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> method to false when implemented in a derived class.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Writes the contents of this configuration element to the configuration file when implemented in a derived class.</summary>
      <returns>true if any data was actually serialized; otherwise, false.</returns>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> that writes to the configuration file. </param>
      <param name="serializeCollectionKey">true to serialize only the collection key properties; otherwise, false. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The current attribute is locked at a higher configuration level.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary>Writes the outer tags of this configuration element to the configuration file when implemented in a derived class.</summary>
      <returns>true if writing was successful; otherwise, false.</returns>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> that writes to the configuration file. </param>
      <param name="elementName">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> to be written. </param>
      <exception cref="T:System.Exception">The element has multiple child elements. </exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
      <summary>Sets a property to the specified value.</summary>
      <param name="prop">The element property to set. </param>
      <param name="value">The value to assign to the property.</param>
      <param name="ignoreLocks">true if the locks on the property should be ignored; otherwise, false.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Occurs if the element is read-only or <paramref name="ignoreLocks" /> is true but the locks cannot be ignored.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
      <summary>Sets the <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> property for the <see cref="T:System.Configuration.ConfigurationElement" /> object and all subelements.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Modifies the <see cref="T:System.Configuration.ConfigurationElement" /> object to remove all values that should not be saved. </summary>
      <param name="sourceElement">A <see cref="T:System.Configuration.ConfigurationElement" /> at the current level containing a merged view of the properties.</param>
      <param name="parentElement">The parent <see cref="T:System.Configuration.ConfigurationElement" />, or null if this is the top level.</param>
      <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> that determines which property values to include.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollection">
      <summary>Represents a configuration element containing a collection of child elements.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
      <summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</summary>
      <param name="comparer">The <see cref="T:System.Collections.IComparer" /> comparer to use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comparer" /> is null.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
      <summary>Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the add operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class. </summary>
      <returns>The name of the element.</returns>
      <exception cref="T:System.ArgumentException">The selected value starts with the reserved prefix "config" or "lock".</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>Adds a configuration element to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to add. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
      <summary>Adds a configuration element to the configuration element collection.</summary>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to add. </param>
      <param name="throwIfExists">true to throw an exception if the <see cref="T:System.Configuration.ConfigurationElement" /> specified is already contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />; otherwise, false. </param>
      <exception cref="T:System.Exception">The <see cref="T:System.Configuration.ConfigurationElement" /> to add already exists in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> and the <paramref name="throwIfExists" /> parameter is true. </exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary>Adds a configuration element to the configuration element collection.</summary>
      <param name="index">The index location at which to add the specified <see cref="T:System.Configuration.ConfigurationElement" />. </param>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to add. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
      <summary>Removes all configuration element objects from the collection.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration is read-only.- or -A collection item has been locked in a higher-level configuration.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
      <summary>Gets the configuration element at the specified index location.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index.</returns>
      <param name="index">The index location of the <see cref="T:System.Configuration.ConfigurationElement" /> to return. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" /> is less than 0.- or -There is no <see cref="T:System.Configuration.ConfigurationElement" /> at the specified <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
      <summary>Returns the configuration element with the specified key.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key; otherwise, null.</returns>
      <param name="key">The key of the element to return. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
      <summary>Returns an array of the keys for all of the configuration elements contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>An array that contains the keys for all of the <see cref="T:System.Configuration.ConfigurationElement" /> objects contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
      <summary>Gets the key for the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</summary>
      <returns>The key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
      <param name="index">The index location for the <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" /> is less than 0.- or -There is no <see cref="T:System.Configuration.ConfigurationElement" /> at the specified <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
      <summary>The index of the specified <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>The index of the specified <see cref="T:System.Configuration.ConfigurationElement" />; otherwise, -1.</returns>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> for the specified index location. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
      <summary>Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key has been removed from the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>true if the <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key has been removed; otherwise, false. The default is false.</returns>
      <param name="key">The key of the element to check.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
      <summary>Removes a <see cref="T:System.Configuration.ConfigurationElement" /> from the collection.</summary>
      <param name="key">The key of the <see cref="T:System.Configuration.ConfigurationElement" /> to remove. </param>
      <exception cref="T:System.Exception">No <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key exists in the collection, the element has already been removed, or the element cannot be removed because the value of its <see cref="P:System.Configuration.ConfigurationProperty.Type" /> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />. </exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</summary>
      <param name="index">The index location of the <see cref="T:System.Configuration.ConfigurationElement" /> to remove. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration is read-only.- or -<paramref name="index" /> is less than 0 or greater than the number of <see cref="T:System.Configuration.ConfigurationElement" /> objects in the collection.- or -The <see cref="T:System.Configuration.ConfigurationElement" /> object has already been removed.- or -The value of the <see cref="T:System.Configuration.ConfigurationElement" /> object has been locked at a higher level.- or -The <see cref="T:System.Configuration.ConfigurationElement" /> object was inherited.- or -The value of the <see cref="T:System.Configuration.ConfigurationElement" /> object's <see cref="P:System.Configuration.ConfigurationProperty.Type" /> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> or <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
      <summary>Gets or sets the name for the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the clear operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class. </summary>
      <returns>The name of the element.</returns>
      <exception cref="T:System.ArgumentException">The selected value starts with the reserved prefix "config" or "lock".</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
      <summary>Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> of this collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
      <summary>Copies the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to an array.</summary>
      <param name="array">Array to which to copy the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index">Index location at which to begin copying.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.Count">
      <summary>Gets the number of elements in the collection.</summary>
      <returns>The number of elements in the collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <summary>When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>A new <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
      <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement" /> when overridden in a derived class.</summary>
      <returns>A new <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
      <param name="elementName">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> to create. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
      <summary>Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.</summary>
      <returns>The name of the collection; otherwise, an empty string. The default is an empty string.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
      <summary>Gets or sets a value that specifies whether the collection has been cleared.</summary>
      <returns>true if the collection has been cleared; otherwise, false. The default is false.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration is read-only.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
      <summary>Compares the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to the specified object.</summary>
      <returns>true if the object to compare with is equal to the current <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance; otherwise, false. The default is false.</returns>
      <param name="compareTo">The object to compare. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Gets the element key for a specified configuration element when overridden in a derived class.</summary>
      <returns>An <see cref="T:System.Object" /> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" /></returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
      <summary>Gets a unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance.</summary>
      <returns>A unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection" /> current instance.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
      <summary>Indicates whether the specified <see cref="T:System.Configuration.ConfigurationElement" /> exists in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>true if the element exists in the collection; otherwise, false. The default is false.</returns>
      <param name="elementName">The name of the element to verify. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <summary>Gets a value indicating whether the specified <see cref="T:System.Configuration.ConfigurationElement" /> can be removed from the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>true if the specified <see cref="T:System.Configuration.ConfigurationElement" /> can be removed from this <see cref="T:System.Configuration.ConfigurationElementCollection" />; otherwise, false. The default is true.</returns>
      <param name="element">The element to check.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
      <summary>Indicates whether this <see cref="T:System.Configuration.ConfigurationElementCollection" /> has been modified since it was last saved or loaded when overridden in a derived class.</summary>
      <returns>true if any contained element has been modified; otherwise, false</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only.</summary>
      <returns>true if the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Configuration.ConfigurationElementCollection" /> is synchronized; otherwise, false.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Causes the configuration system to throw an exception.</summary>
      <returns>true if the unrecognized element was deserialized successfully; otherwise, false. The default is false.</returns>
      <param name="elementName">The name of the unrecognized element. </param>
      <param name="reader">An input stream that reads XML from the configuration file. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The element specified in <paramref name="elementName" /> is the &lt;clear&gt; element.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementName" /> starts with the reserved prefix "config" or "lock".</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
      <summary>Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the remove operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class. </summary>
      <returns>The name of the element.</returns>
      <exception cref="T:System.ArgumentException">The selected value starts with the reserved prefix "config" or "lock".</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
      <summary>Resets the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to its unmodified state when overridden in a derived class.</summary>
      <param name="parentElement">The <see cref="T:System.Configuration.ConfigurationElement" /> representing the collection parent element, if any; otherwise, null. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
      <summary>Resets the value of the <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> property to false when overridden in a derived class.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Writes the configuration data to an XML element in the configuration file when overridden in a derived class.</summary>
      <returns>true if the <see cref="T:System.Configuration.ConfigurationElementCollection" /> was written to the configuration file successfully.</returns>
      <param name="writer">Output stream that writes XML to the configuration file. </param>
      <param name="serializeCollectionKey">true to serialize the collection key; otherwise, false. </param>
      <exception cref="T:System.ArgumentException">One of the elements in the collection was added or replaced and starts with the reserved prefix "config" or "lock".</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
      <summary>Sets the <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> property for the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object and for all sub-elements.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
      <summary>Gets an object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>An object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to an array.</summary>
      <param name="arr">Array to which to copy this <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index">Index location at which to begin copying.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
      <summary>Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.Configuration.ConfigurationElementCollection" /> will cause an exception to be thrown.</summary>
      <returns>true if an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to this <see cref="T:System.Configuration.ConfigurationElementCollection" /> will cause an exception to be thrown; otherwise, false. </returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Reverses the effect of merging configuration information from different levels of the configuration hierarchy </summary>
      <param name="sourceElement">A <see cref="T:System.Configuration.ConfigurationElement" /> object at the current level containing a merged view of the properties.</param>
      <param name="parentElement">The parent <see cref="T:System.Configuration.ConfigurationElement" /> object of the current element, or null if this is the top level.</param>
      <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> enumerated value that determines which property values to include.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollectionType">
      <summary>Specifies the type of a <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> object.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
      <summary>Collections of this type contain elements that apply to the level at which they are specified, and to all child levels. A child level cannot modify the properties specified by a parent element of this type.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
      <summary>The default type of <see cref="T:System.Configuration.ConfigurationElementCollection" />. Collections of this type contain elements that can be merged across a hierarchy of configuration files. At any particular level within such a hierarchy, add, remove, and clear directives are used to modify any inherited properties and specify new ones.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
      <summary>Same as <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" />, except that this type causes the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object to sort its contents such that inherited elements are listed last.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
      <summary>Same as <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />, except that this type causes the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object to sort its contents such that inherited elements are listed last.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationElementProperty">
      <summary>Specifies the property of a configuration element. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElementProperty" /> class, based on a supplied parameter.</summary>
      <param name="validator">A <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> is null.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementProperty.Validator">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object used to validate the <see cref="T:System.Configuration.ConfigurationElementProperty" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationErrorsException">
      <summary>The current value is not one of the <see cref="P:System.Web.Configuration.PagesSection.EnableSessionState" /> values.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
      <param name="info">The object that holds the information to deserialize.</param>
      <param name="context">Contextual information about the source or destination.</param>
      <exception cref="T:System.InvalidOperationException">The current type is not a <see cref="T:System.Configuration.ConfigurationException" /> or a <see cref="T:System.Configuration.ConfigurationErrorsException" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
      <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
      <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
      <param name="inner">The exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>Initializes a new instance of a <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
      <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
      <param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
      <param name="filename">The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
      <param name="line">The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
      <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
      <param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
      <param name="node">The <see cref="T:System.Xml.XmlNode" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
      <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
      <param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
      <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
      <param name="filename">The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
      <param name="line">The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
      <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
      <param name="node">The <see cref="T:System.Xml.XmlNode" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
      <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
      <summary>Gets a description of why this configuration exception was thrown.</summary>
      <returns>A description of why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> was thrown.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Errors">
      <summary>Gets a collection of errors that detail the reasons this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object that contains errors that identify the reasons this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Filename">
      <summary>Gets the path to the configuration file that caused this configuration exception to be thrown.</summary>
      <returns>The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> to be thrown.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
      <summary>Gets the path to the configuration file from which the internal <see cref="T:System.Xml.XmlNode" /> object was loaded when this configuration exception was thrown.</summary>
      <returns>The path to the configuration file from which the internal <see cref="T:System.Xml.XmlNode" /> object was loaded when this configuration exception was thrown. </returns>
      <param name="node">The <see cref="T:System.Xml.XmlNode" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
      <summary>Gets the path to the configuration file that the internal <see cref="T:System.Xml.XmlReader" /> was reading when this configuration exception was thrown.</summary>
      <returns>The path of the configuration file the internal <see cref="T:System.Xml.XmlReader" /> object was accessing when the exception occurred.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
      <summary>Gets the line number within the configuration file that the internal <see cref="T:System.Xml.XmlNode" /> object represented when this configuration exception was thrown.</summary>
      <returns>The line number within the configuration file that contains the <see cref="T:System.Xml.XmlNode" /> object being parsed when this configuration exception was thrown.</returns>
      <param name="node">The <see cref="T:System.Xml.XmlNode" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
      <summary>Gets the line number within the configuration file that the internal <see cref="T:System.Xml.XmlReader" /> object was processing when this configuration exception was thrown.</summary>
      <returns>The line number within the configuration file that the <see cref="T:System.Xml.XmlReader" /> object was accessing when the exception occurred.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the file name and line number at which this configuration exception occurred.</summary>
      <param name="info">The object that holds the information to be serialized.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Line">
      <summary>Gets the line number within the configuration file at which this configuration exception was thrown.</summary>
      <returns>The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Message">
      <summary>Gets an extended description of why this configuration exception was thrown.</summary>
      <returns>An extended description of why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationFileMap">
      <summary>Defines the configuration file mapping for the machine configuration file. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationFileMap" /> class. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationFileMap" /> class based on the supplied parameter.</summary>
      <param name="machineConfigFilename">The name of the machine configuration file.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.Clone">
      <summary>Creates a copy of the existing <see cref="T:System.Configuration.ConfigurationFileMap" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationFileMap" /> object.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
      <summary>Gets or sets the name of the machine configuration file name.</summary>
      <returns>The machine configuration file name.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocation">
      <summary>Represents a location element within a configuration file.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
      <summary>Creates an instance of a Configuration object.</summary>
      <returns>A Configuration object.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLocation.Path">
      <summary>Gets the relative path to the resource whose configuration settings are represented by this <see cref="T:System.Configuration.ConfigurationLocation" /> object.</summary>
      <returns>The relative path to the resource whose configuration settings are represented by this <see cref="T:System.Configuration.ConfigurationLocation" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocationCollection">
      <summary>Contains a collection of <see cref="T:System.Configuration.ConfigurationLocationCollection" /> objects.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Configuration.ConfigurationLocationCollection" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationLocationCollection" /> at the specified index.</returns>
      <param name="index">The index location of the <see cref="T:System.Configuration.ConfigurationLocationCollection" /> to return.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationLockCollection">
      <summary>Contains a collection of locked configuration objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
      <summary>Locks a configuration object by adding it to the collection.</summary>
      <param name="name">The name of the configuration object.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Occurs when the <paramref name="name" /> does not match an existing configuration object within the collection.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
      <summary>Gets a list of configuration objects contained in the collection.</summary>
      <returns>A comma-delimited string that lists the lock configuration objects in the collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Clear">
      <summary>Clears all configuration objects from the collection.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
      <summary>Verifies whether a specific configuration object is locked.</summary>
      <returns>true if the <see cref="T:System.Configuration.ConfigurationLockCollection" /> contains the specified configuration object; otherwise, false.</returns>
      <param name="name">The name of the configuration object to verify.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Configuration.ConfigurationLockCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.Count">
      <summary>Gets the number of locked configuration objects contained in the collection.</summary>
      <returns>The number of locked configuration objects contained in the collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> object, which is used to iterate through this <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
      <summary>Gets a value specifying whether the collection of locked objects has parent elements.</summary>
      <returns>true if the <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection has parent elements; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
      <summary>Gets a value specifying whether the collection has been modified.</summary>
      <returns>true if the <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection has been modified; otherwise, false.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
      <summary>Verifies whether a specific configuration object is read-only.</summary>
      <returns>true if the specified configuration object in the <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection is read-only; otherwise, false.</returns>
      <param name="name">The name of the configuration object to verify.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The specified configuration object is not in the collection.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
      <summary>Gets a value specifying whether the collection is synchronized.</summary>
      <returns>true if the <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection is synchronized; otherwise, false.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
      <summary>Removes a configuration object from the collection.</summary>
      <param name="name">The name of the configuration object.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Occurs when the <paramref name="name" /> does not match an existing configuration object within the collection.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
      <summary>Locks a set of configuration objects based on the supplied list.</summary>
      <param name="attributeList">A comma-delimited string.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Occurs when an item in the <paramref name="attributeList" /> parameter is not a valid lockable configuration attribute.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
      <summary>Gets an object used to synchronize access to this <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection.</summary>
      <returns>An object used to synchronize access to this <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the entire <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationManager">
      <summary>Provides access to configuration files for client applications. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.AppSettings">
      <summary>Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</summary>
      <returns>Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration. </returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
      <summary>Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</summary>
      <returns>Returns a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration. </returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
      <summary>Retrieves a specified configuration section for the current application's default configuration.</summary>
      <returns>The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or null if the section does not exist.</returns>
      <param name="sectionName">The configuration section path and name.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
      <summary>Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="userLevel">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
      <summary>Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="exePath">The path of the configuration file. The configuration file resides in the same directory as the executable file.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
      <summary>Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
      <summary>Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="fileMap">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</param>
      <param name="userLevel">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <summary>Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="fileMap">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
      <summary>Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</summary>
      <param name="sectionName">The configuration section name or the configuration path and section name of the section to refresh.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationPermission">
      <summary>Provides a permission structure that allows methods or classes to access configuration files. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationPermission" /> class. </summary>
      <param name="state">The permission level to grant.</param>
      <exception cref="T:System.ArgumentException">The value of <paramref name="state" /> is neither <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> nor <see cref="F:System.Security.Permissions.PermissionState.None" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Copy">
      <summary>Returns a new <see cref="T:System.Configuration.ConfigurationPermission" /> object with the same permission level.</summary>
      <returns>A new <see cref="T:System.Configuration.ConfigurationPermission" /> with the same permission level.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reads the value of the permission state from XML.</summary>
      <param name="securityElement">The configuration element from which the permission state is read.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.SecurityElement.Tag" /> for the given <paramref name="securityElement" /> does not equal "IPermission".</exception>
      <exception cref="T:System.ArgumentException">The class attribute of the given <paramref name="securityElement " />equals null.</exception>
      <exception cref="T:System.ArgumentException">The class attribute of the given <paramref name="securityElement" /> is not the type name for <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      <exception cref="T:System.ArgumentException">The version attribute for the given <paramref name="securityElement" /> does not equal 1.</exception>
      <exception cref="T:System.ArgumentException">The unrestricted attribute for the given <paramref name="securityElement" /> is neither true nor false.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
      <summary>Returns the logical intersection between the <see cref="T:System.Configuration.ConfigurationPermission" /> object and a given object that implements the <see cref="T:System.Security.IPermission" /> interface.</summary>
      <returns>The logical intersection between the <see cref="T:System.Configuration.ConfigurationPermission" /> and a given object that implements <see cref="T:System.Security.IPermission" />.</returns>
      <param name="target">The object containing the permissions to perform the intersection with.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not typed as <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Compares the <see cref="T:System.Configuration.ConfigurationPermission" /> object with an object implementing the <see cref="T:System.Security.IPermission" /> interface.</summary>
      <returns>true if the permission state is equal; otherwise, false.</returns>
      <param name="target">The object to compare to.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not typed as <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
      <summary>Indicates whether the permission state for the <see cref="T:System.Configuration.ConfigurationPermission" /> object is the <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> value of the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</summary>
      <returns>true if the permission state for the <see cref="T:System.Configuration.ConfigurationPermission" /> is the <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> value of <see cref="T:System.Security.Permissions.PermissionState" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.ToXml">
      <summary>Returns a <see cref="T:System.Security.SecurityElement" /> object with attribute values based on the current <see cref="T:System.Configuration.ConfigurationPermission" /> object.</summary>
      <returns>A <see cref="T:System.Security.SecurityElement" /> with attribute values based on the current <see cref="T:System.Configuration.ConfigurationPermission" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
      <summary>Returns the logical union of the <see cref="T:System.Configuration.ConfigurationPermission" /> object and an object that implements the <see cref="T:System.Security.IPermission" /> interface.</summary>
      <returns>The logical union of the <see cref="T:System.Configuration.ConfigurationPermission" /> and an object that implements <see cref="T:System.Security.IPermission" />.</returns>
      <param name="target">The object to perform the union with.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not typed as <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationPermissionAttribute">
      <summary>Creates a <see cref="T:System.Configuration.ConfigurationPermission" /> object that either grants or denies the marked target permission to access sections of configuration files.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationPermissionAttribute" /> class.</summary>
      <param name="action">The security action represented by an enumeration member of <see cref="T:System.Security.Permissions.SecurityAction" />. Determines the permission state of the attribute.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
      <summary>Creates and returns an object that implements the <see cref="T:System.Security.IPermission" /> interface.</summary>
      <returns>Returns an object that implements <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationProperty">
      <summary>Represents an attribute or a child of a configuration element. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationProperty" /> class. </summary>
      <param name="name">The name of the configuration entity. </param>
      <param name="type">The type of the configuration entity. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationProperty" /> class. </summary>
      <param name="name">The name of the configuration entity. </param>
      <param name="type">The type of the configuration entity. </param>
      <param name="defaultValue">The default value of the configuration entity. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationProperty" /> class. </summary>
      <param name="name">The name of the configuration entity. </param>
      <param name="type">The type of the configuration entity.</param>
      <param name="defaultValue">The default value of the configuration entity. </param>
      <param name="typeConverter">The type of the converter to apply.</param>
      <param name="validator">The validator to use. </param>
      <param name="options">One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> enumeration values. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationProperty" /> class. </summary>
      <param name="name">The name of the configuration entity. </param>
      <param name="type">The type of the configuration entity. </param>
      <param name="defaultValue">The default value of the configuration entity. </param>
      <param name="typeConverter">The type of the converter to apply.</param>
      <param name="validator">The validator to use. </param>
      <param name="options">One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> enumeration values. </param>
      <param name="description">The description of the configuration entity. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationProperty" /> class. </summary>
      <param name="name">The name of the configuration entity. </param>
      <param name="type">The type of the configuration entity. </param>
      <param name="defaultValue">The default value of the configuration entity. </param>
      <param name="options">One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> enumeration values.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Converter">
      <summary>Gets the <see cref="T:System.ComponentModel.TypeConverter" /> used to convert this <see cref="T:System.Configuration.ConfigurationProperty" /> into an XML representation for writing to the configuration file.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> used to convert this <see cref="T:System.Configuration.ConfigurationProperty" /> into an XML representation for writing to the configuration file.</returns>
      <exception cref="T:System.Exception">This <see cref="T:System.Configuration.ConfigurationProperty" /> cannot be converted. </exception>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
      <summary>Gets the default value for this <see cref="T:System.Configuration.ConfigurationProperty" /> property.</summary>
      <returns>An <see cref="T:System.Object" /> that can be cast to the type specified by the <see cref="P:System.Configuration.ConfigurationProperty.Type" /> property.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Description">
      <summary>Gets the description associated with the <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>A string value that describes the property.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
      <summary>Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.</summary>
      <returns>true if the property requires assembly name transformation; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
      <summary>Gets a value that indicates whether the property is the default collection of an element. </summary>
      <returns>true if the property is the default collection of an element; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsKey">
      <summary>Gets a value indicating whether this <see cref="T:System.Configuration.ConfigurationProperty" /> is the key for the containing <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
      <returns>true if this <see cref="T:System.Configuration.ConfigurationProperty" /> object is the key for the containing element; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsRequired">
      <summary>Gets a value indicating whether this <see cref="T:System.Configuration.ConfigurationProperty" /> is required.</summary>
      <returns>true if the <see cref="T:System.Configuration.ConfigurationProperty" /> is required; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
      <summary>Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.</summary>
      <returns>true if the property requires type-name transformation; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
      <summary>Indicates whether the configuration property's parent configuration section is queried at serialization time to determine whether the configuration property should be serialized into XML.</summary>
      <returns>true if the parent configuration section should be queried; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Name">
      <summary>Gets the name of this <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>The name of the <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Type">
      <summary>Gets the type of this <see cref="T:System.Configuration.ConfigurationProperty" /> object.</summary>
      <returns>A <see cref="T:System.Type" /> representing the type of this <see cref="T:System.Configuration.ConfigurationProperty" /> object.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Validator">
      <summary>Gets the <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />, which is used to validate this <see cref="T:System.Configuration.ConfigurationProperty" /> object.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator, which is used to validate this <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyAttribute">
      <summary>Declaratively instructs the .NET Framework to instantiate a configuration property. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Configuration.ConfigurationPropertyAttribute" /> class.</summary>
      <param name="name">Name of the <see cref="T:System.Configuration.ConfigurationProperty" /> object defined.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
      <summary>Gets or sets the default value for the decorated property.</summary>
      <returns>The object representing the default value of the decorated configuration-element property.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
      <summary>Gets or sets a value indicating whether this is the default property collection for the decorated configuration property. </summary>
      <returns>true if the property represents the default collection of an element; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
      <summary>Gets or sets a value indicating whether this is a key property for the decorated element property.</summary>
      <returns>true if the property is a key property for an element of the collection; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
      <summary>Gets or sets a value indicating whether the decorated element property is required.</summary>
      <returns>true if the property is required; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
      <summary>Gets the name of the decorated configuration-element property.</summary>
      <returns>The name of the decorated configuration-element property.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
      <summary>Gets or sets the <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> for the decorated configuration-element property.</summary>
      <returns>One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> enumeration values associated with the property.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyCollection">
      <summary>Represents a collection of configuration-element properties.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> class. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
      <summary>Adds a configuration property to the collection.</summary>
      <param name="property">The <see cref="T:System.Configuration.ConfigurationProperty" />  to add. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
      <summary>Removes all configuration property objects from the collection.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
      <summary>Specifies whether the configuration property is contained in this collection.</summary>
      <returns>true if the specified <see cref="T:System.Configuration.ConfigurationProperty" /> is contained in the collection; otherwise, false.</returns>
      <param name="name">An identifier for the <see cref="T:System.Configuration.ConfigurationProperty" /> to verify. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
      <summary>Copies this ConfigurationPropertyCollection to an array.</summary>
      <param name="array">Array to which to copy.</param>
      <param name="index">Index at which to begin copying.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
      <summary>Gets the number of properties in the collection.</summary>
      <returns>The number of properties in the collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
      <summary>Gets the <see cref="T:System.Collections.IEnumerator" /> object as it applies to the collection.</summary>
      <returns>The <see cref="T:System.Collections.IEnumerator" /> object as it applies to the collection</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
      <summary>Gets the collection item with the specified name.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationProperty" /> with the specified <paramref name="name" />.</returns>
      <param name="name">The <see cref="T:System.Configuration.ConfigurationProperty" /> to return. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
      <summary>Removes a configuration property from the collection.</summary>
      <returns>true if the specified <see cref="T:System.Configuration.ConfigurationProperty" /> was removed; otherwise, false.</returns>
      <param name="name">The <see cref="T:System.Configuration.ConfigurationProperty" /> to remove. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
      <summary>Gets the object to synchronize access to the collection.</summary>
      <returns>The object to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies this collection to an array.</summary>
      <param name="array">The array to which to copy.</param>
      <param name="index">The index location at which to begin copying.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyOptions">
      <summary>Specifies the options to apply to a property.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.None">
      <summary>Indicates that no option applies to the property.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
      <summary>Indicates that the property is a default collection. </summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
      <summary>Indicates that the property is required. </summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
      <summary>Indicates that the property is a collection key.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
      <summary>Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
      <summary>Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
      <summary>Indicates whether the configuration property's parent configuration section should be queried at serialization time to determine whether the configuration property should be serialized into XML.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSaveMode">
      <summary>Determines which properties are written out to a configuration file.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Modified">
      <summary>Causes only modified properties to be written to the configuration file, even when the value is the same as the inherited value.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
      <summary>Causes only properties that differ from inherited values to be written to the configuration file.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Full">
      <summary>Causes all properties to be written to the configuration file. This is useful mostly for creating information configuration files or moving configuration values from one machine to another.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSection">
      <summary>Represents a section within a configuration file.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationSection" /> class. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
      <summary>Reads XML from the configuration file.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object, which reads from the configuration file. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="reader" /> found no elements in the configuration file.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
      <summary>Returns a custom object when overridden in a derived class.</summary>
      <returns>The object representing the section.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.IsModified">
      <summary>Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.</summary>
      <returns>true if the element has been modified; otherwise, false. </returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ResetModified">
      <summary>Resets the value of the <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> method to false when implemented in a derived class.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationSection.SectionInformation">
      <summary>Gets a <see cref="T:System.Configuration.SectionInformation" /> object that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationSection" /> object. </summary>
      <returns>A <see cref="T:System.Configuration.SectionInformation" /> that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>Creates an XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection" /> object as a single section to write to a file.</summary>
      <returns>An XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection" /> object.</returns>
      <param name="parentElement">The <see cref="T:System.Configuration.ConfigurationElement" /> instance to use as the parent when performing the un-merge.</param>
      <param name="name">The name of the section to create.</param>
      <param name="saveMode">The <see cref="T:System.Configuration.ConfigurationSaveMode" /> instance to use when writing to a string.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>Indicates whether the specified element should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.</summary>
      <returns>true if the <paramref name="element" /> should be serialized; otherwise, false.</returns>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> object that is a candidate for serialization.</param>
      <param name="elementName">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> object as it occurs in XML.</param>
      <param name="targetFramework">The target version of the .NET Framework.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
      <summary>Indicates whether the specified property should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.</summary>
      <returns>true if the <paramref name="property" /> should be serialized; otherwise, false.</returns>
      <param name="property">The <see cref="T:System.Configuration.ConfigurationProperty" /> object that is a candidate for serialization.</param>
      <param name="propertyName">The name of the <see cref="T:System.Configuration.ConfigurationProperty" /> object as it occurs in XML.</param>
      <param name="targetFramework">The target version of the .NET Framework.</param>
      <param name="parentConfigurationElement">The parent element of the property.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>Indicates whether the current <see cref="T:System.Configuration.ConfigurationSection" /> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.</summary>
      <returns>true if the current section should be serialized; otherwise, false.</returns>
      <param name="targetFramework">The target version of the .NET Framework.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionCollection">
      <summary>Represents a collection of related sections within a configuration file.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
      <summary>Adds a <see cref="T:System.Configuration.ConfigurationSection" /> object to the <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
      <param name="name">The name of the section to be added.</param>
      <param name="section">The section to be added.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
      <summary>Clears this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
      <summary>Copies this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object to an array.</summary>
      <param name="array">The array to copy the <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object to.</param>
      <param name="index">The index location at which to begin copying.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="array" /> is less than the value of <see cref="P:System.Configuration.ConfigurationSectionCollection.Count" /> plus <paramref name="index" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Count">
      <summary>Gets the number of sections in this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
      <returns>An integer that represents the number of sections in the collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
      <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection" /> object contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationSection" /> object at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSection" /> object to be returned.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
      <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection" /> object contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationSection" /> object with the specified name.</returns>
      <param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSection" /> object to be returned.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
      <summary>Gets an enumerator that can iterate through this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
      <summary>Gets the key of the specified <see cref="T:System.Configuration.ConfigurationSection" /> object contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
      <returns>The key of the <see cref="T:System.Configuration.ConfigurationSection" /> object at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSection" /> object whose key is to be returned. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Used by the system during serialization.</summary>
      <param name="info">The applicable <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">The applicable <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
      <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection" /> object.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationSection" /> object at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSection" /> object to be returned. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
      <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection" /> object.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationSection" /> object with the specified name.</returns>
      <param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSection" /> object to be returned. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
      <summary>Gets the keys to all <see cref="T:System.Configuration.ConfigurationSection" /> objects contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> object that contains the keys of all sections in this collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
      <summary>Removes the specified <see cref="T:System.Configuration.ConfigurationSection" /> object from this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
      <param name="name">The name of the section to be removed. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
      <summary>Removes the specified <see cref="T:System.Configuration.ConfigurationSection" /> object from this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
      <param name="index">The index of the section to be removed. </param>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroup">
      <summary>Represents a group of related sections within a configuration file.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> class. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <summary>Forces the declaration for this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
      <summary>Forces the declaration for this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
      <param name="force">true if the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object must be written to the file; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object is the root section group.- or -The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object has a location.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
      <summary>Gets a value that indicates whether this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object declaration is required. </summary>
      <returns>true if this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> declaration is required; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
      <summary>Gets a value that indicates whether this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object is declared.</summary>
      <returns>true if this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> is declared; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Name">
      <summary>Gets the name property of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
      <returns>The name property of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
      <summary>Gets the section group name associated with this <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>The section group name of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object that contains all the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> objects that are children of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object that contains all the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> objects that are children of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object that contains all of <see cref="T:System.Configuration.ConfigurationSection" /> objects within this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object that contains all the <see cref="T:System.Configuration.ConfigurationSection" /> objects within this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>Indicates whether the current <see cref="T:System.Configuration.ConfigurationSectionGroup" /> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.</summary>
      <returns>true if the current section group should be serialized; otherwise, false.</returns>
      <param name="targetFramework">The target version of the .NET Framework.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Type">
      <summary>Gets or sets the type for this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
      <returns>The type of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object is the root section group.- or -The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object has a location.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The section or group is already defined at another level.</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroupCollection">
      <summary>Represents a collection of <see cref="T:System.Configuration.ConfigurationSectionGroup" /> objects.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
      <summary>Adds a <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
      <param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be added.</param>
      <param name="sectionGroup">The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be added.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
      <summary>Clears the collection.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
      <summary>Copies this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object to an array.</summary>
      <param name="array">The array to copy the object to.</param>
      <param name="index">The index location at which to begin copying.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="array" /> is less than the value of <see cref="P:System.Configuration.ConfigurationSectionGroupCollection.Count" /> plus <paramref name="index" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
      <summary>Gets the number of section groups in the collection.</summary>
      <returns>An integer that represents the number of section groups in the collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
      <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object contained in the collection.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be returned. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
      <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object from the collection.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object with the specified name.</returns>
      <param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be returned. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
      <summary>Gets an enumerator that can iterate through the <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
      <summary>Gets the key of the specified <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object contained in this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
      <returns>The key of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object at the specified index.</returns>
      <param name="index">The index of the section group whose key is to be returned. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Used by the system during serialization.</summary>
      <param name="info">The applicable <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">The applicable <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object whose index is specified from the collection.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object at the specified index.In C#, this property is the indexer for the <see cref="T:System.Configuration.ConfigurationSectionCollection" /> class. </returns>
      <param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be returned. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object whose name is specified from the collection.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object with the specified name.In C#, this property is the indexer for the <see cref="T:System.Configuration.ConfigurationSectionCollection" /> class. </returns>
      <param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be returned. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
      <summary>Gets the keys to all <see cref="T:System.Configuration.ConfigurationSectionGroup" /> objects contained in this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> object that contains the names of all section groups in this collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object whose name is specified from this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
      <param name="name">The name of the section group to be removed. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object whose index is specified from this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
      <param name="index">The index of the section group to be removed. </param>
    </member>
    <member name="T:System.Configuration.ConfigurationUserLevel">
      <summary>Used to specify which configuration file is to be represented by the Configuration object.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.None">
      <summary>Get the <see cref="T:System.Configuration.Configuration" /> that applies to all users.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
      <summary>Get the roaming <see cref="T:System.Configuration.Configuration" /> that applies to the current user.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
      <summary>Get the local <see cref="T:System.Configuration.Configuration" /> that applies to the current user.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorAttribute">
      <summary>Serves as the base class for the <see cref="N:System.Configuration" /> validator attribute types.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> class.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> class using the specified validator type.</summary>
      <param name="validator">The validator type to use when creating an instance of <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="validator" /> is not derived from <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
      <summary>Gets the validator attribute instance.</summary>
      <returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
      <summary>Gets the type of the validator attribute.</summary>
      <returns>The <see cref="T:System.Type" /> of the current validator attribute instance.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorBase">
      <summary>Acts as a base class for deriving a validation class so that a value of an object can be verified.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Configuration.ConfigurationValidatorBase" /> class.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
      <summary>Determines whether an object can be validated based on type.</summary>
      <returns>true if the <paramref name="type" /> parameter value matches the expected type; otherwise, false. </returns>
      <param name="type">The object type.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
      <summary>Determines whether the value of an object is valid. </summary>
      <param name="value">The object value.</param>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettings">
      <summary>Represents a single, named connection string in the connection strings configuration file section.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings" /> class.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings" /> class.</summary>
      <param name="name">The name of the connection string.</param>
      <param name="connectionString">The connection string.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object.</summary>
      <param name="name">The name of the connection string.</param>
      <param name="connectionString">The connection string.</param>
      <param name="providerName">The name of the provider to use with the connection string.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
      <summary>Gets or sets the connection string.</summary>
      <returns>The string value assigned to the <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString" /> property.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.Name">
      <summary>Gets or sets the <see cref="T:System.Configuration.ConnectionStringSettings" /> name.</summary>
      <returns>The string value assigned to the <see cref="P:System.Configuration.ConnectionStringSettings.Name" /> property.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
      <summary>Gets or sets the provider name property.</summary>
      <returns>Gets or sets the <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName" /> property.</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.ToString">
      <summary>Returns a string representation of the object.</summary>
      <returns>A string representation of the object.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettingsCollection">
      <summary>Contains a collection of <see cref="T:System.Configuration.ConnectionStringSettings" /> objects.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> class. </summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
      <summary>Adds a <see cref="T:System.Configuration.ConnectionStringSettings" /> object to the collection.</summary>
      <param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings" /> object to add to the collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
      <summary>Removes all the <see cref="T:System.Configuration.ConnectionStringSettings" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
      <summary>Returns the collection index of the passed <see cref="T:System.Configuration.ConnectionStringSettings" /> object.</summary>
      <returns>The collection index of the specified <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</returns>
      <param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
      <summary>Gets or sets the connection string at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Configuration.ConnectionStringSettings" /> object at the specified index.</returns>
      <param name="index">The index of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Configuration.ConnectionStringSettings" /> object with the specified name in the collection.</summary>
      <returns>The <see cref="T:System.Configuration.ConnectionStringSettings" /> object with the specified name; otherwise, null.</returns>
      <param name="name">The name of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
      <summary>Removes the specified <see cref="T:System.Configuration.ConnectionStringSettings" /> object from the collection.</summary>
      <param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
      <summary>Removes the specified <see cref="T:System.Configuration.ConnectionStringSettings" /> object from the collection.</summary>
      <param name="name">The name of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Configuration.ConnectionStringSettings" /> object at the specified index in the collection.</summary>
      <param name="index">The index of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
    </member>
    <member name="T:System.Configuration.ConnectionStringsSection">
      <summary>Provides programmatic access to the connection strings configuration-file section. </summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConnectionStringsSection" /> class.</summary>
    </member>
    <member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
      <summary>Gets a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> collection of <see cref="T:System.Configuration.ConnectionStringSettings" /> objects.</summary>
      <returns>A <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> collection of <see cref="T:System.Configuration.ConnectionStringSettings" /> objects.</returns>
    </member>
    <member name="T:System.Configuration.ContextInformation">
      <summary>Encapsulates the context information that is associated with a <see cref="T:System.Configuration.ConfigurationElement" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
      <summary>Provides an object containing configuration-section information based on the specified section name.</summary>
      <returns>An object containing the specified section within the configuration.</returns>
      <param name="sectionName">The name of the configuration section.</param>
    </member>
    <member name="P:System.Configuration.ContextInformation.HostingContext">
      <summary>Gets the context of the environment where the configuration property is being evaluated.</summary>
      <returns>An object specifying the environment where the configuration property is being evaluated.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.IsMachineLevel">
      <summary>Gets a value specifying whether the configuration property is being evaluated at the machine configuration level.</summary>
      <returns>true if the configuration property is being evaluated at the machine configuration level; otherwise, false.</returns>
    </member>
    <member name="T:System.Configuration.DefaultSection">
      <summary>Represents a basic configuration-section handler that exposes the configuration section's XML for both read and write access.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.DefaultSection" /> class. </summary>
    </member>
    <member name="T:System.Configuration.DefaultValidator">
      <summary>Provides validation of an object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.DefaultValidator" /> class. </summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
      <summary>Determines whether an object can be validated, based on type.</summary>
      <returns>true for all types being validated. </returns>
      <param name="type">The object type.</param>
    </member>
    <member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
      <summary>Determines whether the value of an object is valid. </summary>
      <param name="value">The object value.</param>
    </member>
    <member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
      <summary>Provides a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object that uses the Windows data protection API (DPAPI) to encrypt and decrypt configuration data.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> class using default settings.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Decrypts the passed <see cref="T:System.Xml.XmlNode" /> object.</summary>
      <returns>A decrypted <see cref="T:System.Xml.XmlNode" /> object.</returns>
      <param name="encryptedNode">The <see cref="T:System.Xml.XmlNode" /> object to decrypt. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="encryptedNode" /> does not have <see cref="P:System.Xml.XmlNode.Name" /> set to "EncryptedData" and <see cref="T:System.Xml.XmlNodeType" /> set to <see cref="F:System.Xml.XmlNodeType.Element" />.- or -<paramref name="encryptedNode" /> does not have a child node named "CipherData" with a child node named "CipherValue".- or -The child node named "CipherData" is an empty node.</exception>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Encrypts the passed <see cref="T:System.Xml.XmlNode" /> object.</summary>
      <returns>An encrypted <see cref="T:System.Xml.XmlNode" /> object.</returns>
      <param name="node">The <see cref="T:System.Xml.XmlNode" /> object to encrypt. </param>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the provider with default settings.</summary>
      <param name="name">The provider name to use for the object.</param>
      <param name="configurationValues">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> collection of values to use when initializing the object.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> contains an unrecognized configuration setting.</exception>
    </member>
    <member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
      <summary>Gets a value that indicates whether the <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> object is using machine-specific or user-account-specific protection.</summary>
      <returns>true if the <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> is using machine-specific protection; false if it is using user-account-specific protection.</returns>
    </member>
    <member name="T:System.Configuration.ElementInformation">
      <summary>Contains meta-information about an individual element within the configuration. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Configuration.ElementInformation.Errors">
      <summary>Gets the errors for the associated element and subelements</summary>
      <returns>The collection containing the errors for the associated element and subelements</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsCollection">
      <summary>Gets a value indicating whether the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is a <see cref="T:System.Configuration.ConfigurationElementCollection" /> collection.</summary>
      <returns>true if the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is a <see cref="T:System.Configuration.ConfigurationElementCollection" /> collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsLocked">
      <summary>Gets a value that indicates whether the associated <see cref="T:System.Configuration.ConfigurationElement" /> object cannot be modified.</summary>
      <returns>true if the associated <see cref="T:System.Configuration.ConfigurationElement" /> object cannot be modified; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsPresent">
      <summary>Gets a value indicating whether the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is in the configuration file.</summary>
      <returns>true if the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is in the configuration file; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.LineNumber">
      <summary>Gets the line number in the configuration file where the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is defined.</summary>
      <returns>The line number in the configuration file where the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is defined.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Properties">
      <summary>Gets a <see cref="T:System.Configuration.PropertyInformationCollection" /> collection of the properties in the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.PropertyInformationCollection" /> collection of the properties in the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Source">
      <summary>Gets the source file where the associated <see cref="T:System.Configuration.ConfigurationElement" /> object originated.</summary>
      <returns>The source file where the associated <see cref="T:System.Configuration.ConfigurationElement" /> object originated.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Type">
      <summary>Gets the type of the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
      <returns>The type of the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Validator">
      <summary>Gets the object used to validate the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
      <returns>The object used to validate the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</returns>
    </member>
    <member name="T:System.Configuration.ExeConfigurationFileMap">
      <summary>Defines the configuration file mapping for an .exe application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ExeConfigurationFileMap" /> class.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ExeConfigurationFileMap" /> class by using the specified machine configuration file name.</summary>
      <param name="machineConfigFileName">The name of the machine configuration file that includes the complete physical path (for example, c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config).</param>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
      <summary>Creates a copy of the existing <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object.</summary>
      <returns>An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
      <summary>Gets or sets the name of the configuration file.</summary>
      <returns>The configuration file name.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
      <summary>Gets or sets the name of the configuration file for the local user.</summary>
      <returns>The configuration file name.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
      <summary>Gets or sets the name of the configuration file for the roaming user.</summary>
      <returns>The configuration file name.</returns>
    </member>
    <member name="T:System.Configuration.ExeContext">
      <summary>Manages the path context for the current application. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Configuration.ExeContext.ExePath">
      <summary>Gets the current path for the application.</summary>
      <returns>A string value containing the current path.</returns>
    </member>
    <member name="P:System.Configuration.ExeContext.UserLevel">
      <summary>Gets an object representing the path level of the current application.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationUserLevel" /> object representing the path level of the current application.</returns>
    </member>
    <member name="T:System.Configuration.GenericEnumConverter">
      <summary>Converts between a string and an enumeration type. </summary>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.GenericEnumConverter" /> class.</summary>
      <param name="typeEnum">The enumeration type to convert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeEnum" /> is null.</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to an <see cref="T:System.Enum" /> type.</summary>
      <returns>The <see cref="T:System.Enum" /> type that represents the <paramref name="data" /> parameter.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="data">The <see cref="T:System.String" /> object to convert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> is null or an empty string ("").- or -<paramref name="data" /> starts with a numeric character.- or -<paramref name="data" /> includes white space.</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts an <see cref="T:System.Enum" /> type to a <see cref="T:System.String" /> value.</summary>
      <returns>The <see cref="T:System.String" /> that represents the <paramref name="value" /> parameter.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="value">The value to convert to.</param>
      <param name="type">The type to convert to.</param>
    </member>
    <member name="T:System.Configuration.IgnoreSection">
      <summary>Provides a wrapper type definition for configuration sections that are not handled by the <see cref="N:System.Configuration" /> types.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.IgnoreSection" /> class.</summary>
    </member>
    <member name="T:System.Configuration.InfiniteIntConverter">
      <summary>Converts between a string and the standard infinite or integer value.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.InfiniteIntConverter" /> class.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to an <see cref="T:System.Int32" />.</summary>
      <returns>The <see cref="F:System.Int32.MaxValue" />, if the <paramref name="data" /> parameter is the <see cref="T:System.String" /> "infinite"; otherwise, the <see cref="T:System.Int32" /> representing the <paramref name="data" /> parameter integer value.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="data">The <see cref="T:System.String" /> object to convert.</param>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts an <see cref="T:System.Int32" />.to a <see cref="T:System.String" />.</summary>
      <returns>The <see cref="T:System.String" /> "infinite" if the <paramref name="value" /> is <see cref="F:System.Int32.MaxValue" />; otherwise, the <see cref="T:System.String" /> representing the <paramref name="value" /> parameter.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="value">The value to convert to.</param>
      <param name="type">The type to convert to.</param>
    </member>
    <member name="T:System.Configuration.InfiniteTimeSpanConverter">
      <summary>Converts between a string and the standard infinite <see cref="T:System.TimeSpan" /> value.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.InfiniteTimeSpanConverter" /> class.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>The <see cref="F:System.TimeSpan.MaxValue" />, if the <paramref name="data" /> parameter is the <see cref="T:System.String" /> infinite; otherwise, the <see cref="T:System.TimeSpan" /> representing the <paramref name="data" /> parameter in minutes.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="data">The <see cref="T:System.String" /> object to convert.</param>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</summary>
      <returns>The <see cref="T:System.String" /> "infinite", if the <paramref name="value" /> parameter is <see cref="F:System.TimeSpan.MaxValue" />; otherwise, the <see cref="T:System.String" /> representing the <paramref name="value" /> parameter in minutes.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> used during object conversion.</param>
      <param name="value">The value to convert.</param>
      <param name="type">The conversion type.</param>
    </member>
    <member name="T:System.Configuration.IntegerValidator">
      <summary>Provides validation of an <see cref="T:System.Int32" /> value.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class. </summary>
      <param name="minValue">An <see cref="T:System.Int32" /> object that specifies the minimum value.</param>
      <param name="maxValue">An <see cref="T:System.Int32" /> object that specifies the maximum value.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class. </summary>
      <param name="minValue">An <see cref="T:System.Int32" /> object that specifies the minimum value.</param>
      <param name="maxValue">An <see cref="T:System.Int32" /> object that specifies the maximum value.</param>
      <param name="rangeIsExclusive">true to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class. </summary>
      <param name="minValue">An <see cref="T:System.Int32" /> object that specifies the minimum length of the integer value.</param>
      <param name="maxValue">An <see cref="T:System.Int32" /> object that specifies the maximum length of the integer value.</param>
      <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</param>
      <param name="resolution">An <see cref="T:System.Int32" /> object that specifies a value that must be matched.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" /> is less than 0.- or -<paramref name="minValue" /> is greater than <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
      <summary>Determines whether the type of the object can be validated.</summary>
      <returns>true if the <paramref name="type" /> parameter matches an <see cref="T:System.Int32" /> value; otherwise, false. </returns>
      <param name="type">The type of the object.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
      <summary>Determines whether the value of an object is valid.</summary>
      <param name="value">The value to be validated.</param>
    </member>
    <member name="T:System.Configuration.IntegerValidatorAttribute">
      <summary>Declaratively instructs the .NET Framework to perform integer validation on a configuration property. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Configuration.IntegerValidatorAttribute" /> class.</summary>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
      <summary>Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> and <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" /> property values.</summary>
      <returns>true if the value must be excluded; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
      <summary>Gets or sets the maximum value allowed for the property.</summary>
      <returns>An integer that indicates the allowed maximum value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is less than <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
      <summary>Gets or sets the minimum value allowed for the property.</summary>
      <returns>An integer that indicates the allowed minimum value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is greater than <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
      <summary>Gets an instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationCollection">
      <summary>Contains a collection of <see cref="T:System.Configuration.KeyValueConfigurationElement" /> objects. </summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> class.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
      <summary>Adds a <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object to the collection based on the supplied parameters.</summary>
      <param name="keyValue">A <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object to the collection based on the supplied parameters.</summary>
      <param name="key">A string specifying the key.</param>
      <param name="value">A string specifying the value.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
      <summary>Gets the keys to all items contained in the <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> collection.</summary>
      <returns>A string array.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
      <summary>Clears the <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> collection.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <summary>When overridden in a derived class, the <see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" /> method creates a new <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object.</summary>
      <returns>A new <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Gets the element key for a specified configuration element when overridden in a derived class.</summary>
      <returns>An object that acts as the key for the specified <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
      <param name="element">The <see cref="T:System.Configuration.KeyValueConfigurationElement" /> to which the key should be returned.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object based on the supplied parameter.</summary>
      <returns>A configuration element, or null if the key does not exist in the collection.</returns>
      <param name="key">The key of the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> contained in the collection.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
      <summary>Gets a collection of configuration properties.</summary>
      <returns>A collection of configuration properties.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object from the collection.</summary>
      <param name="key">A string specifying the <paramref name="key" />.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
      <summary>Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object to the <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> collection will cause an exception to be thrown.</summary>
      <returns>true if an attempt to add a duplicate <see cref="T:System.Configuration.KeyValueConfigurationElement" /> to the <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> will cause an exception to be thrown; otherwise, false. </returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationElement">
      <summary>Represents a configuration element that contains a key/value pair. </summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> class based on the supplied parameters.</summary>
      <param name="key">The key of the <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
      <param name="value">The value of the <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.Init">
      <summary>Sets the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object to its initial state.</summary>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Key">
      <summary>Gets the key of the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object.</summary>
      <returns>The key of the <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
      <summary>Gets the collection of properties. </summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> of properties for the element.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Value">
      <summary>Gets or sets the value of the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object.</summary>
      <returns>The value of the <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.LongValidator">
      <summary>Provides validation of an <see cref="T:System.Int64" /> value.</summary>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.LongValidator" /> class. </summary>
      <param name="minValue">An <see cref="T:System.Int64" /> value that specifies the minimum length of the long value.</param>
      <param name="maxValue">An <see cref="T:System.Int64" /> value that specifies the maximum length of the long value.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.LongValidator" /> class. </summary>
      <param name="minValue">An <see cref="T:System.Int64" /> value that specifies the minimum length of the long value.</param>
      <param name="maxValue">An <see cref="T:System.Int64" /> value that specifies the maximum length of the long value.</param>
      <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.LongValidator" /> class. </summary>
      <param name="minValue">An <see cref="T:System.Int64" /> value that specifies the minimum length of the long value.</param>
      <param name="maxValue">An <see cref="T:System.Int64" /> value that specifies the maximum length of the long value.</param>
      <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</param>
      <param name="resolution">An <see cref="T:System.Int64" /> value that specifies a specific value that must be matched.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" /> is equal to or less than 0.- or -<paramref name="maxValue" /> is less than <paramref name="minValue" />.</exception>
    </member>
    <member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
      <summary>Determines whether the type of the object can be validated.</summary>
      <returns>true if the <paramref name="type" /> parameter matches an <see cref="T:System.Int64" /> value; otherwise, false. </returns>
      <param name="type">The type of object.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.Validate(System.Object)">
      <summary>Determines whether the value of an object is valid.</summary>
      <param name="value">The value of an object.</param>
    </member>
    <member name="T:System.Configuration.LongValidatorAttribute">
      <summary>Declaratively instructs the .NET Framework to perform long-integer validation on a configuration property. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.LongValidatorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.LongValidatorAttribute" /> class.</summary>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
      <summary>Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> and <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" /> property values.</summary>
      <returns>true if the value must be excluded; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
      <summary>Gets or sets the maximum value allowed for the property.</summary>
      <returns>A long integer that indicates the allowed maximum value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is less than <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MinValue">
      <summary>Gets or sets the minimum value allowed for the property.</summary>
      <returns>An integer that indicates the allowed minimum value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is greater than <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
      <summary>Gets an instance of the <see cref="T:System.Configuration.LongValidator" /> class.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationCollection">
      <summary>Contains a collection of <see cref="T:System.Configuration.NameValueConfigurationElement" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.NameValueConfigurationCollection" /> class.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
      <summary>Adds a <see cref="T:System.Configuration.NameValueConfigurationElement" /> object to the collection.</summary>
      <param name="nameValue">A  <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
      <summary>Gets the keys to all items contained in the <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
      <returns>A string array.</returns>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
      <summary>Clears the <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object based on the supplied parameter.</summary>
      <returns>A <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</returns>
      <param name="name">The name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> contained in the collection.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
      <summary>Removes a <see cref="T:System.Configuration.NameValueConfigurationElement" /> object from the collection based on the provided parameter.</summary>
      <param name="nameValue">A <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Configuration.NameValueConfigurationElement" /> object from the collection based on the provided parameter.</summary>
      <param name="name">The name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationElement">
      <summary>A configuration element that contains a <see cref="T:System.String" /> name and <see cref="T:System.String" /> value. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> class based on supplied parameters.</summary>
      <param name="name">The name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
      <param name="value">The value of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Name">
      <summary>Gets the name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</summary>
      <returns>The name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Value">
      <summary>Gets or sets the value of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</summary>
      <returns>The value of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</returns>
    </member>
    <member name="T:System.Configuration.OverrideMode">
      <summary>Specifies the override behavior of a configuration element for configuration elements in child directories.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Inherit">
      <summary>The configuration setting of the element or group will be overridden by configuration settings that are in child directories if explicitly allowed by a parent element of the current configuration element or group. Permission to override is specified by using the OverrideMode attribute.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Allow">
      <summary>The configuration setting of the element or group can be overridden by configuration settings that are in child directories.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Deny">
      <summary>The configuration setting of the element or group cannot be overridden by configuration settings that are in child directories.</summary>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidator">
      <summary>Provides validation of a <see cref="T:System.TimeSpan" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> class. </summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
      <summary>Determines whether the object type can be validated.</summary>
      <returns>true if the <paramref name="type" /> parameter matches a <see cref="T:System.TimeSpan" /> object; otherwise, false. </returns>
      <param name="type">The object type.</param>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
      <summary>Determines whether the value of an object is valid.</summary>
      <param name="value">The value of an object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> cannot be resolved as a positive <see cref="T:System.TimeSpan" /> value.</exception>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <summary>Declaratively instructs the .NET Framework to perform time validation on a configuration property. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute" /> class. </summary>
    </member>
    <member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
      <summary>Gets an instance of the <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> class.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance. </returns>
    </member>
    <member name="T:System.Configuration.PropertyInformation">
      <summary>Contains meta-information on an individual property within the configuration. This type cannot be inherited.</summary>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Converter">
      <summary>Gets the <see cref="T:System.ComponentModel.TypeConverter" /> object related to the configuration attribute.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> object.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.DefaultValue">
      <summary>Gets an object containing the default value related to a configuration attribute.</summary>
      <returns>An object containing the default value of the configuration attribute.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Description">
      <summary>Gets the description of the object that corresponds to a configuration attribute.</summary>
      <returns>The description of the configuration attribute.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsKey">
      <summary>Gets a value specifying whether the configuration attribute is a key.</summary>
      <returns>true if the configuration attribute is a key; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsLocked">
      <summary>Gets a value specifying whether the configuration attribute is locked.</summary>
      <returns>true if the <see cref="T:System.Configuration.PropertyInformation" /> object is locked; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsModified">
      <summary>Gets a value specifying whether the configuration attribute has been modified.</summary>
      <returns>true if the <see cref="T:System.Configuration.PropertyInformation" /> object has been modified; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsRequired">
      <summary>Gets a value specifying whether the configuration attribute is required.</summary>
      <returns>true if the <see cref="T:System.Configuration.PropertyInformation" /> object is required; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.LineNumber">
      <summary>Gets the line number in the configuration file related to the configuration attribute.</summary>
      <returns>A line number of the configuration file.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Name">
      <summary>Gets the name of the object that corresponds to a configuration attribute.</summary>
      <returns>The name of the <see cref="T:System.Configuration.PropertyInformation" /> object.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Source">
      <summary>Gets the source file that corresponds to a configuration attribute.</summary>
      <returns>The source file of the <see cref="T:System.Configuration.PropertyInformation" /> object.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Type">
      <summary>Gets the <see cref="T:System.Type" /> of the object that corresponds to a configuration attribute.</summary>
      <returns>The <see cref="T:System.Type" /> of the <see cref="T:System.Configuration.PropertyInformation" /> object.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Validator">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object related to the configuration attribute.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Value">
      <summary>Gets or sets an object containing the value related to a configuration attribute.</summary>
      <returns>An object containing the value for the <see cref="T:System.Configuration.PropertyInformation" /> object.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.ValueOrigin">
      <summary>Gets a <see cref="T:System.Configuration.PropertyValueOrigin" /> object related to the configuration attribute. </summary>
      <returns>A <see cref="T:System.Configuration.PropertyValueOrigin" /> object.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformationCollection">
      <summary>Contains a collection of <see cref="T:System.Configuration.PropertyInformation" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Configuration.PropertyInformationCollection" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Configuration.PropertyInformationCollection" /> collection. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Array.Length" /> property of <paramref name="array" /> is less than <see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> + <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> object, which is used to iterate through this <see cref="T:System.Configuration.PropertyInformationCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object, which is used to iterate through this <see cref="T:System.Configuration.PropertyInformationCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the <see cref="T:System.Configuration.PropertyInformationCollection" /> instance.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Configuration.PropertyInformationCollection" /> instance.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Configuration.PropertyInformationCollection" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Configuration.PropertyInformation" /> object in the collection, based on the specified property name.</summary>
      <returns>A <see cref="T:System.Configuration.PropertyInformation" /> object.</returns>
      <param name="propertyName">The name of the configuration attribute contained in the <see cref="T:System.Configuration.PropertyInformationCollection" />object.</param>
    </member>
    <member name="T:System.Configuration.PropertyValueOrigin">
      <summary>Specifies the level in the configuration hierarchy where a configuration property value originated.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Default">
      <summary>The configuration property value originates from the <see cref="P:System.Configuration.ConfigurationProperty.DefaultValue" /> property.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Inherited">
      <summary>The configuration property value is inherited from a parent level in the configuration.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.SetHere">
      <summary>The configuration property value is defined at the current level of the hierarchy.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfiguration">
      <summary>Provides access to the protected-configuration providers for the current application's configuration file. </summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
      <summary>The name of the data protection provider.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
      <summary>Gets the name of the default protected-configuration provider.</summary>
      <returns>The name of the default protected-configuration provider.</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
      <summary>The name of the protected data section.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.Providers">
      <summary>Gets a collection of the installed protected-configuration providers.</summary>
      <returns>A <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> collection of installed <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> objects.</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
      <summary>The name of the RSA provider.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProvider">
      <summary>Is the base class to create providers for encrypting and decrypting protected-configuration data.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> class using default settings.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Decrypts the passed <see cref="T:System.Xml.XmlNode" /> object from a configuration file.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> object containing decrypted data.</returns>
      <param name="encryptedNode">The <see cref="T:System.Xml.XmlNode" /> object to decrypt.</param>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Encrypts the passed <see cref="T:System.Xml.XmlNode" /> object from a configuration file.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> object containing encrypted data.</returns>
      <param name="node">The <see cref="T:System.Xml.XmlNode" /> object to encrypt.</param>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
      <summary>Provides a collection of <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> objects.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> class using default settings.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Adds a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object to the collection.</summary>
      <param name="provider">A <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> is not a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object.</exception>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object to add already exists in the collection.- or -The collection is read-only.</exception>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
      <summary>Gets a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object in the collection with the specified name.</summary>
      <returns>The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object with the specified name, or null if there is no object with that name.</returns>
      <param name="name">The name of a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object in the collection.</param>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationSection">
      <summary>Provides programmatic access to the configProtectedData configuration section. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedConfigurationSection" /> class using default settings.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
      <summary>Gets or sets the name of the default <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object in the <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> collection property.</summary>
      <returns>The name of the default <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object in the <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> collection property. </returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
      <summary>Gets a <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection of all the <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> objects in all participating configuration files.</summary>
      <returns>A <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection of all the <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> objects in all participating configuration files. </returns>
    </member>
    <member name="T:System.Configuration.ProtectedProviderSettings">
      <summary>Represents a group of configuration elements that configure the providers for the &lt;configProtectedData&gt; configuration section.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedProviderSettings" /> class. </summary>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> collection that represents the properties of the providers for the protected configuration data.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that represents the properties of the providers for the protected configuration data.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Providers">
      <summary>Gets a collection of <see cref="T:System.Configuration.ProviderSettings" /> objects that represent the properties of the providers for the protected configuration data.</summary>
      <returns>A collection of <see cref="T:System.Configuration.ProviderSettings" /> objects that represent the properties of the providers for the protected configuration data.</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettings">
      <summary>Represents the configuration elements associated with a provider.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProviderSettings" /> class. </summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProviderSettings" /> class. </summary>
      <param name="name">The name of the provider to configure settings for.</param>
      <param name="type">The type of the provider to configure settings for.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Name">
      <summary>Gets or sets the name of the provider configured by this class.</summary>
      <returns>The name of the provider.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Parameters">
      <summary>Gets a collection of user-defined parameters for the provider.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of parameters for the provider.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Type">
      <summary>Gets or sets the type of the provider configured by this class.</summary>
      <returns>The fully qualified namespace and class name for the type of provider configured by this <see cref="T:System.Configuration.ProviderSettings" /> instance.</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettingsCollection">
      <summary>Represents a collection of <see cref="T:System.Configuration.ProviderSettings" /> objects.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProviderSettingsCollection" /> class. </summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
      <summary>Adds a <see cref="T:System.Configuration.ProviderSettings" /> object to the collection.</summary>
      <param name="provider">The <see cref="T:System.Configuration.ProviderSettings" /> object to add.</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Clear">
      <summary>Clears the collection.</summary>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
      <summary>Gets or sets a value at the specified index in the <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection.</summary>
      <returns>The specified <see cref="T:System.Configuration.ProviderSettings" />.</returns>
      <param name="index">The index of the <see cref="T:System.Configuration.ProviderSettings" /> to return.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
      <summary>Gets an item from the collection. </summary>
      <returns>A <see cref="T:System.Configuration.ProviderSettings" /> object contained in the collection.</returns>
      <param name="key">A string reference to the <see cref="T:System.Configuration.ProviderSettings" /> object within the collection.</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
      <summary>Removes an element from the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Configuration.ProviderSettings" /> object to remove.</param>
    </member>
    <member name="T:System.Configuration.RegexStringValidator">
      <summary>Provides validation of a string based on the rules provided by a regular expression.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.RegexStringValidator" /> class. </summary>
      <param name="regex">A string that specifies a regular expression.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="regex" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
      <summary>Determines whether the type of the object can be validated.</summary>
      <returns>true if the <paramref name="type" /> parameter matches a string; otherwise, false. </returns>
      <param name="type">The type of object.</param>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
      <summary>Determines whether the value of an object is valid.</summary>
      <param name="value">The value of an object.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not conform to the parameters of the <see cref="T:System.Text.RegularExpressions.Regex" /> class.</exception>
    </member>
    <member name="T:System.Configuration.RegexStringValidatorAttribute">
      <summary>Declaratively instructs the .NET Framework to perform string validation on a configuration property using a regular expression. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.RegexStringValidatorAttribute" /> object.</summary>
      <param name="regex">The string to use for regular expression validation.</param>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
      <summary>Gets the string used to perform regular-expression validation.</summary>
      <returns>The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.</returns>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
      <summary>Gets an instance of the <see cref="T:System.Configuration.RegexStringValidator" /> class.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</returns>
    </member>
    <member name="T:System.Configuration.RsaProtectedConfigurationProvider">
      <summary>Provides a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> instance that uses RSA encryption to encrypt and decrypt configuration data.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> class. </summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
      <summary>Adds a key to the RSA key container.</summary>
      <param name="keySize">The size of the key to add.</param>
      <param name="exportable">true to indicate that the key is exportable; otherwise, false.</param>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
      <summary>Gets the name of the Windows cryptography API (crypto API) cryptographic service provider (CSP).</summary>
      <returns>The name of the CryptoAPI cryptographic service provider.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Decrypts the XML node passed to it.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> object containing decrypted data.</returns>
      <param name="encryptedNode">The <see cref="T:System.Xml.XmlNode" /> to decrypt.</param>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
      <summary>Removes a key from the RSA key container.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Encrypts the XML node passed to it.</summary>
      <returns>An encrypted <see cref="T:System.Xml.XmlNode" /> object.</returns>
      <param name="node">The <see cref="T:System.Xml.XmlNode" /> to encrypt.</param>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
      <summary>Exports an RSA key from the key container.</summary>
      <param name="xmlFileName">The file name and path to export the key to.</param>
      <param name="includePrivateParameters">true to indicate that private parameters are exported; otherwise, false.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
      <exception cref="T:System.IO.IOException">An error occurred while opening the file. </exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> specified a file that is read-only.-or- This operation is not supported on the current platform.-or- <paramref name="path" /> specified a directory.-or- The caller does not have the required permission. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file specified in <paramref name="path" /> was not found. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> is in an invalid format. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
      <summary>Imports an RSA key into the key container.</summary>
      <param name="xmlFileName">The file name and path to import the key from.</param>
      <param name="exportable">true to indicate that the key is exportable; otherwise, false.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
      <exception cref="T:System.IO.IOException">An error occurred while opening the file. </exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> specified a file that is write-only.-or- This operation is not supported on the current platform.-or- <paramref name="path" /> specified a directory.-or- The caller does not have the required permission. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file specified in <paramref name="path" /> was not found. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> is in an invalid format. </exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the provider with default settings.</summary>
      <param name="name">The provider name to use for the object.</param>
      <param name="configurationValues">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> collection of values to use when initializing the object.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> includes one or more unrecognized values.</exception>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
      <summary>Gets the name of the key container.</summary>
      <returns>The name of the key container.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
      <summary>Gets the public key used by the provider.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.RSAParameters" /> object that contains the public key used by the provider.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
      <summary>Gets a value that indicates whether the <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> object is using the machine key container.</summary>
      <returns>true if the <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> object is using the machine key container; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
      <summary>Gets a value that indicates whether the provider is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data.</summary>
      <returns>true if the <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> object is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data; otherwise, false.</returns>
    </member>
    <member name="T:System.Configuration.SectionInformation">
      <summary>Contains metadata about an individual section within the configuration hierarchy. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowDefinition">
      <summary>Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be defined. </summary>
      <returns>A value that indicates where in the configuration file hierarchy the associated <see cref="T:System.Configuration.ConfigurationSection" /> object can be declared.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
      <summary>Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be declared.</summary>
      <returns>A value that indicates where in the configuration file hierarchy the associated <see cref="T:System.Configuration.ConfigurationSection" /> object can be declared for .exe files.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowLocation">
      <summary>Gets or sets a value that indicates whether the configuration section allows the location attribute.</summary>
      <returns>true if the location attribute is allowed; otherwise, false. The default is true.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowOverride">
      <summary>Gets or sets a value that indicates whether the associated configuration section can be overridden by lower-level configuration files.</summary>
      <returns>true if the section can be overridden; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ConfigSource">
      <summary>Gets or sets the name of the include file in which the associated configuration section is defined, if such a file exists.</summary>
      <returns>The name of the include file in which the associated <see cref="T:System.Configuration.ConfigurationSection" /> is defined, if such a file exists; otherwise, an empty string ("").</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration">
      <summary>Forces the associated configuration section to appear in the configuration file.</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
      <summary>Forces the associated configuration section to appear in the configuration file, or removes an existing section from the configuration file.</summary>
      <param name="force">true if the associated section should be written in the configuration file; otherwise, false.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="force" /> is true and the associated section cannot be exported to the child configuration file, or it is undeclared.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.ForceSave">
      <summary>Gets or sets a value that indicates whether the associated configuration section will be saved even if it has not been modified.</summary>
      <returns>true if the associated <see cref="T:System.Configuration.ConfigurationSection" /> object will be saved even if it has not been modified; otherwise, false. The default is false.NoteIf the configuration file is saved (even if there are no modifications), ASP.NET restarts the application.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetParentSection">
      <summary>Gets the configuration section that contains the configuration section associated with this object.</summary>
      <returns>The configuration section that contains the <see cref="T:System.Configuration.ConfigurationSection" /> that is associated with this <see cref="T:System.Configuration.SectionInformation" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The method is invoked from a parent section.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetRawXml">
      <summary>Returns an XML node object that represents the associated configuration-section object.</summary>
      <returns>The XML representation for this configuration section.</returns>
      <exception cref="T:System.InvalidOperationException">This configuration object is locked and cannot be edited.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
      <summary>Gets or sets a value that indicates whether the settings that are specified in the associated configuration section are inherited by applications that reside in a subdirectory of the relevant application.</summary>
      <returns>true if the settings specified in this <see cref="T:System.Configuration.ConfigurationSection" /> object are inherited by child applications; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
      <summary>Gets a value that indicates whether the configuration section must be declared in the configuration file.</summary>
      <returns>true if the associated <see cref="T:System.Configuration.ConfigurationSection" /> object must be declared in the configuration file; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclared">
      <summary>Gets a value that indicates whether the associated configuration section is declared in the configuration file.</summary>
      <returns>true if this <see cref="T:System.Configuration.ConfigurationSection" /> is declared in the configuration file; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsLocked">
      <summary>Gets a value that indicates whether the associated configuration section is locked.</summary>
      <returns>true if the section is locked; otherwise, false. </returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsProtected">
      <summary>Gets a value that indicates whether the associated configuration section is protected.</summary>
      <returns>true if this <see cref="T:System.Configuration.ConfigurationSection" /> is protected; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Name">
      <summary>Gets the name of the associated configuration section.</summary>
      <returns>The complete name of the configuration section.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideMode">
      <summary>Gets or sets the <see cref="T:System.Configuration.OverrideMode" /> enumeration value that specifies whether the associated configuration section can be overridden by child configuration files.</summary>
      <returns>One of the <see cref="T:System.Configuration.OverrideMode" /> enumeration values.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">An attempt was made to change both the <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> and <see cref="P:System.Configuration.SectionInformation.OverrideMode" /> properties, which is not supported for compatibility reasons. </exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeDefault">
      <summary>Gets or sets a value that specifies the default override behavior of a configuration section by child configuration files.</summary>
      <returns>One of the <see cref="T:System.Configuration.OverrideMode" /> enumeration values.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The override behavior is specified in a parent configuration section.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeEffective">
      <summary>Gets the override behavior of a configuration section that is in turn based on whether child configuration files can lock the configuration section. </summary>
      <returns>One of the <see cref="T:System.Configuration.OverrideMode" /> enumeration values.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ProtectionProvider">
      <summary>Gets the protected configuration provider for the associated configuration section.</summary>
      <returns>The protected configuration provider for this <see cref="T:System.Configuration.ConfigurationSection" /> object.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
      <summary>Marks a configuration section for protection. </summary>
      <param name="protectionProvider">The name of the protection provider to use.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> property is set to false.- or -The target section is already a protected data section.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RequirePermission">
      <summary>Gets a value that indicates whether the associated configuration section requires access permissions.</summary>
      <returns>true if the requirePermission attribute is set to true; otherwise, false. The default is true.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
      <summary>Gets or sets a value that specifies whether a change in an external configuration include file requires an application restart.</summary>
      <returns>true if a change in an external configuration include file requires an application restart; otherwise, false. The default is true.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.RevertToParent">
      <summary>Causes the associated configuration section to inherit all its values from the parent section.</summary>
      <exception cref="T:System.InvalidOperationException">This method cannot be called outside editing mode.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.SectionName">
      <summary>Gets the name of the associated configuration section.</summary>
      <returns>The name of the associated <see cref="T:System.Configuration.ConfigurationSection" /> object.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
      <summary>Sets the object to an XML representation of the associated configuration section within the configuration file.</summary>
      <param name="rawXml">The XML to use.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rawXml" /> is null.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.Type">
      <summary>Gets or sets the section class name.</summary>
      <returns>The name of the class that is associated with this <see cref="T:System.Configuration.ConfigurationSection" /> section.</returns>
      <exception cref="T:System.ArgumentException">The selected value is null or an empty string ("").</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.UnprotectSection">
      <summary>Removes the protected configuration encryption from the associated configuration section.</summary>
    </member>
    <member name="T:System.Configuration.StringValidator">
      <summary>Provides validation of a string.</summary>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on a supplied parameter.</summary>
      <param name="minLength">An integer that specifies the minimum length of the string value.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</summary>
      <param name="minLength">An integer that specifies the minimum length of the string value.</param>
      <param name="maxLength">An integer that specifies the maximum length of the string value.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</summary>
      <param name="minLength">An integer that specifies the minimum length of the string value.</param>
      <param name="maxLength">An integer that specifies the maximum length of the string value.</param>
      <param name="invalidCharacters">A string that represents invalid characters. </param>
    </member>
    <member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
      <summary>Determines whether an object can be validated based on type.</summary>
      <returns>true if the <paramref name="type" /> parameter matches a string; otherwise, false. </returns>
      <param name="type">The object type.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.Validate(System.Object)">
      <summary>Determines whether the value of an object is valid. </summary>
      <param name="value">The object value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is less than <paramref name="minValue" /> or greater than <paramref name="maxValue" /> as defined in the constructor.- or -<paramref name="value" /> contains invalid characters.</exception>
    </member>
    <member name="T:System.Configuration.StringValidatorAttribute">
      <summary>Declaratively instructs the .NET Framework to perform string validation on a configuration property. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.StringValidatorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.StringValidatorAttribute" /> class.</summary>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
      <summary>Gets or sets the invalid characters for the property.</summary>
      <returns>The string that contains the set of characters that are not allowed for the property.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
      <summary>Gets or sets the maximum length allowed for the string to assign to the property.</summary>
      <returns>An integer that indicates the maximum allowed length for the string to assign to the property.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is less than <see cref="P:System.Configuration.StringValidatorAttribute.MinLength" />.</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MinLength">
      <summary>Gets or sets the minimum allowed value for the string to assign to the property.</summary>
      <returns>An integer that indicates the allowed minimum length for the string to assign to the property.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is greater than <see cref="P:System.Configuration.StringValidatorAttribute.MaxLength" />.</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
      <summary>Gets an instance of the <see cref="T:System.Configuration.StringValidator" /> class.</summary>
      <returns>A current <see cref="T:System.Configuration.StringValidator" /> settings in a <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</returns>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidator">
      <summary>Validates that an object is a derived class of a specified type.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.SubclassTypeValidator" /> class. </summary>
      <param name="baseClass">The base class to validate against.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseClass" /> is null.</exception>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
      <summary>Determines whether an object can be validated based on type.</summary>
      <returns>true if the <paramref name="type" /> parameter matches a type that can be validated; otherwise, false. </returns>
      <param name="type">The object type.</param>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
      <summary>Determines whether the value of an object is valid. </summary>
      <param name="value">The object value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not of a <see cref="T:System.Type" /> that can be derived from <paramref name="baseClass" /> as defined in the constructor.</exception>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidatorAttribute">
      <summary>Declaratively instructs the .NET Framework to perform validation on a configuration property. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.SubclassTypeValidatorAttribute" /> class. </summary>
      <param name="baseClass">The base class type.</param>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
      <summary>Gets the base type of the object being validated.</summary>
      <returns>The base type of the object being validated.</returns>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
      <summary>Gets the validator attribute instance.</summary>
      <returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase" /> instance.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesConverter">
      <summary>Converts a time span expressed in minutes. </summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanMinutesConverter" /> class.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> representing the <paramref name="data" /> parameter in minutes.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="data">The <see cref="T:System.String" /> object to convert.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />. </summary>
      <returns>The <see cref="T:System.String" /> representing the <paramref name="value" /> parameter in minutes.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="value">The value to convert to.</param>
      <param name="type">The type to convert to.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <summary>Converts a <see cref="T:System.TimeSpan" /> expressed in minutes or as a standard infinite time span.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" /> class.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>The <see cref="F:System.TimeSpan.MaxValue" />, if the <paramref name="data" /> parameter is the <see cref="T:System.String" /> "infinite"; otherwise, the <see cref="T:System.TimeSpan" /> representing the <paramref name="data" /> parameter in minutes.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="data">The <see cref="T:System.String" /> object to convert.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</summary>
      <returns>The <see cref="T:System.String" /> "infinite", if the <paramref name="value" /> parameter is <see cref="F:System.TimeSpan.MaxValue" />; otherwise, the <see cref="T:System.String" /> representing the <paramref name="value" /> parameter in minutes.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="value">The value to convert.</param>
      <param name="type">The conversion type.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsConverter">
      <summary>Converts a time span expressed in seconds. </summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanSecondsConverter" /> class.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> representing the <paramref name="data" /> parameter in seconds.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="data">The <see cref="T:System.String" /> object to convert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> cannot be parsed as an integer value.</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</summary>
      <returns>The <see cref="T:System.String" /> that represents the <paramref name="value" /> parameter in minutes.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="value">The value to convert to.</param>
      <param name="type">The type to convert to.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <summary>Converts a <see cref="T:System.TimeSpan" /> expressed in seconds or as a standard infinite time span.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" /> class.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>The <see cref="F:System.TimeSpan.MaxValue" />, if the <paramref name="data" /> parameter is the <see cref="T:System.String" /> "infinite"; otherwise, the <see cref="T:System.TimeSpan" /> representing the <paramref name="data" /> parameter in seconds.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="data">The <see cref="T:System.String" /> object to convert.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.TimeSpan" /> to a. <see cref="T:System.String" />.</summary>
      <returns>The <see cref="T:System.String" /> "infinite", if the <paramref name="value" /> parameter is <see cref="F:System.TimeSpan.MaxValue" />; otherwise, the <see cref="T:System.String" /> representing the <paramref name="value" /> parameter in seconds.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="value">The value to convert.</param>
      <param name="type">The conversion type.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidator">
      <summary>Provides validation of a <see cref="T:System.TimeSpan" /> object.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanValidator" /> class, based on supplied parameters.</summary>
      <param name="minValue">A <see cref="T:System.TimeSpan" /> object that specifies the minimum time allowed to pass validation.</param>
      <param name="maxValue">A <see cref="T:System.TimeSpan" /> object that specifies the maximum time allowed to pass validation.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanValidator" /> class, based on supplied parameters.</summary>
      <param name="minValue">A <see cref="T:System.TimeSpan" /> object that specifies the minimum time allowed to pass validation.</param>
      <param name="maxValue">A <see cref="T:System.TimeSpan" /> object that specifies the maximum time allowed to pass validation.</param>
      <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanValidator" /> class, based on supplied parameters.</summary>
      <param name="minValue">A <see cref="T:System.TimeSpan" /> object that specifies the minimum time allowed to pass validation.</param>
      <param name="maxValue">A <see cref="T:System.TimeSpan" /> object that specifies the maximum time allowed to pass validation.</param>
      <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</param>
      <param name="resolutionInSeconds">An <see cref="T:System.Int64" /> value that specifies a number of seconds. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolutionInSeconds" /> is less than 0.- or -<paramref name="minValue" /> is greater than <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
      <summary>Determines whether the type of the object can be validated.</summary>
      <returns>true if the <paramref name="type" /> parameter matches a <see cref="T:System.TimeSpan" /> value; otherwise, false. </returns>
      <param name="type">The type of the object.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
      <summary>Determines whether the value of an object is valid.</summary>
      <param name="value">The value of an object.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidatorAttribute">
      <summary>Declaratively instructs the .NET Framework to perform time validation on a configuration property. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanValidatorAttribute" /> class.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
      <summary>Gets or sets a value that indicates whether to include or exclude the integers in the range as defined by <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" /> and <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" />.</summary>
      <returns>true if the value must be excluded; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
      <summary>Gets the absolute maximum <see cref="T:System.TimeSpan" /> value.</summary>
      <returns>The allowed maximum <see cref="T:System.TimeSpan" /> value. </returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
      <summary>Gets or sets the relative maximum <see cref="T:System.TimeSpan" /> value.</summary>
      <returns>The allowed maximum <see cref="T:System.TimeSpan" /> value. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value represents less than <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
      <summary>Gets the absolute minimum <see cref="T:System.TimeSpan" /> value.</summary>
      <returns>The allowed minimum <see cref="T:System.TimeSpan" /> value. </returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
      <summary>Gets or sets the relative minimum <see cref="T:System.TimeSpan" /> value.</summary>
      <returns>The minimum allowed <see cref="T:System.TimeSpan" /> value. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value represents more than <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
      <summary>Gets the absolute maximum value allowed.</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
      <summary>Gets the absolute minimum value allowed.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
      <summary>Gets an instance of the <see cref="T:System.Configuration.TimeSpanValidator" /> class.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance. </returns>
    </member>
    <member name="T:System.Configuration.TypeNameConverter">
      <summary>Converts between type and string values. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TypeNameConverter" /> class.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> object to a <see cref="T:System.Type" /> object.</summary>
      <returns>The <see cref="T:System.Type" /> that represents the <paramref name="data" /> parameter.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="data">The <see cref="T:System.String" /> object to convert.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Type" /> value cannot be resolved.</exception>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.Type" /> object to a <see cref="T:System.String" /> object.</summary>
      <returns>The <see cref="T:System.String" /> that represents the <paramref name="value" /> parameter. </returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="value">The value to convert to.</param>
      <param name="type">The type to convert to.</param>
    </member>
    <member name="T:System.Configuration.ValidatorCallback">
      <summary>Represents a method to be called after the validation of an object.</summary>
      <param name="value">The callback method.</param>
    </member>
    <member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
      <summary>Converts a string to its canonical format. </summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter" /> class.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to canonical form.</summary>
      <returns>An object representing the converted value.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="data">The <see cref="T:System.String" /> object to convert.</param>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.String" /> to canonical form.</summary>
      <returns>An object representing the converted value.</returns>
      <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
      <param name="value">The value to convert to.</param>
      <param name="type">The type to convert to.</param>
    </member>
    <member name="T:System.Configuration.Internal.DelegatingConfigHost">
      <summary>Delegates all members of the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> interface to another instance of a host.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Internal.DelegatingConfigHost" /> class.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>Creates a new configuration context.</summary>
      <returns>A <see cref="T:System.Object" /> representing a new configuration context.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
      <param name="locationSubPath">A string representing a location subpath.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>Creates a deprecated configuration context.</summary>
      <returns>A <see cref="T:System.Object" /> representing a deprecated configuration context.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Decrypts an encrypted configuration section.</summary>
      <returns>A string representing a decrypted configuration section.</returns>
      <param name="encryptedXml">An encrypted section of a configuration file.</param>
      <param name="protectionProvider">A <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object.</param>
      <param name="protectedConfigSection">A <see cref="T:System.Configuration.ProtectedConfigurationSection" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
      <summary>Deletes the <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</summary>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Encrypts a section of a configuration object.</summary>
      <returns>A string representing an encrypted section of the configuration object.</returns>
      <param name="clearTextXml">A section of the configuration that is not encrypted.</param>
      <param name="protectionProvider">A <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object.</param>
      <param name="protectedConfigSection">A <see cref="T:System.Configuration.ProtectedConfigurationSection" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>Returns a configuration path based on a location subpath.</summary>
      <returns>A string representing a configuration path.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
      <param name="locationSubPath">A string representing a location subpath.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>Returns a <see cref="T:System.Type" /> representing the type of the configuration.</summary>
      <returns>A <see cref="T:System.Type" /> representing the type of the configuration.</returns>
      <param name="typeName">A string representing the configuration type.</param>
      <param name="throwOnError">true if an exception should be thrown if an error is encountered; false if an exception should not be thrown if an error is encountered.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)">
      <summary>Returns a string representing the type name of the configuration object.</summary>
      <returns>A string representing the type name of the configuration object.</returns>
      <param name="t">A <see cref="T:System.Type" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>Sets the specified permission set if available within the host object.</summary>
      <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
      <param name="permissionSet">A <see cref="T:System.Security.PermissionSet" /> object.</param>
      <param name="isHostReady">true if the host has finished initialization; otherwise, false.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
      <summary>Returns the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</summary>
      <returns>A string representing the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>Returns the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration source.</summary>
      <returns>A string representing the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration source.</returns>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
      <param name="configSource">A string representing the configuration source.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
      <summary>Returns a <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> object representing the version of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</summary>
      <returns>A <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> object representing the version of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</returns>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
      <summary>Gets or sets the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate">
      <summary>Instructs the host to impersonate and returns an <see cref="T:System.IDisposable" /> object required internally by the .NET Framework.</summary>
      <returns>An <see cref="T:System.IDisposable" /> value.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Initializes the configuration host.</summary>
      <param name="configRoot">An <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</param>
      <param name="hostInitParams">A parameter object containing the values used for initializing the configuration host.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Initializes the host for configuration.</summary>
      <param name="locationSubPath">A string representing a location subpath (passed by reference).</param>
      <param name="configPath">A string representing the path to a configuration file.</param>
      <param name="locationConfigPath">The location configuration path.</param>
      <param name="configRoot">The configuration root element.</param>
      <param name="hostInitConfigurationParams">A parameter object representing the parameters used to initialize the host.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
      <summary>Returns a value indicating whether the configuration is above the application configuration in the configuration hierarchy.</summary>
      <returns>true if the configuration is above the application configuration in the configuration hierarchy; otherwise, false.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)">
      <summary>Returns a value indicating whether a configuration record is required for the host configuration initialization.</summary>
      <returns>true if a configuration record is required for the host configuration initialization; otherwise, false.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>Restricts or allows definitions in the host configuration. </summary>
      <returns>true if the grant or restriction of definitions in the host configuration was successful; otherwise, false.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
      <param name="allowDefinition">The <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> object.</param>
      <param name="allowExeDefinition">The <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)">
      <summary>Returns a value indicating whether the file path used by a <see cref="T:System.IO.Stream" /> object to read a configuration file is a valid path.</summary>
      <returns>true if the path used by a <see cref="T:System.IO.Stream" /> object to read a configuration file is a valid path; otherwise, false.</returns>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> attribute to disable implicit link demands.</summary>
      <returns>true if the configuration section requires a fully trusted code access security level and does not allow the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> attribute to disable implicit link demands; otherwise, false.</returns>
      <param name="configRecord">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Returns a value indicating whether the initialization of a configuration object is considered delayed.</summary>
      <returns>true if the initialization of a configuration object is considered delayed; otherwise, false.</returns>
      <param name="configRecord">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
      <summary>Returns a value indicating whether the configuration object supports a location tag.</summary>
      <returns>true if the configuration object supports a location tag; otherwise, false.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote">
      <summary>Gets a value indicating whether the configuration is remote.</summary>
      <returns>true if the configuration is remote; otherwise, false.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)">
      <summary>Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.</summary>
      <returns>true if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, false.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
      <summary>Returns a value indicating whether the configuration path is trusted.</summary>
      <returns>true if the configuration path is trusted; otherwise, false.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
      <summary>Opens a <see cref="T:System.IO.Stream" /> object to read a configuration file.</summary>
      <returns>Returns the <see cref="T:System.IO.Stream" /> object specified by <paramref name="streamName" />.</returns>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>Opens a <see cref="T:System.IO.Stream" /> object to read a configuration file.</summary>
      <returns>Returns the <see cref="T:System.IO.Stream" /> object specified by <paramref name="streamName" />.</returns>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
      <param name="assertPermissions">true to assert permissions; otherwise, false.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>Opens a <see cref="T:System.IO.Stream" /> object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a <see cref="T:System.IO.Stream" /> object to be designated as a template for copying file attributes.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
      <param name="templateStreamName">The name of a <see cref="T:System.IO.Stream" /> object from which file attributes are to be copied as a template.</param>
      <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object (passed by reference).</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>Opens a <see cref="T:System.IO.Stream" /> object for writing to a configuration file. Allows a <see cref="T:System.IO.Stream" /> object to be designated as a template for copying file attributes.</summary>
      <returns>Returns the <see cref="T:System.IO.Stream" /> object specified by the <paramref name="streamName" /> parameter.</returns>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
      <param name="templateStreamName">The name of a <see cref="T:System.IO.Stream" /> object from which file attributes are to be copied as a template.</param>
      <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file (passed by reference).</param>
      <param name="assertPermissions">true to assert permissions; otherwise, false.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
      <summary>Returns a value indicating whether the entire configuration file could be read by a designated <see cref="T:System.IO.Stream" /> object.</summary>
      <returns>true if the entire configuration file could be read by the <see cref="T:System.IO.Stream" /> object designated by <paramref name="streamName" />; otherwise, false.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
      <summary>Instructs the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to read a designated section of its associated configuration file.</summary>
      <returns>true if a section of the configuration file designated by the <paramref name="sectionGroupName" /> and <paramref name="sectionName" /> parameters can be read by a <see cref="T:System.IO.Stream" /> object; otherwise, false.</returns>
      <param name="sectionGroupName">A string representing the name of a section group in the configuration file.</param>
      <param name="sectionName">A string representing the name of a section in the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Indicates that a new configuration record requires a complete initialization.</summary>
      <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Instructs the host to monitor an associated <see cref="T:System.IO.Stream" /> object for changes in a configuration file.</summary>
      <returns>An <see cref="T:System.Object" /> instance containing changed configuration settings.</returns>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
      <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object to receive the returned data representing the changes in the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Instructs the host object to stop monitoring an associated <see cref="T:System.IO.Stream" /> object for changes in a configuration file.</summary>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
      <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
      <summary>Gets a value indicating whether the host configuration supports change notifications.</summary>
      <returns>true if the host supports change notifications; otherwise, false. </returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
      <summary>Gets a value indicating whether the host configuration supports location tags.</summary>
      <returns>true if the host supports location tags; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
      <summary>Gets a value indicating whether the host configuration has path support.</summary>
      <returns>true if the host configuration has path support; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
      <summary>Gets a value indicating whether the host configuration supports refresh.</summary>
      <returns>true if the host configuration supports refresh; otherwise, false.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Verifies that a configuration definition is allowed for a configuration record.</summary>
      <param name="configPath">A string representing the path to a configuration file.</param>
      <param name="allowDefinition">An <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> object.</param>
      <param name="allowExeDefinition">A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object</param>
      <param name="errorInfo">An <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>Indicates that all writing to the configuration file has completed.</summary>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
      <param name="success">true if writing to the configuration file completed successfully; otherwise, false.</param>
      <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.</summary>
      <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
      <param name="success">true to indicate that writing was completed successfully; otherwise, false.</param>
      <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
      <param name="assertPermissions">true to assert permissions; otherwise, false.</param>
    </member>
    <member name="T:System.Configuration.Internal.IConfigErrorInfo">
      <summary>Defines an interface used by the .NET Framework to support creating error configuration records.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
      <summary>Gets a string specifying the file name related to the configuration details.</summary>
      <returns>A string specifying a filename.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
      <summary>Gets an integer specifying the line number related to the configuration details.</summary>
      <returns>An integer specifying a line number.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigSystem">
      <summary>Defines an interface used by the .NET Framework to support the initialization of configuration properties.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Host">
      <summary>Gets the configuration host.</summary>
      <returns>An <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object that is used by the .NET Framework to initialize application configuration properties.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
      <summary>Initializes a configuration object.</summary>
      <param name="typeConfigHost">The type of configuration host.</param>
      <param name="hostInitParams">An array of configuration host parameters.</param>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Root">
      <summary>Gets the root of the configuration hierarchy.</summary>
      <returns>An <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerHelper">
      <summary>Defines an interface used by the .NET Framework to support configuration management.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigurationManagerHelper.EnsureNetConfigLoaded">
      <summary>Ensures that the networking configuration is loaded.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
      <summary>Defines an interface used by the .NET Framework to initialize configuration properties.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
      <summary>Gets the configuration file name related to the application path.</summary>
      <returns>A string value representing a configuration file name.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
      <summary>Gets the local configuration directory of the application based on the entry assembly.</summary>
      <returns>A string representing the local configuration directory.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigPath">
      <summary>Gets the local configuration path of the application based on the entry assembly.</summary>
      <returns>A string value representing the local configuration path of the application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
      <summary>Gets the product name of the application based on the entry assembly.</summary>
      <returns>A string value representing the product name of the application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
      <summary>Gets the product version of the application based on the entry assembly.</summary>
      <returns>A string value representing the product version of the application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
      <summary>Gets the roaming configuration directory of the application based on the entry assembly.</summary>
      <returns>A string value representing the roaming configuration directory of the application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigPath">
      <summary>Gets the roaming user's configuration path based on the application's entry assembly.</summary>
      <returns>A string value representing the roaming user's configuration path.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.MachineConfigPath">
      <summary>Gets the configuration path for the Machine.config file.</summary>
      <returns>A string value representing the path of the Machine.config file.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
      <summary>Gets a value representing the configuration system's status.</summary>
      <returns>true if the configuration system is in the process of being initialized; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
      <summary>Gets a value that specifies whether user configuration settings are supported.</summary>
      <returns>true if the configuration system supports user configuration settings; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
      <summary>Gets the name of the file used to store user configuration settings.</summary>
      <returns>A string specifying the name of the file used to store user configuration.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigClientHost">
      <summary>Defines interfaces that allow the internal .NET Framework infrastructure to customize configuration.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath">
      <summary>Returns the path to the application configuration file. </summary>
      <returns>A string representing the path to the application configuration file.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath">
      <summary>Returns a string representing the path to the known local user configuration file.</summary>
      <returns>A string representing the path to the known local user configuration file.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
      <summary>Returns a string representing the path to the known roaming user configuration file.</summary>
      <returns>A string representing the path to the known roaming user configuration file.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
      <summary>Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path. </summary>
      <returns>true if a string representing a configuration path is the same as a path to the application configuration file; false if a string representing a configuration path is not the same as a path to the application configuration file. </returns>
      <param name="configPath">A string representing the path to the application configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
      <summary>Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user. </summary>
      <returns>true if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, false.</returns>
      <param name="configPath">A string representing the path to the application configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
      <summary>Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.</summary>
      <returns>true if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, false.</returns>
      <param name="configPath">A string representing the path to an application configuration file.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigConfigurationFactory">
      <summary>Defines the interfaces used by the internal design time API to create a <see cref="T:System.Configuration.Configuration" /> object.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.Create(System.Type,System.Object[])">
      <summary>Creates and initializes a <see cref="T:System.Configuration.Configuration" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="typeConfigHost">The <see cref="T:System.Type" /> of the <see cref="T:System.Configuration.Configuration" /> object to be created.</param>
      <param name="hostInitConfigurationParams">A parameter array of <see cref="T:System.Object" /> that contains the parameters to be applied to the created <see cref="T:System.Configuration.Configuration" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Normalizes a location subpath of a path to a configuration file.</summary>
      <returns>A normalized subpath string.</returns>
      <param name="subPath">A string representing the path to the configuration file.</param>
      <param name="errorInfo">An instance of <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> or null.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigHost">
      <summary>Defines interfaces used by internal .NET structures to initialize application configuration properties.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>Creates and returns a context object for a <see cref="T:System.Configuration.ConfigurationElement" /> of an application configuration.</summary>
      <returns>A context object for a <see cref="T:System.Configuration.ConfigurationElement" /> object of an application configuration.</returns>
      <param name="configPath">A string representing the path of the application configuration file.</param>
      <param name="locationSubPath">A string representing a subpath location of the configuration element.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>Creates and returns a deprecated context object of the application configuration.</summary>
      <returns>A deprecated context object of the application configuration.</returns>
      <param name="configPath">A string representing a path to an application configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Decrypts an encrypted configuration section and returns it as a string.</summary>
      <returns>A decrypted configuration section as a string.</returns>
      <param name="encryptedXml">An encrypted XML string representing a configuration section.</param>
      <param name="protectionProvider">The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object.</param>
      <param name="protectedConfigSection">The <see cref="T:System.Configuration.ProtectedConfigurationSection" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
      <summary>Deletes the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the application configuration file.</summary>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Encrypts a configuration section and returns it as a string.</summary>
      <returns>An encrypted configuration section represented as a string.</returns>
      <param name="clearTextXml">An XML string representing a configuration section to encrypt.</param>
      <param name="protectionProvider">The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object.</param>
      <param name="protectedConfigSection">The <see cref="T:System.Configuration.ProtectedConfigurationSection" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>Returns the complete path to an application configuration file based on the location subpath.</summary>
      <returns>A string representing the complete path to an application configuration file.</returns>
      <param name="configPath">A string representing the path of the application configuration file.</param>
      <param name="locationSubPath">The subpath location of the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>Returns a <see cref="T:System.Type" /> object representing the type of the configuration object.</summary>
      <returns>A <see cref="T:System.Type" /> object representing the type of the configuration object.</returns>
      <param name="typeName">The type name</param>
      <param name="throwOnError">true to throw an exception if an error occurs; otherwise, false</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
      <summary>Returns a string representing a type name from the <see cref="T:System.Type" /> object representing the type of the configuration.</summary>
      <returns>A string representing the type name from a <see cref="T:System.Type" /> object representing the type of the configuration.</returns>
      <param name="t">A <see cref="T:System.Type" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>Associates the configuration with a <see cref="T:System.Security.PermissionSet" /> object.</summary>
      <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
      <param name="permissionSet">The <see cref="T:System.Security.PermissionSet" /> object to associate with the configuration.</param>
      <param name="isHostReady">true to indicate the configuration host is has completed building associated permissions; otherwise, false.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
      <summary>Returns a string representing the configuration file name associated with the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</summary>
      <returns>A string representing the configuration file name associated with the <see cref="T:System.IO.Stream" /> I/O tasks on the configuration file.</returns>
      <param name="configPath">A string representing the path of the application configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>Returns a string representing the configuration file name associated with the <see cref="T:System.IO.Stream" /> object performing I/O tasks on a remote configuration file.</summary>
      <returns>A string representing the configuration file name associated with the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</returns>
      <param name="streamName">A string representing the configuration file name associated with the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
      <param name="configSource">A string representing a path to a remote configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
      <summary>Returns the version of the <see cref="T:System.IO.Stream" /> object associated with configuration file.</summary>
      <returns>The version of the <see cref="T:System.IO.Stream" /> object associated with configuration file.</returns>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
      <summary>Instructs the host to impersonate and returns an <see cref="T:System.IDisposable" /> object required by the internal .NET structure.</summary>
      <returns>An <see cref="T:System.IDisposable" /> value.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Initializes a configuration host.</summary>
      <param name="configRoot">The configuration root object.</param>
      <param name="hostInitParams">The parameter object containing the values used for initializing the configuration host.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Initializes a configuration object.</summary>
      <param name="locationSubPath">The subpath location of the configuration file.</param>
      <param name="configPath">A string representing the path of the application configuration file.</param>
      <param name="locationConfigPath">A string representing the location of a configuration path.</param>
      <param name="configRoot">The <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</param>
      <param name="hostInitConfigurationParams">The parameter object containing the values used for initializing the configuration host.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
      <summary>Returns a value indicating whether the configuration file is located at a higher level in the configuration hierarchy than the application configuration.</summary>
      <returns>true the configuration file is located at a higher level in the configuration hierarchy than the application configuration; otherwise, false.</returns>
      <param name="configPath">A string representing the path of the application configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
      <summary>Returns a value indicating whether a child record is required for a child configuration path.</summary>
      <returns>true if child record is required for a child configuration path; otherwise, false.</returns>
      <param name="configPath">A string representing the path of the application configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>Determines if a different <see cref="T:System.Type" /> definition is allowable for an application configuration object.</summary>
      <returns>true if a different <see cref="T:System.Type" /> definition is allowable for an application configuration object; otherwise, false.</returns>
      <param name="configPath">A string representing the path of the application configuration file.</param>
      <param name="allowDefinition">A <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> object.</param>
      <param name="allowExeDefinition">A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
      <summary>Returns a value indicating whether the file path used by a <see cref="T:System.IO.Stream" /> object to read a configuration file is a valid path.</summary>
      <returns>true if the path used by a <see cref="T:System.IO.Stream" /> object to read a configuration file is a valid path; otherwise, false.</returns>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> attribute to disable implicit link demands.</summary>
      <returns>true if the configuration section requires a fully trusted code access security level and does not allow the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> attribute to disable implicit link demands; otherwise, false.</returns>
      <param name="configRecord">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Returns a value indicating whether the initialization of a configuration object is considered delayed.</summary>
      <returns>true if the initialization of a configuration object is considered delayed; otherwise, false.</returns>
      <param name="configRecord">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
      <summary>Returns a value indicating whether the configuration object supports a location tag.</summary>
      <returns>true if the configuration object supports a location tag; otherwise, false.</returns>
      <param name="configPath">A string representing the path of the application configuration file.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.IsRemote">
      <summary>Returns a value indicating whether the configuration is remote.</summary>
      <returns>true if the configuration is remote; otherwise, false.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)">
      <summary>Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.</summary>
      <returns>true if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, false.</returns>
      <param name="configPath">A string representing the path of the application configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
      <summary>Returns a value indicating whether the configuration path is trusted.</summary>
      <returns>true if the configuration path is trusted; otherwise, false.</returns>
      <param name="configPath">A string representing the path of the application configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
      <summary>Opens a <see cref="T:System.IO.Stream" /> to read a configuration file.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>Opens a <see cref="T:System.IO.Stream" /> object to read a configuration file.</summary>
      <returns>Returns the <see cref="T:System.IO.Stream" /> object specified by <paramref name="streamName" />.</returns>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
      <param name="assertPermissions">true to assert permissions; otherwise, false.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>Opens a <see cref="T:System.IO.Stream" /> object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a <see cref="T:System.IO.Stream" /> object to be designated as a template for copying file attributes.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
      <param name="templateStreamName">The name of a <see cref="T:System.IO.Stream" /> object from which file attributes are to be copied as a template.</param>
      <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>Opens a <see cref="T:System.IO.Stream" /> object for writing to a configuration file. Allows a <see cref="T:System.IO.Stream" /> object to be designated as a template for copying file attributes.</summary>
      <returns>Returns the <see cref="T:System.IO.Stream" /> object specified by <paramref name="streamName" />.</returns>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
      <param name="templateStreamName">The name of a <see cref="T:System.IO.Stream" /> from which file attributes are to be copied as a template.</param>
      <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
      <param name="assertPermissions">true to assert permissions; otherwise, false.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
      <summary>Returns a value indicating whether the entire configuration file could be read by a designated <see cref="T:System.IO.Stream" /> object.</summary>
      <returns>true if the entire configuration file could be read by the <see cref="T:System.IO.Stream" /> object designated by <paramref name="streamName" />; otherwise, false.</returns>
      <param name="configPath">A string representing the path of the application configuration file.</param>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
      <summary>Instructs the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to read a designated section of its associated configuration file.</summary>
      <returns>true if a section of the configuration file designated by <paramref name="sectionGroupName" /> and <paramref name="sectionName" /> could be read by a <see cref="T:System.IO.Stream" /> object; otherwise, false.</returns>
      <param name="sectionGroupName">A string representing the identifying name of a configuration file section group.</param>
      <param name="sectionName">A string representing the identifying name of a configuration file section.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Indicates a new configuration record requires a complete initialization.</summary>
      <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Instructs the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to monitor an associated <see cref="T:System.IO.Stream" /> object for changes in a configuration file.</summary>
      <returns>An <see cref="T:System.Object" /> containing changed configuration settings.</returns>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
      <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object to receive the returned data representing the changes in the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Instructs the  <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to stop monitoring an associated <see cref="T:System.IO.Stream" /> object for changes in a configuration file.</summary>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
      <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications">
      <summary>Returns a value indicating whether the host configuration supports change notification.</summary>
      <returns>true if the configuration supports change notification; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
      <summary>Returns a value indicating whether the host configuration supports location tags.</summary>
      <returns>true if the configuration supports location tags; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
      <summary>Returns a value indicating whether the host configuration supports path tags.</summary>
      <returns>true if the configuration supports path tags; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
      <summary>Returns a value indicating whether the host configuration supports configuration refresh.</summary>
      <returns>true if the configuration supports configuration refresh; otherwise, false.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Verifies that a configuration definition is allowed for a configuration record.</summary>
      <param name="configPath">A string representing the path of the application configuration file.</param>
      <param name="allowDefinition">A <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> object.</param>
      <param name="allowExeDefinition">A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object</param>
      <param name="errorInfo">An <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>Indicates that all writing to the configuration file has completed.</summary>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
      <param name="success">true if the write to the configuration file was completed successfully; otherwise, false.</param>
      <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.</summary>
      <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
      <param name="success">true to indicate the write was completed successfully; otherwise, false.</param>
      <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
      <param name="assertPermissions">true to assert permissions; otherwise, false.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRecord">
      <summary>Defines interfaces used by internal .NET structures to support creation of new configuration records.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
      <summary>Gets a string representing a configuration file path.</summary>
      <returns>A string representing a configuration file path.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
      <summary>Returns an object representing a section of a configuration from the last-known-good (LKG) configuration.</summary>
      <returns>An <see cref="T:System.Object" /> instance representing the section of the last-known-good configuration specified by <paramref name="configKey" />.</returns>
      <param name="configKey">A string representing a key to a configuration section.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
      <summary>Returns an <see cref="T:System.Object" /> instance representing a section of a configuration file.</summary>
      <returns>An <see cref="T:System.Object" /> instance representing a section of a configuration file.</returns>
      <param name="configKey">A string representing a key to a configuration section.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
      <summary>Returns a value indicating whether an error occurred during initialization of a configuration object.</summary>
      <returns>true if an error occurred during initialization of a configuration object; otherwise, false.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
      <summary>Causes a specified section of the configuration object to be reinitialized.</summary>
      <param name="configKey">A string representing a key to a configuration section that is to be refreshed.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
      <summary>Removes a configuration record.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
      <summary>Returns the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</summary>
      <returns>A string representing the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
      <summary>Grants the configuration object the permission to throw an exception if an error occurs during initialization.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRoot">
      <summary>Defines interfaces used by internal .NET structures to support a configuration root object.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
      <summary>Represents the method that handles the <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged" /> event of an <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
      <summary>Represents the method that handles the <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved" /> event of a <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
      <summary>Returns an <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object representing a configuration specified by a configuration path.</summary>
      <returns>An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object representing a configuration specified by <paramref name="configPath" />.</returns>
      <param name="configPath">A string representing the path to a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
      <summary>Returns an <see cref="T:System.Object" /> representing the data in a section of a configuration file.</summary>
      <returns>An <see cref="T:System.Object" /> representing the data in a section of a configuration file.</returns>
      <param name="section">A string representing a section of a configuration file.</param>
      <param name="configPath">A string representing the path to a configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
      <summary>Returns a value representing the file path of the nearest configuration ancestor that has configuration data.</summary>
      <returns>Returns a string representing the file path of the nearest configuration ancestor that has configuration data.</returns>
      <param name="configPath">The path of configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
      <summary>Returns an <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object representing a unique configuration record for given configuration path.</summary>
      <returns>An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object representing a unique configuration record for a given configuration path.</returns>
      <param name="configPath">The path of the configuration file.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
      <summary>Initializes a configuration object.</summary>
      <param name="host">An <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object.</param>
      <param name="isDesignTime">true if design time; false if run time.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
      <summary>Returns a value indicating whether the configuration is a design-time configuration.</summary>
      <returns>true if the configuration is a design-time configuration; false if the configuration is not a design-time configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
      <summary>Finds and removes a configuration record and all its children for a given configuration path.</summary>
      <param name="configPath">The path of the configuration file.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
      <summary>Defines an interface used by the configuration system to set the <see cref="T:System.Configuration.ConfigurationSettings" /> class.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
      <summary>Indicates that initialization of the configuration system has completed. </summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
      <summary>Provides hierarchical configuration settings and extensions specific to ASP.NET to the configuration system. </summary>
      <param name="internalConfigSystem">An <see cref="T:System.Configuration.Internal.IInternalConfigSystem" /> object used by the <see cref="T:System.Configuration.ConfigurationSettings" /> class.</param>
      <param name="initComplete">true if the initialization process of the configuration system is complete; otherwise, false.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSystem">
      <summary>Defines an interface used by the .NET Framework to initialize application configuration properties.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.GetSection(System.String)">
      <summary>Returns the configuration object based on the specified key. </summary>
      <returns>A configuration object.</returns>
      <param name="configKey">The configuration key value.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.RefreshConfig(System.String)">
      <summary>Refreshes the configuration system based on the specified section name. </summary>
      <param name="sectionName">The name of the configuration section.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigSystem.SupportsUserConfig">
      <summary>Gets a value indicating whether the user configuration is supported. </summary>
      <returns>true if the user configuration is supported; otherwise, false.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventArgs">
      <summary>Defines a class that allows the .NET Framework infrastructure to specify event arguments for configuration events.</summary>
    </member>
    <member name="M:System.Configuration.Internal.InternalConfigEventArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> class.</summary>
      <param name="configPath">A configuration path.</param>
    </member>
    <member name="P:System.Configuration.Internal.InternalConfigEventArgs.ConfigPath">
      <summary>Gets or sets the configuration path related to the <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> object.</summary>
      <returns>A string value specifying the configuration path.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventHandler">
      <summary>Defines a class used by the .NET Framework infrastructure to support configuration events.</summary>
      <param name="sender">The source object of the event.</param>
      <param name="e">A configuration event argument.</param>
    </member>
    <member name="T:System.Configuration.Internal.StreamChangeCallback">
      <summary>Represents a method for hosts to call when a monitored stream has changed.</summary>
      <param name="streamName">The name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
    </member>
    <member name="T:System.Configuration.Provider.ProviderBase">
      <summary>Provides a base implementation for the extensible provider model.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Provider.ProviderBase" /> class. </summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Description">
      <summary>Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).</summary>
      <returns>A brief, friendly description suitable for display in administrative tools or other UIs.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the provider.</summary>
      <param name="name">The friendly name of the provider.</param>
      <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
      <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
      <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> on a provider after the provider has already been initialized.</exception>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Name">
      <summary>Gets the friendly name used to refer to the provider during configuration.</summary>
      <returns>The friendly name used to refer to the provider during configuration.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderCollection">
      <summary>Represents a collection of provider objects that inherit from <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Provider.ProviderCollection" /> class. </summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Adds a provider to the collection.</summary>
      <param name="provider">The provider to be added.</param>
      <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> of <paramref name="provider" /> is null.- or -The length of the <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> of <paramref name="provider" /> is less than 1.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Clear">
      <summary>Removes all items from the collection.</summary>
      <exception cref="T:System.NotSupportedException">The collection is set to read-only.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
      <summary>Copies the contents of the collection to the given array starting at the specified index.</summary>
      <param name="array">The array to copy the elements of the collection to.</param>
      <param name="index">The index of the collection item at which to start the copying process.</param>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Count">
      <summary>Gets the number of providers in the collection.</summary>
      <returns>The number of providers in the collection.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
      <summary>Returns an object that implements the <see cref="T:System.Collections.IEnumerator" /> interface to iterate through the collection.</summary>
      <returns>An object that implements <see cref="T:System.Collections.IEnumerator" /> to iterate through the collection.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
      <summary>Gets the provider with the specified name.</summary>
      <returns>The provider with the specified name.</returns>
      <param name="name">The key by which the provider is identified.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
      <summary>Removes a provider from the collection.</summary>
      <param name="name">The name of the provider to be removed.</param>
      <exception cref="T:System.NotSupportedException">The collection has been set to read-only.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
      <summary>Sets the collection to be read-only.</summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
      <summary>Gets the current object.</summary>
      <returns>The current object.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Configuration.Provider.ProviderCollection" /> to an array, starting at a particular array index.</summary>
      <param name="array">The array to copy the elements of the collection to.</param>
      <param name="index">The index of the array at which to start copying provider instances from the collection.</param>
    </member>
    <member name="T:System.Configuration.Provider.ProviderException">
      <summary>The exception that is thrown when a configuration provider error has occurred. This exception class is also used by providers to throw exceptions when internal errors occur within the provider that do not map to other pre-existing exception classes.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
      <param name="info">The object that holds the information to deserialize.</param>
      <param name="context">Contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
      <param name="message">A message describing why this <see cref="T:System.Configuration.Provider.ProviderException" /> was thrown.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
      <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
      <param name="message">A message describing why this <see cref="T:System.Configuration.Provider.ProviderException" /> was thrown.</param>
      <param name="innerException">The exception that caused this <see cref="T:System.Configuration.Provider.ProviderException" /> to be thrown.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Data.DataSetExtensions.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.DataSetExtensions</name>
  </assembly>
  <members>
    <member name="T:System.Data.DataRowComparer">
      <summary>Returns a singleton instance of the <see cref="T:System.Data.DataRowComparer`1" /> class.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary>Gets a singleton instance of <see cref="T:System.Data.DataRowComparer`1" />. This property is read-only.</summary>
      <returns>An instance of a <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary>Compares two <see cref="T:System.Data.DataRow" /> objects for equivalence by using value-based comparison.</summary>
      <typeparam name="TRow">The type of objects to be compared, typically <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary>Gets a singleton instance of <see cref="T:System.Data.DataRowComparer`1" />. This property is read-only.</summary>
      <returns>An instance of a <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary>Compares two <see cref="T:System.Data.DataRow" /> objects by using a column-by-column, value-based comparison.</summary>
      <returns>true if the two <see cref="T:System.Data.DataRow" /> objects have ordered sets of column values that are equal; otherwise, false.</returns>
      <param name="leftRow">The first <see cref="T:System.Data.DataRow" /> object to compare.</param>
      <param name="rightRow">The second <see cref="T:System.Data.DataRow" /> object to compare.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the source <see cref="T:System.Data.DataRow" /> objects are null.</exception>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary>Returns a hash code for the specified <see cref="T:System.Data.DataRow" /> object.</summary>
      <returns>An <see cref="T:System.Int32" /> value representing the hash code of the row.</returns>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to compute the hash code from.</param>
      <exception cref="T:System.ArgumentException">The source <see cref="T:System.Data.DataRow" /> objects does not belong to a <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Data.DataRow" /> objects is null.</exception>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary>Defines the extension methods to the <see cref="T:System.Data.DataRow" /> class. This is a static class.   </summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> method also supports nullable types. </summary>
      <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="column" />.</returns>
      <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the this instance for the extension method.</param>
      <param name="column">The input <see cref="T:System.Data.DataColumn" /> object that specifies the column to return the value of.</param>
      <typeparam name="T">A generic parameter that specifies the return type of the column.</typeparam>
      <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="column" /> does not occur in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
      <exception cref="T:System.NullReferenceException">A null value was assigned to a non-nullable type.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> method also supports nullable types. </summary>
      <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="column" /> and <paramref name="version" />.</returns>
      <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the this instance for the extension method.</param>
      <param name="column">The input <see cref="T:System.Data.DataColumn" /> object that specifies the column to return the value of.</param>
      <param name="version">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as Current or Original version.</param>
      <typeparam name="T">A generic parameter that specifies the return type of the column.</typeparam>
      <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="column" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
      <exception cref="T:System.NullReferenceException">A null value was assigned to a non-nullable type.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> method also supports nullable types. </summary>
      <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnIndex" />.</returns>
      <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the this instance for the extension method.</param>
      <param name="columnIndex">The column index.</param>
      <typeparam name="T">A generic parameter that specifies the return type of the column.</typeparam>
      <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="ordinal" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
      <exception cref="T:System.NullReferenceException">A null value was assigned to a non-nullable type.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> method also supports nullable types. </summary>
      <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="ordinal" /> and <paramref name="version" />.</returns>
      <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the this instance for the extension method.</param>
      <param name="columnIndex">The zero-based ordinal of the column to return the value of.</param>
      <param name="version">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as Current or Original version.</param>
      <typeparam name="T">A generic parameter that specifies the return type of the column.</typeparam>
      <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="ordinal" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
      <exception cref="T:System.NullReferenceException">A null value was assigned to a non-nullable type.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> method also supports nullable types. </summary>
      <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnName" />.</returns>
      <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the this instance for the extension method.</param>
      <param name="columnName">The name of the column to return the value of.</param>
      <typeparam name="T">A generic parameter that specifies the return type of the column.</typeparam>
      <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="columnName" /> does not occur in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
      <exception cref="T:System.NullReferenceException">A null value was assigned to a non-nullable type.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> method also supports nullable types. </summary>
      <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnName" /> and <paramref name="version" />.</returns>
      <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the this instance for the extension method.</param>
      <param name="columnName">The name of the column to return the value of.</param>
      <param name="version">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as Current or Original version.</param>
      <typeparam name="T">A generic parameter that specifies the return type of the column.</typeparam>
      <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="columnName" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
      <exception cref="T:System.NullReferenceException">A null value was assigned to a non-nullable type.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary>Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />. The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> method also supports nullable types. </summary>
      <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the this instance for the extension method.</param>
      <param name="column">The input <see cref="T:System.Data.DataColumn" /> specifies which row value to retrieve.</param>
      <param name="value">The new row value for the specified column, of type <paramref name="T" />.</param>
      <typeparam name="T">A generic parameter that specifies the value type of the column.</typeparam>
      <exception cref="T:System.ArgumentException">The column specified by <paramref name="column" /> cannot be found.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="column" /> is null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Occurs when attempting to set a value on a deleted row.</exception>
      <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary>Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" /> the method is called on. The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> method also supports nullable types. </summary>
      <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the this instance for the extension method.</param>
      <param name="columnIndex">The zero-based ordinal of the column to set the value of.</param>
      <param name="value">The new row value for the specified column, of type <paramref name="T" />.</param>
      <typeparam name="T">A generic parameter that specifies the value type of the column.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Occurs when attempting to set a value on a deleted row.</exception>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> argument is out of range.</exception>
      <exception cref="T:System.InvalidCastException">The value type of the underlying column could be not cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary>Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />. The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> method also supports nullable types. </summary>
      <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the this instance for the extension method.</param>
      <param name="columnName">The name of the column to set the value of.</param>
      <param name="value">The new row value for the specified column, of type <paramref name="T" />.</param>
      <typeparam name="T">A generic parameter that specifies the value type of the column.</typeparam>
      <exception cref="T:System.ArgumentException">The column specified by <paramref name="columnName" /> cannot be found.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Occurs when attempting to set a value on a deleted row.</exception>
      <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary>Defines the extension methods to the <see cref="T:System.Data.DataTable" /> class. <see cref="T:System.Data.DataTableExtensions" /> is a static class.  </summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary>Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object.</summary>
      <returns>A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</returns>
      <param name="table">The source <see cref="T:System.Data.DataTable" /> from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</param>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary>Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object representing the LINQ to DataSet query.</summary>
      <returns>A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</returns>
      <param name="source">The source LINQ to DataSet query from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</param>
      <typeparam name="T">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />. This object can be used in a LINQ expression or method query.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</returns>
      <param name="source">The source <see cref="T:System.Data.DataTable" /> to make enumerable.</param>
      <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Data.DataTable" /> is null.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that contains copies of the <see cref="T:System.Data.DataRow" /> objects, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />. </summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains the input sequence as the type of <see cref="T:System.Data.DataRow" /> objects.</returns>
      <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</param>
      <typeparam name="T">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is null and a new table cannot be created.</exception>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.A <see cref="T:System.Data.DataRow" /> in the source sequence is null.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary>Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</param>
      <param name="table">The destination <see cref="T:System.Data.DataTable" />.</param>
      <param name="options">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</param>
      <typeparam name="T">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is null or the destination <see cref="T:System.Data.DataTable" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.A <see cref="T:System.Data.DataRow" /> in the source sequence is null.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</param>
      <param name="table">The destination <see cref="T:System.Data.DataTable" />.</param>
      <param name="options">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</param>
      <param name="errorHandler">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate that represents the method that will handle an error.</param>
      <typeparam name="T">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is null or the destination <see cref="T:System.Data.DataTable" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.-or-The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.-or-A <see cref="T:System.Data.DataRow" /> in the source sequence is null.</exception>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary>Represents a collection of <see cref="T:System.Data.DataRow" /> objects returned from a LINQ to DataSet query. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator for the collection of <see cref="T:System.Data.DataRow" /> objects. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to traverse the collection of <see cref="T:System.Data.DataRow" /> objects.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary>Represents a collection of <see cref="T:System.Data.DataRow" /> objects returned from a query. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <typeparam name="TRow">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary>Returns an enumerator for the collection of contained row objects. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>A strongly-typed <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to traverse the collection of <paramref name="TRow" /> objects. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator for the collection of <see cref="T:System.Data.DataRow" /> objects. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to traverse the collection of <see cref="T:System.Data.DataRow" /> objects. </returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary>Contains the extension methods for the data row collection classes. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary>Converts the elements of an <see cref="T:System.Data.EnumerableRowCollection" /> to the specified type. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Data.EnumerableRowCollection" /> that contains each element of the source sequence converted to the specified type.</returns>
      <param name="source">The <see cref="T:System.Data.EnumerableRowCollection" /> that contains the elements to be converted.</param>
      <typeparam name="TResult">The type to convert the elements of source to.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">An element in the sequence cannot be cast to type <paramref name="TResult" />.</exception>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key. </returns>
      <param name="source">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered. </param>
      <param name="keySelector">A function to extract a key from an element.</param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</returns>
      <param name="source">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered. </param>
      <param name="keySelector">A function to extract a key from an element. </param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys. </param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key. </returns>
      <param name="source">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered. </param>
      <param name="keySelector">A function to extract a key from an element. </param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer. </returns>
      <param name="source">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered. </param>
      <param name="keySelector">A function to extract a key from an element.  </param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys. </param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Projects each element of an <see cref="T:System.Data.EnumerableRowCollection`1" /> into a new form. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Data.EnumerableRowCollection`1" /> whose elements are the result of invoking the transform function on each element of <paramref name="source" />. </returns>
      <param name="source">An <see cref="T:System.Data.EnumerableRowCollection`1" /> containing the <see cref="T:System.Data.DataRow" /> elements to invoke a transform function upon. </param>
      <param name="selector">A transform function to apply to each element. </param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S">The type that <paramref name="TRow" /> will be transformed into.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key. </returns>
      <param name="source">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.  </param>
      <param name="keySelector">A function to extract a key from an element. </param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</returns>
      <param name="source">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered. </param>
      <param name="keySelector">A function to extract a key from an element. </param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys. </param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key. </returns>
      <param name="source">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.  </param>
      <param name="keySelector">A function to extract a key from an element. </param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer. </returns>
      <param name="source">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.  </param>
      <param name="keySelector">A function to extract a key from an element. </param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys. </param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary>Filters a sequence of rows based on the specified predicate. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> that contains rows from the input sequence that satisfy the condition.</returns>
      <param name="source">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to filter.  </param>
      <param name="predicate">A function to test each element for a condition. </param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code. Represents a collection of ordered <see cref="T:System.Data.DataRow" /> objects returned from a query.</summary>
      <typeparam name="TRow">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary>This type is used as a base class for typed-<see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool, and is not intended to be used directly from your code. </summary>
      <typeparam name="T">The type of objects in the source sequence represented by the table, typically <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary>Initializes a new <see cref="T:System.Data.TypedTableBase'1" />. This method supports typed-<see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool. This type is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new <see cref="T:System.Data.TypedTableBase'1" />. This method supports typed-<see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains data to construct the object.</param>
      <param name="context">The streaming context for the object being deserializad.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary>Converts the elements of an <see cref="T:System.Data.TypedTableBase'1" /> to the specified type. This method supports typed <see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Data.EnumerableRowCollection" /> that contains each element of the source sequence converted to the specified type.</returns>
      <typeparam name="TResult"></typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary>Returns an enumerator for the typed-<see cref="T:System.Data.DataRow" />. This method supports typed-<see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code. </summary>
      <returns>An object that implements the <see cref="T:System.Collections.Generic.IEnumerator`1" /> interface.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator for the typed-<see cref="T:System.Data.DataRow" />. This method supports typed-<see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.Generic.IEnumerator`1" /> interface.</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary>Contains the extension methods for the <see cref="T:System.Data.TypedTableBase`1" /> class. </summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary>Enumerates the data row elements of the <see cref="T:System.Data.TypedTableBase`1" /> and returns an <see cref="T:System.Data.EnumerableRowCollection`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />. This object can be used in a LINQ expression or method query. </summary>
      <returns>An <see cref="T:System.Data.EnumerableRowCollection`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</returns>
      <param name="source">The source <see cref="T:System.Data.TypedTableBase`1" /> to make enumerable.</param>
      <typeparam name="TRow">The type to convert the elements of the source to.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Sorts the rows of a <see cref="T:System.Data.TypedTableBase`1" /> in ascending order according to the specified key.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</returns>
      <param name="source">A <see cref="T:System.Data.TypedTableBase`1" /> that contains the <see cref="T:System.Data.DataRow" /> elements to be ordered.</param>
      <param name="keySelector">A function to extract a key from an element.</param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Sorts the rows of a <see cref="T:System.Data.TypedTableBase`1" /> in ascending order according to the specified key and comparer.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</returns>
      <param name="source">A <see cref="T:System.Data.TypedTableBase`1" /> that contains the <see cref="T:System.Data.DataRow" /> elements to be ordered.</param>
      <param name="keySelector">A function to extract a key from an element.</param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Sorts the rows of a <see cref="T:System.Data.TypedTableBase`1" /> in descending order according to the specified key.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</returns>
      <param name="source">A <see cref="T:System.Data.TypedTableBase`1" /> that contains the <see cref="T:System.Data.DataRow" /> elements to be ordered. </param>
      <param name="keySelector">A function to extract a key from an element. </param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Sorts the rows of a <see cref="T:System.Data.TypedTableBase`1" /> in descending order according to the specified key and comparer.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</returns>
      <param name="source">A <see cref="T:System.Data.TypedTableBase`1" /> that contains the <see cref="T:System.Data.DataRow" /> elements to be ordered. </param>
      <param name="keySelector">A function to extract a key from an element.  </param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys. </param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />. </typeparam>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Projects each element of a <see cref="T:System.Data.TypedTableBase`1" /> into a new form.</summary>
      <returns>An <see cref="T:System.Data.EnumerableRowCollection`1" /> whose elements are the result of invoking the transformation function on each element of <paramref name="source" />.</returns>
      <param name="source">A <see cref="T:System.Data.TypedTableBase`1" /> that contains the <see cref="T:System.Data.DataRow" /> elements to invoke a transformation function upon.</param>
      <param name="selector">A transformation function to apply to each element.</param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S"></typeparam>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary>Filters a sequence of rows based on the specified predicate.</summary>
      <returns>An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> that contains rows from the input sequence that satisfy the condition.</returns>
      <param name="source">A <see cref="T:System.Data.TypedTableBase`1" /> that contains the <see cref="T:System.Data.DataRow" /> elements to filter.  </param>
      <param name="predicate">A function to test each element for a condition.</param>
      <typeparam name="TRow">The type of the row elements in <paramref name="source" />, <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\PresentationFramework.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.CommonDialog">
      <summary>An abstract base class for displaying common Win32 dialogs.</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.#ctor">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog">
      <summary>Determines whether sufficient permissions for displaying a dialog exist.</summary>
      <exception cref="T:System.Security.SecurityException">if sufficient permissions do not exist to display a dialog.</exception>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.</summary>
      <returns>Always returns <see cref="F:System.IntPtr.Zero" />.</returns>
      <param name="hwnd">Window handle for the Win32 dialog.</param>
      <param name="msg">Windows message to be processed by the Win32 dialog.</param>
      <param name="wParam">Parameters for dialog actions.</param>
      <param name="lParam">Parameters for dialog actions.</param>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.Reset">
      <summary>When overridden in a derived class, resets the properties of a common dialog to their default values.</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)">
      <summary>When overridden in a derived class, is called to display a particular type of Win32 common dialog.</summary>
      <returns>If the user clicks the OK button of the dialog that is displayed (e.g. <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />), true is returned; otherwise, false.</returns>
      <param name="hwndOwner">Handle to the window that owns the dialog box. </param>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.ShowDialog">
      <summary>Displays a common dialog.</summary>
      <returns>If the user clicks the OK button of the dialog that is displayed (e.g. <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />), true is returned; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)">
      <summary>Displays a common dialog.</summary>
      <returns>If the user clicks the OK button of the dialog that is displayed (e.g. <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />), true is returned; otherwise, false.</returns>
      <param name="owner">Handle to the window that owns the dialog. </param>
    </member>
    <member name="P:Microsoft.Win32.CommonDialog.Tag">
      <summary>Gets or sets an object associated with the dialog. This provides the ability to attach an arbitrary object to the dialog.</summary>
      <returns>A <see cref="T:System.Object" /> that is attached or associated with a dialog.</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialog">
      <summary>An abstract base class that encapsulates functionality that is common to file dialogs, including <see cref="T:Microsoft.Win32.OpenFileDialog" /> and <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.FileDialog" /> class.</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.AddExtension">
      <summary>Gets or sets a value indicating whether a file dialog automatically adds an extension to a file name if the user omits an extension.</summary>
      <returns>true if extensions are added; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CheckFileExists">
      <summary>Gets or sets a value indicating whether a file dialog displays a warning if the user specifies a file name that does not exist.</summary>
      <returns>true if warnings are displayed; otherwise, false. The default in this base class is false.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CheckPathExists">
      <summary>Gets or sets a value that specifies whether warnings are displayed if the user types invalid paths and file names.</summary>
      <returns>true if warnings are displayed; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CustomPlaces">
      <summary>Gets or sets the list of custom places for file dialog boxes. </summary>
      <returns>The list of custom places.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.DefaultExt">
      <summary>Gets or sets a value that specifies the default extension string to use to filter the list of files that are displayed.</summary>
      <returns>The default extension string. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.DereferenceLinks">
      <summary>Gets or sets a value indicating whether a file dialog returns either the location of the file referenced by a shortcut or the location of the shortcut file (.lnk).</summary>
      <returns>true to return the location referenced; false to return the shortcut location. The default is false.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FileName">
      <summary>Gets or sets a string containing the full path of the file selected in a file dialog.</summary>
      <returns>A <see cref="T:System.String" /> that is the full path of the file selected in the file dialog. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FileNames">
      <summary>Gets an array that contains one file name for each selected file.</summary>
      <returns>An array of <see cref="T:System.String" /> that contains one file name for each selected file. The default is an array with a single item whose value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="E:Microsoft.Win32.FileDialog.FileOk">
      <summary>Occurs when the user selects a file name by either clicking the Open button of the <see cref="T:Microsoft.Win32.OpenFileDialog" /> or the Save button of the <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Filter">
      <summary>Gets or sets the filter string that determines what types of files are displayed from either the <see cref="T:Microsoft.Win32.OpenFileDialog" /> or <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the filter. The default is <see cref="F:System.String.Empty" />, which means that no filter is applied and all file types are displayed.</returns>
      <exception cref="T:System.ArgumentException">The filter string is invalid.</exception>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FilterIndex">
      <summary>Gets or sets the index of the filter currently selected in a file dialog.</summary>
      <returns>The <see cref="T:System.Int32" /> that is the index of the selected filter. The default is 1.</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>Defines the common file dialog hook procedure that is overridden to add common functionality to a file dialog.</summary>
      <returns>Returns <see cref="F:System.IntPtr.Zero" /> to indicate success; otherwise, a non-zero value is returned to indicate failure.</returns>
      <param name="hwnd">Window handle for the Win32 dialog.</param>
      <param name="msg">Message to be processed by the Win32 dialog.</param>
      <param name="wParam">Parameters for dialog actions.</param>
      <param name="lParam">Parameters for dialog actions.</param>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.InitialDirectory">
      <summary>Gets or sets the initial directory that is displayed by a file dialog.</summary>
      <returns>A <see cref="T:System.String" /> that contains the initial directory. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:Microsoft.Win32.FileDialog.FileOk" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Options">
      <summary>Gets the Win32 common file dialog flags that are used by file dialogs for initialization.</summary>
      <returns>A <see cref="T:System.Int32" /> that contains the Win32 common file dialog flags that are used by file dialogs for initialization.</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.Reset">
      <summary>Sets all properties of a file dialog back to their initial values.</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.RestoreDirectory">
      <summary>This property is not implemented.</summary>
      <returns>Not implemented.</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)">
      <summary>
        <see cref="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)" /> is called to display a file dialog in a derived class, such as <see cref="T:Microsoft.Win32.OpenFileDialog" /> and <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
      <returns>true if the user clicks the OK button of the dialog that is displayed (for example, <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />); otherwise, false.</returns>
      <param name="hwndOwner">Handle to the window that owns the dialog. </param>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.SafeFileName">
      <summary>Gets a string that only contains the file name for the selected file.</summary>
      <returns>A <see cref="T:System.String" /> that only contains the file name for the selected file. The default is <see cref="F:System.String.Empty" />, which is also the value when either no file is selected or a directory is selected.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.SafeFileNames">
      <summary>Gets an array that contains one safe file name for each selected file.</summary>
      <returns>An array of <see cref="T:System.String" /> that contains one safe file name for each selected file. The default is an array with a single item whose value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Title">
      <summary>Gets or sets the text that appears in the title bar of a file dialog.</summary>
      <returns>A <see cref="T:System.String" /> that is the text that appears in the title bar of a file dialog. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.ToString">
      <summary>Returns a string that represents a file dialog.</summary>
      <returns>A <see cref="T:System.String" /> representation of <see cref="T:Microsoft.Win32.FileDialog" /> that contains the full pathname for any files selected from either <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.ValidateNames">
      <summary>Gets or sets a value indicating whether the dialog accepts only valid Win32 file names.</summary>
      <returns>true if warnings will be shown when an invalid file name is provided; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialogCustomPlace">
      <summary>Represents an entry in a <see cref="T:Microsoft.Win32.FileDialog" /> custom place list.</summary>
    </member>
    <member name="M:Microsoft.Win32.FileDialogCustomPlace.#ctor(System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.FileDialogCustomPlace" /> class with the specified known folder GUID. </summary>
      <param name="knownFolder">The GUID of a known folder.</param>
    </member>
    <member name="M:Microsoft.Win32.FileDialogCustomPlace.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.FileDialogCustomPlace" /> class with the specified path. </summary>
      <param name="path">The path for the folder.</param>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlace.KnownFolder">
      <summary>Gets the GUID of the known folder for the custom place.</summary>
      <returns>The GUID of a known folder.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlace.Path">
      <summary>Gets the file path for the custom place.</summary>
      <returns>The path for a custom place.</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialogCustomPlaces">
      <summary>Defines the known folders for custom places in file dialog boxes.</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Contacts">
      <summary>Gets the Contacts folder for the current user.</summary>
      <returns>The Contacts folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Cookies">
      <summary>Gets the Internet cookies folder for the current user.</summary>
      <returns>The Internet cookies folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Desktop">
      <summary>Gets the folder for storing files on the desktop for the current user.</summary>
      <returns>The folder for storing files on the desktop for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Documents">
      <summary>Gets the Documents folder for the current user.</summary>
      <returns>The Documents folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Favorites">
      <summary>Gets the Favorites folder for the current user.</summary>
      <returns>The  Favorites folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.LocalApplicationData">
      <summary>Gets the folder for application-specific data that is used by the current, non-roaming user.</summary>
      <returns>The folder for application-specific data that is used by the current, non-roaming user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Music">
      <summary>Gets the Music folder for the current user.</summary>
      <returns>The Music folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Pictures">
      <summary>Gets the Pictures folder for the current user.</summary>
      <returns>The Pictures folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.ProgramFiles">
      <summary>Gets the Program Files folder.</summary>
      <returns>The Program Files folder.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.ProgramFilesCommon">
      <summary>Gets the folder for components that are shared across applications.</summary>
      <returns>The folder for components that are shared across applications.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Programs">
      <summary>Gets the folder that contains the program groups for the current user.</summary>
      <returns>The folder that contains the program groups for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.RoamingApplicationData">
      <summary>Gets the folder for application-specific data for the current roaming user.</summary>
      <returns>The folder for application-specific data for the current roaming user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.SendTo">
      <summary>Gets the folder that contains the Send To menu items for the current user.</summary>
      <returns>The folder that contains the Send To menu items for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.StartMenu">
      <summary>Gets the folder that contains the Start menu items for the current user.</summary>
      <returns>The folder that contains the Start menu items for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Startup">
      <summary>Gets the folder that corresponds to the Startup program group for the current user.</summary>
      <returns>The folder that corresponds to the Startup program group for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.System">
      <summary>Gets the System folder.</summary>
      <returns>The System folder.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Templates">
      <summary>Gets the folder for document templates for the current user.</summary>
      <returns>The folder for document templates for the current user.</returns>
    </member>
    <member name="T:Microsoft.Win32.OpenFileDialog">
      <summary>Represents a common dialog box that allows a user to specify a filename for one or more files to open.</summary>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.OpenFileDialog" /> class.</summary>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.Multiselect">
      <summary>Gets or sets an option indicating whether <see cref="T:Microsoft.Win32.OpenFileDialog" /> allows users to select multiple files.</summary>
      <returns>true if multiple selections are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.OpenFile">
      <summary>Opens a read-only stream for the file that is selected by the user using <see cref="T:Microsoft.Win32.OpenFileDialog" />.</summary>
      <returns>A new <see cref="T:System.IO.Stream" /> that contains the selected file.</returns>
      <exception cref="T:System.InvalidOperationException">No files were selected in the dialog.</exception>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.OpenFiles">
      <summary>Creates an array that contains one read-only stream for each file selected by the user using <see cref="T:Microsoft.Win32.OpenFileDialog" />.</summary>
      <returns>An array of multiple new <see cref="T:System.IO.Stream" /> objects that contain the selected files.</returns>
      <exception cref="T:System.InvalidOperationException">No files were selected in the dialog.</exception>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.ReadOnlyChecked">
      <summary>Gets or sets a value indicating whether the read-only check box displayed by <see cref="T:Microsoft.Win32.OpenFileDialog" /> is selected.</summary>
      <returns>true if the checkbox is selected; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.Reset">
      <summary>Resets all <see cref="T:Microsoft.Win32.OpenFileDialog" /> properties to their default values.</summary>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.ShowReadOnly">
      <summary>Gets or sets a value indicating whether <see cref="T:Microsoft.Win32.OpenFileDialog" /> contains a read-only check box.</summary>
      <returns>true if the checkbox is displayed; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:Microsoft.Win32.SaveFileDialog">
      <summary>Represents a common dialog that allows the user to specify a filename to save a file as. <see cref="T:Microsoft.Win32.SaveFileDialog" /> cannot be used by an application that is executing under partial trust.</summary>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SaveFileDialog" /> class.</summary>
    </member>
    <member name="P:Microsoft.Win32.SaveFileDialog.CreatePrompt">
      <summary>Gets or sets a value indicating whether <see cref="T:Microsoft.Win32.SaveFileDialog" /> prompts the user for permission to create a file if the user specifies a file that does not exist.</summary>
      <returns>true if dialog should prompt prior to saving to a filename that did not previously exist; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.OpenFile">
      <summary>Creates a read-write file stream for the filename selected by the user using <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
      <returns>A new <see cref="T:System.IO.Stream" /> that contains the selected file.</returns>
      <exception cref="T:System.InvalidOperationException">No files were selected in the dialog.</exception>
    </member>
    <member name="P:Microsoft.Win32.SaveFileDialog.OverwritePrompt">
      <summary>Gets or sets a value indicating whether <see cref="T:Microsoft.Win32.SaveFileDialog" /> displays a warning if the user specifies the name of a file that already exists.</summary>
      <returns>true if dialog should prompt prior to saving over a filename that previously existed; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.Reset">
      <summary>Resets all <see cref="T:Microsoft.Win32.SaveFileDialog" /> properties to their default values.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerProperties">
      <summary>Provides attached properties used to communicate with a designer.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> attached property for the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> property value for the element.</returns>
      <param name="element">The element from which the property value is read.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.IsInDesignMode">
      <summary>Gets or sets whether a <see cref="T:System.Windows.DependencyObject" /> is running in the context of a designer.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether a <see cref="T:System.Windows.DependencyObject" /> is running in the context of a designer.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
      <summary>Identifies the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> attached property.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> attached property to a specified element. </summary>
      <param name="element">The element to which the attached property is written.</param>
      <param name="value">The needed <see cref="T:System.Boolean" /> value.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Application">
      <summary>Encapsulates a Windows Presentation Foundation (WPF) application. </summary>
    </member>
    <member name="M:System.Windows.Application.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Application" /> class.</summary>
      <exception cref="T:System.InvalidOperationException">More than one instance of the <see cref="T:System.Windows.Application" /> class is created per <see cref="T:System.AppDomain" />.</exception>
    </member>
    <member name="E:System.Windows.Application.Activated">
      <summary>Occurs when an application becomes the foreground application.</summary>
    </member>
    <member name="P:System.Windows.Application.Current">
      <summary>Gets the <see cref="T:System.Windows.Application" /> object for the current <see cref="T:System.AppDomain" />.</summary>
      <returns>The <see cref="T:System.Windows.Application" /> object for the current <see cref="T:System.AppDomain" />.</returns>
    </member>
    <member name="E:System.Windows.Application.Deactivated">
      <summary>Occurs when an application stops being the foreground application.</summary>
    </member>
    <member name="E:System.Windows.Application.DispatcherUnhandledException">
      <summary>Occurs when an exception is thrown by an application but not handled.</summary>
    </member>
    <member name="E:System.Windows.Application.Exit">
      <summary>Occurs just before an application shuts down, and cannot be canceled.</summary>
    </member>
    <member name="M:System.Windows.Application.FindResource(System.Object)">
      <summary>Searches for a user interface (UI) resource, such as a <see cref="T:System.Windows.Style" /> or <see cref="T:System.Windows.Media.Brush" />, with the specified key, and throws an exception if the requested resource is not found (see Resources Overview).</summary>
      <returns>The requested resource object. If the requested resource is not found, a <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> is thrown.</returns>
      <param name="resourceKey">The name of the resource to find.</param>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">The resource cannot be found.</exception>
    </member>
    <member name="E:System.Windows.Application.FragmentNavigation">
      <summary>Occurs when a navigator in the application begins navigation to a content fragment, Navigation occurs immediately if the desired fragment is in the current content, or after the source XAML content has been loaded if the desired fragment is in different content.</summary>
    </member>
    <member name="M:System.Windows.Application.GetContentStream(System.Uri)">
      <summary>Returns a resource stream for a content data file that is located at the specified <see cref="T:System.Uri" /> (see WPF Application Resource, Content, and Data Files).</summary>
      <returns>A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a content data file that is located at the specified <see cref="T:System.Uri" />. If a loose resource is not found, null is returned.</returns>
      <param name="uriContent">The relative <see cref="T:System.Uri" /> that maps to a loose resource.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Uri.OriginalString" /> property of the <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> is an absolute <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.Windows.Application.GetCookie(System.Uri)">
      <summary>Retrieves a cookie for the location specified by a <see cref="T:System.Uri" />.</summary>
      <returns>A <see cref="T:System.String" /> value, if the cookie exists; otherwise, a <see cref="T:System.ComponentModel.Win32Exception" /> is thrown.</returns>
      <param name="uri">The <see cref="T:System.Uri" /> that specifies the location for which a cookie was created.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">A Win32 error is raised by the InternetGetCookie function (called by <see cref="M:System.Windows.Application.GetCookie(System.Uri)" />) if a problem occurs when attempting to retrieve the specified cookie.</exception>
    </member>
    <member name="M:System.Windows.Application.GetRemoteStream(System.Uri)">
      <summary>Returns a resource stream for a site-of-origin data file that is located at the specified <see cref="T:System.Uri" /> (see WPF Application Resource, Content, and Data Files).</summary>
      <returns>A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a resource stream for a site-of-origin data file that is located at the specified <see cref="T:System.Uri" />. If the loose resource is not found, null is returned.</returns>
      <param name="uriRemote">The <see cref="T:System.Uri" /> that maps to a loose resource at the site of origin.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Uri.OriginalString" /> property of the <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> is either not relative, or is absolute but not in the pack://siteoforigin:,,,/ form.</exception>
    </member>
    <member name="M:System.Windows.Application.GetResourceStream(System.Uri)">
      <summary>Returns a resource stream for a resource data file that is located at the specified <see cref="T:System.Uri" /> (see WPF Application Resource, Content, and Data Files).</summary>
      <returns>A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a resource stream for resource data file that is located at the specified <see cref="T:System.Uri" />. If the resource located at the specified <see cref="T:System.Uri" /> is not found, null is returned.</returns>
      <param name="uriResource">The <see cref="T:System.Uri" /> that maps to an embedded resource.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Uri.OriginalString" /> property of the <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> is either not relative, or is absolute but not in the pack://application:,,,/ form.</exception>
    </member>
    <member name="E:System.Windows.Application.LoadCompleted">
      <summary>Occurs when content that was navigated to by a navigator in the application has been loaded, parsed, and has begun rendering.</summary>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
      <summary>Loads a XAML file that is located at the specified uniform resource identifier (URI) and converts it to an instance of the object that is specified by the root element of the XAML file.</summary>
      <param name="component">An object of the same type as the root element of the XAML file.</param>
      <param name="resourceLocator">A <see cref="T:System.Uri" /> that maps to a relative XAML file.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceLocator" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Uri.OriginalString" /> property of the <paramref name="resourceLocator" /><see cref="T:System.Uri" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="resourceLocator" /> is an absolute URI.</exception>
      <exception cref="T:System.Exception">
        <paramref name="component" /> is of a type that does not match the root element of the XAML file.</exception>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Uri)">
      <summary>Loads a XAML file that is located at the specified uniform resource identifier (URI), and converts it to an instance of the object that is specified by the root element of the XAML file.</summary>
      <returns>An instance of the root element specified by the XAML file loaded. </returns>
      <param name="resourceLocator">A <see cref="T:System.Uri" /> that maps to a relative XAML file.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceLocator" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Uri.OriginalString" /> property of the <paramref name="resourceLocator" /><see cref="T:System.Uri" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="resourceLocator" /> is an absolute URI.</exception>
      <exception cref="T:System.Exception">The file is not a XAML file.</exception>
    </member>
    <member name="P:System.Windows.Application.MainWindow">
      <summary>Gets or sets the main window of the application.</summary>
      <returns>A <see cref="T:System.Windows.Window" /> that is designated as the main application window.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Application.MainWindow" /> is set from an application that's hosted in a browser, such as an XAML browser applications (XBAPs).</exception>
    </member>
    <member name="E:System.Windows.Application.Navigated">
      <summary>Occurs when the content that is being navigated to by a navigator in the application has been found, although it may not have completed loading.</summary>
    </member>
    <member name="E:System.Windows.Application.Navigating">
      <summary>Occurs when a new navigation is requested by a navigator in the application.</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationFailed">
      <summary>Occurs when an error occurs while a navigator in the application is navigating to the requested content.</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationProgress">
      <summary>Occurs periodically during a download that is being managed by a navigator in the application to provide navigation progress information.</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationStopped">
      <summary>Occurs when the StopLoading method of a navigator in the application is called, or when a new navigation is requested by a navigator while a current navigation is in progress.</summary>
    </member>
    <member name="M:System.Windows.Application.OnActivated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.Activated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.Deactivated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.Exit" /> event.</summary>
      <param name="e">An <see cref="T:System.Windows.ExitEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.FragmentNavigation" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.LoadCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windo